/// <reference path="puerts.d.ts" />
declare module "ue" {
    import {$Ref, $Nullable} from "puerts"

    import * as cpp from "cpp"

    import * as UE from "ue"

    class A2Pose {
        constructor();
        constructor(Bones: TArray<UE.Transform>);
        Bones: TArray<UE.Transform>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_A2Pose_0__: boolean;
    }
    
    class A2CSPose extends UE.A2Pose {
        constructor();
        constructor(ComponentSpaceFlags: TArray<number>);
        ComponentSpaceFlags: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_A2CSPose_0__: boolean;
    }
    
    class Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreateDefaultSubobject(p0: string, p1: Class, p2: Class, p3: boolean, p4: boolean) : Object;
        ExecuteUbergraph(EntryPoint: number) : void;
        GetClass() : Class;
        GetName() : string;
        GetOuter() : Object;
        GetWorld() : World;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Object;
        static Load(InName: string): Object;
    
        __tid_Object_0__: boolean;
    }
    
    class AssetImportInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetImportInfo_0__: boolean;
    }
    
    class AssetImportData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceFilePath: string;
        SourceFileTimestamp: string;
        SourceData: UE.AssetImportInfo;
        K2_ExtractFilenames() : TArray<string>;
        K2_GetFirstFilename() : string;
        ScriptedAddFilename(InPath: string, Index: number, SourceFileLabel: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetImportData;
        static Load(InName: string): AssetImportData;
    
        __tid_AssetImportData_0__: boolean;
    }
    
    enum EAlembicSamplingType { PerFrame, PerXFrames, PerTimeStep, EAlembicSamplingType_MAX, __typeKeyDoNoAccess}
    class AbcSamplingSettings {
        constructor();
        constructor(SamplingType: UE.EAlembicSamplingType, FrameSteps: number, TimeSteps: number, FrameStart: number, FrameEnd: number, bSkipEmpty: boolean);
        SamplingType: UE.EAlembicSamplingType;
        FrameSteps: number;
        TimeSteps: number;
        FrameStart: number;
        FrameEnd: number;
        bSkipEmpty: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AbcSamplingSettings_0__: boolean;
    }
    
    class AbcAssetImportData extends UE.AssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TrackNames: TArray<string>;
        SamplingSettings: UE.AbcSamplingSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AbcAssetImportData;
        static Load(InName: string): AbcAssetImportData;
    
        __tid_AbcAssetImportData_0__: boolean;
    }
    
    enum EBaseCalculationType { None, PercentageBased, FixedNumber, NoCompression, EBaseCalculationType_MAX, __typeKeyDoNoAccess}
    class AbcCompressionSettings {
        constructor();
        constructor(bMergeMeshes: boolean, bBakeMatrixAnimation: boolean, BaseCalculationType: UE.EBaseCalculationType, PercentageOfTotalBases: number, MaxNumberOfBases: number, MinimumNumberOfVertexInfluencePercentage: number);
        bMergeMeshes: boolean;
        bBakeMatrixAnimation: boolean;
        BaseCalculationType: UE.EBaseCalculationType;
        PercentageOfTotalBases: number;
        MaxNumberOfBases: number;
        MinimumNumberOfVertexInfluencePercentage: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AbcCompressionSettings_0__: boolean;
    }
    
    enum EAbcConversionPreset { Maya, Max, Custom, EAbcConversionPreset_MAX, __typeKeyDoNoAccess}
    class AbcConversionSettings {
        constructor();
        constructor(Preset: UE.EAbcConversionPreset, bFlipU: boolean, bFlipV: boolean, Scale: UE.Vector, Rotation: UE.Vector);
        Preset: UE.EAbcConversionPreset;
        bFlipU: boolean;
        bFlipV: boolean;
        Scale: UE.Vector;
        Rotation: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AbcConversionSettings_0__: boolean;
    }
    
    enum EAbcGeometryCacheMotionVectorsImport { NoMotionVectors, ImportAbcVelocitiesAsMotionVectors, CalculateMotionVectorsDuringImport, EAbcGeometryCacheMotionVectorsImport_MAX, __typeKeyDoNoAccess}
    class AbcGeometryCacheSettings {
        constructor();
        constructor(bFlattenTracks: boolean, bApplyConstantTopologyOptimizations: boolean, bCalculateMotionVectorsDuringImport: boolean, MotionVectors: UE.EAbcGeometryCacheMotionVectorsImport, bOptimizeIndexBuffers: boolean, CompressedPositionPrecision: number, CompressedTextureCoordinatesNumberOfBits: number);
        bFlattenTracks: boolean;
        bApplyConstantTopologyOptimizations: boolean;
        bCalculateMotionVectorsDuringImport: boolean;
        MotionVectors: UE.EAbcGeometryCacheMotionVectorsImport;
        bOptimizeIndexBuffers: boolean;
        CompressedPositionPrecision: number;
        CompressedTextureCoordinatesNumberOfBits: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AbcGeometryCacheSettings_0__: boolean;
    }
    
    enum EAlembicImportType { StaticMesh, GeometryCache, Skeletal, EAlembicImportType_MAX, __typeKeyDoNoAccess}
    class AbcNormalGenerationSettings {
        constructor();
        constructor(bForceOneSmoothingGroupPerObject: boolean, HardEdgeAngleThreshold: number, bRecomputeNormals: boolean, bIgnoreDegenerateTriangles: boolean, bSkipComputingTangents: boolean);
        bForceOneSmoothingGroupPerObject: boolean;
        HardEdgeAngleThreshold: number;
        bRecomputeNormals: boolean;
        bIgnoreDegenerateTriangles: boolean;
        bSkipComputingTangents: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AbcNormalGenerationSettings_0__: boolean;
    }
    
    class AbcMaterialSettings {
        constructor();
        constructor(bCreateMaterials: boolean, bFindMaterials: boolean);
        bCreateMaterials: boolean;
        bFindMaterials: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AbcMaterialSettings_0__: boolean;
    }
    
    class AbcStaticMeshSettings {
        constructor();
        constructor(bMergeMeshes: boolean, bPropagateMatrixTransformations: boolean, bGenerateLightmapUVs: boolean);
        bMergeMeshes: boolean;
        bPropagateMatrixTransformations: boolean;
        bGenerateLightmapUVs: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AbcStaticMeshSettings_0__: boolean;
    }
    
    class AbcImportSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportType: UE.EAlembicImportType;
        SamplingSettings: UE.AbcSamplingSettings;
        NormalGenerationSettings: UE.AbcNormalGenerationSettings;
        MaterialSettings: UE.AbcMaterialSettings;
        CompressionSettings: UE.AbcCompressionSettings;
        StaticMeshSettings: UE.AbcStaticMeshSettings;
        GeometryCacheSettings: UE.AbcGeometryCacheSettings;
        ConversionSettings: UE.AbcConversionSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AbcImportSettings;
        static Load(InName: string): AbcImportSettings;
    
        __tid_AbcImportSettings_0__: boolean;
    }
    
    enum ETickingGroup { TG_PrePhysics, TG_StartPhysics, TG_DuringPhysics, TG_EndPhysics, TG_PostPhysics, TG_PostUpdateWork, TG_LastDemotable, TG_NewlySpawned, TG_MAX, __typeKeyDoNoAccess}
    class TickFunction {
        constructor();
        constructor(TickGroup: UE.ETickingGroup, EndTickGroup: UE.ETickingGroup, bTickEvenWhenPaused: boolean, bCanEverTick: boolean, bStartWithTickEnabled: boolean, bAllowTickOnDedicatedServer: boolean, TickInterval: number);
        TickGroup: UE.ETickingGroup;
        EndTickGroup: UE.ETickingGroup;
        bTickEvenWhenPaused: boolean;
        bCanEverTick: boolean;
        bStartWithTickEnabled: boolean;
        bAllowTickOnDedicatedServer: boolean;
        TickInterval: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TickFunction_0__: boolean;
    }
    
    class ActorTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorTickFunction_0__: boolean;
    }
    
    enum EActorUpdateOverlapsMethod { UseConfigDefault, AlwaysUpdate, OnlyUpdateMovable, NeverUpdate, EActorUpdateOverlapsMethod_MAX, __typeKeyDoNoAccess}
    enum ENetRole { ROLE_None, ROLE_SimulatedProxy, ROLE_AutonomousProxy, ROLE_Authority, ROLE_MAX, __typeKeyDoNoAccess}
    enum EVectorQuantization { RoundWholeNumber, RoundOneDecimal, RoundTwoDecimals, EVectorQuantization_MAX, __typeKeyDoNoAccess}
    enum ERotatorQuantization { ByteComponents, ShortComponents, ERotatorQuantization_MAX, __typeKeyDoNoAccess}
    class RepMovement {
        constructor();
        constructor(LinearVelocity: UE.Vector, AngularVelocity: UE.Vector, Location: UE.Vector, Rotation: UE.Rotator, bSimulatedPhysicSleep: boolean, bRepPhysics: boolean, LocationQuantizationLevel: UE.EVectorQuantization, VelocityQuantizationLevel: UE.EVectorQuantization, RotationQuantizationLevel: UE.ERotatorQuantization);
        LinearVelocity: UE.Vector;
        AngularVelocity: UE.Vector;
        Location: UE.Vector;
        Rotation: UE.Rotator;
        bSimulatedPhysicSleep: boolean;
        bRepPhysics: boolean;
        LocationQuantizationLevel: UE.EVectorQuantization;
        VelocityQuantizationLevel: UE.EVectorQuantization;
        RotationQuantizationLevel: UE.ERotatorQuantization;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RepMovement_0__: boolean;
    }
    
    class Vector_NetQuantize100 extends UE.Vector {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Vector_NetQuantize100_0__: boolean;
    }
    
    class ActorComponentTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorComponentTickFunction_0__: boolean;
    }
    
    class AssetUserData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetUserData;
        static Load(InName: string): AssetUserData;
    
        __tid_AssetUserData_0__: boolean;
    }
    
    enum EComponentCreationMethod { Native, SimpleConstructionScript, UserConstructionScript, Instance, EComponentCreationMethod_MAX, __typeKeyDoNoAccess}
    class SimpleMemberReference {
        constructor();
        constructor(MemberParent: UE.Object, MemberName: string, MemberGuid: UE.Guid);
        MemberParent: UE.Object;
        MemberName: string;
        MemberGuid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SimpleMemberReference_0__: boolean;
    }
    
    enum EEndPlayReason { Destroyed, LevelTransition, EndPlayInEditor, RemovedFromWorld, Quit, EEndPlayReason_MAX, __typeKeyDoNoAccess}
    class ActorComponent extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PrimaryComponentTick: UE.ActorComponentTickFunction;
        ComponentTags: TArray<string>;
        AssetUserData: TArray<UE.AssetUserData>;
        UCSSerializationIndex: number;
        bNetAddressable: boolean;
        bReplicates: boolean;
        bCreatedByConstructionScript: boolean;
        bInstanceComponent: boolean;
        bAutoActivate: boolean;
        bIsActive: boolean;
        bEditableWhenInherited: boolean;
        bCanEverAffectNavigation: boolean;
        bIsEditorOnly: boolean;
        bIsVisualizationComponent: boolean;
        bNeedsUCSSerializationIndexEvaluted: boolean;
        CreationMethod: UE.EComponentCreationMethod;
        OnComponentActivated: $MulticastDelegate<(Component: $Nullable<UE.ActorComponent>, bReset: boolean) => void>;
        OnComponentDeactivated: $MulticastDelegate<(Component: $Nullable<UE.ActorComponent>) => void>;
        UCSModifiedProperties: TArray<UE.SimpleMemberReference>;
        Activate(bReset?: boolean /* = false */) : void;
        AddTickPrerequisiteActor(PrerequisiteActor: $Nullable<UE.Actor>) : void;
        AddTickPrerequisiteComponent(PrerequisiteComponent: $Nullable<UE.ActorComponent>) : void;
        ComponentHasTag(Tag: string) : boolean;
        Deactivate() : void;
        GetComponentTickInterval() : number;
        GetOwner() : UE.Actor;
        IsActive() : boolean;
        IsBeingDestroyed() : boolean;
        IsComponentTickEnabled() : boolean;
        K2_DestroyComponent(Object: $Nullable<UE.Object>) : void;
        OnRep_IsActive() : void;
        ReceiveBeginPlay() : void;
        ReceiveEndPlay(EndPlayReason: UE.EEndPlayReason) : void;
        ReceiveTick(DeltaSeconds: number) : void;
        RegisterComponent() : void;
        RemoveTickPrerequisiteActor(PrerequisiteActor: $Nullable<UE.Actor>) : void;
        RemoveTickPrerequisiteComponent(PrerequisiteComponent: $Nullable<UE.ActorComponent>) : void;
        SetActive(bNewActive: boolean, bReset?: boolean /* = false */) : void;
        SetAutoActivate(bNewAutoActivate: boolean) : void;
        SetComponentTickEnabled(bEnabled: boolean) : void;
        SetComponentTickInterval(TickInterval: number) : void;
        SetComponentTickIntervalAndCooldown(TickInterval: number) : void;
        SetIsReplicated(ShouldReplicate: boolean) : void;
        SetTickableWhenPaused(bTickableWhenPaused: boolean) : void;
        SetTickGroup(NewTickGroup: UE.ETickingGroup) : void;
        ToggleActive() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorComponent;
        static Load(InName: string): ActorComponent;
    
        __tid_ActorComponent_0__: boolean;
    }
    
    enum EBrushType { Brush_Default, Brush_Add, Brush_Subtract, Brush_MAX, __typeKeyDoNoAccess}
    class Model extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Model;
        static Load(InName: string): Model;
    
        __tid_Model_0__: boolean;
    }
    
    enum ESceneDepthPriorityGroup { SDPG_World, SDPG_Foreground, SDPG_MAX, __typeKeyDoNoAccess}
    enum EIndirectLightingCacheQuality { ILCQ_Off, ILCQ_Point, ILCQ_Volume, ILCQ_MAX, __typeKeyDoNoAccess}
    enum ELightmapType { Default, ForceSurface, ForceVolumetric, ELightmapType_MAX, __typeKeyDoNoAccess}
    enum EHasCustomNavigableGeometry { No, Yes, EvenIfNotCollidable, DontExport, EHasCustomNavigableGeometry_MAX, __typeKeyDoNoAccess}
    enum EHitProxyPriority { HPP_World, HPP_Wireframe, HPP_Foreground, HPP_UI, HPP_MAX, __typeKeyDoNoAccess}
    enum ECanBeCharacterBase { ECB_No, ECB_Yes, ECB_Owner, ECB_MAX, __typeKeyDoNoAccess}
    class LightingChannels {
        constructor();
        constructor(bChannel0: boolean, bChannel1: boolean, bChannel2: boolean);
        bChannel0: boolean;
        bChannel1: boolean;
        bChannel2: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightingChannels_0__: boolean;
    }
    
    enum ERendererStencilMask { ERSM_Default, ERSM_255, ERSM_1, ERSM_2, ERSM_4, ERSM_8, ERSM_16, ERSM_32, ERSM_64, ERSM_128, ERSM_MAX, __typeKeyDoNoAccess}
    class CustomPrimitiveData {
        constructor();
        constructor(Data: TArray<number>);
        Data: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomPrimitiveData_0__: boolean;
    }
    
    enum ERuntimeVirtualTextureMaterialType { BaseColor, BaseColor_Normal_DEPRECATED, BaseColor_Normal_Specular, BaseColor_Normal_Specular_YCoCg, BaseColor_Normal_Specular_Mask_YCoCg, WorldHeight, Count, ERuntimeVirtualTextureMaterialType_MAX, __typeKeyDoNoAccess}
    enum TextureGroup { TEXTUREGROUP_World, TEXTUREGROUP_WorldNormalMap, TEXTUREGROUP_WorldSpecular, TEXTUREGROUP_Character, TEXTUREGROUP_CharacterNormalMap, TEXTUREGROUP_CharacterSpecular, TEXTUREGROUP_Weapon, TEXTUREGROUP_WeaponNormalMap, TEXTUREGROUP_WeaponSpecular, TEXTUREGROUP_Vehicle, TEXTUREGROUP_VehicleNormalMap, TEXTUREGROUP_VehicleSpecular, TEXTUREGROUP_Cinematic, TEXTUREGROUP_Effects, TEXTUREGROUP_EffectsNotFiltered, TEXTUREGROUP_Skybox, TEXTUREGROUP_UI, TEXTUREGROUP_Lightmap, TEXTUREGROUP_RenderTarget, TEXTUREGROUP_MobileFlattened, TEXTUREGROUP_ProcBuilding_Face, TEXTUREGROUP_ProcBuilding_LightMap, TEXTUREGROUP_Shadowmap, TEXTUREGROUP_ColorLookupTable, TEXTUREGROUP_Terrain_Heightmap, TEXTUREGROUP_Terrain_Weightmap, TEXTUREGROUP_Bokeh, TEXTUREGROUP_IESLightProfile, TEXTUREGROUP_Pixels2D, TEXTUREGROUP_HierarchicalLOD, TEXTUREGROUP_Impostor, TEXTUREGROUP_ImpostorNormalDepth, TEXTUREGROUP_8BitData, TEXTUREGROUP_16BitData, TEXTUREGROUP_Project01, TEXTUREGROUP_Project02, TEXTUREGROUP_Project03, TEXTUREGROUP_Project04, TEXTUREGROUP_Project05, TEXTUREGROUP_Project06, TEXTUREGROUP_Project07, TEXTUREGROUP_Project08, TEXTUREGROUP_Project09, TEXTUREGROUP_Project10, TEXTUREGROUP_Project11, TEXTUREGROUP_Project12, TEXTUREGROUP_Project13, TEXTUREGROUP_Project14, TEXTUREGROUP_Project15, TEXTUREGROUP_MAX, __typeKeyDoNoAccess}
    class StreamableRenderAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ForceMipLevelsToBeResidentTimestamp: number;
        NumCinematicMipLevels: number;
        StreamingIndex: number;
        CachedCombinedLODBias: number;
        NeverStream: boolean;
        bGlobalForceMipLevelsToBeResident: boolean;
        bHasStreamingUpdatePending: boolean;
        bForceMiplevelsToBeResident: boolean;
        bIgnoreStreamingMipBias: boolean;
        bUseCinematicMipLevels: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StreamableRenderAsset;
        static Load(InName: string): StreamableRenderAsset;
    
        __tid_StreamableRenderAsset_0__: boolean;
    }
    
    enum ETextureSourceFormat { TSF_Invalid, TSF_G8, TSF_BGRA8, TSF_BGRE8, TSF_RGBA16, TSF_RGBA16F, TSF_RGBA8, TSF_RGBE8, TSF_G16, TSF_MAX, __typeKeyDoNoAccess}
    class TextureSourceBlock {
        constructor();
        constructor(BlockX: number, BlockY: number, SizeX: number, SizeY: number, NumSlices: number, NumMips: number);
        BlockX: number;
        BlockY: number;
        SizeX: number;
        SizeY: number;
        NumSlices: number;
        NumMips: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TextureSourceBlock_0__: boolean;
    }
    
    class TextureSource {
        constructor();
        constructor(Id: UE.Guid, BaseBlockX: number, BaseBlockY: number, SizeX: number, SizeY: number, NumSlices: number, NumMips: number, NumLayers: number, bPNGCompressed: boolean, bGuidIsHash: boolean, Format: UE.ETextureSourceFormat, LayerFormat: TArray<UE.ETextureSourceFormat>, Blocks: TArray<UE.TextureSourceBlock>);
        Id: UE.Guid;
        BaseBlockX: number;
        BaseBlockY: number;
        SizeX: number;
        SizeY: number;
        NumSlices: number;
        NumMips: number;
        NumLayers: number;
        bPNGCompressed: boolean;
        bGuidIsHash: boolean;
        Format: UE.ETextureSourceFormat;
        LayerFormat: TArray<UE.ETextureSourceFormat>;
        Blocks: TArray<UE.TextureSourceBlock>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TextureSource_0__: boolean;
    }
    
    enum ETextureLossyCompressionAmount { TLCA_Default, TLCA_None, TLCA_Lowest, TLCA_Low, TLCA_Medium, TLCA_High, TLCA_Highest, TLCA_MAX, __typeKeyDoNoAccess}
    enum ETextureCompressionQuality { TCQ_Default, TCQ_Lowest, TCQ_Low, TCQ_Medium, TCQ_High, TCQ_Highest, TCQ_MAX, __typeKeyDoNoAccess}
    enum ETexturePowerOfTwoSetting { None, PadToPowerOfTwo, PadToSquarePowerOfTwo, ETexturePowerOfTwoSetting_MAX, __typeKeyDoNoAccess}
    enum TextureMipGenSettings { TMGS_FromTextureGroup, TMGS_SimpleAverage, TMGS_Sharpen0, TMGS_Sharpen1, TMGS_Sharpen2, TMGS_Sharpen3, TMGS_Sharpen4, TMGS_Sharpen5, TMGS_Sharpen6, TMGS_Sharpen7, TMGS_Sharpen8, TMGS_Sharpen9, TMGS_Sharpen10, TMGS_NoMipmaps, TMGS_LeaveExistingMips, TMGS_Blur1, TMGS_Blur2, TMGS_Blur3, TMGS_Blur4, TMGS_Blur5, TMGS_Unfiltered, TMGS_MAX, __typeKeyDoNoAccess}
    enum ECompositeTextureMode { CTM_Disabled, CTM_NormalRoughnessToRed, CTM_NormalRoughnessToGreen, CTM_NormalRoughnessToBlue, CTM_NormalRoughnessToAlpha, CTM_MAX, __typeKeyDoNoAccess}
    enum TextureCompressionSettings { TC_Default, TC_Normalmap, TC_Masks, TC_Grayscale, TC_Displacementmap, TC_VectorDisplacementmap, TC_HDR, TC_EditorIcon, TC_Alpha, TC_DistanceFieldFont, TC_HDR_Compressed, TC_BC7, TC_HalfFloat, TC_ReflectionCapture, TC_MAX, __typeKeyDoNoAccess}
    class TextureFormatSettings {
        constructor();
        constructor(CompressionSettings: UE.TextureCompressionSettings, CompressionNoAlpha: boolean, CompressionNone: boolean, CompressionYCoCg: boolean, SRGB: boolean);
        CompressionSettings: UE.TextureCompressionSettings;
        CompressionNoAlpha: boolean;
        CompressionNone: boolean;
        CompressionYCoCg: boolean;
        SRGB: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TextureFormatSettings_0__: boolean;
    }
    
    enum TextureFilter { TF_Nearest, TF_Bilinear, TF_Trilinear, TF_Default, TF_MAX, __typeKeyDoNoAccess}
    enum ETextureMipLoadOptions { Default, AllMips, OnlyFirstMip, ETextureMipLoadOptions_MAX, __typeKeyDoNoAccess}
    class PerPlatformFloat {
        constructor();
        constructor(Default: number, PerPlatform: TMap<string, number>);
        Default: number;
        PerPlatform: TMap<string, number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PerPlatformFloat_0__: boolean;
    }
    
    enum ETextureDownscaleOptions { Default, Unfiltered, SimpleAverage, Sharpen0, Sharpen1, Sharpen2, Sharpen3, Sharpen4, Sharpen5, Sharpen6, Sharpen7, Sharpen8, Sharpen9, Sharpen10, ETextureDownscaleOptions_MAX, __typeKeyDoNoAccess}
    class Texture extends UE.StreamableRenderAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Source: UE.TextureSource;
        LightingGuid: UE.Guid;
        SourceFilePath: string;
        AssetImportData: UE.AssetImportData;
        AdjustBrightness: number;
        AdjustBrightnessCurve: number;
        AdjustVibrance: number;
        AdjustSaturation: number;
        AdjustRGBCurve: number;
        AdjustHue: number;
        AdjustMinAlpha: number;
        AdjustMaxAlpha: number;
        CompressionNoAlpha: boolean;
        CompressionNone: boolean;
        DeferCompression: boolean;
        LossyCompressionAmount: UE.ETextureLossyCompressionAmount;
        MaxTextureSize: number;
        CompressionQuality: UE.ETextureCompressionQuality;
        bDitherMipMapAlpha: boolean;
        AlphaCoverageThresholds: UE.Vector4;
        bPreserveBorder: boolean;
        bFlipGreenChannel: boolean;
        bForcePVRTC4: boolean;
        PowerOfTwoMode: UE.ETexturePowerOfTwoSetting;
        PaddingColor: UE.Color;
        bChromaKeyTexture: boolean;
        ChromaKeyThreshold: number;
        ChromaKeyColor: UE.Color;
        MipGenSettings: UE.TextureMipGenSettings;
        CompositeTexture: UE.Texture;
        CompositeTextureMode: UE.ECompositeTextureMode;
        CompositePower: number;
        LayerFormatSettings: TArray<UE.TextureFormatSettings>;
        LODBias: number;
        CompressionSettings: UE.TextureCompressionSettings;
        Filter: UE.TextureFilter;
        MipLoadOptions: UE.ETextureMipLoadOptions;
        LODGroup: UE.TextureGroup;
        Downscale: UE.PerPlatformFloat;
        DownscaleOptions: UE.ETextureDownscaleOptions;
        SRGB: boolean;
        bUseLegacyGamma: boolean;
        bNoTiling: boolean;
        VirtualTextureStreaming: boolean;
        CompressionYCoCg: boolean;
        bNotOfflineProcessed: boolean;
        bAsyncResourceReleaseHasBeenStarted: boolean;
        AssetUserData: TArray<UE.AssetUserData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Texture;
        static Load(InName: string): Texture;
    
        __tid_Texture_0__: boolean;
    }
    
    enum TextureAddress { TA_Wrap, TA_Clamp, TA_Mirror, TA_MAX, __typeKeyDoNoAccess}
    class Texture2D extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LevelIndex: number;
        FirstResourceMemMip: number;
        bTemporarilyDisableStreaming: boolean;
        bHasBeenPaintedInEditor: boolean;
        AddressX: UE.TextureAddress;
        AddressY: UE.TextureAddress;
        ImportedSize: UE.IntPoint;
        Blueprint_GetSizeX() : number;
        Blueprint_GetSizeY() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Texture2D;
        static Load(InName: string): Texture2D;
    
        __tid_Texture2D_0__: boolean;
    }
    
    class RuntimeVirtualTextureStreamingProxy extends UE.Texture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RuntimeVirtualTextureStreamingProxy;
        static Load(InName: string): RuntimeVirtualTextureStreamingProxy;
    
        __tid_RuntimeVirtualTextureStreamingProxy_0__: boolean;
    }
    
    class RuntimeVirtualTexture extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TileCount: number;
        TileSize: number;
        TileBorderSize: number;
        MaterialType: UE.ERuntimeVirtualTextureMaterialType;
        bCompressTextures: boolean;
        bClearTextures: boolean;
        bSinglePhysicalSpace: boolean;
        bPrivateSpace: boolean;
        bAdaptive: boolean;
        bContinuousUpdate: boolean;
        RemoveLowMips: number;
        LODGroup: UE.TextureGroup;
        Size: number;
        StreamingTexture: UE.RuntimeVirtualTextureStreamingProxy;
        GetPageTableSize() : number;
        GetSize() : number;
        GetTileBorderSize() : number;
        GetTileCount() : number;
        GetTileSize() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RuntimeVirtualTexture;
        static Load(InName: string): RuntimeVirtualTexture;
    
        __tid_RuntimeVirtualTexture_0__: boolean;
    }
    
    enum ERuntimeVirtualTextureMainPassType { Never, Exclusive, Always, ERuntimeVirtualTextureMainPassType_MAX, __typeKeyDoNoAccess}
    class BodyInstanceCore {
        constructor();
        constructor(bSimulatePhysics: boolean, bOverrideMass: boolean, bEnableGravity: boolean, bAutoWeld: boolean, bStartAwake: boolean, bGenerateWakeEvents: boolean, bUpdateMassWhenScaleChanges: boolean);
        bSimulatePhysics: boolean;
        bOverrideMass: boolean;
        bEnableGravity: boolean;
        bAutoWeld: boolean;
        bStartAwake: boolean;
        bGenerateWakeEvents: boolean;
        bUpdateMassWhenScaleChanges: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BodyInstanceCore_0__: boolean;
    }
    
    enum ECollisionChannel { ECC_WorldStatic, ECC_WorldDynamic, ECC_Pawn, ECC_Visibility, ECC_Camera, ECC_PhysicsBody, ECC_Vehicle, ECC_Destructible, ECC_EngineTraceChannel1, ECC_EngineTraceChannel2, ECC_EngineTraceChannel3, ECC_EngineTraceChannel4, ECC_EngineTraceChannel5, ECC_EngineTraceChannel6, ECC_GameTraceChannel1, ECC_GameTraceChannel2, ECC_GameTraceChannel3, ECC_GameTraceChannel4, ECC_GameTraceChannel5, ECC_GameTraceChannel6, ECC_GameTraceChannel7, ECC_GameTraceChannel8, ECC_GameTraceChannel9, ECC_GameTraceChannel10, ECC_GameTraceChannel11, ECC_GameTraceChannel12, ECC_GameTraceChannel13, ECC_GameTraceChannel14, ECC_GameTraceChannel15, ECC_GameTraceChannel16, ECC_GameTraceChannel17, ECC_GameTraceChannel18, ECC_OverlapAll_Deprecated, ECC_MAX, __typeKeyDoNoAccess}
    enum ECollisionEnabled { NoCollision, QueryOnly, PhysicsOnly, QueryAndPhysics, ECollisionEnabled_MAX, __typeKeyDoNoAccess}
    enum ESleepFamily { Normal, Sensitive, Custom, ESleepFamily_MAX, __typeKeyDoNoAccess}
    enum EDOFMode { Default, SixDOF, YZPlane, XZPlane, XYPlane, CustomPlane, None, EDOFMode_MAX, __typeKeyDoNoAccess}
    enum ECollisionResponse { ECR_Ignore, ECR_Overlap, ECR_Block, ECR_MAX, __typeKeyDoNoAccess}
    class CollisionResponseContainer {
        constructor();
        constructor(WorldStatic: UE.ECollisionResponse, WorldDynamic: UE.ECollisionResponse, Pawn: UE.ECollisionResponse, Visibility: UE.ECollisionResponse, Camera: UE.ECollisionResponse, PhysicsBody: UE.ECollisionResponse, Vehicle: UE.ECollisionResponse, Destructible: UE.ECollisionResponse, EngineTraceChannel1: UE.ECollisionResponse, EngineTraceChannel2: UE.ECollisionResponse, EngineTraceChannel3: UE.ECollisionResponse, EngineTraceChannel4: UE.ECollisionResponse, EngineTraceChannel5: UE.ECollisionResponse, EngineTraceChannel6: UE.ECollisionResponse, GameTraceChannel1: UE.ECollisionResponse, GameTraceChannel2: UE.ECollisionResponse, GameTraceChannel3: UE.ECollisionResponse, GameTraceChannel4: UE.ECollisionResponse, GameTraceChannel5: UE.ECollisionResponse, GameTraceChannel6: UE.ECollisionResponse, GameTraceChannel7: UE.ECollisionResponse, GameTraceChannel8: UE.ECollisionResponse, GameTraceChannel9: UE.ECollisionResponse, GameTraceChannel10: UE.ECollisionResponse, GameTraceChannel11: UE.ECollisionResponse, GameTraceChannel12: UE.ECollisionResponse, GameTraceChannel13: UE.ECollisionResponse, GameTraceChannel14: UE.ECollisionResponse, GameTraceChannel15: UE.ECollisionResponse, GameTraceChannel16: UE.ECollisionResponse, GameTraceChannel17: UE.ECollisionResponse, GameTraceChannel18: UE.ECollisionResponse);
        WorldStatic: UE.ECollisionResponse;
        WorldDynamic: UE.ECollisionResponse;
        Pawn: UE.ECollisionResponse;
        Visibility: UE.ECollisionResponse;
        Camera: UE.ECollisionResponse;
        PhysicsBody: UE.ECollisionResponse;
        Vehicle: UE.ECollisionResponse;
        Destructible: UE.ECollisionResponse;
        EngineTraceChannel1: UE.ECollisionResponse;
        EngineTraceChannel2: UE.ECollisionResponse;
        EngineTraceChannel3: UE.ECollisionResponse;
        EngineTraceChannel4: UE.ECollisionResponse;
        EngineTraceChannel5: UE.ECollisionResponse;
        EngineTraceChannel6: UE.ECollisionResponse;
        GameTraceChannel1: UE.ECollisionResponse;
        GameTraceChannel2: UE.ECollisionResponse;
        GameTraceChannel3: UE.ECollisionResponse;
        GameTraceChannel4: UE.ECollisionResponse;
        GameTraceChannel5: UE.ECollisionResponse;
        GameTraceChannel6: UE.ECollisionResponse;
        GameTraceChannel7: UE.ECollisionResponse;
        GameTraceChannel8: UE.ECollisionResponse;
        GameTraceChannel9: UE.ECollisionResponse;
        GameTraceChannel10: UE.ECollisionResponse;
        GameTraceChannel11: UE.ECollisionResponse;
        GameTraceChannel12: UE.ECollisionResponse;
        GameTraceChannel13: UE.ECollisionResponse;
        GameTraceChannel14: UE.ECollisionResponse;
        GameTraceChannel15: UE.ECollisionResponse;
        GameTraceChannel16: UE.ECollisionResponse;
        GameTraceChannel17: UE.ECollisionResponse;
        GameTraceChannel18: UE.ECollisionResponse;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollisionResponseContainer_0__: boolean;
    }
    
    class ResponseChannel {
        constructor();
        constructor(Channel: string, Response: UE.ECollisionResponse);
        Channel: string;
        Response: UE.ECollisionResponse;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ResponseChannel_0__: boolean;
    }
    
    class CollisionResponse {
        constructor();
        constructor(ResponseToChannels: UE.CollisionResponseContainer, ResponseArray: TArray<UE.ResponseChannel>);
        ResponseToChannels: UE.CollisionResponseContainer;
        ResponseArray: TArray<UE.ResponseChannel>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollisionResponse_0__: boolean;
    }
    
    enum EWalkableSlopeBehavior { WalkableSlope_Default, WalkableSlope_Increase, WalkableSlope_Decrease, WalkableSlope_Unwalkable, WalkableSlope_Max, WalkableSlope_MAX, __typeKeyDoNoAccess}
    class WalkableSlopeOverride {
        constructor();
        constructor(WalkableSlopeBehavior: UE.EWalkableSlopeBehavior, WalkableSlopeAngle: number);
        WalkableSlopeBehavior: UE.EWalkableSlopeBehavior;
        WalkableSlopeAngle: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WalkableSlopeOverride_0__: boolean;
    }
    
    enum EFrictionCombineMode { Average, Min, Multiply, Max, EFrictionCombineMode_MAX, __typeKeyDoNoAccess}
    class PhysicalMaterialPropertyBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicalMaterialPropertyBase;
        static Load(InName: string): PhysicalMaterialPropertyBase;
    
        __tid_PhysicalMaterialPropertyBase_0__: boolean;
    }
    
    enum EPhysicalSurface { SurfaceType_Default, SurfaceType1, SurfaceType2, SurfaceType3, SurfaceType4, SurfaceType5, SurfaceType6, SurfaceType7, SurfaceType8, SurfaceType9, SurfaceType10, SurfaceType11, SurfaceType12, SurfaceType13, SurfaceType14, SurfaceType15, SurfaceType16, SurfaceType17, SurfaceType18, SurfaceType19, SurfaceType20, SurfaceType21, SurfaceType22, SurfaceType23, SurfaceType24, SurfaceType25, SurfaceType26, SurfaceType27, SurfaceType28, SurfaceType29, SurfaceType30, SurfaceType31, SurfaceType32, SurfaceType33, SurfaceType34, SurfaceType35, SurfaceType36, SurfaceType37, SurfaceType38, SurfaceType39, SurfaceType40, SurfaceType41, SurfaceType42, SurfaceType43, SurfaceType44, SurfaceType45, SurfaceType46, SurfaceType47, SurfaceType48, SurfaceType49, SurfaceType50, SurfaceType51, SurfaceType52, SurfaceType53, SurfaceType54, SurfaceType55, SurfaceType56, SurfaceType57, SurfaceType58, SurfaceType59, SurfaceType60, SurfaceType61, SurfaceType62, SurfaceType_Max, EPhysicalSurface_MAX, __typeKeyDoNoAccess}
    class PhysicalMaterial extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Friction: number;
        StaticFriction: number;
        FrictionCombineMode: UE.EFrictionCombineMode;
        bOverrideFrictionCombineMode: boolean;
        Restitution: number;
        RestitutionCombineMode: UE.EFrictionCombineMode;
        bOverrideRestitutionCombineMode: boolean;
        Density: number;
        SleepLinearVelocityThreshold: number;
        SleepAngularVelocityThreshold: number;
        SleepCounterThreshold: number;
        RaiseMassToPower: number;
        DestructibleDamageThresholdScale: number;
        PhysicalMaterialProperty: UE.PhysicalMaterialPropertyBase;
        SurfaceType: UE.EPhysicalSurface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicalMaterial;
        static Load(InName: string): PhysicalMaterial;
    
        __tid_PhysicalMaterial_0__: boolean;
    }
    
    class BodyInstance extends UE.BodyInstanceCore {
        constructor();
        constructor(ObjectType: UE.ECollisionChannel, CollisionEnabled: UE.ECollisionEnabled, SleepFamily: UE.ESleepFamily, DOFMode: UE.EDOFMode, bUseCCD: boolean, bIgnoreAnalyticCollisions: boolean, bNotifyRigidBodyCollision: boolean, bLockTranslation: boolean, bLockRotation: boolean, bLockXTranslation: boolean, bLockYTranslation: boolean, bLockZTranslation: boolean, bLockXRotation: boolean, bLockYRotation: boolean, bLockZRotation: boolean, bOverrideMaxAngularVelocity: boolean, bOverrideMaxDepenetrationVelocity: boolean, bOverrideWalkableSlopeOnInstance: boolean, bInterpolateWhenSubStepping: boolean, ResponseToChannels: UE.CollisionResponseContainer, CollisionProfileName: string, PositionSolverIterationCount: number, VelocitySolverIterationCount: number, CollisionResponses: UE.CollisionResponse, MaxDepenetrationVelocity: number, MassInKgOverride: number, LinearDamping: number, AngularDamping: number, CustomDOFPlaneNormal: UE.Vector, COMNudge: UE.Vector, MassScale: number, InertiaTensorScale: UE.Vector, WalkableSlopeOverride: UE.WalkableSlopeOverride, PhysMaterialOverride: UE.PhysicalMaterial, MaxAngularVelocity: number, CustomSleepThresholdMultiplier: number, StabilizationThresholdMultiplier: number, PhysicsBlendWeight: number);
        ObjectType: UE.ECollisionChannel;
        CollisionEnabled: UE.ECollisionEnabled;
        SleepFamily: UE.ESleepFamily;
        DOFMode: UE.EDOFMode;
        bUseCCD: boolean;
        bIgnoreAnalyticCollisions: boolean;
        bNotifyRigidBodyCollision: boolean;
        bLockTranslation: boolean;
        bLockRotation: boolean;
        bLockXTranslation: boolean;
        bLockYTranslation: boolean;
        bLockZTranslation: boolean;
        bLockXRotation: boolean;
        bLockYRotation: boolean;
        bLockZRotation: boolean;
        bOverrideMaxAngularVelocity: boolean;
        bOverrideMaxDepenetrationVelocity: boolean;
        bOverrideWalkableSlopeOnInstance: boolean;
        bInterpolateWhenSubStepping: boolean;
        ResponseToChannels: UE.CollisionResponseContainer;
        CollisionProfileName: string;
        PositionSolverIterationCount: number;
        VelocitySolverIterationCount: number;
        CollisionResponses: UE.CollisionResponse;
        MaxDepenetrationVelocity: number;
        MassInKgOverride: number;
        LinearDamping: number;
        AngularDamping: number;
        CustomDOFPlaneNormal: UE.Vector;
        COMNudge: UE.Vector;
        MassScale: number;
        InertiaTensorScale: UE.Vector;
        WalkableSlopeOverride: UE.WalkableSlopeOverride;
        PhysMaterialOverride: UE.PhysicalMaterial;
        MaxAngularVelocity: number;
        CustomSleepThresholdMultiplier: number;
        StabilizationThresholdMultiplier: number;
        PhysicsBlendWeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BodyInstance_0__: boolean;
    }
    
    class Vector_NetQuantize extends UE.Vector {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Vector_NetQuantize_0__: boolean;
    }
    
    class Vector_NetQuantizeNormal extends UE.Vector {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Vector_NetQuantizeNormal_0__: boolean;
    }
    
    class HitResult {
        constructor();
        constructor(bBlockingHit: boolean, bStartPenetrating: boolean, FaceIndex: number, Time: number, Distance: number, Location: UE.Vector_NetQuantize, ImpactPoint: UE.Vector_NetQuantize, Normal: UE.Vector_NetQuantizeNormal, ImpactNormal: UE.Vector_NetQuantizeNormal, TraceStart: UE.Vector_NetQuantize, TraceEnd: UE.Vector_NetQuantize, PenetrationDepth: number, Item: number, ElementIndex: number, PhysMaterial: TWeakObjectPtr<UE.PhysicalMaterial>, Actor: TWeakObjectPtr<UE.Actor>, Component: TWeakObjectPtr<UE.PrimitiveComponent>, BoneName: string, MyBoneName: string);
        bBlockingHit: boolean;
        bStartPenetrating: boolean;
        FaceIndex: number;
        Time: number;
        Distance: number;
        Location: UE.Vector_NetQuantize;
        ImpactPoint: UE.Vector_NetQuantize;
        Normal: UE.Vector_NetQuantizeNormal;
        ImpactNormal: UE.Vector_NetQuantizeNormal;
        TraceStart: UE.Vector_NetQuantize;
        TraceEnd: UE.Vector_NetQuantize;
        PenetrationDepth: number;
        Item: number;
        ElementIndex: number;
        PhysMaterial: TWeakObjectPtr<UE.PhysicalMaterial>;
        Actor: TWeakObjectPtr<UE.Actor>;
        Component: TWeakObjectPtr<UE.PrimitiveComponent>;
        BoneName: string;
        MyBoneName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HitResult_0__: boolean;
    }
    
    class Key {
        constructor();
        constructor(KeyName: string);
        KeyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Key_0__: boolean;
    }
    
    enum ETouchIndex { Touch1, Touch2, Touch3, Touch4, Touch5, Touch6, Touch7, Touch8, Touch9, Touch10, CursorPointerIndex, MAX_TOUCHES, ETouchIndex_MAX, __typeKeyDoNoAccess}
    class SubsurfaceProfileStruct {
        constructor();
        constructor(SurfaceAlbedo: UE.LinearColor, MeanFreePathColor: UE.LinearColor, MeanFreePathDistance: number, WorldUnitScale: number, bEnableBurley: boolean, ScatterRadius: number, SubsurfaceColor: UE.LinearColor, FalloffColor: UE.LinearColor, BoundaryColorBleed: UE.LinearColor, ExtinctionScale: number, NormalScale: number, ScatteringDistribution: number, IOR: number, Roughness0: number, Roughness1: number, LobeMix: number, TransmissionTintColor: UE.LinearColor);
        SurfaceAlbedo: UE.LinearColor;
        MeanFreePathColor: UE.LinearColor;
        MeanFreePathDistance: number;
        WorldUnitScale: number;
        bEnableBurley: boolean;
        ScatterRadius: number;
        SubsurfaceColor: UE.LinearColor;
        FalloffColor: UE.LinearColor;
        BoundaryColorBleed: UE.LinearColor;
        ExtinctionScale: number;
        NormalScale: number;
        ScatteringDistribution: number;
        IOR: number;
        Roughness0: number;
        Roughness1: number;
        LobeMix: number;
        TransmissionTintColor: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubsurfaceProfileStruct_0__: boolean;
    }
    
    class SubsurfaceProfile extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubsurfaceProfileStruct;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubsurfaceProfile;
        static Load(InName: string): SubsurfaceProfile;
    
        __tid_SubsurfaceProfile_0__: boolean;
    }
    
    class LightmassMaterialInterfaceSettings {
        constructor();
        constructor(EmissiveBoost: number, DiffuseBoost: number, ExportResolutionScale: number, bCastShadowAsMasked: boolean, bOverrideCastShadowAsMasked: boolean, bOverrideEmissiveBoost: boolean, bOverrideDiffuseBoost: boolean, bOverrideExportResolutionScale: boolean);
        EmissiveBoost: number;
        DiffuseBoost: number;
        ExportResolutionScale: number;
        bCastShadowAsMasked: boolean;
        bOverrideCastShadowAsMasked: boolean;
        bOverrideEmissiveBoost: boolean;
        bOverrideDiffuseBoost: boolean;
        bOverrideExportResolutionScale: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassMaterialInterfaceSettings_0__: boolean;
    }
    
    class SoftObjectPath {
        constructor();
        constructor(AssetPathName: string, SubPathString: string);
        AssetPathName: string;
        SubPathString: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoftObjectPath_0__: boolean;
    }
    
    class MaterialTextureInfo {
        constructor();
        constructor(SamplingScale: number, UVChannelIndex: number, TextureName: string, TextureReference: UE.SoftObjectPath, TextureIndex: number);
        SamplingScale: number;
        UVChannelIndex: number;
        TextureName: string;
        TextureReference: UE.SoftObjectPath;
        TextureIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialTextureInfo_0__: boolean;
    }
    
    class ThumbnailInfo extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ThumbnailInfo;
        static Load(InName: string): ThumbnailInfo;
    
        __tid_ThumbnailInfo_0__: boolean;
    }
    
    class PhysicalMaterialMask extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetImportData: UE.AssetImportData;
        MaskTexture: UE.Texture;
        UVChannelIndex: number;
        AddressX: UE.TextureAddress;
        AddressY: UE.TextureAddress;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicalMaterialMask;
        static Load(InName: string): PhysicalMaterialMask;
    
        __tid_PhysicalMaterialMask_0__: boolean;
    }
    
    enum EMaterialParameterAssociation { LayerParameter, BlendParameter, GlobalParameter, EMaterialParameterAssociation_MAX, __typeKeyDoNoAccess}
    enum EMaterialFunctionUsage { Default, MaterialLayer, MaterialLayerBlend, EMaterialFunctionUsage_MAX, __typeKeyDoNoAccess}
    class MaterialFunctionInterface extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StateId: UE.Guid;
        MaterialFunctionUsage: UE.EMaterialFunctionUsage;
        CombinedInputTypes: number;
        CombinedOutputTypes: number;
        ThumbnailInfo: UE.ThumbnailInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionInterface;
        static Load(InName: string): MaterialFunctionInterface;
    
        __tid_MaterialFunctionInterface_0__: boolean;
    }
    
    class MaterialParameterInfo {
        constructor();
        constructor(Name: string, Association: UE.EMaterialParameterAssociation, Index: number, ParameterLocation: UE.SoftObjectPath);
        Name: string;
        Association: UE.EMaterialParameterAssociation;
        Index: number;
        ParameterLocation: UE.SoftObjectPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialParameterInfo_0__: boolean;
    }
    
    enum EEdGraphPinDirection { EGPD_Input, EGPD_Output, EGPD_MAX, __typeKeyDoNoAccess}
    class EdGraphTerminalType {
        constructor();
        constructor(TerminalCategory: string, TerminalSubCategory: string, TerminalSubCategoryObject: TWeakObjectPtr<UE.Object>, bTerminalIsConst: boolean, bTerminalIsWeakPointer: boolean, bTerminalIsUObjectWrapper: boolean);
        TerminalCategory: string;
        TerminalSubCategory: string;
        TerminalSubCategoryObject: TWeakObjectPtr<UE.Object>;
        bTerminalIsConst: boolean;
        bTerminalIsWeakPointer: boolean;
        bTerminalIsUObjectWrapper: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphTerminalType_0__: boolean;
    }
    
    enum EPinContainerType { None, Array, Set, Map, EPinContainerType_MAX, __typeKeyDoNoAccess}
    class EdGraphPinType {
        constructor();
        constructor(PinCategory: string, PinSubCategory: string, PinSubCategoryObject: TWeakObjectPtr<UE.Object>, PinSubCategoryMemberReference: UE.SimpleMemberReference, PinValueType: UE.EdGraphTerminalType, ContainerType: UE.EPinContainerType, bIsArray: boolean, bIsReference: boolean, bIsConst: boolean, bIsWeakPointer: boolean, bIsUObjectWrapper: boolean);
        PinCategory: string;
        PinSubCategory: string;
        PinSubCategoryObject: TWeakObjectPtr<UE.Object>;
        PinSubCategoryMemberReference: UE.SimpleMemberReference;
        PinValueType: UE.EdGraphTerminalType;
        ContainerType: UE.EPinContainerType;
        bIsArray: boolean;
        bIsReference: boolean;
        bIsConst: boolean;
        bIsWeakPointer: boolean;
        bIsUObjectWrapper: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphPinType_0__: boolean;
    }
    
    class EdGraphPin_Deprecated extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinName: string;
        PinFriendlyName: string;
        PinToolTip: string;
        Direction: UE.EEdGraphPinDirection;
        PinType: UE.EdGraphPinType;
        DefaultValue: string;
        AutogeneratedDefaultValue: string;
        DefaultObject: UE.Object;
        DefaultTextValue: string;
        LinkedTo: TArray<UE.EdGraphPin_Deprecated>;
        SubPins: TArray<UE.EdGraphPin_Deprecated>;
        ParentPin: UE.EdGraphPin_Deprecated;
        ReferencePassThroughConnection: UE.EdGraphPin_Deprecated;
        bHidden: boolean;
        bNotConnectable: boolean;
        bDefaultValueIsReadOnly: boolean;
        bDefaultValueIsIgnored: boolean;
        bIsDiffing: boolean;
        bAdvancedView: boolean;
        bDisplayAsMutableRef: boolean;
        PersistentGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphPin_Deprecated;
        static Load(InName: string): EdGraphPin_Deprecated;
    
        __tid_EdGraphPin_Deprecated_0__: boolean;
    }
    
    enum ENodeAdvancedPins { NoPins, Shown, Hidden, ENodeAdvancedPins_MAX, __typeKeyDoNoAccess}
    enum ENodeEnabledState { Enabled, Disabled, DevelopmentOnly, ENodeEnabledState_MAX, __typeKeyDoNoAccess}
    class EdGraphNode extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DeprecatedPins: TArray<UE.EdGraphPin_Deprecated>;
        NodePosX: number;
        NodePosY: number;
        NodeWidth: number;
        NodeHeight: number;
        AdvancedPinDisplay: UE.ENodeAdvancedPins;
        EnabledState: UE.ENodeEnabledState;
        bDisplayAsDisabled: boolean;
        bUserSetEnabledState: boolean;
        bIsNodeEnabled: boolean;
        bCanResizeNode: boolean;
        bHasCompilerMessage: boolean;
        bCommentBubblePinned: boolean;
        bCommentBubbleVisible: boolean;
        bCommentBubbleMakeVisible: boolean;
        bCanRenameNode: boolean;
        NodeUpgradeMessage: string;
        NodeComment: string;
        ErrorType: number;
        ErrorMsg: string;
        NodeGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphNode;
        static Load(InName: string): EdGraphNode;
    
        __tid_EdGraphNode_0__: boolean;
    }
    
    class MaterialExpressionComment extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SizeX: number;
        SizeY: number;
        Text: string;
        CommentColor: UE.LinearColor;
        FontSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionComment;
        static Load(InName: string): MaterialExpressionComment;
    
        __tid_MaterialExpressionComment_0__: boolean;
    }
    
    class ExpressionInput {
        constructor();
        constructor(Expression: UE.MaterialExpression, OutputIndex: number, InputName: string, Mask: number, MaskR: number, MaskG: number, MaskB: number, MaskA: number, ExpressionName: string);
        Expression: UE.MaterialExpression;
        OutputIndex: number;
        InputName: string;
        Mask: number;
        MaskR: number;
        MaskG: number;
        MaskB: number;
        MaskA: number;
        ExpressionName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExpressionInput_0__: boolean;
    }
    
    enum EFunctionInputType { FunctionInput_Scalar, FunctionInput_Vector2, FunctionInput_Vector3, FunctionInput_Vector4, FunctionInput_Texture2D, FunctionInput_TextureCube, FunctionInput_Texture2DArray, FunctionInput_VolumeTexture, FunctionInput_StaticBool, FunctionInput_MaterialAttributes, FunctionInput_TextureExternal, FunctionInput_MAX, __typeKeyDoNoAccess}
    class MaterialExpressionFunctionInput extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Preview: UE.ExpressionInput;
        InputName: string;
        Description: string;
        Id: UE.Guid;
        InputType: UE.EFunctionInputType;
        PreviewValue: UE.Vector4;
        bUsePreviewValueAsDefault: boolean;
        SortPriority: number;
        bCompilingFunctionPreview: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFunctionInput;
        static Load(InName: string): MaterialExpressionFunctionInput;
    
        __tid_MaterialExpressionFunctionInput_0__: boolean;
    }
    
    class FunctionExpressionInput {
        constructor();
        constructor(ExpressionInput: UE.MaterialExpressionFunctionInput, ExpressionInputId: UE.Guid, Input: UE.ExpressionInput);
        ExpressionInput: UE.MaterialExpressionFunctionInput;
        ExpressionInputId: UE.Guid;
        Input: UE.ExpressionInput;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FunctionExpressionInput_0__: boolean;
    }
    
    class MaterialExpressionFunctionOutput extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OutputName: string;
        Description: string;
        SortPriority: number;
        A: UE.ExpressionInput;
        bLastPreviewed: boolean;
        Id: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFunctionOutput;
        static Load(InName: string): MaterialExpressionFunctionOutput;
    
        __tid_MaterialExpressionFunctionOutput_0__: boolean;
    }
    
    class ExpressionOutput {
        constructor();
        constructor(OutputName: string, Mask: number, MaskR: number, MaskG: number, MaskB: number, MaskA: number);
        OutputName: string;
        Mask: number;
        MaskR: number;
        MaskG: number;
        MaskB: number;
        MaskA: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExpressionOutput_0__: boolean;
    }
    
    class FunctionExpressionOutput {
        constructor();
        constructor(ExpressionOutput: UE.MaterialExpressionFunctionOutput, ExpressionOutputId: UE.Guid, Output: UE.ExpressionOutput);
        ExpressionOutput: UE.MaterialExpressionFunctionOutput;
        ExpressionOutputId: UE.Guid;
        Output: UE.ExpressionOutput;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FunctionExpressionOutput_0__: boolean;
    }
    
    class MaterialExpressionMaterialFunctionCall extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialFunction: UE.MaterialFunctionInterface;
        FunctionInputs: TArray<UE.FunctionExpressionInput>;
        FunctionOutputs: TArray<UE.FunctionExpressionOutput>;
        FunctionParameterInfo: UE.MaterialParameterInfo;
        SetMaterialFunction(NewMaterialFunction: $Nullable<UE.MaterialFunctionInterface>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMaterialFunctionCall;
        static Load(InName: string): MaterialExpressionMaterialFunctionCall;
    
        __tid_MaterialExpressionMaterialFunctionCall_0__: boolean;
    }
    
    class MaterialFunction extends UE.MaterialFunctionInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentFunction: UE.MaterialFunction;
        Description: string;
        FunctionExpressions: TArray<UE.MaterialExpression>;
        bExposeToLibrary: boolean;
        bPrefixParameterNames: boolean;
        LibraryCategories: TArray<string>;
        LibraryCategoriesText: TArray<string>;
        FunctionEditorComments: TArray<UE.MaterialExpressionComment>;
        PreviewMaterial: UE.Material;
        DependentFunctionExpressionCandidates: TArray<UE.MaterialExpressionMaterialFunctionCall>;
        bReentrantFlag: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunction;
        static Load(InName: string): MaterialFunction;
    
        __tid_MaterialFunction_0__: boolean;
    }
    
    class MaterialExpression extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialExpressionEditorX: number;
        MaterialExpressionEditorY: number;
        GraphNode: UE.EdGraphNode;
        MaterialExpressionGuid: UE.Guid;
        Material: UE.Material;
        Function: UE.MaterialFunction;
        Desc: string;
        bRealtimePreview: boolean;
        bNeedToUpdatePreview: boolean;
        bIsParameterExpression: boolean;
        bCommentBubbleVisible: boolean;
        bShowOutputNameOnPin: boolean;
        bShowMaskColorsOnPin: boolean;
        bHidePreviewWindow: boolean;
        bCollapsed: boolean;
        bShaderInputData: boolean;
        bShowInputs: boolean;
        bShowOutputs: boolean;
        MenuCategories: TArray<string>;
        Outputs: TArray<UE.ExpressionOutput>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpression;
        static Load(InName: string): MaterialExpression;
    
        __tid_MaterialExpression_0__: boolean;
    }
    
    class MaterialInput {
        constructor();
        constructor(Expression: UE.MaterialExpression, OutputIndex: number, InputName: string, Mask: number, MaskR: number, MaskG: number, MaskB: number, MaskA: number, ExpressionName: string);
        Expression: UE.MaterialExpression;
        OutputIndex: number;
        InputName: string;
        Mask: number;
        MaskR: number;
        MaskG: number;
        MaskB: number;
        MaskA: number;
        ExpressionName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialInput_0__: boolean;
    }
    
    class ColorMaterialInput extends UE.MaterialInput {
        constructor();
        constructor(UseConstant: boolean, Constant: UE.Color);
        UseConstant: boolean;
        Constant: UE.Color;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ColorMaterialInput_0__: boolean;
    }
    
    class ScalarMaterialInput extends UE.MaterialInput {
        constructor();
        constructor(UseConstant: boolean, Constant: number);
        UseConstant: boolean;
        Constant: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScalarMaterialInput_0__: boolean;
    }
    
    class VectorMaterialInput extends UE.MaterialInput {
        constructor();
        constructor(UseConstant: boolean, Constant: UE.Vector);
        UseConstant: boolean;
        Constant: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VectorMaterialInput_0__: boolean;
    }
    
    enum EMaterialDomain { MD_Surface, MD_DeferredDecal, MD_LightFunction, MD_Volume, MD_PostProcess, MD_UI, MD_RuntimeVirtualTexture, MD_MAX, __typeKeyDoNoAccess}
    enum EBlendMode { BLEND_Opaque, BLEND_Masked, BLEND_Translucent, BLEND_Additive, BLEND_Modulate, BLEND_AlphaComposite, BLEND_AlphaHoldout, BLEND_MAX, __typeKeyDoNoAccess}
    enum EDecalBlendMode { DBM_Translucent, DBM_Stain, DBM_Normal, DBM_Emissive, DBM_DBuffer_ColorNormalRoughness, DBM_DBuffer_Color, DBM_DBuffer_ColorNormal, DBM_DBuffer_ColorRoughness, DBM_DBuffer_Normal, DBM_DBuffer_NormalRoughness, DBM_DBuffer_Roughness, DBM_DBuffer_Emissive, DBM_DBuffer_AlphaComposite, DBM_DBuffer_EmissiveAlphaComposite, DBM_Volumetric_DistanceFunction, DBM_AlphaComposite, DBM_AmbientOcclusion, DBM_MAX, __typeKeyDoNoAccess}
    enum EMaterialDecalResponse { MDR_None, MDR_ColorNormalRoughness, MDR_Color, MDR_ColorNormal, MDR_ColorRoughness, MDR_Normal, MDR_NormalRoughness, MDR_Roughness, MDR_MAX, __typeKeyDoNoAccess}
    enum EMaterialShadingModel { MSM_Unlit, MSM_DefaultLit, MSM_Subsurface, MSM_PreintegratedSkin, MSM_ClearCoat, MSM_SubsurfaceProfile, MSM_TwoSidedFoliage, MSM_Hair, MSM_Cloth, MSM_Eye, MSM_SingleLayerWater, MSM_ThinTranslucent, MSM_NUM, MSM_FromMaterialExpression, MSM_MAX, __typeKeyDoNoAccess}
    class MaterialShadingModelField {
        constructor();
        constructor(ShadingModelField: number);
        ShadingModelField: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialShadingModelField_0__: boolean;
    }
    
    class Vector2MaterialInput extends UE.MaterialInput {
        constructor();
        constructor(UseConstant: boolean, ConstantX: number, ConstantY: number);
        UseConstant: boolean;
        ConstantX: number;
        ConstantY: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Vector2MaterialInput_0__: boolean;
    }
    
    class MaterialAttributesInput extends UE.ExpressionInput {
        constructor();
        constructor(PropertyConnectedBitmask: number);
        PropertyConnectedBitmask: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialAttributesInput_0__: boolean;
    }
    
    class ShadingModelMaterialInput extends UE.MaterialInput {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ShadingModelMaterialInput_0__: boolean;
    }
    
    enum ETranslucencyLightingMode { TLM_VolumetricNonDirectional, TLM_VolumetricDirectional, TLM_VolumetricPerVertexNonDirectional, TLM_VolumetricPerVertexDirectional, TLM_Surface, TLM_SurfacePerPixelLighting, TLM_MAX, __typeKeyDoNoAccess}
    enum EMaterialTessellationMode { MTM_NoTessellation, MTM_FlatTessellation, MTM_PNTriangles, MTM_MAX, __typeKeyDoNoAccess}
    enum EMaterialShadingRate { MSR_1x1, MSR_2x1, MSR_1x2, MSR_2x2, MSR_4x2, MSR_2x4, MSR_4x4, MSR_Count, MSR_MAX, __typeKeyDoNoAccess}
    class ParameterGroupData {
        constructor();
        constructor(GroupName: string, GroupSortPriority: number);
        GroupName: string;
        GroupSortPriority: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParameterGroupData_0__: boolean;
    }
    
    enum EBlendableLocation { BL_AfterTonemapping, BL_BeforeTonemapping, BL_BeforeTranslucency, BL_ReplacingTonemapper, BL_SSRInput, BL_MAX, __typeKeyDoNoAccess}
    enum EMaterialStencilCompare { MSC_Less, MSC_LessEqual, MSC_Greater, MSC_GreaterEqual, MSC_Equal, MSC_NotEqual, MSC_Never, MSC_Always, MSC_Count, MSC_MAX, __typeKeyDoNoAccess}
    enum ERefractionMode { RM_IndexOfRefraction, RM_PixelNormalOffset, RM_MAX, __typeKeyDoNoAccess}
    class MaterialCachedParameterEntry {
        constructor();
        constructor(NameHashes: TArray<bigint>, ParameterInfos: TArray<UE.MaterialParameterInfo>, ExpressionGuids: TArray<UE.Guid>, Overrides: TArray<boolean>);
        NameHashes: TArray<bigint>;
        ParameterInfos: TArray<UE.MaterialParameterInfo>;
        ExpressionGuids: TArray<UE.Guid>;
        Overrides: TArray<boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialCachedParameterEntry_0__: boolean;
    }
    
    enum EFontCacheType { Offline, Runtime, EFontCacheType_MAX, __typeKeyDoNoAccess}
    class FontCharacter {
        constructor();
        constructor(StartU: number, StartV: number, USize: number, VSize: number, TextureIndex: number, VerticalOffset: number);
        StartU: number;
        StartV: number;
        USize: number;
        VSize: number;
        TextureIndex: number;
        VerticalOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FontCharacter_0__: boolean;
    }
    
    enum EFontImportCharacterSet { FontICS_Default, FontICS_Ansi, FontICS_Symbol, FontICS_MAX, __typeKeyDoNoAccess}
    class FontImportOptionsData {
        constructor();
        constructor(FontName: string, Height: number, bEnableAntialiasing: boolean, bEnableBold: boolean, bEnableItalic: boolean, bEnableUnderline: boolean, bAlphaOnly: boolean, CharacterSet: UE.EFontImportCharacterSet, Chars: string, UnicodeRange: string, CharsFilePath: string, CharsFileWildcard: string, bCreatePrintableOnly: boolean, bIncludeASCIIRange: boolean, ForegroundColor: UE.LinearColor, bEnableDropShadow: boolean, TexturePageWidth: number, TexturePageMaxHeight: number, XPadding: number, YPadding: number, ExtendBoxTop: number, ExtendBoxBottom: number, ExtendBoxRight: number, ExtendBoxLeft: number, bEnableLegacyMode: boolean, Kerning: number, bUseDistanceFieldAlpha: boolean, DistanceFieldScaleFactor: number, DistanceFieldScanRadiusScale: number);
        FontName: string;
        Height: number;
        bEnableAntialiasing: boolean;
        bEnableBold: boolean;
        bEnableItalic: boolean;
        bEnableUnderline: boolean;
        bAlphaOnly: boolean;
        CharacterSet: UE.EFontImportCharacterSet;
        Chars: string;
        UnicodeRange: string;
        CharsFilePath: string;
        CharsFileWildcard: string;
        bCreatePrintableOnly: boolean;
        bIncludeASCIIRange: boolean;
        ForegroundColor: UE.LinearColor;
        bEnableDropShadow: boolean;
        TexturePageWidth: number;
        TexturePageMaxHeight: number;
        XPadding: number;
        YPadding: number;
        ExtendBoxTop: number;
        ExtendBoxBottom: number;
        ExtendBoxRight: number;
        ExtendBoxLeft: number;
        bEnableLegacyMode: boolean;
        Kerning: number;
        bUseDistanceFieldAlpha: boolean;
        DistanceFieldScaleFactor: number;
        DistanceFieldScanRadiusScale: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FontImportOptionsData_0__: boolean;
    }
    
    enum EFontHinting { Default, Auto, AutoLight, Monochrome, None, EFontHinting_MAX, __typeKeyDoNoAccess}
    enum EFontLoadingPolicy { LazyLoad, Stream, Inline, EFontLoadingPolicy_MAX, __typeKeyDoNoAccess}
    class FontBulkData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontBulkData;
        static Load(InName: string): FontBulkData;
    
        __tid_FontBulkData_0__: boolean;
    }
    
    class FontData {
        constructor();
        constructor(FontFilename: string, Hinting: UE.EFontHinting, LoadingPolicy: UE.EFontLoadingPolicy, SubFaceIndex: number, FontFaceAsset: UE.Object, BulkDataPtr: UE.FontBulkData, FontData: TArray<number>);
        FontFilename: string;
        Hinting: UE.EFontHinting;
        LoadingPolicy: UE.EFontLoadingPolicy;
        SubFaceIndex: number;
        FontFaceAsset: UE.Object;
        BulkDataPtr: UE.FontBulkData;
        FontData: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FontData_0__: boolean;
    }
    
    class TypefaceEntry {
        constructor();
        constructor(Name: string, Font: UE.FontData);
        Name: string;
        Font: UE.FontData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TypefaceEntry_0__: boolean;
    }
    
    class Typeface {
        constructor();
        constructor(Fonts: TArray<UE.TypefaceEntry>);
        Fonts: TArray<UE.TypefaceEntry>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Typeface_0__: boolean;
    }
    
    class CompositeFallbackFont {
        constructor();
        constructor(Typeface: UE.Typeface, ScalingFactor: number);
        Typeface: UE.Typeface;
        ScalingFactor: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompositeFallbackFont_0__: boolean;
    }
    
    enum ERangeBoundTypes { Exclusive, Inclusive, Open, ERangeBoundTypes_MAX, __typeKeyDoNoAccess}
    class Int32RangeBound {
        constructor();
        constructor(Type: UE.ERangeBoundTypes, Value: number);
        Type: UE.ERangeBoundTypes;
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Int32RangeBound_0__: boolean;
    }
    
    class Int32Range {
        constructor();
        constructor(LowerBound: UE.Int32RangeBound, UpperBound: UE.Int32RangeBound);
        LowerBound: UE.Int32RangeBound;
        UpperBound: UE.Int32RangeBound;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Int32Range_0__: boolean;
    }
    
    class CompositeSubFont extends UE.CompositeFallbackFont {
        constructor();
        constructor(CharacterRanges: TArray<UE.Int32Range>, Cultures: string, EditorName: string);
        CharacterRanges: TArray<UE.Int32Range>;
        Cultures: string;
        EditorName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompositeSubFont_0__: boolean;
    }
    
    class CompositeFont {
        constructor();
        constructor(DefaultTypeface: UE.Typeface, FallbackTypeface: UE.CompositeFallbackFont, SubTypefaces: TArray<UE.CompositeSubFont>);
        DefaultTypeface: UE.Typeface;
        FallbackTypeface: UE.CompositeFallbackFont;
        SubTypefaces: TArray<UE.CompositeSubFont>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompositeFont_0__: boolean;
    }
    
    class Font extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FontCacheType: UE.EFontCacheType;
        Characters: TArray<UE.FontCharacter>;
        Textures: TArray<UE.Texture2D>;
        IsRemapped: number;
        EmScale: number;
        Ascent: number;
        Descent: number;
        Leading: number;
        Kerning: number;
        ImportOptions: UE.FontImportOptionsData;
        NumCharacters: number;
        MaxCharHeight: TArray<number>;
        ScalingFactor: number;
        LegacyFontSize: number;
        LegacyFontName: string;
        CompositeFont: UE.CompositeFont;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Font;
        static Load(InName: string): Font;
    
        __tid_Font_0__: boolean;
    }
    
    class StaticComponentMaskValue {
        constructor();
        constructor(R: boolean, G: boolean, B: boolean, A: boolean);
        R: boolean;
        G: boolean;
        B: boolean;
        A: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticComponentMaskValue_0__: boolean;
    }
    
    class CurveBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetImportData: UE.AssetImportData;
        ImportPath: string;
        GetTimeRange(MinTime: $Ref<number>, MaxTime: $Ref<number>) : void;
        GetValueRange(MinValue: $Ref<number>, MaxValue: $Ref<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveBase;
        static Load(InName: string): CurveBase;
    
        __tid_CurveBase_0__: boolean;
    }
    
    class KeyHandleMap {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KeyHandleMap_0__: boolean;
    }
    
    class IndexedCurve {
        constructor();
        constructor(KeyHandlesToIndices: UE.KeyHandleMap);
        KeyHandlesToIndices: UE.KeyHandleMap;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IndexedCurve_0__: boolean;
    }
    
    enum ERichCurveExtrapolation { RCCE_Cycle, RCCE_CycleWithOffset, RCCE_Oscillate, RCCE_Linear, RCCE_Constant, RCCE_None, RCCE_MAX, __typeKeyDoNoAccess}
    class RealCurve extends UE.IndexedCurve {
        constructor();
        constructor(DefaultValue: number, PreInfinityExtrap: UE.ERichCurveExtrapolation, PostInfinityExtrap: UE.ERichCurveExtrapolation);
        DefaultValue: number;
        PreInfinityExtrap: UE.ERichCurveExtrapolation;
        PostInfinityExtrap: UE.ERichCurveExtrapolation;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RealCurve_0__: boolean;
    }
    
    enum ERichCurveInterpMode { RCIM_Linear, RCIM_Constant, RCIM_Cubic, RCIM_None, RCIM_MAX, __typeKeyDoNoAccess}
    enum ERichCurveTangentMode { RCTM_Auto, RCTM_User, RCTM_Break, RCTM_None, RCTM_MAX, __typeKeyDoNoAccess}
    enum ERichCurveTangentWeightMode { RCTWM_WeightedNone, RCTWM_WeightedArrive, RCTWM_WeightedLeave, RCTWM_WeightedBoth, RCTWM_MAX, __typeKeyDoNoAccess}
    class RichCurveKey {
        constructor();
        constructor(InterpMode: UE.ERichCurveInterpMode, TangentMode: UE.ERichCurveTangentMode, TangentWeightMode: UE.ERichCurveTangentWeightMode, Time: number, Value: number, ArriveTangent: number, ArriveTangentWeight: number, LeaveTangent: number, LeaveTangentWeight: number);
        InterpMode: UE.ERichCurveInterpMode;
        TangentMode: UE.ERichCurveTangentMode;
        TangentWeightMode: UE.ERichCurveTangentWeightMode;
        Time: number;
        Value: number;
        ArriveTangent: number;
        ArriveTangentWeight: number;
        LeaveTangent: number;
        LeaveTangentWeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RichCurveKey_0__: boolean;
    }
    
    class RichCurve extends UE.RealCurve {
        constructor();
        constructor(Keys: TArray<UE.RichCurveKey>);
        Keys: TArray<UE.RichCurveKey>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RichCurve_0__: boolean;
    }
    
    class CurveLinearColor extends UE.CurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatCurves: FixSizeArray<UE.RichCurve>;
        AdjustHue: number;
        AdjustSaturation: number;
        AdjustBrightness: number;
        AdjustBrightnessCurve: number;
        AdjustVibrance: number;
        AdjustMinAlpha: number;
        AdjustMaxAlpha: number;
        GetClampedLinearColorValue(InTime: number) : UE.LinearColor;
        GetLinearColorValue(InTime: number) : UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveLinearColor;
        static Load(InName: string): CurveLinearColor;
    
        __tid_CurveLinearColor_0__: boolean;
    }
    
    class CurveLinearColorAtlas extends UE.Texture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsDirty: boolean;
        TextureSize: number;
        GradientCurves: TArray<UE.CurveLinearColor>;
        GetCurvePosition(InCurve: $Nullable<UE.CurveLinearColor>, Position: $Ref<number>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveLinearColorAtlas;
        static Load(InName: string): CurveLinearColorAtlas;
    
        __tid_CurveLinearColorAtlas_0__: boolean;
    }
    
    class ParameterChannelNames {
        constructor();
        constructor(R: string, G: string, B: string, A: string);
        R: string;
        G: string;
        B: string;
        A: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParameterChannelNames_0__: boolean;
    }
    
    class MaterialCachedParameters {
        constructor();
        constructor(RuntimeEntries: FixSizeArray<UE.MaterialCachedParameterEntry>, ScalarValues: TArray<number>, VectorValues: TArray<UE.LinearColor>, TextureValues: TArray<UE.Texture>, FontValues: TArray<UE.Font>, FontPageValues: TArray<number>, RuntimeVirtualTextureValues: TArray<UE.RuntimeVirtualTexture>, EditorOnlyEntries: FixSizeArray<UE.MaterialCachedParameterEntry>, StaticSwitchValues: TArray<boolean>, StaticComponentMaskValues: TArray<UE.StaticComponentMaskValue>, ScalarMinMaxValues: TArray<UE.Vector2D>, ScalarCurveValues: TArray<UE.CurveLinearColor>, ScalarCurveAtlasValues: TArray<UE.CurveLinearColorAtlas>, VectorChannelNameValues: TArray<UE.ParameterChannelNames>, VectorUsedAsChannelMaskValues: TArray<boolean>, TextureChannelNameValues: TArray<UE.ParameterChannelNames>);
        RuntimeEntries: FixSizeArray<UE.MaterialCachedParameterEntry>;
        ScalarValues: TArray<number>;
        VectorValues: TArray<UE.LinearColor>;
        TextureValues: TArray<UE.Texture>;
        FontValues: TArray<UE.Font>;
        FontPageValues: TArray<number>;
        RuntimeVirtualTextureValues: TArray<UE.RuntimeVirtualTexture>;
        EditorOnlyEntries: FixSizeArray<UE.MaterialCachedParameterEntry>;
        StaticSwitchValues: TArray<boolean>;
        StaticComponentMaskValues: TArray<UE.StaticComponentMaskValue>;
        ScalarMinMaxValues: TArray<UE.Vector2D>;
        ScalarCurveValues: TArray<UE.CurveLinearColor>;
        ScalarCurveAtlasValues: TArray<UE.CurveLinearColorAtlas>;
        VectorChannelNameValues: TArray<UE.ParameterChannelNames>;
        VectorUsedAsChannelMaskValues: TArray<boolean>;
        TextureChannelNameValues: TArray<UE.ParameterChannelNames>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialCachedParameters_0__: boolean;
    }
    
    class MaterialFunctionInfo {
        constructor();
        constructor(StateId: UE.Guid, Function: UE.MaterialFunctionInterface);
        StateId: UE.Guid;
        Function: UE.MaterialFunctionInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialFunctionInfo_0__: boolean;
    }
    
    class CollectionParameterBase {
        constructor();
        constructor(ParameterName: string, Id: UE.Guid);
        ParameterName: string;
        Id: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollectionParameterBase_0__: boolean;
    }
    
    class CollectionScalarParameter extends UE.CollectionParameterBase {
        constructor();
        constructor(DefaultValue: number);
        DefaultValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollectionScalarParameter_0__: boolean;
    }
    
    class CollectionVectorParameter extends UE.CollectionParameterBase {
        constructor();
        constructor(DefaultValue: UE.LinearColor);
        DefaultValue: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollectionVectorParameter_0__: boolean;
    }
    
    class MaterialParameterCollection extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StateId: UE.Guid;
        ScalarParameters: TArray<UE.CollectionScalarParameter>;
        VectorParameters: TArray<UE.CollectionVectorParameter>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialParameterCollection;
        static Load(InName: string): MaterialParameterCollection;
    
        __tid_MaterialParameterCollection_0__: boolean;
    }
    
    class MaterialParameterCollectionInfo {
        constructor();
        constructor(StateId: UE.Guid, ParameterCollection: UE.MaterialParameterCollection);
        StateId: UE.Guid;
        ParameterCollection: UE.MaterialParameterCollection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialParameterCollectionInfo_0__: boolean;
    }
    
    class MeshBuildSettings {
        constructor();
        constructor(bUseMikkTSpace: boolean, bRecomputeNormals: boolean, bRecomputeTangents: boolean, bComputeWeightedNormals: boolean, bRemoveDegenerates: boolean, bBuildAdjacencyBuffer: boolean, bBuildReversedIndexBuffer: boolean, bUseHighPrecisionTangentBasis: boolean, bUseFullPrecisionUVs: boolean, bGenerateLightmapUVs: boolean, bGenerateDistanceFieldAsIfTwoSided: boolean, bSupportFaceRemap: boolean, MinLightmapResolution: number, SrcLightmapIndex: number, DstLightmapIndex: number, BuildScale: number, BuildScale3D: UE.Vector, DistanceFieldResolutionScale: number, DistanceFieldBias: number, DistanceFieldReplacementMesh: UE.StaticMesh);
        bUseMikkTSpace: boolean;
        bRecomputeNormals: boolean;
        bRecomputeTangents: boolean;
        bComputeWeightedNormals: boolean;
        bRemoveDegenerates: boolean;
        bBuildAdjacencyBuffer: boolean;
        bBuildReversedIndexBuffer: boolean;
        bUseHighPrecisionTangentBasis: boolean;
        bUseFullPrecisionUVs: boolean;
        bGenerateLightmapUVs: boolean;
        bGenerateDistanceFieldAsIfTwoSided: boolean;
        bSupportFaceRemap: boolean;
        MinLightmapResolution: number;
        SrcLightmapIndex: number;
        DstLightmapIndex: number;
        BuildScale: number;
        BuildScale3D: UE.Vector;
        DistanceFieldResolutionScale: number;
        DistanceFieldBias: number;
        DistanceFieldReplacementMesh: UE.StaticMesh;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshBuildSettings_0__: boolean;
    }
    
    enum EMeshFeatureImportance { Off, Lowest, Low, Normal, High, Highest, EMeshFeatureImportance_MAX, __typeKeyDoNoAccess}
    enum EStaticMeshReductionTerimationCriterion { Triangles, Vertices, Any, EStaticMeshReductionTerimationCriterion_MAX, __typeKeyDoNoAccess}
    class MeshReductionSettings {
        constructor();
        constructor(PercentTriangles: number, PercentVertices: number, MaxDeviation: number, PixelError: number, WeldingThreshold: number, HardAngleThreshold: number, BaseLODModel: number, SilhouetteImportance: UE.EMeshFeatureImportance, TextureImportance: UE.EMeshFeatureImportance, ShadingImportance: UE.EMeshFeatureImportance, bRecalculateNormals: boolean, bGenerateUniqueLightmapUVs: boolean, bKeepSymmetry: boolean, bVisibilityAided: boolean, bCullOccluded: boolean, TerminationCriterion: UE.EStaticMeshReductionTerimationCriterion, VisibilityAggressiveness: UE.EMeshFeatureImportance, VertexColorImportance: UE.EMeshFeatureImportance);
        PercentTriangles: number;
        PercentVertices: number;
        MaxDeviation: number;
        PixelError: number;
        WeldingThreshold: number;
        HardAngleThreshold: number;
        BaseLODModel: number;
        SilhouetteImportance: UE.EMeshFeatureImportance;
        TextureImportance: UE.EMeshFeatureImportance;
        ShadingImportance: UE.EMeshFeatureImportance;
        bRecalculateNormals: boolean;
        bGenerateUniqueLightmapUVs: boolean;
        bKeepSymmetry: boolean;
        bVisibilityAided: boolean;
        bCullOccluded: boolean;
        TerminationCriterion: UE.EStaticMeshReductionTerimationCriterion;
        VisibilityAggressiveness: UE.EMeshFeatureImportance;
        VertexColorImportance: UE.EMeshFeatureImportance;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshReductionSettings_0__: boolean;
    }
    
    class StaticMeshSourceModel {
        constructor();
        constructor(BuildSettings: UE.MeshBuildSettings, ReductionSettings: UE.MeshReductionSettings, LODDistance: number, ScreenSize: UE.PerPlatformFloat, SourceImportFilename: string, bImportWithBaseMesh: boolean);
        BuildSettings: UE.MeshBuildSettings;
        ReductionSettings: UE.MeshReductionSettings;
        LODDistance: number;
        ScreenSize: UE.PerPlatformFloat;
        SourceImportFilename: string;
        bImportWithBaseMesh: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticMeshSourceModel_0__: boolean;
    }
    
    class MeshSectionInfo {
        constructor();
        constructor(MaterialIndex: number, bEnableCollision: boolean, bCastShadow: boolean, bVisibleInRayTracing: boolean, bForceOpaque: boolean);
        MaterialIndex: number;
        bEnableCollision: boolean;
        bCastShadow: boolean;
        bVisibleInRayTracing: boolean;
        bForceOpaque: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshSectionInfo_0__: boolean;
    }
    
    class MeshSectionInfoMap {
        constructor();
        constructor(Map: TMap<number, UE.MeshSectionInfo>);
        Map: TMap<number, UE.MeshSectionInfo>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshSectionInfoMap_0__: boolean;
    }
    
    class PerPlatformInt {
        constructor();
        constructor(Default: number, PerPlatform: TMap<string, number>);
        Default: number;
        PerPlatform: TMap<string, number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PerPlatformInt_0__: boolean;
    }
    
    class MaterialRemapIndex {
        constructor();
        constructor(ImportVersionKey: number, MaterialRemap: TArray<number>);
        ImportVersionKey: number;
        MaterialRemap: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialRemapIndex_0__: boolean;
    }
    
    class MeshUVChannelInfo {
        constructor();
        constructor(bInitialized: boolean, bOverrideDensities: boolean, LocalUVDensities: FixSizeArray<number>);
        bInitialized: boolean;
        bOverrideDensities: boolean;
        LocalUVDensities: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshUVChannelInfo_0__: boolean;
    }
    
    class StaticMaterial {
        constructor();
        constructor(MaterialInterface: UE.MaterialInterface, MaterialSlotName: string, ImportedMaterialSlotName: string, UVChannelData: UE.MeshUVChannelInfo);
        MaterialInterface: UE.MaterialInterface;
        MaterialSlotName: string;
        ImportedMaterialSlotName: string;
        UVChannelData: UE.MeshUVChannelInfo;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticMaterial_0__: boolean;
    }
    
    enum EPhysicsType { PhysType_Default, PhysType_Kinematic, PhysType_Simulated, PhysType_MAX, __typeKeyDoNoAccess}
    enum ECollisionTraceFlag { CTF_UseDefault, CTF_UseSimpleAndComplex, CTF_UseSimpleAsComplex, CTF_UseComplexAsSimple, CTF_MAX, __typeKeyDoNoAccess}
    enum EBodyCollisionResponse { BodyCollision_Enabled, BodyCollision_Disabled, BodyCollision_MAX, __typeKeyDoNoAccess}
    class BodySetupCore extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoneName: string;
        PhysicsType: UE.EPhysicsType;
        CollisionTraceFlag: UE.ECollisionTraceFlag;
        CollisionReponse: UE.EBodyCollisionResponse;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BodySetupCore;
        static Load(InName: string): BodySetupCore;
    
        __tid_BodySetupCore_0__: boolean;
    }
    
    class KShapeElem {
        constructor();
        constructor(RestOffset: number, bIsGenerated: boolean, Name: string, bContributeToMass: boolean, CollisionEnabled: UE.ECollisionEnabled);
        RestOffset: number;
        bIsGenerated: boolean;
        Name: string;
        bContributeToMass: boolean;
        CollisionEnabled: UE.ECollisionEnabled;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KShapeElem_0__: boolean;
    }
    
    class Plane extends UE.Vector {
        constructor();
        constructor(W: number);
        W: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Plane_0__: boolean;
    }
    
    class Matrix {
        constructor();
        constructor(XPlane: UE.Plane, YPlane: UE.Plane, ZPlane: UE.Plane, WPlane: UE.Plane);
        XPlane: UE.Plane;
        YPlane: UE.Plane;
        ZPlane: UE.Plane;
        WPlane: UE.Plane;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Matrix_0__: boolean;
    }
    
    class KSphereElem extends UE.KShapeElem {
        constructor();
        constructor(TM: UE.Matrix, Center: UE.Vector, Radius: number);
        TM: UE.Matrix;
        Center: UE.Vector;
        Radius: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KSphereElem_0__: boolean;
    }
    
    class KBoxElem extends UE.KShapeElem {
        constructor();
        constructor(TM: UE.Matrix, Orientation: UE.Quat, Center: UE.Vector, Rotation: UE.Rotator, X: number, Y: number, Z: number);
        TM: UE.Matrix;
        Orientation: UE.Quat;
        Center: UE.Vector;
        Rotation: UE.Rotator;
        X: number;
        Y: number;
        Z: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KBoxElem_0__: boolean;
    }
    
    class KSphylElem extends UE.KShapeElem {
        constructor();
        constructor(TM: UE.Matrix, Orientation: UE.Quat, Center: UE.Vector, Rotation: UE.Rotator, Radius: number, Length: number);
        TM: UE.Matrix;
        Orientation: UE.Quat;
        Center: UE.Vector;
        Rotation: UE.Rotator;
        Radius: number;
        Length: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KSphylElem_0__: boolean;
    }
    
    class Box {
        constructor();
        constructor(Min: UE.Vector, Max: UE.Vector, IsValid: number);
        Min: UE.Vector;
        Max: UE.Vector;
        IsValid: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Box_0__: boolean;
    }
    
    class KConvexElem extends UE.KShapeElem {
        constructor();
        constructor(VertexData: TArray<UE.Vector>, IndexData: TArray<number>, ElemBox: UE.Box, Transform: UE.Transform);
        VertexData: TArray<UE.Vector>;
        IndexData: TArray<number>;
        ElemBox: UE.Box;
        Transform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KConvexElem_0__: boolean;
    }
    
    class KTaperedCapsuleElem extends UE.KShapeElem {
        constructor();
        constructor(Center: UE.Vector, Rotation: UE.Rotator, Radius0: number, Radius1: number, Length: number);
        Center: UE.Vector;
        Rotation: UE.Rotator;
        Radius0: number;
        Radius1: number;
        Length: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KTaperedCapsuleElem_0__: boolean;
    }
    
    class KAggregateGeom {
        constructor();
        constructor(SphereElems: TArray<UE.KSphereElem>, BoxElems: TArray<UE.KBoxElem>, SphylElems: TArray<UE.KSphylElem>, ConvexElems: TArray<UE.KConvexElem>, TaperedCapsuleElems: TArray<UE.KTaperedCapsuleElem>);
        SphereElems: TArray<UE.KSphereElem>;
        BoxElems: TArray<UE.KBoxElem>;
        SphylElems: TArray<UE.KSphylElem>;
        ConvexElems: TArray<UE.KConvexElem>;
        TaperedCapsuleElems: TArray<UE.KTaperedCapsuleElem>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KAggregateGeom_0__: boolean;
    }
    
    class BodySetup extends UE.BodySetupCore {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AggGeom: UE.KAggregateGeom;
        bAlwaysFullAnimWeight: boolean;
        bConsiderForBounds: boolean;
        bMeshCollideAll: boolean;
        bDoubleSidedGeometry: boolean;
        bGenerateNonMirroredCollision: boolean;
        bSharedCookedData: boolean;
        bGenerateMirroredCollision: boolean;
        bSupportUVsAndFaceRemap: boolean;
        PhysMaterial: UE.PhysicalMaterial;
        WalkableSlopeOverride: UE.WalkableSlopeOverride;
        BuildScale: number;
        DefaultInstance: UE.BodyInstance;
        BuildScale3D: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BodySetup;
        static Load(InName: string): BodySetup;
    
        __tid_BodySetup_0__: boolean;
    }
    
    class AssetEditorOrbitCameraPosition {
        constructor();
        constructor(bIsSet: boolean, CamOrbitPoint: UE.Vector, CamOrbitZoom: UE.Vector, CamOrbitRotation: UE.Rotator);
        bIsSet: boolean;
        CamOrbitPoint: UE.Vector;
        CamOrbitZoom: UE.Vector;
        CamOrbitRotation: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetEditorOrbitCameraPosition_0__: boolean;
    }
    
    class StaticMeshSocket extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SocketName: string;
        RelativeLocation: UE.Vector;
        RelativeRotation: UE.Rotator;
        RelativeScale: UE.Vector;
        Tag: string;
        PreviewStaticMesh: UE.StaticMesh;
        bSocketCreatedAtImport: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshSocket;
        static Load(InName: string): StaticMeshSocket;
    
        __tid_StaticMeshSocket_0__: boolean;
    }
    
    class BoxSphereBounds {
        constructor();
        constructor(Origin: UE.Vector, BoxExtent: UE.Vector, SphereRadius: number);
        Origin: UE.Vector;
        BoxExtent: UE.Vector;
        SphereRadius: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoxSphereBounds_0__: boolean;
    }
    
    class NavCollisionBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsDynamicObstacle: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavCollisionBase;
        static Load(InName: string): NavCollisionBase;
    
        __tid_NavCollisionBase_0__: boolean;
    }
    
    class ElementID {
        constructor();
        constructor(IDValue: number);
        IDValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ElementID_0__: boolean;
    }
    
    class VertexID extends UE.ElementID {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexID_0__: boolean;
    }
    
    class PolygonID extends UE.ElementID {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PolygonID_0__: boolean;
    }
    
    class VertexInstanceID extends UE.ElementID {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexInstanceID_0__: boolean;
    }
    
    class PolygonGroupID extends UE.ElementID {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PolygonGroupID_0__: boolean;
    }
    
    class TriangleID extends UE.ElementID {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TriangleID_0__: boolean;
    }
    
    class EdgeID extends UE.ElementID {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdgeID_0__: boolean;
    }
    
    class MeshDescriptionBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComputePolygonTriangulation(PolygonID: UE.PolygonID) : void;
        CreateEdge(VertexID0: UE.VertexID, VertexID1: UE.VertexID) : UE.EdgeID;
        CreateEdgeWithID(EdgeID: UE.EdgeID, VertexID0: UE.VertexID, VertexID1: UE.VertexID) : void;
        CreatePolygon(PolygonGroupID: UE.PolygonGroupID, VertexInstanceIDs: $Ref<TArray<UE.VertexInstanceID>>, NewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : UE.PolygonID;
        CreatePolygonGroup() : UE.PolygonGroupID;
        CreatePolygonGroupWithID(PolygonGroupID: UE.PolygonGroupID) : void;
        CreatePolygonWithID(PolygonID: UE.PolygonID, PolygonGroupID: UE.PolygonGroupID, VertexInstanceIDs: $Ref<TArray<UE.VertexInstanceID>>, NewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        CreateTriangle(PolygonGroupID: UE.PolygonGroupID, VertexInstanceIDs: TArray<UE.VertexInstanceID>, NewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : UE.TriangleID;
        CreateTriangleWithID(TriangleID: UE.TriangleID, PolygonGroupID: UE.PolygonGroupID, VertexInstanceIDs: TArray<UE.VertexInstanceID>, NewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        CreateVertex() : UE.VertexID;
        CreateVertexInstance(VertexID: UE.VertexID) : UE.VertexInstanceID;
        CreateVertexInstanceWithID(VertexInstanceID: UE.VertexInstanceID, VertexID: UE.VertexID) : void;
        CreateVertexWithID(VertexID: UE.VertexID) : void;
        DeleteEdge(EdgeID: UE.EdgeID, OrphanedVertices: $Ref<TArray<UE.VertexID>>) : void;
        DeletePolygon(PolygonID: UE.PolygonID, OrphanedEdges: $Ref<TArray<UE.EdgeID>>, OrphanedVertexInstances: $Ref<TArray<UE.VertexInstanceID>>, OrphanedPolygonGroups: $Ref<TArray<UE.PolygonGroupID>>) : void;
        DeletePolygonGroup(PolygonGroupID: UE.PolygonGroupID) : void;
        DeleteTriangle(TriangleID: UE.TriangleID, OrphanedEdges: $Ref<TArray<UE.EdgeID>>, OrphanedVertexInstances: $Ref<TArray<UE.VertexInstanceID>>, OrphanedPolygonGroupsPtr: $Ref<TArray<UE.PolygonGroupID>>) : void;
        DeleteVertex(VertexID: UE.VertexID) : void;
        DeleteVertexInstance(VertexInstanceID: UE.VertexInstanceID, OrphanedVertices: $Ref<TArray<UE.VertexID>>) : void;
        Empty() : void;
        GetEdgeConnectedPolygons(EdgeID: UE.EdgeID, OutConnectedPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetEdgeConnectedTriangles(EdgeID: UE.EdgeID, OutConnectedTriangleIDs: $Ref<TArray<UE.TriangleID>>) : void;
        GetEdgeVertex(EdgeID: UE.EdgeID, VertexNumber: number) : UE.VertexID;
        GetEdgeVertices(EdgeID: UE.EdgeID, OutVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        GetNumEdgeConnectedPolygons(EdgeID: UE.EdgeID) : number;
        GetNumEdgeConnectedTriangles(EdgeID: UE.EdgeID) : number;
        GetNumPolygonGroupPolygons(PolygonGroupID: UE.PolygonGroupID) : number;
        GetNumPolygonInternalEdges(PolygonID: UE.PolygonID) : number;
        GetNumPolygonTriangles(PolygonID: UE.PolygonID) : number;
        GetNumPolygonVertices(PolygonID: UE.PolygonID) : number;
        GetNumVertexConnectedEdges(VertexID: UE.VertexID) : number;
        GetNumVertexConnectedPolygons(VertexID: UE.VertexID) : number;
        GetNumVertexConnectedTriangles(VertexID: UE.VertexID) : number;
        GetNumVertexInstanceConnectedPolygons(VertexInstanceID: UE.VertexInstanceID) : number;
        GetNumVertexInstanceConnectedTriangles(VertexInstanceID: UE.VertexInstanceID) : number;
        GetNumVertexVertexInstances(VertexID: UE.VertexID) : number;
        GetPolygonAdjacentPolygons(PolygonID: UE.PolygonID, OutPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetPolygonGroupPolygons(PolygonGroupID: UE.PolygonGroupID, OutPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetPolygonInternalEdges(PolygonID: UE.PolygonID, OutEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        GetPolygonPerimeterEdges(PolygonID: UE.PolygonID, OutEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        GetPolygonPolygonGroup(PolygonID: UE.PolygonID) : UE.PolygonGroupID;
        GetPolygonTriangles(PolygonID: UE.PolygonID, OutTriangleIDs: $Ref<TArray<UE.TriangleID>>) : void;
        GetPolygonVertexInstances(PolygonID: UE.PolygonID, OutVertexInstanceIDs: $Ref<TArray<UE.VertexInstanceID>>) : void;
        GetPolygonVertices(PolygonID: UE.PolygonID, OutVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        GetTriangleAdjacentTriangles(TriangleID: UE.TriangleID, OutTriangleIDs: $Ref<TArray<UE.TriangleID>>) : void;
        GetTriangleEdges(TriangleID: UE.TriangleID, OutEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        GetTrianglePolygon(TriangleID: UE.TriangleID) : UE.PolygonID;
        GetTrianglePolygonGroup(TriangleID: UE.TriangleID) : UE.PolygonGroupID;
        GetTriangleVertexInstance(TriangleID: UE.TriangleID, Index: number) : UE.VertexInstanceID;
        GetTriangleVertexInstances(TriangleID: UE.TriangleID, OutVertexInstanceIDs: $Ref<TArray<UE.VertexInstanceID>>) : void;
        GetTriangleVertices(TriangleID: UE.TriangleID, OutVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        GetVertexAdjacentVertices(VertexID: UE.VertexID, OutAdjacentVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        GetVertexConnectedEdges(VertexID: UE.VertexID, OutEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        GetVertexConnectedPolygons(VertexID: UE.VertexID, OutConnectedPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetVertexConnectedTriangles(VertexID: UE.VertexID, OutConnectedTriangleIDs: $Ref<TArray<UE.TriangleID>>) : void;
        GetVertexInstanceConnectedPolygons(VertexInstanceID: UE.VertexInstanceID, OutConnectedPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetVertexInstanceConnectedTriangles(VertexInstanceID: UE.VertexInstanceID, OutConnectedTriangleIDs: $Ref<TArray<UE.TriangleID>>) : void;
        GetVertexInstanceForPolygonVertex(PolygonID: UE.PolygonID, VertexID: UE.VertexID) : UE.VertexInstanceID;
        GetVertexInstanceForTriangleVertex(TriangleID: UE.TriangleID, VertexID: UE.VertexID) : UE.VertexInstanceID;
        GetVertexInstancePairEdge(VertexInstanceID0: UE.VertexInstanceID, VertexInstanceID1: UE.VertexInstanceID) : UE.EdgeID;
        GetVertexInstanceVertex(VertexInstanceID: UE.VertexInstanceID) : UE.VertexID;
        GetVertexPairEdge(VertexID0: UE.VertexID, VertexID1: UE.VertexID) : UE.EdgeID;
        GetVertexPosition(VertexID: UE.VertexID) : UE.Vector;
        GetVertexVertexInstances(VertexID: UE.VertexID, OutVertexInstanceIDs: $Ref<TArray<UE.VertexInstanceID>>) : void;
        IsEdgeInternal(EdgeID: UE.EdgeID) : boolean;
        IsEdgeInternalToPolygon(EdgeID: UE.EdgeID, PolygonID: UE.PolygonID) : boolean;
        IsEdgeValid(EdgeID: UE.EdgeID) : boolean;
        IsEmpty() : boolean;
        IsPolygonGroupValid(PolygonGroupID: UE.PolygonGroupID) : boolean;
        IsPolygonValid(PolygonID: UE.PolygonID) : boolean;
        IsTrianglePartOfNgon(TriangleID: UE.TriangleID) : boolean;
        IsTriangleValid(TriangleID: UE.TriangleID) : boolean;
        IsVertexInstanceValid(VertexInstanceID: UE.VertexInstanceID) : boolean;
        IsVertexOrphaned(VertexID: UE.VertexID) : boolean;
        IsVertexValid(VertexID: UE.VertexID) : boolean;
        ReserveNewEdges(NumberOfNewEdges: number) : void;
        ReserveNewPolygonGroups(NumberOfNewPolygonGroups: number) : void;
        ReserveNewPolygons(NumberOfNewPolygons: number) : void;
        ReserveNewTriangles(NumberOfNewTriangles: number) : void;
        ReserveNewVertexInstances(NumberOfNewVertexInstances: number) : void;
        ReserveNewVertices(NumberOfNewVertices: number) : void;
        ReversePolygonFacing(PolygonID: UE.PolygonID) : void;
        SetPolygonPolygonGroup(PolygonID: UE.PolygonID, PolygonGroupID: UE.PolygonGroupID) : void;
        SetPolygonVertexInstance(PolygonID: UE.PolygonID, PerimeterIndex: number, VertexInstanceID: UE.VertexInstanceID) : void;
        SetVertexPosition(VertexID: UE.VertexID, Position: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshDescriptionBase;
        static Load(InName: string): MeshDescriptionBase;
    
        __tid_MeshDescriptionBase_0__: boolean;
    }
    
    class StaticMeshDescription extends UE.MeshDescriptionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreateCube(Center: UE.Vector, HalfExtents: UE.Vector, PolygonGroup: UE.PolygonGroupID, PolygonID_PlusX: $Ref<UE.PolygonID>, PolygonID_MinusX: $Ref<UE.PolygonID>, PolygonID_PlusY: $Ref<UE.PolygonID>, PolygonID_MinusY: $Ref<UE.PolygonID>, PolygonID_PlusZ: $Ref<UE.PolygonID>, PolygonID_MinusZ: $Ref<UE.PolygonID>) : void;
        GetVertexInstanceUV(VertexInstanceID: UE.VertexInstanceID, UVIndex?: number /* = 0 */) : UE.Vector2D;
        SetPolygonGroupMaterialSlotName(PolygonGroupID: UE.PolygonGroupID, SlotName: string) : void;
        SetVertexInstanceUV(VertexInstanceID: UE.VertexInstanceID, UV: UE.Vector2D, UVIndex?: number /* = 0 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshDescription;
        static Load(InName: string): StaticMeshDescription;
    
        __tid_StaticMeshDescription_0__: boolean;
    }
    
    class StaticMesh extends UE.StreamableRenderAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceModels: TArray<UE.StaticMeshSourceModel>;
        SectionInfoMap: UE.MeshSectionInfoMap;
        OriginalSectionInfoMap: UE.MeshSectionInfoMap;
        LODGroup: string;
        NumStreamedLODs: UE.PerPlatformInt;
        ImportVersion: number;
        MaterialRemapIndexPerImportVersion: TArray<UE.MaterialRemapIndex>;
        LightmapUVVersion: number;
        bAutoComputeLODScreenSize: boolean;
        Materials: TArray<UE.MaterialInterface>;
        MinLOD: UE.PerPlatformInt;
        LpvBiasMultiplier: number;
        StaticMaterials: TArray<UE.StaticMaterial>;
        LightmapUVDensity: number;
        LightMapResolution: number;
        LightMapCoordinateIndex: number;
        DistanceFieldSelfShadowBias: number;
        BodySetup: UE.BodySetup;
        LODForCollision: number;
        bGenerateMeshDistanceField: boolean;
        bStripComplexCollisionForConsole: boolean;
        bHasNavigationData: boolean;
        bSupportUniformlyDistributedSampling: boolean;
        bSupportPhysicalMaterialMasks: boolean;
        bIsBuiltAtRuntime: boolean;
        bAllowCPUAccess: boolean;
        bSupportGpuUniformlyDistributedSampling: boolean;
        AssetImportData: UE.AssetImportData;
        SourceFilePath: string;
        SourceFileTimestamp: string;
        ThumbnailInfo: UE.ThumbnailInfo;
        EditorCameraPosition: UE.AssetEditorOrbitCameraPosition;
        bCustomizedCollision: boolean;
        LODForOccluderMesh: number;
        Sockets: TArray<UE.StaticMeshSocket>;
        PositiveBoundsExtension: UE.Vector;
        NegativeBoundsExtension: UE.Vector;
        ExtendedBounds: UE.BoxSphereBounds;
        ElementToIgnoreForTexFactor: number;
        AssetUserData: TArray<UE.AssetUserData>;
        EditableMesh: UE.Object;
        ComplexCollisionMesh: UE.StaticMesh;
        NavCollision: UE.NavCollisionBase;
        AddMaterial(Material: $Nullable<UE.MaterialInterface>) : string;
        AddSocket(Socket: $Nullable<UE.StaticMeshSocket>) : void;
        BuildFromStaticMeshDescriptions(StaticMeshDescriptions: TArray<UE.StaticMeshDescription>, bBuildSimpleCollision?: boolean /* = false */) : void;
        FindSocket(InSocketName: string) : UE.StaticMeshSocket;
        GetBoundingBox() : UE.Box;
        GetBounds() : UE.BoxSphereBounds;
        GetMaterial(MaterialIndex: number) : UE.MaterialInterface;
        GetMaterialIndex(MaterialSlotName: string) : number;
        GetMinimumLODForPlatform(PlatformName: string) : number;
        GetMinimumLODForPlatforms(PlatformMinimumLODs: $Ref<TMap<string, number>>) : void;
        GetNumLODs() : number;
        GetNumSections(InLOD: number) : number;
        RemoveSocket(Socket: $Nullable<UE.StaticMeshSocket>) : void;
        SetLODGroup(NewGroup: string, bRebuildImmediately?: boolean /* = true */) : void;
        SetMaterial(MaterialIndex: number, NewMaterial: $Nullable<UE.MaterialInterface>) : void;
        SetNumSourceModels(Num: number) : void;
        static CreateStaticMeshDescription(Outer?: UE.Object /* = None */) : UE.StaticMeshDescription;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMesh;
        static Load(InName: string): StaticMesh;
    
        __tid_StaticMesh_0__: boolean;
    }
    
    enum EGrassScaling { Uniform, Free, LockXY, EGrassScaling_MAX, __typeKeyDoNoAccess}
    class FloatInterval {
        constructor();
        constructor(Min: number, Max: number);
        Min: number;
        Max: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FloatInterval_0__: boolean;
    }
    
    class GrassVariety {
        constructor();
        constructor(GrassMesh: UE.StaticMesh, OverrideMaterials: TArray<UE.MaterialInterface>, GrassDensity: UE.PerPlatformFloat, bUseGrid: boolean, PlacementJitter: number, StartCullDistance: UE.PerPlatformInt, EndCullDistance: UE.PerPlatformInt, MinLOD: number, Scaling: UE.EGrassScaling, ScaleX: UE.FloatInterval, ScaleY: UE.FloatInterval, ScaleZ: UE.FloatInterval, RandomRotation: boolean, AlignToSurface: boolean, bUseLandscapeLightmap: boolean, LightingChannels: UE.LightingChannels, bReceivesDecals: boolean, bCastDynamicShadow: boolean, bKeepInstanceBufferCPUCopy: boolean);
        GrassMesh: UE.StaticMesh;
        OverrideMaterials: TArray<UE.MaterialInterface>;
        GrassDensity: UE.PerPlatformFloat;
        bUseGrid: boolean;
        PlacementJitter: number;
        StartCullDistance: UE.PerPlatformInt;
        EndCullDistance: UE.PerPlatformInt;
        MinLOD: number;
        Scaling: UE.EGrassScaling;
        ScaleX: UE.FloatInterval;
        ScaleY: UE.FloatInterval;
        ScaleZ: UE.FloatInterval;
        RandomRotation: boolean;
        AlignToSurface: boolean;
        bUseLandscapeLightmap: boolean;
        LightingChannels: UE.LightingChannels;
        bReceivesDecals: boolean;
        bCastDynamicShadow: boolean;
        bKeepInstanceBufferCPUCopy: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GrassVariety_0__: boolean;
    }
    
    class LandscapeGrassType extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GrassVarieties: TArray<UE.GrassVariety>;
        bEnableDensityScaling: boolean;
        GrassMesh: UE.StaticMesh;
        GrassDensity: number;
        PlacementJitter: number;
        StartCullDistance: number;
        EndCullDistance: number;
        RandomRotation: boolean;
        AlignToSurface: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeGrassType;
        static Load(InName: string): LandscapeGrassType;
    
        __tid_LandscapeGrassType_0__: boolean;
    }
    
    class MaterialCachedExpressionData {
        constructor();
        constructor(Parameters: UE.MaterialCachedParameters, ReferencedTextures: TArray<UE.Object>, FunctionInfos: TArray<UE.MaterialFunctionInfo>, ParameterCollectionInfos: TArray<UE.MaterialParameterCollectionInfo>, DefaultLayers: TArray<UE.MaterialFunctionInterface>, DefaultLayerBlends: TArray<UE.MaterialFunctionInterface>, GrassTypes: TArray<UE.LandscapeGrassType>, DynamicParameterNames: TArray<string>, QualityLevelsUsed: TArray<boolean>, bHasRuntimeVirtualTextureOutput: boolean, bHasSceneColor: boolean);
        Parameters: UE.MaterialCachedParameters;
        ReferencedTextures: TArray<UE.Object>;
        FunctionInfos: TArray<UE.MaterialFunctionInfo>;
        ParameterCollectionInfos: TArray<UE.MaterialParameterCollectionInfo>;
        DefaultLayers: TArray<UE.MaterialFunctionInterface>;
        DefaultLayerBlends: TArray<UE.MaterialFunctionInterface>;
        GrassTypes: TArray<UE.LandscapeGrassType>;
        DynamicParameterNames: TArray<string>;
        QualityLevelsUsed: TArray<boolean>;
        bHasRuntimeVirtualTextureOutput: boolean;
        bHasSceneColor: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialCachedExpressionData_0__: boolean;
    }
    
    class Material extends UE.MaterialInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysMaterial: UE.PhysicalMaterial;
        PhysMaterialMask: UE.PhysicalMaterialMask;
        PhysicalMaterialMap: FixSizeArray<UE.PhysicalMaterial>;
        DiffuseColor: UE.ColorMaterialInput;
        SpecularColor: UE.ColorMaterialInput;
        BaseColor: UE.ColorMaterialInput;
        Metallic: UE.ScalarMaterialInput;
        Specular: UE.ScalarMaterialInput;
        Roughness: UE.ScalarMaterialInput;
        Anisotropy: UE.ScalarMaterialInput;
        Normal: UE.VectorMaterialInput;
        Tangent: UE.VectorMaterialInput;
        EmissiveColor: UE.ColorMaterialInput;
        Opacity: UE.ScalarMaterialInput;
        OpacityMask: UE.ScalarMaterialInput;
        MaterialDomain: UE.EMaterialDomain;
        BlendMode: UE.EBlendMode;
        DecalBlendMode: UE.EDecalBlendMode;
        MaterialDecalResponse: UE.EMaterialDecalResponse;
        ShadingModel: UE.EMaterialShadingModel;
        bCastDynamicShadowAsMasked: boolean;
        ShadingModels: UE.MaterialShadingModelField;
        UsedShadingModels: string;
        OpacityMaskClipValue: number;
        WorldPositionOffset: UE.VectorMaterialInput;
        WorldDisplacement: UE.VectorMaterialInput;
        TessellationMultiplier: UE.ScalarMaterialInput;
        SubsurfaceColor: UE.ColorMaterialInput;
        ClearCoat: UE.ScalarMaterialInput;
        ClearCoatRoughness: UE.ScalarMaterialInput;
        AmbientOcclusion: UE.ScalarMaterialInput;
        Refraction: UE.ScalarMaterialInput;
        CustomizedUVs: FixSizeArray<UE.Vector2MaterialInput>;
        MaterialAttributes: UE.MaterialAttributesInput;
        PixelDepthOffset: UE.ScalarMaterialInput;
        ShadingModelFromMaterialExpression: UE.ShadingModelMaterialInput;
        bEnableSeparateTranslucency: boolean;
        bEnableResponsiveAA: boolean;
        bScreenSpaceReflections: boolean;
        bContactShadows: boolean;
        TwoSided: boolean;
        DitheredLODTransition: boolean;
        DitherOpacityMask: boolean;
        bAllowNegativeEmissiveColor: boolean;
        TranslucencyLightingMode: UE.ETranslucencyLightingMode;
        bEnableMobileSeparateTranslucency: boolean;
        NumCustomizedUVs: number;
        TranslucencyDirectionalLightingIntensity: number;
        TranslucentShadowDensityScale: number;
        TranslucentSelfShadowDensityScale: number;
        TranslucentSelfShadowSecondDensityScale: number;
        TranslucentSelfShadowSecondOpacity: number;
        TranslucentBackscatteringExponent: number;
        TranslucentMultipleScatteringExtinction: UE.LinearColor;
        TranslucentShadowStartOffset: number;
        bDisableDepthTest: boolean;
        bWriteOnlyAlpha: boolean;
        bGenerateSphericalParticleNormals: boolean;
        bTangentSpaceNormal: boolean;
        bUseEmissiveForDynamicAreaLighting: boolean;
        bBlockGI: boolean;
        bUsedAsSpecialEngineMaterial: boolean;
        bUsedWithSkeletalMesh: boolean;
        bUsedWithEditorCompositing: boolean;
        bUsedWithParticleSprites: boolean;
        bUsedWithBeamTrails: boolean;
        bUsedWithMeshParticles: boolean;
        bUsedWithNiagaraSprites: boolean;
        bUsedWithNiagaraRibbons: boolean;
        bUsedWithNiagaraMeshParticles: boolean;
        bUsedWithGeometryCache: boolean;
        bUsedWithStaticLighting: boolean;
        bUsedWithMorphTargets: boolean;
        bUsedWithSplineMeshes: boolean;
        bUsedWithInstancedStaticMeshes: boolean;
        bUsedWithGeometryCollections: boolean;
        bUsesDistortion: boolean;
        bUsedWithClothing: boolean;
        bUsedWithWater: boolean;
        bUsedWithHairStrands: boolean;
        bUsedWithLidarPointCloud: boolean;
        bUsedWithVirtualHeightfieldMesh: boolean;
        bUsedWithUI: boolean;
        bAutomaticallySetUsageInEditor: boolean;
        bFullyRough: boolean;
        bUseFullPrecision: boolean;
        bUseLightmapDirectionality: boolean;
        bUseAlphaToCoverage: boolean;
        bForwardRenderUsePreintegratedGFForSimpleIBL: boolean;
        bUseHQForwardReflections: boolean;
        bUsePlanarForwardReflections: boolean;
        bNormalCurvatureToRoughness: boolean;
        D3D11TessellationMode: UE.EMaterialTessellationMode;
        bEnableCrackFreeDisplacement: boolean;
        bEnableAdaptiveTessellation: boolean;
        AllowTranslucentCustomDepthWrites: boolean;
        Wireframe: boolean;
        ShadingRate: UE.EMaterialShadingRate;
        EditorX: number;
        EditorY: number;
        EditorPitch: number;
        EditorYaw: number;
        Expressions: TArray<UE.MaterialExpression>;
        EditorComments: TArray<UE.MaterialExpressionComment>;
        ParameterGroupData: TArray<UE.ParameterGroupData>;
        bCanMaskedBeAssumedOpaque: boolean;
        bIsMasked: boolean;
        bIsPreviewMaterial: boolean;
        bIsFunctionPreviewMaterial: boolean;
        bUseMaterialAttributes: boolean;
        bCastRayTracedShadows: boolean;
        bUseTranslucencyVertexFog: boolean;
        bApplyCloudFogging: boolean;
        bIsSky: boolean;
        bComputeFogPerPixel: boolean;
        bOutputTranslucentVelocity: boolean;
        bAllowDevelopmentShaderCompile: boolean;
        bIsMaterialEditorStatsMaterial: boolean;
        BlendableLocation: UE.EBlendableLocation;
        BlendableOutputAlpha: boolean;
        bEnableStencilTest: boolean;
        StencilCompare: UE.EMaterialStencilCompare;
        StencilRefValue: number;
        RefractionMode: UE.ERefractionMode;
        BlendablePriority: number;
        bIsBlendable: boolean;
        UsageFlagWarnings: number;
        RefractionDepthBias: number;
        StateId: UE.Guid;
        MaxDisplacement: number;
        CachedExpressionData: UE.MaterialCachedExpressionData;
        ReferencedTextureGuids: TArray<UE.Guid>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Material;
        static Load(InName: string): Material;
    
        __tid_Material_0__: boolean;
    }
    
    class MaterialInterface extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SubsurfaceProfile: UE.SubsurfaceProfile;
        LightmassSettings: UE.LightmassMaterialInterfaceSettings;
        bTextureStreamingDataSorted: boolean;
        TextureStreamingDataVersion: number;
        TextureStreamingData: TArray<UE.MaterialTextureInfo>;
        AssetUserData: TArray<UE.AssetUserData>;
        TextureStreamingDataMissingEntries: TArray<UE.MaterialTextureInfo>;
        PreviewMesh: UE.SoftObjectPath;
        ThumbnailInfo: UE.ThumbnailInfo;
        LayerParameterExpansion: TMap<string, boolean>;
        ParameterOverviewExpansion: TMap<string, boolean>;
        AssetImportData: UE.AssetImportData;
        LightingGuid: UE.Guid;
        GetBaseMaterial() : UE.Material;
        GetParameterInfo(Association: UE.EMaterialParameterAssociation, ParameterName: string, LayerFunction: $Nullable<UE.MaterialFunctionInterface>) : UE.MaterialParameterInfo;
        GetPhysicalMaterial() : UE.PhysicalMaterial;
        GetPhysicalMaterialFromMap(Index: number) : UE.PhysicalMaterial;
        GetPhysicalMaterialMask() : UE.PhysicalMaterialMask;
        SetForceMipLevelsToBeResident(OverrideForceMiplevelsToBeResident: boolean, bForceMiplevelsToBeResidentValue: boolean, ForceDuration: number, CinematicTextureGroups?: number /* = 0 */, bFastResponse?: boolean /* = false */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialInterface;
        static Load(InName: string): MaterialInterface;
    
        __tid_MaterialInterface_0__: boolean;
    }
    
    class Field extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Field;
        static Load(InName: string): Field;
    
        __tid_Field_0__: boolean;
    }
    
    class Struct extends UE.Field {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IsChildOf(p0: Struct) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Struct;
        static Load(InName: string): Struct;
    
        __tid_Struct_0__: boolean;
    }
    
    class Class extends UE.Struct {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Class;
        static Load(InName: string): Class;
    
        __tid_Class_0__: boolean;
    }
    
    class ScalarParameterAtlasInstanceData {
        constructor();
        constructor(bIsUsedAsAtlasPosition: boolean, Curve: TSoftObjectPtr<UE.CurveLinearColor>, Atlas: TSoftObjectPtr<UE.CurveLinearColorAtlas>);
        bIsUsedAsAtlasPosition: boolean;
        Curve: TSoftObjectPtr<UE.CurveLinearColor>;
        Atlas: TSoftObjectPtr<UE.CurveLinearColorAtlas>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScalarParameterAtlasInstanceData_0__: boolean;
    }
    
    class ScalarParameterValue {
        constructor();
        constructor(ParameterName: string, AtlasData: UE.ScalarParameterAtlasInstanceData, ParameterInfo: UE.MaterialParameterInfo, ParameterValue: number, ExpressionGUID: UE.Guid);
        ParameterName: string;
        AtlasData: UE.ScalarParameterAtlasInstanceData;
        ParameterInfo: UE.MaterialParameterInfo;
        ParameterValue: number;
        ExpressionGUID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScalarParameterValue_0__: boolean;
    }
    
    class VectorParameterValue {
        constructor();
        constructor(ParameterName: string, ParameterInfo: UE.MaterialParameterInfo, ParameterValue: UE.LinearColor, ExpressionGUID: UE.Guid);
        ParameterName: string;
        ParameterInfo: UE.MaterialParameterInfo;
        ParameterValue: UE.LinearColor;
        ExpressionGUID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VectorParameterValue_0__: boolean;
    }
    
    class TextureParameterValue {
        constructor();
        constructor(ParameterName: string, ParameterInfo: UE.MaterialParameterInfo, ParameterValue: UE.Texture, ExpressionGUID: UE.Guid);
        ParameterName: string;
        ParameterInfo: UE.MaterialParameterInfo;
        ParameterValue: UE.Texture;
        ExpressionGUID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TextureParameterValue_0__: boolean;
    }
    
    class RuntimeVirtualTextureParameterValue {
        constructor();
        constructor(ParameterInfo: UE.MaterialParameterInfo, ParameterValue: UE.RuntimeVirtualTexture, ExpressionGUID: UE.Guid);
        ParameterInfo: UE.MaterialParameterInfo;
        ParameterValue: UE.RuntimeVirtualTexture;
        ExpressionGUID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RuntimeVirtualTextureParameterValue_0__: boolean;
    }
    
    class FontParameterValue {
        constructor();
        constructor(ParameterName: string, ParameterInfo: UE.MaterialParameterInfo, FontValue: UE.Font, FontPage: number, ExpressionGUID: UE.Guid);
        ParameterName: string;
        ParameterInfo: UE.MaterialParameterInfo;
        FontValue: UE.Font;
        FontPage: number;
        ExpressionGUID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FontParameterValue_0__: boolean;
    }
    
    class MaterialInstanceBasePropertyOverrides {
        constructor();
        constructor(bOverride_OpacityMaskClipValue: boolean, bOverride_BlendMode: boolean, bOverride_ShadingModel: boolean, bOverride_DitheredLODTransition: boolean, bOverride_CastDynamicShadowAsMasked: boolean, bOverride_TwoSided: boolean, TwoSided: boolean, DitheredLODTransition: boolean, bCastDynamicShadowAsMasked: boolean, BlendMode: UE.EBlendMode, ShadingModel: UE.EMaterialShadingModel, OpacityMaskClipValue: number);
        bOverride_OpacityMaskClipValue: boolean;
        bOverride_BlendMode: boolean;
        bOverride_ShadingModel: boolean;
        bOverride_DitheredLODTransition: boolean;
        bOverride_CastDynamicShadowAsMasked: boolean;
        bOverride_TwoSided: boolean;
        TwoSided: boolean;
        DitheredLODTransition: boolean;
        bCastDynamicShadowAsMasked: boolean;
        BlendMode: UE.EBlendMode;
        ShadingModel: UE.EMaterialShadingModel;
        OpacityMaskClipValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialInstanceBasePropertyOverrides_0__: boolean;
    }
    
    class StaticParameterBase {
        constructor();
        constructor(ParameterInfo: UE.MaterialParameterInfo, bOverride: boolean, ExpressionGUID: UE.Guid);
        ParameterInfo: UE.MaterialParameterInfo;
        bOverride: boolean;
        ExpressionGUID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticParameterBase_0__: boolean;
    }
    
    class StaticSwitchParameter extends UE.StaticParameterBase {
        constructor();
        constructor(Value: boolean);
        Value: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticSwitchParameter_0__: boolean;
    }
    
    class StaticComponentMaskParameter extends UE.StaticParameterBase {
        constructor();
        constructor(R: boolean, G: boolean, B: boolean, A: boolean);
        R: boolean;
        G: boolean;
        B: boolean;
        A: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticComponentMaskParameter_0__: boolean;
    }
    
    class StaticTerrainLayerWeightParameter extends UE.StaticParameterBase {
        constructor();
        constructor(WeightmapIndex: number, bWeightBasedBlend: boolean);
        WeightmapIndex: number;
        bWeightBasedBlend: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticTerrainLayerWeightParameter_0__: boolean;
    }
    
    enum EMaterialLayerLinkState { Uninitialized, LinkedToParent, UnlinkedFromParent, NotFromParent, EMaterialLayerLinkState_MAX, __typeKeyDoNoAccess}
    class MaterialLayersFunctions {
        constructor();
        constructor(Layers: TArray<UE.MaterialFunctionInterface>, Blends: TArray<UE.MaterialFunctionInterface>, LayerStates: TArray<boolean>, LayerNames: TArray<string>, RestrictToLayerRelatives: TArray<boolean>, RestrictToBlendRelatives: TArray<boolean>, LayerGuids: TArray<UE.Guid>, LayerLinkStates: TArray<UE.EMaterialLayerLinkState>, DeletedParentLayerGuids: TArray<UE.Guid>, KeyString: string);
        Layers: TArray<UE.MaterialFunctionInterface>;
        Blends: TArray<UE.MaterialFunctionInterface>;
        LayerStates: TArray<boolean>;
        LayerNames: TArray<string>;
        RestrictToLayerRelatives: TArray<boolean>;
        RestrictToBlendRelatives: TArray<boolean>;
        LayerGuids: TArray<UE.Guid>;
        LayerLinkStates: TArray<UE.EMaterialLayerLinkState>;
        DeletedParentLayerGuids: TArray<UE.Guid>;
        KeyString: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialLayersFunctions_0__: boolean;
    }
    
    class StaticMaterialLayersParameter extends UE.StaticParameterBase {
        constructor();
        constructor(Value: UE.MaterialLayersFunctions);
        Value: UE.MaterialLayersFunctions;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticMaterialLayersParameter_0__: boolean;
    }
    
    class StaticParameterSet {
        constructor();
        constructor(StaticSwitchParameters: TArray<UE.StaticSwitchParameter>, StaticComponentMaskParameters: TArray<UE.StaticComponentMaskParameter>, TerrainLayerWeightParameters: TArray<UE.StaticTerrainLayerWeightParameter>, MaterialLayersParameters: TArray<UE.StaticMaterialLayersParameter>);
        StaticSwitchParameters: TArray<UE.StaticSwitchParameter>;
        StaticComponentMaskParameters: TArray<UE.StaticComponentMaskParameter>;
        TerrainLayerWeightParameters: TArray<UE.StaticTerrainLayerWeightParameter>;
        MaterialLayersParameters: TArray<UE.StaticMaterialLayersParameter>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticParameterSet_0__: boolean;
    }
    
    class MaterialInstance extends UE.MaterialInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysMaterial: UE.PhysicalMaterial;
        PhysicalMaterialMap: FixSizeArray<UE.PhysicalMaterial>;
        Parent: UE.MaterialInterface;
        bHasStaticPermutationResource: boolean;
        bOverrideSubsurfaceProfile: boolean;
        ScalarParameterValues: TArray<UE.ScalarParameterValue>;
        VectorParameterValues: TArray<UE.VectorParameterValue>;
        TextureParameterValues: TArray<UE.TextureParameterValue>;
        RuntimeVirtualTextureParameterValues: TArray<UE.RuntimeVirtualTextureParameterValue>;
        FontParameterValues: TArray<UE.FontParameterValue>;
        bOverrideBaseProperties: boolean;
        BasePropertyOverrides: UE.MaterialInstanceBasePropertyOverrides;
        ReferencedTextureGuids: TArray<UE.Guid>;
        StaticParameters: UE.StaticParameterSet;
        CachedLayerParameters: UE.MaterialCachedParameters;
        CachedReferencedTextures: TArray<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialInstance;
        static Load(InName: string): MaterialInstance;
    
        __tid_MaterialInstance_0__: boolean;
    }
    
    class MaterialInstanceDynamic extends UE.MaterialInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CopyInterpParameters(Source: $Nullable<UE.MaterialInstance>) : void;
        CopyParameterOverrides(MaterialInstance: $Nullable<UE.MaterialInstance>) : void;
        K2_CopyMaterialInstanceParameters(Source: $Nullable<UE.MaterialInterface>, bQuickParametersOnly?: boolean /* = false */) : void;
        K2_GetScalarParameterValue(ParameterName: string) : number;
        K2_GetScalarParameterValueByInfo(ParameterInfo: UE.MaterialParameterInfo) : number;
        K2_GetTextureParameterValue(ParameterName: string) : UE.Texture;
        K2_GetTextureParameterValueByInfo(ParameterInfo: UE.MaterialParameterInfo) : UE.Texture;
        K2_GetVectorParameterValue(ParameterName: string) : UE.LinearColor;
        K2_GetVectorParameterValueByInfo(ParameterInfo: UE.MaterialParameterInfo) : UE.LinearColor;
        K2_InterpolateMaterialInstanceParams(SourceA: $Nullable<UE.MaterialInstance>, SourceB: $Nullable<UE.MaterialInstance>, Alpha: number) : void;
        SetScalarParameterValue(ParameterName: string, Value: number) : void;
        SetScalarParameterValueByInfo(ParameterInfo: UE.MaterialParameterInfo, Value: number) : void;
        SetTextureParameterValue(ParameterName: string, Value: $Nullable<UE.Texture>) : void;
        SetTextureParameterValueByInfo(ParameterInfo: UE.MaterialParameterInfo, Value: $Nullable<UE.Texture>) : void;
        SetVectorParameterValue(ParameterName: string, Value: UE.LinearColor) : void;
        SetVectorParameterValueByInfo(ParameterInfo: UE.MaterialParameterInfo, Value: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialInstanceDynamic;
        static Load(InName: string): MaterialInstanceDynamic;
    
        __tid_MaterialInstanceDynamic_0__: boolean;
    }
    
    enum EAutoReceiveInput { Disabled, Player0, Player1, Player2, Player3, Player4, Player5, Player6, Player7, EAutoReceiveInput_MAX, __typeKeyDoNoAccess}
    enum EAutoPossessAI { Disabled, PlacedInWorld, Spawned, PlacedInWorldOrSpawned, EAutoPossessAI_MAX, __typeKeyDoNoAccess}
    class SpriteCategoryInfo {
        constructor();
        constructor(Category: string, DisplayName: string, Description: string);
        Category: string;
        DisplayName: string;
        Description: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpriteCategoryInfo_0__: boolean;
    }
    
    class BillboardComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sprite: UE.Texture2D;
        bIsScreenSizeScaled: boolean;
        ScreenSize: number;
        U: number;
        UL: number;
        V: number;
        VL: number;
        SpriteCategoryName: string;
        SpriteInfo: UE.SpriteCategoryInfo;
        bUseInEditorScaling: boolean;
        SetSprite(NewSprite: $Nullable<UE.Texture2D>) : void;
        SetSpriteAndUV(NewSprite: $Nullable<UE.Texture2D>, NewU: number, NewUL: number, NewV: number, NewVL: number) : void;
        SetUV(NewU: number, NewUL: number, NewV: number, NewVL: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BillboardComponent;
        static Load(InName: string): BillboardComponent;
    
        __tid_BillboardComponent_0__: boolean;
    }
    
    class Info extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpriteComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Info;
        static Load(InName: string): Info;
    
        __tid_Info_0__: boolean;
    }
    
    class UniqueNetIdWrapper {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UniqueNetIdWrapper_0__: boolean;
    }
    
    class UniqueNetIdRepl extends UE.UniqueNetIdWrapper {
        constructor();
        constructor(ReplicationBytes: TArray<number>);
        ReplicationBytes: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UniqueNetIdRepl_0__: boolean;
    }
    
    class PlayerState extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Score: number;
        PlayerId: number;
        Ping: number;
        bShouldUpdateReplicatedPing: boolean;
        bIsSpectator: boolean;
        bOnlySpectator: boolean;
        bIsABot: boolean;
        bIsInactive: boolean;
        bFromPreviousLevel: boolean;
        StartTime: number;
        EngineMessageClass: UE.Class;
        SavedNetworkAddress: string;
        UniqueId: UE.UniqueNetIdRepl;
        PawnPrivate: UE.Pawn;
        PlayerNamePrivate: string;
        GetPlayerName() : string;
        OnRep_bIsInactive() : void;
        OnRep_PlayerId() : void;
        OnRep_PlayerName() : void;
        OnRep_Score() : void;
        OnRep_UniqueId() : void;
        ReceiveCopyProperties(NewPlayerState: $Nullable<UE.PlayerState>) : void;
        ReceiveOverrideWith(OldPlayerState: $Nullable<UE.PlayerState>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlayerState;
        static Load(InName: string): PlayerState;
    
        __tid_PlayerState_0__: boolean;
    }
    
    class DamageType extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCausedByWorld: boolean;
        bScaleMomentumByMass: boolean;
        bRadialDamageVelChange: boolean;
        DamageImpulse: number;
        DestructibleImpulse: number;
        DestructibleDamageSpreadScale: number;
        DamageFalloff: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DamageType;
        static Load(InName: string): DamageType;
    
        __tid_DamageType_0__: boolean;
    }
    
    class MeshComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OverrideMaterials: TArray<UE.MaterialInterface>;
        bEnableMaterialParameterCaching: boolean;
        GetMaterialIndex(MaterialSlotName: string) : number;
        GetMaterials() : TArray<UE.MaterialInterface>;
        GetMaterialSlotNames() : TArray<string>;
        IsMaterialSlotNameValid(MaterialSlotName: string) : boolean;
        PrestreamTextures(Seconds: number, bPrioritizeCharacterTextures: boolean, CinematicTextureGroups?: number /* = 0 */) : void;
        SetScalarParameterValueOnMaterials(ParameterName: string, ParameterValue: number) : void;
        SetVectorParameterValueOnMaterials(ParameterName: string, ParameterValue: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshComponent;
        static Load(InName: string): MeshComponent;
    
        __tid_MeshComponent_0__: boolean;
    }
    
    class SkeletalMeshEditorData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshEditorData;
        static Load(InName: string): SkeletalMeshEditorData;
    
        __tid_SkeletalMeshEditorData_0__: boolean;
    }
    
    enum EBoneTranslationRetargetingMode { Animation, Skeleton, AnimationScaled, AnimationRelative, OrientAndScale, EBoneTranslationRetargetingMode_MAX, __typeKeyDoNoAccess}
    class BoneNode {
        constructor();
        constructor(Name: string, ParentIndex: number, TranslationRetargetingMode: UE.EBoneTranslationRetargetingMode);
        Name: string;
        ParentIndex: number;
        TranslationRetargetingMode: UE.EBoneTranslationRetargetingMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoneNode_0__: boolean;
    }
    
    class VirtualBone {
        constructor();
        constructor(SourceBoneName: string, TargetBoneName: string, VirtualBoneName: string);
        SourceBoneName: string;
        TargetBoneName: string;
        VirtualBoneName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VirtualBone_0__: boolean;
    }
    
    class SkeletalMeshSocket extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SocketName: string;
        BoneName: string;
        RelativeLocation: UE.Vector;
        RelativeRotation: UE.Rotator;
        RelativeScale: UE.Vector;
        bForceAlwaysAnimated: boolean;
        GetSocketLocation(SkelComp: $Nullable<UE.SkeletalMeshComponent>) : UE.Vector;
        InitializeSocketFromLocation(SkelComp: $Nullable<UE.SkeletalMeshComponent>, WorldLocation: UE.Vector, WorldNormal: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshSocket;
        static Load(InName: string): SkeletalMeshSocket;
    
        __tid_SkeletalMeshSocket_0__: boolean;
    }
    
    class SmartNameContainer {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SmartNameContainer_0__: boolean;
    }
    
    class BoneReference {
        constructor();
        constructor(BoneName: string);
        BoneName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoneReference_0__: boolean;
    }
    
    class BlendProfileBoneEntry {
        constructor();
        constructor(BoneReference: UE.BoneReference, BlendScale: number);
        BoneReference: UE.BoneReference;
        BlendScale: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlendProfileBoneEntry_0__: boolean;
    }
    
    class BlendProfile extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwningSkeleton: UE.Skeleton;
        ProfileEntries: TArray<UE.BlendProfileBoneEntry>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendProfile;
        static Load(InName: string): BlendProfile;
    
        __tid_BlendProfile_0__: boolean;
    }
    
    class AnimSlotGroup {
        constructor();
        constructor(GroupName: string, SlotNames: TArray<string>);
        GroupName: string;
        SlotNames: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSlotGroup_0__: boolean;
    }
    
    class DataAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NativeClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataAsset;
        static Load(InName: string): DataAsset;
    
        __tid_DataAsset_0__: boolean;
    }
    
    enum EConstraintTransform { Absolute, Relative, EConstraintTransform_MAX, __typeKeyDoNoAccess}
    class RigTransformConstraint {
        constructor();
        constructor(TranformType: UE.EConstraintTransform, ParentSpace: string, Weight: number);
        TranformType: UE.EConstraintTransform;
        ParentSpace: string;
        Weight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RigTransformConstraint_0__: boolean;
    }
    
    class TransformBaseConstraint {
        constructor();
        constructor(TransformConstraints: TArray<UE.RigTransformConstraint>);
        TransformConstraints: TArray<UE.RigTransformConstraint>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformBaseConstraint_0__: boolean;
    }
    
    class TransformBase {
        constructor();
        constructor(Node: string, Constraints: FixSizeArray<UE.TransformBaseConstraint>);
        Node: string;
        Constraints: FixSizeArray<UE.TransformBaseConstraint>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformBase_0__: boolean;
    }
    
    class Node {
        constructor();
        constructor(Name: string, ParentName: string, Transform: UE.Transform, DisplayName: string, bAdvanced: boolean);
        Name: string;
        ParentName: string;
        Transform: UE.Transform;
        DisplayName: string;
        bAdvanced: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Node_0__: boolean;
    }
    
    class Rig extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransformBases: TArray<UE.TransformBase>;
        Nodes: TArray<UE.Node>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Rig;
        static Load(InName: string): Rig;
    
        __tid_Rig_0__: boolean;
    }
    
    class NameMapping {
        constructor();
        constructor(NodeName: string, BoneName: string);
        NodeName: string;
        BoneName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NameMapping_0__: boolean;
    }
    
    class RigConfiguration {
        constructor();
        constructor(Rig: UE.Rig, BoneMappingTable: TArray<UE.NameMapping>);
        Rig: UE.Rig;
        BoneMappingTable: TArray<UE.NameMapping>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RigConfiguration_0__: boolean;
    }
    
    class PreviewAttachedObjectPair {
        constructor();
        constructor(AttachedObject: TSoftObjectPtr<UE.Object>, Object: UE.Object, AttachedTo: string);
        AttachedObject: TSoftObjectPtr<UE.Object>;
        Object: UE.Object;
        AttachedTo: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PreviewAttachedObjectPair_0__: boolean;
    }
    
    class PreviewAssetAttachContainer {
        constructor();
        constructor(AttachedObjects: TArray<UE.PreviewAttachedObjectPair>);
        AttachedObjects: TArray<UE.PreviewAttachedObjectPair>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PreviewAssetAttachContainer_0__: boolean;
    }
    
    class Skeleton extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoneTree: TArray<UE.BoneNode>;
        RefLocalPoses: TArray<UE.Transform>;
        VirtualBoneGuid: UE.Guid;
        VirtualBones: TArray<UE.VirtualBone>;
        Sockets: TArray<UE.SkeletalMeshSocket>;
        SmartNames: UE.SmartNameContainer;
        BlendProfiles: TArray<UE.BlendProfile>;
        SlotGroups: TArray<UE.AnimSlotGroup>;
        PreviewSkeletalMesh: TSoftObjectPtr<UE.SkeletalMesh>;
        AdditionalPreviewSkeletalMeshes: TSoftObjectPtr<UE.DataAsset>;
        RigConfig: UE.RigConfiguration;
        AnimationNotifies: TArray<string>;
        PreviewAttachedAssetContainer: UE.PreviewAssetAttachContainer;
        AssetUserData: TArray<UE.AssetUserData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Skeleton;
        static Load(InName: string): Skeleton;
    
        __tid_Skeleton_0__: boolean;
    }
    
    class SkeletalMaterial {
        constructor();
        constructor(MaterialInterface: UE.MaterialInterface, MaterialSlotName: string, bEnableShadowCasting: boolean, bRecomputeTangent: boolean, ImportedMaterialSlotName: string, UVChannelData: UE.MeshUVChannelInfo);
        MaterialInterface: UE.MaterialInterface;
        MaterialSlotName: string;
        bEnableShadowCasting: boolean;
        bRecomputeTangent: boolean;
        ImportedMaterialSlotName: string;
        UVChannelData: UE.MeshUVChannelInfo;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMaterial_0__: boolean;
    }
    
    enum EAxis { None, X, Y, Z, EAxis_MAX, __typeKeyDoNoAccess}
    class BoneMirrorInfo {
        constructor();
        constructor(SourceIndex: number, BoneFlipAxis: UE.EAxis);
        SourceIndex: number;
        BoneFlipAxis: UE.EAxis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoneMirrorInfo_0__: boolean;
    }
    
    class SkeletalMeshBuildSettings {
        constructor();
        constructor(bRecomputeNormals: boolean, bRecomputeTangents: boolean, bUseMikkTSpace: boolean, bComputeWeightedNormals: boolean, bRemoveDegenerates: boolean, bUseHighPrecisionTangentBasis: boolean, bUseFullPrecisionUVs: boolean, bBuildAdjacencyBuffer: boolean, ThresholdPosition: number, ThresholdTangentNormal: number, ThresholdUV: number, MorphThresholdPosition: number);
        bRecomputeNormals: boolean;
        bRecomputeTangents: boolean;
        bUseMikkTSpace: boolean;
        bComputeWeightedNormals: boolean;
        bRemoveDegenerates: boolean;
        bUseHighPrecisionTangentBasis: boolean;
        bUseFullPrecisionUVs: boolean;
        bBuildAdjacencyBuffer: boolean;
        ThresholdPosition: number;
        ThresholdTangentNormal: number;
        ThresholdUV: number;
        MorphThresholdPosition: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshBuildSettings_0__: boolean;
    }
    
    enum SkeletalMeshTerminationCriterion { SMTC_NumOfTriangles, SMTC_NumOfVerts, SMTC_TriangleOrVert, SMTC_AbsNumOfTriangles, SMTC_AbsNumOfVerts, SMTC_AbsTriangleOrVert, SMTC_MAX, __typeKeyDoNoAccess}
    enum SkeletalMeshOptimizationType { SMOT_NumOfTriangles, SMOT_MaxDeviation, SMOT_TriangleOrDeviation, SMOT_MAX, __typeKeyDoNoAccess}
    enum SkeletalMeshOptimizationImportance { SMOI_Off, SMOI_Lowest, SMOI_Low, SMOI_Normal, SMOI_High, SMOI_Highest, SMOI_MAX, __typeKeyDoNoAccess}
    class AnimMetaData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimMetaData;
        static Load(InName: string): AnimMetaData;
    
        __tid_AnimMetaData_0__: boolean;
    }
    
    class AssetMapping {
        constructor();
        constructor(SourceAsset: UE.AnimationAsset, TargetAsset: UE.AnimationAsset);
        SourceAsset: UE.AnimationAsset;
        TargetAsset: UE.AnimationAsset;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetMapping_0__: boolean;
    }
    
    class AssetMappingTable extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MappedAssets: TArray<UE.AssetMapping>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetMappingTable;
        static Load(InName: string): AssetMappingTable;
    
        __tid_AssetMappingTable_0__: boolean;
    }
    
    class SmartName {
        constructor();
        constructor(DisplayName: string);
        DisplayName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SmartName_0__: boolean;
    }
    
    class PoseData {
        constructor();
        constructor(SourceLocalSpacePose: TArray<UE.Transform>, SourceCurveData: TArray<number>, LocalSpacePose: TArray<UE.Transform>, TrackToBufferIndex: TMap<number, number>, CurveData: TArray<number>);
        SourceLocalSpacePose: TArray<UE.Transform>;
        SourceCurveData: TArray<number>;
        LocalSpacePose: TArray<UE.Transform>;
        TrackToBufferIndex: TMap<number, number>;
        CurveData: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PoseData_0__: boolean;
    }
    
    class AnimCurveBase {
        constructor();
        constructor(LastObservedName: string, Name: UE.SmartName, Color: UE.LinearColor, CurveTypeFlags: number);
        LastObservedName: string;
        Name: UE.SmartName;
        Color: UE.LinearColor;
        CurveTypeFlags: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimCurveBase_0__: boolean;
    }
    
    class PoseDataContainer {
        constructor();
        constructor(PoseNames: TArray<UE.SmartName>, Tracks: TArray<string>, TrackMap: TMap<string, number>, Poses: TArray<UE.PoseData>, Curves: TArray<UE.AnimCurveBase>);
        PoseNames: TArray<UE.SmartName>;
        Tracks: TArray<string>;
        TrackMap: TMap<string, number>;
        Poses: TArray<UE.PoseData>;
        Curves: TArray<UE.AnimCurveBase>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PoseDataContainer_0__: boolean;
    }
    
    class PoseAsset extends UE.AnimationAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PoseContainer: UE.PoseDataContainer;
        bAdditivePose: boolean;
        BasePoseIndex: number;
        RetargetSource: string;
        SourceAnimation: UE.AnimSequence;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PoseAsset;
        static Load(InName: string): PoseAsset;
    
        __tid_PoseAsset_0__: boolean;
    }
    
    class AnimationAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Skeleton: UE.Skeleton;
        MetaData: TArray<UE.AnimMetaData>;
        ParentAsset: UE.AnimationAsset;
        ChildrenAssets: TArray<UE.AnimationAsset>;
        AssetMappingTable: UE.AssetMappingTable;
        AssetUserData: TArray<UE.AssetUserData>;
        ThumbnailInfo: UE.ThumbnailInfo;
        PreviewPoseAsset: UE.PoseAsset;
        PreviewSkeletalMesh: TSoftObjectPtr<UE.SkeletalMesh>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationAsset;
        static Load(InName: string): AnimationAsset;
    
        __tid_AnimationAsset_0__: boolean;
    }
    
    class AnimCompositeBase extends UE.AnimSequenceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompositeBase;
        static Load(InName: string): AnimCompositeBase;
    
        __tid_AnimCompositeBase_0__: boolean;
    }
    
    class CurveFloat extends UE.CurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatCurve: UE.RichCurve;
        bIsEventCurve: boolean;
        GetFloatValue(InTime: number) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveFloat;
        static Load(InName: string): CurveFloat;
    
        __tid_CurveFloat_0__: boolean;
    }
    
    enum EAlphaBlendOption { Linear, Cubic, HermiteCubic, Sinusoidal, QuadraticInOut, CubicInOut, QuarticInOut, QuinticInOut, CircularIn, CircularOut, CircularInOut, ExpIn, ExpOut, ExpInOut, Custom, EAlphaBlendOption_MAX, __typeKeyDoNoAccess}
    class AlphaBlend {
        constructor();
        constructor(CustomCurve: UE.CurveFloat, BlendTime: number, BlendOption: UE.EAlphaBlendOption);
        CustomCurve: UE.CurveFloat;
        BlendTime: number;
        BlendOption: UE.EAlphaBlendOption;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AlphaBlend_0__: boolean;
    }
    
    class AnimSyncMarker {
        constructor();
        constructor(MarkerName: string, Time: number, TrackIndex: number, Guid: UE.Guid);
        MarkerName: string;
        Time: number;
        TrackIndex: number;
        Guid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSyncMarker_0__: boolean;
    }
    
    class MarkerSyncData {
        constructor();
        constructor(AuthoredSyncMarkers: TArray<UE.AnimSyncMarker>);
        AuthoredSyncMarkers: TArray<UE.AnimSyncMarker>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MarkerSyncData_0__: boolean;
    }
    
    class CompositeSection extends UE.AnimLinkableElement {
        constructor();
        constructor(SectionName: string, StartTime: number, NextSectionName: string, MetaData: TArray<UE.AnimMetaData>);
        SectionName: string;
        StartTime: number;
        NextSectionName: string;
        MetaData: TArray<UE.AnimMetaData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompositeSection_0__: boolean;
    }
    
    class AnimSegment {
        constructor();
        constructor(AnimReference: UE.AnimSequenceBase, StartPos: number, AnimStartTime: number, AnimEndTime: number, AnimPlayRate: number, LoopingCount: number);
        AnimReference: UE.AnimSequenceBase;
        StartPos: number;
        AnimStartTime: number;
        AnimEndTime: number;
        AnimPlayRate: number;
        LoopingCount: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSegment_0__: boolean;
    }
    
    class AnimTrack {
        constructor();
        constructor(AnimSegments: TArray<UE.AnimSegment>);
        AnimSegments: TArray<UE.AnimSegment>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimTrack_0__: boolean;
    }
    
    class SlotAnimationTrack {
        constructor();
        constructor(SlotName: string, AnimTrack: UE.AnimTrack);
        SlotName: string;
        AnimTrack: UE.AnimTrack;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlotAnimationTrack_0__: boolean;
    }
    
    class BranchingPoint extends UE.AnimLinkableElement {
        constructor();
        constructor(EventName: string, DisplayTime: number, TriggerTimeOffset: number);
        EventName: string;
        DisplayTime: number;
        TriggerTimeOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BranchingPoint_0__: boolean;
    }
    
    enum ERootMotionRootLock { RefPose, AnimFirstFrame, Zero, ERootMotionRootLock_MAX, __typeKeyDoNoAccess}
    enum EAnimNotifyEventType { Begin, End, EAnimNotifyEventType_MAX, __typeKeyDoNoAccess}
    class BranchingPointMarker {
        constructor();
        constructor(NotifyIndex: number, TriggerTime: number, NotifyEventType: UE.EAnimNotifyEventType);
        NotifyIndex: number;
        TriggerTime: number;
        NotifyEventType: UE.EAnimNotifyEventType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BranchingPointMarker_0__: boolean;
    }
    
    class TimeStretchCurveMarker {
        constructor();
        constructor(Time: FixSizeArray<number>, Alpha: number);
        Time: FixSizeArray<number>;
        Alpha: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimeStretchCurveMarker_0__: boolean;
    }
    
    class TimeStretchCurve {
        constructor();
        constructor(SamplingRate: number, CurveValueMinPrecision: number, Markers: TArray<UE.TimeStretchCurveMarker>, Sum_dT_i_by_C_i: FixSizeArray<number>);
        SamplingRate: number;
        CurveValueMinPrecision: number;
        Markers: TArray<UE.TimeStretchCurveMarker>;
        Sum_dT_i_by_C_i: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimeStretchCurve_0__: boolean;
    }
    
    class AnimMontage extends UE.AnimCompositeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlendIn: UE.AlphaBlend;
        BlendInTime: number;
        BlendOut: UE.AlphaBlend;
        BlendOutTime: number;
        BlendOutTriggerTime: number;
        SyncGroup: string;
        SyncSlotIndex: number;
        MarkerData: UE.MarkerSyncData;
        CompositeSections: TArray<UE.CompositeSection>;
        SlotAnimTracks: TArray<UE.SlotAnimationTrack>;
        BranchingPoints: TArray<UE.BranchingPoint>;
        bEnableRootMotionTranslation: boolean;
        bEnableRootMotionRotation: boolean;
        bEnableAutoBlendOut: boolean;
        RootMotionRootLock: UE.ERootMotionRootLock;
        PreviewBasePose: UE.AnimSequence;
        BranchingPointMarkers: TArray<UE.BranchingPointMarker>;
        BranchingPointStateNotifyIndices: TArray<number>;
        TimeStretchCurve: UE.TimeStretchCurve;
        TimeStretchCurveName: string;
        GetDefaultBlendOutTime() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimMontage;
        static Load(InName: string): AnimMontage;
    
        __tid_AnimMontage_0__: boolean;
    }
    
    enum EAnimLinkMethod { Absolute, Relative, Proportional, EAnimLinkMethod_MAX, __typeKeyDoNoAccess}
    class AnimLinkableElement {
        constructor();
        constructor(LinkedMontage: UE.AnimMontage, SlotIndex: number, SegmentIndex: number, LinkMethod: UE.EAnimLinkMethod, CachedLinkMethod: UE.EAnimLinkMethod, SegmentBeginTime: number, SegmentLength: number, LinkValue: number, LinkedSequence: UE.AnimSequenceBase);
        LinkedMontage: UE.AnimMontage;
        SlotIndex: number;
        SegmentIndex: number;
        LinkMethod: UE.EAnimLinkMethod;
        CachedLinkMethod: UE.EAnimLinkMethod;
        SegmentBeginTime: number;
        SegmentLength: number;
        LinkValue: number;
        LinkedSequence: UE.AnimSequenceBase;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimLinkableElement_0__: boolean;
    }
    
    class AnimNotify extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NotifyColor: UE.Color;
        GetNotifyName() : string;
        Received_Notify(MeshComp: $Nullable<UE.SkeletalMeshComponent>, Animation: $Nullable<UE.AnimSequenceBase>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify;
        static Load(InName: string): AnimNotify;
    
        __tid_AnimNotify_0__: boolean;
    }
    
    class AnimNotifyState extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NotifyColor: UE.Color;
        GetNotifyName() : string;
        Received_NotifyBegin(MeshComp: $Nullable<UE.SkeletalMeshComponent>, Animation: $Nullable<UE.AnimSequenceBase>, TotalDuration: number) : boolean;
        Received_NotifyEnd(MeshComp: $Nullable<UE.SkeletalMeshComponent>, Animation: $Nullable<UE.AnimSequenceBase>) : boolean;
        Received_NotifyTick(MeshComp: $Nullable<UE.SkeletalMeshComponent>, Animation: $Nullable<UE.AnimSequenceBase>, FrameDeltaTime: number) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotifyState;
        static Load(InName: string): AnimNotifyState;
    
        __tid_AnimNotifyState_0__: boolean;
    }
    
    enum EMontageNotifyTickType { Queued, BranchingPoint, EMontageNotifyTickType_MAX, __typeKeyDoNoAccess}
    enum ENotifyFilterType { NoFiltering, LOD, ENotifyFilterType_MAX, __typeKeyDoNoAccess}
    class AnimNotifyEvent extends UE.AnimLinkableElement {
        constructor();
        constructor(DisplayTime: number, TriggerTimeOffset: number, EndTriggerTimeOffset: number, TriggerWeightThreshold: number, NotifyName: string, Notify: UE.AnimNotify, NotifyStateClass: UE.AnimNotifyState, Duration: number, EndLink: UE.AnimLinkableElement, bConvertedFromBranchingPoint: boolean, MontageTickType: UE.EMontageNotifyTickType, NotifyTriggerChance: number, NotifyFilterType: UE.ENotifyFilterType, NotifyFilterLOD: number, bTriggerOnDedicatedServer: boolean, bTriggerOnFollower: boolean, NotifyColor: UE.Color, Guid: UE.Guid, TrackIndex: number);
        DisplayTime: number;
        TriggerTimeOffset: number;
        EndTriggerTimeOffset: number;
        TriggerWeightThreshold: number;
        NotifyName: string;
        Notify: UE.AnimNotify;
        NotifyStateClass: UE.AnimNotifyState;
        Duration: number;
        EndLink: UE.AnimLinkableElement;
        bConvertedFromBranchingPoint: boolean;
        MontageTickType: UE.EMontageNotifyTickType;
        NotifyTriggerChance: number;
        NotifyFilterType: UE.ENotifyFilterType;
        NotifyFilterLOD: number;
        bTriggerOnDedicatedServer: boolean;
        bTriggerOnFollower: boolean;
        NotifyColor: UE.Color;
        Guid: UE.Guid;
        TrackIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNotifyEvent_0__: boolean;
    }
    
    class FloatCurve extends UE.AnimCurveBase {
        constructor();
        constructor(FloatCurve: UE.RichCurve);
        FloatCurve: UE.RichCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FloatCurve_0__: boolean;
    }
    
    class VectorCurve extends UE.AnimCurveBase {
        constructor();
        constructor(FloatCurves: FixSizeArray<UE.RichCurve>);
        FloatCurves: FixSizeArray<UE.RichCurve>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VectorCurve_0__: boolean;
    }
    
    class TransformCurve extends UE.AnimCurveBase {
        constructor();
        constructor(TranslationCurve: UE.VectorCurve, RotationCurve: UE.VectorCurve, ScaleCurve: UE.VectorCurve);
        TranslationCurve: UE.VectorCurve;
        RotationCurve: UE.VectorCurve;
        ScaleCurve: UE.VectorCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformCurve_0__: boolean;
    }
    
    class RawCurveTracks {
        constructor();
        constructor(FloatCurves: TArray<UE.FloatCurve>, VectorCurves: TArray<UE.VectorCurve>, TransformCurves: TArray<UE.TransformCurve>);
        FloatCurves: TArray<UE.FloatCurve>;
        VectorCurves: TArray<UE.VectorCurve>;
        TransformCurves: TArray<UE.TransformCurve>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RawCurveTracks_0__: boolean;
    }
    
    class AnimNotifyTrack {
        constructor();
        constructor(TrackName: string, TrackColor: UE.LinearColor);
        TrackName: string;
        TrackColor: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNotifyTrack_0__: boolean;
    }
    
    class AnimSequenceBase extends UE.AnimationAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Notifies: TArray<UE.AnimNotifyEvent>;
        SequenceLength: number;
        RateScale: number;
        RawCurveData: UE.RawCurveTracks;
        AnimNotifyTracks: TArray<UE.AnimNotifyTrack>;
        GetPlayLength() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSequenceBase;
        static Load(InName: string): AnimSequenceBase;
    
        __tid_AnimSequenceBase_0__: boolean;
    }
    
    class TrackToSkeletonMap {
        constructor();
        constructor(BoneTreeIndex: number);
        BoneTreeIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TrackToSkeletonMap_0__: boolean;
    }
    
    class AnimBoneCompressionCodec extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Description: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBoneCompressionCodec;
        static Load(InName: string): AnimBoneCompressionCodec;
    
        __tid_AnimBoneCompressionCodec_0__: boolean;
    }
    
    class AnimBoneCompressionSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Codecs: TArray<UE.AnimBoneCompressionCodec>;
        ErrorThreshold: number;
        bForceBelowThreshold: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBoneCompressionSettings;
        static Load(InName: string): AnimBoneCompressionSettings;
    
        __tid_AnimBoneCompressionSettings_0__: boolean;
    }
    
    class AnimCurveCompressionCodec extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCurveCompressionCodec;
        static Load(InName: string): AnimCurveCompressionCodec;
    
        __tid_AnimCurveCompressionCodec_0__: boolean;
    }
    
    class AnimCurveCompressionSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Codec: UE.AnimCurveCompressionCodec;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCurveCompressionSettings;
        static Load(InName: string): AnimCurveCompressionSettings;
    
        __tid_AnimCurveCompressionSettings_0__: boolean;
    }
    
    enum EAdditiveAnimationType { AAT_None, AAT_LocalSpaceBase, AAT_RotationOffsetMeshSpace, AAT_MAX, __typeKeyDoNoAccess}
    enum EAdditiveBasePoseType { ABPT_None, ABPT_RefPose, ABPT_AnimScaled, ABPT_AnimFrame, ABPT_MAX, __typeKeyDoNoAccess}
    enum EAnimInterpolationType { Linear, Step, EAnimInterpolationType_MAX, __typeKeyDoNoAccess}
    class CustomAttribute {
        constructor();
        constructor(Name: string, VariantType: number, Times: TArray<number>);
        Name: string;
        VariantType: number;
        Times: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomAttribute_0__: boolean;
    }
    
    class CustomAttributePerBoneData {
        constructor();
        constructor(BoneTreeIndex: number, Attributes: TArray<UE.CustomAttribute>);
        BoneTreeIndex: number;
        Attributes: TArray<UE.CustomAttribute>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomAttributePerBoneData_0__: boolean;
    }
    
    class StringCurveKey {
        constructor();
        constructor(Time: number, Value: string);
        Time: number;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StringCurveKey_0__: boolean;
    }
    
    class StringCurve extends UE.IndexedCurve {
        constructor();
        constructor(DefaultValue: string, Keys: TArray<UE.StringCurveKey>);
        DefaultValue: string;
        Keys: TArray<UE.StringCurveKey>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StringCurve_0__: boolean;
    }
    
    class BakedStringCustomAttribute {
        constructor();
        constructor(AttributeName: string, StringCurve: UE.StringCurve);
        AttributeName: string;
        StringCurve: UE.StringCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BakedStringCustomAttribute_0__: boolean;
    }
    
    class IntegralKey {
        constructor();
        constructor(Time: number, Value: number);
        Time: number;
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IntegralKey_0__: boolean;
    }
    
    class IntegralCurve extends UE.IndexedCurve {
        constructor();
        constructor(Keys: TArray<UE.IntegralKey>, DefaultValue: number, bUseDefaultValueBeforeFirstKey: boolean);
        Keys: TArray<UE.IntegralKey>;
        DefaultValue: number;
        bUseDefaultValueBeforeFirstKey: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IntegralCurve_0__: boolean;
    }
    
    class BakedIntegerCustomAttribute {
        constructor();
        constructor(AttributeName: string, IntCurve: UE.IntegralCurve);
        AttributeName: string;
        IntCurve: UE.IntegralCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BakedIntegerCustomAttribute_0__: boolean;
    }
    
    class SimpleCurveKey {
        constructor();
        constructor(Time: number, Value: number);
        Time: number;
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SimpleCurveKey_0__: boolean;
    }
    
    class SimpleCurve extends UE.RealCurve {
        constructor();
        constructor(InterpMode: UE.ERichCurveInterpMode, Keys: TArray<UE.SimpleCurveKey>);
        InterpMode: UE.ERichCurveInterpMode;
        Keys: TArray<UE.SimpleCurveKey>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SimpleCurve_0__: boolean;
    }
    
    class BakedFloatCustomAttribute {
        constructor();
        constructor(AttributeName: string, FloatCurve: UE.SimpleCurve);
        AttributeName: string;
        FloatCurve: UE.SimpleCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BakedFloatCustomAttribute_0__: boolean;
    }
    
    class BakedCustomAttributePerBoneData {
        constructor();
        constructor(BoneTreeIndex: number, StringAttributes: TArray<UE.BakedStringCustomAttribute>, IntAttributes: TArray<UE.BakedIntegerCustomAttribute>, FloatAttributes: TArray<UE.BakedFloatCustomAttribute>);
        BoneTreeIndex: number;
        StringAttributes: TArray<UE.BakedStringCustomAttribute>;
        IntAttributes: TArray<UE.BakedIntegerCustomAttribute>;
        FloatAttributes: TArray<UE.BakedFloatCustomAttribute>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BakedCustomAttributePerBoneData_0__: boolean;
    }
    
    class AnimSequence extends UE.AnimSequenceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportFileFramerate: number;
        ImportResampleFramerate: number;
        NumFrames: number;
        TrackToSkeletonMapTable: TArray<UE.TrackToSkeletonMap>;
        RawDataGuid: UE.Guid;
        AnimationTrackNames: TArray<string>;
        bAllowFrameStripping: boolean;
        CompressionErrorThresholdScale: number;
        BoneCompressionSettings: UE.AnimBoneCompressionSettings;
        CurveCompressionSettings: UE.AnimCurveCompressionSettings;
        AdditiveAnimType: UE.EAdditiveAnimationType;
        RefPoseType: UE.EAdditiveBasePoseType;
        RefPoseSeq: UE.AnimSequence;
        RefFrameIndex: number;
        RetargetSource: string;
        Interpolation: UE.EAnimInterpolationType;
        bEnableRootMotion: boolean;
        RootMotionRootLock: UE.ERootMotionRootLock;
        bForceRootLock: boolean;
        bUseNormalizedRootMotionScale: boolean;
        bRootMotionSettingsCopiedFromMontage: boolean;
        CompressCommandletVersion: number;
        bDoNotOverrideCompression: boolean;
        AssetImportData: UE.AssetImportData;
        SourceFilePath: string;
        SourceFileTimestamp: string;
        bNeedsRebake: boolean;
        AuthoredSyncMarkers: TArray<UE.AnimSyncMarker>;
        PerBoneCustomAttributeData: TArray<UE.CustomAttributePerBoneData>;
        CustomAttributesGuid: UE.Guid;
        BakedCustomAttributesGuid: UE.Guid;
        BakedPerBoneCustomAttributeData: TArray<UE.BakedCustomAttributePerBoneData>;
        AddBoneFloatCustomAttribute(BoneName: string, AttributeName: string, TimeKeys: TArray<number>, ValueKeys: TArray<number>) : void;
        AddBoneIntegerCustomAttribute(BoneName: string, AttributeName: string, TimeKeys: TArray<number>, ValueKeys: TArray<number>) : void;
        AddBoneStringCustomAttribute(BoneName: string, AttributeName: string, TimeKeys: TArray<number>, ValueKeys: TArray<string>) : void;
        RemoveAllCustomAttributes() : void;
        RemoveAllCustomAttributesForBone(BoneName: string) : void;
        RemoveCustomAttribute(BoneName: string, AttributeName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSequence;
        static Load(InName: string): AnimSequence;
    
        __tid_AnimSequence_0__: boolean;
    }
    
    class SkeletalMeshOptimizationSettings {
        constructor();
        constructor(TerminationCriterion: UE.SkeletalMeshTerminationCriterion, NumOfTrianglesPercentage: number, NumOfVertPercentage: number, MaxNumOfTriangles: number, MaxNumOfVerts: number, MaxNumOfTrianglesPercentage: number, MaxNumOfVertsPercentage: number, MaxDeviationPercentage: number, ReductionMethod: UE.SkeletalMeshOptimizationType, SilhouetteImportance: UE.SkeletalMeshOptimizationImportance, TextureImportance: UE.SkeletalMeshOptimizationImportance, ShadingImportance: UE.SkeletalMeshOptimizationImportance, SkinningImportance: UE.SkeletalMeshOptimizationImportance, bRemapMorphTargets: boolean, bRecalcNormals: boolean, WeldingThreshold: number, NormalsThreshold: number, MaxBonesPerVertex: number, bEnforceBoneBoundaries: boolean, VolumeImportance: number, bLockEdges: boolean, bLockColorBounaries: boolean, BaseLOD: number, BonesToRemove: TArray<UE.BoneReference>, BakePose: UE.AnimSequence);
        TerminationCriterion: UE.SkeletalMeshTerminationCriterion;
        NumOfTrianglesPercentage: number;
        NumOfVertPercentage: number;
        MaxNumOfTriangles: number;
        MaxNumOfVerts: number;
        MaxNumOfTrianglesPercentage: number;
        MaxNumOfVertsPercentage: number;
        MaxDeviationPercentage: number;
        ReductionMethod: UE.SkeletalMeshOptimizationType;
        SilhouetteImportance: UE.SkeletalMeshOptimizationImportance;
        TextureImportance: UE.SkeletalMeshOptimizationImportance;
        ShadingImportance: UE.SkeletalMeshOptimizationImportance;
        SkinningImportance: UE.SkeletalMeshOptimizationImportance;
        bRemapMorphTargets: boolean;
        bRecalcNormals: boolean;
        WeldingThreshold: number;
        NormalsThreshold: number;
        MaxBonesPerVertex: number;
        bEnforceBoneBoundaries: boolean;
        VolumeImportance: number;
        bLockEdges: boolean;
        bLockColorBounaries: boolean;
        BaseLOD: number;
        BonesToRemove: TArray<UE.BoneReference>;
        BakePose: UE.AnimSequence;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshOptimizationSettings_0__: boolean;
    }
    
    enum ESkinCacheUsage { Auto, Disabled, Enabled, ESkinCacheUsage_MAX, __typeKeyDoNoAccess}
    class SkeletalMeshLODInfo {
        constructor();
        constructor(ScreenSize: UE.PerPlatformFloat, LODHysteresis: number, LODMaterialMap: TArray<number>, bEnableShadowCasting: TArray<boolean>, RemovedBones: TArray<string>, BuildSettings: UE.SkeletalMeshBuildSettings, ReductionSettings: UE.SkeletalMeshOptimizationSettings, BonesToRemove: TArray<UE.BoneReference>, BonesToPrioritize: TArray<UE.BoneReference>, WeightOfPrioritization: number, BakePose: UE.AnimSequence, BakePoseOverride: UE.AnimSequence, SourceImportFilename: string, SkinCacheUsage: UE.ESkinCacheUsage, bHasBeenSimplified: boolean, bHasPerLODVertexColors: boolean, bAllowCPUAccess: boolean, bSupportUniformlyDistributedSampling: boolean, bImportWithBaseMesh: boolean);
        ScreenSize: UE.PerPlatformFloat;
        LODHysteresis: number;
        LODMaterialMap: TArray<number>;
        bEnableShadowCasting: TArray<boolean>;
        RemovedBones: TArray<string>;
        BuildSettings: UE.SkeletalMeshBuildSettings;
        ReductionSettings: UE.SkeletalMeshOptimizationSettings;
        BonesToRemove: TArray<UE.BoneReference>;
        BonesToPrioritize: TArray<UE.BoneReference>;
        WeightOfPrioritization: number;
        BakePose: UE.AnimSequence;
        BakePoseOverride: UE.AnimSequence;
        SourceImportFilename: string;
        SkinCacheUsage: UE.ESkinCacheUsage;
        bHasBeenSimplified: boolean;
        bHasPerLODVertexColors: boolean;
        bAllowCPUAccess: boolean;
        bSupportUniformlyDistributedSampling: boolean;
        bImportWithBaseMesh: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshLODInfo_0__: boolean;
    }
    
    class PerPlatformBool {
        constructor();
        constructor(Default: boolean, PerPlatform: TMap<string, boolean>);
        Default: boolean;
        PerPlatform: TMap<string, boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PerPlatformBool_0__: boolean;
    }
    
    enum EBoneFilterActionOption { Remove, Keep, Invalid, EBoneFilterActionOption_MAX, __typeKeyDoNoAccess}
    class BoneFilter {
        constructor();
        constructor(bExcludeSelf: boolean, BoneName: string);
        bExcludeSelf: boolean;
        BoneName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoneFilter_0__: boolean;
    }
    
    class SkeletalMeshLODGroupSettings {
        constructor();
        constructor(ScreenSize: UE.PerPlatformFloat, LODHysteresis: number, BoneFilterActionOption: UE.EBoneFilterActionOption, BoneList: TArray<UE.BoneFilter>, BonesToPrioritize: TArray<string>, WeightOfPrioritization: number, BakePose: UE.AnimSequence, ReductionSettings: UE.SkeletalMeshOptimizationSettings);
        ScreenSize: UE.PerPlatformFloat;
        LODHysteresis: number;
        BoneFilterActionOption: UE.EBoneFilterActionOption;
        BoneList: TArray<UE.BoneFilter>;
        BonesToPrioritize: TArray<string>;
        WeightOfPrioritization: number;
        BakePose: UE.AnimSequence;
        ReductionSettings: UE.SkeletalMeshOptimizationSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshLODGroupSettings_0__: boolean;
    }
    
    class SkeletalMeshLODSettings extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MinLod: UE.PerPlatformInt;
        DisableBelowMinLodStripping: UE.PerPlatformBool;
        bOverrideLODStreamingSettings: boolean;
        bSupportLODStreaming: UE.PerPlatformBool;
        MaxNumStreamedLODs: UE.PerPlatformInt;
        MaxNumOptionalLODs: UE.PerPlatformInt;
        LODGroups: TArray<UE.SkeletalMeshLODGroupSettings>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshLODSettings;
        static Load(InName: string): SkeletalMeshLODSettings;
    
        __tid_SkeletalMeshLODSettings_0__: boolean;
    }
    
    class PhysicalAnimationData {
        constructor();
        constructor(BodyName: string, bIsLocalSimulation: boolean, OrientationStrength: number, AngularVelocityStrength: number, PositionStrength: number, VelocityStrength: number, MaxLinearForce: number, MaxAngularForce: number);
        BodyName: string;
        bIsLocalSimulation: boolean;
        OrientationStrength: number;
        AngularVelocityStrength: number;
        PositionStrength: number;
        VelocityStrength: number;
        MaxLinearForce: number;
        MaxAngularForce: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PhysicalAnimationData_0__: boolean;
    }
    
    class PhysicalAnimationProfile {
        constructor();
        constructor(ProfileName: string, PhysicalAnimationData: UE.PhysicalAnimationData);
        ProfileName: string;
        PhysicalAnimationData: UE.PhysicalAnimationData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PhysicalAnimationProfile_0__: boolean;
    }
    
    class SkeletalBodySetup extends UE.BodySetup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurrentPhysicalAnimationProfile: UE.PhysicalAnimationProfile;
        bSkipScaleFromAnimation: boolean;
        PhysicalAnimationData: TArray<UE.PhysicalAnimationProfile>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalBodySetup;
        static Load(InName: string): SkeletalBodySetup;
    
        __tid_SkeletalBodySetup_0__: boolean;
    }
    
    class ConstraintInstanceBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintInstanceBase_0__: boolean;
    }
    
    class ConstraintBaseParams {
        constructor();
        constructor(Stiffness: number, Damping: number, Restitution: number, ContactDistance: number, bSoftConstraint: boolean);
        Stiffness: number;
        Damping: number;
        Restitution: number;
        ContactDistance: number;
        bSoftConstraint: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintBaseParams_0__: boolean;
    }
    
    enum ELinearConstraintMotion { LCM_Free, LCM_Limited, LCM_Locked, LCM_MAX, __typeKeyDoNoAccess}
    class LinearConstraint extends UE.ConstraintBaseParams {
        constructor();
        constructor(Limit: number, XMotion: UE.ELinearConstraintMotion, YMotion: UE.ELinearConstraintMotion, ZMotion: UE.ELinearConstraintMotion);
        Limit: number;
        XMotion: UE.ELinearConstraintMotion;
        YMotion: UE.ELinearConstraintMotion;
        ZMotion: UE.ELinearConstraintMotion;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LinearConstraint_0__: boolean;
    }
    
    enum EAngularConstraintMotion { ACM_Free, ACM_Limited, ACM_Locked, ACM_MAX, __typeKeyDoNoAccess}
    class ConeConstraint extends UE.ConstraintBaseParams {
        constructor();
        constructor(Swing1LimitDegrees: number, Swing2LimitDegrees: number, Swing1Motion: UE.EAngularConstraintMotion, Swing2Motion: UE.EAngularConstraintMotion);
        Swing1LimitDegrees: number;
        Swing2LimitDegrees: number;
        Swing1Motion: UE.EAngularConstraintMotion;
        Swing2Motion: UE.EAngularConstraintMotion;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConeConstraint_0__: boolean;
    }
    
    class TwistConstraint extends UE.ConstraintBaseParams {
        constructor();
        constructor(TwistLimitDegrees: number, TwistMotion: UE.EAngularConstraintMotion);
        TwistLimitDegrees: number;
        TwistMotion: UE.EAngularConstraintMotion;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TwistConstraint_0__: boolean;
    }
    
    class ConstraintDrive {
        constructor();
        constructor(Stiffness: number, Damping: number, MaxForce: number, bEnablePositionDrive: boolean, bEnableVelocityDrive: boolean);
        Stiffness: number;
        Damping: number;
        MaxForce: number;
        bEnablePositionDrive: boolean;
        bEnableVelocityDrive: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintDrive_0__: boolean;
    }
    
    class LinearDriveConstraint {
        constructor();
        constructor(PositionTarget: UE.Vector, VelocityTarget: UE.Vector, XDrive: UE.ConstraintDrive, YDrive: UE.ConstraintDrive, ZDrive: UE.ConstraintDrive, bEnablePositionDrive: boolean);
        PositionTarget: UE.Vector;
        VelocityTarget: UE.Vector;
        XDrive: UE.ConstraintDrive;
        YDrive: UE.ConstraintDrive;
        ZDrive: UE.ConstraintDrive;
        bEnablePositionDrive: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LinearDriveConstraint_0__: boolean;
    }
    
    enum EAngularDriveMode { SLERP, TwistAndSwing, EAngularDriveMode_MAX, __typeKeyDoNoAccess}
    class AngularDriveConstraint {
        constructor();
        constructor(TwistDrive: UE.ConstraintDrive, SwingDrive: UE.ConstraintDrive, SlerpDrive: UE.ConstraintDrive, OrientationTarget: UE.Rotator, AngularVelocityTarget: UE.Vector, AngularDriveMode: UE.EAngularDriveMode);
        TwistDrive: UE.ConstraintDrive;
        SwingDrive: UE.ConstraintDrive;
        SlerpDrive: UE.ConstraintDrive;
        OrientationTarget: UE.Rotator;
        AngularVelocityTarget: UE.Vector;
        AngularDriveMode: UE.EAngularDriveMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AngularDriveConstraint_0__: boolean;
    }
    
    class ConstraintProfileProperties {
        constructor();
        constructor(ProjectionLinearTolerance: number, ProjectionAngularTolerance: number, ProjectionLinearAlpha: number, ProjectionAngularAlpha: number, LinearBreakThreshold: number, AngularBreakThreshold: number, LinearLimit: UE.LinearConstraint, ConeLimit: UE.ConeConstraint, TwistLimit: UE.TwistConstraint, LinearDrive: UE.LinearDriveConstraint, AngularDrive: UE.AngularDriveConstraint, bDisableCollision: boolean, bParentDominates: boolean, bEnableProjection: boolean, bEnableSoftProjection: boolean, bAngularBreakable: boolean, bLinearBreakable: boolean);
        ProjectionLinearTolerance: number;
        ProjectionAngularTolerance: number;
        ProjectionLinearAlpha: number;
        ProjectionAngularAlpha: number;
        LinearBreakThreshold: number;
        AngularBreakThreshold: number;
        LinearLimit: UE.LinearConstraint;
        ConeLimit: UE.ConeConstraint;
        TwistLimit: UE.TwistConstraint;
        LinearDrive: UE.LinearDriveConstraint;
        AngularDrive: UE.AngularDriveConstraint;
        bDisableCollision: boolean;
        bParentDominates: boolean;
        bEnableProjection: boolean;
        bEnableSoftProjection: boolean;
        bAngularBreakable: boolean;
        bLinearBreakable: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintProfileProperties_0__: boolean;
    }
    
    class ConstraintInstance extends UE.ConstraintInstanceBase {
        constructor();
        constructor(JointName: string, ConstraintBone1: string, ConstraintBone2: string, Pos1: UE.Vector, PriAxis1: UE.Vector, SecAxis1: UE.Vector, Pos2: UE.Vector, PriAxis2: UE.Vector, SecAxis2: UE.Vector, AngularRotationOffset: UE.Rotator, bScaleLinearLimits: boolean, ProfileInstance: UE.ConstraintProfileProperties, bDisableCollision: boolean, bEnableProjection: boolean, ProjectionLinearTolerance: number, ProjectionAngularTolerance: number, LinearXMotion: UE.ELinearConstraintMotion, LinearYMotion: UE.ELinearConstraintMotion, LinearZMotion: UE.ELinearConstraintMotion, LinearLimitSize: number, bLinearLimitSoft: boolean, LinearLimitStiffness: number, LinearLimitDamping: number, bLinearBreakable: boolean, LinearBreakThreshold: number, AngularSwing1Motion: UE.EAngularConstraintMotion, AngularTwistMotion: UE.EAngularConstraintMotion, AngularSwing2Motion: UE.EAngularConstraintMotion, bSwingLimitSoft: boolean, bTwistLimitSoft: boolean, Swing1LimitAngle: number, TwistLimitAngle: number, Swing2LimitAngle: number, SwingLimitStiffness: number, SwingLimitDamping: number, TwistLimitStiffness: number, TwistLimitDamping: number, bAngularBreakable: boolean, AngularBreakThreshold: number, bLinearXPositionDrive: boolean, bLinearXVelocityDrive: boolean, bLinearYPositionDrive: boolean, bLinearYVelocityDrive: boolean, bLinearZPositionDrive: boolean, bLinearZVelocityDrive: boolean, bLinearPositionDrive: boolean, bLinearVelocityDrive: boolean, LinearPositionTarget: UE.Vector, LinearVelocityTarget: UE.Vector, LinearDriveSpring: number, LinearDriveDamping: number, LinearDriveForceLimit: number, bSwingPositionDrive: boolean, bSwingVelocityDrive: boolean, bTwistPositionDrive: boolean, bTwistVelocityDrive: boolean, bAngularSlerpDrive: boolean, bAngularOrientationDrive: boolean, bEnableSwingDrive: boolean, bEnableTwistDrive: boolean, bAngularVelocityDrive: boolean, AngularPositionTarget: UE.Quat, AngularDriveMode: UE.EAngularDriveMode, AngularOrientationTarget: UE.Rotator, AngularVelocityTarget: UE.Vector, AngularDriveSpring: number, AngularDriveDamping: number, AngularDriveForceLimit: number);
        JointName: string;
        ConstraintBone1: string;
        ConstraintBone2: string;
        Pos1: UE.Vector;
        PriAxis1: UE.Vector;
        SecAxis1: UE.Vector;
        Pos2: UE.Vector;
        PriAxis2: UE.Vector;
        SecAxis2: UE.Vector;
        AngularRotationOffset: UE.Rotator;
        bScaleLinearLimits: boolean;
        ProfileInstance: UE.ConstraintProfileProperties;
        bDisableCollision: boolean;
        bEnableProjection: boolean;
        ProjectionLinearTolerance: number;
        ProjectionAngularTolerance: number;
        LinearXMotion: UE.ELinearConstraintMotion;
        LinearYMotion: UE.ELinearConstraintMotion;
        LinearZMotion: UE.ELinearConstraintMotion;
        LinearLimitSize: number;
        bLinearLimitSoft: boolean;
        LinearLimitStiffness: number;
        LinearLimitDamping: number;
        bLinearBreakable: boolean;
        LinearBreakThreshold: number;
        AngularSwing1Motion: UE.EAngularConstraintMotion;
        AngularTwistMotion: UE.EAngularConstraintMotion;
        AngularSwing2Motion: UE.EAngularConstraintMotion;
        bSwingLimitSoft: boolean;
        bTwistLimitSoft: boolean;
        Swing1LimitAngle: number;
        TwistLimitAngle: number;
        Swing2LimitAngle: number;
        SwingLimitStiffness: number;
        SwingLimitDamping: number;
        TwistLimitStiffness: number;
        TwistLimitDamping: number;
        bAngularBreakable: boolean;
        AngularBreakThreshold: number;
        bLinearXPositionDrive: boolean;
        bLinearXVelocityDrive: boolean;
        bLinearYPositionDrive: boolean;
        bLinearYVelocityDrive: boolean;
        bLinearZPositionDrive: boolean;
        bLinearZVelocityDrive: boolean;
        bLinearPositionDrive: boolean;
        bLinearVelocityDrive: boolean;
        LinearPositionTarget: UE.Vector;
        LinearVelocityTarget: UE.Vector;
        LinearDriveSpring: number;
        LinearDriveDamping: number;
        LinearDriveForceLimit: number;
        bSwingPositionDrive: boolean;
        bSwingVelocityDrive: boolean;
        bTwistPositionDrive: boolean;
        bTwistVelocityDrive: boolean;
        bAngularSlerpDrive: boolean;
        bAngularOrientationDrive: boolean;
        bEnableSwingDrive: boolean;
        bEnableTwistDrive: boolean;
        bAngularVelocityDrive: boolean;
        AngularPositionTarget: UE.Quat;
        AngularDriveMode: UE.EAngularDriveMode;
        AngularOrientationTarget: UE.Rotator;
        AngularVelocityTarget: UE.Vector;
        AngularDriveSpring: number;
        AngularDriveDamping: number;
        AngularDriveForceLimit: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintInstance_0__: boolean;
    }
    
    class PhysicsConstraintProfileHandle {
        constructor();
        constructor(ProfileProperties: UE.ConstraintProfileProperties, ProfileName: string);
        ProfileProperties: UE.ConstraintProfileProperties;
        ProfileName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PhysicsConstraintProfileHandle_0__: boolean;
    }
    
    class PhysicsConstraintTemplate extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultInstance: UE.ConstraintInstance;
        ProfileHandles: TArray<UE.PhysicsConstraintProfileHandle>;
        DefaultProfile: UE.ConstraintProfileProperties;
        JointName: string;
        ConstraintBone1: string;
        ConstraintBone2: string;
        Pos1: UE.Vector;
        PriAxis1: UE.Vector;
        SecAxis1: UE.Vector;
        Pos2: UE.Vector;
        PriAxis2: UE.Vector;
        SecAxis2: UE.Vector;
        bEnableProjection: boolean;
        ProjectionLinearTolerance: number;
        ProjectionAngularTolerance: number;
        LinearXMotion: UE.ELinearConstraintMotion;
        LinearYMotion: UE.ELinearConstraintMotion;
        LinearZMotion: UE.ELinearConstraintMotion;
        LinearLimitSize: number;
        bLinearLimitSoft: boolean;
        LinearLimitStiffness: number;
        LinearLimitDamping: number;
        bLinearBreakable: boolean;
        LinearBreakThreshold: number;
        AngularSwing1Motion: UE.EAngularConstraintMotion;
        AngularSwing2Motion: UE.EAngularConstraintMotion;
        AngularTwistMotion: UE.EAngularConstraintMotion;
        bSwingLimitSoft: boolean;
        bTwistLimitSoft: boolean;
        Swing1LimitAngle: number;
        Swing2LimitAngle: number;
        TwistLimitAngle: number;
        SwingLimitStiffness: number;
        SwingLimitDamping: number;
        TwistLimitStiffness: number;
        TwistLimitDamping: number;
        bAngularBreakable: boolean;
        AngularBreakThreshold: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsConstraintTemplate;
        static Load(InName: string): PhysicsConstraintTemplate;
    
        __tid_PhysicsConstraintTemplate_0__: boolean;
    }
    
    class SolverIterations {
        constructor();
        constructor(FixedTimeStep: number, SolverIterations: number, JointIterations: number, CollisionIterations: number, SolverPushOutIterations: number, JointPushOutIterations: number, CollisionPushOutIterations: number);
        FixedTimeStep: number;
        SolverIterations: number;
        JointIterations: number;
        CollisionIterations: number;
        SolverPushOutIterations: number;
        JointPushOutIterations: number;
        CollisionPushOutIterations: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SolverIterations_0__: boolean;
    }
    
    class PhysicsAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultSkelMesh: UE.SkeletalMesh;
        PreviewSkeletalMesh: TSoftObjectPtr<UE.SkeletalMesh>;
        PhysicalAnimationProfiles: TArray<string>;
        ConstraintProfiles: TArray<string>;
        CurrentPhysicalAnimationProfileName: string;
        CurrentConstraintProfileName: string;
        BoundsBodies: TArray<number>;
        SkeletalBodySetups: TArray<UE.SkeletalBodySetup>;
        ConstraintSetup: TArray<UE.PhysicsConstraintTemplate>;
        SolverIterations: UE.SolverIterations;
        bNotForDedicatedServer: boolean;
        ThumbnailInfo: UE.ThumbnailInfo;
        BodySetup: TArray<UE.BodySetup>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsAsset;
        static Load(InName: string): PhysicsAsset;
    
        __tid_PhysicsAsset_0__: boolean;
    }
    
    class NodeItem {
        constructor();
        constructor(ParentName: string, Transform: UE.Transform);
        ParentName: string;
        Transform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NodeItem_0__: boolean;
    }
    
    class NodeMappingContainer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceItems: TMap<string, UE.NodeItem>;
        TargetItems: TMap<string, UE.NodeItem>;
        SourceToTarget: TMap<string, string>;
        SourceAsset: TSoftObjectPtr<UE.Object>;
        TargetAsset: TSoftObjectPtr<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NodeMappingContainer;
        static Load(InName: string): NodeMappingContainer;
    
        __tid_NodeMappingContainer_0__: boolean;
    }
    
    class MorphTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseSkelMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MorphTarget;
        static Load(InName: string): MorphTarget;
    
        __tid_MorphTarget_0__: boolean;
    }
    
    class ClothPhysicsProperties_Legacy {
        constructor();
        constructor(VerticalResistance: number, HorizontalResistance: number, BendResistance: number, ShearResistance: number, Friction: number, Damping: number, TetherStiffness: number, TetherLimit: number, Drag: number, StiffnessFrequency: number, GravityScale: number, MassScale: number, InertiaBlend: number, SelfCollisionThickness: number, SelfCollisionSquashScale: number, SelfCollisionStiffness: number, SolverFrequency: number, FiberCompression: number, FiberExpansion: number, FiberResistance: number);
        VerticalResistance: number;
        HorizontalResistance: number;
        BendResistance: number;
        ShearResistance: number;
        Friction: number;
        Damping: number;
        TetherStiffness: number;
        TetherLimit: number;
        Drag: number;
        StiffnessFrequency: number;
        GravityScale: number;
        MassScale: number;
        InertiaBlend: number;
        SelfCollisionThickness: number;
        SelfCollisionSquashScale: number;
        SelfCollisionStiffness: number;
        SolverFrequency: number;
        FiberCompression: number;
        FiberExpansion: number;
        FiberResistance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothPhysicsProperties_Legacy_0__: boolean;
    }
    
    class ClothingAssetData_Legacy {
        constructor();
        constructor(AssetName: string, ApexFileName: string, bClothPropertiesChanged: boolean, PhysicsProperties: UE.ClothPhysicsProperties_Legacy);
        AssetName: string;
        ApexFileName: string;
        bClothPropertiesChanged: boolean;
        PhysicsProperties: UE.ClothPhysicsProperties_Legacy;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothingAssetData_Legacy_0__: boolean;
    }
    
    class ClothingAssetBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportedFilePath: string;
        AssetGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingAssetBase;
        static Load(InName: string): ClothingAssetBase;
    
        __tid_ClothingAssetBase_0__: boolean;
    }
    
    class SkeletalMeshSamplingRegionMaterialFilter {
        constructor();
        constructor(MaterialName: string);
        MaterialName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshSamplingRegionMaterialFilter_0__: boolean;
    }
    
    class SkeletalMeshSamplingRegionBoneFilter {
        constructor();
        constructor(BoneName: string, bIncludeOrExclude: boolean, bApplyToChildren: boolean);
        BoneName: string;
        bIncludeOrExclude: boolean;
        bApplyToChildren: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshSamplingRegionBoneFilter_0__: boolean;
    }
    
    class SkeletalMeshSamplingRegion {
        constructor();
        constructor(Name: string, LODIndex: number, bSupportUniformlyDistributedSampling: boolean, MaterialFilters: TArray<UE.SkeletalMeshSamplingRegionMaterialFilter>, BoneFilters: TArray<UE.SkeletalMeshSamplingRegionBoneFilter>);
        Name: string;
        LODIndex: number;
        bSupportUniformlyDistributedSampling: boolean;
        MaterialFilters: TArray<UE.SkeletalMeshSamplingRegionMaterialFilter>;
        BoneFilters: TArray<UE.SkeletalMeshSamplingRegionBoneFilter>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshSamplingRegion_0__: boolean;
    }
    
    class SkeletalMeshSamplingLODBuiltData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshSamplingLODBuiltData_0__: boolean;
    }
    
    class SkeletalMeshSamplingRegionBuiltData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshSamplingRegionBuiltData_0__: boolean;
    }
    
    class SkeletalMeshSamplingBuiltData {
        constructor();
        constructor(WholeMeshBuiltData: TArray<UE.SkeletalMeshSamplingLODBuiltData>, RegionBuiltData: TArray<UE.SkeletalMeshSamplingRegionBuiltData>);
        WholeMeshBuiltData: TArray<UE.SkeletalMeshSamplingLODBuiltData>;
        RegionBuiltData: TArray<UE.SkeletalMeshSamplingRegionBuiltData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshSamplingBuiltData_0__: boolean;
    }
    
    class SkeletalMeshSamplingInfo {
        constructor();
        constructor(Regions: TArray<UE.SkeletalMeshSamplingRegion>, BuiltData: UE.SkeletalMeshSamplingBuiltData);
        Regions: TArray<UE.SkeletalMeshSamplingRegion>;
        BuiltData: UE.SkeletalMeshSamplingBuiltData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshSamplingInfo_0__: boolean;
    }
    
    class SkinWeightProfileInfo {
        constructor();
        constructor(Name: string, DefaultProfile: UE.PerPlatformBool, DefaultProfileFromLODIndex: UE.PerPlatformInt, PerLODSourceFiles: TMap<number, string>);
        Name: string;
        DefaultProfile: UE.PerPlatformBool;
        DefaultProfileFromLODIndex: UE.PerPlatformInt;
        PerLODSourceFiles: TMap<number, string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkinWeightProfileInfo_0__: boolean;
    }
    
    class BlueprintCore extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SkeletonGeneratedClass: UE.Class;
        GeneratedClass: UE.Class;
        bLegacyNeedToPurgeSkelRefs: boolean;
        BlueprintGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintCore;
        static Load(InName: string): BlueprintCore;
    
        __tid_BlueprintCore_0__: boolean;
    }
    
    enum EBlueprintType { BPTYPE_Normal, BPTYPE_Const, BPTYPE_MacroLibrary, BPTYPE_Interface, BPTYPE_LevelScript, BPTYPE_FunctionLibrary, BPTYPE_MAX, __typeKeyDoNoAccess}
    enum EBlueprintNativizationFlag { Disabled, Dependency, ExplicitlyEnabled, EBlueprintNativizationFlag_MAX, __typeKeyDoNoAccess}
    enum EBlueprintCompileMode { Default, Development, FinalRelease, EBlueprintCompileMode_MAX, __typeKeyDoNoAccess}
    enum EBlueprintStatus { BS_Unknown, BS_Dirty, BS_Error, BS_UpToDate, BS_BeingCreated, BS_UpToDateWithWarnings, BS_MAX, __typeKeyDoNoAccess}
    class BlueprintComponentChangedPropertyInfo {
        constructor();
        constructor(PropertyName: string, ArrayIndex: number, PropertyScope: UE.Struct);
        PropertyName: string;
        ArrayIndex: number;
        PropertyScope: UE.Struct;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintComponentChangedPropertyInfo_0__: boolean;
    }
    
    class BlueprintCookedComponentInstancingData {
        constructor();
        constructor(ChangedPropertyList: TArray<UE.BlueprintComponentChangedPropertyInfo>, bHasValidCookedData: boolean);
        ChangedPropertyList: TArray<UE.BlueprintComponentChangedPropertyInfo>;
        bHasValidCookedData: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintCookedComponentInstancingData_0__: boolean;
    }
    
    class BPVariableMetaDataEntry {
        constructor();
        constructor(DataKey: string, DataValue: string);
        DataKey: string;
        DataValue: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BPVariableMetaDataEntry_0__: boolean;
    }
    
    class SCS_Node extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComponentClass: UE.Class;
        ComponentTemplate: UE.ActorComponent;
        CookedComponentInstancingData: UE.BlueprintCookedComponentInstancingData;
        CategoryName: string;
        AttachToName: string;
        ParentComponentOrVariableName: string;
        ParentComponentOwnerClassName: string;
        bIsParentComponentNative: boolean;
        ChildNodes: TArray<UE.SCS_Node>;
        MetaDataArray: TArray<UE.BPVariableMetaDataEntry>;
        VariableGuid: UE.Guid;
        bIsNative: boolean;
        NativeComponentName: string;
        bVariableNameAutoGenerated: boolean;
        InternalVariableName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SCS_Node;
        static Load(InName: string): SCS_Node;
    
        __tid_SCS_Node_0__: boolean;
    }
    
    class SimpleConstructionScript extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RootNodes: TArray<UE.SCS_Node>;
        AllNodes: TArray<UE.SCS_Node>;
        DefaultSceneRootNode: UE.SCS_Node;
        RootNode: UE.SCS_Node;
        ActorComponentNodes: TArray<UE.SCS_Node>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SimpleConstructionScript;
        static Load(InName: string): SimpleConstructionScript;
    
        __tid_SimpleConstructionScript_0__: boolean;
    }
    
    class EdGraph extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Schema: UE.Class;
        Nodes: TArray<UE.EdGraphNode>;
        bEditable: boolean;
        bAllowDeletion: boolean;
        bAllowRenaming: boolean;
        SubGraphs: TArray<UE.EdGraph>;
        GraphGuid: UE.Guid;
        InterfaceGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraph;
        static Load(InName: string): EdGraph;
    
        __tid_EdGraph_0__: boolean;
    }
    
    class BlueprintMacroCosmeticInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintMacroCosmeticInfo_0__: boolean;
    }
    
    enum ETimelineLengthMode { TL_TimelineLength, TL_LastKeyFrame, TL_MAX, __typeKeyDoNoAccess}
    class TTTrackBase {
        constructor();
        constructor(TrackName: string, bIsExternalCurve: boolean, bIsExpanded: boolean, bIsCurveViewSynchronized: boolean);
        TrackName: string;
        bIsExternalCurve: boolean;
        bIsExpanded: boolean;
        bIsCurveViewSynchronized: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TTTrackBase_0__: boolean;
    }
    
    class TTEventTrack extends UE.TTTrackBase {
        constructor();
        constructor(FunctionName: string, CurveKeys: UE.CurveFloat);
        FunctionName: string;
        CurveKeys: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TTEventTrack_0__: boolean;
    }
    
    class TTPropertyTrack extends UE.TTTrackBase {
        constructor();
        constructor(PropertyName: string);
        PropertyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TTPropertyTrack_0__: boolean;
    }
    
    class TTFloatTrack extends UE.TTPropertyTrack {
        constructor();
        constructor(CurveFloat: UE.CurveFloat);
        CurveFloat: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TTFloatTrack_0__: boolean;
    }
    
    class CurveVector extends UE.CurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatCurves: FixSizeArray<UE.RichCurve>;
        GetVectorValue(InTime: number) : UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveVector;
        static Load(InName: string): CurveVector;
    
        __tid_CurveVector_0__: boolean;
    }
    
    class TTVectorTrack extends UE.TTPropertyTrack {
        constructor();
        constructor(CurveVector: UE.CurveVector);
        CurveVector: UE.CurveVector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TTVectorTrack_0__: boolean;
    }
    
    class TTLinearColorTrack extends UE.TTPropertyTrack {
        constructor();
        constructor(CurveLinearColor: UE.CurveLinearColor);
        CurveLinearColor: UE.CurveLinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TTLinearColorTrack_0__: boolean;
    }
    
    class TTTrackId {
        constructor();
        constructor(TrackType: number, TrackIndex: number);
        TrackType: number;
        TrackIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TTTrackId_0__: boolean;
    }
    
    class TimelineTemplate extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TimelineLength: number;
        LengthMode: UE.ETimelineLengthMode;
        bAutoPlay: boolean;
        bLoop: boolean;
        bReplicated: boolean;
        bIgnoreTimeDilation: boolean;
        EventTracks: TArray<UE.TTEventTrack>;
        FloatTracks: TArray<UE.TTFloatTrack>;
        VectorTracks: TArray<UE.TTVectorTrack>;
        LinearColorTracks: TArray<UE.TTLinearColorTrack>;
        MetaDataArray: TArray<UE.BPVariableMetaDataEntry>;
        TimelineGuid: UE.Guid;
        VariableName: string;
        DirectionPropertyName: string;
        UpdateFunctionName: string;
        FinishedFunctionName: string;
        TrackDisplayOrder: TArray<UE.TTTrackId>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TimelineTemplate;
        static Load(InName: string): TimelineTemplate;
    
        __tid_TimelineTemplate_0__: boolean;
    }
    
    class BPComponentClassOverride {
        constructor();
        constructor(ComponentName: string, ComponentClass: UE.Class);
        ComponentName: string;
        ComponentClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BPComponentClassOverride_0__: boolean;
    }
    
    class ComponentKey {
        constructor();
        constructor(OwnerClass: UE.Class, SCSVariableName: string, AssociatedGuid: UE.Guid);
        OwnerClass: UE.Class;
        SCSVariableName: string;
        AssociatedGuid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentKey_0__: boolean;
    }
    
    class ComponentOverrideRecord {
        constructor();
        constructor(ComponentClass: UE.Class, ComponentTemplate: UE.ActorComponent, ComponentKey: UE.ComponentKey, CookedComponentInstancingData: UE.BlueprintCookedComponentInstancingData);
        ComponentClass: UE.Class;
        ComponentTemplate: UE.ActorComponent;
        ComponentKey: UE.ComponentKey;
        CookedComponentInstancingData: UE.BlueprintCookedComponentInstancingData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentOverrideRecord_0__: boolean;
    }
    
    class InheritableComponentHandler extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Records: TArray<UE.ComponentOverrideRecord>;
        UnnecessaryComponents: TArray<UE.ActorComponent>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InheritableComponentHandler;
        static Load(InName: string): InheritableComponentHandler;
    
        __tid_InheritableComponentHandler_0__: boolean;
    }
    
    enum ELifetimeCondition { COND_None, COND_InitialOnly, COND_OwnerOnly, COND_SkipOwner, COND_SimulatedOnly, COND_AutonomousOnly, COND_SimulatedOrPhysics, COND_InitialOrOwner, COND_Custom, COND_ReplayOrOwner, COND_ReplayOnly, COND_SimulatedOnlyNoReplay, COND_SimulatedOrPhysicsNoReplay, COND_SkipReplay, COND_Never, COND_Max, COND_MAX, __typeKeyDoNoAccess}
    class BPVariableDescription {
        constructor();
        constructor(VarName: string, VarGuid: UE.Guid, VarType: UE.EdGraphPinType, FriendlyName: string, Category: string, PropertyFlags: bigint, RepNotifyFunc: string, ReplicationCondition: UE.ELifetimeCondition, MetaDataArray: TArray<UE.BPVariableMetaDataEntry>, DefaultValue: string);
        VarName: string;
        VarGuid: UE.Guid;
        VarType: UE.EdGraphPinType;
        FriendlyName: string;
        Category: string;
        PropertyFlags: bigint;
        RepNotifyFunc: string;
        ReplicationCondition: UE.ELifetimeCondition;
        MetaDataArray: TArray<UE.BPVariableMetaDataEntry>;
        DefaultValue: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BPVariableDescription_0__: boolean;
    }
    
    class BPInterfaceDescription {
        constructor();
        constructor(Interface: UE.Class, Graphs: TArray<UE.EdGraph>);
        Interface: UE.Class;
        Graphs: TArray<UE.EdGraph>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BPInterfaceDescription_0__: boolean;
    }
    
    class EditedDocumentInfo {
        constructor();
        constructor(EditedObjectPath: UE.SoftObjectPath, SavedViewOffset: UE.Vector2D, SavedZoomAmount: number, EditedObject: UE.Object);
        EditedObjectPath: UE.SoftObjectPath;
        SavedViewOffset: UE.Vector2D;
        SavedZoomAmount: number;
        EditedObject: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditedDocumentInfo_0__: boolean;
    }
    
    class BPEditorBookmarkNode {
        constructor();
        constructor(NodeGuid: UE.Guid, ParentGuid: UE.Guid, DisplayName: string);
        NodeGuid: UE.Guid;
        ParentGuid: UE.Guid;
        DisplayName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BPEditorBookmarkNode_0__: boolean;
    }
    
    class Breakpoint extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnabled: boolean;
        Node: UE.EdGraphNode;
        bStepOnce: boolean;
        bStepOnce_WasPreviouslyDisabled: boolean;
        bStepOnce_RemoveAfterHit: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Breakpoint;
        static Load(InName: string): Breakpoint;
    
        __tid_Breakpoint_0__: boolean;
    }
    
    class EdGraphPinReference {
        constructor();
        constructor(OwningNode: TWeakObjectPtr<UE.EdGraphNode>, PinId: UE.Guid);
        OwningNode: TWeakObjectPtr<UE.EdGraphNode>;
        PinId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphPinReference_0__: boolean;
    }
    
    class BlueprintExtension extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintExtension;
        static Load(InName: string): BlueprintExtension;
    
        __tid_BlueprintExtension_0__: boolean;
    }
    
    class Blueprint extends UE.BlueprintCore {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentClass: UE.Class;
        BlueprintType: UE.EBlueprintType;
        bRecompileOnLoad: boolean;
        bHasBeenRegenerated: boolean;
        bIsRegeneratingOnLoad: boolean;
        bBeingCompiled: boolean;
        bIsNewlyCreated: boolean;
        bForceFullEditor: boolean;
        bQueuedForCompilation: boolean;
        bRunConstructionScriptOnDrag: boolean;
        bRunConstructionScriptInSequencer: boolean;
        bGenerateConstClass: boolean;
        bGenerateAbstractClass: boolean;
        bDisplayCompilePIEWarning: boolean;
        bDeprecate: boolean;
        bDuplicatingReadOnly: boolean;
        bNativize: boolean;
        NativizationFlag: UE.EBlueprintNativizationFlag;
        CompileMode: UE.EBlueprintCompileMode;
        Status: UE.EBlueprintStatus;
        BlueprintDisplayName: string;
        BlueprintDescription: string;
        BlueprintNamespace: string;
        BlueprintCategory: string;
        HideCategories: TArray<string>;
        BlueprintSystemVersion: number;
        SimpleConstructionScript: UE.SimpleConstructionScript;
        UbergraphPages: TArray<UE.EdGraph>;
        FunctionGraphs: TArray<UE.EdGraph>;
        DelegateSignatureGraphs: TArray<UE.EdGraph>;
        MacroGraphs: TArray<UE.EdGraph>;
        IntermediateGeneratedGraphs: TArray<UE.EdGraph>;
        EventGraphs: TArray<UE.EdGraph>;
        PRIVATE_CachedMacroInfo: TMap<UE.EdGraph, UE.BlueprintMacroCosmeticInfo>;
        ComponentTemplates: TArray<UE.ActorComponent>;
        Timelines: TArray<UE.TimelineTemplate>;
        ComponentClassOverrides: TArray<UE.BPComponentClassOverride>;
        InheritableComponentHandler: UE.InheritableComponentHandler;
        NewVariables: TArray<UE.BPVariableDescription>;
        CategorySorting: TArray<string>;
        ImplementedInterfaces: TArray<UE.BPInterfaceDescription>;
        LastEditedDocuments: TArray<UE.EditedDocumentInfo>;
        Bookmarks: TMap<UE.Guid, UE.EditedDocumentInfo>;
        BookmarkNodes: TArray<UE.BPEditorBookmarkNode>;
        Breakpoints: TArray<UE.Breakpoint>;
        WatchedPins: TArray<UE.EdGraphPinReference>;
        DeprecatedPinWatches: TArray<UE.EdGraphPin_Deprecated>;
        ComponentTemplateNameIndex: TMap<string, number>;
        OldToNewComponentTemplateNames: TMap<string, string>;
        Extensions: TArray<UE.BlueprintExtension>;
        ThumbnailInfo: UE.ThumbnailInfo;
        CrcLastCompiledCDO: number;
        CrcLastCompiledSignature: number;
        OriginalClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Blueprint;
        static Load(InName: string): Blueprint;
    
        __tid_Blueprint_0__: boolean;
    }
    
    class SkeletalMesh extends UE.StreamableRenderAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MeshEditorDataObject: UE.SkeletalMeshEditorData;
        Skeleton: UE.Skeleton;
        ImportedBounds: UE.BoxSphereBounds;
        ExtendedBounds: UE.BoxSphereBounds;
        PositiveBoundsExtension: UE.Vector;
        NegativeBoundsExtension: UE.Vector;
        Materials: TArray<UE.SkeletalMaterial>;
        SkelMirrorTable: TArray<UE.BoneMirrorInfo>;
        LODInfo: TArray<UE.SkeletalMeshLODInfo>;
        MinLod: UE.PerPlatformInt;
        DisableBelowMinLodStripping: UE.PerPlatformBool;
        bOverrideLODStreamingSettings: boolean;
        bSupportLODStreaming: UE.PerPlatformBool;
        MaxNumStreamedLODs: UE.PerPlatformInt;
        MaxNumOptionalLODs: UE.PerPlatformInt;
        LODSettings: UE.SkeletalMeshLODSettings;
        DefaultAnimatingRig: TSoftObjectPtr<UE.Object>;
        SkelMirrorAxis: UE.EAxis;
        SkelMirrorFlipAxis: UE.EAxis;
        bUseFullPrecisionUVs: boolean;
        bUseHighPrecisionTangentBasis: boolean;
        bHasBeenSimplified: boolean;
        bHasVertexColors: boolean;
        bEnablePerPolyCollision: boolean;
        VertexColorGuid: UE.Guid;
        BodySetup: UE.BodySetup;
        PhysicsAsset: UE.PhysicsAsset;
        ShadowPhysicsAsset: UE.PhysicsAsset;
        NodeMappingData: TArray<UE.NodeMappingContainer>;
        AssetImportData: UE.AssetImportData;
        SourceFilePath: string;
        SourceFileTimestamp: string;
        ThumbnailInfo: UE.ThumbnailInfo;
        bHasCustomDefaultEditorCamera: boolean;
        DefaultEditorCameraLocation: UE.Vector;
        DefaultEditorCameraRotation: UE.Rotator;
        DefaultEditorCameraLookAt: UE.Vector;
        DefaultEditorCameraOrthoZoom: number;
        PreviewAttachedAssetContainer: UE.PreviewAssetAttachContainer;
        MorphTargets: TArray<UE.MorphTarget>;
        FloorOffset: number;
        RetargetBasePose: TArray<UE.Transform>;
        ClothingAssets: TArray<UE.ClothingAssetData_Legacy>;
        PostProcessAnimBlueprint: UE.Class;
        MeshClothingAssets: TArray<UE.ClothingAssetBase>;
        SamplingInfo: UE.SkeletalMeshSamplingInfo;
        AssetUserData: TArray<UE.AssetUserData>;
        Sockets: TArray<UE.SkeletalMeshSocket>;
        SkinWeightProfiles: TArray<UE.SkinWeightProfileInfo>;
        FindSocket(InSocketName: string) : UE.SkeletalMeshSocket;
        FindSocketAndIndex(InSocketName: string, OutIndex: $Ref<number>) : UE.SkeletalMeshSocket;
        FindSocketInfo(InSocketName: string, OutTransform: $Ref<UE.Transform>, OutBoneIndex: $Ref<number>, OutIndex: $Ref<number>) : UE.SkeletalMeshSocket;
        GetBounds() : UE.BoxSphereBounds;
        GetDefaultAnimatingRig() : TSoftObjectPtr<UE.Object>;
        GetImportedBounds() : UE.BoxSphereBounds;
        GetNodeMappingContainer(SourceAsset: $Nullable<UE.Blueprint>) : UE.NodeMappingContainer;
        GetSocketByIndex(Index: number) : UE.SkeletalMeshSocket;
        IsSectionUsingCloth(InSectionIndex: number, bCheckCorrespondingSections?: boolean /* = true */) : boolean;
        K2_GetAllMorphTargetNames() : TArray<string>;
        NumSockets() : number;
        SetDefaultAnimatingRig(InAnimatingRig: TSoftObjectPtr<UE.Object>) : void;
        SetLODSettings(InLODSettings: $Nullable<UE.SkeletalMeshLODSettings>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMesh;
        static Load(InName: string): SkeletalMesh;
    
        __tid_SkeletalMesh_0__: boolean;
    }
    
    class VertexOffsetUsage {
        constructor();
        constructor(Usage: number);
        Usage: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexOffsetUsage_0__: boolean;
    }
    
    class SkelMeshComponentLODInfo {
        constructor();
        constructor(HiddenMaterials: TArray<boolean>);
        HiddenMaterials: TArray<boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkelMeshComponentLODInfo_0__: boolean;
    }
    
    enum EVisibilityBasedAnimTickOption { AlwaysTickPoseAndRefreshBones, AlwaysTickPose, OnlyTickMontagesWhenNotRendered, OnlyTickPoseWhenRendered, EVisibilityBasedAnimTickOption_MAX, __typeKeyDoNoAccess}
    class SkelMeshSkinWeightInfo {
        constructor();
        constructor(Bones: FixSizeArray<number>, Weights: FixSizeArray<number>);
        Bones: FixSizeArray<number>;
        Weights: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkelMeshSkinWeightInfo_0__: boolean;
    }
    
    enum EPhysBodyOp { PBO_None, PBO_Term, PBO_MAX, __typeKeyDoNoAccess}
    class SkinnedMeshComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SkeletalMesh: UE.SkeletalMesh;
        MasterPoseComponent: TWeakObjectPtr<UE.SkinnedMeshComponent>;
        SkinCacheUsage: TArray<UE.ESkinCacheUsage>;
        VertexOffsetUsage: TArray<UE.VertexOffsetUsage>;
        WireframeColor: UE.Color;
        PhysicsAssetOverride: UE.PhysicsAsset;
        ForcedLodModel: number;
        MinLodModel: number;
        StreamingDistanceMultiplier: number;
        LODInfo: TArray<UE.SkelMeshComponentLODInfo>;
        VisibilityBasedAnimTickOption: UE.EVisibilityBasedAnimTickOption;
        bOverrideMinLod: boolean;
        bUseBoundsFromMasterPoseComponent: boolean;
        bForceWireframe: boolean;
        bDisplayBones: boolean;
        bDisableMorphTarget: boolean;
        bHideSkin: boolean;
        bPerBoneMotionBlur: boolean;
        bComponentUseFixedSkelBounds: boolean;
        bConsiderAllBodiesForBounds: boolean;
        bSyncAttachParentLOD: boolean;
        bCanHighlightSelectedSections: boolean;
        bRecentlyRendered: boolean;
        bCastCapsuleDirectShadow: boolean;
        bCastCapsuleIndirectShadow: boolean;
        bCPUSkinning: boolean;
        bEnableUpdateRateOptimizations: boolean;
        bDisplayDebugUpdateRateOptimizations: boolean;
        bRenderStatic: boolean;
        bIgnoreMasterPoseComponentLOD: boolean;
        bCachedLocalBoundsUpToDate: boolean;
        bForceMeshObjectUpdate: boolean;
        CapsuleIndirectShadowMinVisibility: number;
        CachedWorldSpaceBounds: UE.BoxSphereBounds;
        CachedWorldToLocalTransform: UE.Matrix;
        BoneIsChildOf(BoneName: string, ParentBoneName: string) : boolean;
        ClearSkinWeightOverride(LODIndex: number) : void;
        ClearSkinWeightProfile() : void;
        ClearVertexColorOverride(LODIndex: number) : void;
        FindClosestBone_K2(TestLocation: UE.Vector, BoneLocation: $Ref<UE.Vector>, IgnoreScale?: number /* = 0.000000 */, bRequirePhysicsAsset?: boolean /* = false */) : string;
        GetBoneIndex(BoneName: string) : number;
        GetBoneName(BoneIndex: number) : string;
        GetCurrentSkinWeightProfileName() : string;
        GetDeltaTransformFromRefPose(BoneName: string, BaseName?: string /* = "None" */) : UE.Transform;
        GetForcedLOD() : number;
        GetNumBones() : number;
        GetNumLODs() : number;
        GetParentBone(BoneName: string) : string;
        GetRefPosePosition(BoneIndex: number) : UE.Vector;
        GetSocketBoneName(InSocketName: string) : string;
        GetTwistAndSwingAngleOfDeltaRotationFromRefPose(BoneName: string, OutTwistAngle: $Ref<number>, OutSwingAngle: $Ref<number>) : boolean;
        GetVertexOffsetUsage(LODIndex: number) : number;
        HideBoneByName(BoneName: string, PhysBodyOption: UE.EPhysBodyOp) : void;
        IsBoneHiddenByName(BoneName: string) : boolean;
        IsMaterialSectionShown(MaterialID: number, LODIndex: number) : boolean;
        IsUsingSkinWeightProfile() : boolean;
        SetCapsuleIndirectShadowMinVisibility(NewValue: number) : void;
        SetCastCapsuleDirectShadow(bNewValue: boolean) : void;
        SetCastCapsuleIndirectShadow(bNewValue: boolean) : void;
        SetForcedLOD(InNewForcedLOD: number) : void;
        SetMasterPoseComponent(NewMasterBoneComponent: $Nullable<UE.SkinnedMeshComponent>, bForceUpdate?: boolean /* = false */) : void;
        SetMinLOD(InNewMinLOD: number) : void;
        SetPhysicsAsset(NewPhysicsAsset: $Nullable<UE.PhysicsAsset>, bForceReInit?: boolean /* = false */) : void;
        SetPostSkinningOffsets(LODIndex: number, Offsets: TArray<UE.Vector>) : void;
        SetPreSkinningOffsets(LODIndex: number, Offsets: TArray<UE.Vector>) : void;
        SetRenderStatic(bNewValue: boolean) : void;
        SetSkeletalMesh(NewMesh: $Nullable<UE.SkeletalMesh>, bReinitPose?: boolean /* = true */) : void;
        SetSkinWeightOverride(LODIndex: number, SkinWeights: TArray<UE.SkelMeshSkinWeightInfo>) : void;
        SetSkinWeightProfile(InProfileName: string) : boolean;
        SetVertexColorOverride_LinearColor(LODIndex: number, VertexColors: TArray<UE.LinearColor>) : void;
        SetVertexOffsetUsage(LODIndex: number, Usage: number) : void;
        ShowAllMaterialSections(LODIndex: number) : void;
        ShowMaterialSection(MaterialID: number, SectionIndex: number, bShow: boolean, LODIndex: number) : void;
        TransformFromBoneSpace(BoneName: string, InPosition: UE.Vector, InRotation: UE.Rotator, OutPosition: $Ref<UE.Vector>, OutRotation: $Ref<UE.Rotator>) : void;
        TransformToBoneSpace(BoneName: string, InPosition: UE.Vector, InRotation: UE.Rotator, OutPosition: $Ref<UE.Vector>, OutRotation: $Ref<UE.Rotator>) : void;
        UnHideBoneByName(BoneName: string) : void;
        UnloadSkinWeightProfile(InProfileName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkinnedMeshComponent;
        static Load(InName: string): SkinnedMeshComponent;
    
        __tid_SkinnedMeshComponent_0__: boolean;
    }
    
    class AnimGroupInfo {
        constructor();
        constructor(Name: string, Color: UE.LinearColor);
        Name: string;
        Color: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimGroupInfo_0__: boolean;
    }
    
    class AnimParentNodeAssetOverride {
        constructor();
        constructor(NewAsset: UE.AnimationAsset, ParentNodeGuid: UE.Guid);
        NewAsset: UE.AnimationAsset;
        ParentNodeGuid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimParentNodeAssetOverride_0__: boolean;
    }
    
    class PoseWatch extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.EdGraphNode;
        PoseWatchColour: UE.Color;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PoseWatch;
        static Load(InName: string): PoseWatch;
    
        __tid_PoseWatch_0__: boolean;
    }
    
    enum EPreviewAnimationBlueprintApplicationMethod { LinkedLayers, LinkedAnimGraph, EPreviewAnimationBlueprintApplicationMethod_MAX, __typeKeyDoNoAccess}
    class AnimBlueprint extends UE.Blueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeleton: UE.Skeleton;
        Groups: TArray<UE.AnimGroupInfo>;
        bUseMultiThreadedAnimationUpdate: boolean;
        bWarnAboutBlueprintUsage: boolean;
        ParentAssetOverrides: TArray<UE.AnimParentNodeAssetOverride>;
        PoseWatches: TArray<UE.PoseWatch>;
        PreviewSkeletalMesh: TSoftObjectPtr<UE.SkeletalMesh>;
        PreviewAnimationBlueprint: TSoftObjectPtr<UE.AnimBlueprint>;
        PreviewAnimationBlueprintApplicationMethod: UE.EPreviewAnimationBlueprintApplicationMethod;
        PreviewAnimationBlueprintTag: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBlueprint;
        static Load(InName: string): AnimBlueprint;
    
        __tid_AnimBlueprint_0__: boolean;
    }
    
    class DynamicBlueprintBinding extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DynamicBlueprintBinding;
        static Load(InName: string): DynamicBlueprintBinding;
    
        __tid_DynamicBlueprintBinding_0__: boolean;
    }
    
    class Property extends UE.Field {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Property;
        static Load(InName: string): Property;
    
        __tid_Property_0__: boolean;
    }
    
    class StructProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StructProperty;
        static Load(InName: string): StructProperty;
    
        __tid_StructProperty_0__: boolean;
    }
    
    class Function extends UE.Struct {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Function;
        static Load(InName: string): Function;
    
        __tid_Function_0__: boolean;
    }
    
    class EventGraphFastCallPair {
        constructor();
        constructor(FunctionToPatch: UE.Function, EventGraphCallOffset: number);
        FunctionToPatch: UE.Function;
        EventGraphCallOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EventGraphFastCallPair_0__: boolean;
    }
    
    class BlueprintGeneratedClass extends UE.Class {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumReplicatedProperties: number;
        bHasNativizedParent: boolean;
        bHasCookedComponentInstancingData: boolean;
        bIsSparseClassDataSerializable: boolean;
        DynamicBindingObjects: TArray<UE.DynamicBlueprintBinding>;
        ComponentTemplates: TArray<UE.ActorComponent>;
        Timelines: TArray<UE.TimelineTemplate>;
        ComponentClassOverrides: TArray<UE.BPComponentClassOverride>;
        SimpleConstructionScript: UE.SimpleConstructionScript;
        InheritableComponentHandler: UE.InheritableComponentHandler;
        UberGraphFramePointerProperty: UE.StructProperty;
        UberGraphFunction: UE.Function;
        FastCallPairs: TArray<UE.EventGraphFastCallPair>;
        OverridenArchetypeForCDO: UE.Object;
        PropertyGuids: TMap<string, UE.Guid>;
        CalledFunctions: TArray<UE.Function>;
        CookedComponentInstancingData: TMap<string, UE.BlueprintCookedComponentInstancingData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintGeneratedClass;
        static Load(InName: string): BlueprintGeneratedClass;
    
        __tid_BlueprintGeneratedClass_0__: boolean;
    }
    
    class BakedStateExitTransition {
        constructor();
        constructor(CanTakeDelegateIndex: number, CustomResultNodeIndex: number, TransitionIndex: number, bDesiredTransitionReturnValue: boolean, bAutomaticRemainingTimeRule: boolean, PoseEvaluatorLinks: TArray<number>);
        CanTakeDelegateIndex: number;
        CustomResultNodeIndex: number;
        TransitionIndex: number;
        bDesiredTransitionReturnValue: boolean;
        bAutomaticRemainingTimeRule: boolean;
        PoseEvaluatorLinks: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BakedStateExitTransition_0__: boolean;
    }
    
    class BakedAnimationState {
        constructor();
        constructor(StateName: string, Transitions: TArray<UE.BakedStateExitTransition>, StateRootNodeIndex: number, StartNotify: number, EndNotify: number, FullyBlendedNotify: number, bIsAConduit: boolean, EntryRuleNodeIndex: number, PlayerNodeIndices: TArray<number>, LayerNodeIndices: TArray<number>, bAlwaysResetOnEntry: boolean);
        StateName: string;
        Transitions: TArray<UE.BakedStateExitTransition>;
        StateRootNodeIndex: number;
        StartNotify: number;
        EndNotify: number;
        FullyBlendedNotify: number;
        bIsAConduit: boolean;
        EntryRuleNodeIndex: number;
        PlayerNodeIndices: TArray<number>;
        LayerNodeIndices: TArray<number>;
        bAlwaysResetOnEntry: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BakedAnimationState_0__: boolean;
    }
    
    class AnimationStateBase {
        constructor();
        constructor(StateName: string);
        StateName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationStateBase_0__: boolean;
    }
    
    enum ETransitionLogicType { TLT_StandardBlend, TLT_Inertialization, TLT_Custom, TLT_MAX, __typeKeyDoNoAccess}
    class AnimationTransitionBetweenStates extends UE.AnimationStateBase {
        constructor();
        constructor(PreviousState: number, NextState: number, CrossfadeDuration: number, StartNotify: number, EndNotify: number, InterruptNotify: number, BlendMode: UE.EAlphaBlendOption, CustomCurve: UE.CurveFloat, BlendProfile: UE.BlendProfile, LogicType: UE.ETransitionLogicType);
        PreviousState: number;
        NextState: number;
        CrossfadeDuration: number;
        StartNotify: number;
        EndNotify: number;
        InterruptNotify: number;
        BlendMode: UE.EAlphaBlendOption;
        CustomCurve: UE.CurveFloat;
        BlendProfile: UE.BlendProfile;
        LogicType: UE.ETransitionLogicType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationTransitionBetweenStates_0__: boolean;
    }
    
    class BakedAnimationStateMachine {
        constructor();
        constructor(MachineName: string, InitialState: number, States: TArray<UE.BakedAnimationState>, Transitions: TArray<UE.AnimationTransitionBetweenStates>);
        MachineName: string;
        InitialState: number;
        States: TArray<UE.BakedAnimationState>;
        Transitions: TArray<UE.AnimationTransitionBetweenStates>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BakedAnimationStateMachine_0__: boolean;
    }
    
    class CachedPoseIndices {
        constructor();
        constructor(OrderedSavedPoseNodeIndices: TArray<number>);
        OrderedSavedPoseNodeIndices: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedPoseIndices_0__: boolean;
    }
    
    enum EPostCopyOperation { None, LogicalNegateBool, EPostCopyOperation_MAX, __typeKeyDoNoAccess}
    class ExposedValueCopyRecord {
        constructor();
        constructor(CopyIndex: number, PostCopyOperation: UE.EPostCopyOperation);
        CopyIndex: number;
        PostCopyOperation: UE.EPostCopyOperation;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExposedValueCopyRecord_0__: boolean;
    }
    
    class ExposedValueHandler {
        BoundFunction: string;
        CopyRecords: TArray<UE.ExposedValueCopyRecord>;
        Function: UE.Function;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExposedValueHandler_0__: boolean;
    }
    
    class GraphAssetPlayerInformation {
        constructor();
        constructor(PlayerNodeIndices: TArray<number>);
        PlayerNodeIndices: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GraphAssetPlayerInformation_0__: boolean;
    }
    
    class AnimGraphBlendOptions {
        constructor();
        constructor(BlendInTime: number, BlendOutTime: number);
        BlendInTime: number;
        BlendOutTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimGraphBlendOptions_0__: boolean;
    }
    
    class PropertyAccessSegment {
        Name: string;
        Struct: UE.Struct;
        Function: UE.Function;
        ArrayIndex: number;
        Flags: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyAccessSegment_0__: boolean;
    }
    
    class PropertyAccessPath {
        constructor();
        constructor(PathSegmentStartIndex: number, PathSegmentCount: number, bHasEvents: boolean);
        PathSegmentStartIndex: number;
        PathSegmentCount: number;
        bHasEvents: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyAccessPath_0__: boolean;
    }
    
    enum EPropertyAccessCopyType { None, Plain, Complex, Bool, Struct, Object, Name, Array, PromoteBoolToByte, PromoteBoolToInt32, PromoteBoolToInt64, PromoteBoolToFloat, PromoteByteToInt32, PromoteByteToInt64, PromoteByteToFloat, PromoteInt32ToInt64, PromoteInt32ToFloat, EPropertyAccessCopyType_MAX, __typeKeyDoNoAccess}
    class PropertyAccessCopy {
        constructor();
        constructor(AccessIndex: number, DestAccessStartIndex: number, DestAccessEndIndex: number, Type: UE.EPropertyAccessCopyType);
        AccessIndex: number;
        DestAccessStartIndex: number;
        DestAccessEndIndex: number;
        Type: UE.EPropertyAccessCopyType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyAccessCopy_0__: boolean;
    }
    
    class PropertyAccessCopyBatch {
        constructor();
        constructor(Copies: TArray<UE.PropertyAccessCopy>);
        Copies: TArray<UE.PropertyAccessCopy>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyAccessCopyBatch_0__: boolean;
    }
    
    class PropertyAccessIndirectionChain {
        IndirectionStartIndex: number;
        IndirectionEndIndex: number;
        EventId: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyAccessIndirectionChain_0__: boolean;
    }
    
    enum EPropertyAccessObjectType { None, Object, WeakObject, SoftObject, EPropertyAccessObjectType_MAX, __typeKeyDoNoAccess}
    enum EPropertyAccessIndirectionType { Offset, Object, Array, ScriptFunction, NativeFunction, EPropertyAccessIndirectionType_MAX, __typeKeyDoNoAccess}
    class PropertyAccessIndirection {
        Function: UE.Function;
        ReturnBufferSize: number;
        ReturnBufferAlignment: number;
        ArrayIndex: number;
        Offset: number;
        ObjectType: UE.EPropertyAccessObjectType;
        Type: UE.EPropertyAccessIndirectionType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyAccessIndirection_0__: boolean;
    }
    
    class PropertyAccessLibrary {
        constructor();
        constructor(PathSegments: TArray<UE.PropertyAccessSegment>, SrcPaths: TArray<UE.PropertyAccessPath>, DestPaths: TArray<UE.PropertyAccessPath>, CopyBatches: FixSizeArray<UE.PropertyAccessCopyBatch>, SrcAccesses: TArray<UE.PropertyAccessIndirectionChain>, DestAccesses: TArray<UE.PropertyAccessIndirectionChain>, Indirections: TArray<UE.PropertyAccessIndirection>, EventAccessIndices: TArray<number>);
        PathSegments: TArray<UE.PropertyAccessSegment>;
        SrcPaths: TArray<UE.PropertyAccessPath>;
        DestPaths: TArray<UE.PropertyAccessPath>;
        CopyBatches: FixSizeArray<UE.PropertyAccessCopyBatch>;
        SrcAccesses: TArray<UE.PropertyAccessIndirectionChain>;
        DestAccesses: TArray<UE.PropertyAccessIndirectionChain>;
        Indirections: TArray<UE.PropertyAccessIndirection>;
        EventAccessIndices: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyAccessLibrary_0__: boolean;
    }
    
    class AnimBlueprintGeneratedClass extends UE.BlueprintGeneratedClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BakedStateMachines: TArray<UE.BakedAnimationStateMachine>;
        TargetSkeleton: UE.Skeleton;
        AnimNotifies: TArray<UE.AnimNotifyEvent>;
        OrderedSavedPoseIndicesMap: TMap<string, UE.CachedPoseIndices>;
        SyncGroupNames: TArray<string>;
        EvaluateGraphExposedInputs: TArray<UE.ExposedValueHandler>;
        GraphAssetPlayerInformation: TMap<string, UE.GraphAssetPlayerInformation>;
        GraphBlendOptions: TMap<string, UE.AnimGraphBlendOptions>;
        PropertyAccessLibrary: UE.PropertyAccessLibrary;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBlueprintGeneratedClass;
        static Load(InName: string): AnimBlueprintGeneratedClass;
    
        __tid_AnimBlueprintGeneratedClass_0__: boolean;
    }
    
    enum ERootMotionMode { NoRootMotionExtraction, IgnoreRootMotion, RootMotionFromEverything, RootMotionFromMontagesOnly, ERootMotionMode_MAX, __typeKeyDoNoAccess}
    class SoftClassPath extends UE.SoftObjectPath {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoftClassPath_0__: boolean;
    }
    
    class AnimNotifyEventReference {
        constructor();
        constructor(NotifySource: UE.Object);
        NotifySource: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNotifyEventReference_0__: boolean;
    }
    
    class AnimNotifyArray {
        constructor();
        constructor(Notifies: TArray<UE.AnimNotifyEventReference>);
        Notifies: TArray<UE.AnimNotifyEventReference>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNotifyArray_0__: boolean;
    }
    
    class AnimNotifyQueue {
        constructor();
        constructor(AnimNotifies: TArray<UE.AnimNotifyEventReference>, UnfilteredMontageAnimNotifies: TMap<string, UE.AnimNotifyArray>);
        AnimNotifies: TArray<UE.AnimNotifyEventReference>;
        UnfilteredMontageAnimNotifies: TMap<string, UE.AnimNotifyArray>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNotifyQueue_0__: boolean;
    }
    
    class PoseSnapshot {
        constructor();
        constructor(LocalTransforms: TArray<UE.Transform>, BoneNames: TArray<string>, SkeletalMeshName: string, SnapshotName: string, bIsValid: boolean);
        LocalTransforms: TArray<UE.Transform>;
        BoneNames: TArray<string>;
        SkeletalMeshName: string;
        SnapshotName: string;
        bIsValid: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PoseSnapshot_0__: boolean;
    }
    
    enum ETeleportType { None, TeleportPhysics, ResetPhysics, ETeleportType_MAX, __typeKeyDoNoAccess}
    enum EMontagePlayReturnType { MontageLength, Duration, EMontagePlayReturnType_MAX, __typeKeyDoNoAccess}
    class MarkerSyncAnimPosition {
        constructor();
        constructor(PreviousMarkerName: string, NextMarkerName: string, PositionBetweenMarkers: number);
        PreviousMarkerName: string;
        NextMarkerName: string;
        PositionBetweenMarkers: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MarkerSyncAnimPosition_0__: boolean;
    }
    
    enum EAnimCurveType { AttributeCurve, MaterialCurve, MorphTargetCurve, MaxAnimCurveType, EAnimCurveType_MAX, __typeKeyDoNoAccess}
    class AnimInstance extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurrentSkeleton: UE.Skeleton;
        RootMotionMode: UE.ERootMotionMode;
        DeltaTime: number;
        bRunUpdatesInWorkerThreads: boolean;
        bCanUseParallelUpdateAnimation: boolean;
        bWarnAboutBlueprintUsage: boolean;
        bUseMultiThreadedAnimationUpdate: boolean;
        bUsingCopyPoseFromMesh: boolean;
        bReceiveNotifiesFromLinkedInstances: boolean;
        bPropagateNotifiesToLinkedInstances: boolean;
        bQueueMontageEvents: boolean;
        OnMontageBlendingOut: $MulticastDelegate<(Montage: $Nullable<UE.AnimMontage>, bInterrupted: boolean) => void>;
        OnMontageStarted: $MulticastDelegate<(Montage: $Nullable<UE.AnimMontage>) => void>;
        OnMontageEnded: $MulticastDelegate<(Montage: $Nullable<UE.AnimMontage>, bInterrupted: boolean) => void>;
        OnAllMontageInstancesEnded: $MulticastDelegate<() => void>;
        PostCompileValidationClassName: UE.SoftClassPath;
        NotifyQueue: UE.AnimNotifyQueue;
        ActiveAnimNotifyState: TArray<UE.AnimNotifyEvent>;
        BlueprintBeginPlay() : void;
        BlueprintInitializeAnimation() : void;
        BlueprintLinkedAnimationLayersInitialized() : void;
        BlueprintPostEvaluateAnimation() : void;
        BlueprintUpdateAnimation(DeltaTimeX: number) : void;
        CalculateDirection(Velocity: UE.Vector, BaseRotation: UE.Rotator) : number;
        ClearMorphTargets() : void;
        GetActiveCurveNames(CurveType: UE.EAnimCurveType, OutNames: $Ref<TArray<string>>) : void;
        GetAllCurveNames(OutNames: $Ref<TArray<string>>) : void;
        GetCurrentActiveMontage() : UE.AnimMontage;
        GetCurrentStateName(MachineIndex: number) : string;
        GetCurveValue(CurveName: string) : number;
        GetInstanceAssetPlayerLength(AssetPlayerIndex: number) : number;
        GetInstanceAssetPlayerTime(AssetPlayerIndex: number) : number;
        GetInstanceAssetPlayerTimeFraction(AssetPlayerIndex: number) : number;
        GetInstanceAssetPlayerTimeFromEnd(AssetPlayerIndex: number) : number;
        GetInstanceAssetPlayerTimeFromEndFraction(AssetPlayerIndex: number) : number;
        GetInstanceCurrentStateElapsedTime(MachineIndex: number) : number;
        GetInstanceMachineWeight(MachineIndex: number) : number;
        GetInstanceStateWeight(MachineIndex: number, StateIndex: number) : number;
        GetInstanceTransitionCrossfadeDuration(MachineIndex: number, TransitionIndex: number) : number;
        GetInstanceTransitionTimeElapsed(MachineIndex: number, TransitionIndex: number) : number;
        GetInstanceTransitionTimeElapsedFraction(MachineIndex: number, TransitionIndex: number) : number;
        GetLinkedAnimGraphInstanceByTag(InTag: string) : UE.AnimInstance;
        GetLinkedAnimGraphInstancesByTag(InTag: string, OutLinkedInstances: $Ref<TArray<UE.AnimInstance>>) : void;
        GetLinkedAnimLayerInstanceByClass(InClass: $Nullable<UE.Class>) : UE.AnimInstance;
        GetLinkedAnimLayerInstanceByGroup(InGroup: string) : UE.AnimInstance;
        GetLinkedAnimLayerInstanceByGroupAndClass(InGroup: string, InClass: $Nullable<UE.Class>) : UE.AnimInstance;
        GetLinkedAnimLayerInstancesByGroup(InGroup: string, OutLinkedInstances: $Ref<TArray<UE.AnimInstance>>) : void;
        GetOwningActor() : UE.Actor;
        GetOwningComponent() : UE.SkeletalMeshComponent;
        GetPropagateNotifiesToLinkedInstances() : boolean;
        GetReceiveNotifiesFromLinkedInstances() : boolean;
        GetRelevantAnimLength(MachineIndex: number, StateIndex: number) : number;
        GetRelevantAnimTime(MachineIndex: number, StateIndex: number) : number;
        GetRelevantAnimTimeFraction(MachineIndex: number, StateIndex: number) : number;
        GetRelevantAnimTimeRemaining(MachineIndex: number, StateIndex: number) : number;
        GetRelevantAnimTimeRemainingFraction(MachineIndex: number, StateIndex: number) : number;
        GetSyncGroupPosition(InSyncGroupName: string) : UE.MarkerSyncAnimPosition;
        GetTimeToClosestMarker(SyncGroup: string, MarkerName: string, OutMarkerTime: $Ref<number>) : boolean;
        HasMarkerBeenHitThisFrame(SyncGroup: string, MarkerName: string) : boolean;
        IsAnyMontagePlaying() : boolean;
        IsPlayingSlotAnimation(Asset: $Nullable<UE.AnimSequenceBase>, SlotNodeName: string) : boolean;
        IsSyncGroupBetweenMarkers(InSyncGroupName: string, PreviousMarker: string, NextMarker: string, bRespectMarkerOrder?: boolean /* = true */) : boolean;
        LinkAnimClassLayers(InClass: $Nullable<UE.Class>) : void;
        LinkAnimGraphByTag(InTag: string, InClass: $Nullable<UE.Class>) : void;
        LockAIResources(bLockMovement: boolean, LockAILogic: boolean) : void;
        Montage_GetBlendTime(Montage: $Nullable<UE.AnimMontage>) : number;
        Montage_GetCurrentSection(Montage?: UE.AnimMontage /* = None */) : string;
        Montage_GetIsStopped(Montage: $Nullable<UE.AnimMontage>) : boolean;
        Montage_GetPlayRate(Montage: $Nullable<UE.AnimMontage>) : number;
        Montage_GetPosition(Montage: $Nullable<UE.AnimMontage>) : number;
        Montage_IsActive(Montage: $Nullable<UE.AnimMontage>) : boolean;
        Montage_IsPlaying(Montage: $Nullable<UE.AnimMontage>) : boolean;
        Montage_JumpToSection(SectionName: string, Montage?: UE.AnimMontage /* = None */) : void;
        Montage_JumpToSectionsEnd(SectionName: string, Montage?: UE.AnimMontage /* = None */) : void;
        Montage_Pause(Montage?: UE.AnimMontage /* = None */) : void;
        Montage_Play(MontageToPlay: $Nullable<UE.AnimMontage>, InPlayRate?: number /* = 1.000000 */, ReturnValueType?: UE.EMontagePlayReturnType /* = MontageLength */, InTimeToStartMontageAt?: number /* = 0.000000 */, bStopAllMontages?: boolean /* = true */) : number;
        Montage_Resume(Montage: $Nullable<UE.AnimMontage>) : void;
        Montage_SetNextSection(SectionNameToChange: string, NextSection: string, Montage?: UE.AnimMontage /* = None */) : void;
        Montage_SetPlayRate(Montage: $Nullable<UE.AnimMontage>, NewPlayRate?: number /* = 1.000000 */) : void;
        Montage_SetPosition(Montage: $Nullable<UE.AnimMontage>, NewPosition: number) : void;
        Montage_Stop(InBlendOutTime: number, Montage?: UE.AnimMontage /* = None */) : void;
        Montage_StopGroupByName(InBlendOutTime: number, GroupName: string) : void;
        PlaySlotAnimation(Asset: $Nullable<UE.AnimSequenceBase>, SlotNodeName: string, BlendInTime?: number /* = 0.250000 */, BlendOutTime?: number /* = 0.250000 */, InPlayRate?: number /* = 1.000000 */, LoopCount?: number /* = 1 */) : number;
        PlaySlotAnimationAsDynamicMontage(Asset: $Nullable<UE.AnimSequenceBase>, SlotNodeName: string, BlendInTime?: number /* = 0.250000 */, BlendOutTime?: number /* = 0.250000 */, InPlayRate?: number /* = 1.000000 */, LoopCount?: number /* = 1 */, BlendOutTriggerTime?: number /* = -1.000000 */, InTimeToStartMontageAt?: number /* = 0.000000 */) : UE.AnimMontage;
        ResetDynamics(InTeleportType: UE.ETeleportType) : void;
        SavePoseSnapshot(SnapshotName: string) : void;
        SetMorphTarget(MorphTargetName: string, Value: number) : void;
        SetPropagateNotifiesToLinkedInstances(bSet: boolean) : void;
        SetReceiveNotifiesFromLinkedInstances(bSet: boolean) : void;
        SetRootMotionMode(Value: UE.ERootMotionMode) : void;
        SnapshotPose(Snapshot: $Ref<UE.PoseSnapshot>) : void;
        StopSlotAnimation(InBlendOutTime?: number /* = 0.250000 */, SlotNodeName?: string /* = "None" */) : void;
        TryGetPawnOwner() : UE.Pawn;
        UnlinkAnimClassLayers(InClass: $Nullable<UE.Class>) : void;
        UnlockAIResources(bUnlockMovement: boolean, UnlockAILogic: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimInstance;
        static Load(InName: string): AnimInstance;
    
        __tid_AnimInstance_0__: boolean;
    }
    
    class SingleAnimationPlayData {
        constructor();
        constructor(AnimToPlay: UE.AnimationAsset, bSavedLooping: boolean, bSavedPlaying: boolean, SavedPosition: number, SavedPlayRate: number);
        AnimToPlay: UE.AnimationAsset;
        bSavedLooping: boolean;
        bSavedPlaying: boolean;
        SavedPosition: number;
        SavedPlayRate: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SingleAnimationPlayData_0__: boolean;
    }
    
    enum EKinematicBonesUpdateToPhysics { SkipSimulatingBones, SkipAllBones, EKinematicBonesUpdateToPhysics_MAX, __typeKeyDoNoAccess}
    enum EPhysicsTransformUpdateMode { SimulationUpatesComponentTransform, ComponentTransformIsKinematic, EPhysicsTransformUpdateMode_MAX, __typeKeyDoNoAccess}
    enum EAnimationMode { AnimationBlueprint, AnimationSingleNode, AnimationCustomMode, EAnimationMode_MAX, __typeKeyDoNoAccess}
    enum EClothMassMode { UniformMass, TotalMass, Density, MaxClothMassMode, EClothMassMode_MAX, __typeKeyDoNoAccess}
    class ClothingSimulationInteractor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClothConfigUpdated() : void;
        DisableGravityOverride() : void;
        EnableGravityOverride(InVector: UE.Vector) : void;
        GetNumCloths() : number;
        GetNumDynamicParticles() : number;
        GetNumIterations() : number;
        GetNumKinematicParticles() : number;
        GetNumSubsteps() : number;
        GetSimulationTime() : number;
        PhysicsAssetUpdated() : void;
        SetAnimDriveSpringStiffness(InStiffness: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingSimulationInteractor;
        static Load(InName: string): ClothingSimulationInteractor;
    
        __tid_ClothingSimulationInteractor_0__: boolean;
    }
    
    enum ECustomBoneAttributeLookup { BoneOnly, ImmediateParent, ParentHierarchy, ECustomBoneAttributeLookup_MAX, __typeKeyDoNoAccess}
    class SkeletalMeshComponent extends UE.SkinnedMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationBlueprint: UE.AnimBlueprint;
        AnimBlueprintGeneratedClass: UE.AnimBlueprintGeneratedClass;
        AnimClass: UE.Class;
        AnimScriptInstance: UE.AnimInstance;
        SubInstances: TArray<UE.AnimInstance>;
        PostProcessAnimInstance: UE.AnimInstance;
        AnimationData: UE.SingleAnimationPlayData;
        RootBoneTranslation: UE.Vector;
        LineCheckBoundsScale: UE.Vector;
        LinkedInstances: TArray<UE.AnimInstance>;
        CachedBoneSpaceTransforms: TArray<UE.Transform>;
        CachedComponentSpaceTransforms: TArray<UE.Transform>;
        GlobalAnimRateScale: number;
        KinematicBonesUpdateType: UE.EKinematicBonesUpdateToPhysics;
        PhysicsTransformUpdateMode: UE.EPhysicsTransformUpdateMode;
        AnimationMode: UE.EAnimationMode;
        bDisablePostProcessBlueprint: boolean;
        bUpdateOverlapsOnAnimationFinalize: boolean;
        bHasValidBodies: boolean;
        bBlendPhysics: boolean;
        bEnablePhysicsOnDedicatedServer: boolean;
        bUpdateJointsFromAnimation: boolean;
        bDisableClothSimulation: boolean;
        bDisableRigidBodyAnimNode: boolean;
        bAllowAnimCurveEvaluation: boolean;
        bDisableAnimCurves: boolean;
        bCollideWithEnvironment: boolean;
        bCollideWithAttachedChildren: boolean;
        bLocalSpaceSimulation: boolean;
        bResetAfterTeleport: boolean;
        bDeferKinematicBoneUpdate: boolean;
        bNoSkeletonUpdate: boolean;
        bPauseAnims: boolean;
        bUseRefPoseOnInitAnim: boolean;
        bEnablePerPolyCollision: boolean;
        bForceRefpose: boolean;
        bOnlyAllowAutonomousTickPose: boolean;
        bIsAutonomousTickPose: boolean;
        bOldForceRefPose: boolean;
        bShowPrePhysBones: boolean;
        bRequiredBonesUpToDate: boolean;
        bAnimTreeInitialised: boolean;
        bIncludeComponentLocationIntoBounds: boolean;
        bEnableLineCheckWithBounds: boolean;
        bUseBendingElements: boolean;
        bUseTetrahedralConstraints: boolean;
        bUseThinShellVolumeConstraints: boolean;
        bUseSelfCollisions: boolean;
        bUseContinuousCollisionDetection: boolean;
        bPropagateCurvesToSlaves: boolean;
        bSkipKinematicUpdateWhenInterpolating: boolean;
        bSkipBoundsUpdateWhenInterpolating: boolean;
        bUpdateAnimationInEditor: boolean;
        bUpdateClothInEditor: boolean;
        bNeedsQueuedAnimEventsDispatched: boolean;
        CachedAnimCurveUidVersion: number;
        MassMode: UE.EClothMassMode;
        UniformMass: number;
        TotalMass: number;
        Density: number;
        MinPerParticleMass: number;
        ClothBlendWeight: number;
        EdgeStiffness: number;
        BendingStiffness: number;
        AreaStiffness: number;
        VolumeStiffness: number;
        StrainLimitingStiffness: number;
        ShapeTargetStiffness: number;
        bWaitForParallelClothTask: boolean;
        DisallowedAnimCurves: TArray<string>;
        BodySetup: UE.BodySetup;
        OnConstraintBroken: $MulticastDelegate<(ConstraintIndex: number) => void>;
        ClothingSimulationFactory: UE.Class;
        TeleportDistanceThreshold: number;
        TeleportRotationThreshold: number;
        LastPoseTickFrame: number;
        ClothingInteractor: UE.ClothingSimulationInteractor;
        OnAnimInitialized: $MulticastDelegate<() => void>;
        SequenceToPlay: UE.AnimSequence;
        AnimToPlay: UE.AnimationAsset;
        bDefaultLooping: boolean;
        bDefaultPlaying: boolean;
        DefaultPosition: number;
        DefaultPlayRate: number;
        AccumulateAllBodiesBelowPhysicsBlendWeight(InBoneName: string, AddPhysicsBlendWeight: number, bSkipCustomPhysicsType?: boolean /* = false */) : void;
        AddForceToAllBodiesBelow(Force: UE.Vector, BoneName?: string /* = "None" */, bAccelChange?: boolean /* = false */, bIncludeSelf?: boolean /* = true */) : void;
        AddImpulseToAllBodiesBelow(Impulse: UE.Vector, BoneName?: string /* = "None" */, bVelChange?: boolean /* = false */, bIncludeSelf?: boolean /* = true */) : void;
        AllowAnimCurveEvaluation(NameOfCurve: string, bAllow: boolean) : void;
        BindClothToMasterPoseComponent() : void;
        BreakConstraint(Impulse: UE.Vector, HitLocation: UE.Vector, InBoneName: string) : void;
        ClearMorphTargets() : void;
        FindConstraintBoneName(ConstraintIndex: number) : string;
        ForceClothNextUpdateTeleport() : void;
        ForceClothNextUpdateTeleportAndReset() : void;
        GetAllowedAnimCurveEvaluate() : boolean;
        GetAllowRigidBodyAnimNode() : boolean;
        GetAnimationMode() : UE.EAnimationMode;
        GetAnimClass() : UE.Class;
        GetAnimInstance() : UE.AnimInstance;
        GetBoneMass(BoneName?: string /* = "None" */, bScaleMass?: boolean /* = true */) : number;
        GetClothingSimulationInteractor() : UE.ClothingSimulationInteractor;
        GetClothMaxDistanceScale() : number;
        GetCurrentJointAngles(InBoneName: string, Swing1Angle: $Ref<number>, TwistAngle: $Ref<number>, Swing2Angle: $Ref<number>) : void;
        GetDisableAnimCurves() : boolean;
        GetDisablePostProcessBlueprint() : boolean;
        GetFloatAttribute(BoneName: string, AttributeName: string, DefaultValue: number, OutValue: $Ref<number>, LookupType?: UE.ECustomBoneAttributeLookup /* = BoneOnly */) : boolean;
        GetFloatAttribute_Ref(BoneName: string, AttributeName: string, OutValue: $Ref<number>, LookupType?: UE.ECustomBoneAttributeLookup /* = BoneOnly */) : boolean;
        GetIntegerAttribute(BoneName: string, AttributeName: string, DefaultValue: number, OutValue: $Ref<number>, LookupType?: UE.ECustomBoneAttributeLookup /* = BoneOnly */) : boolean;
        GetIntegerAttribute_Ref(BoneName: string, AttributeName: string, OutValue: $Ref<number>, LookupType?: UE.ECustomBoneAttributeLookup /* = BoneOnly */) : boolean;
        GetLinkedAnimGraphInstanceByTag(InTag: string) : UE.AnimInstance;
        GetLinkedAnimGraphInstancesByTag(InTag: string, OutLinkedInstances: $Ref<TArray<UE.AnimInstance>>) : void;
        GetLinkedAnimLayerInstanceByClass(InClass: $Nullable<UE.Class>) : UE.AnimInstance;
        GetLinkedAnimLayerInstanceByGroup(InGroup: string) : UE.AnimInstance;
        GetMorphTarget(MorphTargetName: string) : number;
        GetPlayRate() : number;
        GetPosition() : number;
        GetPostProcessInstance() : UE.AnimInstance;
        GetSkeletalCenterOfMass() : UE.Vector;
        GetStringAttribute(BoneName: string, AttributeName: string, DefaultValue: string, OutValue: $Ref<string>, LookupType?: UE.ECustomBoneAttributeLookup /* = BoneOnly */) : boolean;
        GetStringAttribute_Ref(BoneName: string, AttributeName: string, OutValue: $Ref<string>, LookupType?: UE.ECustomBoneAttributeLookup /* = BoneOnly */) : boolean;
        GetTeleportDistanceThreshold() : number;
        GetTeleportRotationThreshold() : number;
        HasValidAnimationInstance() : boolean;
        IsBodyGravityEnabled(BoneName: string) : boolean;
        IsClothingSimulationSuspended() : boolean;
        IsPlaying() : boolean;
        K2_GetClosestPointOnPhysicsAsset(WorldPosition: UE.Vector, ClosestWorldPosition: $Ref<UE.Vector>, Normal: $Ref<UE.Vector>, BoneName: $Ref<string>, Distance: $Ref<number>) : boolean;
        LinkAnimClassLayers(InClass: $Nullable<UE.Class>) : void;
        LinkAnimGraphByTag(InTag: string, InClass: $Nullable<UE.Class>) : void;
        OverrideAnimationData(InAnimToPlay: $Nullable<UE.AnimationAsset>, bIsLooping?: boolean /* = true */, bIsPlaying?: boolean /* = true */, Position?: number /* = 0.000000 */, PlayRate?: number /* = 1.000000 */) : void;
        Play(bLooping: boolean) : void;
        PlayAnimation(NewAnimToPlay: $Nullable<UE.AnimationAsset>, bLooping: boolean) : void;
        ResetAllBodiesSimulatePhysics() : void;
        ResetAllowedAnimCurveEvaluation() : void;
        ResetAnimInstanceDynamics(InTeleportType?: UE.ETeleportType /* = ResetPhysics */) : void;
        ResetClothTeleportMode() : void;
        ResumeClothingSimulation() : void;
        SetAllBodiesBelowPhysicsBlendWeight(InBoneName: string, PhysicsBlendWeight: number, bSkipCustomPhysicsType?: boolean /* = false */, bIncludeSelf?: boolean /* = true */) : void;
        SetAllBodiesBelowSimulatePhysics(InBoneName: string, bNewSimulate: boolean, bIncludeSelf?: boolean /* = true */) : void;
        SetAllBodiesPhysicsBlendWeight(PhysicsBlendWeight: number, bSkipCustomPhysicsType?: boolean /* = false */) : void;
        SetAllBodiesSimulatePhysics(bNewSimulate: boolean) : void;
        SetAllMotorsAngularDriveParams(InSpring: number, InDamping: number, InForceLimit: number, bSkipCustomPhysicsType?: boolean /* = false */) : void;
        SetAllMotorsAngularPositionDrive(bEnableSwingDrive: boolean, bEnableTwistDrive: boolean, bSkipCustomPhysicsType?: boolean /* = false */) : void;
        SetAllMotorsAngularVelocityDrive(bEnableSwingDrive: boolean, bEnableTwistDrive: boolean, bSkipCustomPhysicsType?: boolean /* = false */) : void;
        SetAllowAnimCurveEvaluation(bInAllow: boolean) : void;
        SetAllowedAnimCurvesEvaluation(List: TArray<string>, bAllow: boolean) : void;
        SetAllowRigidBodyAnimNode(bInAllow: boolean, bReinitAnim?: boolean /* = true */) : void;
        SetAngularLimits(InBoneName: string, Swing1LimitAngle: number, TwistLimitAngle: number, Swing2LimitAngle: number) : void;
        SetAnimation(NewAnimToPlay: $Nullable<UE.AnimationAsset>) : void;
        SetAnimationMode(InAnimationMode: UE.EAnimationMode) : void;
        SetAnimClass(NewClass: $Nullable<UE.Class>) : void;
        SetBodyNotifyRigidBodyCollision(bNewNotifyRigidBodyCollision: boolean, BoneName?: string /* = "None" */) : void;
        SetClothMaxDistanceScale(Scale: number) : void;
        SetConstraintProfile(JointName: string, ProfileName: string, bDefaultIfNotFound?: boolean /* = false */) : void;
        SetConstraintProfileForAll(ProfileName: string, bDefaultIfNotFound?: boolean /* = false */) : void;
        SetDisableAnimCurves(bInDisableAnimCurves: boolean) : void;
        SetDisablePostProcessBlueprint(bInDisablePostProcess: boolean) : void;
        SetEnableBodyGravity(bEnableGravity: boolean, BoneName: string) : void;
        SetEnableGravityOnAllBodiesBelow(bEnableGravity: boolean, BoneName: string, bIncludeSelf?: boolean /* = true */) : void;
        SetEnablePhysicsBlending(bNewBlendPhysics: boolean) : void;
        SetMorphTarget(MorphTargetName: string, Value: number, bRemoveZeroWeight?: boolean /* = true */) : void;
        SetNotifyRigidBodyCollisionBelow(bNewNotifyRigidBodyCollision: boolean, BoneName?: string /* = "None" */, bIncludeSelf?: boolean /* = true */) : void;
        SetPhysicsBlendWeight(PhysicsBlendWeight: number) : void;
        SetPlayRate(Rate: number) : void;
        SetPosition(InPos: number, bFireNotifies?: boolean /* = true */) : void;
        SetTeleportDistanceThreshold(Threshold: number) : void;
        SetTeleportRotationThreshold(Threshold: number) : void;
        SetUpdateAnimationInEditor(NewUpdateState: boolean) : void;
        SetUpdateClothInEditor(NewUpdateState: boolean) : void;
        SnapshotPose(Snapshot: $Ref<UE.PoseSnapshot>) : void;
        Stop() : void;
        SuspendClothingSimulation() : void;
        TermBodiesBelow(ParentBoneName: string) : void;
        ToggleDisablePostProcessBlueprint() : void;
        UnbindClothFromMasterPoseComponent(bRestoreSimulationSpace?: boolean /* = true */) : void;
        UnlinkAnimClassLayers(InClass: $Nullable<UE.Class>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshComponent;
        static Load(InName: string): SkeletalMeshComponent;
    
        __tid_SkeletalMeshComponent_0__: boolean;
    }
    
    enum EPlaneConstraintAxisSetting { Custom, X, Y, Z, UseGlobalPhysicsSetting, EPlaneConstraintAxisSetting_MAX, __typeKeyDoNoAccess}
    class MovementComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UpdatedComponent: UE.SceneComponent;
        UpdatedPrimitive: UE.PrimitiveComponent;
        Velocity: UE.Vector;
        PlaneConstraintNormal: UE.Vector;
        PlaneConstraintOrigin: UE.Vector;
        bUpdateOnlyIfRendered: boolean;
        bAutoUpdateTickRegistration: boolean;
        bTickBeforeOwner: boolean;
        bAutoRegisterUpdatedComponent: boolean;
        bConstrainToPlane: boolean;
        bSnapToPlaneAtStart: boolean;
        bAutoRegisterPhysicsVolumeUpdates: boolean;
        bComponentShouldUpdatePhysicsVolume: boolean;
        PlaneConstraintAxisSetting: UE.EPlaneConstraintAxisSetting;
        ConstrainDirectionToPlane(Direction: UE.Vector) : UE.Vector;
        ConstrainLocationToPlane(Location: UE.Vector) : UE.Vector;
        ConstrainNormalToPlane(Normal: UE.Vector) : UE.Vector;
        GetGravityZ() : number;
        GetMaxSpeed() : number;
        GetPhysicsVolume() : UE.PhysicsVolume;
        GetPlaneConstraintAxisSetting() : UE.EPlaneConstraintAxisSetting;
        GetPlaneConstraintNormal() : UE.Vector;
        GetPlaneConstraintOrigin() : UE.Vector;
        IsExceedingMaxSpeed(MaxSpeed: number) : boolean;
        K2_GetMaxSpeedModifier() : number;
        K2_GetModifiedMaxSpeed() : number;
        K2_MoveUpdatedComponent(Delta: UE.Vector, NewRotation: UE.Rotator, OutHit: $Ref<UE.HitResult>, bSweep?: boolean /* = true */, bTeleport?: boolean /* = false */) : boolean;
        PhysicsVolumeChanged(NewVolume: $Nullable<UE.PhysicsVolume>) : void;
        SetPlaneConstraintAxisSetting(NewAxisSetting: UE.EPlaneConstraintAxisSetting) : void;
        SetPlaneConstraintEnabled(bEnabled: boolean) : void;
        SetPlaneConstraintFromVectors(Forward: UE.Vector, Up: UE.Vector) : void;
        SetPlaneConstraintNormal(PlaneNormal: UE.Vector) : void;
        SetPlaneConstraintOrigin(PlaneOrigin: UE.Vector) : void;
        SetUpdatedComponent(NewUpdatedComponent: $Nullable<UE.SceneComponent>) : void;
        SnapUpdatedComponentToPlane() : void;
        StopMovementImmediately() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovementComponent;
        static Load(InName: string): MovementComponent;
    
        __tid_MovementComponent_0__: boolean;
    }
    
    class MovementProperties {
        constructor();
        constructor(bCanCrouch: boolean, bCanJump: boolean, bCanWalk: boolean, bCanSwim: boolean, bCanFly: boolean);
        bCanCrouch: boolean;
        bCanJump: boolean;
        bCanWalk: boolean;
        bCanSwim: boolean;
        bCanFly: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovementProperties_0__: boolean;
    }
    
    class NavAgentProperties extends UE.MovementProperties {
        constructor();
        constructor(AgentRadius: number, AgentHeight: number, AgentStepHeight: number, NavWalkingSearchHeightScale: number, PreferredNavData: UE.SoftClassPath);
        AgentRadius: number;
        AgentHeight: number;
        AgentStepHeight: number;
        NavWalkingSearchHeightScale: number;
        PreferredNavData: UE.SoftClassPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavAgentProperties_0__: boolean;
    }
    
    class NavMovementComponent extends UE.MovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NavAgentProps: UE.NavAgentProperties;
        FixedPathBrakingDistance: number;
        bUpdateNavAgentWithOwnersCollision: boolean;
        bUseAccelerationForPaths: boolean;
        bUseFixedBrakingDistanceForPaths: boolean;
        MovementState: UE.MovementProperties;
        PathFollowingComp: UE.Object;
        IsCrouching() : boolean;
        IsFalling() : boolean;
        IsFlying() : boolean;
        IsMovingOnGround() : boolean;
        IsSwimming() : boolean;
        StopActiveMovement() : void;
        StopMovementKeepPathing() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavMovementComponent;
        static Load(InName: string): NavMovementComponent;
    
        __tid_NavMovementComponent_0__: boolean;
    }
    
    class PawnMovementComponent extends UE.NavMovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PawnOwner: UE.Pawn;
        AddInputVector(WorldVector: UE.Vector, bForce?: boolean /* = false */) : void;
        ConsumeInputVector() : UE.Vector;
        GetLastInputVector() : UE.Vector;
        GetPawnOwner() : UE.Pawn;
        GetPendingInputVector() : UE.Vector;
        IsMoveInputIgnored() : boolean;
        K2_GetInputVector() : UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnMovementComponent;
        static Load(InName: string): PawnMovementComponent;
    
        __tid_PawnMovementComponent_0__: boolean;
    }
    
    enum EMovementMode { MOVE_None, MOVE_Walking, MOVE_NavWalking, MOVE_Falling, MOVE_Swimming, MOVE_Flying, MOVE_Custom, MOVE_MAX, __typeKeyDoNoAccess}
    enum ENetworkSmoothingMode { Disabled, Linear, Exponential, Replay, ENetworkSmoothingMode_MAX, __typeKeyDoNoAccess}
    class FindFloorResult {
        constructor();
        constructor(bBlockingHit: boolean, bWalkableFloor: boolean, bLineTrace: boolean, FloorDist: number, LineDist: number, HitResult: UE.HitResult);
        bBlockingHit: boolean;
        bWalkableFloor: boolean;
        bLineTrace: boolean;
        FloorDist: number;
        LineDist: number;
        HitResult: UE.HitResult;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FindFloorResult_0__: boolean;
    }
    
    class NavAvoidanceMask {
        constructor();
        constructor(bGroup0: boolean, bGroup1: boolean, bGroup2: boolean, bGroup3: boolean, bGroup4: boolean, bGroup5: boolean, bGroup6: boolean, bGroup7: boolean, bGroup8: boolean, bGroup9: boolean, bGroup10: boolean, bGroup11: boolean, bGroup12: boolean, bGroup13: boolean, bGroup14: boolean, bGroup15: boolean, bGroup16: boolean, bGroup17: boolean, bGroup18: boolean, bGroup19: boolean, bGroup20: boolean, bGroup21: boolean, bGroup22: boolean, bGroup23: boolean, bGroup24: boolean, bGroup25: boolean, bGroup26: boolean, bGroup27: boolean, bGroup28: boolean, bGroup29: boolean, bGroup30: boolean, bGroup31: boolean);
        bGroup0: boolean;
        bGroup1: boolean;
        bGroup2: boolean;
        bGroup3: boolean;
        bGroup4: boolean;
        bGroup5: boolean;
        bGroup6: boolean;
        bGroup7: boolean;
        bGroup8: boolean;
        bGroup9: boolean;
        bGroup10: boolean;
        bGroup11: boolean;
        bGroup12: boolean;
        bGroup13: boolean;
        bGroup14: boolean;
        bGroup15: boolean;
        bGroup16: boolean;
        bGroup17: boolean;
        bGroup18: boolean;
        bGroup19: boolean;
        bGroup20: boolean;
        bGroup21: boolean;
        bGroup22: boolean;
        bGroup23: boolean;
        bGroup24: boolean;
        bGroup25: boolean;
        bGroup26: boolean;
        bGroup27: boolean;
        bGroup28: boolean;
        bGroup29: boolean;
        bGroup30: boolean;
        bGroup31: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavAvoidanceMask_0__: boolean;
    }
    
    class CharacterMovementComponentPostPhysicsTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CharacterMovementComponentPostPhysicsTickFunction_0__: boolean;
    }
    
    class RootMotionSourceSettings {
        constructor();
        constructor(Flags: number);
        Flags: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSourceSettings_0__: boolean;
    }
    
    class Vector_NetQuantize10 extends UE.Vector {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Vector_NetQuantize10_0__: boolean;
    }
    
    class RootMotionSourceGroup {
        constructor();
        constructor(bHasAdditiveSources: boolean, bHasOverrideSources: boolean, bHasOverrideSourcesWithIgnoreZAccumulate: boolean, bIsAdditiveVelocityApplied: boolean, LastAccumulatedSettings: UE.RootMotionSourceSettings, LastPreAdditiveVelocity: UE.Vector_NetQuantize10);
        bHasAdditiveSources: boolean;
        bHasOverrideSources: boolean;
        bHasOverrideSourcesWithIgnoreZAccumulate: boolean;
        bIsAdditiveVelocityApplied: boolean;
        LastAccumulatedSettings: UE.RootMotionSourceSettings;
        LastPreAdditiveVelocity: UE.Vector_NetQuantize10;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSourceGroup_0__: boolean;
    }
    
    class RootMotionMovementParams {
        constructor();
        constructor(bHasRootMotion: boolean, BlendWeight: number, RootMotionTransform: UE.Transform);
        bHasRootMotion: boolean;
        BlendWeight: number;
        RootMotionTransform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionMovementParams_0__: boolean;
    }
    
    class CharacterMovementComponent extends UE.PawnMovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CharacterOwner: UE.Character;
        GravityScale: number;
        MaxStepHeight: number;
        JumpZVelocity: number;
        JumpOffJumpZFactor: number;
        WalkableFloorAngle: number;
        WalkableFloorZ: number;
        MovementMode: UE.EMovementMode;
        CustomMovementMode: number;
        NetworkSmoothingMode: UE.ENetworkSmoothingMode;
        GroundFriction: number;
        MaxWalkSpeed: number;
        MaxWalkSpeedCrouched: number;
        MaxSwimSpeed: number;
        MaxFlySpeed: number;
        MaxCustomMovementSpeed: number;
        MaxAcceleration: number;
        MinAnalogWalkSpeed: number;
        BrakingFrictionFactor: number;
        BrakingFriction: number;
        BrakingSubStepTime: number;
        BrakingDecelerationWalking: number;
        BrakingDecelerationFalling: number;
        BrakingDecelerationSwimming: number;
        BrakingDecelerationFlying: number;
        AirControl: number;
        AirControlBoostMultiplier: number;
        AirControlBoostVelocityThreshold: number;
        FallingLateralFriction: number;
        CrouchedHalfHeight: number;
        Buoyancy: number;
        PerchRadiusThreshold: number;
        PerchAdditionalHeight: number;
        RotationRate: UE.Rotator;
        bUseSeparateBrakingFriction: boolean;
        bApplyGravityWhileJumping: boolean;
        bUseControllerDesiredRotation: boolean;
        bOrientRotationToMovement: boolean;
        bSweepWhileNavWalking: boolean;
        bMovementInProgress: boolean;
        bEnableScopedMovementUpdates: boolean;
        bEnableServerDualMoveScopedMovementUpdates: boolean;
        bForceMaxAccel: boolean;
        bRunPhysicsWithNoController: boolean;
        bForceNextFloorCheck: boolean;
        bShrinkProxyCapsule: boolean;
        bCanWalkOffLedges: boolean;
        bCanWalkOffLedgesWhenCrouching: boolean;
        bNetworkSkipProxyPredictionOnNetUpdate: boolean;
        bNetworkAlwaysReplicateTransformUpdateTimestamp: boolean;
        bDeferUpdateMoveComponent: boolean;
        bEnablePhysicsInteraction: boolean;
        bTouchForceScaledToMass: boolean;
        bPushForceScaledToMass: boolean;
        bPushForceUsingZOffset: boolean;
        bScalePushForceToVelocity: boolean;
        DeferredUpdatedMoveComponent: UE.SceneComponent;
        MaxOutOfWaterStepHeight: number;
        OutofWaterZ: number;
        Mass: number;
        StandingDownwardForceScale: number;
        InitialPushForceFactor: number;
        PushForceFactor: number;
        PushForcePointZOffsetFactor: number;
        TouchForceFactor: number;
        MinTouchForce: number;
        MaxTouchForce: number;
        RepulsionForce: number;
        bForceBraking: boolean;
        CrouchedSpeedMultiplier: number;
        UpperImpactNormalScale: number;
        Acceleration: UE.Vector;
        LastUpdateRotation: UE.Quat;
        LastUpdateLocation: UE.Vector;
        LastUpdateVelocity: UE.Vector;
        ServerLastTransformUpdateTimeStamp: number;
        ServerLastClientGoodMoveAckTime: number;
        ServerLastClientAdjustmentTime: number;
        PendingImpulseToApply: UE.Vector;
        PendingForceToApply: UE.Vector;
        AnalogInputModifier: number;
        MaxSimulationTimeStep: number;
        MaxSimulationIterations: number;
        MaxJumpApexAttemptsPerSimulation: number;
        MaxDepenetrationWithGeometry: number;
        MaxDepenetrationWithGeometryAsProxy: number;
        MaxDepenetrationWithPawn: number;
        MaxDepenetrationWithPawnAsProxy: number;
        NetworkSimulatedSmoothLocationTime: number;
        NetworkSimulatedSmoothRotationTime: number;
        ListenServerNetworkSimulatedSmoothLocationTime: number;
        ListenServerNetworkSimulatedSmoothRotationTime: number;
        NetProxyShrinkRadius: number;
        NetProxyShrinkHalfHeight: number;
        NetworkMaxSmoothUpdateDistance: number;
        NetworkNoSmoothUpdateDistance: number;
        NetworkMinTimeBetweenClientAckGoodMoves: number;
        NetworkMinTimeBetweenClientAdjustments: number;
        NetworkMinTimeBetweenClientAdjustmentsLargeCorrection: number;
        NetworkLargeClientCorrectionDistance: number;
        LedgeCheckThreshold: number;
        JumpOutOfWaterPitch: number;
        CurrentFloor: UE.FindFloorResult;
        DefaultLandMovementMode: UE.EMovementMode;
        DefaultWaterMovementMode: UE.EMovementMode;
        GroundMovementMode: UE.EMovementMode;
        bMaintainHorizontalGroundVelocity: boolean;
        bImpartBaseVelocityX: boolean;
        bImpartBaseVelocityY: boolean;
        bImpartBaseVelocityZ: boolean;
        bImpartBaseAngularVelocity: boolean;
        bJustTeleported: boolean;
        bNetworkUpdateReceived: boolean;
        bNetworkMovementModeChanged: boolean;
        bIgnoreClientMovementErrorChecksAndCorrection: boolean;
        bServerAcceptClientAuthoritativePosition: boolean;
        bNotifyApex: boolean;
        bCheatFlying: boolean;
        bWantsToCrouch: boolean;
        bCrouchMaintainsBaseLocation: boolean;
        bIgnoreBaseRotation: boolean;
        bFastAttachedMove: boolean;
        bAlwaysCheckFloor: boolean;
        bUseFlatBaseForFloorChecks: boolean;
        bPerformingJumpOff: boolean;
        bWantsToLeaveNavWalking: boolean;
        bUseRVOAvoidance: boolean;
        bRequestedMoveUseAcceleration: boolean;
        bWasSimulatingRootMotion: boolean;
        bAllowPhysicsRotationDuringAnimRootMotion: boolean;
        bHasRequestedVelocity: boolean;
        bRequestedMoveWithMaxSpeed: boolean;
        bWasAvoidanceUpdated: boolean;
        bProjectNavMeshWalking: boolean;
        bProjectNavMeshOnBothWorldChannels: boolean;
        AvoidanceConsiderationRadius: number;
        RequestedVelocity: UE.Vector;
        AvoidanceUID: number;
        AvoidanceGroup: UE.NavAvoidanceMask;
        GroupsToAvoid: UE.NavAvoidanceMask;
        GroupsToIgnore: UE.NavAvoidanceMask;
        AvoidanceWeight: number;
        PendingLaunchVelocity: UE.Vector;
        NavMeshProjectionInterval: number;
        NavMeshProjectionTimer: number;
        NavMeshProjectionInterpSpeed: number;
        NavMeshProjectionHeightScaleUp: number;
        NavMeshProjectionHeightScaleDown: number;
        NavWalkingFloorDistTolerance: number;
        PostPhysicsTickFunction: UE.CharacterMovementComponentPostPhysicsTickFunction;
        MinTimeBetweenTimeStampResets: number;
        CurrentRootMotion: UE.RootMotionSourceGroup;
        ServerCorrectionRootMotion: UE.RootMotionSourceGroup;
        RootMotionParams: UE.RootMotionMovementParams;
        AnimRootMotionVelocity: UE.Vector;
        AddForce(Force: UE.Vector) : void;
        AddImpulse(Impulse: UE.Vector, bVelocityChange?: boolean /* = false */) : void;
        CalcVelocity(DeltaTime: number, Friction: number, bFluid: boolean, BrakingDeceleration: number) : void;
        CapsuleTouched(OverlappedComp: $Nullable<UE.PrimitiveComponent>, Other: $Nullable<UE.Actor>, OtherComp: $Nullable<UE.PrimitiveComponent>, OtherBodyIndex: number, bFromSweep: boolean, SweepResult: UE.HitResult) : void;
        ClearAccumulatedForces() : void;
        DisableMovement() : void;
        GetAnalogInputModifier() : number;
        GetCharacterOwner() : UE.Character;
        GetCurrentAcceleration() : UE.Vector;
        GetImpartedMovementBaseVelocity() : UE.Vector;
        GetLastUpdateLocation() : UE.Vector;
        GetLastUpdateRotation() : UE.Rotator;
        GetLastUpdateVelocity() : UE.Vector;
        GetMaxAcceleration() : number;
        GetMaxBrakingDeceleration() : number;
        GetMaxJumpHeight() : number;
        GetMaxJumpHeightWithJumpTime() : number;
        GetMinAnalogSpeed() : number;
        GetMovementBase() : UE.PrimitiveComponent;
        GetPerchRadiusThreshold() : number;
        GetValidPerchRadius() : number;
        IsWalkable(Hit: UE.HitResult) : boolean;
        IsWalking() : boolean;
        K2_ComputeFloorDist(CapsuleLocation: UE.Vector, LineDistance: number, SweepDistance: number, SweepRadius: number, FloorResult: $Ref<UE.FindFloorResult>) : void;
        K2_FindFloor(CapsuleLocation: UE.Vector, FloorResult: $Ref<UE.FindFloorResult>) : void;
        K2_GetModifiedMaxAcceleration() : number;
        K2_GetWalkableFloorAngle() : number;
        K2_GetWalkableFloorZ() : number;
        SetAvoidanceEnabled(bEnable: boolean) : void;
        SetAvoidanceGroup(GroupFlags: number) : void;
        SetAvoidanceGroupMask(GroupMask: UE.NavAvoidanceMask) : void;
        SetGroupsToAvoid(GroupFlags: number) : void;
        SetGroupsToAvoidMask(GroupMask: UE.NavAvoidanceMask) : void;
        SetGroupsToIgnore(GroupFlags: number) : void;
        SetGroupsToIgnoreMask(GroupMask: UE.NavAvoidanceMask) : void;
        SetMovementMode(NewMovementMode: UE.EMovementMode, NewCustomMode?: number /* = 0 */) : void;
        SetWalkableFloorAngle(InWalkableFloorAngle: number) : void;
        SetWalkableFloorZ(InWalkableFloorZ: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CharacterMovementComponent;
        static Load(InName: string): CharacterMovementComponent;
    
        __tid_CharacterMovementComponent_0__: boolean;
    }
    
    class ShapeComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShapeBodySetup: UE.BodySetup;
        AreaClass: UE.Class;
        ShapeColor: UE.Color;
        bDrawOnlyIfSelected: boolean;
        bShouldCollideWhenPlacing: boolean;
        bDynamicObstacle: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ShapeComponent;
        static Load(InName: string): ShapeComponent;
    
        __tid_ShapeComponent_0__: boolean;
    }
    
    class CapsuleComponent extends UE.ShapeComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CapsuleHalfHeight: number;
        CapsuleRadius: number;
        CapsuleHeight: number;
        GetScaledCapsuleHalfHeight() : number;
        GetScaledCapsuleHalfHeight_WithoutHemisphere() : number;
        GetScaledCapsuleRadius() : number;
        GetScaledCapsuleSize(OutRadius: $Ref<number>, OutHalfHeight: $Ref<number>) : void;
        GetScaledCapsuleSize_WithoutHemisphere(OutRadius: $Ref<number>, OutHalfHeightWithoutHemisphere: $Ref<number>) : void;
        GetShapeScale() : number;
        GetUnscaledCapsuleHalfHeight() : number;
        GetUnscaledCapsuleHalfHeight_WithoutHemisphere() : number;
        GetUnscaledCapsuleRadius() : number;
        GetUnscaledCapsuleSize(OutRadius: $Ref<number>, OutHalfHeight: $Ref<number>) : void;
        GetUnscaledCapsuleSize_WithoutHemisphere(OutRadius: $Ref<number>, OutHalfHeightWithoutHemisphere: $Ref<number>) : void;
        SetCapsuleHalfHeight(HalfHeight: number, bUpdateOverlaps?: boolean /* = true */) : void;
        SetCapsuleRadius(Radius: number, bUpdateOverlaps?: boolean /* = true */) : void;
        SetCapsuleSize(InRadius: number, InHalfHeight: number, bUpdateOverlaps?: boolean /* = true */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CapsuleComponent;
        static Load(InName: string): CapsuleComponent;
    
        __tid_CapsuleComponent_0__: boolean;
    }
    
    class ArrowComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ArrowColor: UE.Color;
        ArrowSize: number;
        ArrowLength: number;
        ScreenSize: number;
        bIsScreenSizeScaled: boolean;
        bTreatAsASprite: boolean;
        SpriteCategoryName: string;
        SpriteInfo: UE.SpriteCategoryInfo;
        bLightAttachment: boolean;
        bUseInEditorScaling: boolean;
        SetArrowColor(NewColor: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ArrowComponent;
        static Load(InName: string): ArrowComponent;
    
        __tid_ArrowComponent_0__: boolean;
    }
    
    class BasedMovementInfo {
        constructor();
        constructor(MovementBase: UE.PrimitiveComponent, BoneName: string, Location: UE.Vector_NetQuantize100, Rotation: UE.Rotator, bServerHasBaseComponent: boolean, bRelativeRotation: boolean, bServerHasVelocity: boolean);
        MovementBase: UE.PrimitiveComponent;
        BoneName: string;
        Location: UE.Vector_NetQuantize100;
        Rotation: UE.Rotator;
        bServerHasBaseComponent: boolean;
        bRelativeRotation: boolean;
        bServerHasVelocity: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BasedMovementInfo_0__: boolean;
    }
    
    class RepRootMotionMontage {
        constructor();
        constructor(bIsActive: boolean, AnimMontage: UE.AnimMontage, Position: number, Location: UE.Vector_NetQuantize100, Rotation: UE.Rotator, MovementBase: UE.PrimitiveComponent, MovementBaseBoneName: string, bRelativePosition: boolean, bRelativeRotation: boolean, AuthoritativeRootMotion: UE.RootMotionSourceGroup, Acceleration: UE.Vector_NetQuantize10, LinearVelocity: UE.Vector_NetQuantize10);
        bIsActive: boolean;
        AnimMontage: UE.AnimMontage;
        Position: number;
        Location: UE.Vector_NetQuantize100;
        Rotation: UE.Rotator;
        MovementBase: UE.PrimitiveComponent;
        MovementBaseBoneName: string;
        bRelativePosition: boolean;
        bRelativeRotation: boolean;
        AuthoritativeRootMotion: UE.RootMotionSourceGroup;
        Acceleration: UE.Vector_NetQuantize10;
        LinearVelocity: UE.Vector_NetQuantize10;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RepRootMotionMontage_0__: boolean;
    }
    
    class SimulatedRootMotionReplicatedMove {
        constructor();
        constructor(Time: number, RootMotion: UE.RepRootMotionMontage);
        Time: number;
        RootMotion: UE.RepRootMotionMontage;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SimulatedRootMotionReplicatedMove_0__: boolean;
    }
    
    class CharacterNetworkSerializationPackedBits {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CharacterNetworkSerializationPackedBits_0__: boolean;
    }
    
    class CharacterServerMovePackedBits extends UE.CharacterNetworkSerializationPackedBits {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CharacterServerMovePackedBits_0__: boolean;
    }
    
    class CharacterMoveResponsePackedBits extends UE.CharacterNetworkSerializationPackedBits {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CharacterMoveResponsePackedBits_0__: boolean;
    }
    
    class Character extends UE.Pawn {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Mesh: UE.SkeletalMeshComponent;
        CharacterMovement: UE.CharacterMovementComponent;
        CapsuleComponent: UE.CapsuleComponent;
        ArrowComponent: UE.ArrowComponent;
        BasedMovement: UE.BasedMovementInfo;
        ReplicatedBasedMovement: UE.BasedMovementInfo;
        AnimRootMotionTranslationScale: number;
        BaseTranslationOffset: UE.Vector;
        BaseRotationOffset: UE.Quat;
        ReplicatedServerLastTransformUpdateTimeStamp: number;
        ReplayLastTransformUpdateTimeStamp: number;
        ReplicatedMovementMode: number;
        bInBaseReplication: boolean;
        CrouchedEyeHeight: number;
        bIsCrouched: boolean;
        bProxyIsJumpForceApplied: boolean;
        bPressedJump: boolean;
        bClientUpdating: boolean;
        bClientWasFalling: boolean;
        bClientResimulateRootMotion: boolean;
        bClientResimulateRootMotionSources: boolean;
        bSimGravityDisabled: boolean;
        bClientCheckEncroachmentOnNetUpdate: boolean;
        bServerMoveIgnoreRootMotion: boolean;
        bWasJumping: boolean;
        JumpKeyHoldTime: number;
        JumpForceTimeRemaining: number;
        ProxyJumpForceStartedTime: number;
        JumpMaxHoldTime: number;
        JumpMaxCount: number;
        JumpCurrentCount: number;
        JumpCurrentCountPreJump: number;
        OnReachedJumpApex: $MulticastDelegate<() => void>;
        MovementModeChangedDelegate: $MulticastDelegate<(Character: $Nullable<UE.Character>, PrevMovementMode: UE.EMovementMode, PreviousCustomMode: number) => void>;
        OnCharacterMovementUpdated: $MulticastDelegate<(DeltaSeconds: number, OldLocation: UE.Vector, OldVelocity: UE.Vector) => void>;
        SavedRootMotion: UE.RootMotionSourceGroup;
        ClientRootMotionParams: UE.RootMotionMovementParams;
        RootMotionRepMoves: TArray<UE.SimulatedRootMotionReplicatedMove>;
        RepRootMotion: UE.RepRootMotionMontage;
        CacheInitialMeshOffset(MeshRelativeLocation: UE.Vector, MeshRelativeRotation: UE.Rotator) : void;
        CanCrouch() : boolean;
        CanJump() : boolean;
        CanJumpInternal() : boolean;
        ClientAckGoodMove(TimeStamp: number) : void;
        ClientAdjustPosition(TimeStamp: number, NewLoc: UE.Vector, NewVel: UE.Vector, NewBase: $Nullable<UE.PrimitiveComponent>, NewBaseBoneName: string, bHasBase: boolean, bBaseRelativePosition: boolean, ServerMovementMode: number) : void;
        ClientAdjustRootMotionPosition(TimeStamp: number, ServerMontageTrackPosition: number, ServerLoc: UE.Vector, ServerRotation: UE.Vector_NetQuantizeNormal, ServerVelZ: number, ServerBase: $Nullable<UE.PrimitiveComponent>, ServerBoneName: string, bHasBase: boolean, bBaseRelativePosition: boolean, ServerMovementMode: number) : void;
        ClientAdjustRootMotionSourcePosition(TimeStamp: number, ServerRootMotion: UE.RootMotionSourceGroup, bHasAnimRootMotion: boolean, ServerMontageTrackPosition: number, ServerLoc: UE.Vector, ServerRotation: UE.Vector_NetQuantizeNormal, ServerVelZ: number, ServerBase: $Nullable<UE.PrimitiveComponent>, ServerBoneName: string, bHasBase: boolean, bBaseRelativePosition: boolean, ServerMovementMode: number) : void;
        ClientCheatFly() : void;
        ClientCheatGhost() : void;
        ClientCheatWalk() : void;
        ClientMoveResponsePacked(PackedBits: UE.CharacterMoveResponsePackedBits) : void;
        ClientVeryShortAdjustPosition(TimeStamp: number, NewLoc: UE.Vector, NewBase: $Nullable<UE.PrimitiveComponent>, NewBaseBoneName: string, bHasBase: boolean, bBaseRelativePosition: boolean, ServerMovementMode: number) : void;
        Crouch(bClientSimulation?: boolean /* = false */) : void;
        GetAnimRootMotionTranslationScale() : number;
        GetBaseRotationOffsetRotator() : UE.Rotator;
        GetBaseTranslationOffset() : UE.Vector;
        GetCurrentMontage() : UE.AnimMontage;
        HasAnyRootMotion() : boolean;
        IsJumpProvidingForce() : boolean;
        IsPlayingNetworkedRootMotionMontage() : boolean;
        IsPlayingRootMotion() : boolean;
        Jump() : void;
        K2_OnEndCrouch(HalfHeightAdjust: number, ScaledHalfHeightAdjust: number) : void;
        K2_OnMovementModeChanged(PrevMovementMode: UE.EMovementMode, NewMovementMode: UE.EMovementMode, PrevCustomMode: number, NewCustomMode: number) : void;
        K2_OnStartCrouch(HalfHeightAdjust: number, ScaledHalfHeightAdjust: number) : void;
        K2_UpdateCustomMovement(DeltaTime: number) : void;
        LaunchCharacter(LaunchVelocity: UE.Vector, bXYOverride: boolean, bZOverride: boolean) : void;
        OnJumped() : void;
        OnLanded(Hit: UE.HitResult) : void;
        OnLaunched(LaunchVelocity: UE.Vector, bXYOverride: boolean, bZOverride: boolean) : void;
        OnRep_IsCrouched() : void;
        OnRep_ReplayLastTransformUpdateTimeStamp() : void;
        OnRep_ReplicatedBasedMovement() : void;
        OnRep_RootMotion() : void;
        OnWalkingOffLedge(PreviousFloorImpactNormal: UE.Vector, PreviousFloorContactNormal: UE.Vector, PreviousLocation: UE.Vector, TimeDelta: number) : void;
        PlayAnimMontage(AnimMontage: $Nullable<UE.AnimMontage>, InPlayRate?: number /* = 1.000000 */, StartSectionName?: string /* = "None" */) : number;
        RootMotionDebugClientPrintOnScreen(InString: string) : void;
        ServerMove(TimeStamp: number, InAccel: UE.Vector_NetQuantize10, ClientLoc: UE.Vector_NetQuantize100, CompressedMoveFlags: number, ClientRoll: number, View: number, ClientMovementBase: $Nullable<UE.PrimitiveComponent>, ClientBaseBoneName: string, ClientMovementMode: number) : void;
        ServerMoveDual(TimeStamp0: number, InAccel0: UE.Vector_NetQuantize10, PendingFlags: number, View0: number, TimeStamp: number, InAccel: UE.Vector_NetQuantize10, ClientLoc: UE.Vector_NetQuantize100, NewFlags: number, ClientRoll: number, View: number, ClientMovementBase: $Nullable<UE.PrimitiveComponent>, ClientBaseBoneName: string, ClientMovementMode: number) : void;
        ServerMoveDualHybridRootMotion(TimeStamp0: number, InAccel0: UE.Vector_NetQuantize10, PendingFlags: number, View0: number, TimeStamp: number, InAccel: UE.Vector_NetQuantize10, ClientLoc: UE.Vector_NetQuantize100, NewFlags: number, ClientRoll: number, View: number, ClientMovementBase: $Nullable<UE.PrimitiveComponent>, ClientBaseBoneName: string, ClientMovementMode: number) : void;
        ServerMoveDualNoBase(TimeStamp0: number, InAccel0: UE.Vector_NetQuantize10, PendingFlags: number, View0: number, TimeStamp: number, InAccel: UE.Vector_NetQuantize10, ClientLoc: UE.Vector_NetQuantize100, NewFlags: number, ClientRoll: number, View: number, ClientMovementMode: number) : void;
        ServerMoveNoBase(TimeStamp: number, InAccel: UE.Vector_NetQuantize10, ClientLoc: UE.Vector_NetQuantize100, CompressedMoveFlags: number, ClientRoll: number, View: number, ClientMovementMode: number) : void;
        ServerMoveOld(OldTimeStamp: number, OldAccel: UE.Vector_NetQuantize10, OldMoveFlags: number) : void;
        ServerMovePacked(PackedBits: UE.CharacterServerMovePackedBits) : void;
        StopAnimMontage(AnimMontage?: UE.AnimMontage /* = None */) : void;
        StopJumping() : void;
        UnCrouch(bClientSimulation?: boolean /* = false */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Character;
        static Load(InName: string): Character;
    
        __tid_Character_0__: boolean;
    }
    
    class Player extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayerController: UE.PlayerController;
        CurrentNetSpeed: number;
        ConfiguredInternetSpeed: number;
        ConfiguredLanSpeed: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Player;
        static Load(InName: string): Player;
    
        __tid_Player_0__: boolean;
    }
    
    class InterpTrackInst extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInst;
        static Load(InName: string): InterpTrackInst;
    
        __tid_InterpTrackInst_0__: boolean;
    }
    
    class InterpTrackInstDirector extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OldViewTarget: UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstDirector;
        static Load(InName: string): InterpTrackInstDirector;
    
        __tid_InterpTrackInstDirector_0__: boolean;
    }
    
    class ReporterBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReporterBase;
        static Load(InName: string): ReporterBase;
    
        __tid_ReporterBase_0__: boolean;
    }
    
    class ReporterGraph extends UE.ReporterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReporterGraph;
        static Load(InName: string): ReporterGraph;
    
        __tid_ReporterGraph_0__: boolean;
    }
    
    class CanvasUVTri {
        constructor();
        constructor(V0_Pos: UE.Vector2D, V0_UV: UE.Vector2D, V0_Color: UE.LinearColor, V1_Pos: UE.Vector2D, V1_UV: UE.Vector2D, V1_Color: UE.LinearColor, V2_Pos: UE.Vector2D, V2_UV: UE.Vector2D, V2_Color: UE.LinearColor);
        V0_Pos: UE.Vector2D;
        V0_UV: UE.Vector2D;
        V0_Color: UE.LinearColor;
        V1_Pos: UE.Vector2D;
        V1_UV: UE.Vector2D;
        V1_Color: UE.LinearColor;
        V2_Pos: UE.Vector2D;
        V2_UV: UE.Vector2D;
        V2_Color: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CanvasUVTri_0__: boolean;
    }
    
    class Canvas extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OrgX: number;
        OrgY: number;
        ClipX: number;
        ClipY: number;
        DrawColor: UE.Color;
        bCenterX: boolean;
        bCenterY: boolean;
        bNoSmooth: boolean;
        SizeX: number;
        SizeY: number;
        ColorModulate: UE.Plane;
        DefaultTexture: UE.Texture2D;
        GradientTexture0: UE.Texture2D;
        ReporterGraph: UE.ReporterGraph;
        K2_Deproject(ScreenPosition: UE.Vector2D, WorldOrigin: $Ref<UE.Vector>, WorldDirection: $Ref<UE.Vector>) : void;
        K2_DrawBorder(BorderTexture: $Nullable<UE.Texture>, BackgroundTexture: $Nullable<UE.Texture>, LeftBorderTexture: $Nullable<UE.Texture>, RightBorderTexture: $Nullable<UE.Texture>, TopBorderTexture: $Nullable<UE.Texture>, BottomBorderTexture: $Nullable<UE.Texture>, ScreenPosition: UE.Vector2D, ScreenSize: UE.Vector2D, CoordinatePosition: UE.Vector2D, CoordinateSize?: UE.Vector2D /* = (X=1.000,Y=1.000) */, RenderColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, BorderScale?: UE.Vector2D /* = (X=0.100,Y=0.100) */, BackgroundScale?: UE.Vector2D /* = (X=0.100,Y=0.100) */, Rotation?: number /* = 0.000000 */, PivotPoint?: UE.Vector2D /* = (X=0.500,Y=0.500) */, CornerSize?: UE.Vector2D /* =  */) : void;
        K2_DrawBox(ScreenPosition: UE.Vector2D, ScreenSize: UE.Vector2D, Thickness?: number /* = 1.000000 */, RenderColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        K2_DrawLine(ScreenPositionA?: UE.Vector2D /* =  */, ScreenPositionB?: UE.Vector2D /* =  */, Thickness?: number /* = 1.000000 */, RenderColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        K2_DrawMaterial(RenderMaterial: $Nullable<UE.MaterialInterface>, ScreenPosition: UE.Vector2D, ScreenSize: UE.Vector2D, CoordinatePosition: UE.Vector2D, CoordinateSize?: UE.Vector2D /* = (X=1.000,Y=1.000) */, Rotation?: number /* = 0.000000 */, PivotPoint?: UE.Vector2D /* = (X=0.500,Y=0.500) */) : void;
        K2_DrawMaterialTriangle(RenderMaterial: $Nullable<UE.MaterialInterface>, Triangles: TArray<UE.CanvasUVTri>) : void;
        K2_DrawPolygon(RenderTexture: $Nullable<UE.Texture>, ScreenPosition: UE.Vector2D, Radius?: UE.Vector2D /* = (X=1.000,Y=1.000) */, NumberOfSides?: number /* = 3 */, RenderColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        K2_DrawText(RenderFont: $Nullable<UE.Font>, RenderText: string, ScreenPosition: UE.Vector2D, Scale?: UE.Vector2D /* = (X=1.000,Y=1.000) */, RenderColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Kerning?: number /* = 0.000000 */, ShadowColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=0.000000,A=1.000000) */, ShadowOffset?: UE.Vector2D /* = (X=1.000,Y=1.000) */, bCentreX?: boolean /* = false */, bCentreY?: boolean /* = false */, bOutlined?: boolean /* = false */, OutlineColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=0.000000,A=1.000000) */) : void;
        K2_DrawTexture(RenderTexture: $Nullable<UE.Texture>, ScreenPosition: UE.Vector2D, ScreenSize: UE.Vector2D, CoordinatePosition: UE.Vector2D, CoordinateSize?: UE.Vector2D /* = (X=1.000,Y=1.000) */, RenderColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, BlendMode?: UE.EBlendMode /* = BLEND_Translucent */, Rotation?: number /* = 0.000000 */, PivotPoint?: UE.Vector2D /* = (X=0.500,Y=0.500) */) : void;
        K2_DrawTriangle(RenderTexture: $Nullable<UE.Texture>, Triangles: TArray<UE.CanvasUVTri>) : void;
        K2_Project(WorldLocation: UE.Vector) : UE.Vector;
        K2_StrLen(RenderFont: $Nullable<UE.Font>, RenderText: string) : UE.Vector2D;
        K2_TextSize(RenderFont: $Nullable<UE.Font>, RenderText: string, Scale?: UE.Vector2D /* = (X=1.000,Y=1.000) */) : UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Canvas;
        static Load(InName: string): Canvas;
    
        __tid_Canvas_0__: boolean;
    }
    
    class DebugTextInfo {
        constructor();
        constructor(SrcActor: UE.Actor, SrcActorOffset: UE.Vector, SrcActorDesiredOffset: UE.Vector, DebugText: string, TimeRemaining: number, Duration: number, TextColor: UE.Color, bAbsoluteLocation: boolean, bKeepAttachedToActor: boolean, bDrawShadow: boolean, OrigActorLocation: UE.Vector, Font: UE.Font, FontScale: number);
        SrcActor: UE.Actor;
        SrcActorOffset: UE.Vector;
        SrcActorDesiredOffset: UE.Vector;
        DebugText: string;
        TimeRemaining: number;
        Duration: number;
        TextColor: UE.Color;
        bAbsoluteLocation: boolean;
        bKeepAttachedToActor: boolean;
        bDrawShadow: boolean;
        OrigActorLocation: UE.Vector;
        Font: UE.Font;
        FontScale: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DebugTextInfo_0__: boolean;
    }
    
    class HUD extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayerOwner: UE.PlayerController;
        bLostFocusPaused: boolean;
        bShowHUD: boolean;
        bShowDebugInfo: boolean;
        CurrentTargetIndex: number;
        bShowHitBoxDebugInfo: boolean;
        bShowOverlays: boolean;
        bEnableDebugTextShadow: boolean;
        PostRenderedActors: TArray<UE.Actor>;
        DebugDisplay: TArray<string>;
        ToggledDebugCategories: TArray<string>;
        Canvas: UE.Canvas;
        DebugCanvas: UE.Canvas;
        DebugTextList: TArray<UE.DebugTextInfo>;
        ShowDebugTargetDesiredClass: UE.Class;
        ShowDebugTargetActor: UE.Actor;
        AddDebugText(DebugText: string, SrcActor: $Nullable<UE.Actor>, Duration: number, Offset: UE.Vector, DesiredOffset: UE.Vector, TextColor: UE.Color, bSkipOverwriteCheck: boolean, bAbsoluteLocation: boolean, bKeepAttachedToActor: boolean, InFont: $Nullable<UE.Font>, FontScale: number, bDrawShadow: boolean) : void;
        AddHitBox(Position: UE.Vector2D, Size: UE.Vector2D, InName: string, bConsumesInput: boolean, Priority?: number /* = 0 */) : void;
        Deproject(ScreenX: number, ScreenY: number, WorldPosition: $Ref<UE.Vector>, WorldDirection: $Ref<UE.Vector>) : void;
        DrawLine(StartScreenX: number, StartScreenY: number, EndScreenX: number, EndScreenY: number, LineColor: UE.LinearColor, LineThickness?: number /* = 0.000000 */) : void;
        DrawMaterial(Material: $Nullable<UE.MaterialInterface>, ScreenX: number, ScreenY: number, ScreenW: number, ScreenH: number, MaterialU: number, MaterialV: number, MaterialUWidth: number, MaterialVHeight: number, Scale?: number /* = 1.000000 */, bScalePosition?: boolean /* = false */, Rotation?: number /* = 0.000000 */, RotPivot?: UE.Vector2D /* =  */) : void;
        DrawMaterialSimple(Material: $Nullable<UE.MaterialInterface>, ScreenX: number, ScreenY: number, ScreenW: number, ScreenH: number, Scale?: number /* = 1.000000 */, bScalePosition?: boolean /* = false */) : void;
        DrawMaterialTriangle(Material: $Nullable<UE.MaterialInterface>, V0_Pos: UE.Vector2D, V1_Pos: UE.Vector2D, V2_Pos: UE.Vector2D, V0_UV: UE.Vector2D, V1_UV: UE.Vector2D, V2_UV: UE.Vector2D, V0_Color?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, V1_Color?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, V2_Color?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        DrawRect(RectColor: UE.LinearColor, ScreenX: number, ScreenY: number, ScreenW: number, ScreenH: number) : void;
        DrawText(Text: string, TextColor: UE.LinearColor, ScreenX: number, ScreenY: number, Font?: UE.Font /* = None */, Scale?: number /* = 1.000000 */, bScalePosition?: boolean /* = false */) : void;
        DrawTexture(Texture: $Nullable<UE.Texture>, ScreenX: number, ScreenY: number, ScreenW: number, ScreenH: number, TextureU: number, TextureV: number, TextureUWidth: number, TextureVHeight: number, TintColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, BlendMode?: UE.EBlendMode /* = BLEND_Translucent */, Scale?: number /* = 1.000000 */, bScalePosition?: boolean /* = false */, Rotation?: number /* = 0.000000 */, RotPivot?: UE.Vector2D /* =  */) : void;
        DrawTextureSimple(Texture: $Nullable<UE.Texture>, ScreenX: number, ScreenY: number, Scale?: number /* = 1.000000 */, bScalePosition?: boolean /* = false */) : void;
        GetActorsInSelectionRectangle(ClassFilter: $Nullable<UE.Class>, FirstPoint: UE.Vector2D, SecondPoint: UE.Vector2D, OutActors: $Ref<TArray<UE.Actor>>, bIncludeNonCollidingComponents?: boolean /* = true */, bActorMustBeFullyEnclosed?: boolean /* = false */) : void;
        GetOwningPawn() : UE.Pawn;
        GetOwningPlayerController() : UE.PlayerController;
        GetTextSize(Text: string, OutWidth: $Ref<number>, OutHeight: $Ref<number>, Font?: UE.Font /* = None */, Scale?: number /* = 1.000000 */) : void;
        NextDebugTarget() : void;
        PreviousDebugTarget() : void;
        Project(Location: UE.Vector) : UE.Vector;
        ReceiveDrawHUD(SizeX: number, SizeY: number) : void;
        ReceiveHitBoxBeginCursorOver(BoxName: string) : void;
        ReceiveHitBoxClick(BoxName: string) : void;
        ReceiveHitBoxEndCursorOver(BoxName: string) : void;
        ReceiveHitBoxRelease(BoxName: string) : void;
        RemoveAllDebugStrings() : void;
        RemoveDebugText(SrcActor: $Nullable<UE.Actor>, bLeaveDurationText: boolean) : void;
        ShowDebug(DebugType?: string /* = "None" */) : void;
        ShowDebugForReticleTargetToggle(DesiredClass: $Nullable<UE.Class>) : void;
        ShowDebugToggleSubCategory(Category: string) : void;
        ShowHUD() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HUD;
        static Load(InName: string): HUD;
    
        __tid_HUD_0__: boolean;
    }
    
    enum ECameraProjectionMode { Perspective, Orthographic, ECameraProjectionMode_MAX, __typeKeyDoNoAccess}
    enum EBloomMethod { BM_SOG, BM_FFT, BM_MAX, __typeKeyDoNoAccess}
    enum EAutoExposureMethod { AEM_Histogram, AEM_Basic, AEM_Manual, AEM_MAX, __typeKeyDoNoAccess}
    enum EDepthOfFieldMethod { DOFM_BokehDOF, DOFM_Gaussian, DOFM_CircleDOF, DOFM_MAX, __typeKeyDoNoAccess}
    class TextureCube extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureCube;
        static Load(InName: string): TextureCube;
    
        __tid_TextureCube_0__: boolean;
    }
    
    enum ERayTracingGlobalIlluminationType { Disabled, BruteForce, FinalGather, ERayTracingGlobalIlluminationType_MAX, __typeKeyDoNoAccess}
    enum EReflectionsType { ScreenSpace, RayTracing, EReflectionsType_MAX, __typeKeyDoNoAccess}
    enum EReflectedAndRefractedRayTracedShadows { Disabled, Hard_shadows, Area_shadows, EReflectedAndRefractedRayTracedShadows_MAX, __typeKeyDoNoAccess}
    enum ETranslucencyType { Raster, RayTracing, ETranslucencyType_MAX, __typeKeyDoNoAccess}
    class WeightedBlendable {
        constructor();
        constructor(Weight: number, Object: UE.Object);
        Weight: number;
        Object: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WeightedBlendable_0__: boolean;
    }
    
    class WeightedBlendables {
        constructor();
        constructor(Array: TArray<UE.WeightedBlendable>);
        Array: TArray<UE.WeightedBlendable>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WeightedBlendables_0__: boolean;
    }
    
    class PostProcessSettings {
        constructor();
        constructor(bOverride_WhiteTemp: boolean, bOverride_WhiteTint: boolean, bOverride_ColorSaturation: boolean, bOverride_ColorContrast: boolean, bOverride_ColorGamma: boolean, bOverride_ColorGain: boolean, bOverride_ColorOffset: boolean, bOverride_ColorSaturationShadows: boolean, bOverride_ColorContrastShadows: boolean, bOverride_ColorGammaShadows: boolean, bOverride_ColorGainShadows: boolean, bOverride_ColorOffsetShadows: boolean, bOverride_ColorSaturationMidtones: boolean, bOverride_ColorContrastMidtones: boolean, bOverride_ColorGammaMidtones: boolean, bOverride_ColorGainMidtones: boolean, bOverride_ColorOffsetMidtones: boolean, bOverride_ColorSaturationHighlights: boolean, bOverride_ColorContrastHighlights: boolean, bOverride_ColorGammaHighlights: boolean, bOverride_ColorGainHighlights: boolean, bOverride_ColorOffsetHighlights: boolean, bOverride_ColorCorrectionShadowsMax: boolean, bOverride_ColorCorrectionHighlightsMin: boolean, bOverride_BlueCorrection: boolean, bOverride_ExpandGamut: boolean, bOverride_ToneCurveAmount: boolean, bOverride_FilmWhitePoint: boolean, bOverride_FilmSaturation: boolean, bOverride_FilmChannelMixerRed: boolean, bOverride_FilmChannelMixerGreen: boolean, bOverride_FilmChannelMixerBlue: boolean, bOverride_FilmContrast: boolean, bOverride_FilmDynamicRange: boolean, bOverride_FilmHealAmount: boolean, bOverride_FilmToeAmount: boolean, bOverride_FilmShadowTint: boolean, bOverride_FilmShadowTintBlend: boolean, bOverride_FilmShadowTintAmount: boolean, bOverride_FilmSlope: boolean, bOverride_FilmToe: boolean, bOverride_FilmShoulder: boolean, bOverride_FilmBlackClip: boolean, bOverride_FilmWhiteClip: boolean, bOverride_SceneColorTint: boolean, bOverride_SceneFringeIntensity: boolean, bOverride_ChromaticAberrationStartOffset: boolean, bOverride_AmbientCubemapTint: boolean, bOverride_AmbientCubemapIntensity: boolean, bOverride_BloomMethod: boolean, bOverride_BloomIntensity: boolean, bOverride_BloomThreshold: boolean, bOverride_Bloom1Tint: boolean, bOverride_Bloom1Size: boolean, bOverride_Bloom2Size: boolean, bOverride_Bloom2Tint: boolean, bOverride_Bloom3Tint: boolean, bOverride_Bloom3Size: boolean, bOverride_Bloom4Tint: boolean, bOverride_Bloom4Size: boolean, bOverride_Bloom5Tint: boolean, bOverride_Bloom5Size: boolean, bOverride_Bloom6Tint: boolean, bOverride_Bloom6Size: boolean, bOverride_BloomSizeScale: boolean, bOverride_BloomConvolutionTexture: boolean, bOverride_BloomConvolutionSize: boolean, bOverride_BloomConvolutionCenterUV: boolean, bOverride_BloomConvolutionPreFilter: boolean, bOverride_BloomConvolutionPreFilterMin: boolean, bOverride_BloomConvolutionPreFilterMax: boolean, bOverride_BloomConvolutionPreFilterMult: boolean, bOverride_BloomConvolutionBufferScale: boolean, bOverride_BloomDirtMaskIntensity: boolean, bOverride_BloomDirtMaskTint: boolean, bOverride_BloomDirtMask: boolean, bOverride_CameraShutterSpeed: boolean, bOverride_CameraISO: boolean, bOverride_AutoExposureMethod: boolean, bOverride_AutoExposureLowPercent: boolean, bOverride_AutoExposureHighPercent: boolean, bOverride_AutoExposureMinBrightness: boolean, bOverride_AutoExposureMaxBrightness: boolean, bOverride_AutoExposureCalibrationConstant: boolean, bOverride_AutoExposureSpeedUp: boolean, bOverride_AutoExposureSpeedDown: boolean, bOverride_AutoExposureBias: boolean, bOverride_AutoExposureBiasCurve: boolean, bOverride_AutoExposureMeterMask: boolean, bOverride_AutoExposureApplyPhysicalCameraExposure: boolean, bOverride_HistogramLogMin: boolean, bOverride_HistogramLogMax: boolean, bOverride_LensFlareIntensity: boolean, bOverride_LensFlareTint: boolean, bOverride_LensFlareTints: boolean, bOverride_LensFlareBokehSize: boolean, bOverride_LensFlareBokehShape: boolean, bOverride_LensFlareThreshold: boolean, bOverride_VignetteIntensity: boolean, bOverride_GrainIntensity: boolean, bOverride_GrainJitter: boolean, bOverride_AmbientOcclusionIntensity: boolean, bOverride_AmbientOcclusionStaticFraction: boolean, bOverride_AmbientOcclusionRadius: boolean, bOverride_AmbientOcclusionFadeDistance: boolean, bOverride_AmbientOcclusionFadeRadius: boolean, bOverride_AmbientOcclusionDistance: boolean, bOverride_AmbientOcclusionRadiusInWS: boolean, bOverride_AmbientOcclusionPower: boolean, bOverride_AmbientOcclusionBias: boolean, bOverride_AmbientOcclusionQuality: boolean, bOverride_AmbientOcclusionMipBlend: boolean, bOverride_AmbientOcclusionMipScale: boolean, bOverride_AmbientOcclusionMipThreshold: boolean, bOverride_AmbientOcclusionTemporalBlendWeight: boolean, bOverride_RayTracingAO: boolean, bOverride_RayTracingAOSamplesPerPixel: boolean, bOverride_RayTracingAOIntensity: boolean, bOverride_RayTracingAORadius: boolean, bOverride_LPVIntensity: boolean, bOverride_LPVDirectionalOcclusionIntensity: boolean, bOverride_LPVDirectionalOcclusionRadius: boolean, bOverride_LPVDiffuseOcclusionExponent: boolean, bOverride_LPVSpecularOcclusionExponent: boolean, bOverride_LPVDiffuseOcclusionIntensity: boolean, bOverride_LPVSpecularOcclusionIntensity: boolean, bOverride_LPVSize: boolean, bOverride_LPVSecondaryOcclusionIntensity: boolean, bOverride_LPVSecondaryBounceIntensity: boolean, bOverride_LPVGeometryVolumeBias: boolean, bOverride_LPVVplInjectionBias: boolean, bOverride_LPVEmissiveInjectionIntensity: boolean, bOverride_LPVFadeRange: boolean, bOverride_LPVDirectionalOcclusionFadeRange: boolean, bOverride_IndirectLightingColor: boolean, bOverride_IndirectLightingIntensity: boolean, bOverride_ColorGradingIntensity: boolean, bOverride_ColorGradingLUT: boolean, bOverride_DepthOfFieldFocalDistance: boolean, bOverride_DepthOfFieldFstop: boolean, bOverride_DepthOfFieldMinFstop: boolean, bOverride_DepthOfFieldBladeCount: boolean, bOverride_DepthOfFieldSensorWidth: boolean, bOverride_DepthOfFieldDepthBlurRadius: boolean, bOverride_DepthOfFieldDepthBlurAmount: boolean, bOverride_DepthOfFieldFocalRegion: boolean, bOverride_DepthOfFieldNearTransitionRegion: boolean, bOverride_DepthOfFieldFarTransitionRegion: boolean, bOverride_DepthOfFieldScale: boolean, bOverride_DepthOfFieldNearBlurSize: boolean, bOverride_DepthOfFieldFarBlurSize: boolean, bOverride_MobileHQGaussian: boolean, bOverride_DepthOfFieldOcclusion: boolean, bOverride_DepthOfFieldSkyFocusDistance: boolean, bOverride_DepthOfFieldVignetteSize: boolean, bOverride_MotionBlurAmount: boolean, bOverride_MotionBlurMax: boolean, bOverride_MotionBlurTargetFPS: boolean, bOverride_MotionBlurPerObjectSize: boolean, bOverride_ScreenPercentage: boolean, bOverride_ScreenSpaceReflectionIntensity: boolean, bOverride_ScreenSpaceReflectionQuality: boolean, bOverride_ScreenSpaceReflectionMaxRoughness: boolean, bOverride_ScreenSpaceReflectionRoughnessScale: boolean, bOverride_ReflectionsType: boolean, bOverride_RayTracingReflectionsMaxRoughness: boolean, bOverride_RayTracingReflectionsMaxBounces: boolean, bOverride_RayTracingReflectionsSamplesPerPixel: boolean, bOverride_RayTracingReflectionsShadows: boolean, bOverride_RayTracingReflectionsTranslucency: boolean, bOverride_TranslucencyType: boolean, bOverride_RayTracingTranslucencyMaxRoughness: boolean, bOverride_RayTracingTranslucencyRefractionRays: boolean, bOverride_RayTracingTranslucencySamplesPerPixel: boolean, bOverride_RayTracingTranslucencyShadows: boolean, bOverride_RayTracingTranslucencyRefraction: boolean, bOverride_RayTracingGI: boolean, bOverride_RayTracingGIMaxBounces: boolean, bOverride_RayTracingGISamplesPerPixel: boolean, bOverride_PathTracingMaxBounces: boolean, bOverride_PathTracingSamplesPerPixel: boolean, bMobileHQGaussian: boolean, BloomMethod: UE.EBloomMethod, AutoExposureMethod: UE.EAutoExposureMethod, DepthOfFieldMethod: UE.EDepthOfFieldMethod, WhiteTemp: number, WhiteTint: number, ColorSaturation: UE.Vector4, ColorContrast: UE.Vector4, ColorGamma: UE.Vector4, ColorGain: UE.Vector4, ColorOffset: UE.Vector4, ColorSaturationShadows: UE.Vector4, ColorContrastShadows: UE.Vector4, ColorGammaShadows: UE.Vector4, ColorGainShadows: UE.Vector4, ColorOffsetShadows: UE.Vector4, ColorSaturationMidtones: UE.Vector4, ColorContrastMidtones: UE.Vector4, ColorGammaMidtones: UE.Vector4, ColorGainMidtones: UE.Vector4, ColorOffsetMidtones: UE.Vector4, ColorSaturationHighlights: UE.Vector4, ColorContrastHighlights: UE.Vector4, ColorGammaHighlights: UE.Vector4, ColorGainHighlights: UE.Vector4, ColorOffsetHighlights: UE.Vector4, ColorCorrectionHighlightsMin: number, ColorCorrectionShadowsMax: number, BlueCorrection: number, ExpandGamut: number, ToneCurveAmount: number, FilmSlope: number, FilmToe: number, FilmShoulder: number, FilmBlackClip: number, FilmWhiteClip: number, FilmWhitePoint: UE.LinearColor, FilmShadowTint: UE.LinearColor, FilmShadowTintBlend: number, FilmShadowTintAmount: number, FilmSaturation: number, FilmChannelMixerRed: UE.LinearColor, FilmChannelMixerGreen: UE.LinearColor, FilmChannelMixerBlue: UE.LinearColor, FilmContrast: number, FilmToeAmount: number, FilmHealAmount: number, FilmDynamicRange: number, SceneColorTint: UE.LinearColor, SceneFringeIntensity: number, ChromaticAberrationStartOffset: number, BloomIntensity: number, BloomThreshold: number, BloomSizeScale: number, Bloom1Size: number, Bloom2Size: number, Bloom3Size: number, Bloom4Size: number, Bloom5Size: number, Bloom6Size: number, Bloom1Tint: UE.LinearColor, Bloom2Tint: UE.LinearColor, Bloom3Tint: UE.LinearColor, Bloom4Tint: UE.LinearColor, Bloom5Tint: UE.LinearColor, Bloom6Tint: UE.LinearColor, BloomConvolutionSize: number, BloomConvolutionTexture: UE.Texture2D, BloomConvolutionCenterUV: UE.Vector2D, BloomConvolutionPreFilter: UE.Vector, BloomConvolutionPreFilterMin: number, BloomConvolutionPreFilterMax: number, BloomConvolutionPreFilterMult: number, BloomConvolutionBufferScale: number, BloomDirtMask: UE.Texture, BloomDirtMaskIntensity: number, BloomDirtMaskTint: UE.LinearColor, AmbientCubemapTint: UE.LinearColor, AmbientCubemapIntensity: number, AmbientCubemap: UE.TextureCube, CameraShutterSpeed: number, CameraISO: number, DepthOfFieldFstop: number, DepthOfFieldMinFstop: number, DepthOfFieldBladeCount: number, AutoExposureBias: number, AutoExposureBiasBackup: number, bOverride_AutoExposureBiasBackup: boolean, AutoExposureApplyPhysicalCameraExposure: boolean, AutoExposureBiasCurve: UE.CurveFloat, AutoExposureMeterMask: UE.Texture, AutoExposureLowPercent: number, AutoExposureHighPercent: number, AutoExposureMinBrightness: number, AutoExposureMaxBrightness: number, AutoExposureSpeedUp: number, AutoExposureSpeedDown: number, HistogramLogMin: number, HistogramLogMax: number, AutoExposureCalibrationConstant: number, LensFlareIntensity: number, LensFlareTint: UE.LinearColor, LensFlareBokehSize: number, LensFlareThreshold: number, LensFlareBokehShape: UE.Texture, LensFlareTints: FixSizeArray<UE.LinearColor>, VignetteIntensity: number, GrainJitter: number, GrainIntensity: number, AmbientOcclusionIntensity: number, AmbientOcclusionStaticFraction: number, AmbientOcclusionRadius: number, AmbientOcclusionRadiusInWS: boolean, AmbientOcclusionFadeDistance: number, AmbientOcclusionFadeRadius: number, AmbientOcclusionDistance: number, AmbientOcclusionPower: number, AmbientOcclusionBias: number, AmbientOcclusionQuality: number, AmbientOcclusionMipBlend: number, AmbientOcclusionMipScale: number, AmbientOcclusionMipThreshold: number, AmbientOcclusionTemporalBlendWeight: number, RayTracingAO: boolean, RayTracingAOSamplesPerPixel: number, RayTracingAOIntensity: number, RayTracingAORadius: number, IndirectLightingColor: UE.LinearColor, IndirectLightingIntensity: number, RayTracingGI: boolean, RayTracingGIType: UE.ERayTracingGlobalIlluminationType, RayTracingGIMaxBounces: number, RayTracingGISamplesPerPixel: number, ColorGradingIntensity: number, ColorGradingLUT: UE.Texture, DepthOfFieldSensorWidth: number, DepthOfFieldFocalDistance: number, DepthOfFieldDepthBlurAmount: number, DepthOfFieldDepthBlurRadius: number, DepthOfFieldFocalRegion: number, DepthOfFieldNearTransitionRegion: number, DepthOfFieldFarTransitionRegion: number, DepthOfFieldScale: number, DepthOfFieldNearBlurSize: number, DepthOfFieldFarBlurSize: number, DepthOfFieldOcclusion: number, DepthOfFieldSkyFocusDistance: number, DepthOfFieldVignetteSize: number, MotionBlurAmount: number, MotionBlurMax: number, MotionBlurTargetFPS: number, MotionBlurPerObjectSize: number, LPVIntensity: number, LPVVplInjectionBias: number, LPVSize: number, LPVSecondaryOcclusionIntensity: number, LPVSecondaryBounceIntensity: number, LPVGeometryVolumeBias: number, LPVEmissiveInjectionIntensity: number, LPVDirectionalOcclusionIntensity: number, LPVDirectionalOcclusionRadius: number, LPVDiffuseOcclusionExponent: number, LPVSpecularOcclusionExponent: number, LPVDiffuseOcclusionIntensity: number, LPVSpecularOcclusionIntensity: number, ReflectionsType: UE.EReflectionsType, ScreenSpaceReflectionIntensity: number, ScreenSpaceReflectionQuality: number, ScreenSpaceReflectionMaxRoughness: number, RayTracingReflectionsMaxRoughness: number, RayTracingReflectionsMaxBounces: number, RayTracingReflectionsSamplesPerPixel: number, RayTracingReflectionsShadows: UE.EReflectedAndRefractedRayTracedShadows, RayTracingReflectionsTranslucency: boolean, TranslucencyType: UE.ETranslucencyType, RayTracingTranslucencyMaxRoughness: number, RayTracingTranslucencyRefractionRays: number, RayTracingTranslucencySamplesPerPixel: number, RayTracingTranslucencyShadows: UE.EReflectedAndRefractedRayTracedShadows, RayTracingTranslucencyRefraction: boolean, PathTracingMaxBounces: number, PathTracingSamplesPerPixel: number, LPVFadeRange: number, LPVDirectionalOcclusionFadeRange: number, ScreenPercentage: number, WeightedBlendables: UE.WeightedBlendables, Blendables: TArray<UE.Object>);
        bOverride_WhiteTemp: boolean;
        bOverride_WhiteTint: boolean;
        bOverride_ColorSaturation: boolean;
        bOverride_ColorContrast: boolean;
        bOverride_ColorGamma: boolean;
        bOverride_ColorGain: boolean;
        bOverride_ColorOffset: boolean;
        bOverride_ColorSaturationShadows: boolean;
        bOverride_ColorContrastShadows: boolean;
        bOverride_ColorGammaShadows: boolean;
        bOverride_ColorGainShadows: boolean;
        bOverride_ColorOffsetShadows: boolean;
        bOverride_ColorSaturationMidtones: boolean;
        bOverride_ColorContrastMidtones: boolean;
        bOverride_ColorGammaMidtones: boolean;
        bOverride_ColorGainMidtones: boolean;
        bOverride_ColorOffsetMidtones: boolean;
        bOverride_ColorSaturationHighlights: boolean;
        bOverride_ColorContrastHighlights: boolean;
        bOverride_ColorGammaHighlights: boolean;
        bOverride_ColorGainHighlights: boolean;
        bOverride_ColorOffsetHighlights: boolean;
        bOverride_ColorCorrectionShadowsMax: boolean;
        bOverride_ColorCorrectionHighlightsMin: boolean;
        bOverride_BlueCorrection: boolean;
        bOverride_ExpandGamut: boolean;
        bOverride_ToneCurveAmount: boolean;
        bOverride_FilmWhitePoint: boolean;
        bOverride_FilmSaturation: boolean;
        bOverride_FilmChannelMixerRed: boolean;
        bOverride_FilmChannelMixerGreen: boolean;
        bOverride_FilmChannelMixerBlue: boolean;
        bOverride_FilmContrast: boolean;
        bOverride_FilmDynamicRange: boolean;
        bOverride_FilmHealAmount: boolean;
        bOverride_FilmToeAmount: boolean;
        bOverride_FilmShadowTint: boolean;
        bOverride_FilmShadowTintBlend: boolean;
        bOverride_FilmShadowTintAmount: boolean;
        bOverride_FilmSlope: boolean;
        bOverride_FilmToe: boolean;
        bOverride_FilmShoulder: boolean;
        bOverride_FilmBlackClip: boolean;
        bOverride_FilmWhiteClip: boolean;
        bOverride_SceneColorTint: boolean;
        bOverride_SceneFringeIntensity: boolean;
        bOverride_ChromaticAberrationStartOffset: boolean;
        bOverride_AmbientCubemapTint: boolean;
        bOverride_AmbientCubemapIntensity: boolean;
        bOverride_BloomMethod: boolean;
        bOverride_BloomIntensity: boolean;
        bOverride_BloomThreshold: boolean;
        bOverride_Bloom1Tint: boolean;
        bOverride_Bloom1Size: boolean;
        bOverride_Bloom2Size: boolean;
        bOverride_Bloom2Tint: boolean;
        bOverride_Bloom3Tint: boolean;
        bOverride_Bloom3Size: boolean;
        bOverride_Bloom4Tint: boolean;
        bOverride_Bloom4Size: boolean;
        bOverride_Bloom5Tint: boolean;
        bOverride_Bloom5Size: boolean;
        bOverride_Bloom6Tint: boolean;
        bOverride_Bloom6Size: boolean;
        bOverride_BloomSizeScale: boolean;
        bOverride_BloomConvolutionTexture: boolean;
        bOverride_BloomConvolutionSize: boolean;
        bOverride_BloomConvolutionCenterUV: boolean;
        bOverride_BloomConvolutionPreFilter: boolean;
        bOverride_BloomConvolutionPreFilterMin: boolean;
        bOverride_BloomConvolutionPreFilterMax: boolean;
        bOverride_BloomConvolutionPreFilterMult: boolean;
        bOverride_BloomConvolutionBufferScale: boolean;
        bOverride_BloomDirtMaskIntensity: boolean;
        bOverride_BloomDirtMaskTint: boolean;
        bOverride_BloomDirtMask: boolean;
        bOverride_CameraShutterSpeed: boolean;
        bOverride_CameraISO: boolean;
        bOverride_AutoExposureMethod: boolean;
        bOverride_AutoExposureLowPercent: boolean;
        bOverride_AutoExposureHighPercent: boolean;
        bOverride_AutoExposureMinBrightness: boolean;
        bOverride_AutoExposureMaxBrightness: boolean;
        bOverride_AutoExposureCalibrationConstant: boolean;
        bOverride_AutoExposureSpeedUp: boolean;
        bOverride_AutoExposureSpeedDown: boolean;
        bOverride_AutoExposureBias: boolean;
        bOverride_AutoExposureBiasCurve: boolean;
        bOverride_AutoExposureMeterMask: boolean;
        bOverride_AutoExposureApplyPhysicalCameraExposure: boolean;
        bOverride_HistogramLogMin: boolean;
        bOverride_HistogramLogMax: boolean;
        bOverride_LensFlareIntensity: boolean;
        bOverride_LensFlareTint: boolean;
        bOverride_LensFlareTints: boolean;
        bOverride_LensFlareBokehSize: boolean;
        bOverride_LensFlareBokehShape: boolean;
        bOverride_LensFlareThreshold: boolean;
        bOverride_VignetteIntensity: boolean;
        bOverride_GrainIntensity: boolean;
        bOverride_GrainJitter: boolean;
        bOverride_AmbientOcclusionIntensity: boolean;
        bOverride_AmbientOcclusionStaticFraction: boolean;
        bOverride_AmbientOcclusionRadius: boolean;
        bOverride_AmbientOcclusionFadeDistance: boolean;
        bOverride_AmbientOcclusionFadeRadius: boolean;
        bOverride_AmbientOcclusionDistance: boolean;
        bOverride_AmbientOcclusionRadiusInWS: boolean;
        bOverride_AmbientOcclusionPower: boolean;
        bOverride_AmbientOcclusionBias: boolean;
        bOverride_AmbientOcclusionQuality: boolean;
        bOverride_AmbientOcclusionMipBlend: boolean;
        bOverride_AmbientOcclusionMipScale: boolean;
        bOverride_AmbientOcclusionMipThreshold: boolean;
        bOverride_AmbientOcclusionTemporalBlendWeight: boolean;
        bOverride_RayTracingAO: boolean;
        bOverride_RayTracingAOSamplesPerPixel: boolean;
        bOverride_RayTracingAOIntensity: boolean;
        bOverride_RayTracingAORadius: boolean;
        bOverride_LPVIntensity: boolean;
        bOverride_LPVDirectionalOcclusionIntensity: boolean;
        bOverride_LPVDirectionalOcclusionRadius: boolean;
        bOverride_LPVDiffuseOcclusionExponent: boolean;
        bOverride_LPVSpecularOcclusionExponent: boolean;
        bOverride_LPVDiffuseOcclusionIntensity: boolean;
        bOverride_LPVSpecularOcclusionIntensity: boolean;
        bOverride_LPVSize: boolean;
        bOverride_LPVSecondaryOcclusionIntensity: boolean;
        bOverride_LPVSecondaryBounceIntensity: boolean;
        bOverride_LPVGeometryVolumeBias: boolean;
        bOverride_LPVVplInjectionBias: boolean;
        bOverride_LPVEmissiveInjectionIntensity: boolean;
        bOverride_LPVFadeRange: boolean;
        bOverride_LPVDirectionalOcclusionFadeRange: boolean;
        bOverride_IndirectLightingColor: boolean;
        bOverride_IndirectLightingIntensity: boolean;
        bOverride_ColorGradingIntensity: boolean;
        bOverride_ColorGradingLUT: boolean;
        bOverride_DepthOfFieldFocalDistance: boolean;
        bOverride_DepthOfFieldFstop: boolean;
        bOverride_DepthOfFieldMinFstop: boolean;
        bOverride_DepthOfFieldBladeCount: boolean;
        bOverride_DepthOfFieldSensorWidth: boolean;
        bOverride_DepthOfFieldDepthBlurRadius: boolean;
        bOverride_DepthOfFieldDepthBlurAmount: boolean;
        bOverride_DepthOfFieldFocalRegion: boolean;
        bOverride_DepthOfFieldNearTransitionRegion: boolean;
        bOverride_DepthOfFieldFarTransitionRegion: boolean;
        bOverride_DepthOfFieldScale: boolean;
        bOverride_DepthOfFieldNearBlurSize: boolean;
        bOverride_DepthOfFieldFarBlurSize: boolean;
        bOverride_MobileHQGaussian: boolean;
        bOverride_DepthOfFieldOcclusion: boolean;
        bOverride_DepthOfFieldSkyFocusDistance: boolean;
        bOverride_DepthOfFieldVignetteSize: boolean;
        bOverride_MotionBlurAmount: boolean;
        bOverride_MotionBlurMax: boolean;
        bOverride_MotionBlurTargetFPS: boolean;
        bOverride_MotionBlurPerObjectSize: boolean;
        bOverride_ScreenPercentage: boolean;
        bOverride_ScreenSpaceReflectionIntensity: boolean;
        bOverride_ScreenSpaceReflectionQuality: boolean;
        bOverride_ScreenSpaceReflectionMaxRoughness: boolean;
        bOverride_ScreenSpaceReflectionRoughnessScale: boolean;
        bOverride_ReflectionsType: boolean;
        bOverride_RayTracingReflectionsMaxRoughness: boolean;
        bOverride_RayTracingReflectionsMaxBounces: boolean;
        bOverride_RayTracingReflectionsSamplesPerPixel: boolean;
        bOverride_RayTracingReflectionsShadows: boolean;
        bOverride_RayTracingReflectionsTranslucency: boolean;
        bOverride_TranslucencyType: boolean;
        bOverride_RayTracingTranslucencyMaxRoughness: boolean;
        bOverride_RayTracingTranslucencyRefractionRays: boolean;
        bOverride_RayTracingTranslucencySamplesPerPixel: boolean;
        bOverride_RayTracingTranslucencyShadows: boolean;
        bOverride_RayTracingTranslucencyRefraction: boolean;
        bOverride_RayTracingGI: boolean;
        bOverride_RayTracingGIMaxBounces: boolean;
        bOverride_RayTracingGISamplesPerPixel: boolean;
        bOverride_PathTracingMaxBounces: boolean;
        bOverride_PathTracingSamplesPerPixel: boolean;
        bMobileHQGaussian: boolean;
        BloomMethod: UE.EBloomMethod;
        AutoExposureMethod: UE.EAutoExposureMethod;
        DepthOfFieldMethod: UE.EDepthOfFieldMethod;
        WhiteTemp: number;
        WhiteTint: number;
        ColorSaturation: UE.Vector4;
        ColorContrast: UE.Vector4;
        ColorGamma: UE.Vector4;
        ColorGain: UE.Vector4;
        ColorOffset: UE.Vector4;
        ColorSaturationShadows: UE.Vector4;
        ColorContrastShadows: UE.Vector4;
        ColorGammaShadows: UE.Vector4;
        ColorGainShadows: UE.Vector4;
        ColorOffsetShadows: UE.Vector4;
        ColorSaturationMidtones: UE.Vector4;
        ColorContrastMidtones: UE.Vector4;
        ColorGammaMidtones: UE.Vector4;
        ColorGainMidtones: UE.Vector4;
        ColorOffsetMidtones: UE.Vector4;
        ColorSaturationHighlights: UE.Vector4;
        ColorContrastHighlights: UE.Vector4;
        ColorGammaHighlights: UE.Vector4;
        ColorGainHighlights: UE.Vector4;
        ColorOffsetHighlights: UE.Vector4;
        ColorCorrectionHighlightsMin: number;
        ColorCorrectionShadowsMax: number;
        BlueCorrection: number;
        ExpandGamut: number;
        ToneCurveAmount: number;
        FilmSlope: number;
        FilmToe: number;
        FilmShoulder: number;
        FilmBlackClip: number;
        FilmWhiteClip: number;
        FilmWhitePoint: UE.LinearColor;
        FilmShadowTint: UE.LinearColor;
        FilmShadowTintBlend: number;
        FilmShadowTintAmount: number;
        FilmSaturation: number;
        FilmChannelMixerRed: UE.LinearColor;
        FilmChannelMixerGreen: UE.LinearColor;
        FilmChannelMixerBlue: UE.LinearColor;
        FilmContrast: number;
        FilmToeAmount: number;
        FilmHealAmount: number;
        FilmDynamicRange: number;
        SceneColorTint: UE.LinearColor;
        SceneFringeIntensity: number;
        ChromaticAberrationStartOffset: number;
        BloomIntensity: number;
        BloomThreshold: number;
        BloomSizeScale: number;
        Bloom1Size: number;
        Bloom2Size: number;
        Bloom3Size: number;
        Bloom4Size: number;
        Bloom5Size: number;
        Bloom6Size: number;
        Bloom1Tint: UE.LinearColor;
        Bloom2Tint: UE.LinearColor;
        Bloom3Tint: UE.LinearColor;
        Bloom4Tint: UE.LinearColor;
        Bloom5Tint: UE.LinearColor;
        Bloom6Tint: UE.LinearColor;
        BloomConvolutionSize: number;
        BloomConvolutionTexture: UE.Texture2D;
        BloomConvolutionCenterUV: UE.Vector2D;
        BloomConvolutionPreFilter: UE.Vector;
        BloomConvolutionPreFilterMin: number;
        BloomConvolutionPreFilterMax: number;
        BloomConvolutionPreFilterMult: number;
        BloomConvolutionBufferScale: number;
        BloomDirtMask: UE.Texture;
        BloomDirtMaskIntensity: number;
        BloomDirtMaskTint: UE.LinearColor;
        AmbientCubemapTint: UE.LinearColor;
        AmbientCubemapIntensity: number;
        AmbientCubemap: UE.TextureCube;
        CameraShutterSpeed: number;
        CameraISO: number;
        DepthOfFieldFstop: number;
        DepthOfFieldMinFstop: number;
        DepthOfFieldBladeCount: number;
        AutoExposureBias: number;
        AutoExposureBiasBackup: number;
        bOverride_AutoExposureBiasBackup: boolean;
        AutoExposureApplyPhysicalCameraExposure: boolean;
        AutoExposureBiasCurve: UE.CurveFloat;
        AutoExposureMeterMask: UE.Texture;
        AutoExposureLowPercent: number;
        AutoExposureHighPercent: number;
        AutoExposureMinBrightness: number;
        AutoExposureMaxBrightness: number;
        AutoExposureSpeedUp: number;
        AutoExposureSpeedDown: number;
        HistogramLogMin: number;
        HistogramLogMax: number;
        AutoExposureCalibrationConstant: number;
        LensFlareIntensity: number;
        LensFlareTint: UE.LinearColor;
        LensFlareBokehSize: number;
        LensFlareThreshold: number;
        LensFlareBokehShape: UE.Texture;
        LensFlareTints: FixSizeArray<UE.LinearColor>;
        VignetteIntensity: number;
        GrainJitter: number;
        GrainIntensity: number;
        AmbientOcclusionIntensity: number;
        AmbientOcclusionStaticFraction: number;
        AmbientOcclusionRadius: number;
        AmbientOcclusionRadiusInWS: boolean;
        AmbientOcclusionFadeDistance: number;
        AmbientOcclusionFadeRadius: number;
        AmbientOcclusionDistance: number;
        AmbientOcclusionPower: number;
        AmbientOcclusionBias: number;
        AmbientOcclusionQuality: number;
        AmbientOcclusionMipBlend: number;
        AmbientOcclusionMipScale: number;
        AmbientOcclusionMipThreshold: number;
        AmbientOcclusionTemporalBlendWeight: number;
        RayTracingAO: boolean;
        RayTracingAOSamplesPerPixel: number;
        RayTracingAOIntensity: number;
        RayTracingAORadius: number;
        IndirectLightingColor: UE.LinearColor;
        IndirectLightingIntensity: number;
        RayTracingGI: boolean;
        RayTracingGIType: UE.ERayTracingGlobalIlluminationType;
        RayTracingGIMaxBounces: number;
        RayTracingGISamplesPerPixel: number;
        ColorGradingIntensity: number;
        ColorGradingLUT: UE.Texture;
        DepthOfFieldSensorWidth: number;
        DepthOfFieldFocalDistance: number;
        DepthOfFieldDepthBlurAmount: number;
        DepthOfFieldDepthBlurRadius: number;
        DepthOfFieldFocalRegion: number;
        DepthOfFieldNearTransitionRegion: number;
        DepthOfFieldFarTransitionRegion: number;
        DepthOfFieldScale: number;
        DepthOfFieldNearBlurSize: number;
        DepthOfFieldFarBlurSize: number;
        DepthOfFieldOcclusion: number;
        DepthOfFieldSkyFocusDistance: number;
        DepthOfFieldVignetteSize: number;
        MotionBlurAmount: number;
        MotionBlurMax: number;
        MotionBlurTargetFPS: number;
        MotionBlurPerObjectSize: number;
        LPVIntensity: number;
        LPVVplInjectionBias: number;
        LPVSize: number;
        LPVSecondaryOcclusionIntensity: number;
        LPVSecondaryBounceIntensity: number;
        LPVGeometryVolumeBias: number;
        LPVEmissiveInjectionIntensity: number;
        LPVDirectionalOcclusionIntensity: number;
        LPVDirectionalOcclusionRadius: number;
        LPVDiffuseOcclusionExponent: number;
        LPVSpecularOcclusionExponent: number;
        LPVDiffuseOcclusionIntensity: number;
        LPVSpecularOcclusionIntensity: number;
        ReflectionsType: UE.EReflectionsType;
        ScreenSpaceReflectionIntensity: number;
        ScreenSpaceReflectionQuality: number;
        ScreenSpaceReflectionMaxRoughness: number;
        RayTracingReflectionsMaxRoughness: number;
        RayTracingReflectionsMaxBounces: number;
        RayTracingReflectionsSamplesPerPixel: number;
        RayTracingReflectionsShadows: UE.EReflectedAndRefractedRayTracedShadows;
        RayTracingReflectionsTranslucency: boolean;
        TranslucencyType: UE.ETranslucencyType;
        RayTracingTranslucencyMaxRoughness: number;
        RayTracingTranslucencyRefractionRays: number;
        RayTracingTranslucencySamplesPerPixel: number;
        RayTracingTranslucencyShadows: UE.EReflectedAndRefractedRayTracedShadows;
        RayTracingTranslucencyRefraction: boolean;
        PathTracingMaxBounces: number;
        PathTracingSamplesPerPixel: number;
        LPVFadeRange: number;
        LPVDirectionalOcclusionFadeRange: number;
        ScreenPercentage: number;
        WeightedBlendables: UE.WeightedBlendables;
        Blendables: TArray<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PostProcessSettings_0__: boolean;
    }
    
    class MinimalViewInfo {
        constructor();
        constructor(Location: UE.Vector, Rotation: UE.Rotator, FOV: number, DesiredFOV: number, OrthoWidth: number, OrthoNearClipPlane: number, OrthoFarClipPlane: number, AspectRatio: number, bConstrainAspectRatio: boolean, bUseFieldOfViewForLOD: boolean, ProjectionMode: UE.ECameraProjectionMode, PostProcessBlendWeight: number, PostProcessSettings: UE.PostProcessSettings, OffCenterProjectionOffset: UE.Vector2D);
        Location: UE.Vector;
        Rotation: UE.Rotator;
        FOV: number;
        DesiredFOV: number;
        OrthoWidth: number;
        OrthoNearClipPlane: number;
        OrthoFarClipPlane: number;
        AspectRatio: number;
        bConstrainAspectRatio: boolean;
        bUseFieldOfViewForLOD: boolean;
        ProjectionMode: UE.ECameraProjectionMode;
        PostProcessBlendWeight: number;
        PostProcessSettings: UE.PostProcessSettings;
        OffCenterProjectionOffset: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MinimalViewInfo_0__: boolean;
    }
    
    class CameraCacheEntry {
        constructor();
        constructor(TimeStamp: number, POV: UE.MinimalViewInfo);
        TimeStamp: number;
        POV: UE.MinimalViewInfo;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraCacheEntry_0__: boolean;
    }
    
    class TViewTarget {
        constructor();
        constructor(Target: UE.Actor, POV: UE.MinimalViewInfo, PlayerState: UE.PlayerState);
        Target: UE.Actor;
        POV: UE.MinimalViewInfo;
        PlayerState: UE.PlayerState;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TViewTarget_0__: boolean;
    }
    
    class CameraModifier extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDebug: boolean;
        bExclusive: boolean;
        Priority: number;
        CameraOwner: UE.PlayerCameraManager;
        AlphaInTime: number;
        AlphaOutTime: number;
        Alpha: number;
        BlueprintModifyCamera(DeltaTime: number, ViewLocation: UE.Vector, ViewRotation: UE.Rotator, FOV: number, NewViewLocation: $Ref<UE.Vector>, NewViewRotation: $Ref<UE.Rotator>, NewFOV: $Ref<number>) : void;
        BlueprintModifyPostProcess(DeltaTime: number, PostProcessBlendWeight: $Ref<number>, PostProcessSettings: $Ref<UE.PostProcessSettings>) : void;
        DisableModifier(bImmediate?: boolean /* = false */) : void;
        EnableModifier() : void;
        GetViewTarget() : UE.Actor;
        IsDisabled() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraModifier;
        static Load(InName: string): CameraModifier;
    
        __tid_CameraModifier_0__: boolean;
    }
    
    enum EAttachmentRule { KeepRelative, KeepWorld, SnapToTarget, EAttachmentRule_MAX, __typeKeyDoNoAccess}
    class FXSystemAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxPoolSize: number;
        PoolPrimeSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FXSystemAsset;
        static Load(InName: string): FXSystemAsset;
    
        __tid_FXSystemAsset_0__: boolean;
    }
    
    class FXSystemComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetFXSystemAsset() : UE.FXSystemAsset;
        ReleaseToPool() : void;
        SetActorParameter(ParameterName: string, Param: $Nullable<UE.Actor>) : void;
        SetAutoAttachmentParameters(Parent: $Nullable<UE.SceneComponent>, SocketName: string, LocationRule: UE.EAttachmentRule, RotationRule: UE.EAttachmentRule, ScaleRule: UE.EAttachmentRule) : void;
        SetBoolParameter(ParameterName: string, Param: boolean) : void;
        SetColorParameter(ParameterName: string, Param: UE.LinearColor) : void;
        SetEmitterEnable(EmitterName: string, bNewEnableState: boolean) : void;
        SetFloatParameter(ParameterName: string, Param: number) : void;
        SetIntParameter(ParameterName: string, Param: number) : void;
        SetUseAutoManageAttachment(bAutoManage: boolean) : void;
        SetVectorParameter(ParameterName: string, Param: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FXSystemComponent;
        static Load(InName: string): FXSystemComponent;
    
        __tid_FXSystemComponent_0__: boolean;
    }
    
    enum EEmitterRenderMode { ERM_Normal, ERM_Point, ERM_Cross, ERM_LightsOnly, ERM_None, ERM_MAX, __typeKeyDoNoAccess}
    enum EParticleSignificanceLevel { Low, Medium, High, Critical, Num, EParticleSignificanceLevel_MAX, __typeKeyDoNoAccess}
    enum EDetailMode { DM_Low, DM_Medium, DM_High, DM_MAX, __typeKeyDoNoAccess}
    class ParticleModule extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSpawnModule: boolean;
        bUpdateModule: boolean;
        bFinalUpdateModule: boolean;
        bUpdateForGPUEmitter: boolean;
        bCurvesAsColor: boolean;
        b3DDrawMode: boolean;
        bSupported3DDrawMode: boolean;
        bEnabled: boolean;
        bEditable: boolean;
        LODDuplicate: boolean;
        bSupportsRandomSeed: boolean;
        bRequiresLoopingNotification: boolean;
        LODValidity: number;
        ModuleEditorColor: UE.Color;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModule;
        static Load(InName: string): ParticleModule;
    
        __tid_ParticleModule_0__: boolean;
    }
    
    enum EParticleScreenAlignment { PSA_FacingCameraPosition, PSA_Square, PSA_Rectangle, PSA_Velocity, PSA_AwayFromCenter, PSA_TypeSpecific, PSA_FacingCameraDistanceBlend, PSA_MAX, __typeKeyDoNoAccess}
    enum EParticleSortMode { PSORTMODE_None, PSORTMODE_ViewProjDepth, PSORTMODE_DistanceToView, PSORTMODE_Age_OldestFirst, PSORTMODE_Age_NewestFirst, PSORTMODE_MAX, __typeKeyDoNoAccess}
    class DistributionLookupTable {
        constructor();
        constructor(TimeScale: number, TimeBias: number, Values: TArray<number>, Op: number, EntryCount: number, EntryStride: number, SubEntryStride: number, LockFlag: number);
        TimeScale: number;
        TimeBias: number;
        Values: TArray<number>;
        Op: number;
        EntryCount: number;
        EntryStride: number;
        SubEntryStride: number;
        LockFlag: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DistributionLookupTable_0__: boolean;
    }
    
    class RawDistribution {
        constructor();
        constructor(Table: UE.DistributionLookupTable);
        Table: UE.DistributionLookupTable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RawDistribution_0__: boolean;
    }
    
    class Distribution extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Distribution;
        static Load(InName: string): Distribution;
    
        __tid_Distribution_0__: boolean;
    }
    
    class DistributionFloat extends UE.Distribution {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCanBeBaked: boolean;
        bBakedDataSuccesfully: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionFloat;
        static Load(InName: string): DistributionFloat;
    
        __tid_DistributionFloat_0__: boolean;
    }
    
    class RawDistributionFloat extends UE.RawDistribution {
        constructor();
        constructor(MinValue: number, MaxValue: number, Distribution: UE.DistributionFloat);
        MinValue: number;
        MaxValue: number;
        Distribution: UE.DistributionFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RawDistributionFloat_0__: boolean;
    }
    
    class ParticleBurst {
        constructor();
        constructor(Count: number, CountLow: number, Time: number);
        Count: number;
        CountLow: number;
        Time: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleBurst_0__: boolean;
    }
    
    enum EParticleSubUVInterpMethod { PSUVIM_None, PSUVIM_Linear, PSUVIM_Linear_Blend, PSUVIM_Random, PSUVIM_Random_Blend, PSUVIM_MAX, __typeKeyDoNoAccess}
    enum EParticleBurstMethod { EPBM_Instant, EPBM_Interpolated, EPBM_MAX, __typeKeyDoNoAccess}
    enum EOpacitySourceMode { OSM_Alpha, OSM_ColorBrightness, OSM_RedChannel, OSM_GreenChannel, OSM_BlueChannel, OSM_MAX, __typeKeyDoNoAccess}
    enum EEmitterNormalsMode { ENM_CameraFacing, ENM_Spherical, ENM_Cylindrical, ENM_MAX, __typeKeyDoNoAccess}
    enum EParticleUVFlipMode { None, FlipUV, FlipUOnly, FlipVOnly, RandomFlipUV, RandomFlipUOnly, RandomFlipVOnly, RandomFlipUVIndependent, EParticleUVFlipMode_MAX, __typeKeyDoNoAccess}
    enum ESubUVBoundingVertexCount { BVC_FourVertices, BVC_EightVertices, BVC_MAX, __typeKeyDoNoAccess}
    class ParticleModuleRequired extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Material: UE.MaterialInterface;
        MinFacingCameraBlendDistance: number;
        MaxFacingCameraBlendDistance: number;
        EmitterOrigin: UE.Vector;
        EmitterRotation: UE.Rotator;
        ScreenAlignment: UE.EParticleScreenAlignment;
        bUseLocalSpace: boolean;
        bKillOnDeactivate: boolean;
        bKillOnCompleted: boolean;
        SortMode: UE.EParticleSortMode;
        bUseLegacyEmitterTime: boolean;
        bRemoveHMDRoll: boolean;
        bEmitterDurationUseRange: boolean;
        EmitterDuration: number;
        SpawnRate: UE.RawDistributionFloat;
        BurstList: TArray<UE.ParticleBurst>;
        EmitterDelay: number;
        EmitterDelayLow: number;
        bDelayFirstLoopOnly: boolean;
        InterpolationMethod: UE.EParticleSubUVInterpMethod;
        bScaleUV: boolean;
        bEmitterDelayUseRange: boolean;
        ParticleBurstMethod: UE.EParticleBurstMethod;
        bOverrideSystemMacroUV: boolean;
        bUseMaxDrawCount: boolean;
        OpacitySourceMode: UE.EOpacitySourceMode;
        EmitterNormalsMode: UE.EEmitterNormalsMode;
        bOrbitModuleAffectsVelocityAlignment: boolean;
        SubImages_Horizontal: number;
        SubImages_Vertical: number;
        RandomImageTime: number;
        RandomImageChanges: number;
        MacroUVPosition: UE.Vector;
        MacroUVRadius: number;
        UVFlippingMode: UE.EParticleUVFlipMode;
        BoundingMode: UE.ESubUVBoundingVertexCount;
        bDurationRecalcEachLoop: boolean;
        NormalsSphereCenter: UE.Vector;
        AlphaThreshold: number;
        EmitterLoops: number;
        CutoutTexture: UE.Texture2D;
        MaxDrawCount: number;
        EmitterDurationLow: number;
        NormalsCylinderDirection: UE.Vector;
        NamedMaterialOverrides: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRequired;
        static Load(InName: string): ParticleModuleRequired;
    
        __tid_ParticleModuleRequired_0__: boolean;
    }
    
    class ParticleModuleTypeDataBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTypeDataBase;
        static Load(InName: string): ParticleModuleTypeDataBase;
    
        __tid_ParticleModuleTypeDataBase_0__: boolean;
    }
    
    class ParticleModuleSpawnBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bProcessSpawnRate: boolean;
        bProcessBurstList: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSpawnBase;
        static Load(InName: string): ParticleModuleSpawnBase;
    
        __tid_ParticleModuleSpawnBase_0__: boolean;
    }
    
    class ParticleModuleSpawn extends UE.ParticleModuleSpawnBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Rate: UE.RawDistributionFloat;
        RateScale: UE.RawDistributionFloat;
        ParticleBurstMethod: UE.EParticleBurstMethod;
        BurstList: TArray<UE.ParticleBurst>;
        BurstScale: UE.RawDistributionFloat;
        bApplyGlobalSpawnRateScale: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSpawn;
        static Load(InName: string): ParticleModuleSpawn;
    
        __tid_ParticleModuleSpawn_0__: boolean;
    }
    
    class ParticleModuleEventBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleEventBase;
        static Load(InName: string): ParticleModuleEventBase;
    
        __tid_ParticleModuleEventBase_0__: boolean;
    }
    
    enum EParticleEventType { EPET_Any, EPET_Spawn, EPET_Death, EPET_Collision, EPET_Burst, EPET_Blueprint, EPET_MAX, __typeKeyDoNoAccess}
    class ParticleModuleEventSendToGame extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleEventSendToGame;
        static Load(InName: string): ParticleModuleEventSendToGame;
    
        __tid_ParticleModuleEventSendToGame_0__: boolean;
    }
    
    class ParticleEvent_GenerateInfo {
        constructor();
        constructor(Type: UE.EParticleEventType, Frequency: number, ParticleFrequency: number, FirstTimeOnly: boolean, LastTimeOnly: boolean, UseReflectedImpactVector: boolean, bUseOrbitOffset: boolean, CustomName: string, ParticleModuleEventsToSendToGame: TArray<UE.ParticleModuleEventSendToGame>);
        Type: UE.EParticleEventType;
        Frequency: number;
        ParticleFrequency: number;
        FirstTimeOnly: boolean;
        LastTimeOnly: boolean;
        UseReflectedImpactVector: boolean;
        bUseOrbitOffset: boolean;
        CustomName: string;
        ParticleModuleEventsToSendToGame: TArray<UE.ParticleModuleEventSendToGame>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleEvent_GenerateInfo_0__: boolean;
    }
    
    class ParticleModuleEventGenerator extends UE.ParticleModuleEventBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Events: TArray<UE.ParticleEvent_GenerateInfo>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleEventGenerator;
        static Load(InName: string): ParticleModuleEventGenerator;
    
        __tid_ParticleModuleEventGenerator_0__: boolean;
    }
    
    class ParticleModuleOrbitBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseEmitterTime: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleOrbitBase;
        static Load(InName: string): ParticleModuleOrbitBase;
    
        __tid_ParticleModuleOrbitBase_0__: boolean;
    }
    
    enum EOrbitChainMode { EOChainMode_Add, EOChainMode_Scale, EOChainMode_Link, EOChainMode_MAX, __typeKeyDoNoAccess}
    class DistributionVector extends UE.Distribution {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCanBeBaked: boolean;
        bIsDirty: boolean;
        bBakedDataSuccesfully: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionVector;
        static Load(InName: string): DistributionVector;
    
        __tid_DistributionVector_0__: boolean;
    }
    
    class RawDistributionVector extends UE.RawDistribution {
        constructor();
        constructor(MinValue: number, MaxValue: number, MinValueVec: UE.Vector, MaxValueVec: UE.Vector, Distribution: UE.DistributionVector);
        MinValue: number;
        MaxValue: number;
        MinValueVec: UE.Vector;
        MaxValueVec: UE.Vector;
        Distribution: UE.DistributionVector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RawDistributionVector_0__: boolean;
    }
    
    class OrbitOptions {
        constructor();
        constructor(bProcessDuringSpawn: boolean, bProcessDuringUpdate: boolean, bUseEmitterTime: boolean);
        bProcessDuringSpawn: boolean;
        bProcessDuringUpdate: boolean;
        bUseEmitterTime: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OrbitOptions_0__: boolean;
    }
    
    class ParticleModuleOrbit extends UE.ParticleModuleOrbitBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChainMode: UE.EOrbitChainMode;
        OffsetAmount: UE.RawDistributionVector;
        OffsetOptions: UE.OrbitOptions;
        RotationAmount: UE.RawDistributionVector;
        RotationOptions: UE.OrbitOptions;
        RotationRateAmount: UE.RawDistributionVector;
        RotationRateOptions: UE.OrbitOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleOrbit;
        static Load(InName: string): ParticleModuleOrbit;
    
        __tid_ParticleModuleOrbit_0__: boolean;
    }
    
    class ParticleModuleEventReceiverBase extends UE.ParticleModuleEventBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventGeneratorType: UE.EParticleEventType;
        EventName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleEventReceiverBase;
        static Load(InName: string): ParticleModuleEventReceiverBase;
    
        __tid_ParticleModuleEventReceiverBase_0__: boolean;
    }
    
    class ParticleLODLevel extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Level: number;
        bEnabled: boolean;
        RequiredModule: UE.ParticleModuleRequired;
        Modules: TArray<UE.ParticleModule>;
        TypeDataModule: UE.ParticleModuleTypeDataBase;
        SpawnModule: UE.ParticleModuleSpawn;
        EventGenerator: UE.ParticleModuleEventGenerator;
        SpawningModules: TArray<UE.ParticleModuleSpawnBase>;
        SpawnModules: TArray<UE.ParticleModule>;
        UpdateModules: TArray<UE.ParticleModule>;
        OrbitModules: TArray<UE.ParticleModuleOrbit>;
        EventReceiverModules: TArray<UE.ParticleModuleEventReceiverBase>;
        ConvertedModules: boolean;
        PeakActiveParticles: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleLODLevel;
        static Load(InName: string): ParticleLODLevel;
    
        __tid_ParticleLODLevel_0__: boolean;
    }
    
    class ParticleEmitter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterName: string;
        SubUVDataOffset: number;
        EmitterRenderMode: UE.EEmitterRenderMode;
        SignificanceLevel: UE.EParticleSignificanceLevel;
        bUseLegacySpawningBehavior: boolean;
        ConvertedModules: boolean;
        bIsSoloing: boolean;
        bCookedOut: boolean;
        bDisabledLODsKeepEmitterAlive: boolean;
        bDisableWhenInsignficant: boolean;
        bCollapsed: boolean;
        DetailMode: UE.EDetailMode;
        EmitterEditorColor: UE.Color;
        LODLevels: TArray<UE.ParticleLODLevel>;
        PeakActiveParticles: number;
        InitialAllocationCount: number;
        QualityLevelSpawnRateScale: number;
        DetailModeBitmask: number;
        DetailModeDisplay: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleEmitter;
        static Load(InName: string): ParticleEmitter;
    
        __tid_ParticleEmitter_0__: boolean;
    }
    
    class CurveEdEntry {
        constructor();
        constructor(CurveObject: UE.Object, CurveColor: UE.Color, CurveName: string, bHideCurve: number, bColorCurve: number, bFloatingPointColorCurve: number, bClamp: number, ClampLow: number, ClampHigh: number);
        CurveObject: UE.Object;
        CurveColor: UE.Color;
        CurveName: string;
        bHideCurve: number;
        bColorCurve: number;
        bFloatingPointColorCurve: number;
        bClamp: number;
        ClampLow: number;
        ClampHigh: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CurveEdEntry_0__: boolean;
    }
    
    class CurveEdTab {
        constructor();
        constructor(TabName: string, Curves: TArray<UE.CurveEdEntry>, ViewStartInput: number, ViewEndInput: number, ViewStartOutput: number, ViewEndOutput: number);
        TabName: string;
        Curves: TArray<UE.CurveEdEntry>;
        ViewStartInput: number;
        ViewEndInput: number;
        ViewStartOutput: number;
        ViewEndOutput: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CurveEdTab_0__: boolean;
    }
    
    class InterpCurveEdSetup extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Tabs: TArray<UE.CurveEdTab>;
        ActiveTab: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpCurveEdSetup;
        static Load(InName: string): InterpCurveEdSetup;
    
        __tid_InterpCurveEdSetup_0__: boolean;
    }
    
    class ParticleSystemLOD {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleSystemLOD_0__: boolean;
    }
    
    enum EParticleSystemUpdateMode { EPSUM_RealTime, EPSUM_FixedTime, EPSUM_MAX, __typeKeyDoNoAccess}
    enum ParticleSystemLODMethod { PARTICLESYSTEMLODMETHOD_Automatic, PARTICLESYSTEMLODMETHOD_DirectSet, PARTICLESYSTEMLODMETHOD_ActivateAutomatic, PARTICLESYSTEMLODMETHOD_MAX, __typeKeyDoNoAccess}
    enum EParticleSystemInsignificanceReaction { Auto, Complete, DisableTick, DisableTickAndKill, Num, EParticleSystemInsignificanceReaction_MAX, __typeKeyDoNoAccess}
    enum EParticleSystemOcclusionBoundsMethod { EPSOBM_None, EPSOBM_ParticleBounds, EPSOBM_CustomBounds, EPSOBM_MAX, __typeKeyDoNoAccess}
    class LODSoloTrack {
        constructor();
        constructor(SoloEnableSetting: TArray<number>);
        SoloEnableSetting: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LODSoloTrack_0__: boolean;
    }
    
    class NamedEmitterMaterial {
        constructor();
        constructor(Name: string, Material: UE.MaterialInterface);
        Name: string;
        Material: UE.MaterialInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedEmitterMaterial_0__: boolean;
    }
    
    class ParticleSystem extends UE.FXSystemAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UpdateTime_FPS: number;
        UpdateTime_Delta: number;
        WarmupTime: number;
        WarmupTickRate: number;
        Emitters: TArray<UE.ParticleEmitter>;
        PreviewComponent: UE.ParticleSystemComponent;
        ThumbnailAngle: UE.Rotator;
        ThumbnailDistance: number;
        ThumbnailWarmup: number;
        CurveEdSetup: UE.InterpCurveEdSetup;
        LODDistanceCheckTime: number;
        MacroUVRadius: number;
        LODDistances: TArray<number>;
        EditorLODSetting: number;
        LODSettings: TArray<UE.ParticleSystemLOD>;
        FixedRelativeBoundingBox: UE.Box;
        SecondsBeforeInactive: number;
        FloorMesh: string;
        FloorPosition: UE.Vector;
        FloorRotation: UE.Rotator;
        FloorScale: number;
        FloorScale3D: UE.Vector;
        BackgroundColor: UE.Color;
        Delay: number;
        DelayLow: number;
        bOrientZAxisTowardCamera: boolean;
        bUseFixedRelativeBoundingBox: boolean;
        bShouldResetPeakCounts: boolean;
        bHasPhysics: boolean;
        bUseRealtimeThumbnail: boolean;
        ThumbnailImageOutOfDate: boolean;
        ThumbnailImage: UE.Texture2D;
        bUseDelayRange: boolean;
        bAllowManagedTicking: boolean;
        bAutoDeactivate: boolean;
        bRegenerateLODDuplicate: boolean;
        SystemUpdateMode: UE.EParticleSystemUpdateMode;
        LODMethod: UE.ParticleSystemLODMethod;
        InsignificantReaction: UE.EParticleSystemInsignificanceReaction;
        OcclusionBoundsMethod: UE.EParticleSystemOcclusionBoundsMethod;
        MaxSignificanceLevel: UE.EParticleSignificanceLevel;
        MinTimeBetweenTicks: number;
        InsignificanceDelay: number;
        MacroUVPosition: UE.Vector;
        CustomOcclusionBounds: UE.Box;
        SoloTracking: TArray<UE.LODSoloTrack>;
        NamedMaterialSlots: TArray<UE.NamedEmitterMaterial>;
        ContainsEmitterType(TypeData: $Nullable<UE.Class>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleSystem;
        static Load(InName: string): ParticleSystem;
    
        __tid_ParticleSystem_0__: boolean;
    }
    
    enum EParticleSysParamType { PSPT_None, PSPT_Scalar, PSPT_ScalarRand, PSPT_Vector, PSPT_VectorRand, PSPT_Color, PSPT_Actor, PSPT_Material, PSPT_VectorUnitRand, PSPT_MAX, __typeKeyDoNoAccess}
    class ParticleSysParam {
        constructor();
        constructor(Name: string, ParamType: UE.EParticleSysParamType, Scalar: number, Scalar_Low: number, Vector: UE.Vector, Vector_Low: UE.Vector, Color: UE.Color, Actor: UE.Actor, Material: UE.MaterialInterface);
        Name: string;
        ParamType: UE.EParticleSysParamType;
        Scalar: number;
        Scalar_Low: number;
        Vector: UE.Vector;
        Vector_Low: UE.Vector;
        Color: UE.Color;
        Actor: UE.Actor;
        Material: UE.MaterialInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleSysParam_0__: boolean;
    }
    
    class ParticleSystemReplay extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClipIDNumber: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleSystemReplay;
        static Load(InName: string): ParticleSystemReplay;
    
        __tid_ParticleSystemReplay_0__: boolean;
    }
    
    enum EAttachLocation { KeepRelativeOffset, KeepWorldPosition, SnapToTarget, SnapToTargetIncludingScale, EAttachLocation_MAX, __typeKeyDoNoAccess}
    enum ETrailWidthMode { ETrailWidthMode_FromCentre, ETrailWidthMode_FromFirst, ETrailWidthMode_FromSecond, ETrailWidthMode_MAX, __typeKeyDoNoAccess}
    class ParticleSystemComponent extends UE.FXSystemComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Template: UE.ParticleSystem;
        EmitterMaterials: TArray<UE.MaterialInterface>;
        SkelMeshComponents: TArray<UE.SkeletalMeshComponent>;
        bResetOnDetach: boolean;
        bUpdateOnDedicatedServer: boolean;
        bAllowRecycling: boolean;
        bAutoManageAttachment: boolean;
        bAutoAttachWeldSimulatedBodies: boolean;
        bWarmingUp: boolean;
        bOverrideLODMethod: boolean;
        bSkipUpdateDynamicDataDuringTick: boolean;
        LODMethod: UE.ParticleSystemLODMethod;
        RequiredSignificance: UE.EParticleSignificanceLevel;
        InstanceParameters: TArray<UE.ParticleSysParam>;
        OnParticleSpawn: $MulticastDelegate<(EventName: string, EmitterTime: number, Location: UE.Vector, Velocity: UE.Vector) => void>;
        OnParticleBurst: $MulticastDelegate<(EventName: string, EmitterTime: number, ParticleCount: number) => void>;
        OnParticleDeath: $MulticastDelegate<(EventName: string, EmitterTime: number, ParticleTime: number, Location: UE.Vector, Velocity: UE.Vector, Direction: UE.Vector) => void>;
        OnParticleCollide: $MulticastDelegate<(EventName: string, EmitterTime: number, ParticleTime: number, Location: UE.Vector, Velocity: UE.Vector, Direction: UE.Vector, Normal: UE.Vector, BoneName: string, PhysMat: $Nullable<UE.PhysicalMaterial>) => void>;
        bOldPositionValid: boolean;
        OldPosition: UE.Vector;
        PartSysVelocity: UE.Vector;
        WarmupTime: number;
        WarmupTickRate: number;
        SecondsBeforeInactive: number;
        MaxTimeBeforeForceUpdateTransform: number;
        EditorLODLevel: number;
        EditorDetailMode: number;
        ReplayClips: TArray<UE.ParticleSystemReplay>;
        CustomTimeDilation: number;
        AutoAttachParent: TWeakObjectPtr<UE.SceneComponent>;
        AutoAttachSocketName: string;
        AutoAttachLocationType: UE.EAttachLocation;
        AutoAttachLocationRule: UE.EAttachmentRule;
        AutoAttachRotationRule: UE.EAttachmentRule;
        AutoAttachScaleRule: UE.EAttachmentRule;
        OnSystemFinished: $MulticastDelegate<(PSystem: $Nullable<UE.ParticleSystemComponent>) => void>;
        BeginTrails(InFirstSocketName: string, InSecondSocketName: string, InWidthMode: UE.ETrailWidthMode, InWidth: number) : void;
        CreateNamedDynamicMaterialInstance(InName: string, SourceMaterial?: UE.MaterialInterface /* = None */) : UE.MaterialInstanceDynamic;
        EndTrails() : void;
        GenerateParticleEvent(InEventName: string, InEmitterTime: number, InLocation: UE.Vector, InDirection: UE.Vector, InVelocity: UE.Vector) : void;
        GetBeamEndPoint(EmitterIndex: number, OutEndPoint: $Ref<UE.Vector>) : boolean;
        GetBeamSourcePoint(EmitterIndex: number, SourceIndex: number, OutSourcePoint: $Ref<UE.Vector>) : boolean;
        GetBeamSourceStrength(EmitterIndex: number, SourceIndex: number, OutSourceStrength: $Ref<number>) : boolean;
        GetBeamSourceTangent(EmitterIndex: number, SourceIndex: number, OutTangentPoint: $Ref<UE.Vector>) : boolean;
        GetBeamTargetPoint(EmitterIndex: number, TargetIndex: number, OutTargetPoint: $Ref<UE.Vector>) : boolean;
        GetBeamTargetStrength(EmitterIndex: number, TargetIndex: number, OutTargetStrength: $Ref<number>) : boolean;
        GetBeamTargetTangent(EmitterIndex: number, TargetIndex: number, OutTangentPoint: $Ref<UE.Vector>) : boolean;
        GetNamedMaterial(InName: string) : UE.MaterialInterface;
        GetNumActiveParticles() : number;
        SetAutoAttachParams(Parent: $Nullable<UE.SceneComponent>, SocketName?: string /* = "None" */, LocationType?: UE.EAttachLocation /* = KeepRelativeOffset */) : void;
        SetBeamEndPoint(EmitterIndex: number, NewEndPoint: UE.Vector) : void;
        SetBeamSourcePoint(EmitterIndex: number, NewSourcePoint: UE.Vector, SourceIndex: number) : void;
        SetBeamSourceStrength(EmitterIndex: number, NewSourceStrength: number, SourceIndex: number) : void;
        SetBeamSourceTangent(EmitterIndex: number, NewTangentPoint: UE.Vector, SourceIndex: number) : void;
        SetBeamTargetPoint(EmitterIndex: number, NewTargetPoint: UE.Vector, TargetIndex: number) : void;
        SetBeamTargetStrength(EmitterIndex: number, NewTargetStrength: number, TargetIndex: number) : void;
        SetBeamTargetTangent(EmitterIndex: number, NewTangentPoint: UE.Vector, TargetIndex: number) : void;
        SetMaterialParameter(ParameterName: string, Param: $Nullable<UE.MaterialInterface>) : void;
        SetTemplate(NewTemplate: $Nullable<UE.ParticleSystem>) : void;
        SetTrailSourceData(InFirstSocketName: string, InSecondSocketName: string, InWidthMode: UE.ETrailWidthMode, InWidth: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleSystemComponent;
        static Load(InName: string): ParticleSystemComponent;
    
        __tid_ParticleSystemComponent_0__: boolean;
    }
    
    class Emitter extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParticleSystemComponent: UE.ParticleSystemComponent;
        bDestroyOnSystemFinish: boolean;
        bPostUpdateTickGroup: boolean;
        bCurrentlyActive: boolean;
        OnParticleSpawn: $MulticastDelegate<(EventName: string, EmitterTime: number, Location: UE.Vector, Velocity: UE.Vector) => void>;
        OnParticleBurst: $MulticastDelegate<(EventName: string, EmitterTime: number, ParticleCount: number) => void>;
        OnParticleDeath: $MulticastDelegate<(EventName: string, EmitterTime: number, ParticleTime: number, Location: UE.Vector, Velocity: UE.Vector, Direction: UE.Vector) => void>;
        OnParticleCollide: $MulticastDelegate<(EventName: string, EmitterTime: number, ParticleTime: number, Location: UE.Vector, Velocity: UE.Vector, Direction: UE.Vector, Normal: UE.Vector, BoneName: string, PhysMat: $Nullable<UE.PhysicalMaterial>) => void>;
        SpriteComponent: UE.BillboardComponent;
        ArrowComponent: UE.ArrowComponent;
        Activate() : void;
        Deactivate() : void;
        IsActive() : boolean;
        OnParticleSystemFinished(FinishedComponent: $Nullable<UE.ParticleSystemComponent>) : void;
        OnRep_bCurrentlyActive() : void;
        SetActorParameter(ParameterName: string, Param: $Nullable<UE.Actor>) : void;
        SetColorParameter(ParameterName: string, Param: UE.LinearColor) : void;
        SetFloatParameter(ParameterName: string, Param: number) : void;
        SetMaterialParameter(ParameterName: string, Param: $Nullable<UE.MaterialInterface>) : void;
        SetTemplate(NewTemplate: $Nullable<UE.ParticleSystem>) : void;
        SetVectorParameter(ParameterName: string, Param: UE.Vector) : void;
        ToggleActive() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Emitter;
        static Load(InName: string): Emitter;
    
        __tid_Emitter_0__: boolean;
    }
    
    class EmitterCameraLensEffectBase extends UE.Emitter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PS_CameraEffect: UE.ParticleSystem;
        PS_CameraEffectNonExtremeContent: UE.ParticleSystem;
        BaseCamera: UE.PlayerCameraManager;
        RelativeTransform: UE.Transform;
        BaseFOV: number;
        bAllowMultipleInstances: boolean;
        bResetWhenRetriggered: boolean;
        EmittersToTreatAsSame: TArray<UE.Class>;
        DistFromCamera: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EmitterCameraLensEffectBase;
        static Load(InName: string): EmitterCameraLensEffectBase;
    
        __tid_EmitterCameraLensEffectBase_0__: boolean;
    }
    
    class CameraShakeBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSingleInstance: boolean;
        ShakeScale: number;
        CameraManager: UE.PlayerCameraManager;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraShakeBase;
        static Load(InName: string): CameraShakeBase;
    
        __tid_CameraShakeBase_0__: boolean;
    }
    
    enum ECameraShakeAttenuation { Linear, Quadratic, ECameraShakeAttenuation_MAX, __typeKeyDoNoAccess}
    enum ECameraShakePlaySpace { CameraLocal, World, UserDefined, ECameraShakePlaySpace_MAX, __typeKeyDoNoAccess}
    class CameraShakeSourceComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Attenuation: UE.ECameraShakeAttenuation;
        InnerAttenuationRadius: number;
        OuterAttenuationRadius: number;
        CameraShake: UE.Class;
        bAutoStart: boolean;
        EditorSpriteTexture: UE.Texture2D;
        EditorSpriteTextureScale: number;
        GetAttenuationFactor(Location: UE.Vector) : number;
        Start() : void;
        StartCameraShake(InCameraShake: $Nullable<UE.Class>, Scale?: number /* = 1.000000 */, PlaySpace?: UE.ECameraShakePlaySpace /* = CameraLocal */, UserPlaySpaceRot?: UE.Rotator /* =  */) : void;
        StopAllCameraShakes(bImmediately?: boolean /* = true */) : void;
        StopAllCameraShakesOfType(InCameraShake: $Nullable<UE.Class>, bImmediately?: boolean /* = true */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraShakeSourceComponent;
        static Load(InName: string): CameraShakeSourceComponent;
    
        __tid_CameraShakeSourceComponent_0__: boolean;
    }
    
    class ActiveCameraShakeInfo {
        constructor();
        constructor(ShakeInstance: UE.CameraShakeBase, ShakeSource: TWeakObjectPtr<UE.CameraShakeSourceComponent>);
        ShakeInstance: UE.CameraShakeBase;
        ShakeSource: TWeakObjectPtr<UE.CameraShakeSourceComponent>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActiveCameraShakeInfo_0__: boolean;
    }
    
    class PooledCameraShakes {
        constructor();
        constructor(PooledShakes: TArray<UE.CameraShakeBase>);
        PooledShakes: TArray<UE.CameraShakeBase>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PooledCameraShakes_0__: boolean;
    }
    
    class CameraModifier_CameraShake extends UE.CameraModifier {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActiveShakes: TArray<UE.ActiveCameraShakeInfo>;
        ExpiredPooledShakesMap: TMap<UE.Class, UE.PooledCameraShakes>;
        SplitScreenShakeScale: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraModifier_CameraShake;
        static Load(InName: string): CameraModifier_CameraShake;
    
        __tid_CameraModifier_CameraShake_0__: boolean;
    }
    
    class SubTrackGroup {
        constructor();
        constructor(GroupName: string, TrackIndices: TArray<number>, bIsCollapsed: boolean, bIsSelected: boolean);
        GroupName: string;
        TrackIndices: TArray<number>;
        bIsCollapsed: boolean;
        bIsSelected: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubTrackGroup_0__: boolean;
    }
    
    class SupportedSubTrackInfo {
        constructor();
        constructor(SupportedClass: UE.Class, SubTrackName: string, GroupIndex: number);
        SupportedClass: UE.Class;
        SubTrackName: string;
        GroupIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SupportedSubTrackInfo_0__: boolean;
    }
    
    enum ETrackActiveCondition { ETAC_Always, ETAC_GoreEnabled, ETAC_GoreDisabled, ETAC_MAX, __typeKeyDoNoAccess}
    class InterpTrack extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SubTracks: TArray<UE.InterpTrack>;
        SubTrackGroups: TArray<UE.SubTrackGroup>;
        SupportedSubTracks: TArray<UE.SupportedSubTrackInfo>;
        TrackInstClass: UE.Class;
        ActiveCondition: UE.ETrackActiveCondition;
        TrackTitle: string;
        bOnePerGroup: boolean;
        bDirGroupOnly: boolean;
        bDisableTrack: boolean;
        bIsSelected: boolean;
        TrackIcon: UE.Texture2D;
        bIsAnimControlTrack: boolean;
        bSubTrackOnly: boolean;
        bVisible: boolean;
        bIsRecording: boolean;
        bIsCollapsed: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrack;
        static Load(InName: string): InterpTrack;
    
        __tid_InterpTrack_0__: boolean;
    }
    
    class InterpGroup extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InterpTracks: TArray<UE.InterpTrack>;
        GroupName: string;
        GroupColor: UE.Color;
        bCollapsed: boolean;
        bVisible: boolean;
        bIsFolder: boolean;
        bIsParented: boolean;
        bIsSelected: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpGroup;
        static Load(InName: string): InterpGroup;
    
        __tid_InterpGroup_0__: boolean;
    }
    
    class CameraAnim extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraInterpGroup: UE.InterpGroup;
        PreviewInterpGroup: UE.InterpGroup;
        AnimLength: number;
        BoundingBox: UE.Box;
        bRelativeToInitialTransform: boolean;
        bRelativeToInitialFOV: boolean;
        BaseFOV: number;
        BasePostProcessSettings: UE.PostProcessSettings;
        BasePostProcessBlendWeight: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraAnim;
        static Load(InName: string): CameraAnim;
    
        __tid_CameraAnim_0__: boolean;
    }
    
    class InterpGroupInst extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Group: UE.InterpGroup;
        GroupActor: UE.Actor;
        TrackInst: TArray<UE.InterpTrackInst>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpGroupInst;
        static Load(InName: string): InterpGroupInst;
    
        __tid_InterpGroupInst_0__: boolean;
    }
    
    enum EInterpCurveMode { CIM_Linear, CIM_CurveAuto, CIM_Constant, CIM_CurveUser, CIM_CurveBreak, CIM_CurveAutoClamped, CIM_MAX, __typeKeyDoNoAccess}
    class InterpCurvePointVector {
        constructor();
        constructor(InVal: number, OutVal: UE.Vector, ArriveTangent: UE.Vector, LeaveTangent: UE.Vector, InterpMode: UE.EInterpCurveMode);
        InVal: number;
        OutVal: UE.Vector;
        ArriveTangent: UE.Vector;
        LeaveTangent: UE.Vector;
        InterpMode: UE.EInterpCurveMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurvePointVector_0__: boolean;
    }
    
    class InterpCurveVector {
        constructor();
        constructor(Points: TArray<UE.InterpCurvePointVector>, bIsLooped: boolean, LoopKeyOffset: number);
        Points: TArray<UE.InterpCurvePointVector>;
        bIsLooped: boolean;
        LoopKeyOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurveVector_0__: boolean;
    }
    
    class InterpLookupPoint {
        constructor();
        constructor(GroupName: string, Time: number);
        GroupName: string;
        Time: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpLookupPoint_0__: boolean;
    }
    
    class InterpLookupTrack {
        constructor();
        constructor(Points: TArray<UE.InterpLookupPoint>);
        Points: TArray<UE.InterpLookupPoint>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpLookupTrack_0__: boolean;
    }
    
    enum EInterpTrackMoveRotMode { IMR_Keyframed, IMR_LookAtGroup, IMR_Ignore, IMR_MAX, __typeKeyDoNoAccess}
    class InterpTrackMove extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PosTrack: UE.InterpCurveVector;
        EulerTrack: UE.InterpCurveVector;
        LookupTrack: UE.InterpLookupTrack;
        LookAtGroupName: string;
        LinCurveTension: number;
        AngCurveTension: number;
        bUseQuatInterpolation: boolean;
        bShowArrowAtKeys: boolean;
        bDisableMovement: boolean;
        bShowTranslationOnCurveEd: boolean;
        bShowRotationOnCurveEd: boolean;
        bHide3DTrack: boolean;
        RotMode: UE.EInterpTrackMoveRotMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackMove;
        static Load(InName: string): InterpTrackMove;
    
        __tid_InterpTrackMove_0__: boolean;
    }
    
    class InterpTrackInstMove extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResetLocation: UE.Vector;
        ResetRotation: UE.Rotator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstMove;
        static Load(InName: string): InterpTrackInstMove;
    
        __tid_InterpTrackInstMove_0__: boolean;
    }
    
    class CameraAnimInst extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CamAnim: UE.CameraAnim;
        InterpGroupInst: UE.InterpGroupInst;
        PlayRate: number;
        MoveTrack: UE.InterpTrackMove;
        MoveInst: UE.InterpTrackInstMove;
        PlaySpace: UE.ECameraShakePlaySpace;
        SetDuration(NewDuration: number) : void;
        SetScale(NewDuration: number) : void;
        Stop(bImmediate?: boolean /* = false */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraAnimInst;
        static Load(InName: string): CameraAnimInst;
    
        __tid_CameraAnimInst_0__: boolean;
    }
    
    class Interface extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Interface;
        static Load(InName: string): Interface;
    
        __tid_Interface_0__: boolean;
    }
    
    class BlendableInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendableInterface;
        static Load(InName: string): BlendableInterface;
    
        __tid_BlendableInterface_0__: boolean;
    }
    
    class CameraComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FieldOfView: number;
        OrthoWidth: number;
        OrthoNearClipPlane: number;
        OrthoFarClipPlane: number;
        AspectRatio: number;
        bConstrainAspectRatio: boolean;
        bUseFieldOfViewForLOD: boolean;
        bCameraMeshHiddenInGame: boolean;
        bLockToHmd: boolean;
        bUsePawnControlRotation: boolean;
        ProjectionMode: UE.ECameraProjectionMode;
        CameraMesh: UE.StaticMesh;
        PostProcessBlendWeight: number;
        PostProcessSettings: UE.PostProcessSettings;
        bUseControllerViewRotation: boolean;
        AddOrUpdateBlendable(InBlendableObject: BlendableInterface, InWeight?: number /* = 1.000000 */) : void;
        GetCameraView(DeltaTime: number, DesiredView: $Ref<UE.MinimalViewInfo>) : void;
        GetFilmbackText() : string;
        OnCameraMeshHiddenChanged() : void;
        RemoveBlendable(InBlendableObject: BlendableInterface) : void;
        SetAspectRatio(InAspectRatio: number) : void;
        SetConstraintAspectRatio(bInConstrainAspectRatio: boolean) : void;
        SetFieldOfView(InFieldOfView: number) : void;
        SetOrthoFarClipPlane(InOrthoFarClipPlane: number) : void;
        SetOrthoNearClipPlane(InOrthoNearClipPlane: number) : void;
        SetOrthoWidth(InOrthoWidth: number) : void;
        SetPostProcessBlendWeight(InPostProcessBlendWeight: number) : void;
        SetProjectionMode(InProjectionMode: UE.ECameraProjectionMode) : void;
        SetUseFieldOfViewForLOD(bInUseFieldOfViewForLOD: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraComponent;
        static Load(InName: string): CameraComponent;
    
        __tid_CameraComponent_0__: boolean;
    }
    
    class CameraActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AutoActivateForPlayer: UE.EAutoReceiveInput;
        CameraComponent: UE.CameraComponent;
        SceneComponent: UE.SceneComponent;
        bConstrainAspectRatio: boolean;
        AspectRatio: number;
        FOVAngle: number;
        PostProcessBlendWeight: number;
        PostProcessSettings: UE.PostProcessSettings;
        GetAutoActivatePlayerIndex() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraActor;
        static Load(InName: string): CameraActor;
    
        __tid_CameraActor_0__: boolean;
    }
    
    enum EInitialOscillatorOffset { EOO_OffsetRandom, EOO_OffsetZero, EOO_MAX, __typeKeyDoNoAccess}
    enum EOscillatorWaveform { SineWave, PerlinNoise, EOscillatorWaveform_MAX, __typeKeyDoNoAccess}
    class FOscillator {
        constructor();
        constructor(Amplitude: number, Frequency: number, InitialOffset: UE.EInitialOscillatorOffset, Waveform: UE.EOscillatorWaveform);
        Amplitude: number;
        Frequency: number;
        InitialOffset: UE.EInitialOscillatorOffset;
        Waveform: UE.EOscillatorWaveform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FOscillator_0__: boolean;
    }
    
    class ROscillator {
        constructor();
        constructor(Pitch: UE.FOscillator, Yaw: UE.FOscillator, Roll: UE.FOscillator);
        Pitch: UE.FOscillator;
        Yaw: UE.FOscillator;
        Roll: UE.FOscillator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ROscillator_0__: boolean;
    }
    
    class VOscillator {
        constructor();
        constructor(X: UE.FOscillator, Y: UE.FOscillator, Z: UE.FOscillator);
        X: UE.FOscillator;
        Y: UE.FOscillator;
        Z: UE.FOscillator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VOscillator_0__: boolean;
    }
    
    class MatineeCameraShake extends UE.CameraShakeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OscillationDuration: number;
        OscillationBlendInTime: number;
        OscillationBlendOutTime: number;
        RotOscillation: UE.ROscillator;
        LocOscillation: UE.VOscillator;
        FOVOscillation: UE.FOscillator;
        AnimPlayRate: number;
        AnimScale: number;
        AnimBlendInTime: number;
        AnimBlendOutTime: number;
        RandomAnimSegmentDuration: number;
        Anim: UE.CameraAnim;
        bRandomAnimSegment: boolean;
        OscillatorTimeRemaining: number;
        AnimInst: UE.CameraAnimInst;
        BlueprintUpdateCameraShake(DeltaTime: number, Alpha: number, POV: UE.MinimalViewInfo, ModifiedPOV: $Ref<UE.MinimalViewInfo>) : void;
        ReceiveIsFinished() : boolean;
        ReceivePlayShake(Scale: number) : void;
        ReceiveStopShake(bImmediately: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MatineeCameraShake;
        static Load(InName: string): MatineeCameraShake;
    
        __tid_MatineeCameraShake_0__: boolean;
    }
    
    class PlayerCameraManager extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PCOwner: UE.PlayerController;
        TransformComponent: UE.SceneComponent;
        DefaultFOV: number;
        DefaultOrthoWidth: number;
        DefaultAspectRatio: number;
        CameraCache: UE.CameraCacheEntry;
        LastFrameCameraCache: UE.CameraCacheEntry;
        ViewTarget: UE.TViewTarget;
        PendingViewTarget: UE.TViewTarget;
        CameraCachePrivate: UE.CameraCacheEntry;
        LastFrameCameraCachePrivate: UE.CameraCacheEntry;
        ModifierList: TArray<UE.CameraModifier>;
        DefaultModifiers: TArray<UE.Class>;
        FreeCamDistance: number;
        FreeCamOffset: UE.Vector;
        ViewTargetOffset: UE.Vector;
        OnAudioFadeChangeEvent: $MulticastDelegate<(bFadeOut: boolean, FadeTime: number) => void>;
        CameraLensEffects: TArray<UE.EmitterCameraLensEffectBase>;
        CachedCameraShakeMod: UE.CameraModifier_CameraShake;
        AnimInstPool: FixSizeArray<UE.CameraAnimInst>;
        PostProcessBlendCache: TArray<UE.PostProcessSettings>;
        ActiveAnims: TArray<UE.CameraAnimInst>;
        FreeAnims: TArray<UE.CameraAnimInst>;
        AnimCameraActor: UE.CameraActor;
        bIsOrthographic: boolean;
        bDefaultConstrainAspectRatio: boolean;
        bClientSimulatingViewTarget: boolean;
        bUseClientSideCameraUpdates: boolean;
        bGameCameraCutThisFrame: boolean;
        ViewPitchMin: number;
        ViewPitchMax: number;
        ViewYawMin: number;
        ViewYawMax: number;
        ViewRollMin: number;
        ViewRollMax: number;
        ServerUpdateCameraTimeout: number;
        AddCameraLensEffect(LensEffectEmitterClass: $Nullable<UE.Class>) : UE.EmitterCameraLensEffectBase;
        AddNewCameraModifier(ModifierClass: $Nullable<UE.Class>) : UE.CameraModifier;
        BlueprintUpdateCamera(CameraTarget: $Nullable<UE.Actor>, NewCameraLocation: $Ref<UE.Vector>, NewCameraRotation: $Ref<UE.Rotator>, NewCameraFOV: $Ref<number>) : boolean;
        ClearCameraLensEffects() : void;
        FindCameraModifierByClass(ModifierClass: $Nullable<UE.Class>) : UE.CameraModifier;
        GetCameraLocation() : UE.Vector;
        GetCameraRotation() : UE.Rotator;
        GetFOVAngle() : number;
        GetOwningPlayerController() : UE.PlayerController;
        OnPhotographyMultiPartCaptureEnd() : void;
        OnPhotographyMultiPartCaptureStart() : void;
        OnPhotographySessionEnd() : void;
        OnPhotographySessionStart() : void;
        PhotographyCameraModify(NewCameraLocation: UE.Vector, PreviousCameraLocation: UE.Vector, OriginalCameraLocation: UE.Vector, ResultCameraLocation: $Ref<UE.Vector>) : void;
        PlayCameraAnim(Anim: $Nullable<UE.CameraAnim>, Rate?: number /* = 1.000000 */, Scale?: number /* = 1.000000 */, BlendInTime?: number /* = 0.000000 */, BlendOutTime?: number /* = 0.000000 */, bLoop?: boolean /* = false */, bRandomStartTime?: boolean /* = false */, Duration?: number /* = 0.000000 */, PlaySpace?: UE.ECameraShakePlaySpace /* = CameraLocal */, UserPlaySpaceRot?: UE.Rotator /* =  */) : UE.CameraAnimInst;
        RemoveCameraLensEffect(Emitter: $Nullable<UE.EmitterCameraLensEffectBase>) : void;
        RemoveCameraModifier(ModifierToRemove: $Nullable<UE.CameraModifier>) : boolean;
        SetGameCameraCutThisFrame() : void;
        SetManualCameraFade(InFadeAmount: number, Color: UE.LinearColor, bInFadeAudio: boolean) : void;
        StartCameraFade(FromAlpha: number, ToAlpha: number, Duration: number, Color: UE.LinearColor, bShouldFadeAudio?: boolean /* = false */, bHoldWhenFinished?: boolean /* = false */) : void;
        StartCameraShake(ShakeClass: $Nullable<UE.Class>, Scale?: number /* = 1.000000 */, PlaySpace?: UE.ECameraShakePlaySpace /* = CameraLocal */, UserPlaySpaceRot?: UE.Rotator /* =  */) : UE.CameraShakeBase;
        StartCameraShakeFromSource(ShakeClass: $Nullable<UE.Class>, SourceComponent: $Nullable<UE.CameraShakeSourceComponent>, Scale?: number /* = 1.000000 */, PlaySpace?: UE.ECameraShakePlaySpace /* = CameraLocal */, UserPlaySpaceRot?: UE.Rotator /* =  */) : UE.CameraShakeBase;
        StartMatineeCameraShake(ShakeClass: $Nullable<UE.Class>, Scale?: number /* = 1.000000 */, PlaySpace?: UE.ECameraShakePlaySpace /* = CameraLocal */, UserPlaySpaceRot?: UE.Rotator /* =  */) : UE.MatineeCameraShake;
        StartMatineeCameraShakeFromSource(ShakeClass: $Nullable<UE.Class>, SourceComponent: $Nullable<UE.CameraShakeSourceComponent>, Scale?: number /* = 1.000000 */, PlaySpace?: UE.ECameraShakePlaySpace /* = CameraLocal */, UserPlaySpaceRot?: UE.Rotator /* =  */) : UE.MatineeCameraShake;
        StopAllCameraAnims(bImmediate?: boolean /* = false */) : void;
        StopAllCameraShakes(bImmediately?: boolean /* = true */) : void;
        StopAllCameraShakesFromSource(SourceComponent: $Nullable<UE.CameraShakeSourceComponent>, bImmediately?: boolean /* = true */) : void;
        StopAllInstancesOfCameraAnim(Anim: $Nullable<UE.CameraAnim>, bImmediate?: boolean /* = false */) : void;
        StopAllInstancesOfCameraShake(Shake: $Nullable<UE.Class>, bImmediately?: boolean /* = true */) : void;
        StopAllInstancesOfCameraShakeFromSource(Shake: $Nullable<UE.Class>, SourceComponent: $Nullable<UE.CameraShakeSourceComponent>, bImmediately?: boolean /* = true */) : void;
        StopCameraAnimInst(AnimInst: $Nullable<UE.CameraAnimInst>, bImmediate?: boolean /* = false */) : void;
        StopCameraFade() : void;
        StopCameraShake(ShakeInstance: $Nullable<UE.CameraShakeBase>, bImmediately?: boolean /* = true */) : void;
        SwapPendingViewTargetWhenUsingClientSideCameraUpdates() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlayerCameraManager;
        static Load(InName: string): PlayerCameraManager;
    
        __tid_PlayerCameraManager_0__: boolean;
    }
    
    class DrawFrustumComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FrustumColor: UE.Color;
        FrustumAngle: number;
        FrustumAspectRatio: number;
        FrustumStartDist: number;
        FrustumEndDist: number;
        Texture: UE.Texture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DrawFrustumComponent;
        static Load(InName: string): DrawFrustumComponent;
    
        __tid_DrawFrustumComponent_0__: boolean;
    }
    
    class DebugCameraController extends UE.PlayerController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShowSelectedInfo: boolean;
        bIsFrozenRendering: boolean;
        bIsOrbitingSelectedActor: boolean;
        bOrbitPivotUseCenter: boolean;
        bEnableBufferVisualization: boolean;
        bEnableBufferVisualizationFullMode: boolean;
        bIsBufferVisualizationInputSetup: boolean;
        bLastDisplayEnabled: boolean;
        DrawFrustum: UE.DrawFrustumComponent;
        SelectedActor: UE.Actor;
        SelectedComponent: UE.PrimitiveComponent;
        SelectedHitPoint: UE.HitResult;
        OriginalControllerRef: UE.PlayerController;
        OriginalPlayer: UE.Player;
        SpeedScale: number;
        InitialMaxSpeed: number;
        InitialAccel: number;
        InitialDecel: number;
        GetSelectedActor() : UE.Actor;
        ReceiveOnActivate(OriginalPC: $Nullable<UE.PlayerController>) : void;
        ReceiveOnActorSelected(NewSelectedActor: $Nullable<UE.Actor>, SelectHitLocation: UE.Vector, SelectHitNormal: UE.Vector, Hit: UE.HitResult) : void;
        ReceiveOnDeactivate(RestoredPC: $Nullable<UE.PlayerController>) : void;
        SetPawnMovementSpeedScale(NewSpeedScale: number) : void;
        ShowDebugSelectedInfo() : void;
        ToggleDisplay() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DebugCameraController;
        static Load(InName: string): DebugCameraController;
    
        __tid_DebugCameraController_0__: boolean;
    }
    
    class CheatManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DebugCameraControllerRef: UE.DebugCameraController;
        DebugCameraControllerClass: UE.Class;
        BugIt(ScreenShotDescription?: string /* = "" */) : void;
        BugItGo(X: number, Y: number, Z: number, Pitch: number, Yaw: number, Roll: number) : void;
        BugItStringCreator(ViewLocation: UE.Vector, ViewRotation: UE.Rotator, GoString: $Ref<string>, LocString: $Ref<string>) : void;
        ChangeSize(F: number) : void;
        CheatScript(ScriptName: string) : void;
        DamageTarget(DamageAmount: number) : void;
        DebugCapsuleSweep() : void;
        DebugCapsuleSweepCapture() : void;
        DebugCapsuleSweepChannel(Channel: UE.ECollisionChannel) : void;
        DebugCapsuleSweepClear() : void;
        DebugCapsuleSweepComplex(bTraceComplex: boolean) : void;
        DebugCapsuleSweepPawn() : void;
        DebugCapsuleSweepSize(HalfHeight: number, Radius: number) : void;
        DestroyAll(aClass: $Nullable<UE.Class>) : void;
        DestroyAllPawnsExceptTarget() : void;
        DestroyPawns(aClass: $Nullable<UE.Class>) : void;
        DestroyServerStatReplicator() : void;
        DestroyTarget() : void;
        DisableDebugCamera() : void;
        DumpChatState() : void;
        DumpOnlineSessionState() : void;
        DumpPartyState() : void;
        DumpVoiceMutingState() : void;
        EnableDebugCamera() : void;
        FlushLog() : void;
        Fly() : void;
        FreezeFrame(Delay: number) : void;
        Ghost() : void;
        God() : void;
        InvertMouse() : void;
        LogLoc() : void;
        OnlyLoadLevel(PackageName: string) : void;
        PlayersOnly() : void;
        ReceiveEndPlay() : void;
        ReceiveInitCheatManager() : void;
        ServerToggleAILogging() : void;
        SetMouseSensitivityToDefault() : void;
        SetWorldOrigin() : void;
        Slomo(NewTimeDilation: number) : void;
        SpawnServerStatReplicator() : void;
        StreamLevelIn(PackageName: string) : void;
        StreamLevelOut(PackageName: string) : void;
        Summon(ClassName: string) : void;
        Teleport() : void;
        TestCollisionDistance() : void;
        ToggleAILogging() : void;
        ToggleDebugCamera() : void;
        ToggleServerStatReplicatorClientOverwrite() : void;
        ToggleServerStatReplicatorUpdateStatNet() : void;
        UpdateSafeArea() : void;
        ViewActor(ActorName: string) : void;
        ViewClass(DesiredClass: $Nullable<UE.Class>) : void;
        ViewPlayer(S: string) : void;
        ViewSelf() : void;
        Walk() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CheatManager;
        static Load(InName: string): CheatManager;
    
        __tid_CheatManager_0__: boolean;
    }
    
    class KeyBind {
        constructor();
        constructor(Key: UE.Key, Command: string, Control: boolean, Shift: boolean, Alt: boolean, Cmd: boolean, bIgnoreCtrl: boolean, bIgnoreShift: boolean, bIgnoreAlt: boolean, bIgnoreCmd: boolean, bDisabled: boolean);
        Key: UE.Key;
        Command: string;
        Control: boolean;
        Shift: boolean;
        Alt: boolean;
        Cmd: boolean;
        bIgnoreCtrl: boolean;
        bIgnoreShift: boolean;
        bIgnoreAlt: boolean;
        bIgnoreCmd: boolean;
        bDisabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KeyBind_0__: boolean;
    }
    
    class PlayerInput extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DebugExecBindings: TArray<UE.KeyBind>;
        InvertedAxis: TArray<string>;
        ClearSmoothing() : void;
        InvertAxis(AxisName: string) : void;
        InvertAxisKey(AxisKey: UE.Key) : void;
        SetBind(BindName: string, Command: string) : void;
        SetMouseSensitivity(Sensitivity: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlayerInput;
        static Load(InName: string): PlayerInput;
    
        __tid_PlayerInput_0__: boolean;
    }
    
    class RuntimeFloatCurve {
        constructor();
        constructor(EditorCurveData: UE.RichCurve, ExternalCurve: UE.CurveFloat);
        EditorCurveData: UE.RichCurve;
        ExternalCurve: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RuntimeFloatCurve_0__: boolean;
    }
    
    class ForceFeedbackChannelDetails {
        constructor();
        constructor(bAffectsLeftLarge: boolean, bAffectsLeftSmall: boolean, bAffectsRightLarge: boolean, bAffectsRightSmall: boolean, Curve: UE.RuntimeFloatCurve);
        bAffectsLeftLarge: boolean;
        bAffectsLeftSmall: boolean;
        bAffectsRightLarge: boolean;
        bAffectsRightSmall: boolean;
        Curve: UE.RuntimeFloatCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ForceFeedbackChannelDetails_0__: boolean;
    }
    
    class ForceFeedbackEffect extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChannelDetails: TArray<UE.ForceFeedbackChannelDetails>;
        Duration: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ForceFeedbackEffect;
        static Load(InName: string): ForceFeedbackEffect;
    
        __tid_ForceFeedbackEffect_0__: boolean;
    }
    
    class ActiveForceFeedbackEffect {
        constructor();
        constructor(ForceFeedbackEffect: UE.ForceFeedbackEffect);
        ForceFeedbackEffect: UE.ForceFeedbackEffect;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActiveForceFeedbackEffect_0__: boolean;
    }
    
    class ChildConnection extends UE.NetConnection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Parent: UE.NetConnection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChildConnection;
        static Load(InName: string): ChildConnection;
    
        __tid_ChildConnection_0__: boolean;
    }
    
    class LayerActorStats {
        constructor();
        constructor(Type: UE.Class, Total: number);
        Type: UE.Class;
        Total: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LayerActorStats_0__: boolean;
    }
    
    class Layer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LayerName: string;
        bIsVisible: boolean;
        ActorStats: TArray<UE.LayerActorStats>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Layer;
        static Load(InName: string): Layer;
    
        __tid_Layer_0__: boolean;
    }
    
    class ModelComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ModelBodySetup: UE.BodySetup;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ModelComponent;
        static Load(InName: string): ModelComponent;
    
        __tid_ModelComponent_0__: boolean;
    }
    
    class LevelActorContainer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Actors: TArray<UE.Actor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelActorContainer;
        static Load(InName: string): LevelActorContainer;
    
        __tid_LevelActorContainer_0__: boolean;
    }
    
    class LevelScriptBlueprint extends UE.Blueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FriendlyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelScriptBlueprint;
        static Load(InName: string): LevelScriptBlueprint;
    
        __tid_LevelScriptBlueprint_0__: boolean;
    }
    
    class LevelScriptActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bInputEnabled: boolean;
        LevelReset() : void;
        RemoteEvent(EventName: string) : boolean;
        SetCinematicMode(bCinematicMode: boolean, bHidePlayer?: boolean /* = true */, bAffectsHUD?: boolean /* = true */, bAffectsMovement?: boolean /* = false */, bAffectsTurning?: boolean /* = false */) : void;
        WorldOriginLocationChanged(OldOriginLocation: UE.IntVector, NewOriginLocation: UE.IntVector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelScriptActor;
        static Load(InName: string): LevelScriptActor;
    
        __tid_LevelScriptActor_0__: boolean;
    }
    
    class NavigationObjectBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CapsuleComponent: UE.CapsuleComponent;
        GoodSprite: UE.BillboardComponent;
        BadSprite: UE.BillboardComponent;
        bIsPIEPlayerStart: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationObjectBase;
        static Load(InName: string): NavigationObjectBase;
    
        __tid_NavigationObjectBase_0__: boolean;
    }
    
    class NavigationDataChunk extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NavigationDataName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationDataChunk;
        static Load(InName: string): NavigationDataChunk;
    
        __tid_NavigationDataChunk_0__: boolean;
    }
    
    enum ELightingBuildQuality { Quality_Preview, Quality_Medium, Quality_High, Quality_Production, Quality_MAX, __typeKeyDoNoAccess}
    class MapBuildDataRegistry extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LevelLightingQuality: UE.ELightingBuildQuality;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MapBuildDataRegistry;
        static Load(InName: string): MapBuildDataRegistry;
    
        __tid_MapBuildDataRegistry_0__: boolean;
    }
    
    enum ETextureSizingType { TextureSizingType_UseSingleTextureSize, TextureSizingType_UseAutomaticBiasedSizes, TextureSizingType_UseManualOverrideTextureSize, TextureSizingType_UseSimplygonAutomaticSizing, TextureSizingType_MAX, __typeKeyDoNoAccess}
    enum EMaterialMergeType { MaterialMergeType_Default, MaterialMergeType_Simplygon, MaterialMergeType_MAX, __typeKeyDoNoAccess}
    class MaterialProxySettings {
        constructor();
        constructor(TextureSize: UE.IntPoint, GutterSpace: number, MetallicConstant: number, RoughnessConstant: number, AnisotropyConstant: number, SpecularConstant: number, OpacityConstant: number, OpacityMaskConstant: number, AmbientOcclusionConstant: number, TextureSizingType: UE.ETextureSizingType, MaterialMergeType: UE.EMaterialMergeType, BlendMode: UE.EBlendMode, bAllowTwoSidedMaterial: boolean, bNormalMap: boolean, bTangentMap: boolean, bMetallicMap: boolean, bRoughnessMap: boolean, bAnisotropyMap: boolean, bSpecularMap: boolean, bEmissiveMap: boolean, bOpacityMap: boolean, bOpacityMaskMap: boolean, bAmbientOcclusionMap: boolean, DiffuseTextureSize: UE.IntPoint, NormalTextureSize: UE.IntPoint, TangentTextureSize: UE.IntPoint, MetallicTextureSize: UE.IntPoint, RoughnessTextureSize: UE.IntPoint, AnisotropyTextureSize: UE.IntPoint, SpecularTextureSize: UE.IntPoint, EmissiveTextureSize: UE.IntPoint, OpacityTextureSize: UE.IntPoint, OpacityMaskTextureSize: UE.IntPoint, AmbientOcclusionTextureSize: UE.IntPoint);
        TextureSize: UE.IntPoint;
        GutterSpace: number;
        MetallicConstant: number;
        RoughnessConstant: number;
        AnisotropyConstant: number;
        SpecularConstant: number;
        OpacityConstant: number;
        OpacityMaskConstant: number;
        AmbientOcclusionConstant: number;
        TextureSizingType: UE.ETextureSizingType;
        MaterialMergeType: UE.EMaterialMergeType;
        BlendMode: UE.EBlendMode;
        bAllowTwoSidedMaterial: boolean;
        bNormalMap: boolean;
        bTangentMap: boolean;
        bMetallicMap: boolean;
        bRoughnessMap: boolean;
        bAnisotropyMap: boolean;
        bSpecularMap: boolean;
        bEmissiveMap: boolean;
        bOpacityMap: boolean;
        bOpacityMaskMap: boolean;
        bAmbientOcclusionMap: boolean;
        DiffuseTextureSize: UE.IntPoint;
        NormalTextureSize: UE.IntPoint;
        TangentTextureSize: UE.IntPoint;
        MetallicTextureSize: UE.IntPoint;
        RoughnessTextureSize: UE.IntPoint;
        AnisotropyTextureSize: UE.IntPoint;
        SpecularTextureSize: UE.IntPoint;
        EmissiveTextureSize: UE.IntPoint;
        OpacityTextureSize: UE.IntPoint;
        OpacityMaskTextureSize: UE.IntPoint;
        AmbientOcclusionTextureSize: UE.IntPoint;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialProxySettings_0__: boolean;
    }
    
    class LevelSimplificationDetails {
        constructor();
        constructor(bCreatePackagePerAsset: boolean, DetailsPercentage: number, StaticMeshMaterialSettings: UE.MaterialProxySettings, bOverrideLandscapeExportLOD: boolean, LandscapeExportLOD: number, LandscapeMaterialSettings: UE.MaterialProxySettings, bBakeFoliageToLandscape: boolean, bBakeGrassToLandscape: boolean, bGenerateMeshNormalMap: boolean, bGenerateMeshMetallicMap: boolean, bGenerateMeshRoughnessMap: boolean, bGenerateMeshSpecularMap: boolean, bGenerateLandscapeNormalMap: boolean, bGenerateLandscapeMetallicMap: boolean, bGenerateLandscapeRoughnessMap: boolean, bGenerateLandscapeSpecularMap: boolean);
        bCreatePackagePerAsset: boolean;
        DetailsPercentage: number;
        StaticMeshMaterialSettings: UE.MaterialProxySettings;
        bOverrideLandscapeExportLOD: boolean;
        LandscapeExportLOD: number;
        LandscapeMaterialSettings: UE.MaterialProxySettings;
        bBakeFoliageToLandscape: boolean;
        bBakeGrassToLandscape: boolean;
        bGenerateMeshNormalMap: boolean;
        bGenerateMeshMetallicMap: boolean;
        bGenerateMeshRoughnessMap: boolean;
        bGenerateMeshSpecularMap: boolean;
        bGenerateLandscapeNormalMap: boolean;
        bGenerateLandscapeMetallicMap: boolean;
        bGenerateLandscapeRoughnessMap: boolean;
        bGenerateLandscapeSpecularMap: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSimplificationDetails_0__: boolean;
    }
    
    enum EVisibilityAggressiveness { VIS_LeastAggressive, VIS_ModeratelyAggressive, VIS_MostAggressive, VIS_Max, VIS_MAX, __typeKeyDoNoAccess}
    class NavAgentSelector {
        constructor();
        constructor(bSupportsAgent0: boolean, bSupportsAgent1: boolean, bSupportsAgent2: boolean, bSupportsAgent3: boolean, bSupportsAgent4: boolean, bSupportsAgent5: boolean, bSupportsAgent6: boolean, bSupportsAgent7: boolean, bSupportsAgent8: boolean, bSupportsAgent9: boolean, bSupportsAgent10: boolean, bSupportsAgent11: boolean, bSupportsAgent12: boolean, bSupportsAgent13: boolean, bSupportsAgent14: boolean, bSupportsAgent15: boolean);
        bSupportsAgent0: boolean;
        bSupportsAgent1: boolean;
        bSupportsAgent2: boolean;
        bSupportsAgent3: boolean;
        bSupportsAgent4: boolean;
        bSupportsAgent5: boolean;
        bSupportsAgent6: boolean;
        bSupportsAgent7: boolean;
        bSupportsAgent8: boolean;
        bSupportsAgent9: boolean;
        bSupportsAgent10: boolean;
        bSupportsAgent11: boolean;
        bSupportsAgent12: boolean;
        bSupportsAgent13: boolean;
        bSupportsAgent14: boolean;
        bSupportsAgent15: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavAgentSelector_0__: boolean;
    }
    
    class NavigationSystemConfig extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NavigationSystemClass: UE.SoftClassPath;
        SupportedAgentsMask: UE.NavAgentSelector;
        DefaultAgentName: string;
        bIsOverriden: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationSystemConfig;
        static Load(InName: string): NavigationSystemConfig;
    
        __tid_NavigationSystemConfig_0__: boolean;
    }
    
    enum EVolumeLightingMethod { VLM_VolumetricLightmap, VLM_SparseVolumeLightingSamples, VLM_MAX, __typeKeyDoNoAccess}
    class LightmassWorldInfoSettings {
        constructor();
        constructor(StaticLightingLevelScale: number, NumIndirectLightingBounces: number, NumSkyLightingBounces: number, IndirectLightingQuality: number, IndirectLightingSmoothness: number, EnvironmentColor: UE.Color, EnvironmentIntensity: number, EmissiveBoost: number, DiffuseBoost: number, VolumeLightingMethod: UE.EVolumeLightingMethod, bUseAmbientOcclusion: boolean, bGenerateAmbientOcclusionMaterialMask: boolean, bVisualizeMaterialDiffuse: boolean, bVisualizeAmbientOcclusion: boolean, bCompressLightmaps: boolean, VolumetricLightmapDetailCellSize: number, VolumetricLightmapMaximumBrickMemoryMb: number, VolumetricLightmapSphericalHarmonicSmoothing: number, VolumeLightSamplePlacementScale: number, DirectIlluminationOcclusionFraction: number, IndirectIlluminationOcclusionFraction: number, OcclusionExponent: number, FullyOccludedSamplesFraction: number, MaxOcclusionDistance: number);
        StaticLightingLevelScale: number;
        NumIndirectLightingBounces: number;
        NumSkyLightingBounces: number;
        IndirectLightingQuality: number;
        IndirectLightingSmoothness: number;
        EnvironmentColor: UE.Color;
        EnvironmentIntensity: number;
        EmissiveBoost: number;
        DiffuseBoost: number;
        VolumeLightingMethod: UE.EVolumeLightingMethod;
        bUseAmbientOcclusion: boolean;
        bGenerateAmbientOcclusionMaterialMask: boolean;
        bVisualizeMaterialDiffuse: boolean;
        bVisualizeAmbientOcclusion: boolean;
        bCompressLightmaps: boolean;
        VolumetricLightmapDetailCellSize: number;
        VolumetricLightmapMaximumBrickMemoryMb: number;
        VolumetricLightmapSphericalHarmonicSmoothing: number;
        VolumeLightSamplePlacementScale: number;
        DirectIlluminationOcclusionFraction: number;
        IndirectIlluminationOcclusionFraction: number;
        OcclusionExponent: number;
        FullyOccludedSamplesFraction: number;
        MaxOcclusionDistance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassWorldInfoSettings_0__: boolean;
    }
    
    enum ReverbPreset { REVERB_Default, REVERB_Bathroom, REVERB_StoneRoom, REVERB_Auditorium, REVERB_ConcertHall, REVERB_Cave, REVERB_Hallway, REVERB_StoneCorridor, REVERB_Alley, REVERB_Forest, REVERB_City, REVERB_Mountains, REVERB_Quarry, REVERB_Plain, REVERB_ParkingLot, REVERB_SewerPipe, REVERB_Underwater, REVERB_SmallRoom, REVERB_MediumRoom, REVERB_LargeRoom, REVERB_MediumHall, REVERB_LargeHall, REVERB_Plate, REVERB_MAX, __typeKeyDoNoAccess}
    class ReverbEffect extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bBypassEarlyReflections: boolean;
        ReflectionsDelay: number;
        GainHF: number;
        ReflectionsGain: number;
        bBypassLateReflections: boolean;
        LateDelay: number;
        DecayTime: number;
        Density: number;
        Diffusion: number;
        AirAbsorptionGainHF: number;
        DecayHFRatio: number;
        LateGain: number;
        Gain: number;
        RoomRolloffFactor: number;
        bChanged: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReverbEffect;
        static Load(InName: string): ReverbEffect;
    
        __tid_ReverbEffect_0__: boolean;
    }
    
    class SoundEffectPreset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundEffectPreset;
        static Load(InName: string): SoundEffectPreset;
    
        __tid_SoundEffectPreset_0__: boolean;
    }
    
    class SoundEffectSubmixPreset extends UE.SoundEffectPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundEffectSubmixPreset;
        static Load(InName: string): SoundEffectSubmixPreset;
    
        __tid_SoundEffectSubmixPreset_0__: boolean;
    }
    
    class ReverbSettings {
        constructor();
        constructor(bApplyReverb: boolean, ReverbType: UE.ReverbPreset, ReverbEffect: UE.ReverbEffect, ReverbPluginEffect: UE.SoundEffectSubmixPreset, Volume: number, FadeTime: number);
        bApplyReverb: boolean;
        ReverbType: UE.ReverbPreset;
        ReverbEffect: UE.ReverbEffect;
        ReverbPluginEffect: UE.SoundEffectSubmixPreset;
        Volume: number;
        FadeTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ReverbSettings_0__: boolean;
    }
    
    class InteriorSettings {
        constructor();
        constructor(bIsWorldSettings: boolean, ExteriorVolume: number, ExteriorTime: number, ExteriorLPF: number, ExteriorLPFTime: number, InteriorVolume: number, InteriorTime: number, InteriorLPF: number, InteriorLPFTime: number);
        bIsWorldSettings: boolean;
        ExteriorVolume: number;
        ExteriorTime: number;
        ExteriorLPF: number;
        ExteriorLPFTime: number;
        InteriorVolume: number;
        InteriorTime: number;
        InteriorLPF: number;
        InteriorLPFTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InteriorSettings_0__: boolean;
    }
    
    class AudioEffectParameters {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioEffectParameters_0__: boolean;
    }
    
    class AudioEQEffect extends UE.AudioEffectParameters {
        constructor();
        constructor(FrequencyCenter0: number, Gain0: number, Bandwidth0: number, FrequencyCenter1: number, Gain1: number, Bandwidth1: number, FrequencyCenter2: number, Gain2: number, Bandwidth2: number, FrequencyCenter3: number, Gain3: number, Bandwidth3: number);
        FrequencyCenter0: number;
        Gain0: number;
        Bandwidth0: number;
        FrequencyCenter1: number;
        Gain1: number;
        Bandwidth1: number;
        FrequencyCenter2: number;
        Gain2: number;
        Bandwidth2: number;
        FrequencyCenter3: number;
        Gain3: number;
        Bandwidth3: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioEQEffect_0__: boolean;
    }
    
    class SoundModulatorBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundModulatorBase;
        static Load(InName: string): SoundModulatorBase;
    
        __tid_SoundModulatorBase_0__: boolean;
    }
    
    class SoundModulationDestinationSettings {
        constructor();
        constructor(Value: number, bEnableModulation: boolean, Modulator: UE.SoundModulatorBase);
        Value: number;
        bEnableModulation: boolean;
        Modulator: UE.SoundModulatorBase;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundModulationDestinationSettings_0__: boolean;
    }
    
    class SoundModulationDefaultSettings {
        constructor();
        constructor(VolumeModulationDestination: UE.SoundModulationDestinationSettings, PitchModulationDestination: UE.SoundModulationDestinationSettings, HighpassModulationDestination: UE.SoundModulationDestinationSettings, LowpassModulationDestination: UE.SoundModulationDestinationSettings);
        VolumeModulationDestination: UE.SoundModulationDestinationSettings;
        PitchModulationDestination: UE.SoundModulationDestinationSettings;
        HighpassModulationDestination: UE.SoundModulationDestinationSettings;
        LowpassModulationDestination: UE.SoundModulationDestinationSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundModulationDefaultSettings_0__: boolean;
    }
    
    enum EAudioOutputTarget { Speaker, Controller, ControllerFallbackToSpeaker, EAudioOutputTarget_MAX, __typeKeyDoNoAccess}
    enum ESoundWaveLoadingBehavior { Inherited, RetainOnLoad, PrimeOnLoad, LoadOnDemand, ForceInline, Uninitialized, ESoundWaveLoadingBehavior_MAX, __typeKeyDoNoAccess}
    class SoundSubmixBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChildSubmixes: TArray<UE.SoundSubmixBase>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmixBase;
        static Load(InName: string): SoundSubmixBase;
    
        __tid_SoundSubmixBase_0__: boolean;
    }
    
    class SoundSubmixWithParentBase extends UE.SoundSubmixBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentSubmix: UE.SoundSubmixBase;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmixWithParentBase;
        static Load(InName: string): SoundSubmixWithParentBase;
    
        __tid_SoundSubmixWithParentBase_0__: boolean;
    }
    
    class SoundfieldEncodingSettingsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldEncodingSettingsBase;
        static Load(InName: string): SoundfieldEncodingSettingsBase;
    
        __tid_SoundfieldEncodingSettingsBase_0__: boolean;
    }
    
    enum EGainParamMode { Linear, Decibels, EGainParamMode_MAX, __typeKeyDoNoAccess}
    enum EVirtualizationMode { Disabled, PlayWhenSilent, Restart, EVirtualizationMode_MAX, __typeKeyDoNoAccess}
    enum EMaxConcurrentResolutionRule { PreventNew, StopOldest, StopFarthestThenPreventNew, StopFarthestThenOldest, StopLowestPriority, StopQuietest, StopLowestPriorityThenPreventNew, Count, EMaxConcurrentResolutionRule_MAX, __typeKeyDoNoAccess}
    enum EConcurrencyVolumeScaleMode { Default, Distance, Priority, EConcurrencyVolumeScaleMode_MAX, __typeKeyDoNoAccess}
    class SoundConcurrencySettings {
        constructor();
        constructor(MaxCount: number, bLimitToOwner: boolean, ResolutionRule: UE.EMaxConcurrentResolutionRule, RetriggerTime: number, VolumeScale: number, VolumeScaleMode: UE.EConcurrencyVolumeScaleMode, VolumeScaleAttackTime: number, bVolumeScaleCanRelease: boolean, VolumeScaleReleaseTime: number, VoiceStealReleaseTime: number);
        MaxCount: number;
        bLimitToOwner: boolean;
        ResolutionRule: UE.EMaxConcurrentResolutionRule;
        RetriggerTime: number;
        VolumeScale: number;
        VolumeScaleMode: UE.EConcurrencyVolumeScaleMode;
        VolumeScaleAttackTime: number;
        bVolumeScaleCanRelease: boolean;
        VolumeScaleReleaseTime: number;
        VoiceStealReleaseTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundConcurrencySettings_0__: boolean;
    }
    
    class SoundConcurrency extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Concurrency: UE.SoundConcurrencySettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundConcurrency;
        static Load(InName: string): SoundConcurrency;
    
        __tid_SoundConcurrency_0__: boolean;
    }
    
    enum EAttenuationDistanceModel { Linear, Logarithmic, Inverse, LogReverse, NaturalSound, Custom, EAttenuationDistanceModel_MAX, __typeKeyDoNoAccess}
    enum EAttenuationShape { Sphere, Capsule, Box, Cone, EAttenuationShape_MAX, __typeKeyDoNoAccess}
    enum ENaturalSoundFalloffMode { Continues, Silent, Hold, ENaturalSoundFalloffMode_MAX, __typeKeyDoNoAccess}
    class BaseAttenuationSettings {
        constructor();
        constructor(DistanceAlgorithm: UE.EAttenuationDistanceModel, AttenuationShape: UE.EAttenuationShape, dBAttenuationAtMax: number, FalloffMode: UE.ENaturalSoundFalloffMode, AttenuationShapeExtents: UE.Vector, ConeOffset: number, FalloffDistance: number, CustomAttenuationCurve: UE.RuntimeFloatCurve);
        DistanceAlgorithm: UE.EAttenuationDistanceModel;
        AttenuationShape: UE.EAttenuationShape;
        dBAttenuationAtMax: number;
        FalloffMode: UE.ENaturalSoundFalloffMode;
        AttenuationShapeExtents: UE.Vector;
        ConeOffset: number;
        FalloffDistance: number;
        CustomAttenuationCurve: UE.RuntimeFloatCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BaseAttenuationSettings_0__: boolean;
    }
    
    enum ESoundSpatializationAlgorithm { SPATIALIZATION_Default, SPATIALIZATION_HRTF, SPATIALIZATION_MAX, __typeKeyDoNoAccess}
    enum EAirAbsorptionMethod { Linear, CustomCurve, EAirAbsorptionMethod_MAX, __typeKeyDoNoAccess}
    enum EReverbSendMethod { Linear, CustomCurve, Manual, EReverbSendMethod_MAX, __typeKeyDoNoAccess}
    enum EPriorityAttenuationMethod { Linear, CustomCurve, Manual, EPriorityAttenuationMethod_MAX, __typeKeyDoNoAccess}
    enum ESoundDistanceCalc { SOUNDDISTANCE_Normal, SOUNDDISTANCE_InfiniteXYPlane, SOUNDDISTANCE_InfiniteXZPlane, SOUNDDISTANCE_InfiniteYZPlane, SOUNDDISTANCE_MAX, __typeKeyDoNoAccess}
    class SpatializationPluginSourceSettingsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpatializationPluginSourceSettingsBase;
        static Load(InName: string): SpatializationPluginSourceSettingsBase;
    
        __tid_SpatializationPluginSourceSettingsBase_0__: boolean;
    }
    
    class OcclusionPluginSourceSettingsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OcclusionPluginSourceSettingsBase;
        static Load(InName: string): OcclusionPluginSourceSettingsBase;
    
        __tid_OcclusionPluginSourceSettingsBase_0__: boolean;
    }
    
    class ReverbPluginSourceSettingsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReverbPluginSourceSettingsBase;
        static Load(InName: string): ReverbPluginSourceSettingsBase;
    
        __tid_ReverbPluginSourceSettingsBase_0__: boolean;
    }
    
    enum ESubmixSendMethod { Linear, CustomCurve, Manual, ESubmixSendMethod_MAX, __typeKeyDoNoAccess}
    class AttenuationSubmixSendSettings {
        constructor();
        constructor(Submix: UE.SoundSubmixBase, SubmixSendMethod: UE.ESubmixSendMethod, SubmixSendLevelMin: number, SubmixSendLevelMax: number, SubmixSendDistanceMin: number, SubmixSendDistanceMax: number, ManualSubmixSendLevel: number, CustomSubmixSendCurve: UE.RuntimeFloatCurve);
        Submix: UE.SoundSubmixBase;
        SubmixSendMethod: UE.ESubmixSendMethod;
        SubmixSendLevelMin: number;
        SubmixSendLevelMax: number;
        SubmixSendDistanceMin: number;
        SubmixSendDistanceMax: number;
        ManualSubmixSendLevel: number;
        CustomSubmixSendCurve: UE.RuntimeFloatCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AttenuationSubmixSendSettings_0__: boolean;
    }
    
    class SoundAttenuationPluginSettings {
        constructor();
        constructor(SpatializationPluginSettingsArray: TArray<UE.SpatializationPluginSourceSettingsBase>, OcclusionPluginSettingsArray: TArray<UE.OcclusionPluginSourceSettingsBase>, ReverbPluginSettingsArray: TArray<UE.ReverbPluginSourceSettingsBase>);
        SpatializationPluginSettingsArray: TArray<UE.SpatializationPluginSourceSettingsBase>;
        OcclusionPluginSettingsArray: TArray<UE.OcclusionPluginSourceSettingsBase>;
        ReverbPluginSettingsArray: TArray<UE.ReverbPluginSourceSettingsBase>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundAttenuationPluginSettings_0__: boolean;
    }
    
    class SoundAttenuationSettings extends UE.BaseAttenuationSettings {
        constructor();
        constructor(bAttenuate: boolean, bSpatialize: boolean, bAttenuateWithLPF: boolean, bEnableListenerFocus: boolean, bEnableFocusInterpolation: boolean, bEnableOcclusion: boolean, bUseComplexCollisionForOcclusion: boolean, bEnableReverbSend: boolean, bEnablePriorityAttenuation: boolean, bApplyNormalizationToStereoSounds: boolean, bEnableLogFrequencyScaling: boolean, bEnableSubmixSends: boolean, SpatializationAlgorithm: UE.ESoundSpatializationAlgorithm, BinauralRadius: number, AbsorptionMethod: UE.EAirAbsorptionMethod, OcclusionTraceChannel: UE.ECollisionChannel, ReverbSendMethod: UE.EReverbSendMethod, PriorityAttenuationMethod: UE.EPriorityAttenuationMethod, DistanceType: UE.ESoundDistanceCalc, OmniRadius: number, StereoSpread: number, SpatializationPluginSettings: UE.SpatializationPluginSourceSettingsBase, RadiusMin: number, RadiusMax: number, LPFRadiusMin: number, LPFRadiusMax: number, CustomLowpassAirAbsorptionCurve: UE.RuntimeFloatCurve, CustomHighpassAirAbsorptionCurve: UE.RuntimeFloatCurve, LPFFrequencyAtMin: number, LPFFrequencyAtMax: number, HPFFrequencyAtMin: number, HPFFrequencyAtMax: number, FocusAzimuth: number, NonFocusAzimuth: number, FocusDistanceScale: number, NonFocusDistanceScale: number, FocusPriorityScale: number, NonFocusPriorityScale: number, FocusVolumeAttenuation: number, NonFocusVolumeAttenuation: number, FocusAttackInterpSpeed: number, FocusReleaseInterpSpeed: number, OcclusionLowPassFilterFrequency: number, OcclusionVolumeAttenuation: number, OcclusionInterpolationTime: number, OcclusionPluginSettings: UE.OcclusionPluginSourceSettingsBase, ReverbPluginSettings: UE.ReverbPluginSourceSettingsBase, ReverbWetLevelMin: number, ReverbWetLevelMax: number, ReverbDistanceMin: number, ReverbDistanceMax: number, ManualReverbSendLevel: number, CustomReverbSendCurve: UE.RuntimeFloatCurve, SubmixSendSettings: TArray<UE.AttenuationSubmixSendSettings>, PriorityAttenuationMin: number, PriorityAttenuationMax: number, PriorityAttenuationDistanceMin: number, PriorityAttenuationDistanceMax: number, ManualPriorityAttenuation: number, CustomPriorityAttenuationCurve: UE.RuntimeFloatCurve, PluginSettings: UE.SoundAttenuationPluginSettings);
        bAttenuate: boolean;
        bSpatialize: boolean;
        bAttenuateWithLPF: boolean;
        bEnableListenerFocus: boolean;
        bEnableFocusInterpolation: boolean;
        bEnableOcclusion: boolean;
        bUseComplexCollisionForOcclusion: boolean;
        bEnableReverbSend: boolean;
        bEnablePriorityAttenuation: boolean;
        bApplyNormalizationToStereoSounds: boolean;
        bEnableLogFrequencyScaling: boolean;
        bEnableSubmixSends: boolean;
        SpatializationAlgorithm: UE.ESoundSpatializationAlgorithm;
        BinauralRadius: number;
        AbsorptionMethod: UE.EAirAbsorptionMethod;
        OcclusionTraceChannel: UE.ECollisionChannel;
        ReverbSendMethod: UE.EReverbSendMethod;
        PriorityAttenuationMethod: UE.EPriorityAttenuationMethod;
        DistanceType: UE.ESoundDistanceCalc;
        OmniRadius: number;
        StereoSpread: number;
        SpatializationPluginSettings: UE.SpatializationPluginSourceSettingsBase;
        RadiusMin: number;
        RadiusMax: number;
        LPFRadiusMin: number;
        LPFRadiusMax: number;
        CustomLowpassAirAbsorptionCurve: UE.RuntimeFloatCurve;
        CustomHighpassAirAbsorptionCurve: UE.RuntimeFloatCurve;
        LPFFrequencyAtMin: number;
        LPFFrequencyAtMax: number;
        HPFFrequencyAtMin: number;
        HPFFrequencyAtMax: number;
        FocusAzimuth: number;
        NonFocusAzimuth: number;
        FocusDistanceScale: number;
        NonFocusDistanceScale: number;
        FocusPriorityScale: number;
        NonFocusPriorityScale: number;
        FocusVolumeAttenuation: number;
        NonFocusVolumeAttenuation: number;
        FocusAttackInterpSpeed: number;
        FocusReleaseInterpSpeed: number;
        OcclusionLowPassFilterFrequency: number;
        OcclusionVolumeAttenuation: number;
        OcclusionInterpolationTime: number;
        OcclusionPluginSettings: UE.OcclusionPluginSourceSettingsBase;
        ReverbPluginSettings: UE.ReverbPluginSourceSettingsBase;
        ReverbWetLevelMin: number;
        ReverbWetLevelMax: number;
        ReverbDistanceMin: number;
        ReverbDistanceMax: number;
        ManualReverbSendLevel: number;
        CustomReverbSendCurve: UE.RuntimeFloatCurve;
        SubmixSendSettings: TArray<UE.AttenuationSubmixSendSettings>;
        PriorityAttenuationMin: number;
        PriorityAttenuationMax: number;
        PriorityAttenuationDistanceMin: number;
        PriorityAttenuationDistanceMax: number;
        ManualPriorityAttenuation: number;
        CustomPriorityAttenuationCurve: UE.RuntimeFloatCurve;
        PluginSettings: UE.SoundAttenuationPluginSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundAttenuationSettings_0__: boolean;
    }
    
    class SoundAttenuation extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Attenuation: UE.SoundAttenuationSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundAttenuation;
        static Load(InName: string): SoundAttenuation;
    
        __tid_SoundAttenuation_0__: boolean;
    }
    
    enum EModulationRouting { Disable, Inherit, Override, EModulationRouting_MAX, __typeKeyDoNoAccess}
    class SoundModulationDefaultRoutingSettings extends UE.SoundModulationDefaultSettings {
        constructor();
        constructor(VolumeRouting: UE.EModulationRouting, PitchRouting: UE.EModulationRouting, HighpassRouting: UE.EModulationRouting, LowpassRouting: UE.EModulationRouting);
        VolumeRouting: UE.EModulationRouting;
        PitchRouting: UE.EModulationRouting;
        HighpassRouting: UE.EModulationRouting;
        LowpassRouting: UE.EModulationRouting;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundModulationDefaultRoutingSettings_0__: boolean;
    }
    
    enum ESendLevelControlMethod { Linear, CustomCurve, Manual, ESendLevelControlMethod_MAX, __typeKeyDoNoAccess}
    enum ESubmixSendStage { PostDistanceAttenuation, PreDistanceAttenuation, ESubmixSendStage_MAX, __typeKeyDoNoAccess}
    class SoundSubmixSendInfo {
        constructor();
        constructor(SendLevelControlMethod: UE.ESendLevelControlMethod, SendStage: UE.ESubmixSendStage, SoundSubmix: UE.SoundSubmixBase, SendLevel: number, MinSendLevel: number, MaxSendLevel: number, MinSendDistance: number, MaxSendDistance: number, CustomSendLevelCurve: UE.RuntimeFloatCurve);
        SendLevelControlMethod: UE.ESendLevelControlMethod;
        SendStage: UE.ESubmixSendStage;
        SoundSubmix: UE.SoundSubmixBase;
        SendLevel: number;
        MinSendLevel: number;
        MaxSendLevel: number;
        MinSendDistance: number;
        MaxSendDistance: number;
        CustomSendLevelCurve: UE.RuntimeFloatCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundSubmixSendInfo_0__: boolean;
    }
    
    class SoundEffectSourcePreset extends UE.SoundEffectPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundEffectSourcePreset;
        static Load(InName: string): SoundEffectSourcePreset;
    
        __tid_SoundEffectSourcePreset_0__: boolean;
    }
    
    class SourceEffectChainEntry {
        constructor();
        constructor(Preset: UE.SoundEffectSourcePreset, bBypass: boolean);
        Preset: UE.SoundEffectSourcePreset;
        bBypass: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectChainEntry_0__: boolean;
    }
    
    class SoundEffectSourcePresetChain extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Chain: TArray<UE.SourceEffectChainEntry>;
        bPlayEffectChainTails: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundEffectSourcePresetChain;
        static Load(InName: string): SoundEffectSourcePresetChain;
    
        __tid_SoundEffectSourcePresetChain_0__: boolean;
    }
    
    enum ESourceBusSendLevelControlMethod { Linear, CustomCurve, Manual, ESourceBusSendLevelControlMethod_MAX, __typeKeyDoNoAccess}
    enum ESourceBusChannels { Mono, Stereo, ESourceBusChannels_MAX, __typeKeyDoNoAccess}
    enum EAudioBusChannels { Mono, Stereo, EAudioBusChannels_MAX, __typeKeyDoNoAccess}
    class AudioBus extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AudioBusChannels: UE.EAudioBusChannels;
        bIsAutomatic: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioBus;
        static Load(InName: string): AudioBus;
    
        __tid_AudioBus_0__: boolean;
    }
    
    class SoundSourceBus extends UE.SoundWave {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceBusChannels: UE.ESourceBusChannels;
        SourceBusDuration: number;
        AudioBus: UE.AudioBus;
        bAutoDeactivateWhenSilent: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSourceBus;
        static Load(InName: string): SoundSourceBus;
    
        __tid_SoundSourceBus_0__: boolean;
    }
    
    class SoundSourceBusSendInfo {
        constructor();
        constructor(SourceBusSendLevelControlMethod: UE.ESourceBusSendLevelControlMethod, SoundSourceBus: UE.SoundSourceBus, AudioBus: UE.AudioBus, SendLevel: number, MinSendLevel: number, MaxSendLevel: number, MinSendDistance: number, MaxSendDistance: number, CustomSendLevelCurve: UE.RuntimeFloatCurve);
        SourceBusSendLevelControlMethod: UE.ESourceBusSendLevelControlMethod;
        SoundSourceBus: UE.SoundSourceBus;
        AudioBus: UE.AudioBus;
        SendLevel: number;
        MinSendLevel: number;
        MaxSendLevel: number;
        MinSendDistance: number;
        MaxSendDistance: number;
        CustomSendLevelCurve: UE.RuntimeFloatCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundSourceBusSendInfo_0__: boolean;
    }
    
    class SoundBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundClassObject: UE.SoundClass;
        bDebug: boolean;
        bOverrideConcurrency: boolean;
        bOutputToBusOnly: boolean;
        bHasDelayNode: boolean;
        bHasConcatenatorNode: boolean;
        bHasVirtualizeWhenSilent: boolean;
        bBypassVolumeScaleForPriority: boolean;
        VirtualizationMode: UE.EVirtualizationMode;
        MaxConcurrentResolutionRule: UE.EMaxConcurrentResolutionRule;
        SoundConcurrencySettings: UE.SoundConcurrency;
        ConcurrencySet: TSet<UE.SoundConcurrency>;
        ConcurrencyOverrides: UE.SoundConcurrencySettings;
        MaxConcurrentPlayCount: number;
        Duration: number;
        MaxDistance: number;
        TotalSamples: number;
        Priority: number;
        AttenuationSettings: UE.SoundAttenuation;
        ModulationSettings: UE.SoundModulationDefaultRoutingSettings;
        SoundSubmixObject: UE.SoundSubmixBase;
        SoundSubmixSends: TArray<UE.SoundSubmixSendInfo>;
        SourceEffectChain: UE.SoundEffectSourcePresetChain;
        BusSends: TArray<UE.SoundSourceBusSendInfo>;
        PreEffectBusSends: TArray<UE.SoundSourceBusSendInfo>;
        AssetUserData: TArray<UE.AssetUserData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundBase;
        static Load(InName: string): SoundBase;
    
        __tid_SoundBase_0__: boolean;
    }
    
    enum ESoundwaveSampleRateSettings { Max, High, Medium, Low, Min, MatchDevice, ESoundwaveSampleRateSettings_MAX, __typeKeyDoNoAccess}
    enum ESoundGroup { SOUNDGROUP_Default, SOUNDGROUP_Effects, SOUNDGROUP_UI, SOUNDGROUP_Music, SOUNDGROUP_Voice, SOUNDGROUP_GameSoundGroup1, SOUNDGROUP_GameSoundGroup2, SOUNDGROUP_GameSoundGroup3, SOUNDGROUP_GameSoundGroup4, SOUNDGROUP_GameSoundGroup5, SOUNDGROUP_GameSoundGroup6, SOUNDGROUP_GameSoundGroup7, SOUNDGROUP_GameSoundGroup8, SOUNDGROUP_GameSoundGroup9, SOUNDGROUP_GameSoundGroup10, SOUNDGROUP_GameSoundGroup11, SOUNDGROUP_GameSoundGroup12, SOUNDGROUP_GameSoundGroup13, SOUNDGROUP_GameSoundGroup14, SOUNDGROUP_GameSoundGroup15, SOUNDGROUP_GameSoundGroup16, SOUNDGROUP_GameSoundGroup17, SOUNDGROUP_GameSoundGroup18, SOUNDGROUP_GameSoundGroup19, SOUNDGROUP_GameSoundGroup20, SOUNDGROUP_MAX, __typeKeyDoNoAccess}
    enum ESoundWaveFFTSize { VerySmall_64, Small_256, Medium_512, Large_1024, VeryLarge_2048, ESoundWaveFFTSize_MAX, __typeKeyDoNoAccess}
    class SoundWaveSpectralDataEntry {
        constructor();
        constructor(Magnitude: number, NormalizedMagnitude: number);
        Magnitude: number;
        NormalizedMagnitude: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundWaveSpectralDataEntry_0__: boolean;
    }
    
    class SoundWaveSpectralTimeData {
        constructor();
        constructor(Data: TArray<UE.SoundWaveSpectralDataEntry>, TimeSec: number);
        Data: TArray<UE.SoundWaveSpectralDataEntry>;
        TimeSec: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundWaveSpectralTimeData_0__: boolean;
    }
    
    class SoundWaveEnvelopeTimeData {
        constructor();
        constructor(Amplitude: number, TimeSec: number);
        Amplitude: number;
        TimeSec: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundWaveEnvelopeTimeData_0__: boolean;
    }
    
    class SubtitleCue {
        constructor();
        constructor(Text: string, Time: number);
        Text: string;
        Time: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubtitleCue_0__: boolean;
    }
    
    class CurveTable extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetImportData: UE.AssetImportData;
        ImportPath: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveTable;
        static Load(InName: string): CurveTable;
    
        __tid_CurveTable_0__: boolean;
    }
    
    class SoundWave extends UE.SoundBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CompressionQuality: number;
        StreamingPriority: number;
        SampleRateQuality: UE.ESoundwaveSampleRateSettings;
        SoundGroup: UE.ESoundGroup;
        bLooping: boolean;
        bStreaming: boolean;
        bSeekableStreaming: boolean;
        LoadingBehavior: UE.ESoundWaveLoadingBehavior;
        bMature: boolean;
        bManualWordWrap: boolean;
        bSingleLine: boolean;
        bVirtualizeWhenSilent: boolean;
        bIsAmbisonics: boolean;
        OverrideSoundToUseForAnalysis: UE.SoundWave;
        TreatFileAsLoopingForAnalysis: boolean;
        bEnableBakedFFTAnalysis: boolean;
        bEnableAmplitudeEnvelopeAnalysis: boolean;
        FFTSize: UE.ESoundWaveFFTSize;
        FFTAnalysisFrameSize: number;
        FFTAnalysisAttackTime: number;
        FFTAnalysisReleaseTime: number;
        EnvelopeFollowerFrameSize: number;
        EnvelopeFollowerAttackTime: number;
        EnvelopeFollowerReleaseTime: number;
        FrequenciesToAnalyze: TArray<number>;
        CookedSpectralTimeData: TArray<UE.SoundWaveSpectralTimeData>;
        CookedEnvelopeTimeData: TArray<UE.SoundWaveEnvelopeTimeData>;
        InitialChunkSize: number;
        SpokenText: string;
        SubtitlePriority: number;
        Volume: number;
        Pitch: number;
        NumChannels: number;
        ChannelOffsets: TArray<number>;
        ChannelSizes: TArray<number>;
        SampleRate: number;
        Subtitles: TArray<UE.SubtitleCue>;
        Comment: string;
        SourceFilePath: string;
        SourceFileTimestamp: string;
        AssetImportData: UE.AssetImportData;
        Curves: UE.CurveTable;
        InternalCurves: UE.CurveTable;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundWave;
        static Load(InName: string): SoundWave;
    
        __tid_SoundWave_0__: boolean;
    }
    
    enum EAudioRecordingExportType { SoundWave, WavFile, EAudioRecordingExportType_MAX, __typeKeyDoNoAccess}
    enum EFFTSize { DefaultSize, Min, Small, Medium, Large, VeryLarge, Max, EFFTSize_MAX, __typeKeyDoNoAccess}
    enum EFFTPeakInterpolationMethod { NearestNeighbor, Linear, Quadratic, ConstantQ, EFFTPeakInterpolationMethod_MAX, __typeKeyDoNoAccess}
    enum EFFTWindowType { None, Hamming, Hann, Blackman, EFFTWindowType_MAX, __typeKeyDoNoAccess}
    enum EAudioSpectrumType { MagnitudeSpectrum, PowerSpectrum, Decibel, EAudioSpectrumType_MAX, __typeKeyDoNoAccess}
    class SoundSubmixSpectralAnalysisBandSettings {
        constructor();
        constructor(BandFrequency: number, AttackTimeMsec: number, ReleaseTimeMsec: number, QFactor: number);
        BandFrequency: number;
        AttackTimeMsec: number;
        ReleaseTimeMsec: number;
        QFactor: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundSubmixSpectralAnalysisBandSettings_0__: boolean;
    }
    
    class SoundSubmix extends UE.SoundSubmixWithParentBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMuteWhenBackgrounded: boolean;
        SubmixEffectChain: TArray<UE.SoundEffectSubmixPreset>;
        AmbisonicsPluginSettings: UE.SoundfieldEncodingSettingsBase;
        EnvelopeFollowerAttackTime: number;
        EnvelopeFollowerReleaseTime: number;
        GainMode: UE.EGainParamMode;
        OutputVolume: number;
        WetLevel: number;
        DryLevel: number;
        OutputVolumeDB: number;
        WetLevelDB: number;
        DryLevelDB: number;
        OnSubmixRecordedFileDone: $MulticastDelegate<(ResultingSoundWave: $Nullable<UE.SoundWave>) => void>;
        AddEnvelopeFollowerDelegate(WorldContextObject: $Nullable<UE.Object>, OnSubmixEnvelopeBP: $Delegate<(Envelope: TArray<number>) => void>) : void;
        AddSpectralAnalysisDelegate(WorldContextObject: $Nullable<UE.Object>, InBandSettings: TArray<UE.SoundSubmixSpectralAnalysisBandSettings>, OnSubmixSpectralAnalysisBP: $Delegate<(Magnitude: TArray<number>) => void>, UpdateRate?: number /* = 10.000000 */, DecibelNoiseFloor?: number /* = -40.000000 */, bDoNormalize?: boolean /* = true */, bDoAutoRange?: boolean /* = false */, AutoRangeAttackTime?: number /* = 0.100000 */, AutoRangeReleaseTime?: number /* = 60.000000 */) : void;
        RemoveSpectralAnalysisDelegate(WorldContextObject: $Nullable<UE.Object>, OnSubmixSpectralAnalysisBP: $Delegate<(Magnitude: TArray<number>) => void>) : void;
        SetSubmixOutputVolume(WorldContextObject: $Nullable<UE.Object>, InOutputVolume: number) : void;
        StartEnvelopeFollowing(WorldContextObject: $Nullable<UE.Object>) : void;
        StartRecordingOutput(WorldContextObject: $Nullable<UE.Object>, ExpectedDuration: number) : void;
        StartSpectralAnalysis(WorldContextObject: $Nullable<UE.Object>, FFTSize?: UE.EFFTSize /* = DefaultSize */, InterpolationMethod?: UE.EFFTPeakInterpolationMethod /* = Linear */, WindowType?: UE.EFFTWindowType /* = Hann */, HopSize?: number /* = 0.000000 */, SpectrumType?: UE.EAudioSpectrumType /* = MagnitudeSpectrum */) : void;
        StopEnvelopeFollowing(WorldContextObject: $Nullable<UE.Object>) : void;
        StopRecordingOutput(WorldContextObject: $Nullable<UE.Object>, ExportType: UE.EAudioRecordingExportType, Name: string, Path: string, ExistingSoundWaveToOverwrite?: UE.SoundWave /* = None */) : void;
        StopSpectralAnalysis(WorldContextObject: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmix;
        static Load(InName: string): SoundSubmix;
    
        __tid_SoundSubmix_0__: boolean;
    }
    
    class SoundClassProperties {
        constructor();
        constructor(Volume: number, Pitch: number, LowPassFilterFrequency: number, AttenuationDistanceScale: number, StereoBleed: number, LFEBleed: number, VoiceCenterChannelVolume: number, RadioFilterVolume: number, RadioFilterVolumeThreshold: number, bApplyEffects: boolean, bAlwaysPlay: boolean, bIsUISound: boolean, bIsMusic: boolean, bCenterChannelOnly: boolean, bApplyAmbientVolumes: boolean, bReverb: boolean, Default2DReverbSendAmount: number, ModulationSettings: UE.SoundModulationDefaultSettings, OutputTarget: UE.EAudioOutputTarget, LoadingBehavior: UE.ESoundWaveLoadingBehavior, DefaultSubmix: UE.SoundSubmix);
        Volume: number;
        Pitch: number;
        LowPassFilterFrequency: number;
        AttenuationDistanceScale: number;
        StereoBleed: number;
        LFEBleed: number;
        VoiceCenterChannelVolume: number;
        RadioFilterVolume: number;
        RadioFilterVolumeThreshold: number;
        bApplyEffects: boolean;
        bAlwaysPlay: boolean;
        bIsUISound: boolean;
        bIsMusic: boolean;
        bCenterChannelOnly: boolean;
        bApplyAmbientVolumes: boolean;
        bReverb: boolean;
        Default2DReverbSendAmount: number;
        ModulationSettings: UE.SoundModulationDefaultSettings;
        OutputTarget: UE.EAudioOutputTarget;
        LoadingBehavior: UE.ESoundWaveLoadingBehavior;
        DefaultSubmix: UE.SoundSubmix;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundClassProperties_0__: boolean;
    }
    
    class PassiveSoundMixModifier {
        constructor();
        constructor(SoundMix: UE.SoundMix, MinVolumeThreshold: number, MaxVolumeThreshold: number);
        SoundMix: UE.SoundMix;
        MinVolumeThreshold: number;
        MaxVolumeThreshold: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PassiveSoundMixModifier_0__: boolean;
    }
    
    class SoundClass extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Properties: UE.SoundClassProperties;
        ChildClasses: TArray<UE.SoundClass>;
        PassiveSoundMixModifiers: TArray<UE.PassiveSoundMixModifier>;
        ParentClass: UE.SoundClass;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundClass;
        static Load(InName: string): SoundClass;
    
        __tid_SoundClass_0__: boolean;
    }
    
    class SoundClassAdjuster {
        constructor();
        constructor(SoundClassObject: UE.SoundClass, VolumeAdjuster: number, PitchAdjuster: number, LowPassFilterFrequency: number, bApplyToChildren: boolean, VoiceCenterChannelVolumeAdjuster: number);
        SoundClassObject: UE.SoundClass;
        VolumeAdjuster: number;
        PitchAdjuster: number;
        LowPassFilterFrequency: number;
        bApplyToChildren: boolean;
        VoiceCenterChannelVolumeAdjuster: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundClassAdjuster_0__: boolean;
    }
    
    class SoundMix extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bApplyEQ: boolean;
        EQPriority: number;
        EQSettings: UE.AudioEQEffect;
        SoundClassEffects: TArray<UE.SoundClassAdjuster>;
        InitialDelay: number;
        FadeInTime: number;
        Duration: number;
        FadeOutTime: number;
        bChanged: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundMix;
        static Load(InName: string): SoundMix;
    
        __tid_SoundMix_0__: boolean;
    }
    
    enum EProxyNormalComputationMethod { AngleWeighted, AreaWeighted, EqualWeighted, EProxyNormalComputationMethod_MAX, __typeKeyDoNoAccess}
    enum ELandscapeCullingPrecision { High, Medium, Low, ELandscapeCullingPrecision_MAX, __typeKeyDoNoAccess}
    class MeshProxySettings {
        constructor();
        constructor(ScreenSize: number, VoxelSize: number, MaterialSettings: UE.MaterialProxySettings, TextureWidth: number, TextureHeight: number, bExportNormalMap: boolean, bExportMetallicMap: boolean, bExportRoughnessMap: boolean, bExportSpecularMap: boolean, bBakeVertexData: boolean, MergeDistance: number, UnresolvedGeometryColor: UE.Color, MaxRayCastDist: number, HardAngleThreshold: number, LightMapResolution: number, NormalCalculationMethod: UE.EProxyNormalComputationMethod, LandscapeCullingPrecision: UE.ELandscapeCullingPrecision, bCalculateCorrectLODModel: boolean, bOverrideVoxelSize: boolean, bOverrideTransferDistance: boolean, bUseHardAngleThreshold: boolean, bComputeLightMapResolution: boolean, bRecalculateNormals: boolean, bUseLandscapeCulling: boolean, bAllowAdjacency: boolean, bAllowDistanceField: boolean, bReuseMeshLightmapUVs: boolean, bCreateCollision: boolean, bAllowVertexColors: boolean, bGenerateLightmapUVs: boolean);
        ScreenSize: number;
        VoxelSize: number;
        MaterialSettings: UE.MaterialProxySettings;
        TextureWidth: number;
        TextureHeight: number;
        bExportNormalMap: boolean;
        bExportMetallicMap: boolean;
        bExportRoughnessMap: boolean;
        bExportSpecularMap: boolean;
        bBakeVertexData: boolean;
        MergeDistance: number;
        UnresolvedGeometryColor: UE.Color;
        MaxRayCastDist: number;
        HardAngleThreshold: number;
        LightMapResolution: number;
        NormalCalculationMethod: UE.EProxyNormalComputationMethod;
        LandscapeCullingPrecision: UE.ELandscapeCullingPrecision;
        bCalculateCorrectLODModel: boolean;
        bOverrideVoxelSize: boolean;
        bOverrideTransferDistance: boolean;
        bUseHardAngleThreshold: boolean;
        bComputeLightMapResolution: boolean;
        bRecalculateNormals: boolean;
        bUseLandscapeCulling: boolean;
        bAllowAdjacency: boolean;
        bAllowDistanceField: boolean;
        bReuseMeshLightmapUVs: boolean;
        bCreateCollision: boolean;
        bAllowVertexColors: boolean;
        bGenerateLightmapUVs: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshProxySettings_0__: boolean;
    }
    
    enum EUVOutput { DoNotOutputChannel, OutputChannel, EUVOutput_MAX, __typeKeyDoNoAccess}
    enum EMeshLODSelectionType { AllLODs, SpecificLOD, CalculateLOD, LowestDetailLOD, EMeshLODSelectionType_MAX, __typeKeyDoNoAccess}
    class MeshMergingSettings {
        constructor();
        constructor(TargetLightMapResolution: number, OutputUVs: FixSizeArray<UE.EUVOutput>, MaterialSettings: UE.MaterialProxySettings, GutterSize: number, SpecificLOD: number, LODSelectionType: UE.EMeshLODSelectionType, bGenerateLightMapUV: boolean, bComputedLightMapResolution: boolean, bPivotPointAtZero: boolean, bMergePhysicsData: boolean, bMergeMaterials: boolean, bCreateMergedMaterial: boolean, bBakeVertexDataToMesh: boolean, bUseVertexDataForBakingMaterial: boolean, bUseTextureBinning: boolean, bReuseMeshLightmapUVs: boolean, bMergeEquivalentMaterials: boolean, bUseLandscapeCulling: boolean, bIncludeImposters: boolean, bAllowDistanceField: boolean, bImportVertexColors: boolean, bCalculateCorrectLODModel: boolean, bExportNormalMap: boolean, bExportMetallicMap: boolean, bExportRoughnessMap: boolean, bExportSpecularMap: boolean, MergedMaterialAtlasResolution: number, ExportSpecificLOD: number);
        TargetLightMapResolution: number;
        OutputUVs: FixSizeArray<UE.EUVOutput>;
        MaterialSettings: UE.MaterialProxySettings;
        GutterSize: number;
        SpecificLOD: number;
        LODSelectionType: UE.EMeshLODSelectionType;
        bGenerateLightMapUV: boolean;
        bComputedLightMapResolution: boolean;
        bPivotPointAtZero: boolean;
        bMergePhysicsData: boolean;
        bMergeMaterials: boolean;
        bCreateMergedMaterial: boolean;
        bBakeVertexDataToMesh: boolean;
        bUseVertexDataForBakingMaterial: boolean;
        bUseTextureBinning: boolean;
        bReuseMeshLightmapUVs: boolean;
        bMergeEquivalentMaterials: boolean;
        bUseLandscapeCulling: boolean;
        bIncludeImposters: boolean;
        bAllowDistanceField: boolean;
        bImportVertexColors: boolean;
        bCalculateCorrectLODModel: boolean;
        bExportNormalMap: boolean;
        bExportMetallicMap: boolean;
        bExportRoughnessMap: boolean;
        bExportSpecularMap: boolean;
        MergedMaterialAtlasResolution: number;
        ExportSpecificLOD: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshMergingSettings_0__: boolean;
    }
    
    class HierarchicalSimplification {
        constructor();
        constructor(TransitionScreenSize: number, OverrideDrawDistance: number, bUseOverrideDrawDistance: boolean, bAllowSpecificExclusion: boolean, bSimplifyMesh: boolean, bOnlyGenerateClustersForVolumes: boolean, bReusePreviousLevelClusters: boolean, ProxySetting: UE.MeshProxySettings, MergeSetting: UE.MeshMergingSettings, DesiredBoundRadius: number, DesiredFillingPercentage: number, MinNumberOfActorsToBuild: number);
        TransitionScreenSize: number;
        OverrideDrawDistance: number;
        bUseOverrideDrawDistance: boolean;
        bAllowSpecificExclusion: boolean;
        bSimplifyMesh: boolean;
        bOnlyGenerateClustersForVolumes: boolean;
        bReusePreviousLevelClusters: boolean;
        ProxySetting: UE.MeshProxySettings;
        MergeSetting: UE.MeshMergingSettings;
        DesiredBoundRadius: number;
        DesiredFillingPercentage: number;
        MinNumberOfActorsToBuild: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HierarchicalSimplification_0__: boolean;
    }
    
    class BookmarkBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BookmarkBase;
        static Load(InName: string): BookmarkBase;
    
        __tid_BookmarkBase_0__: boolean;
    }
    
    class BookMark extends UE.BookmarkBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Location: UE.Vector;
        Rotation: UE.Rotator;
        HiddenLevels: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BookMark;
        static Load(InName: string): BookMark;
    
        __tid_BookMark_0__: boolean;
    }
    
    class BroadphaseSettings {
        constructor();
        constructor(bUseMBPOnClient: boolean, bUseMBPOnServer: boolean, bUseMBPOuterBounds: boolean, MBPBounds: UE.Box, MBPOuterBounds: UE.Box, MBPNumSubdivs: number);
        bUseMBPOnClient: boolean;
        bUseMBPOnServer: boolean;
        bUseMBPOuterBounds: boolean;
        MBPBounds: UE.Box;
        MBPOuterBounds: UE.Box;
        MBPNumSubdivs: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BroadphaseSettings_0__: boolean;
    }
    
    class NetViewer {
        constructor();
        constructor(Connection: UE.NetConnection, InViewer: UE.Actor, ViewTarget: UE.Actor, ViewLocation: UE.Vector, ViewDir: UE.Vector);
        Connection: UE.NetConnection;
        InViewer: UE.Actor;
        ViewTarget: UE.Actor;
        ViewLocation: UE.Vector;
        ViewDir: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NetViewer_0__: boolean;
    }
    
    class WorldSettings extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VisibilityCellSize: number;
        VisibilityAggressiveness: UE.EVisibilityAggressiveness;
        bPrecomputeVisibility: boolean;
        bPlaceCellsOnlyAlongCameraTracks: boolean;
        bEnableWorldBoundsChecks: boolean;
        bEnableNavigationSystem: boolean;
        bEnableAISystem: boolean;
        bEnableWorldComposition: boolean;
        bUseClientSideLevelStreamingVolumes: boolean;
        bEnableWorldOriginRebasing: boolean;
        bWorldGravitySet: boolean;
        bGlobalGravitySet: boolean;
        bMinimizeBSPSections: boolean;
        bForceNoPrecomputedLighting: boolean;
        bHighPriorityLoading: boolean;
        bHighPriorityLoadingLocal: boolean;
        bOverrideDefaultBroadphaseSettings: boolean;
        NavigationSystemConfig: UE.NavigationSystemConfig;
        NavigationSystemConfigOverride: UE.NavigationSystemConfig;
        WorldToMeters: number;
        KillZ: number;
        KillZDamageType: UE.Class;
        WorldGravityZ: number;
        GlobalGravityZ: number;
        DefaultPhysicsVolumeClass: UE.Class;
        PhysicsCollisionHandlerClass: UE.Class;
        DefaultGameMode: UE.Class;
        GameNetworkManagerClass: UE.Class;
        PackedLightAndShadowMapTextureSize: number;
        DefaultColorScale: UE.Vector;
        DefaultMaxDistanceFieldOcclusionDistance: number;
        GlobalDistanceFieldViewDistance: number;
        DynamicIndirectShadowsSelfShadowingIntensity: number;
        LightmassSettings: UE.LightmassWorldInfoSettings;
        DefaultReverbSettings: UE.ReverbSettings;
        DefaultAmbientZoneSettings: UE.InteriorSettings;
        MonoCullingDistance: number;
        DefaultBaseSoundMix: UE.SoundMix;
        bEnableHierarchicalLODSystem: boolean;
        HLODSetupAsset: TSoftClassPtr<UE.HierarchicalLODSetup>;
        OverrideBaseMaterial: TSoftObjectPtr<UE.MaterialInterface>;
        HierarchicalLODSetup: TArray<UE.HierarchicalSimplification>;
        NumHLODLevels: number;
        bGenerateSingleClusterForLevel: boolean;
        BookMarks: FixSizeArray<UE.BookMark>;
        TimeDilation: number;
        MatineeTimeDilation: number;
        DemoPlayTimeDilation: number;
        MinGlobalTimeDilation: number;
        MaxGlobalTimeDilation: number;
        MinUndilatedFrameTime: number;
        MaxUndilatedFrameTime: number;
        BroadphaseSettings: UE.BroadphaseSettings;
        Pauser: UE.PlayerState;
        ReplicationViewers: TArray<UE.NetViewer>;
        AssetUserData: TArray<UE.AssetUserData>;
        PauserPlayerState: UE.PlayerState;
        MaxNumberOfBookmarks: number;
        DefaultBookmarkClass: UE.Class;
        BookmarkArray: TArray<UE.BookmarkBase>;
        LastBookmarkClass: UE.Class;
        OnRep_WorldGravityZ() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WorldSettings;
        static Load(InName: string): WorldSettings;
    
        __tid_WorldSettings_0__: boolean;
    }
    
    class ReplicatedStaticActorDestructionInfo {
        constructor();
        constructor(ObjClass: UE.Class);
        ObjClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ReplicatedStaticActorDestructionInfo_0__: boolean;
    }
    
    class LevelPartitionInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelPartitionInterface;
        static Load(InName: string): LevelPartitionInterface;
    
        __tid_LevelPartitionInterface_0__: boolean;
    }
    
    class Level extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwningWorld: UE.World;
        Model: UE.Model;
        ModelComponents: TArray<UE.ModelComponent>;
        ActorCluster: UE.LevelActorContainer;
        LevelScriptBlueprint: UE.LevelScriptBlueprint;
        TextureStreamingResourceGuids: TArray<UE.Guid>;
        NumTextureStreamingUnbuiltComponents: number;
        NumTextureStreamingDirtyResources: number;
        LevelScriptActor: UE.LevelScriptActor;
        NavListStart: UE.NavigationObjectBase;
        NavListEnd: UE.NavigationObjectBase;
        NavDataChunks: TArray<UE.NavigationDataChunk>;
        LightmapTotalSize: number;
        ShadowmapTotalSize: number;
        StaticNavigableGeometry: TArray<UE.Vector>;
        StreamingTextureGuids: TArray<UE.Guid>;
        LevelBuildDataId: UE.Guid;
        MapBuildData: UE.MapBuildDataRegistry;
        LightBuildLevelOffset: UE.IntVector;
        bIsLightingScenario: boolean;
        bTextureStreamingRotationChanged: boolean;
        bStaticComponentsRegisteredInStreamingManager: boolean;
        bIsVisible: boolean;
        bLocked: boolean;
        LevelSimplification: FixSizeArray<UE.LevelSimplificationDetails>;
        LevelColor: UE.LinearColor;
        bLevelOkayForPlacementWhileCheckedIn: boolean;
        bUseExternalActors: boolean;
        WorldSettings: UE.WorldSettings;
        AssetUserData: TArray<UE.AssetUserData>;
        DestroyedReplicatedStaticActors: TArray<UE.ReplicatedStaticActorDestructionInfo>;
        LevelPartition: LevelPartitionInterface;
        OwnerLevelPartition: TSoftObjectPtr<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Level;
        static Load(InName: string): Level;
    
        __tid_Level_0__: boolean;
    }
    
    class LineBatchComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LineBatchComponent;
        static Load(InName: string): LineBatchComponent;
    
        __tid_LineBatchComponent_0__: boolean;
    }
    
    class GameNetworkManager extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BadPacketLossThreshold: number;
        SeverePacketLossThreshold: number;
        BadPingThreshold: number;
        SeverePingThreshold: number;
        AdjustedNetSpeed: number;
        LastNetSpeedUpdateTime: number;
        TotalNetBandwidth: number;
        MinDynamicBandwidth: number;
        MaxDynamicBandwidth: number;
        bIsStandbyCheckingEnabled: boolean;
        bHasStandbyCheatTriggered: boolean;
        StandbyRxCheatTime: number;
        StandbyTxCheatTime: number;
        PercentMissingForRxStandby: number;
        PercentMissingForTxStandby: number;
        PercentForBadPing: number;
        JoinInProgressStandbyWaitTime: number;
        MoveRepSize: number;
        MAXPOSITIONERRORSQUARED: number;
        MAXNEARZEROVELOCITYSQUARED: number;
        CLIENTADJUSTUPDATECOST: number;
        MAXCLIENTUPDATEINTERVAL: number;
        MaxClientForcedUpdateDuration: number;
        ServerForcedUpdateHitchThreshold: number;
        ServerForcedUpdateHitchCooldown: number;
        MaxMoveDeltaTime: number;
        MaxClientSmoothingDeltaTime: number;
        ClientNetSendMoveDeltaTime: number;
        ClientNetSendMoveDeltaTimeThrottled: number;
        ClientNetSendMoveDeltaTimeStationary: number;
        ClientNetSendMoveThrottleAtNetSpeed: number;
        ClientNetSendMoveThrottleOverPlayerCount: number;
        ClientAuthorativePosition: boolean;
        ClientErrorUpdateRateLimit: number;
        ClientNetCamUpdateDeltaTime: number;
        ClientNetCamUpdatePositionLimit: number;
        bMovementTimeDiscrepancyDetection: boolean;
        bMovementTimeDiscrepancyResolution: boolean;
        MovementTimeDiscrepancyMaxTimeMargin: number;
        MovementTimeDiscrepancyMinTimeMargin: number;
        MovementTimeDiscrepancyResolutionRate: number;
        MovementTimeDiscrepancyDriftAllowance: number;
        bMovementTimeDiscrepancyForceCorrectionsDuringResolution: boolean;
        bUseDistanceBasedRelevancy: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameNetworkManager;
        static Load(InName: string): GameNetworkManager;
    
        __tid_GameNetworkManager_0__: boolean;
    }
    
    class PhysicsCollisionHandler extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImpactThreshold: number;
        ImpactReFireDelay: number;
        DefaultImpactSound: UE.SoundBase;
        LastImpactSoundTime: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsCollisionHandler;
        static Load(InName: string): PhysicsCollisionHandler;
    
        __tid_PhysicsCollisionHandler_0__: boolean;
    }
    
    enum EStreamingVolumeUsage { SVB_Loading, SVB_LoadingAndVisibility, SVB_VisibilityBlockingOnLoad, SVB_BlockingOnLoad, SVB_LoadingNotVisible, SVB_MAX, __typeKeyDoNoAccess}
    class LevelStreamingVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StreamingLevelNames: TArray<string>;
        bEditorPreVisOnly: boolean;
        bDisabled: boolean;
        StreamingUsage: UE.EStreamingVolumeUsage;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelStreamingVolume;
        static Load(InName: string): LevelStreamingVolume;
    
        __tid_LevelStreamingVolume_0__: boolean;
    }
    
    class LevelStreaming extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PackageName: string;
        WorldAsset: TSoftObjectPtr<UE.World>;
        PackageNameToLoad: string;
        LODPackageNames: TArray<string>;
        LevelTransform: UE.Transform;
        LevelLODIndex: number;
        StreamingPriority: number;
        bShouldBeVisibleInEditor: boolean;
        bShouldBeVisible: boolean;
        bShouldBeLoaded: boolean;
        bLocked: boolean;
        bIsStatic: boolean;
        bShouldBlockOnLoad: boolean;
        bShouldBlockOnUnload: boolean;
        bDisableDistanceStreaming: boolean;
        bDrawOnLevelStatusMap: boolean;
        DrawColor: UE.Color;
        LevelColor: UE.LinearColor;
        EditorStreamingVolumes: TArray<UE.LevelStreamingVolume>;
        MinTimeBetweenVolumeUnloadRequests: number;
        Keywords: TArray<string>;
        OnLevelLoaded: $MulticastDelegate<() => void>;
        OnLevelUnloaded: $MulticastDelegate<() => void>;
        OnLevelShown: $MulticastDelegate<() => void>;
        OnLevelHidden: $MulticastDelegate<() => void>;
        LoadedLevel: UE.Level;
        PendingUnloadLevel: UE.Level;
        FolderPath: string;
        CreateInstance(UniqueInstanceName: string) : UE.LevelStreaming;
        GetIsRequestingUnloadAndRemoval() : boolean;
        GetLevelScriptActor() : UE.LevelScriptActor;
        GetLoadedLevel() : UE.Level;
        GetWorldAssetPackageFName() : string;
        IsLevelLoaded() : boolean;
        IsLevelVisible() : boolean;
        IsStreamingStatePending() : boolean;
        SetIsRequestingUnloadAndRemoval(bInIsRequestingUnloadAndRemoval: boolean) : void;
        SetLevelLODIndex(LODIndex: number) : void;
        SetPriority(NewPriority: number) : void;
        SetShouldBeLoaded(bInShouldBeLoaded: boolean) : void;
        SetShouldBeVisible(bInShouldBeVisible: boolean) : void;
        ShouldBeLoaded() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelStreaming;
        static Load(InName: string): LevelStreaming;
    
        __tid_LevelStreaming_0__: boolean;
    }
    
    class StreamingLevelsToConsider {
        constructor();
        constructor(StreamingLevels: TArray<UE.LevelStreaming>);
        StreamingLevels: TArray<UE.LevelStreaming>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StreamingLevelsToConsider_0__: boolean;
    }
    
    class RollbackNetStartupActorInfo {
        constructor();
        constructor(Archetype: UE.Object, Level: UE.Level, ObjReferences: TArray<UE.Object>);
        Archetype: UE.Object;
        Level: UE.Level;
        ObjReferences: TArray<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RollbackNetStartupActorInfo_0__: boolean;
    }
    
    class MulticastRecordOptions {
        constructor();
        constructor(FuncPathName: string, bServerSkip: boolean, bClientSkip: boolean);
        FuncPathName: string;
        bServerSkip: boolean;
        bClientSkip: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MulticastRecordOptions_0__: boolean;
    }
    
    class DemoNetDriver extends UE.NetDriver {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RollbackNetStartupActors: TMap<string, UE.RollbackNetStartupActorInfo>;
        CheckpointSaveMaxMSPerFrame: number;
        MulticastRecordOptions: TArray<UE.MulticastRecordOptions>;
        bIsLocalReplay: boolean;
        SpectatorControllers: TArray<UE.PlayerController>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DemoNetDriver;
        static Load(InName: string): DemoNetDriver;
    
        __tid_DemoNetDriver_0__: boolean;
    }
    
    class ParticleEventManager extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleEventManager;
        static Load(InName: string): ParticleEventManager;
    
        __tid_ParticleEventManager_0__: boolean;
    }
    
    class NavigationSystemBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationSystemBase;
        static Load(InName: string): NavigationSystemBase;
    
        __tid_NavigationSystemBase_0__: boolean;
    }
    
    class GameSession extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxSpectators: number;
        MaxPlayers: number;
        MaxPartySize: number;
        MaxSplitscreensPerConnection: number;
        bRequiresPushToTalk: boolean;
        SessionName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameSession;
        static Load(InName: string): GameSession;
    
        __tid_GameSession_0__: boolean;
    }
    
    class GameStateBase extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GameModeClass: UE.Class;
        AuthorityGameMode: UE.GameModeBase;
        SpectatorClass: UE.Class;
        PlayerArray: TArray<UE.PlayerState>;
        bReplicatedHasBegunPlay: boolean;
        ReplicatedWorldTimeSeconds: number;
        ServerWorldTimeSecondsDelta: number;
        ServerWorldTimeSecondsUpdateFrequency: number;
        GetPlayerRespawnDelay(Controller: $Nullable<UE.Controller>) : number;
        GetPlayerStartTime(Controller: $Nullable<UE.Controller>) : number;
        GetServerWorldTimeSeconds() : number;
        HasBegunPlay() : boolean;
        HasMatchEnded() : boolean;
        HasMatchStarted() : boolean;
        OnRep_GameModeClass() : void;
        OnRep_ReplicatedHasBegunPlay() : void;
        OnRep_ReplicatedWorldTimeSeconds() : void;
        OnRep_SpectatorClass() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameStateBase;
        static Load(InName: string): GameStateBase;
    
        __tid_GameStateBase_0__: boolean;
    }
    
    class ServerStatReplicator extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUpdateStatNet: boolean;
        bOverwriteClientStats: boolean;
        Channels: number;
        InRate: number;
        OutRate: number;
        MaxPacketOverhead: number;
        InRateClientMax: number;
        InRateClientMin: number;
        InRateClientAvg: number;
        InPacketsClientMax: number;
        InPacketsClientMin: number;
        InPacketsClientAvg: number;
        OutRateClientMax: number;
        OutRateClientMin: number;
        OutRateClientAvg: number;
        OutPacketsClientMax: number;
        OutPacketsClientMin: number;
        OutPacketsClientAvg: number;
        NetNumClients: number;
        InPackets: number;
        OutPackets: number;
        InBunches: number;
        OutBunches: number;
        OutLoss: number;
        InLoss: number;
        VoiceBytesSent: number;
        VoiceBytesRecv: number;
        VoicePacketsSent: number;
        VoicePacketsRecv: number;
        PercentInVoice: number;
        PercentOutVoice: number;
        NumActorChannels: number;
        NumConsideredActors: number;
        PrioritizedActors: number;
        NumRelevantActors: number;
        NumRelevantDeletedActors: number;
        NumReplicatedActorAttempts: number;
        NumReplicatedActors: number;
        NumActors: number;
        NumNetActors: number;
        NumDormantActors: number;
        NumInitiallyDormantActors: number;
        NumNetGUIDsAckd: number;
        NumNetGUIDsPending: number;
        NumNetGUIDsUnAckd: number;
        ObjPathBytes: number;
        NetGUIDOutRate: number;
        NetGUIDInRate: number;
        NetSaturated: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ServerStatReplicator;
        static Load(InName: string): ServerStatReplicator;
    
        __tid_ServerStatReplicator_0__: boolean;
    }
    
    class GameModeBase extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OptionsString: string;
        GameSessionClass: UE.Class;
        GameStateClass: UE.Class;
        PlayerControllerClass: UE.Class;
        PlayerStateClass: UE.Class;
        HUDClass: UE.Class;
        DefaultPawnClass: UE.Class;
        SpectatorClass: UE.Class;
        ReplaySpectatorPlayerControllerClass: UE.Class;
        ServerStatReplicatorClass: UE.Class;
        GameSession: UE.GameSession;
        GameState: UE.GameStateBase;
        ServerStatReplicator: UE.ServerStatReplicator;
        DefaultPlayerName: string;
        bUseSeamlessTravel: boolean;
        bStartPlayersAsSpectators: boolean;
        bPauseable: boolean;
        CanSpectate(Viewer: $Nullable<UE.PlayerController>, ViewTarget: $Nullable<UE.PlayerState>) : boolean;
        ChangeName(Controller: $Nullable<UE.Controller>, NewName: string, bNameChange: boolean) : void;
        ChoosePlayerStart(Player: $Nullable<UE.Controller>) : UE.Actor;
        FindPlayerStart(Player: $Nullable<UE.Controller>, IncomingName: string) : UE.Actor;
        GetDefaultPawnClassForController(InController: $Nullable<UE.Controller>) : UE.Class;
        GetNumPlayers() : number;
        GetNumSpectators() : number;
        HandleStartingNewPlayer(NewPlayer: $Nullable<UE.PlayerController>) : void;
        HasMatchEnded() : boolean;
        HasMatchStarted() : boolean;
        InitializeHUDForPlayer(NewPlayer: $Nullable<UE.PlayerController>) : void;
        InitStartSpot(StartSpot: $Nullable<UE.Actor>, NewPlayer: $Nullable<UE.Controller>) : void;
        K2_FindPlayerStart(Player: $Nullable<UE.Controller>, IncomingName?: string /* = "" */) : UE.Actor;
        K2_OnChangeName(Other: $Nullable<UE.Controller>, NewName: string, bNameChange: boolean) : void;
        K2_OnLogout(ExitingController: $Nullable<UE.Controller>) : void;
        K2_OnRestartPlayer(NewPlayer: $Nullable<UE.Controller>) : void;
        K2_OnSwapPlayerControllers(OldPC: $Nullable<UE.PlayerController>, NewPC: $Nullable<UE.PlayerController>) : void;
        K2_PostLogin(NewPlayer: $Nullable<UE.PlayerController>) : void;
        MustSpectate(NewPlayerController: $Nullable<UE.PlayerController>) : boolean;
        PlayerCanRestart(Player: $Nullable<UE.PlayerController>) : boolean;
        ResetLevel() : void;
        RestartPlayer(NewPlayer: $Nullable<UE.Controller>) : void;
        RestartPlayerAtPlayerStart(NewPlayer: $Nullable<UE.Controller>, StartSpot: $Nullable<UE.Actor>) : void;
        RestartPlayerAtTransform(NewPlayer: $Nullable<UE.Controller>, SpawnTransform: UE.Transform) : void;
        ReturnToMainMenuHost() : void;
        ShouldReset(ActorToReset: $Nullable<UE.Actor>) : boolean;
        SpawnDefaultPawnAtTransform(NewPlayer: $Nullable<UE.Controller>, SpawnTransform: UE.Transform) : UE.Pawn;
        SpawnDefaultPawnFor(NewPlayer: $Nullable<UE.Controller>, StartSpot: $Nullable<UE.Actor>) : UE.Pawn;
        StartPlay() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameModeBase;
        static Load(InName: string): GameModeBase;
    
        __tid_GameModeBase_0__: boolean;
    }
    
    class AISystemBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AISystemClassName: UE.SoftClassPath;
        AISystemModuleName: string;
        bInstantiateAISystemOnClient: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISystemBase;
        static Load(InName: string): AISystemBase;
    
        __tid_AISystemBase_0__: boolean;
    }
    
    class AvoidanceManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultTimeToLive: number;
        LockTimeAfterAvoid: number;
        LockTimeAfterClean: number;
        DeltaTimeToPredict: number;
        ArtificialRadiusExpansion: number;
        TestHeightDifference: number;
        HeightCheckMargin: number;
        GetAvoidanceVelocityForComponent(MovementComp: $Nullable<UE.MovementComponent>) : UE.Vector;
        GetNewAvoidanceUID() : number;
        GetObjectCount() : number;
        RegisterMovementComponent(MovementComp: $Nullable<UE.MovementComponent>, AvoidanceWeight?: number /* = 0.500000 */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AvoidanceManager;
        static Load(InName: string): AvoidanceManager;
    
        __tid_AvoidanceManager_0__: boolean;
    }
    
    class LevelCollection {
        constructor();
        constructor(GameState: UE.GameStateBase, NetDriver: UE.NetDriver, DemoNetDriver: UE.DemoNetDriver, PersistentLevel: UE.Level, Levels: TSet<UE.Level>);
        GameState: UE.GameStateBase;
        NetDriver: UE.NetDriver;
        DemoNetDriver: UE.DemoNetDriver;
        PersistentLevel: UE.Level;
        Levels: TSet<UE.Level>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelCollection_0__: boolean;
    }
    
    class ScriptViewportClient extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScriptViewportClient;
        static Load(InName: string): ScriptViewportClient;
    
        __tid_ScriptViewportClient_0__: boolean;
    }
    
    class Console extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConsoleTargetPlayer: UE.LocalPlayer;
        DefaultTexture_Black: UE.Texture2D;
        DefaultTexture_White: UE.Texture2D;
        HistoryBuffer: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Console;
        static Load(InName: string): Console;
    
        __tid_Console_0__: boolean;
    }
    
    class DebugDisplayProperty {
        constructor();
        constructor(Obj: UE.Object, WithinClass: UE.Class);
        Obj: UE.Object;
        WithinClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DebugDisplayProperty_0__: boolean;
    }
    
    class GameViewportClient extends UE.ScriptViewportClient {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ViewportConsole: UE.Console;
        DebugProperties: TArray<UE.DebugDisplayProperty>;
        MaxSplitscreenPlayers: number;
        World: UE.World;
        GameInstance: UE.GameInstance;
        SetConsoleTarget(PlayerIndex: number) : void;
        ShowTitleSafeArea() : void;
        SSSwapControllers() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameViewportClient;
        static Load(InName: string): GameViewportClient;
    
        __tid_GameViewportClient_0__: boolean;
    }
    
    enum EAspectRatioAxisConstraint { AspectRatio_MaintainYFOV, AspectRatio_MaintainXFOV, AspectRatio_MajorAxisFOV, AspectRatio_MAX, __typeKeyDoNoAccess}
    class LocalPlayer extends UE.Player {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ViewportClient: UE.GameViewportClient;
        AspectRatioAxisConstraint: UE.EAspectRatioAxisConstraint;
        PendingLevelPlayerControllerClass: UE.Class;
        bSentSplitJoin: boolean;
        ControllerId: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalPlayer;
        static Load(InName: string): LocalPlayer;
    
        __tid_LocalPlayer_0__: boolean;
    }
    
    class OnlineSession extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineSession;
        static Load(InName: string): OnlineSession;
    
        __tid_OnlineSession_0__: boolean;
    }
    
    enum ETravelFailure { NoLevel, LoadMapFailure, InvalidURL, PackageMissing, PackageVersion, NoDownload, TravelFailure, CheatCommands, PendingNetGameCreateFailure, CloudSaveFailure, ServerTravelFailure, ClientTravelFailure, ETravelFailure_MAX, __typeKeyDoNoAccess}
    enum ENetworkFailure { NetDriverAlreadyExists, NetDriverCreateFailure, NetDriverListenFailure, ConnectionLost, ConnectionTimeout, FailureReceived, OutdatedClient, OutdatedServer, PendingConnectionFailure, NetGuidMismatch, NetChecksumMismatch, ENetworkFailure_MAX, __typeKeyDoNoAccess}
    class GameInstance extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LocalPlayers: TArray<UE.LocalPlayer>;
        OnlineSession: UE.OnlineSession;
        ReferencedObjects: TArray<UE.Object>;
        OnPawnControllerChangedDelegates: $MulticastDelegate<(Pawn: $Nullable<UE.Pawn>, Controller: $Nullable<UE.Controller>) => void>;
        DebugCreatePlayer(ControllerId: number) : void;
        DebugRemovePlayer(ControllerId: number) : void;
        HandleNetworkError(FailureType: UE.ENetworkFailure, bIsServer: boolean) : void;
        HandleTravelError(FailureType: UE.ETravelFailure) : void;
        ReceiveInit() : void;
        ReceiveShutdown() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameInstance;
        static Load(InName: string): GameInstance;
    
        __tid_GameInstance_0__: boolean;
    }
    
    class MaterialParameterCollectionInstance extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Collection: UE.MaterialParameterCollection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialParameterCollectionInstance;
        static Load(InName: string): MaterialParameterCollectionInstance;
    
        __tid_MaterialParameterCollectionInstance_0__: boolean;
    }
    
    class LevelViewportInfo {
        constructor();
        constructor(CamPosition: UE.Vector, CamRotation: UE.Rotator, CamOrthoZoom: number, CamUpdated: boolean);
        CamPosition: UE.Vector;
        CamRotation: UE.Rotator;
        CamOrthoZoom: number;
        CamUpdated: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelViewportInfo_0__: boolean;
    }
    
    class WorldComposition extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TilesStreaming: TArray<UE.LevelStreaming>;
        TilesStreamingTimeThreshold: number;
        bLoadAllTilesDuringCinematic: boolean;
        bRebaseOriginIn3DSpace: boolean;
        bLockTilesLocation: boolean;
        RebaseOriginDistance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WorldComposition;
        static Load(InName: string): WorldComposition;
    
        __tid_WorldComposition_0__: boolean;
    }
    
    class PSCPoolElem {
        constructor();
        constructor(PSC: UE.ParticleSystemComponent);
        PSC: UE.ParticleSystemComponent;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PSCPoolElem_0__: boolean;
    }
    
    class PSCPool {
        constructor();
        constructor(FreeElements: TArray<UE.PSCPoolElem>, InUseComponents_Auto: TArray<UE.ParticleSystemComponent>, InUseComponents_Manual: TArray<UE.ParticleSystemComponent>);
        FreeElements: TArray<UE.PSCPoolElem>;
        InUseComponents_Auto: TArray<UE.ParticleSystemComponent>;
        InUseComponents_Manual: TArray<UE.ParticleSystemComponent>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PSCPool_0__: boolean;
    }
    
    class WorldPSCPool {
        constructor();
        constructor(WorldParticleSystemPools: TMap<UE.ParticleSystem, UE.PSCPool>);
        WorldParticleSystemPools: TMap<UE.ParticleSystem, UE.PSCPool>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WorldPSCPool_0__: boolean;
    }
    
    enum ESpawnActorCollisionHandlingMethod { Undefined, AlwaysSpawn, AdjustIfPossibleButAlwaysSpawn, AdjustIfPossibleButDontSpawnIfColliding, DontSpawnIfColliding, ESpawnActorCollisionHandlingMethod_MAX, __typeKeyDoNoAccess}
    class World extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Layers: TArray<UE.Layer>;
        ActiveGroupActors: TArray<UE.Actor>;
        ThumbnailInfo: UE.ThumbnailInfo;
        PersistentLevel: UE.Level;
        NetDriver: UE.NetDriver;
        LineBatcher: UE.LineBatchComponent;
        PersistentLineBatcher: UE.LineBatchComponent;
        ForegroundLineBatcher: UE.LineBatchComponent;
        NetworkManager: UE.GameNetworkManager;
        PhysicsCollisionHandler: UE.PhysicsCollisionHandler;
        ExtraReferencedObjects: TArray<UE.Object>;
        PerModuleDataObjects: TArray<UE.Object>;
        StreamingLevels: TArray<UE.LevelStreaming>;
        StreamingLevelsToConsider: UE.StreamingLevelsToConsider;
        StreamingLevelsPrefix: string;
        CurrentLevelPendingVisibility: UE.Level;
        CurrentLevelPendingInvisibility: UE.Level;
        DemoNetDriver: UE.DemoNetDriver;
        MyParticleEventManager: UE.ParticleEventManager;
        DefaultPhysicsVolume: UE.PhysicsVolume;
        bAreConstraintsDirty: boolean;
        NavigationSystem: UE.NavigationSystemBase;
        AuthorityGameMode: UE.GameModeBase;
        GameState: UE.GameStateBase;
        AISystem: UE.AISystemBase;
        AvoidanceManager: UE.AvoidanceManager;
        Levels: TArray<UE.Level>;
        LevelCollections: TArray<UE.LevelCollection>;
        CurrentLevel: UE.Level;
        OwningGameInstance: UE.GameInstance;
        ParameterCollectionInstances: TArray<UE.MaterialParameterCollectionInstance>;
        CanvasForRenderingToTarget: UE.Canvas;
        CanvasForDrawMaterialToRenderTarget: UE.Canvas;
        EditorViews: TArray<UE.LevelViewportInfo>;
        ComponentsThatNeedPreEndOfFrameSync: TSet<UE.ActorComponent>;
        ComponentsThatNeedEndOfFrameUpdate: TArray<UE.ActorComponent>;
        ComponentsThatNeedEndOfFrameUpdate_OnGameThread: TArray<UE.ActorComponent>;
        SelectedLevels: TArray<UE.Level>;
        WorldComposition: UE.WorldComposition;
        PSCPool: UE.WorldPSCPool;
        HandleTimelineScrubbed() : void;
        K2_GetWorldSettings() : UE.WorldSettings;
        SpawnActor(Class: $Nullable<UE.Class>, Transform: UE.Transform, SpawnCollisionHandlingOverride: UE.ESpawnActorCollisionHandlingMethod, Owner: $Nullable<UE.Actor>, Instigator: $Nullable<UE.Pawn>) : UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): World;
        static Load(InName: string): World;
    
        __tid_World_0__: boolean;
    }
    
    class Package extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Package;
        static Load(InName: string): Package;
    
        __tid_Package_0__: boolean;
    }
    
    class ChannelDefinition {
        constructor();
        constructor(ChannelName: string, ClassName: string, ChannelClass: UE.Class, StaticChannelIndex: number, bTickOnCreate: boolean, bServerOpen: boolean, bClientOpen: boolean, bInitialServer: boolean, bInitialClient: boolean);
        ChannelName: string;
        ClassName: string;
        ChannelClass: UE.Class;
        StaticChannelIndex: number;
        bTickOnCreate: boolean;
        bServerOpen: boolean;
        bClientOpen: boolean;
        bInitialServer: boolean;
        bInitialClient: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChannelDefinition_0__: boolean;
    }
    
    class Channel extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Connection: UE.NetConnection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Channel;
        static Load(InName: string): Channel;
    
        __tid_Channel_0__: boolean;
    }
    
    class ReplicationDriver extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReplicationDriver;
        static Load(InName: string): ReplicationDriver;
    
        __tid_ReplicationDriver_0__: boolean;
    }
    
    class NetDriver extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NetConnectionClassName: string;
        ReplicationDriverClassName: string;
        MaxDownloadSize: number;
        bClampListenServerTickRate: boolean;
        NetServerMaxTickRate: number;
        MaxNetTickRate: number;
        MaxInternetClientRate: number;
        MaxClientRate: number;
        ServerTravelPause: number;
        SpawnPrioritySeconds: number;
        RelevantTimeout: number;
        KeepAliveTime: number;
        InitialConnectTimeout: number;
        ConnectionTimeout: number;
        TimeoutMultiplierForUnoptimizedBuilds: number;
        bNoTimeouts: boolean;
        bNeverApplyNetworkEmulationSettings: boolean;
        ServerConnection: UE.NetConnection;
        ClientConnections: TArray<UE.NetConnection>;
        RecentlyDisconnectedTrackingTime: number;
        World: UE.World;
        WorldPackage: UE.Package;
        NetConnectionClass: UE.Class;
        ReplicationDriverClass: UE.Class;
        NetDriverName: string;
        ChannelDefinitions: TArray<UE.ChannelDefinition>;
        ChannelDefinitionMap: TMap<string, UE.ChannelDefinition>;
        ActorChannelPool: TArray<UE.Channel>;
        Time: number;
        ReplicationDriver: UE.ReplicationDriver;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NetDriver;
        static Load(InName: string): NetDriver;
    
        __tid_NetDriver_0__: boolean;
    }
    
    class PackageMap extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PackageMap;
        static Load(InName: string): PackageMap;
    
        __tid_PackageMap_0__: boolean;
    }
    
    class NetConnection extends UE.Player {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Children: TArray<UE.ChildConnection>;
        Driver: UE.NetDriver;
        PackageMapClass: UE.Class;
        PackageMap: UE.PackageMap;
        OpenChannels: TArray<UE.Channel>;
        SentTemporaries: TArray<UE.Actor>;
        ViewTarget: UE.Actor;
        OwningActor: UE.Actor;
        MaxPacket: number;
        InternalAck: boolean;
        PlayerId: UE.UniqueNetIdRepl;
        LastReceiveTime: number;
        ChannelsToTick: TArray<UE.Channel>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NetConnection;
        static Load(InName: string): NetConnection;
    
        __tid_NetConnection_0__: boolean;
    }
    
    enum EMouseCursor { None, Default, TextEditBeam, ResizeLeftRight, ResizeUpDown, ResizeSouthEast, ResizeSouthWest, CardinalCross, Crosshairs, Hand, GrabHand, GrabHandClosed, SlashedCircle, EyeDropper, EMouseCursor_MAX, __typeKeyDoNoAccess}
    class CachedKeyToActionInfo {
        constructor();
        constructor(PlayerInput: UE.PlayerInput);
        PlayerInput: UE.PlayerInput;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedKeyToActionInfo_0__: boolean;
    }
    
    enum EControllerAnalogStick { CAS_LeftStick, CAS_RightStick, CAS_MAX, __typeKeyDoNoAccess}
    class InputComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CachedKeyToActionInfo: TArray<UE.CachedKeyToActionInfo>;
        GetControllerAnalogKeyState(Key: UE.Key) : number;
        GetControllerAnalogStickState(WhichStick: UE.EControllerAnalogStick, StickX: $Ref<number>, StickY: $Ref<number>) : void;
        GetControllerKeyTimeDown(Key: UE.Key) : number;
        GetControllerMouseDelta(DeltaX: $Ref<number>, DeltaY: $Ref<number>) : void;
        GetControllerVectorKeyState(Key: UE.Key) : UE.Vector;
        GetTouchState(FingerIndex: number, LocationX: $Ref<number>, LocationY: $Ref<number>, bIsCurrentlyPressed: $Ref<boolean>) : void;
        IsControllerKeyDown(Key: UE.Key) : boolean;
        WasControllerKeyJustPressed(Key: UE.Key) : boolean;
        WasControllerKeyJustReleased(Key: UE.Key) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputComponent;
        static Load(InName: string): InputComponent;
    
        __tid_InputComponent_0__: boolean;
    }
    
    class TouchInputControl {
        constructor();
        constructor(Image1: UE.Texture2D, Image2: UE.Texture2D, Center: UE.Vector2D, VisualSize: UE.Vector2D, ThumbSize: UE.Vector2D, InteractionSize: UE.Vector2D, InputScale: UE.Vector2D, MainInputKey: UE.Key, AltInputKey: UE.Key);
        Image1: UE.Texture2D;
        Image2: UE.Texture2D;
        Center: UE.Vector2D;
        VisualSize: UE.Vector2D;
        ThumbSize: UE.Vector2D;
        InteractionSize: UE.Vector2D;
        InputScale: UE.Vector2D;
        MainInputKey: UE.Key;
        AltInputKey: UE.Key;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TouchInputControl_0__: boolean;
    }
    
    class TouchInterface extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Controls: TArray<UE.TouchInputControl>;
        ActiveOpacity: number;
        InactiveOpacity: number;
        TimeUntilDeactive: number;
        TimeUntilReset: number;
        ActivationDelay: number;
        bPreventRecenter: boolean;
        StartupDelay: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TouchInterface;
        static Load(InName: string): TouchInterface;
    
        __tid_TouchInterface_0__: boolean;
    }
    
    class SphereComponent extends UE.ShapeComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SphereRadius: number;
        GetScaledSphereRadius() : number;
        GetShapeScale() : number;
        GetUnscaledSphereRadius() : number;
        SetSphereRadius(InSphereRadius: number, bUpdateOverlaps?: boolean /* = true */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SphereComponent;
        static Load(InName: string): SphereComponent;
    
        __tid_SphereComponent_0__: boolean;
    }
    
    class StaticMeshComponentLODInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticMeshComponentLODInfo_0__: boolean;
    }
    
    class StreamingTextureBuildInfo {
        constructor();
        constructor(PackedRelativeBox: number, TextureLevelIndex: number, TexelFactor: number);
        PackedRelativeBox: number;
        TextureLevelIndex: number;
        TexelFactor: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StreamingTextureBuildInfo_0__: boolean;
    }
    
    class LightmassPrimitiveSettings {
        constructor();
        constructor(bUseTwoSidedLighting: boolean, bShadowIndirectOnly: boolean, bUseEmissiveForStaticLighting: boolean, bUseVertexNormalForHemisphereGather: boolean, EmissiveLightFalloffExponent: number, EmissiveLightExplicitInfluenceRadius: number, EmissiveBoost: number, DiffuseBoost: number, FullyOccludedSamplesFraction: number);
        bUseTwoSidedLighting: boolean;
        bShadowIndirectOnly: boolean;
        bUseEmissiveForStaticLighting: boolean;
        bUseVertexNormalForHemisphereGather: boolean;
        EmissiveLightFalloffExponent: number;
        EmissiveLightExplicitInfluenceRadius: number;
        EmissiveBoost: number;
        DiffuseBoost: number;
        FullyOccludedSamplesFraction: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassPrimitiveSettings_0__: boolean;
    }
    
    class StaticMeshComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ForcedLodModel: number;
        PreviousLODLevel: number;
        MinLOD: number;
        SubDivisionStepSize: number;
        StaticMesh: UE.StaticMesh;
        WireframeColorOverride: UE.Color;
        bEvaluateWorldPositionOffset: boolean;
        SelectedEditorSection: number;
        SelectedEditorMaterial: number;
        SectionIndexPreview: number;
        MaterialIndexPreview: number;
        StaticMeshImportVersion: number;
        bOverrideWireframeColor: boolean;
        bOverrideMinLOD: boolean;
        bOverrideNavigationExport: boolean;
        bForceNavigationObstacle: boolean;
        bDisallowMeshPaintPerInstance: boolean;
        bIgnoreInstanceForTextureStreaming: boolean;
        bOverrideLightMapRes: boolean;
        bCastDistanceFieldIndirectShadow: boolean;
        bOverrideDistanceFieldSelfShadowBias: boolean;
        bUseSubDivisions: boolean;
        bUseDefaultCollision: boolean;
        bCustomOverrideVertexColorPerLOD: boolean;
        bDisplayVertexColors: boolean;
        bDisplayPhysicalMaterialMasks: boolean;
        bReverseCulling: boolean;
        OverriddenLightMapRes: number;
        DistanceFieldIndirectShadowMinVisibility: number;
        DistanceFieldSelfShadowBias: number;
        StreamingDistanceMultiplier: number;
        IrrelevantLights: TArray<UE.Guid>;
        LODData: TArray<UE.StaticMeshComponentLODInfo>;
        StreamingTextureData: TArray<UE.StreamingTextureBuildInfo>;
        StaticMeshDerivedDataKey: string;
        MaterialStreamingRelativeBoxes: TArray<number>;
        LightmassSettings: UE.LightmassPrimitiveSettings;
        GetLocalBounds(Min: $Ref<UE.Vector>, Max: $Ref<UE.Vector>) : void;
        OnRep_StaticMesh(OldStaticMesh: $Nullable<UE.StaticMesh>) : void;
        SetDistanceFieldSelfShadowBias(NewValue: number) : void;
        SetEvaluateWorldPositionOffsetInRayTracing(NewValue: boolean) : void;
        SetForcedLodModel(NewForcedLodModel: number) : void;
        SetReverseCulling(ReverseCulling: boolean) : void;
        SetStaticMesh(NewMesh: $Nullable<UE.StaticMesh>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshComponent;
        static Load(InName: string): StaticMeshComponent;
    
        __tid_StaticMeshComponent_0__: boolean;
    }
    
    class DefaultPawn extends UE.Pawn {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseTurnRate: number;
        BaseLookUpRate: number;
        MovementComponent: UE.PawnMovementComponent;
        CollisionComponent: UE.SphereComponent;
        MeshComponent: UE.StaticMeshComponent;
        bAddDefaultMovementBindings: boolean;
        LookUpAtRate(Rate: number) : void;
        MoveForward(Val: number) : void;
        MoveRight(Val: number) : void;
        MoveUp_World(Val: number) : void;
        TurnAtRate(Rate: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DefaultPawn;
        static Load(InName: string): DefaultPawn;
    
        __tid_DefaultPawn_0__: boolean;
    }
    
    class SpectatorPawn extends UE.DefaultPawn {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpectatorPawn;
        static Load(InName: string): SpectatorPawn;
    
        __tid_SpectatorPawn_0__: boolean;
    }
    
    enum EControllerHand { Left, Right, AnyHand, Pad, ExternalCamera, Gun, Special_1, Special_2, Special_3, Special_4, Special_5, Special_6, Special_7, Special_8, Special_9, Special_10, Special_11, ControllerHand_Count, EControllerHand_MAX, __typeKeyDoNoAccess}
    enum EViewTargetBlendFunction { VTBlend_Linear, VTBlend_Cubic, VTBlend_EaseIn, VTBlend_EaseOut, VTBlend_EaseInOut, VTBlend_MAX, __typeKeyDoNoAccess}
    class Visual extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Visual;
        static Load(InName: string): Visual;
    
        __tid_Visual_0__: boolean;
    }
    
    class PanelWidget extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Slots: TArray<UE.PanelSlot>;
        AddChild(Content: $Nullable<UE.Widget>) : UE.PanelSlot;
        ClearChildren() : void;
        GetAllChildren() : TArray<UE.Widget>;
        GetChildAt(Index: number) : UE.Widget;
        GetChildIndex(Content: $Nullable<UE.Widget>) : number;
        GetChildrenCount() : number;
        HasAnyChildren() : boolean;
        HasChild(Content: $Nullable<UE.Widget>) : boolean;
        RemoveChild(Content: $Nullable<UE.Widget>) : boolean;
        RemoveChildAt(Index: number) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PanelWidget;
        static Load(InName: string): PanelWidget;
    
        __tid_PanelWidget_0__: boolean;
    }
    
    class PanelSlot extends UE.Visual {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Parent: UE.PanelWidget;
        Content: UE.Widget;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PanelSlot;
        static Load(InName: string): PanelSlot;
    
        __tid_PanelSlot_0__: boolean;
    }
    
    enum ESlateVisibility { Visible, Collapsed, Hidden, HitTestInvisible, SelfHitTestInvisible, ESlateVisibility_MAX, __typeKeyDoNoAccess}
    class WidgetTransform {
        constructor();
        constructor(Translation: UE.Vector2D, Scale: UE.Vector2D, Shear: UE.Vector2D, Angle: number);
        Translation: UE.Vector2D;
        Scale: UE.Vector2D;
        Shear: UE.Vector2D;
        Angle: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetTransform_0__: boolean;
    }
    
    enum ESlateAccessibleBehavior { NotAccessible, Auto, Summary, Custom, ToolTip, ESlateAccessibleBehavior_MAX, __typeKeyDoNoAccess}
    class SlateAccessibleWidgetData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCanChildrenBeAccessible: boolean;
        AccessibleBehavior: UE.ESlateAccessibleBehavior;
        AccessibleSummaryBehavior: UE.ESlateAccessibleBehavior;
        AccessibleText: string;
        AccessibleTextDelegate: $Delegate<() => string>;
        AccessibleSummaryText: string;
        AccessibleSummaryTextDelegate: $Delegate<() => string>;
        GetText__DelegateSignature() : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateAccessibleWidgetData;
        static Load(InName: string): SlateAccessibleWidgetData;
    
        __tid_SlateAccessibleWidgetData_0__: boolean;
    }
    
    enum EWidgetClipping { Inherit, ClipToBounds, ClipToBoundsWithoutIntersecting, ClipToBoundsAlways, OnDemand, EWidgetClipping_MAX, __typeKeyDoNoAccess}
    enum EUINavigation { Left, Right, Up, Down, Next, Previous, Num, Invalid, EUINavigation_MAX, __typeKeyDoNoAccess}
    enum EUINavigationRule { Escape, Explicit, Wrap, Stop, Custom, CustomBoundary, Invalid, EUINavigationRule_MAX, __typeKeyDoNoAccess}
    class WidgetNavigationData {
        constructor();
        constructor(Rule: UE.EUINavigationRule, WidgetToFocus: string, Widget: TWeakObjectPtr<UE.Widget>, CustomDelegate: $Delegate<(Navigation: UE.EUINavigation) => UE.Widget>);
        Rule: UE.EUINavigationRule;
        WidgetToFocus: string;
        Widget: TWeakObjectPtr<UE.Widget>;
        CustomDelegate: $Delegate<(Navigation: UE.EUINavigation) => UE.Widget>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetNavigationData_0__: boolean;
    }
    
    class WidgetNavigation extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Up: UE.WidgetNavigationData;
        Down: UE.WidgetNavigationData;
        Left: UE.WidgetNavigationData;
        Right: UE.WidgetNavigationData;
        Next: UE.WidgetNavigationData;
        Previous: UE.WidgetNavigationData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetNavigation;
        static Load(InName: string): WidgetNavigation;
    
        __tid_WidgetNavigation_0__: boolean;
    }
    
    enum EFlowDirectionPreference { Inherit, Culture, LeftToRight, RightToLeft, EFlowDirectionPreference_MAX, __typeKeyDoNoAccess}
    class PropertyPathSegment {
        constructor();
        constructor(Name: string, ArrayIndex: number, Struct: UE.Struct);
        Name: string;
        ArrayIndex: number;
        Struct: UE.Struct;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyPathSegment_0__: boolean;
    }
    
    class CachedPropertyPath {
        constructor();
        constructor(Segments: TArray<UE.PropertyPathSegment>, CachedFunction: UE.Function);
        Segments: TArray<UE.PropertyPathSegment>;
        CachedFunction: UE.Function;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedPropertyPath_0__: boolean;
    }
    
    class DynamicPropertyPath extends UE.CachedPropertyPath {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DynamicPropertyPath_0__: boolean;
    }
    
    class PropertyBinding extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceObject: TWeakObjectPtr<UE.Object>;
        SourcePath: UE.DynamicPropertyPath;
        DestinationProperty: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyBinding;
        static Load(InName: string): PropertyBinding;
    
        __tid_PropertyBinding_0__: boolean;
    }
    
    class EventReply {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EventReply_0__: boolean;
    }
    
    class Geometry {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Geometry_0__: boolean;
    }
    
    class InputEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputEvent_0__: boolean;
    }
    
    class PointerEvent extends UE.InputEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PointerEvent_0__: boolean;
    }
    
    enum ESlateColorStylingMode { UseColor_Specified, UseColor_Specified_Link, UseColor_Foreground, UseColor_Foreground_Subdued, UseColor_MAX, __typeKeyDoNoAccess}
    class SlateColor {
        constructor();
        constructor(SpecifiedColor: UE.LinearColor, ColorUseRule: UE.ESlateColorStylingMode);
        SpecifiedColor: UE.LinearColor;
        ColorUseRule: UE.ESlateColorStylingMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlateColor_0__: boolean;
    }
    
    class Margin {
        constructor();
        constructor(Left: number, Top: number, Right: number, Bottom: number);
        Left: number;
        Top: number;
        Right: number;
        Bottom: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Margin_0__: boolean;
    }
    
    enum ESlateBrushDrawType { NoDrawType, Box, Border, Image, ESlateBrushDrawType_MAX, __typeKeyDoNoAccess}
    enum ESlateBrushTileType { NoTile, Horizontal, Vertical, Both, ESlateBrushTileType_MAX, __typeKeyDoNoAccess}
    enum ESlateBrushMirrorType { NoMirror, Horizontal, Vertical, Both, ESlateBrushMirrorType_MAX, __typeKeyDoNoAccess}
    enum ESlateBrushImageType { NoImage, FullColor, Linear, ESlateBrushImageType_MAX, __typeKeyDoNoAccess}
    class SlateBrush {
        constructor();
        constructor(ImageSize: UE.Vector2D, Margin: UE.Margin, Tint: UE.LinearColor, TintColor: UE.SlateColor, ResourceObject: UE.Object, ResourceName: string, UVRegion: UE.Box2D, DrawAs: UE.ESlateBrushDrawType, Tiling: UE.ESlateBrushTileType, Mirroring: UE.ESlateBrushMirrorType, ImageType: UE.ESlateBrushImageType, bIsDynamicallyLoaded: boolean, bHasUObject: boolean);
        ImageSize: UE.Vector2D;
        Margin: UE.Margin;
        Tint: UE.LinearColor;
        TintColor: UE.SlateColor;
        ResourceObject: UE.Object;
        ResourceName: string;
        UVRegion: UE.Box2D;
        DrawAs: UE.ESlateBrushDrawType;
        Tiling: UE.ESlateBrushTileType;
        Mirroring: UE.ESlateBrushMirrorType;
        ImageType: UE.ESlateBrushImageType;
        bIsDynamicallyLoaded: boolean;
        bHasUObject: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlateBrush_0__: boolean;
    }
    
    enum ECheckBoxState { Unchecked, Checked, Undetermined, ECheckBoxState_MAX, __typeKeyDoNoAccess}
    class Widget extends UE.Visual {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Slot: UE.PanelSlot;
        bIsEnabledDelegate: $Delegate<() => boolean>;
        ToolTipText: string;
        ToolTipTextDelegate: $Delegate<() => string>;
        ToolTipWidget: UE.Widget;
        ToolTipWidgetDelegate: $Delegate<() => UE.Widget>;
        VisibilityDelegate: $Delegate<() => UE.ESlateVisibility>;
        RenderTransform: UE.WidgetTransform;
        RenderTransformPivot: UE.Vector2D;
        bIsVariable: boolean;
        bCreatedByConstructionScript: boolean;
        bIsEnabled: boolean;
        bOverride_Cursor: boolean;
        bOverrideAccessibleDefaults: boolean;
        bCanChildrenBeAccessible: boolean;
        AccessibleBehavior: UE.ESlateAccessibleBehavior;
        AccessibleSummaryBehavior: UE.ESlateAccessibleBehavior;
        AccessibleText: string;
        AccessibleTextDelegate: $Delegate<() => string>;
        AccessibleSummaryText: string;
        AccessibleSummaryTextDelegate: $Delegate<() => string>;
        AccessibleWidgetData: UE.SlateAccessibleWidgetData;
        bIsVolatile: boolean;
        bHiddenInDesigner: boolean;
        bExpandedInDesigner: boolean;
        bLockedInDesigner: boolean;
        Cursor: UE.EMouseCursor;
        Clipping: UE.EWidgetClipping;
        Visibility: UE.ESlateVisibility;
        RenderOpacity: number;
        Navigation: UE.WidgetNavigation;
        FlowDirectionPreference: UE.EFlowDirectionPreference;
        NativeBindings: TArray<UE.PropertyBinding>;
        DesignerFlags: number;
        DisplayLabel: string;
        CategoryName: string;
        ForceLayoutPrepass() : void;
        ForceVolatile(bForce: boolean) : void;
        GenerateWidgetForObject__DelegateSignature(Item: $Nullable<UE.Object>) : UE.Widget;
        GenerateWidgetForString__DelegateSignature(Item: string) : UE.Widget;
        GetAccessibleSummaryText() : string;
        GetAccessibleText() : string;
        GetBool__DelegateSignature() : boolean;
        GetCachedGeometry() : UE.Geometry;
        GetCheckBoxState__DelegateSignature() : UE.ECheckBoxState;
        GetClipping() : UE.EWidgetClipping;
        GetDesiredSize() : UE.Vector2D;
        GetFloat__DelegateSignature() : number;
        GetGameInstance() : UE.GameInstance;
        GetInt32__DelegateSignature() : number;
        GetIsEnabled() : boolean;
        GetLinearColor__DelegateSignature() : UE.LinearColor;
        GetMouseCursor__DelegateSignature() : UE.EMouseCursor;
        GetOwningLocalPlayer() : UE.LocalPlayer;
        GetOwningPlayer() : UE.PlayerController;
        GetPaintSpaceGeometry() : UE.Geometry;
        GetParent() : UE.PanelWidget;
        GetRenderOpacity() : number;
        GetRenderTransformAngle() : number;
        GetSlateBrush__DelegateSignature() : UE.SlateBrush;
        GetSlateColor__DelegateSignature() : UE.SlateColor;
        GetSlateVisibility__DelegateSignature() : UE.ESlateVisibility;
        GetText__DelegateSignature() : string;
        GetTickSpaceGeometry() : UE.Geometry;
        GetVisibility() : UE.ESlateVisibility;
        GetWidget__DelegateSignature() : UE.Widget;
        HasAnyUserFocus() : boolean;
        HasFocusedDescendants() : boolean;
        HasKeyboardFocus() : boolean;
        HasMouseCapture() : boolean;
        HasMouseCaptureByUser(UserIndex: number, PointerIndex?: number /* = -1 */) : boolean;
        HasUserFocus(PlayerController: $Nullable<UE.PlayerController>) : boolean;
        HasUserFocusedDescendants(PlayerController: $Nullable<UE.PlayerController>) : boolean;
        InvalidateLayoutAndVolatility() : void;
        IsHovered() : boolean;
        IsVisible() : boolean;
        OnPointerEvent__DelegateSignature(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) : UE.EventReply;
        OnReply__DelegateSignature() : UE.EventReply;
        RemoveFromParent() : void;
        ResetCursor() : void;
        SetAllNavigationRules(Rule: UE.EUINavigationRule, WidgetToFocus: string) : void;
        SetClipping(InClipping: UE.EWidgetClipping) : void;
        SetCursor(InCursor: UE.EMouseCursor) : void;
        SetFocus() : void;
        SetIsEnabled(bInIsEnabled: boolean) : void;
        SetKeyboardFocus() : void;
        SetNavigationRule(Direction: UE.EUINavigation, Rule: UE.EUINavigationRule, WidgetToFocus: string) : void;
        SetNavigationRuleBase(Direction: UE.EUINavigation, Rule: UE.EUINavigationRule) : void;
        SetNavigationRuleCustom(Direction: UE.EUINavigation, InCustomDelegate: $Delegate<(Navigation: UE.EUINavigation) => UE.Widget>) : void;
        SetNavigationRuleCustomBoundary(Direction: UE.EUINavigation, InCustomDelegate: $Delegate<(Navigation: UE.EUINavigation) => UE.Widget>) : void;
        SetNavigationRuleExplicit(Direction: UE.EUINavigation, InWidget: $Nullable<UE.Widget>) : void;
        SetRenderOpacity(InOpacity: number) : void;
        SetRenderScale(Scale: UE.Vector2D) : void;
        SetRenderShear(Shear: UE.Vector2D) : void;
        SetRenderTransform(InTransform: UE.WidgetTransform) : void;
        SetRenderTransformAngle(Angle: number) : void;
        SetRenderTransformPivot(Pivot: UE.Vector2D) : void;
        SetRenderTranslation(Translation: UE.Vector2D) : void;
        SetToolTip(Widget: $Nullable<UE.Widget>) : void;
        SetToolTipText(InToolTipText: string) : void;
        SetUserFocus(PlayerController: $Nullable<UE.PlayerController>) : void;
        SetVisibility(InVisibility: UE.ESlateVisibility) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Widget;
        static Load(InName: string): Widget;
    
        __tid_Widget_0__: boolean;
    }
    
    class MovieSceneSignedObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Signature: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSignedObject;
        static Load(InName: string): MovieSceneSignedObject;
    
        __tid_MovieSceneSignedObject_0__: boolean;
    }
    
    class MovieSceneTrackIdentifier {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackIdentifier_0__: boolean;
    }
    
    enum EEvaluationMethod { Static, Swept, EEvaluationMethod_MAX, __typeKeyDoNoAccess}
    class MovieSceneTrackEvalOptions {
        constructor();
        constructor(bCanEvaluateNearestSection: boolean, bEvalNearestSection: boolean, bEvaluateInPreroll: boolean, bEvaluateInPostroll: boolean, bEvaluateNearestSection: boolean);
        bCanEvaluateNearestSection: boolean;
        bEvalNearestSection: boolean;
        bEvaluateInPreroll: boolean;
        bEvaluateInPostroll: boolean;
        bEvaluateNearestSection: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackEvalOptions_0__: boolean;
    }
    
    class MovieSceneTrackDisplayOptions {
        constructor();
        constructor(bShowVerticalFrames: boolean);
        bShowVerticalFrames: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackDisplayOptions_0__: boolean;
    }
    
    enum EMovieSceneCompletionMode { KeepState, RestoreState, ProjectDefault, EMovieSceneCompletionMode_MAX, __typeKeyDoNoAccess}
    class MovieSceneSectionEvalOptions {
        constructor();
        constructor(bCanEditCompletionMode: boolean, CompletionMode: UE.EMovieSceneCompletionMode);
        bCanEditCompletionMode: boolean;
        CompletionMode: UE.EMovieSceneCompletionMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSectionEvalOptions_0__: boolean;
    }
    
    class MovieSceneEasingFunction extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnEvaluate(Interp: number) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEasingFunction;
        static Load(InName: string): MovieSceneEasingFunction;
    
        __tid_MovieSceneEasingFunction_0__: boolean;
    }
    
    class MovieSceneEasingSettings {
        constructor();
        constructor(AutoEaseInDuration: number, AutoEaseOutDuration: number, EaseIn: MovieSceneEasingFunction, bManualEaseIn: boolean, ManualEaseInDuration: number, EaseOut: MovieSceneEasingFunction, bManualEaseOut: boolean, ManualEaseOutDuration: number, AutoEaseInTime: number, AutoEaseOutTime: number, ManualEaseInTime: number, ManualEaseOutTime: number);
        AutoEaseInDuration: number;
        AutoEaseOutDuration: number;
        EaseIn: MovieSceneEasingFunction;
        bManualEaseIn: boolean;
        ManualEaseInDuration: number;
        EaseOut: MovieSceneEasingFunction;
        bManualEaseOut: boolean;
        ManualEaseOutDuration: number;
        AutoEaseInTime: number;
        AutoEaseOutTime: number;
        ManualEaseInTime: number;
        ManualEaseOutTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEasingSettings_0__: boolean;
    }
    
    class MovieSceneFrameRange {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneFrameRange_0__: boolean;
    }
    
    class Timecode {
        constructor();
        constructor(Hours: number, Minutes: number, Seconds: number, Frames: number, bDropFrameFormat: boolean);
        Hours: number;
        Minutes: number;
        Seconds: number;
        Frames: number;
        bDropFrameFormat: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Timecode_0__: boolean;
    }
    
    class FrameNumber {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FrameNumber_0__: boolean;
    }
    
    class MovieSceneTimecodeSource {
        constructor();
        constructor(Timecode: UE.Timecode, DeltaFrame: UE.FrameNumber);
        Timecode: UE.Timecode;
        DeltaFrame: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTimecodeSource_0__: boolean;
    }
    
    enum EMovieSceneBlendType { Invalid, Absolute, Additive, Relative, AdditiveFromBase, EMovieSceneBlendType_MAX, __typeKeyDoNoAccess}
    class OptionalMovieSceneBlendType {
        constructor();
        constructor(BlendType: UE.EMovieSceneBlendType, bIsValid: boolean);
        BlendType: UE.EMovieSceneBlendType;
        bIsValid: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OptionalMovieSceneBlendType_0__: boolean;
    }
    
    class MovieSceneSection extends UE.MovieSceneSignedObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EvalOptions: UE.MovieSceneSectionEvalOptions;
        Easing: UE.MovieSceneEasingSettings;
        SectionRange: UE.MovieSceneFrameRange;
        TimecodeSource: UE.MovieSceneTimecodeSource;
        PreRollFrames: UE.FrameNumber;
        PostRollFrames: UE.FrameNumber;
        RowIndex: number;
        OverlapPriority: number;
        bIsActive: boolean;
        bIsLocked: boolean;
        StartTime: number;
        EndTime: number;
        PreRollTime: number;
        PostRollTime: number;
        bIsInfinite: boolean;
        bSupportsInfiniteRange: boolean;
        BlendType: UE.OptionalMovieSceneBlendType;
        GetBlendType() : UE.OptionalMovieSceneBlendType;
        GetCompletionMode() : UE.EMovieSceneCompletionMode;
        GetOverlapPriority() : number;
        GetPostRollFrames() : number;
        GetPreRollFrames() : number;
        GetRowIndex() : number;
        IsActive() : boolean;
        IsLocked() : boolean;
        SetBlendType(InBlendType: UE.EMovieSceneBlendType) : void;
        SetCompletionMode(InCompletionMode: UE.EMovieSceneCompletionMode) : void;
        SetIsActive(bInIsActive: boolean) : void;
        SetIsLocked(bInIsLocked: boolean) : void;
        SetOverlapPriority(NewPriority: number) : void;
        SetPostRollFrames(InPostRollFrames: number) : void;
        SetPreRollFrames(InPreRollFrames: number) : void;
        SetRowIndex(NewRowIndex: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSection;
        static Load(InName: string): MovieSceneSection;
    
        __tid_MovieSceneSection_0__: boolean;
    }
    
    class FrameNumberRangeBound {
        constructor();
        constructor(Type: UE.ERangeBoundTypes, Value: UE.FrameNumber);
        Type: UE.ERangeBoundTypes;
        Value: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FrameNumberRangeBound_0__: boolean;
    }
    
    class FrameNumberRange {
        constructor();
        constructor(LowerBound: UE.FrameNumberRangeBound, UpperBound: UE.FrameNumberRangeBound);
        LowerBound: UE.FrameNumberRangeBound;
        UpperBound: UE.FrameNumberRangeBound;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FrameNumberRange_0__: boolean;
    }
    
    enum ESectionEvaluationFlags { None, PreRoll, PostRoll, ESectionEvaluationFlags_MAX, __typeKeyDoNoAccess}
    class MovieSceneTrackEvaluationFieldEntry {
        constructor();
        constructor(Section: UE.MovieSceneSection, Range: UE.FrameNumberRange, ForcedTime: UE.FrameNumber, Flags: UE.ESectionEvaluationFlags, LegacySortOrder: number);
        Section: UE.MovieSceneSection;
        Range: UE.FrameNumberRange;
        ForcedTime: UE.FrameNumber;
        Flags: UE.ESectionEvaluationFlags;
        LegacySortOrder: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackEvaluationFieldEntry_0__: boolean;
    }
    
    class MovieSceneTrackEvaluationField {
        constructor();
        constructor(Entries: TArray<UE.MovieSceneTrackEvaluationFieldEntry>);
        Entries: TArray<UE.MovieSceneTrackEvaluationFieldEntry>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackEvaluationField_0__: boolean;
    }
    
    class MovieSceneTrack extends UE.MovieSceneSignedObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EvalOptions: UE.MovieSceneTrackEvalOptions;
        DisplayOptions: UE.MovieSceneTrackDisplayOptions;
        bIsEvalDisabled: boolean;
        EvaluationFieldGuid: UE.Guid;
        EvaluationFieldVersion: number;
        EvaluationField: UE.MovieSceneTrackEvaluationField;
        ObjectBindingID: UE.Guid;
        TrackTint: UE.Color;
        SortingOrder: number;
        bSupportsDefaultSections: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTrack;
        static Load(InName: string): MovieSceneTrack;
    
        __tid_MovieSceneTrack_0__: boolean;
    }
    
    class MovieSceneEvalTemplatePtr {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvalTemplatePtr_0__: boolean;
    }
    
    class MovieSceneTrackImplementationPtr {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackImplementationPtr_0__: boolean;
    }
    
    class MovieSceneEvaluationTrack {
        constructor();
        constructor(ObjectBindingID: UE.Guid, EvaluationPriority: number, EvaluationMethod: UE.EEvaluationMethod, SourceTrack: TWeakObjectPtr<UE.MovieSceneTrack>, ChildTemplates: TArray<UE.MovieSceneEvalTemplatePtr>, TrackTemplate: UE.MovieSceneTrackImplementationPtr, EvaluationGroup: string, bEvaluateInPreroll: boolean, bEvaluateInPostroll: boolean, bTearDownPriority: boolean);
        ObjectBindingID: UE.Guid;
        EvaluationPriority: number;
        EvaluationMethod: UE.EEvaluationMethod;
        SourceTrack: TWeakObjectPtr<UE.MovieSceneTrack>;
        ChildTemplates: TArray<UE.MovieSceneEvalTemplatePtr>;
        TrackTemplate: UE.MovieSceneTrackImplementationPtr;
        EvaluationGroup: string;
        bEvaluateInPreroll: boolean;
        bEvaluateInPostroll: boolean;
        bTearDownPriority: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationTrack_0__: boolean;
    }
    
    class MovieSceneEvaluationTemplateSerialNumber {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationTemplateSerialNumber_0__: boolean;
    }
    
    class MovieSceneTemplateGenerationLedger {
        constructor();
        constructor(LastTrackIdentifier: UE.MovieSceneTrackIdentifier, TrackSignatureToTrackIdentifier: TMap<UE.Guid, UE.MovieSceneTrackIdentifier>, SubSectionRanges: TMap<UE.Guid, UE.MovieSceneFrameRange>);
        LastTrackIdentifier: UE.MovieSceneTrackIdentifier;
        TrackSignatureToTrackIdentifier: TMap<UE.Guid, UE.MovieSceneTrackIdentifier>;
        SubSectionRanges: TMap<UE.Guid, UE.MovieSceneFrameRange>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTemplateGenerationLedger_0__: boolean;
    }
    
    class MovieSceneEvaluationTemplate {
        constructor();
        constructor(Tracks: TMap<UE.MovieSceneTrackIdentifier, UE.MovieSceneEvaluationTrack>, SequenceSignature: UE.Guid, TemplateSerialNumber: UE.MovieSceneEvaluationTemplateSerialNumber, TemplateLedger: UE.MovieSceneTemplateGenerationLedger);
        Tracks: TMap<UE.MovieSceneTrackIdentifier, UE.MovieSceneEvaluationTrack>;
        SequenceSignature: UE.Guid;
        TemplateSerialNumber: UE.MovieSceneEvaluationTemplateSerialNumber;
        TemplateLedger: UE.MovieSceneTemplateGenerationLedger;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationTemplate_0__: boolean;
    }
    
    class MovieSceneSequenceID {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceID_0__: boolean;
    }
    
    class MovieSceneSequenceHierarchyNode {
        constructor();
        constructor(ParentID: UE.MovieSceneSequenceID, Children: TArray<UE.MovieSceneSequenceID>);
        ParentID: UE.MovieSceneSequenceID;
        Children: TArray<UE.MovieSceneSequenceID>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceHierarchyNode_0__: boolean;
    }
    
    class MovieSceneSubSequenceTree {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSubSequenceTree_0__: boolean;
    }
    
    class FrameTime {
        constructor();
        constructor(FrameNumber: UE.FrameNumber, SubFrame: number);
        FrameNumber: UE.FrameNumber;
        SubFrame: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FrameTime_0__: boolean;
    }
    
    class MovieSceneTimeTransform {
        constructor();
        constructor(TimeScale: number, Offset: UE.FrameTime);
        TimeScale: number;
        Offset: UE.FrameTime;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTimeTransform_0__: boolean;
    }
    
    class MovieSceneTimeWarping {
        constructor();
        constructor(Start: UE.FrameNumber, End: UE.FrameNumber);
        Start: UE.FrameNumber;
        End: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTimeWarping_0__: boolean;
    }
    
    class MovieSceneNestedSequenceTransform {
        constructor();
        constructor(LinearTransform: UE.MovieSceneTimeTransform, Warping: UE.MovieSceneTimeWarping);
        LinearTransform: UE.MovieSceneTimeTransform;
        Warping: UE.MovieSceneTimeWarping;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNestedSequenceTransform_0__: boolean;
    }
    
    class MovieSceneSequenceTransform {
        constructor();
        constructor(LinearTransform: UE.MovieSceneTimeTransform, NestedTransforms: TArray<UE.MovieSceneNestedSequenceTransform>);
        LinearTransform: UE.MovieSceneTimeTransform;
        NestedTransforms: TArray<UE.MovieSceneNestedSequenceTransform>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceTransform_0__: boolean;
    }
    
    class FrameRate {
        constructor();
        constructor(Numerator: number, Denominator: number);
        Numerator: number;
        Denominator: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FrameRate_0__: boolean;
    }
    
    class MovieSceneSequenceInstanceDataPtr {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceInstanceDataPtr_0__: boolean;
    }
    
    class MovieSceneSubSequenceData {
        constructor();
        constructor(Sequence: UE.SoftObjectPath, RootToSequenceTransform: UE.MovieSceneSequenceTransform, TickResolution: UE.FrameRate, DeterministicSequenceID: UE.MovieSceneSequenceID, PlayRange: UE.MovieSceneFrameRange, FullPlayRange: UE.MovieSceneFrameRange, UnwarpedPlayRange: UE.MovieSceneFrameRange, PreRollRange: UE.MovieSceneFrameRange, PostRollRange: UE.MovieSceneFrameRange, HierarchicalBias: number, bHasHierarchicalEasing: boolean, InstanceData: UE.MovieSceneSequenceInstanceDataPtr, SectionPath: string, SubSectionSignature: UE.Guid, OuterToInnerTransform: UE.MovieSceneSequenceTransform);
        Sequence: UE.SoftObjectPath;
        RootToSequenceTransform: UE.MovieSceneSequenceTransform;
        TickResolution: UE.FrameRate;
        DeterministicSequenceID: UE.MovieSceneSequenceID;
        PlayRange: UE.MovieSceneFrameRange;
        FullPlayRange: UE.MovieSceneFrameRange;
        UnwarpedPlayRange: UE.MovieSceneFrameRange;
        PreRollRange: UE.MovieSceneFrameRange;
        PostRollRange: UE.MovieSceneFrameRange;
        HierarchicalBias: number;
        bHasHierarchicalEasing: boolean;
        InstanceData: UE.MovieSceneSequenceInstanceDataPtr;
        SectionPath: string;
        SubSectionSignature: UE.Guid;
        OuterToInnerTransform: UE.MovieSceneSequenceTransform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSubSequenceData_0__: boolean;
    }
    
    class MovieSceneSequenceHierarchy {
        constructor();
        constructor(RootNode: UE.MovieSceneSequenceHierarchyNode, Tree: UE.MovieSceneSubSequenceTree, SubSequences: TMap<UE.MovieSceneSequenceID, UE.MovieSceneSubSequenceData>, Hierarchy: TMap<UE.MovieSceneSequenceID, UE.MovieSceneSequenceHierarchyNode>);
        RootNode: UE.MovieSceneSequenceHierarchyNode;
        Tree: UE.MovieSceneSubSequenceTree;
        SubSequences: TMap<UE.MovieSceneSequenceID, UE.MovieSceneSubSequenceData>;
        Hierarchy: TMap<UE.MovieSceneSequenceID, UE.MovieSceneSequenceHierarchyNode>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceHierarchy_0__: boolean;
    }
    
    class MovieSceneEvaluationFieldEntityTree {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationFieldEntityTree_0__: boolean;
    }
    
    class MovieSceneEvaluationFieldEntityKey {
        constructor();
        constructor(EntityOwner: TWeakObjectPtr<UE.Object>, EntityID: number);
        EntityOwner: TWeakObjectPtr<UE.Object>;
        EntityID: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationFieldEntityKey_0__: boolean;
    }
    
    class MovieSceneEvaluationFieldEntity {
        constructor();
        constructor(Key: UE.MovieSceneEvaluationFieldEntityKey, SharedMetaDataIndex: number);
        Key: UE.MovieSceneEvaluationFieldEntityKey;
        SharedMetaDataIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationFieldEntity_0__: boolean;
    }
    
    class MovieSceneEvaluationFieldEntityMetaData {
        constructor();
        constructor(ForcedTime: UE.FrameNumber, Flags: UE.ESectionEvaluationFlags, bEvaluateInSequencePreRoll: boolean, bEvaluateInSequencePostRoll: boolean);
        ForcedTime: UE.FrameNumber;
        Flags: UE.ESectionEvaluationFlags;
        bEvaluateInSequencePreRoll: boolean;
        bEvaluateInSequencePostRoll: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationFieldEntityMetaData_0__: boolean;
    }
    
    class MovieSceneEvaluationFieldSharedEntityMetaData {
        constructor();
        constructor(ObjectBindingID: UE.Guid);
        ObjectBindingID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationFieldSharedEntityMetaData_0__: boolean;
    }
    
    class MovieSceneEntityComponentField {
        constructor();
        constructor(PersistentEntityTree: UE.MovieSceneEvaluationFieldEntityTree, OneShotEntityTree: UE.MovieSceneEvaluationFieldEntityTree, Entities: TArray<UE.MovieSceneEvaluationFieldEntity>, EntityMetaData: TArray<UE.MovieSceneEvaluationFieldEntityMetaData>, SharedMetaData: TArray<UE.MovieSceneEvaluationFieldSharedEntityMetaData>);
        PersistentEntityTree: UE.MovieSceneEvaluationFieldEntityTree;
        OneShotEntityTree: UE.MovieSceneEvaluationFieldEntityTree;
        Entities: TArray<UE.MovieSceneEvaluationFieldEntity>;
        EntityMetaData: TArray<UE.MovieSceneEvaluationFieldEntityMetaData>;
        SharedMetaData: TArray<UE.MovieSceneEvaluationFieldSharedEntityMetaData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEntityComponentField_0__: boolean;
    }
    
    class MovieSceneEvaluationGroupLUTIndex {
        constructor();
        constructor(NumInitPtrs: number, NumEvalPtrs: number);
        NumInitPtrs: number;
        NumEvalPtrs: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationGroupLUTIndex_0__: boolean;
    }
    
    class MovieSceneEvaluationFieldTrackPtr {
        constructor();
        constructor(SequenceID: UE.MovieSceneSequenceID, TrackIdentifier: UE.MovieSceneTrackIdentifier);
        SequenceID: UE.MovieSceneSequenceID;
        TrackIdentifier: UE.MovieSceneTrackIdentifier;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationFieldTrackPtr_0__: boolean;
    }
    
    class MovieSceneFieldEntry_EvaluationTrack {
        constructor();
        constructor(TrackPtr: UE.MovieSceneEvaluationFieldTrackPtr, NumChildren: number);
        TrackPtr: UE.MovieSceneEvaluationFieldTrackPtr;
        NumChildren: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneFieldEntry_EvaluationTrack_0__: boolean;
    }
    
    class MovieSceneFieldEntry_ChildTemplate {
        constructor();
        constructor(ChildIndex: number, Flags: UE.ESectionEvaluationFlags, ForcedTime: UE.FrameNumber);
        ChildIndex: number;
        Flags: UE.ESectionEvaluationFlags;
        ForcedTime: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneFieldEntry_ChildTemplate_0__: boolean;
    }
    
    class MovieSceneEvaluationGroup {
        constructor();
        constructor(LUTIndices: TArray<UE.MovieSceneEvaluationGroupLUTIndex>, TrackLUT: TArray<UE.MovieSceneFieldEntry_EvaluationTrack>, SectionLUT: TArray<UE.MovieSceneFieldEntry_ChildTemplate>);
        LUTIndices: TArray<UE.MovieSceneEvaluationGroupLUTIndex>;
        TrackLUT: TArray<UE.MovieSceneFieldEntry_EvaluationTrack>;
        SectionLUT: TArray<UE.MovieSceneFieldEntry_ChildTemplate>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationGroup_0__: boolean;
    }
    
    class MovieSceneEvaluationKey {
        constructor();
        constructor(SequenceID: UE.MovieSceneSequenceID, TrackIdentifier: UE.MovieSceneTrackIdentifier, SectionIndex: number);
        SequenceID: UE.MovieSceneSequenceID;
        TrackIdentifier: UE.MovieSceneTrackIdentifier;
        SectionIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationKey_0__: boolean;
    }
    
    class MovieSceneOrderedEvaluationKey {
        constructor();
        constructor(Key: UE.MovieSceneEvaluationKey, SetupIndex: number, TearDownIndex: number);
        Key: UE.MovieSceneEvaluationKey;
        SetupIndex: number;
        TearDownIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneOrderedEvaluationKey_0__: boolean;
    }
    
    class MovieSceneEvaluationMetaData {
        constructor();
        constructor(ActiveSequences: TArray<UE.MovieSceneSequenceID>, ActiveEntities: TArray<UE.MovieSceneOrderedEvaluationKey>);
        ActiveSequences: TArray<UE.MovieSceneSequenceID>;
        ActiveEntities: TArray<UE.MovieSceneOrderedEvaluationKey>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationMetaData_0__: boolean;
    }
    
    class MovieSceneEvaluationField {
        constructor();
        constructor(Signature: UE.Guid, Ranges: TArray<UE.MovieSceneFrameRange>, Groups: TArray<UE.MovieSceneEvaluationGroup>, MetaData: TArray<UE.MovieSceneEvaluationMetaData>);
        Signature: UE.Guid;
        Ranges: TArray<UE.MovieSceneFrameRange>;
        Groups: TArray<UE.MovieSceneEvaluationGroup>;
        MetaData: TArray<UE.MovieSceneEvaluationMetaData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationField_0__: boolean;
    }
    
    class MovieSceneSequenceCompilerMaskStruct {
        constructor();
        constructor(bHierarchy: boolean, bEvaluationTemplate: boolean, bEvaluationTemplateField: boolean, bEntityComponentField: boolean);
        bHierarchy: boolean;
        bEvaluationTemplate: boolean;
        bEvaluationTemplateField: boolean;
        bEntityComponentField: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceCompilerMaskStruct_0__: boolean;
    }
    
    enum EMovieSceneSequenceFlags { None, Volatile, BlockingEvaluation, InheritedFlags, EMovieSceneSequenceFlags_MAX, __typeKeyDoNoAccess}
    class MovieSceneCompiledData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EvaluationTemplate: UE.MovieSceneEvaluationTemplate;
        Hierarchy: UE.MovieSceneSequenceHierarchy;
        EntityComponentField: UE.MovieSceneEntityComponentField;
        TrackTemplateField: UE.MovieSceneEvaluationField;
        DeterminismFences: TArray<UE.FrameTime>;
        CompiledSignature: UE.Guid;
        CompilerVersion: UE.Guid;
        AccumulatedMask: UE.MovieSceneSequenceCompilerMaskStruct;
        AllocatedMask: UE.MovieSceneSequenceCompilerMaskStruct;
        AccumulatedFlags: UE.EMovieSceneSequenceFlags;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCompiledData;
        static Load(InName: string): MovieSceneCompiledData;
    
        __tid_MovieSceneCompiledData_0__: boolean;
    }
    
    enum EMovieSceneObjectBindingSpace { Local, Root, EMovieSceneObjectBindingSpace_MAX, __typeKeyDoNoAccess}
    class MovieSceneObjectBindingID {
        constructor();
        constructor(SequenceID: number, Space: UE.EMovieSceneObjectBindingSpace, Guid: UE.Guid);
        SequenceID: number;
        Space: UE.EMovieSceneObjectBindingSpace;
        Guid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneObjectBindingID_0__: boolean;
    }
    
    class MovieSceneSequence extends UE.MovieSceneSignedObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CompiledData: UE.MovieSceneCompiledData;
        DefaultCompletionMode: UE.EMovieSceneCompletionMode;
        bParentContextsAreSignificant: boolean;
        bPlayableDirectly: boolean;
        SequenceFlags: UE.EMovieSceneSequenceFlags;
        FindBindingByTag(InBindingName: string) : UE.MovieSceneObjectBindingID;
        FindBindingsByTag(InBindingName: string) : TArray<UE.MovieSceneObjectBindingID>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSequence;
        static Load(InName: string): MovieSceneSequence;
    
        __tid_MovieSceneSequence_0__: boolean;
    }
    
    enum ESpawnOwnership { InnerSequence, MasterSequence, External, ESpawnOwnership_MAX, __typeKeyDoNoAccess}
    class MovieSceneSpawnable {
        constructor();
        constructor(SpawnTransform: UE.Transform, Tags: TArray<string>, bContinuouslyRespawn: boolean, bEvaluateTracksWhenNotSpawned: boolean, Guid: UE.Guid, Name: string, ObjectTemplate: UE.Object, ChildPossessables: TArray<UE.Guid>, Ownership: UE.ESpawnOwnership, GeneratedClass: UE.Class, LevelName: string);
        SpawnTransform: UE.Transform;
        Tags: TArray<string>;
        bContinuouslyRespawn: boolean;
        bEvaluateTracksWhenNotSpawned: boolean;
        Guid: UE.Guid;
        Name: string;
        ObjectTemplate: UE.Object;
        ChildPossessables: TArray<UE.Guid>;
        Ownership: UE.ESpawnOwnership;
        GeneratedClass: UE.Class;
        LevelName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSpawnable_0__: boolean;
    }
    
    class MovieScenePossessable {
        constructor();
        constructor(Tags: TArray<string>, Guid: UE.Guid, Name: string, PossessedObjectClass: UE.Class, ParentGuid: UE.Guid);
        Tags: TArray<string>;
        Guid: UE.Guid;
        Name: string;
        PossessedObjectClass: UE.Class;
        ParentGuid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScenePossessable_0__: boolean;
    }
    
    class MovieSceneBinding {
        constructor();
        constructor(ObjectGuid: UE.Guid, BindingName: string, Tracks: TArray<UE.MovieSceneTrack>, SortingOrder: number);
        ObjectGuid: UE.Guid;
        BindingName: string;
        Tracks: TArray<UE.MovieSceneTrack>;
        SortingOrder: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneBinding_0__: boolean;
    }
    
    class MovieSceneObjectBindingIDs {
        constructor();
        constructor(IDs: TArray<UE.MovieSceneObjectBindingID>);
        IDs: TArray<UE.MovieSceneObjectBindingID>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneObjectBindingIDs_0__: boolean;
    }
    
    enum EMovieSceneEvaluationType { FrameLocked, WithSubFrames, EMovieSceneEvaluationType_MAX, __typeKeyDoNoAccess}
    enum EUpdateClockSource { Tick, Platform, Audio, RelativeTimecode, Timecode, Custom, EUpdateClockSource_MAX, __typeKeyDoNoAccess}
    class MovieSceneMarkedFrame {
        constructor();
        constructor(FrameNumber: UE.FrameNumber, Label: string, Color: UE.LinearColor);
        FrameNumber: UE.FrameNumber;
        Label: string;
        Color: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneMarkedFrame_0__: boolean;
    }
    
    class MovieSceneTrackLabels {
        constructor();
        constructor(Strings: TArray<string>);
        Strings: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackLabels_0__: boolean;
    }
    
    class MovieSceneExpansionState {
        constructor();
        constructor(bExpanded: boolean);
        bExpanded: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneExpansionState_0__: boolean;
    }
    
    class FloatRangeBound {
        constructor();
        constructor(Type: UE.ERangeBoundTypes, Value: number);
        Type: UE.ERangeBoundTypes;
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FloatRangeBound_0__: boolean;
    }
    
    class FloatRange {
        constructor();
        constructor(LowerBound: UE.FloatRangeBound, UpperBound: UE.FloatRangeBound);
        LowerBound: UE.FloatRangeBound;
        UpperBound: UE.FloatRangeBound;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FloatRange_0__: boolean;
    }
    
    class MovieSceneEditorData {
        constructor();
        constructor(ExpansionStates: TMap<string, UE.MovieSceneExpansionState>, PinnedNodes: TArray<string>, ViewStart: number, ViewEnd: number, WorkStart: number, WorkEnd: number, MarkedFrames: TSet<UE.FrameNumber>, WorkingRange: UE.FloatRange, ViewRange: UE.FloatRange);
        ExpansionStates: TMap<string, UE.MovieSceneExpansionState>;
        PinnedNodes: TArray<string>;
        ViewStart: number;
        ViewEnd: number;
        WorkStart: number;
        WorkEnd: number;
        MarkedFrames: TSet<UE.FrameNumber>;
        WorkingRange: UE.FloatRange;
        ViewRange: UE.FloatRange;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEditorData_0__: boolean;
    }
    
    class MovieSceneFolder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FolderName: string;
        ChildFolders: TArray<UE.MovieSceneFolder>;
        ChildMasterTracks: TArray<UE.MovieSceneTrack>;
        ChildObjectBindingStrings: TArray<string>;
        FolderColor: UE.Color;
        SortingOrder: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneFolder;
        static Load(InName: string): MovieSceneFolder;
    
        __tid_MovieSceneFolder_0__: boolean;
    }
    
    class MovieSceneSectionGroup {
        constructor();
        constructor(Sections: TArray<TWeakObjectPtr<UE.MovieSceneSection>>);
        Sections: TArray<TWeakObjectPtr<UE.MovieSceneSection>>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSectionGroup_0__: boolean;
    }
    
    class MovieSceneNodeGroup extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Name: string;
        Nodes: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNodeGroup;
        static Load(InName: string): MovieSceneNodeGroup;
    
        __tid_MovieSceneNodeGroup_0__: boolean;
    }
    
    class MovieSceneNodeGroupCollection extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NodeGroups: TArray<UE.MovieSceneNodeGroup>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNodeGroupCollection;
        static Load(InName: string): MovieSceneNodeGroupCollection;
    
        __tid_MovieSceneNodeGroupCollection_0__: boolean;
    }
    
    class MovieScene extends UE.MovieSceneSignedObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TimecodeSource: UE.MovieSceneTimecodeSource;
        Spawnables: TArray<UE.MovieSceneSpawnable>;
        Possessables: TArray<UE.MovieScenePossessable>;
        ObjectBindings: TArray<UE.MovieSceneBinding>;
        BindingGroups: TMap<string, UE.MovieSceneObjectBindingIDs>;
        MasterTracks: TArray<UE.MovieSceneTrack>;
        CameraCutTrack: UE.MovieSceneTrack;
        SelectionRange: UE.MovieSceneFrameRange;
        PlaybackRange: UE.MovieSceneFrameRange;
        TickResolution: UE.FrameRate;
        DisplayRate: UE.FrameRate;
        EvaluationType: UE.EMovieSceneEvaluationType;
        ClockSource: UE.EUpdateClockSource;
        CustomClockSourcePath: UE.SoftObjectPath;
        MarkedFrames: TArray<UE.MovieSceneMarkedFrame>;
        bReadOnly: boolean;
        bPlaybackRangeLocked: boolean;
        ObjectsToDisplayNames: TMap<string, string>;
        ObjectsToLabels: TMap<string, UE.MovieSceneTrackLabels>;
        EditorData: UE.MovieSceneEditorData;
        RootFolders: TArray<UE.MovieSceneFolder>;
        SoloNodes: TArray<string>;
        MuteNodes: TArray<string>;
        SectionGroups: TArray<UE.MovieSceneSectionGroup>;
        NodeGroupCollection: UE.MovieSceneNodeGroupCollection;
        InTime: number;
        OutTime: number;
        StartTime: number;
        EndTime: number;
        bForceFixedFrameIntervalPlayback: boolean;
        FixedFrameInterval: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene;
        static Load(InName: string): MovieScene;
    
        __tid_MovieScene_0__: boolean;
    }
    
    class WidgetAnimationBinding {
        constructor();
        constructor(WidgetName: string, SlotWidgetName: string, AnimationGuid: UE.Guid, bIsRootWidget: boolean);
        WidgetName: string;
        SlotWidgetName: string;
        AnimationGuid: UE.Guid;
        bIsRootWidget: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetAnimationBinding_0__: boolean;
    }
    
    class WidgetAnimation extends UE.MovieSceneSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnAnimationStarted: $MulticastDelegate<() => void>;
        OnAnimationFinished: $MulticastDelegate<() => void>;
        MovieScene: UE.MovieScene;
        AnimationBindings: TArray<UE.WidgetAnimationBinding>;
        bLegacyFinishOnStop: boolean;
        DisplayLabel: string;
        BindToAnimationFinished(Widget: $Nullable<UE.UserWidget>, Delegate: $Delegate<() => void>) : void;
        BindToAnimationStarted(Widget: $Nullable<UE.UserWidget>, Delegate: $Delegate<() => void>) : void;
        GetEndTime() : number;
        GetStartTime() : number;
        UnbindAllFromAnimationFinished(Widget: $Nullable<UE.UserWidget>) : void;
        UnbindAllFromAnimationStarted(Widget: $Nullable<UE.UserWidget>) : void;
        UnbindFromAnimationFinished(Widget: $Nullable<UE.UserWidget>, Delegate: $Delegate<() => void>) : void;
        UnbindFromAnimationStarted(Widget: $Nullable<UE.UserWidget>, Delegate: $Delegate<() => void>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetAnimation;
        static Load(InName: string): WidgetAnimation;
    
        __tid_WidgetAnimation_0__: boolean;
    }
    
    class MovieSceneCompiledDataManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Hierarchies: TMap<number, UE.MovieSceneSequenceHierarchy>;
        TrackTemplates: TMap<number, UE.MovieSceneEvaluationTemplate>;
        TrackTemplateFields: TMap<number, UE.MovieSceneEvaluationField>;
        EntityComponentFields: TMap<number, UE.MovieSceneEntityComponentField>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCompiledDataManager;
        static Load(InName: string): MovieSceneCompiledDataManager;
    
        __tid_MovieSceneCompiledDataManager_0__: boolean;
    }
    
    class MovieSceneEntitySystemGraphNodes {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEntitySystemGraphNodes_0__: boolean;
    }
    
    class MovieSceneEntitySystemGraph {
        constructor();
        constructor(Nodes: UE.MovieSceneEntitySystemGraphNodes);
        Nodes: UE.MovieSceneEntitySystemGraphNodes;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEntitySystemGraph_0__: boolean;
    }
    
    class MovieSceneEntitySystemLinker extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SystemGraph: UE.MovieSceneEntitySystemGraph;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEntitySystemLinker;
        static Load(InName: string): MovieSceneEntitySystemLinker;
    
        __tid_MovieSceneEntitySystemLinker_0__: boolean;
    }
    
    class MovieSceneRootEvaluationTemplateInstance {
        constructor();
        constructor(WeakRootSequence: TWeakObjectPtr<UE.MovieSceneSequence>, CompiledDataManager: UE.MovieSceneCompiledDataManager, EntitySystemLinker: UE.MovieSceneEntitySystemLinker, DirectorInstances: TMap<UE.MovieSceneSequenceID, UE.Object>);
        WeakRootSequence: TWeakObjectPtr<UE.MovieSceneSequence>;
        CompiledDataManager: UE.MovieSceneCompiledDataManager;
        EntitySystemLinker: UE.MovieSceneEntitySystemLinker;
        DirectorInstances: TMap<UE.MovieSceneSequenceID, UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneRootEvaluationTemplateInstance_0__: boolean;
    }
    
    class UMGSequencePlayer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Animation: UE.WidgetAnimation;
        RootTemplateInstance: UE.MovieSceneRootEvaluationTemplateInstance;
        GetUserTag() : string;
        SetUserTag(InUserTag: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UMGSequencePlayer;
        static Load(InName: string): UMGSequencePlayer;
    
        __tid_UMGSequencePlayer_0__: boolean;
    }
    
    class UMGSequenceTickManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WeakUserWidgets: TSet<TWeakObjectPtr<UE.UserWidget>>;
        Linker: UE.MovieSceneEntitySystemLinker;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UMGSequenceTickManager;
        static Load(InName: string): UMGSequenceTickManager;
    
        __tid_UMGSequenceTickManager_0__: boolean;
    }
    
    class NamedSlotBinding {
        constructor();
        constructor(Name: string, Content: UE.Widget);
        Name: string;
        Content: UE.Widget;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedSlotBinding_0__: boolean;
    }
    
    class WidgetTree extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RootWidget: UE.Widget;
        AllWidgets: TArray<UE.Widget>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetTree;
        static Load(InName: string): WidgetTree;
    
        __tid_WidgetTree_0__: boolean;
    }
    
    enum EDesignPreviewSizeMode { FillScreen, Custom, CustomOnScreen, Desired, DesiredOnScreen, EDesignPreviewSizeMode_MAX, __typeKeyDoNoAccess}
    enum EWidgetTickFrequency { Never, Auto, EWidgetTickFrequency_MAX, __typeKeyDoNoAccess}
    enum EWidgetAnimationEvent { Started, Finished, EWidgetAnimationEvent_MAX, __typeKeyDoNoAccess}
    class AnimationEventBinding {
        constructor();
        constructor(Animation: UE.WidgetAnimation, Delegate: $Delegate<() => void>, AnimationEvent: UE.EWidgetAnimationEvent, UserTag: string);
        Animation: UE.WidgetAnimation;
        Delegate: $Delegate<() => void>;
        AnimationEvent: UE.EWidgetAnimationEvent;
        UserTag: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationEventBinding_0__: boolean;
    }
    
    enum EInputEvent { IE_Pressed, IE_Released, IE_Repeat, IE_DoubleClick, IE_Axis, IE_MAX, __typeKeyDoNoAccess}
    class Anchors {
        constructor();
        constructor(Minimum: UE.Vector2D, Maximum: UE.Vector2D);
        Minimum: UE.Vector2D;
        Maximum: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Anchors_0__: boolean;
    }
    
    enum EUMGSequencePlayMode { Forward, Reverse, PingPong, EUMGSequencePlayMode_MAX, __typeKeyDoNoAccess}
    class FocusEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FocusEvent_0__: boolean;
    }
    
    class KeyEvent extends UE.InputEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KeyEvent_0__: boolean;
    }
    
    class PaintContext {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaintContext_0__: boolean;
    }
    
    class MotionEvent extends UE.InputEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MotionEvent_0__: boolean;
    }
    
    class CharacterEvent extends UE.InputEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CharacterEvent_0__: boolean;
    }
    
    enum EDragPivot { MouseDown, TopLeft, TopCenter, TopRight, CenterLeft, CenterCenter, CenterRight, BottomLeft, BottomCenter, BottomRight, EDragPivot_MAX, __typeKeyDoNoAccess}
    class DragDropOperation extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Tag: string;
        Payload: UE.Object;
        DefaultDragVisual: UE.Widget;
        Pivot: UE.EDragPivot;
        Offset: UE.Vector2D;
        OnDrop: $MulticastDelegate<(Operation: $Nullable<UE.DragDropOperation>) => void>;
        OnDragCancelled: $MulticastDelegate<(Operation: $Nullable<UE.DragDropOperation>) => void>;
        OnDragged: $MulticastDelegate<(Operation: $Nullable<UE.DragDropOperation>) => void>;
        DragCancelled(PointerEvent: UE.PointerEvent) : void;
        Dragged(PointerEvent: UE.PointerEvent) : void;
        Drop(PointerEvent: UE.PointerEvent) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DragDropOperation;
        static Load(InName: string): DragDropOperation;
    
        __tid_DragDropOperation_0__: boolean;
    }
    
    class AnalogInputEvent extends UE.KeyEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnalogInputEvent_0__: boolean;
    }
    
    class UserWidget extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ColorAndOpacity: UE.LinearColor;
        ColorAndOpacityDelegate: $Delegate<() => UE.LinearColor>;
        ForegroundColor: UE.SlateColor;
        ForegroundColorDelegate: $Delegate<() => UE.SlateColor>;
        OnVisibilityChanged: $MulticastDelegate<(InVisibility: UE.ESlateVisibility) => void>;
        Padding: UE.Margin;
        ActiveSequencePlayers: TArray<UE.UMGSequencePlayer>;
        AnimationTickManager: UE.UMGSequenceTickManager;
        StoppedSequencePlayers: TArray<UE.UMGSequencePlayer>;
        NamedSlotBindings: TArray<UE.NamedSlotBinding>;
        WidgetTree: UE.WidgetTree;
        DesignTimeSize: UE.Vector2D;
        DesignSizeMode: UE.EDesignPreviewSizeMode;
        PaletteCategory: string;
        PreviewBackground: UE.Texture2D;
        Priority: number;
        bSupportsKeyboardFocus: boolean;
        bIsFocusable: boolean;
        bStopAction: boolean;
        bHasScriptImplementedTick: boolean;
        bHasScriptImplementedPaint: boolean;
        TickFrequency: UE.EWidgetTickFrequency;
        InputComponent: UE.InputComponent;
        AnimationCallbacks: TArray<UE.AnimationEventBinding>;
        AddToPlayerScreen(ZOrder?: number /* = 0 */) : boolean;
        AddToViewport(ZOrder?: number /* = 0 */) : void;
        BindToAnimationEvent(Animation: $Nullable<UE.WidgetAnimation>, Delegate: $Delegate<() => void>, AnimationEvent: UE.EWidgetAnimationEvent, UserTag?: string /* = "None" */) : void;
        BindToAnimationFinished(Animation: $Nullable<UE.WidgetAnimation>, Delegate: $Delegate<() => void>) : void;
        BindToAnimationStarted(Animation: $Nullable<UE.WidgetAnimation>, Delegate: $Delegate<() => void>) : void;
        CancelLatentActions() : void;
        Construct() : void;
        Destruct() : void;
        FlushAnimations() : void;
        GetAlignmentInViewport() : UE.Vector2D;
        GetAnchorsInViewport() : UE.Anchors;
        GetAnimationCurrentTime(InAnimation: $Nullable<UE.WidgetAnimation>) : number;
        GetIsVisible() : boolean;
        GetOwningPlayerCameraManager() : UE.PlayerCameraManager;
        GetOwningPlayerPawn() : UE.Pawn;
        IsAnimationPlaying(InAnimation: $Nullable<UE.WidgetAnimation>) : boolean;
        IsAnimationPlayingForward(InAnimation: $Nullable<UE.WidgetAnimation>) : boolean;
        IsAnyAnimationPlaying() : boolean;
        IsInteractable() : boolean;
        IsInViewport() : boolean;
        IsListeningForInputAction(ActionName: string) : boolean;
        IsPlayingAnimation() : boolean;
        ListenForInputAction(ActionName: string, EventType: UE.EInputEvent, bConsume: boolean, Callback: $Delegate<() => void>) : void;
        OnAddedToFocusPath(InFocusEvent: UE.FocusEvent) : void;
        OnAnalogValueChanged(MyGeometry: UE.Geometry, InAnalogInputEvent: UE.AnalogInputEvent) : UE.EventReply;
        OnAnimationFinished(Animation: $Nullable<UE.WidgetAnimation>) : void;
        OnAnimationStarted(Animation: $Nullable<UE.WidgetAnimation>) : void;
        OnDragCancelled(PointerEvent: UE.PointerEvent, Operation: $Nullable<UE.DragDropOperation>) : void;
        OnDragDetected(MyGeometry: UE.Geometry, PointerEvent: UE.PointerEvent, Operation: $Ref<UE.DragDropOperation>) : void;
        OnDragEnter(MyGeometry: UE.Geometry, PointerEvent: UE.PointerEvent, Operation: $Nullable<UE.DragDropOperation>) : void;
        OnDragLeave(PointerEvent: UE.PointerEvent, Operation: $Nullable<UE.DragDropOperation>) : void;
        OnDragOver(MyGeometry: UE.Geometry, PointerEvent: UE.PointerEvent, Operation: $Nullable<UE.DragDropOperation>) : boolean;
        OnDrop(MyGeometry: UE.Geometry, PointerEvent: UE.PointerEvent, Operation: $Nullable<UE.DragDropOperation>) : boolean;
        OnFocusLost(InFocusEvent: UE.FocusEvent) : void;
        OnFocusReceived(MyGeometry: UE.Geometry, InFocusEvent: UE.FocusEvent) : UE.EventReply;
        OnInitialized() : void;
        OnKeyChar(MyGeometry: UE.Geometry, InCharacterEvent: UE.CharacterEvent) : UE.EventReply;
        OnKeyDown(MyGeometry: UE.Geometry, InKeyEvent: UE.KeyEvent) : UE.EventReply;
        OnKeyUp(MyGeometry: UE.Geometry, InKeyEvent: UE.KeyEvent) : UE.EventReply;
        OnMotionDetected(MyGeometry: UE.Geometry, InMotionEvent: UE.MotionEvent) : UE.EventReply;
        OnMouseButtonDoubleClick(InMyGeometry: UE.Geometry, InMouseEvent: UE.PointerEvent) : UE.EventReply;
        OnMouseButtonDown(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) : UE.EventReply;
        OnMouseButtonUp(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) : UE.EventReply;
        OnMouseCaptureLost() : void;
        OnMouseEnter(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) : void;
        OnMouseLeave(MouseEvent: UE.PointerEvent) : void;
        OnMouseMove(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) : UE.EventReply;
        OnMouseWheel(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) : UE.EventReply;
        OnPaint(Context: $Ref<UE.PaintContext>) : void;
        OnPreviewKeyDown(MyGeometry: UE.Geometry, InKeyEvent: UE.KeyEvent) : UE.EventReply;
        OnPreviewMouseButtonDown(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) : UE.EventReply;
        OnRemovedFromFocusPath(InFocusEvent: UE.FocusEvent) : void;
        OnTouchEnded(MyGeometry: UE.Geometry, InTouchEvent: UE.PointerEvent) : UE.EventReply;
        OnTouchForceChanged(MyGeometry: UE.Geometry, InTouchEvent: UE.PointerEvent) : UE.EventReply;
        OnTouchGesture(MyGeometry: UE.Geometry, GestureEvent: UE.PointerEvent) : UE.EventReply;
        OnTouchMoved(MyGeometry: UE.Geometry, InTouchEvent: UE.PointerEvent) : UE.EventReply;
        OnTouchStarted(MyGeometry: UE.Geometry, InTouchEvent: UE.PointerEvent) : UE.EventReply;
        PauseAnimation(InAnimation: $Nullable<UE.WidgetAnimation>) : number;
        PlayAnimation(InAnimation: $Nullable<UE.WidgetAnimation>, StartAtTime?: number /* = 0.000000 */, NumLoopsToPlay?: number /* = 1 */, PlayMode?: UE.EUMGSequencePlayMode /* = Forward */, PlaybackSpeed?: number /* = 1.000000 */, bRestoreState?: boolean /* = false */) : UE.UMGSequencePlayer;
        PlayAnimationForward(InAnimation: $Nullable<UE.WidgetAnimation>, PlaybackSpeed?: number /* = 1.000000 */, bRestoreState?: boolean /* = false */) : UE.UMGSequencePlayer;
        PlayAnimationReverse(InAnimation: $Nullable<UE.WidgetAnimation>, PlaybackSpeed?: number /* = 1.000000 */, bRestoreState?: boolean /* = false */) : UE.UMGSequencePlayer;
        PlayAnimationTimeRange(InAnimation: $Nullable<UE.WidgetAnimation>, StartAtTime?: number /* = 0.000000 */, EndAtTime?: number /* = 0.000000 */, NumLoopsToPlay?: number /* = 1 */, PlayMode?: UE.EUMGSequencePlayMode /* = Forward */, PlaybackSpeed?: number /* = 1.000000 */, bRestoreState?: boolean /* = false */) : UE.UMGSequencePlayer;
        PlaySound(SoundToPlay: $Nullable<UE.SoundBase>) : void;
        PreConstruct(IsDesignTime: boolean) : void;
        RegisterInputComponent() : void;
        RemoveFromViewport() : void;
        ReverseAnimation(InAnimation: $Nullable<UE.WidgetAnimation>) : void;
        SetAlignmentInViewport(Alignment: UE.Vector2D) : void;
        SetAnchorsInViewport(Anchors: UE.Anchors) : void;
        SetAnimationCurrentTime(InAnimation: $Nullable<UE.WidgetAnimation>, InTime: number) : void;
        SetColorAndOpacity(InColorAndOpacity: UE.LinearColor) : void;
        SetDesiredSizeInViewport(Size: UE.Vector2D) : void;
        SetForegroundColor(InForegroundColor: UE.SlateColor) : void;
        SetInputActionBlocking(bShouldBlock: boolean) : void;
        SetInputActionPriority(NewPriority: number) : void;
        SetNumLoopsToPlay(InAnimation: $Nullable<UE.WidgetAnimation>, NumLoopsToPlay: number) : void;
        SetOwningPlayer(LocalPlayerController: $Nullable<UE.PlayerController>) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetPlaybackSpeed(InAnimation: $Nullable<UE.WidgetAnimation>, PlaybackSpeed?: number /* = 1.000000 */) : void;
        SetPositionInViewport(Position: UE.Vector2D, bRemoveDPIScale?: boolean /* = true */) : void;
        StopAllAnimations() : void;
        StopAnimation(InAnimation: $Nullable<UE.WidgetAnimation>) : void;
        StopAnimationsAndLatentActions() : void;
        StopListeningForAllInputActions() : void;
        StopListeningForInputAction(ActionName: string, EventType: UE.EInputEvent) : void;
        Tick(MyGeometry: UE.Geometry, InDeltaTime: number) : void;
        UnbindAllFromAnimationFinished(Animation: $Nullable<UE.WidgetAnimation>) : void;
        UnbindAllFromAnimationStarted(Animation: $Nullable<UE.WidgetAnimation>) : void;
        UnbindFromAnimationFinished(Animation: $Nullable<UE.WidgetAnimation>, Delegate: $Delegate<() => void>) : void;
        UnbindFromAnimationStarted(Animation: $Nullable<UE.WidgetAnimation>, Delegate: $Delegate<() => void>) : void;
        UnregisterInputComponent() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserWidget;
        static Load(InName: string): UserWidget;
    
        __tid_UserWidget_0__: boolean;
    }
    
    class ViewTargetTransitionParams {
        constructor();
        constructor(BlendTime: number, BlendFunction: UE.EViewTargetBlendFunction, BlendExp: number, bLockOutgoing: boolean);
        BlendTime: number;
        BlendFunction: UE.EViewTargetBlendFunction;
        BlendExp: number;
        bLockOutgoing: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ViewTargetTransitionParams_0__: boolean;
    }
    
    class UpdateLevelVisibilityLevelInfo {
        constructor();
        constructor(PackageName: string, FileName: string, bIsVisible: boolean);
        PackageName: string;
        FileName: string;
        bIsVisible: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UpdateLevelVisibilityLevelInfo_0__: boolean;
    }
    
    class HapticFeedbackEffect_Base extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HapticFeedbackEffect_Base;
        static Load(InName: string): HapticFeedbackEffect_Base;
    
        __tid_HapticFeedbackEffect_Base_0__: boolean;
    }
    
    enum EDynamicForceFeedbackAction { Start, Update, Stop, EDynamicForceFeedbackAction_MAX, __typeKeyDoNoAccess}
    class LatentActionInfo {
        constructor();
        constructor(Linkage: number, UUID: number, ExecutionFunction: string, CallbackTarget: UE.Object);
        Linkage: number;
        UUID: number;
        ExecutionFunction: string;
        CallbackTarget: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LatentActionInfo_0__: boolean;
    }
    
    enum EObjectTypeQuery { ObjectTypeQuery1, ObjectTypeQuery2, ObjectTypeQuery3, ObjectTypeQuery4, ObjectTypeQuery5, ObjectTypeQuery6, ObjectTypeQuery7, ObjectTypeQuery8, ObjectTypeQuery9, ObjectTypeQuery10, ObjectTypeQuery11, ObjectTypeQuery12, ObjectTypeQuery13, ObjectTypeQuery14, ObjectTypeQuery15, ObjectTypeQuery16, ObjectTypeQuery17, ObjectTypeQuery18, ObjectTypeQuery19, ObjectTypeQuery20, ObjectTypeQuery21, ObjectTypeQuery22, ObjectTypeQuery23, ObjectTypeQuery24, ObjectTypeQuery25, ObjectTypeQuery26, ObjectTypeQuery27, ObjectTypeQuery28, ObjectTypeQuery29, ObjectTypeQuery30, ObjectTypeQuery31, ObjectTypeQuery32, ObjectTypeQuery_MAX, EObjectTypeQuery_MAX, __typeKeyDoNoAccess, WorldStatic = 0, WorldDynamic = 1, Pawn = 2, PhysicsBody = 3, Vehicle = 4, Destructible = 5}
    enum ETraceTypeQuery { TraceTypeQuery1, TraceTypeQuery2, TraceTypeQuery3, TraceTypeQuery4, TraceTypeQuery5, TraceTypeQuery6, TraceTypeQuery7, TraceTypeQuery8, TraceTypeQuery9, TraceTypeQuery10, TraceTypeQuery11, TraceTypeQuery12, TraceTypeQuery13, TraceTypeQuery14, TraceTypeQuery15, TraceTypeQuery16, TraceTypeQuery17, TraceTypeQuery18, TraceTypeQuery19, TraceTypeQuery20, TraceTypeQuery21, TraceTypeQuery22, TraceTypeQuery23, TraceTypeQuery24, TraceTypeQuery25, TraceTypeQuery26, TraceTypeQuery27, TraceTypeQuery28, TraceTypeQuery29, TraceTypeQuery30, TraceTypeQuery31, TraceTypeQuery32, TraceTypeQuery_MAX, ETraceTypeQuery_MAX, __typeKeyDoNoAccess, Visibility = 0, Camera = 1}
    class UpdateLevelStreamingLevelStatus {
        constructor();
        constructor(PackageName: string, LODIndex: number, bNewShouldBeLoaded: boolean, bNewShouldBeVisible: boolean, bNewShouldBlockOnLoad: boolean);
        PackageName: string;
        LODIndex: number;
        bNewShouldBeLoaded: boolean;
        bNewShouldBeVisible: boolean;
        bNewShouldBlockOnLoad: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UpdateLevelStreamingLevelStatus_0__: boolean;
    }
    
    enum ETravelType { TRAVEL_Absolute, TRAVEL_Partial, TRAVEL_Relative, TRAVEL_MAX, __typeKeyDoNoAccess}
    class ForceFeedbackParameters {
        constructor();
        constructor(Tag: string, bLooping: boolean, bIgnoreTimeDilation: boolean, bPlayWhilePaused: boolean);
        Tag: string;
        bLooping: boolean;
        bIgnoreTimeDilation: boolean;
        bPlayWhilePaused: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ForceFeedbackParameters_0__: boolean;
    }
    
    class PlayerController extends UE.Controller {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Player: UE.Player;
        AcknowledgedPawn: UE.Pawn;
        ControllingDirTrackInst: UE.InterpTrackInstDirector;
        MyHUD: UE.HUD;
        PlayerCameraManager: UE.PlayerCameraManager;
        PlayerCameraManagerClass: UE.Class;
        bAutoManageActiveCameraTarget: boolean;
        TargetViewRotation: UE.Rotator;
        SmoothTargetViewRotationSpeed: number;
        HiddenActors: TArray<UE.Actor>;
        HiddenPrimitiveComponents: TArray<TWeakObjectPtr<UE.PrimitiveComponent>>;
        LastSpectatorStateSynchTime: number;
        LastSpectatorSyncLocation: UE.Vector;
        LastSpectatorSyncRotation: UE.Rotator;
        ClientCap: number;
        CheatManager: UE.CheatManager;
        CheatClass: UE.Class;
        PlayerInput: UE.PlayerInput;
        ActiveForceFeedbackEffects: TArray<UE.ActiveForceFeedbackEffect>;
        bPlayerIsWaiting: boolean;
        NetPlayerIndex: number;
        PendingSwapConnection: UE.NetConnection;
        NetConnection: UE.NetConnection;
        InputYawScale: number;
        InputPitchScale: number;
        InputRollScale: number;
        bShowMouseCursor: boolean;
        bEnableClickEvents: boolean;
        bEnableTouchEvents: boolean;
        bEnableMouseOverEvents: boolean;
        bEnableTouchOverEvents: boolean;
        bForceFeedbackEnabled: boolean;
        ForceFeedbackScale: number;
        ClickEventKeys: TArray<UE.Key>;
        DefaultMouseCursor: UE.EMouseCursor;
        CurrentMouseCursor: UE.EMouseCursor;
        DefaultClickTraceChannel: UE.ECollisionChannel;
        CurrentClickTraceChannel: UE.ECollisionChannel;
        HitResultTraceDistance: number;
        SeamlessTravelCount: number;
        LastCompletedSeamlessTravelCount: number;
        InactiveStateInputComponent: UE.InputComponent;
        bShouldPerformFullTickWhenPaused: boolean;
        CurrentTouchInterface: UE.TouchInterface;
        SpectatorPawn: UE.SpectatorPawn;
        bIsLocalPlayerController: boolean;
        SpawnLocation: UE.Vector;
        ActivateTouchInterface(NewTouchInterface: $Nullable<UE.TouchInterface>) : void;
        AddPitchInput(Val: number) : void;
        AddRollInput(Val: number) : void;
        AddYawInput(Val: number) : void;
        Camera(NewMode: string) : void;
        CanRestartPlayer() : boolean;
        ClearAudioListenerAttenuationOverride() : void;
        ClearAudioListenerOverride() : void;
        ClientAddTextureStreamingLoc(InLoc: UE.Vector, Duration: number, bOverrideLocation: boolean) : void;
        ClientCancelPendingMapChange() : void;
        ClientCapBandwidth(Cap: number) : void;
        ClientClearCameraLensEffects() : void;
        ClientCommitMapChange() : void;
        ClientEnableNetworkVoice(bEnable: boolean) : void;
        ClientEndOnlineSession() : void;
        ClientFlushLevelStreaming() : void;
        ClientForceGarbageCollection() : void;
        ClientGameEnded(EndGameFocus: $Nullable<UE.Actor>, bIsWinner: boolean) : void;
        ClientGotoState(NewState: string) : void;
        ClientIgnoreLookInput(bIgnore: boolean) : void;
        ClientIgnoreMoveInput(bIgnore: boolean) : void;
        ClientMessage(S: string, Type: string, MsgLifeTime: number) : void;
        ClientMutePlayer(PlayerId: UE.UniqueNetIdRepl) : void;
        ClientPlayCameraAnim(AnimToPlay: $Nullable<UE.CameraAnim>, Scale?: number /* = 1.000000 */, Rate?: number /* = 1.000000 */, BlendInTime?: number /* = 0.000000 */, BlendOutTime?: number /* = 0.000000 */, bLoop?: boolean /* = false */, bRandomStartTime?: boolean /* = false */, Space?: UE.ECameraShakePlaySpace /* = CameraLocal */, CustomPlaySpace?: UE.Rotator /* =  */) : void;
        ClientPlayForceFeedback_Internal(ForceFeedbackEffect: $Nullable<UE.ForceFeedbackEffect>, Params: UE.ForceFeedbackParameters) : void;
        ClientPlaySound(Sound: $Nullable<UE.SoundBase>, VolumeMultiplier: number, PitchMultiplier: number) : void;
        ClientPlaySoundAtLocation(Sound: $Nullable<UE.SoundBase>, Location: UE.Vector, VolumeMultiplier: number, PitchMultiplier: number) : void;
        ClientPrepareMapChange(LevelName: string, bFirst: boolean, bLast: boolean) : void;
        ClientPrestreamTextures(ForcedActor: $Nullable<UE.Actor>, ForceDuration: number, bEnableStreaming: boolean, CinematicTextureGroups: number) : void;
        ClientReceiveLocalizedMessage(Message: $Nullable<UE.Class>, Switch: number, RelatedPlayerState_1: $Nullable<UE.PlayerState>, RelatedPlayerState_2: $Nullable<UE.PlayerState>, OptionalObject: $Nullable<UE.Object>) : void;
        ClientRepObjRef(Object: $Nullable<UE.Object>) : void;
        ClientReset() : void;
        ClientRestart(NewPawn: $Nullable<UE.Pawn>) : void;
        ClientRetryClientRestart(NewPawn: $Nullable<UE.Pawn>) : void;
        ClientReturnToMainMenu(ReturnReason: string) : void;
        ClientReturnToMainMenuWithTextReason(ReturnReason: string) : void;
        ClientSetBlockOnAsyncLoading() : void;
        ClientSetCameraFade(bEnableFading: boolean, FadeColor: UE.Color, FadeAlpha: UE.Vector2D, FadeTime: number, bFadeAudio: boolean, bHoldWhenFinished: boolean) : void;
        ClientSetCameraMode(NewCamMode: string) : void;
        ClientSetCinematicMode(bInCinematicMode: boolean, bAffectsMovement: boolean, bAffectsTurning: boolean, bAffectsHUD: boolean) : void;
        ClientSetForceMipLevelsToBeResident(Material: $Nullable<UE.MaterialInterface>, ForceDuration: number, CinematicTextureGroups: number) : void;
        ClientSetHUD(NewHUDClass: $Nullable<UE.Class>) : void;
        ClientSetSpectatorWaiting(bWaiting: boolean) : void;
        ClientSetViewTarget(A: $Nullable<UE.Actor>, TransitionParams: UE.ViewTargetTransitionParams) : void;
        ClientSpawnCameraLensEffect(LensEffectEmitterClass: $Nullable<UE.Class>) : void;
        ClientStartCameraShake(Shake: $Nullable<UE.Class>, Scale?: number /* = 1.000000 */, PlaySpace?: UE.ECameraShakePlaySpace /* = CameraLocal */, UserPlaySpaceRot?: UE.Rotator /* =  */) : void;
        ClientStartCameraShakeFromSource(Shake: $Nullable<UE.Class>, SourceComponent: $Nullable<UE.CameraShakeSourceComponent>) : void;
        ClientStartOnlineSession() : void;
        ClientStopCameraAnim(AnimToStop: $Nullable<UE.CameraAnim>) : void;
        ClientStopCameraShake(Shake: $Nullable<UE.Class>, bImmediately?: boolean /* = true */) : void;
        ClientStopCameraShakesFromSource(SourceComponent: $Nullable<UE.CameraShakeSourceComponent>, bImmediately?: boolean /* = true */) : void;
        ClientStopForceFeedback(ForceFeedbackEffect: $Nullable<UE.ForceFeedbackEffect>, Tag: string) : void;
        ClientTeamMessage(SenderPlayerState: $Nullable<UE.PlayerState>, S: string, Type: string, MsgLifeTime: number) : void;
        ClientTravel(URL: string, TravelType: UE.ETravelType, bSeamless: boolean, MapPackageGuid: UE.Guid) : void;
        ClientTravelInternal(URL: string, TravelType: UE.ETravelType, bSeamless: boolean, MapPackageGuid: UE.Guid) : void;
        ClientUnmutePlayer(PlayerId: UE.UniqueNetIdRepl) : void;
        ClientUpdateLevelStreamingStatus(PackageName: string, bNewShouldBeLoaded: boolean, bNewShouldBeVisible: boolean, bNewShouldBlockOnLoad: boolean, LODIndex: number) : void;
        ClientUpdateMultipleLevelsStreamingStatus(LevelStatuses: TArray<UE.UpdateLevelStreamingLevelStatus>) : void;
        ClientVoiceHandshakeComplete() : void;
        ClientWasKicked(KickReason: string) : void;
        ConsoleKey(Key: UE.Key) : void;
        DeprojectMousePositionToWorld(WorldLocation: $Ref<UE.Vector>, WorldDirection: $Ref<UE.Vector>) : boolean;
        DeprojectScreenPositionToWorld(ScreenX: number, ScreenY: number, WorldLocation: $Ref<UE.Vector>, WorldDirection: $Ref<UE.Vector>) : boolean;
        EnableCheats() : void;
        FOV(NewFOV: number) : void;
        GetFocalLocation() : UE.Vector;
        GetHitResultUnderCursor(TraceChannel: UE.ECollisionChannel, bTraceComplex: boolean, HitResult: $Ref<UE.HitResult>) : boolean;
        GetHitResultUnderCursorByChannel(TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, HitResult: $Ref<UE.HitResult>) : boolean;
        GetHitResultUnderCursorForObjects(ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, HitResult: $Ref<UE.HitResult>) : boolean;
        GetHitResultUnderFinger(FingerIndex: UE.ETouchIndex, TraceChannel: UE.ECollisionChannel, bTraceComplex: boolean, HitResult: $Ref<UE.HitResult>) : boolean;
        GetHitResultUnderFingerByChannel(FingerIndex: UE.ETouchIndex, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, HitResult: $Ref<UE.HitResult>) : boolean;
        GetHitResultUnderFingerForObjects(FingerIndex: UE.ETouchIndex, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, HitResult: $Ref<UE.HitResult>) : boolean;
        GetHUD() : UE.HUD;
        GetInputAnalogKeyState(Key: UE.Key) : number;
        GetInputAnalogStickState(WhichStick: UE.EControllerAnalogStick, StickX: $Ref<number>, StickY: $Ref<number>) : void;
        GetInputKeyTimeDown(Key: UE.Key) : number;
        GetInputMotionState(Tilt: $Ref<UE.Vector>, RotationRate: $Ref<UE.Vector>, Gravity: $Ref<UE.Vector>, Acceleration: $Ref<UE.Vector>) : void;
        GetInputMouseDelta(DeltaX: $Ref<number>, DeltaY: $Ref<number>) : void;
        GetInputTouchState(FingerIndex: UE.ETouchIndex, LocationX: $Ref<number>, LocationY: $Ref<number>, bIsCurrentlyPressed: $Ref<boolean>) : void;
        GetInputVectorKeyState(Key: UE.Key) : UE.Vector;
        GetMousePosition(LocationX: $Ref<number>, LocationY: $Ref<number>) : boolean;
        GetSpectatorPawn() : UE.SpectatorPawn;
        GetViewportSize(SizeX: $Ref<number>, SizeY: $Ref<number>) : void;
        IsInputKeyDown(Key: UE.Key) : boolean;
        K2_ClientPlayForceFeedback(ForceFeedbackEffect: $Nullable<UE.ForceFeedbackEffect>, Tag: string, bLooping: boolean, bIgnoreTimeDilation: boolean, bPlayWhilePaused: boolean) : void;
        LocalTravel(URL: string) : void;
        OnServerStartedVisualLogger(bIsLogging: boolean) : void;
        Pause() : void;
        PlayDynamicForceFeedback(Intensity: number, Duration: number, bAffectsLeftLarge: boolean, bAffectsLeftSmall: boolean, bAffectsRightLarge: boolean, bAffectsRightSmall: boolean, Action: UE.EDynamicForceFeedbackAction, LatentInfo: UE.LatentActionInfo) : void;
        PlayHapticEffect(HapticEffect: $Nullable<UE.HapticFeedbackEffect_Base>, Hand: UE.EControllerHand, Scale?: number /* = 1.000000 */, bLoop?: boolean /* = false */) : void;
        ProjectWorldLocationToScreen(WorldLocation: UE.Vector, ScreenLocation: $Ref<UE.Vector2D>, bPlayerViewportRelative?: boolean /* = false */) : boolean;
        ResetControllerLightColor() : void;
        RestartLevel() : void;
        SendToConsole(Command: string) : void;
        ServerAcknowledgePossession(P: $Nullable<UE.Pawn>) : void;
        ServerCamera(NewMode: string) : void;
        ServerChangeName(S: string) : void;
        ServerCheckClientPossession() : void;
        ServerCheckClientPossessionReliable() : void;
        ServerExec(Msg: string) : void;
        ServerExecRPC(Msg: string) : void;
        ServerMutePlayer(PlayerId: UE.UniqueNetIdRepl) : void;
        ServerNotifyLoadedWorld(WorldPackageName: string) : void;
        ServerPause() : void;
        ServerRestartPlayer() : void;
        ServerSetSpectatorLocation(NewLoc: UE.Vector, NewRot: UE.Rotator) : void;
        ServerSetSpectatorWaiting(bWaiting: boolean) : void;
        ServerShortTimeout() : void;
        ServerToggleAILogging() : void;
        ServerUnmutePlayer(PlayerId: UE.UniqueNetIdRepl) : void;
        ServerUpdateCamera(CamLoc: UE.Vector_NetQuantize, CamPitchAndYaw: number) : void;
        ServerUpdateLevelVisibility(LevelVisibility: UE.UpdateLevelVisibilityLevelInfo) : void;
        ServerUpdateMultipleLevelsVisibility(LevelVisibilities: TArray<UE.UpdateLevelVisibilityLevelInfo>) : void;
        ServerVerifyViewTarget() : void;
        ServerViewNextPlayer() : void;
        ServerViewPrevPlayer() : void;
        ServerViewSelf(TransitionParams: UE.ViewTargetTransitionParams) : void;
        SetAudioListenerAttenuationOverride(AttachToComponent: $Nullable<UE.SceneComponent>, AttenuationLocationOVerride: UE.Vector) : void;
        SetAudioListenerOverride(AttachToComponent: $Nullable<UE.SceneComponent>, Location: UE.Vector, Rotation: UE.Rotator) : void;
        SetCinematicMode(bInCinematicMode: boolean, bHidePlayer: boolean, bAffectsHUD: boolean, bAffectsMovement: boolean, bAffectsTurning: boolean) : void;
        SetControllerLightColor(Color: UE.Color) : void;
        SetDisableHaptics(bNewDisabled: boolean) : void;
        SetHapticsByValue(Frequency: number, Amplitude: number, Hand: UE.EControllerHand) : void;
        SetMouseCursorWidget(Cursor: UE.EMouseCursor, CursorWidget: $Nullable<UE.UserWidget>) : void;
        SetMouseLocation(X: number, Y: number) : void;
        SetName(S: string) : void;
        SetViewTargetWithBlend(NewViewTarget: $Nullable<UE.Actor>, BlendTime?: number /* = 0.000000 */, BlendFunc?: UE.EViewTargetBlendFunction /* = VTBlend_Linear */, BlendExp?: number /* = 0.000000 */, bLockOutgoing?: boolean /* = false */) : void;
        SetVirtualJoystickVisibility(bVisible: boolean) : void;
        StartFire(FireModeNum?: number /* = 0 */) : void;
        StopHapticEffect(Hand: UE.EControllerHand) : void;
        SwitchLevel(URL: string) : void;
        TestServerLevelVisibilityChange(PackageName: string, FileName: string) : void;
        ToggleSpeaking(bInSpeaking: boolean) : void;
        WasInputKeyJustPressed(Key: UE.Key) : boolean;
        WasInputKeyJustReleased(Key: UE.Key) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlayerController;
        static Load(InName: string): PlayerController;
    
        __tid_PlayerController_0__: boolean;
    }
    
    class Controller extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayerState: UE.PlayerState;
        OnInstigatedAnyDamage: $MulticastDelegate<(Damage: number, DamageType: $Nullable<UE.DamageType>, DamagedActor: $Nullable<UE.Actor>, DamageCauser: $Nullable<UE.Actor>) => void>;
        StateName: string;
        Pawn: UE.Pawn;
        Character: UE.Character;
        TransformComponent: UE.SceneComponent;
        ControlRotation: UE.Rotator;
        bAttachToPawn: boolean;
        CastToPlayerController() : UE.PlayerController;
        ClientSetLocation(NewLocation: UE.Vector, NewRotation: UE.Rotator) : void;
        ClientSetRotation(NewRotation: UE.Rotator, bResetCamera: boolean) : void;
        GetControlRotation() : UE.Rotator;
        GetDesiredRotation() : UE.Rotator;
        GetViewTarget() : UE.Actor;
        IsLocalController() : boolean;
        IsLocalPlayerController() : boolean;
        IsLookInputIgnored() : boolean;
        IsMoveInputIgnored() : boolean;
        IsPlayerController() : boolean;
        K2_GetPawn() : UE.Pawn;
        LineOfSightTo(Other: $Nullable<UE.Actor>, ViewPoint?: UE.Vector /* =  */, bAlternateChecks?: boolean /* = false */) : boolean;
        OnRep_Pawn() : void;
        OnRep_PlayerState() : void;
        Possess(InPawn: $Nullable<UE.Pawn>) : void;
        ReceiveInstigatedAnyDamage(Damage: number, DamageType: $Nullable<UE.DamageType>, DamagedActor: $Nullable<UE.Actor>, DamageCauser: $Nullable<UE.Actor>) : void;
        ReceivePossess(PossessedPawn: $Nullable<UE.Pawn>) : void;
        ReceiveUnPossess(UnpossessedPawn: $Nullable<UE.Pawn>) : void;
        ResetIgnoreInputFlags() : void;
        ResetIgnoreLookInput() : void;
        ResetIgnoreMoveInput() : void;
        SetControlRotation(NewRotation: UE.Rotator) : void;
        SetIgnoreLookInput(bNewLookInput: boolean) : void;
        SetIgnoreMoveInput(bNewMoveInput: boolean) : void;
        SetInitialLocationAndRotation(NewLocation: UE.Vector, NewRotation: UE.Rotator) : void;
        StopMovement() : void;
        UnPossess() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Controller;
        static Load(InName: string): Controller;
    
        __tid_Controller_0__: boolean;
    }
    
    class Pawn extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseControllerRotationPitch: boolean;
        bUseControllerRotationYaw: boolean;
        bUseControllerRotationRoll: boolean;
        bCanAffectNavigationGeneration: boolean;
        BaseEyeHeight: number;
        AutoPossessPlayer: UE.EAutoReceiveInput;
        AutoPossessAI: UE.EAutoPossessAI;
        RemoteViewPitch: number;
        AIControllerClass: UE.Class;
        PlayerState: UE.PlayerState;
        LastHitBy: UE.Controller;
        Controller: UE.Controller;
        ControlInputVector: UE.Vector;
        LastControlInputVector: UE.Vector;
        AddControllerPitchInput(Val: number) : void;
        AddControllerRollInput(Val: number) : void;
        AddControllerYawInput(Val: number) : void;
        AddMovementInput(WorldDirection: UE.Vector, ScaleValue?: number /* = 1.000000 */, bForce?: boolean /* = false */) : void;
        ConsumeMovementInputVector() : UE.Vector;
        DetachFromControllerPendingDestroy() : void;
        GetBaseAimRotation() : UE.Rotator;
        GetController() : UE.Controller;
        GetControlRotation() : UE.Rotator;
        GetLastMovementInputVector() : UE.Vector;
        GetMovementComponent() : UE.PawnMovementComponent;
        GetNavAgentLocation() : UE.Vector;
        GetPendingMovementInputVector() : UE.Vector;
        IsBotControlled() : boolean;
        IsControlled() : boolean;
        IsLocallyControlled() : boolean;
        IsMoveInputIgnored() : boolean;
        IsPawnControlled() : boolean;
        IsPlayerControlled() : boolean;
        K2_GetMovementInputVector() : UE.Vector;
        LaunchPawn(LaunchVelocity: UE.Vector, bXYOverride: boolean, bZOverride: boolean) : void;
        OnRep_Controller() : void;
        OnRep_PlayerState() : void;
        PawnMakeNoise(Loudness: number, NoiseLocation: UE.Vector, bUseNoiseMakerLocation?: boolean /* = true */, NoiseMaker?: UE.Actor /* = None */) : void;
        ReceivePossessed(NewController: $Nullable<UE.Controller>) : void;
        ReceiveUnpossessed(OldController: $Nullable<UE.Controller>) : void;
        SetCanAffectNavigationGeneration(bNewValue: boolean, bForceUpdate?: boolean /* = false */) : void;
        SpawnDefaultController() : void;
        static GetMovementBaseActor(Pawn: $Nullable<UE.Pawn>) : UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Pawn;
        static Load(InName: string): Pawn;
    
        __tid_Pawn_0__: boolean;
    }
    
    enum ERadialImpulseFalloff { RIF_Constant, RIF_Linear, RIF_MAX, __typeKeyDoNoAccess}
    class PrimitiveComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MinDrawDistance: number;
        LDMaxDrawDistance: number;
        CachedMaxDrawDistance: number;
        DepthPriorityGroup: UE.ESceneDepthPriorityGroup;
        ViewOwnerDepthPriorityGroup: UE.ESceneDepthPriorityGroup;
        IndirectLightingCacheQuality: UE.EIndirectLightingCacheQuality;
        LightmapType: UE.ELightmapType;
        ExcludeForSpecificHLODLevels: TArray<number>;
        bEnableAutoLODGeneration: boolean;
        bUseMaxLODAsImposter: boolean;
        bBatchImpostersAsInstances: boolean;
        bNeverDistanceCull: boolean;
        bAlwaysCreatePhysicsState: boolean;
        bGenerateOverlapEvents: boolean;
        bMultiBodyOverlap: boolean;
        bTraceComplexOnMove: boolean;
        bReturnMaterialOnMove: boolean;
        bUseViewOwnerDepthPriorityGroup: boolean;
        bAllowCullDistanceVolume: boolean;
        bHasMotionBlurVelocityMeshes: boolean;
        bVisibleInReflectionCaptures: boolean;
        bVisibleInRealTimeSkyCaptures: boolean;
        bVisibleInRayTracing: boolean;
        bRenderInMainPass: boolean;
        bRenderInDepthPass: boolean;
        bReceivesDecals: boolean;
        bOwnerNoSee: boolean;
        bOnlyOwnerSee: boolean;
        bTreatAsBackgroundForOcclusion: boolean;
        bUseAsOccluder: boolean;
        bSelectable: boolean;
        bForceMipStreaming: boolean;
        bHasPerInstanceHitProxies: boolean;
        CastShadow: boolean;
        bAffectDynamicIndirectLighting: boolean;
        bAffectDistanceFieldLighting: boolean;
        bCastDynamicShadow: boolean;
        bCastStaticShadow: boolean;
        bCastVolumetricTranslucentShadow: boolean;
        bCastContactShadow: boolean;
        bSelfShadowOnly: boolean;
        bCastFarShadow: boolean;
        bCastInsetShadow: boolean;
        bCastCinematicShadow: boolean;
        bCastHiddenShadow: boolean;
        bCastShadowAsTwoSided: boolean;
        bLightAsIfStatic: boolean;
        bLightAttachmentsAsGroup: boolean;
        bExcludeFromLightAttachmentGroup: boolean;
        bReceiveMobileCSMShadows: boolean;
        bSingleSampleShadowFromStationaryLights: boolean;
        bIgnoreRadialImpulse: boolean;
        bIgnoreRadialForce: boolean;
        bApplyImpulseOnDamage: boolean;
        bReplicatePhysicsToAutonomousProxy: boolean;
        bFillCollisionUnderneathForNavmesh: boolean;
        AlwaysLoadOnClient: boolean;
        AlwaysLoadOnServer: boolean;
        bUseEditorCompositing: boolean;
        bRenderCustomDepth: boolean;
        bHasCustomNavigableGeometry: UE.EHasCustomNavigableGeometry;
        HitProxyPriority: UE.EHitProxyPriority;
        CanBeCharacterBase: UE.ECanBeCharacterBase;
        CanCharacterStepUpOn: UE.ECanBeCharacterBase;
        LightingChannels: UE.LightingChannels;
        CustomDepthStencilWriteMask: UE.ERendererStencilMask;
        CustomDepthStencilValue: number;
        CustomPrimitiveData: UE.CustomPrimitiveData;
        CustomPrimitiveDataInternal: UE.CustomPrimitiveData;
        TranslucencySortPriority: number;
        VisibilityId: number;
        RuntimeVirtualTextures: TArray<UE.RuntimeVirtualTexture>;
        VirtualTextureLodBias: number;
        VirtualTextureCullMips: number;
        VirtualTextureMinCoverage: number;
        VirtualTextureRenderPassType: UE.ERuntimeVirtualTextureMainPassType;
        LpvBiasMultiplier: number;
        BoundsScale: number;
        MoveIgnoreActors: TArray<UE.Actor>;
        MoveIgnoreComponents: TArray<UE.PrimitiveComponent>;
        BodyInstance: UE.BodyInstance;
        OnComponentHit: $MulticastDelegate<(HitComponent: $Nullable<UE.PrimitiveComponent>, OtherActor: $Nullable<UE.Actor>, OtherComp: $Nullable<UE.PrimitiveComponent>, NormalImpulse: UE.Vector, Hit: UE.HitResult) => void>;
        OnComponentBeginOverlap: $MulticastDelegate<(OverlappedComponent: $Nullable<UE.PrimitiveComponent>, OtherActor: $Nullable<UE.Actor>, OtherComp: $Nullable<UE.PrimitiveComponent>, OtherBodyIndex: number, bFromSweep: boolean, SweepResult: UE.HitResult) => void>;
        OnComponentEndOverlap: $MulticastDelegate<(OverlappedComponent: $Nullable<UE.PrimitiveComponent>, OtherActor: $Nullable<UE.Actor>, OtherComp: $Nullable<UE.PrimitiveComponent>, OtherBodyIndex: number) => void>;
        OnComponentWake: $MulticastDelegate<(WakingComponent: $Nullable<UE.PrimitiveComponent>, BoneName: string) => void>;
        OnComponentSleep: $MulticastDelegate<(SleepingComponent: $Nullable<UE.PrimitiveComponent>, BoneName: string) => void>;
        OnBeginCursorOver: $MulticastDelegate<(TouchedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        OnEndCursorOver: $MulticastDelegate<(TouchedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        OnClicked: $MulticastDelegate<(TouchedComponent: $Nullable<UE.PrimitiveComponent>, ButtonPressed: UE.Key) => void>;
        OnReleased: $MulticastDelegate<(TouchedComponent: $Nullable<UE.PrimitiveComponent>, ButtonReleased: UE.Key) => void>;
        OnInputTouchBegin: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        OnInputTouchEnd: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        OnInputTouchEnter: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        OnInputTouchLeave: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        LODParentPrimitive: UE.PrimitiveComponent;
        AddAngularImpulse(Impulse: UE.Vector, BoneName?: string /* = "None" */, bVelChange?: boolean /* = false */) : void;
        AddAngularImpulseInDegrees(Impulse: UE.Vector, BoneName?: string /* = "None" */, bVelChange?: boolean /* = false */) : void;
        AddAngularImpulseInRadians(Impulse: UE.Vector, BoneName?: string /* = "None" */, bVelChange?: boolean /* = false */) : void;
        AddForce(Force: UE.Vector, BoneName?: string /* = "None" */, bAccelChange?: boolean /* = false */) : void;
        AddForceAtLocation(Force: UE.Vector, Location: UE.Vector, BoneName?: string /* = "None" */) : void;
        AddForceAtLocationLocal(Force: UE.Vector, Location: UE.Vector, BoneName?: string /* = "None" */) : void;
        AddImpulse(Impulse: UE.Vector, BoneName?: string /* = "None" */, bVelChange?: boolean /* = false */) : void;
        AddImpulseAtLocation(Impulse: UE.Vector, Location: UE.Vector, BoneName?: string /* = "None" */) : void;
        AddRadialForce(Origin: UE.Vector, Radius: number, Strength: number, Falloff: UE.ERadialImpulseFalloff, bAccelChange?: boolean /* = false */) : void;
        AddRadialImpulse(Origin: UE.Vector, Radius: number, Strength: number, Falloff: UE.ERadialImpulseFalloff, bVelChange?: boolean /* = false */) : void;
        AddTorque(Torque: UE.Vector, BoneName?: string /* = "None" */, bAccelChange?: boolean /* = false */) : void;
        AddTorqueInDegrees(Torque: UE.Vector, BoneName?: string /* = "None" */, bAccelChange?: boolean /* = false */) : void;
        AddTorqueInRadians(Torque: UE.Vector, BoneName?: string /* = "None" */, bAccelChange?: boolean /* = false */) : void;
        CanCharacterStepUp(Pawn: $Nullable<UE.Pawn>) : boolean;
        ClearMoveIgnoreActors() : void;
        ClearMoveIgnoreComponents() : void;
        CopyArrayOfMoveIgnoreActors() : TArray<UE.Actor>;
        CopyArrayOfMoveIgnoreComponents() : TArray<UE.PrimitiveComponent>;
        CreateAndSetMaterialInstanceDynamic(ElementIndex: number) : UE.MaterialInstanceDynamic;
        CreateAndSetMaterialInstanceDynamicFromMaterial(ElementIndex: number, Parent: $Nullable<UE.MaterialInterface>) : UE.MaterialInstanceDynamic;
        CreateDynamicMaterialInstance(ElementIndex: number, SourceMaterial?: UE.MaterialInterface /* = None */, OptionalName?: string /* = "None" */) : UE.MaterialInstanceDynamic;
        GetAngularDamping() : number;
        GetCenterOfMass(BoneName?: string /* = "None" */) : UE.Vector;
        GetClosestPointOnCollision(Point: UE.Vector, OutPointOnBody: $Ref<UE.Vector>, BoneName?: string /* = "None" */) : number;
        GetCollisionEnabled() : UE.ECollisionEnabled;
        GetCollisionObjectType() : UE.ECollisionChannel;
        GetCollisionProfileName() : string;
        GetCollisionResponseToChannel(Channel: UE.ECollisionChannel) : UE.ECollisionResponse;
        GetGenerateOverlapEvents() : boolean;
        GetInertiaTensor(BoneName?: string /* = "None" */) : UE.Vector;
        GetLinearDamping() : number;
        GetMass() : number;
        GetMassScale(BoneName?: string /* = "None" */) : number;
        GetMaterial(ElementIndex: number) : UE.MaterialInterface;
        GetMaterialFromCollisionFaceIndex(FaceIndex: number, SectionIndex: $Ref<number>) : UE.MaterialInterface;
        GetNumMaterials() : number;
        GetOverlappingActors(OverlappingActors: $Ref<TArray<UE.Actor>>, ClassFilter?: UE.Class /* = None */) : void;
        GetOverlappingComponents(OutOverlappingComponents: $Ref<TArray<UE.PrimitiveComponent>>) : void;
        GetPhysicsAngularVelocity(BoneName?: string /* = "None" */) : UE.Vector;
        GetPhysicsAngularVelocityInDegrees(BoneName?: string /* = "None" */) : UE.Vector;
        GetPhysicsAngularVelocityInRadians(BoneName?: string /* = "None" */) : UE.Vector;
        GetPhysicsLinearVelocity(BoneName?: string /* = "None" */) : UE.Vector;
        GetPhysicsLinearVelocityAtPoint(Point: UE.Vector, BoneName?: string /* = "None" */) : UE.Vector;
        GetWalkableSlopeOverride() : UE.WalkableSlopeOverride;
        IgnoreActorWhenMoving(Actor: $Nullable<UE.Actor>, bShouldIgnore: boolean) : void;
        IgnoreComponentWhenMoving(Component: $Nullable<UE.PrimitiveComponent>, bShouldIgnore: boolean) : void;
        IsAnyRigidBodyAwake() : boolean;
        IsGravityEnabled() : boolean;
        IsOverlappingActor(Other: $Nullable<UE.Actor>) : boolean;
        IsOverlappingComponent(OtherComp: $Nullable<UE.PrimitiveComponent>) : boolean;
        K2_BoxOverlapComponent(InBoxCentre: UE.Vector, InBox: UE.Box, bTraceComplex: boolean, bShowTrace: boolean, bPersistentShowTrace: boolean, HitLocation: $Ref<UE.Vector>, HitNormal: $Ref<UE.Vector>, BoneName: $Ref<string>, OutHit: $Ref<UE.HitResult>) : boolean;
        K2_IsCollisionEnabled() : boolean;
        K2_IsPhysicsCollisionEnabled() : boolean;
        K2_IsQueryCollisionEnabled() : boolean;
        K2_LineTraceComponent(TraceStart: UE.Vector, TraceEnd: UE.Vector, bTraceComplex: boolean, bShowTrace: boolean, bPersistentShowTrace: boolean, HitLocation: $Ref<UE.Vector>, HitNormal: $Ref<UE.Vector>, BoneName: $Ref<string>, OutHit: $Ref<UE.HitResult>) : boolean;
        K2_SphereOverlapComponent(InSphereCentre: UE.Vector, InSphereRadius: number, bTraceComplex: boolean, bShowTrace: boolean, bPersistentShowTrace: boolean, HitLocation: $Ref<UE.Vector>, HitNormal: $Ref<UE.Vector>, BoneName: $Ref<string>, OutHit: $Ref<UE.HitResult>) : boolean;
        K2_SphereTraceComponent(TraceStart: UE.Vector, TraceEnd: UE.Vector, SphereRadius: number, bTraceComplex: boolean, bShowTrace: boolean, bPersistentShowTrace: boolean, HitLocation: $Ref<UE.Vector>, HitNormal: $Ref<UE.Vector>, BoneName: $Ref<string>, OutHit: $Ref<UE.HitResult>) : boolean;
        PutRigidBodyToSleep(BoneName?: string /* = "None" */) : void;
        ScaleByMomentOfInertia(InputVector: UE.Vector, BoneName?: string /* = "None" */) : UE.Vector;
        SetAllMassScale(InMassScale?: number /* = 1.000000 */) : void;
        SetAllPhysicsAngularVelocityInDegrees(NewAngVel: UE.Vector, bAddToCurrent?: boolean /* = false */) : void;
        SetAllPhysicsAngularVelocityInRadians(NewAngVel: UE.Vector, bAddToCurrent?: boolean /* = false */) : void;
        SetAllPhysicsLinearVelocity(NewVel: UE.Vector, bAddToCurrent?: boolean /* = false */) : void;
        SetAllUseCCD(InUseCCD: boolean) : void;
        SetAngularDamping(InDamping: number) : void;
        SetBoundsScale(NewBoundsScale?: number /* = 1.000000 */) : void;
        SetCastInsetShadow(bInCastInsetShadow: boolean) : void;
        SetCastShadow(NewCastShadow: boolean) : void;
        SetCenterOfMass(CenterOfMassOffset: UE.Vector, BoneName?: string /* = "None" */) : void;
        SetCollisionEnabled(NewType: UE.ECollisionEnabled) : void;
        SetCollisionObjectType(Channel: UE.ECollisionChannel) : void;
        SetCollisionProfileName(InCollisionProfileName: string, bUpdateOverlaps?: boolean /* = true */) : void;
        SetCollisionResponseToAllChannels(NewResponse: UE.ECollisionResponse) : void;
        SetCollisionResponseToChannel(Channel: UE.ECollisionChannel, NewResponse: UE.ECollisionResponse) : void;
        SetConstraintMode(ConstraintMode: UE.EDOFMode) : void;
        SetCullDistance(NewCullDistance: number) : void;
        SetCustomDepthStencilValue(Value: number) : void;
        SetCustomDepthStencilWriteMask(WriteMaskBit: UE.ERendererStencilMask) : void;
        SetCustomPrimitiveDataFloat(DataIndex: number, Value: number) : void;
        SetCustomPrimitiveDataVector2(DataIndex: number, Value: UE.Vector2D) : void;
        SetCustomPrimitiveDataVector3(DataIndex: number, Value: UE.Vector) : void;
        SetCustomPrimitiveDataVector4(DataIndex: number, Value: UE.Vector4) : void;
        SetDefaultCustomPrimitiveDataFloat(DataIndex: number, Value: number) : void;
        SetDefaultCustomPrimitiveDataVector2(DataIndex: number, Value: UE.Vector2D) : void;
        SetDefaultCustomPrimitiveDataVector3(DataIndex: number, Value: UE.Vector) : void;
        SetDefaultCustomPrimitiveDataVector4(DataIndex: number, Value: UE.Vector4) : void;
        SetEnableGravity(bGravityEnabled: boolean) : void;
        SetExcludeFromLightAttachmentGroup(bInExcludeFromLightAttachmentGroup: boolean) : void;
        SetGenerateOverlapEvents(bInGenerateOverlapEvents: boolean) : void;
        SetLightAttachmentsAsGroup(bInLightAttachmentsAsGroup: boolean) : void;
        SetLightingChannels(bChannel0: boolean, bChannel1: boolean, bChannel2: boolean) : void;
        SetLinearDamping(InDamping: number) : void;
        SetMassOverrideInKg(BoneName?: string /* = "None" */, MassInKg?: number /* = 1.000000 */, bOverrideMass?: boolean /* = true */) : void;
        SetMassScale(BoneName?: string /* = "None" */, InMassScale?: number /* = 1.000000 */) : void;
        SetMaterial(ElementIndex: number, Material: $Nullable<UE.MaterialInterface>) : void;
        SetMaterialByName(MaterialSlotName: string, Material: $Nullable<UE.MaterialInterface>) : void;
        SetNotifyRigidBodyCollision(bNewNotifyRigidBodyCollision: boolean) : void;
        SetOnlyOwnerSee(bNewOnlyOwnerSee: boolean) : void;
        SetOwnerNoSee(bNewOwnerNoSee: boolean) : void;
        SetPhysicsAngularVelocity(NewAngVel: UE.Vector, bAddToCurrent?: boolean /* = false */, BoneName?: string /* = "None" */) : void;
        SetPhysicsAngularVelocityInDegrees(NewAngVel: UE.Vector, bAddToCurrent?: boolean /* = false */, BoneName?: string /* = "None" */) : void;
        SetPhysicsAngularVelocityInRadians(NewAngVel: UE.Vector, bAddToCurrent?: boolean /* = false */, BoneName?: string /* = "None" */) : void;
        SetPhysicsLinearVelocity(NewVel: UE.Vector, bAddToCurrent?: boolean /* = false */, BoneName?: string /* = "None" */) : void;
        SetPhysicsMaxAngularVelocity(NewMaxAngVel: number, bAddToCurrent?: boolean /* = false */, BoneName?: string /* = "None" */) : void;
        SetPhysicsMaxAngularVelocityInDegrees(NewMaxAngVel: number, bAddToCurrent?: boolean /* = false */, BoneName?: string /* = "None" */) : void;
        SetPhysicsMaxAngularVelocityInRadians(NewMaxAngVel: number, bAddToCurrent?: boolean /* = false */, BoneName?: string /* = "None" */) : void;
        SetPhysMaterialOverride(NewPhysMaterial: $Nullable<UE.PhysicalMaterial>) : void;
        SetReceivesDecals(bNewReceivesDecals: boolean) : void;
        SetRenderCustomDepth(bValue: boolean) : void;
        SetRenderInMainPass(bValue: boolean) : void;
        SetSimulatePhysics(bSimulate: boolean) : void;
        SetSingleSampleShadowFromStationaryLights(bNewSingleSampleShadowFromStationaryLights: boolean) : void;
        SetTranslucentSortPriority(NewTranslucentSortPriority: number) : void;
        SetUseCCD(InUseCCD: boolean, BoneName?: string /* = "None" */) : void;
        SetWalkableSlopeOverride(NewOverride: UE.WalkableSlopeOverride) : void;
        WakeAllRigidBodies() : void;
        WakeRigidBody(BoneName?: string /* = "None" */) : void;
        WasRecentlyRendered(Tolerance?: number /* = 0.200000 */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PrimitiveComponent;
        static Load(InName: string): PrimitiveComponent;
    
        __tid_PrimitiveComponent_0__: boolean;
    }
    
    class BrushComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Brush: UE.Model;
        BrushBodySetup: UE.BodySetup;
        PrePivot: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushComponent;
        static Load(InName: string): BrushComponent;
    
        __tid_BrushComponent_0__: boolean;
    }
    
    class BuilderPoly {
        constructor();
        constructor(VertexIndices: TArray<number>, Direction: number, ItemName: string, PolyFlags: number);
        VertexIndices: TArray<number>;
        Direction: number;
        ItemName: string;
        PolyFlags: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BuilderPoly_0__: boolean;
    }
    
    class BrushBuilder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BitmapFilename: string;
        ToolTip: string;
        NotifyBadParams: boolean;
        Vertices: TArray<UE.Vector>;
        Polys: TArray<UE.BuilderPoly>;
        Layer: string;
        MergeCoplanars: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushBuilder;
        static Load(InName: string): BrushBuilder;
    
        __tid_BrushBuilder_0__: boolean;
    }
    
    class GeomSelection {
        constructor();
        constructor(Type: number, Index: number, SelectionIndex: number);
        Type: number;
        Index: number;
        SelectionIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeomSelection_0__: boolean;
    }
    
    class Brush extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrushType: UE.EBrushType;
        BrushColor: UE.Color;
        PolyFlags: number;
        bColored: boolean;
        bSolidWhenSelected: boolean;
        bPlaceableFromClassBrowser: boolean;
        bNotForClientOrServer: boolean;
        Brush: UE.Model;
        BrushComponent: UE.BrushComponent;
        BrushBuilder: UE.BrushBuilder;
        bInManipulation: boolean;
        SavedSelections: TArray<UE.GeomSelection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Brush;
        static Load(InName: string): Brush;
    
        __tid_Brush_0__: boolean;
    }
    
    class Volume extends UE.Brush {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Volume;
        static Load(InName: string): Volume;
    
        __tid_Volume_0__: boolean;
    }
    
    class PhysicsVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TerminalVelocity: number;
        Priority: number;
        FluidFriction: number;
        bWaterVolume: boolean;
        bPhysicsOnContact: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsVolume;
        static Load(InName: string): PhysicsVolume;
    
        __tid_PhysicsVolume_0__: boolean;
    }
    
    enum EComponentMobility { Static, Stationary, Movable, EComponentMobility_MAX, __typeKeyDoNoAccess}
    enum EDetachmentRule { KeepRelative, KeepWorld, EDetachmentRule_MAX, __typeKeyDoNoAccess}
    enum ERelativeTransformSpace { RTS_World, RTS_Actor, RTS_Component, RTS_ParentBoneSpace, RTS_MAX, __typeKeyDoNoAccess}
    class SceneComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicsVolume: TWeakObjectPtr<UE.PhysicsVolume>;
        AttachParent: UE.SceneComponent;
        AttachSocketName: string;
        AttachChildren: TArray<UE.SceneComponent>;
        ClientAttachedChildren: TArray<UE.SceneComponent>;
        RelativeLocation: UE.Vector;
        RelativeRotation: UE.Rotator;
        RelativeScale3D: UE.Vector;
        ComponentVelocity: UE.Vector;
        bComponentToWorldUpdated: boolean;
        bAbsoluteLocation: boolean;
        bAbsoluteRotation: boolean;
        bAbsoluteScale: boolean;
        bVisible: boolean;
        bShouldBeAttached: boolean;
        bShouldSnapLocationWhenAttached: boolean;
        bShouldSnapRotationWhenAttached: boolean;
        bShouldUpdatePhysicsVolume: boolean;
        bHiddenInGame: boolean;
        bBoundsChangeTriggersStreamingDataRebuild: boolean;
        bUseAttachParentBound: boolean;
        bVisualizeComponent: boolean;
        Mobility: UE.EComponentMobility;
        DetailMode: UE.EDetailMode;
        PhysicsVolumeChangedDelegate: $MulticastDelegate<(NewVolume: $Nullable<UE.PhysicsVolume>) => void>;
        DetachFromParent(bMaintainWorldPosition?: boolean /* = false */, bCallModify?: boolean /* = true */) : void;
        DoesSocketExist(InSocketName: string) : boolean;
        GetAllSocketNames() : TArray<string>;
        GetAttachParent() : UE.SceneComponent;
        GetAttachSocketName() : string;
        GetChildComponent(ChildIndex: number) : UE.SceneComponent;
        GetChildrenComponents(bIncludeAllDescendants: boolean, Children: $Ref<TArray<UE.SceneComponent>>) : void;
        GetComponentVelocity() : UE.Vector;
        GetForwardVector() : UE.Vector;
        GetNumChildrenComponents() : number;
        GetParentComponents(Parents: $Ref<TArray<UE.SceneComponent>>) : void;
        GetPhysicsVolume() : UE.PhysicsVolume;
        GetRelativeTransform() : UE.Transform;
        GetRightVector() : UE.Vector;
        GetShouldUpdatePhysicsVolume() : boolean;
        GetSocketLocation(InSocketName: string) : UE.Vector;
        GetSocketQuaternion(InSocketName: string) : UE.Quat;
        GetSocketRotation(InSocketName: string) : UE.Rotator;
        GetSocketTransform(InSocketName: string, TransformSpace?: UE.ERelativeTransformSpace /* = RTS_World */) : UE.Transform;
        GetUpVector() : UE.Vector;
        IsAnySimulatingPhysics() : boolean;
        IsSimulatingPhysics(BoneName?: string /* = "None" */) : boolean;
        IsVisible() : boolean;
        K2_AddLocalOffset(DeltaLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddLocalRotation(DeltaRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddLocalTransform(DeltaTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddRelativeLocation(DeltaLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddRelativeRotation(DeltaRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddWorldOffset(DeltaLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddWorldRotation(DeltaRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddWorldTransform(DeltaTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddWorldTransformKeepScale(DeltaTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AttachTo(InParent: $Nullable<UE.SceneComponent>, InSocketName?: string /* = "None" */, AttachType?: UE.EAttachLocation /* = KeepRelativeOffset */, bWeldSimulatedBodies?: boolean /* = true */) : boolean;
        K2_AttachToComponent(Parent: $Nullable<UE.SceneComponent>, SocketName: string, LocationRule: UE.EAttachmentRule, RotationRule: UE.EAttachmentRule, ScaleRule: UE.EAttachmentRule, bWeldSimulatedBodies: boolean) : boolean;
        K2_DetachFromComponent(LocationRule?: UE.EDetachmentRule /* = KeepRelative */, RotationRule?: UE.EDetachmentRule /* = KeepRelative */, ScaleRule?: UE.EDetachmentRule /* = KeepRelative */, bCallModify?: boolean /* = true */) : void;
        K2_GetComponentLocation() : UE.Vector;
        K2_GetComponentRotation() : UE.Rotator;
        K2_GetComponentScale() : UE.Vector;
        K2_GetComponentToWorld() : UE.Transform;
        K2_SetRelativeLocation(NewLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetRelativeLocationAndRotation(NewLocation: UE.Vector, NewRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetRelativeRotation(NewRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetRelativeTransform(NewTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetWorldLocation(NewLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetWorldLocationAndRotation(NewLocation: UE.Vector, NewRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetWorldRotation(NewRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetWorldTransform(NewTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        OnRep_AttachChildren() : void;
        OnRep_AttachParent() : void;
        OnRep_AttachSocketName() : void;
        OnRep_Transform() : void;
        OnRep_Visibility(OldValue: boolean) : void;
        ResetRelativeTransform() : void;
        SetAbsolute(bNewAbsoluteLocation?: boolean /* = false */, bNewAbsoluteRotation?: boolean /* = false */, bNewAbsoluteScale?: boolean /* = false */) : void;
        SetHiddenInGame(NewHidden: boolean, bPropagateToChildren?: boolean /* = false */) : void;
        SetMobility(NewMobility: UE.EComponentMobility) : void;
        SetRelativeScale3D(NewScale3D: UE.Vector) : void;
        SetShouldUpdatePhysicsVolume(bInShouldUpdatePhysicsVolume: boolean) : void;
        SetupAttachment(p0: SceneComponent, p1: string) : void;
        SetVisibility(bNewVisibility: boolean, bPropagateToChildren?: boolean /* = false */) : void;
        SetWorldScale3D(NewScale: UE.Vector) : void;
        SnapTo(InParent: $Nullable<UE.SceneComponent>, InSocketName?: string /* = "None" */) : boolean;
        ToggleVisibility(bPropagateToChildren?: boolean /* = false */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneComponent;
        static Load(InName: string): SceneComponent;
    
        __tid_SceneComponent_0__: boolean;
    }
    
    class RepAttachment {
        constructor();
        constructor(AttachParent: UE.Actor, LocationOffset: UE.Vector_NetQuantize100, RelativeScale3D: UE.Vector_NetQuantize100, RotationOffset: UE.Rotator, AttachSocket: string, AttachComponent: UE.SceneComponent);
        AttachParent: UE.Actor;
        LocationOffset: UE.Vector_NetQuantize100;
        RelativeScale3D: UE.Vector_NetQuantize100;
        RotationOffset: UE.Rotator;
        AttachSocket: string;
        AttachComponent: UE.SceneComponent;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RepAttachment_0__: boolean;
    }
    
    enum ENetDormancy { DORM_Never, DORM_Awake, DORM_DormantAll, DORM_DormantPartial, DORM_Initial, DORM_MAX, __typeKeyDoNoAccess}
    class InterpFilter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Caption: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpFilter;
        static Load(InName: string): InterpFilter;
    
        __tid_InterpFilter_0__: boolean;
    }
    
    class InterpGroupDirector extends UE.InterpGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpGroupDirector;
        static Load(InName: string): InterpGroupDirector;
    
        __tid_InterpGroupDirector_0__: boolean;
    }
    
    class InterpData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InterpLength: number;
        PathBuildTime: number;
        InterpGroups: TArray<UE.InterpGroup>;
        CurveEdSetup: UE.InterpCurveEdSetup;
        InterpFilters: TArray<UE.InterpFilter>;
        SelectedFilter: UE.InterpFilter;
        DefaultFilters: TArray<UE.InterpFilter>;
        EdSectionStart: number;
        EdSectionEnd: number;
        bShouldBakeAndPrune: boolean;
        CachedDirectorGroup: UE.InterpGroupDirector;
        AllEventNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpData;
        static Load(InName: string): InterpData;
    
        __tid_InterpData_0__: boolean;
    }
    
    class InterpGroupActorInfo {
        constructor();
        constructor(ObjectName: string, Actors: TArray<UE.Actor>);
        ObjectName: string;
        Actors: TArray<UE.Actor>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpGroupActorInfo_0__: boolean;
    }
    
    class CameraCutInfo {
        constructor();
        constructor(Location: UE.Vector, TimeStamp: number);
        Location: UE.Vector;
        TimeStamp: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraCutInfo_0__: boolean;
    }
    
    class MatineeActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MatineeData: UE.InterpData;
        MatineeControllerName: string;
        PlayRate: number;
        bPlayOnLevelLoad: boolean;
        bForceStartPos: boolean;
        ForceStartPosition: number;
        bLooping: boolean;
        bRewindOnPlay: boolean;
        bNoResetOnRewind: boolean;
        bRewindIfAlreadyPlaying: boolean;
        bDisableRadioFilter: boolean;
        bClientSideOnly: boolean;
        bSkipUpdateIfNotVisible: boolean;
        bIsSkippable: boolean;
        PreferredSplitScreenNum: number;
        bDisableMovementInput: boolean;
        bDisableLookAtInput: boolean;
        bHidePlayer: boolean;
        bHideHud: boolean;
        GroupActorInfos: TArray<UE.InterpGroupActorInfo>;
        bShouldShowGore: boolean;
        GroupInst: TArray<UE.InterpGroupInst>;
        CameraCuts: TArray<UE.CameraCutInfo>;
        SpriteComponent: UE.BillboardComponent;
        bIsBeingEdited: boolean;
        bIsScrubbing: boolean;
        bIsPlaying: boolean;
        bReversePlayback: boolean;
        bPaused: boolean;
        bPendingStop: boolean;
        InterpPosition: number;
        ReplicationForceIsPlaying: number;
        OnPlay: $MulticastDelegate<() => void>;
        OnStop: $MulticastDelegate<() => void>;
        OnPause: $MulticastDelegate<() => void>;
        ChangePlaybackDirection() : void;
        EnableGroupByName(GroupName: string, bEnable: boolean) : void;
        Pause() : void;
        Play() : void;
        Reverse() : void;
        SetLoopingState(bNewLooping: boolean) : void;
        SetPosition(NewPosition: number, bJump?: boolean /* = false */) : void;
        Stop() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MatineeActor;
        static Load(InName: string): MatineeActor;
    
        __tid_MatineeActor_0__: boolean;
    }
    
    enum EChildActorComponentTreeViewVisualizationMode { UseDefault, ComponentOnly, ComponentWithChildActor, ChildActorOnly, EChildActorComponentTreeViewVisualizationMode_MAX, __typeKeyDoNoAccess}
    class ChildActorComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChildActorClass: UE.Class;
        ChildActor: UE.Actor;
        ChildActorTemplate: UE.Actor;
        EditorTreeViewVisualizationMode: UE.EChildActorComponentTreeViewVisualizationMode;
        SetChildActorClass(InClass: $Nullable<UE.Class>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChildActorComponent;
        static Load(InName: string): ChildActorComponent;
    
        __tid_ChildActorComponent_0__: boolean;
    }
    
    class Actor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PrimaryActorTick: UE.ActorTickFunction;
        bNetTemporary: boolean;
        bNetStartup: boolean;
        bOnlyRelevantToOwner: boolean;
        bAlwaysRelevant: boolean;
        bReplicateMovement: boolean;
        bHidden: boolean;
        bTearOff: boolean;
        bExchangedRoles: boolean;
        bNetLoadOnClient: boolean;
        bNetUseOwnerRelevancy: boolean;
        bRelevantForNetworkReplays: boolean;
        bRelevantForLevelBounds: boolean;
        bReplayRewindable: boolean;
        bAllowTickBeforeBeginPlay: boolean;
        bAutoDestroyWhenFinished: boolean;
        bCanBeDamaged: boolean;
        bBlockInput: boolean;
        bCollideWhenPlacing: boolean;
        bFindCameraComponentWhenViewTarget: boolean;
        bGenerateOverlapEventsDuringLevelStreaming: boolean;
        bIgnoresOriginShifting: boolean;
        bEnableAutoLODGeneration: boolean;
        bIsEditorOnlyActor: boolean;
        bActorSeamlessTraveled: boolean;
        bReplicates: boolean;
        bCanBeInCluster: boolean;
        bAllowReceiveTickEventOnDedicatedServer: boolean;
        bActorEnableCollision: boolean;
        bActorIsBeingDestroyed: boolean;
        UpdateOverlapsMethodDuringLevelStreaming: UE.EActorUpdateOverlapsMethod;
        DefaultUpdateOverlapsMethodDuringLevelStreaming: UE.EActorUpdateOverlapsMethod;
        RemoteRole: UE.ENetRole;
        ReplicatedMovement: UE.RepMovement;
        InitialLifeSpan: number;
        CustomTimeDilation: number;
        AttachmentReplication: UE.RepAttachment;
        Owner: UE.Actor;
        NetDriverName: string;
        Role: UE.ENetRole;
        NetDormancy: UE.ENetDormancy;
        SpawnCollisionHandlingMethod: UE.ESpawnActorCollisionHandlingMethod;
        AutoReceiveInput: UE.EAutoReceiveInput;
        InputPriority: number;
        InputComponent: UE.InputComponent;
        NetCullDistanceSquared: number;
        NetTag: number;
        NetUpdateFrequency: number;
        MinNetUpdateFrequency: number;
        NetPriority: number;
        Instigator: UE.Pawn;
        Children: TArray<UE.Actor>;
        RootComponent: UE.SceneComponent;
        PivotOffset: UE.Vector;
        ControllingMatineeActors: TArray<UE.MatineeActor>;
        Layers: TArray<string>;
        ParentComponentActor: TWeakObjectPtr<UE.Actor>;
        ParentComponent: TWeakObjectPtr<UE.ChildActorComponent>;
        ActorGuid: UE.Guid;
        GroupActor: UE.Actor;
        SpriteScale: number;
        HiddenEditorViews: bigint;
        ActorLabel: string;
        FolderPath: string;
        bHiddenEd: boolean;
        bIsEditorPreviewActor: boolean;
        bHiddenEdLayer: boolean;
        bHiddenEdLevel: boolean;
        bLockLocation: boolean;
        bActorLabelEditable: boolean;
        bEditable: boolean;
        bListedInSceneOutliner: boolean;
        bOptimizeBPComponentData: boolean;
        bHiddenEdTemporary: boolean;
        Tags: TArray<string>;
        OnTakeAnyDamage: $MulticastDelegate<(DamagedActor: $Nullable<UE.Actor>, Damage: number, DamageType: $Nullable<UE.DamageType>, InstigatedBy: $Nullable<UE.Controller>, DamageCauser: $Nullable<UE.Actor>) => void>;
        OnTakePointDamage: $MulticastDelegate<(DamagedActor: $Nullable<UE.Actor>, Damage: number, InstigatedBy: $Nullable<UE.Controller>, HitLocation: UE.Vector, FHitComponent: $Nullable<UE.PrimitiveComponent>, BoneName: string, ShotFromDirection: UE.Vector, DamageType: $Nullable<UE.DamageType>, DamageCauser: $Nullable<UE.Actor>) => void>;
        OnTakeRadialDamage: $MulticastDelegate<(DamagedActor: $Nullable<UE.Actor>, Damage: number, DamageType: $Nullable<UE.DamageType>, Origin: UE.Vector, HitInfo: UE.HitResult, InstigatedBy: $Nullable<UE.Controller>, DamageCauser: $Nullable<UE.Actor>) => void>;
        OnActorBeginOverlap: $MulticastDelegate<(OverlappedActor: $Nullable<UE.Actor>, OtherActor: $Nullable<UE.Actor>) => void>;
        OnActorEndOverlap: $MulticastDelegate<(OverlappedActor: $Nullable<UE.Actor>, OtherActor: $Nullable<UE.Actor>) => void>;
        OnBeginCursorOver: $MulticastDelegate<(TouchedActor: $Nullable<UE.Actor>) => void>;
        OnEndCursorOver: $MulticastDelegate<(TouchedActor: $Nullable<UE.Actor>) => void>;
        OnClicked: $MulticastDelegate<(TouchedActor: $Nullable<UE.Actor>, ButtonPressed: UE.Key) => void>;
        OnReleased: $MulticastDelegate<(TouchedActor: $Nullable<UE.Actor>, ButtonReleased: UE.Key) => void>;
        OnInputTouchBegin: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedActor: $Nullable<UE.Actor>) => void>;
        OnInputTouchEnd: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedActor: $Nullable<UE.Actor>) => void>;
        OnInputTouchEnter: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedActor: $Nullable<UE.Actor>) => void>;
        OnInputTouchLeave: $MulticastDelegate<(FingerIndex: UE.ETouchIndex, TouchedActor: $Nullable<UE.Actor>) => void>;
        OnActorHit: $MulticastDelegate<(SelfActor: $Nullable<UE.Actor>, OtherActor: $Nullable<UE.Actor>, NormalImpulse: UE.Vector, Hit: UE.HitResult) => void>;
        OnDestroyed: $MulticastDelegate<(DestroyedActor: $Nullable<UE.Actor>) => void>;
        OnEndPlay: $MulticastDelegate<(Actor: $Nullable<UE.Actor>, EndPlayReason: UE.EEndPlayReason) => void>;
        InstanceComponents: TArray<UE.ActorComponent>;
        BlueprintCreatedComponents: TArray<UE.ActorComponent>;
        ActorHasTag(Tag: string) : boolean;
        AddComponent(TemplateName: string, bManualAttachment: boolean, RelativeTransform: UE.Transform, ComponentTemplateContext: $Nullable<UE.Object>, bDeferredFinish?: boolean /* = false */) : UE.ActorComponent;
        AddComponentByClass(Class: $Nullable<UE.Class>, bManualAttachment: boolean, RelativeTransform: UE.Transform, bDeferredFinish: boolean) : UE.ActorComponent;
        AddTickPrerequisiteActor(PrerequisiteActor: $Nullable<UE.Actor>) : void;
        AddTickPrerequisiteComponent(PrerequisiteComponent: $Nullable<UE.ActorComponent>) : void;
        DetachRootComponentFromParent(bMaintainWorldPosition?: boolean /* = true */) : void;
        DisableInput(PlayerController: $Nullable<UE.PlayerController>) : void;
        EnableInput(PlayerController: $Nullable<UE.PlayerController>) : void;
        FinishAddComponent(Component: $Nullable<UE.ActorComponent>, bManualAttachment: boolean, RelativeTransform: UE.Transform) : void;
        FlushNetDormancy() : void;
        ForceNetUpdate() : void;
        GetActorBounds(bOnlyCollidingComponents: boolean, Origin: $Ref<UE.Vector>, BoxExtent: $Ref<UE.Vector>, bIncludeFromChildActors?: boolean /* = false */) : void;
        GetActorEnableCollision() : boolean;
        GetActorEyesViewPoint(OutLocation: $Ref<UE.Vector>, OutRotation: $Ref<UE.Rotator>) : void;
        GetActorForwardVector() : UE.Vector;
        GetActorLabel() : string;
        GetActorRelativeScale3D() : UE.Vector;
        GetActorRightVector() : UE.Vector;
        GetActorScale3D() : UE.Vector;
        GetActorTickInterval() : number;
        GetActorTimeDilation() : number;
        GetActorUpVector() : UE.Vector;
        GetAllChildActors(ChildActors: $Ref<TArray<UE.Actor>>, bIncludeDescendants?: boolean /* = true */) : void;
        GetAttachedActors(OutActors: $Ref<TArray<UE.Actor>>, bResetArray?: boolean /* = true */) : void;
        GetAttachParentActor() : UE.Actor;
        GetAttachParentSocketName() : string;
        GetComponentByClass(ComponentClass: $Nullable<UE.Class>) : UE.ActorComponent;
        GetComponentsByInterface(Interface: $Nullable<UE.Class>) : TArray<UE.ActorComponent>;
        GetComponentsByTag(ComponentClass: $Nullable<UE.Class>, Tag: string) : TArray<UE.ActorComponent>;
        GetDistanceTo(OtherActor: $Nullable<UE.Actor>) : number;
        GetDotProductTo(OtherActor: $Nullable<UE.Actor>) : number;
        GetFolderPath() : string;
        GetGameTimeSinceCreation() : number;
        GetHorizontalDistanceTo(OtherActor: $Nullable<UE.Actor>) : number;
        GetHorizontalDotProductTo(OtherActor: $Nullable<UE.Actor>) : number;
        GetInputAxisKeyValue(InputAxisKey: UE.Key) : number;
        GetInputAxisValue(InputAxisName: string) : number;
        GetInputVectorAxisValue(InputAxisKey: UE.Key) : UE.Vector;
        GetInstigator() : UE.Pawn;
        GetInstigatorController() : UE.Controller;
        GetLifeSpan() : number;
        GetLocalRole() : UE.ENetRole;
        GetOverlappingActors(OverlappingActors: $Ref<TArray<UE.Actor>>, ClassFilter?: UE.Class /* = None */) : void;
        GetOverlappingComponents(OverlappingComponents: $Ref<TArray<UE.PrimitiveComponent>>) : void;
        GetOwner() : UE.Actor;
        GetParentActor() : UE.Actor;
        GetParentComponent() : UE.ChildActorComponent;
        GetRemoteRole() : UE.ENetRole;
        GetSquaredDistanceTo(OtherActor: $Nullable<UE.Actor>) : number;
        GetTickableWhenPaused() : boolean;
        GetTransform() : UE.Transform;
        GetVelocity() : UE.Vector;
        GetVerticalDistanceTo(OtherActor: $Nullable<UE.Actor>) : number;
        HasAuthority() : boolean;
        IsActorBeingDestroyed() : boolean;
        IsActorTickEnabled() : boolean;
        IsChildActor() : boolean;
        IsEditable() : boolean;
        IsHiddenEd() : boolean;
        IsHiddenEdAtStartup() : boolean;
        IsOverlappingActor(Other: $Nullable<UE.Actor>) : boolean;
        IsSelectable() : boolean;
        IsTemporarilyHiddenInEditor(bIncludeParent?: boolean /* = false */) : boolean;
        K2_AddActorLocalOffset(DeltaLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddActorLocalRotation(DeltaRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddActorLocalTransform(NewTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddActorWorldOffset(DeltaLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddActorWorldRotation(DeltaRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddActorWorldTransform(DeltaTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AddActorWorldTransformKeepScale(DeltaTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_AttachRootComponentTo(InParent: $Nullable<UE.SceneComponent>, InSocketName?: string /* = "None" */, AttachLocationType?: UE.EAttachLocation /* = KeepRelativeOffset */, bWeldSimulatedBodies?: boolean /* = true */) : void;
        K2_AttachRootComponentToActor(InParentActor: $Nullable<UE.Actor>, InSocketName?: string /* = "None" */, AttachLocationType?: UE.EAttachLocation /* = KeepRelativeOffset */, bWeldSimulatedBodies?: boolean /* = true */) : void;
        K2_AttachToActor(ParentActor: $Nullable<UE.Actor>, SocketName: string, LocationRule: UE.EAttachmentRule, RotationRule: UE.EAttachmentRule, ScaleRule: UE.EAttachmentRule, bWeldSimulatedBodies: boolean) : void;
        K2_AttachToComponent(Parent: $Nullable<UE.SceneComponent>, SocketName: string, LocationRule: UE.EAttachmentRule, RotationRule: UE.EAttachmentRule, ScaleRule: UE.EAttachmentRule, bWeldSimulatedBodies: boolean) : void;
        K2_DestroyActor() : void;
        K2_DestroyComponent(Component: $Nullable<UE.ActorComponent>) : void;
        K2_DetachFromActor(LocationRule?: UE.EDetachmentRule /* = KeepRelative */, RotationRule?: UE.EDetachmentRule /* = KeepRelative */, ScaleRule?: UE.EDetachmentRule /* = KeepRelative */) : void;
        K2_GetActorLocation() : UE.Vector;
        K2_GetActorRotation() : UE.Rotator;
        K2_GetComponentsByClass(ComponentClass: $Nullable<UE.Class>) : TArray<UE.ActorComponent>;
        K2_GetRootComponent() : UE.SceneComponent;
        K2_OnBecomeViewTarget(PC: $Nullable<UE.PlayerController>) : void;
        K2_OnEndViewTarget(PC: $Nullable<UE.PlayerController>) : void;
        K2_OnReset() : void;
        K2_SetActorLocation(NewLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : boolean;
        K2_SetActorLocationAndRotation(NewLocation: UE.Vector, NewRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : boolean;
        K2_SetActorRelativeLocation(NewRelativeLocation: UE.Vector, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetActorRelativeRotation(NewRelativeRotation: UE.Rotator, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetActorRelativeTransform(NewRelativeTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : void;
        K2_SetActorRotation(NewRotation: UE.Rotator, bTeleportPhysics: boolean) : boolean;
        K2_SetActorTransform(NewTransform: UE.Transform, bSweep: boolean, SweepHitResult: $Ref<UE.HitResult>, bTeleport: boolean) : boolean;
        K2_TeleportTo(DestLocation: UE.Vector, DestRotation: UE.Rotator) : boolean;
        MakeMIDForMaterial(Parent: $Nullable<UE.MaterialInterface>) : UE.MaterialInstanceDynamic;
        MakeNoise(Loudness?: number /* = 1.000000 */, NoiseInstigator?: UE.Pawn /* = None */, NoiseLocation?: UE.Vector /* =  */, MaxRange?: number /* = 0.000000 */, Tag?: string /* = "None" */) : void;
        OnRep_AttachmentReplication() : void;
        OnRep_Instigator() : void;
        OnRep_Owner() : void;
        OnRep_ReplicatedMovement() : void;
        OnRep_ReplicateMovement() : void;
        PrestreamTextures(Seconds: number, bEnableStreaming: boolean, CinematicTextureGroups?: number /* = 0 */) : void;
        ReceiveActorBeginCursorOver() : void;
        ReceiveActorBeginOverlap(OtherActor: $Nullable<UE.Actor>) : void;
        ReceiveActorEndCursorOver() : void;
        ReceiveActorEndOverlap(OtherActor: $Nullable<UE.Actor>) : void;
        ReceiveActorOnClicked(ButtonPressed: UE.Key) : void;
        ReceiveActorOnInputTouchBegin(FingerIndex: UE.ETouchIndex) : void;
        ReceiveActorOnInputTouchEnd(FingerIndex: UE.ETouchIndex) : void;
        ReceiveActorOnInputTouchEnter(FingerIndex: UE.ETouchIndex) : void;
        ReceiveActorOnInputTouchLeave(FingerIndex: UE.ETouchIndex) : void;
        ReceiveActorOnReleased(ButtonReleased: UE.Key) : void;
        ReceiveAnyDamage(Damage: number, DamageType: $Nullable<UE.DamageType>, InstigatedBy: $Nullable<UE.Controller>, DamageCauser: $Nullable<UE.Actor>) : void;
        ReceiveBeginPlay() : void;
        ReceiveDestroyed() : void;
        ReceiveEndPlay(EndPlayReason: UE.EEndPlayReason) : void;
        ReceiveHit(MyComp: $Nullable<UE.PrimitiveComponent>, Other: $Nullable<UE.Actor>, OtherComp: $Nullable<UE.PrimitiveComponent>, bSelfMoved: boolean, HitLocation: UE.Vector, HitNormal: UE.Vector, NormalImpulse: UE.Vector, Hit: UE.HitResult) : void;
        ReceivePointDamage(Damage: number, DamageType: $Nullable<UE.DamageType>, HitLocation: UE.Vector, HitNormal: UE.Vector, HitComponent: $Nullable<UE.PrimitiveComponent>, BoneName: string, ShotFromDirection: UE.Vector, InstigatedBy: $Nullable<UE.Controller>, DamageCauser: $Nullable<UE.Actor>, HitInfo: UE.HitResult) : void;
        ReceiveRadialDamage(DamageReceived: number, DamageType: $Nullable<UE.DamageType>, Origin: UE.Vector, HitInfo: UE.HitResult, InstigatedBy: $Nullable<UE.Controller>, DamageCauser: $Nullable<UE.Actor>) : void;
        ReceiveTick(DeltaSeconds: number) : void;
        RemoveTickPrerequisiteActor(PrerequisiteActor: $Nullable<UE.Actor>) : void;
        RemoveTickPrerequisiteComponent(PrerequisiteComponent: $Nullable<UE.ActorComponent>) : void;
        SetActorEnableCollision(bNewActorEnableCollision: boolean) : void;
        SetActorHiddenInGame(bNewHidden: boolean) : void;
        SetActorLabel(NewActorLabel: string, bMarkDirty?: boolean /* = true */) : void;
        SetActorRelativeScale3D(NewRelativeScale: UE.Vector) : void;
        SetActorScale3D(NewScale3D: UE.Vector) : void;
        SetActorTickEnabled(bEnabled: boolean) : void;
        SetActorTickInterval(TickInterval: number) : void;
        SetAutoDestroyWhenFinished(bVal: boolean) : void;
        SetFolderPath(NewFolderPath: string) : void;
        SetIsTemporarilyHiddenInEditor(bIsHidden: boolean) : void;
        SetLifeSpan(InLifespan: number) : void;
        SetNetDormancy(NewDormancy: UE.ENetDormancy) : void;
        SetOwner(NewOwner: $Nullable<UE.Actor>) : void;
        SetReplicateMovement(bInReplicateMovement: boolean) : void;
        SetReplicates(bInReplicates: boolean) : void;
        SetTickableWhenPaused(bTickableWhenPaused: boolean) : void;
        SetTickGroup(NewTickGroup: UE.ETickingGroup) : void;
        SnapRootComponentTo(InParentActor: $Nullable<UE.Actor>, InSocketName: string) : void;
        TearOff() : void;
        UserConstructionScript() : void;
        WasRecentlyRendered(Tolerance?: number /* = 0.200000 */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Actor;
        static Load(InName: string): Actor;
    
        __tid_Actor_0__: boolean;
    }
    
    class NavDataConfig extends UE.NavAgentProperties {
        constructor();
        constructor(Name: string, Color: UE.Color, DefaultQueryExtent: UE.Vector, NavigationDataClass: UE.Class, NavDataClass: TSoftClassPtr<UE.Actor>);
        Name: string;
        Color: UE.Color;
        DefaultQueryExtent: UE.Vector;
        NavigationDataClass: UE.Class;
        NavDataClass: TSoftClassPtr<UE.Actor>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavDataConfig_0__: boolean;
    }
    
    enum ERuntimeGenerationType { Static, DynamicModifiersOnly, Dynamic, LegacyGeneration, ERuntimeGenerationType_MAX, __typeKeyDoNoAccess}
    class SupportedAreaData {
        constructor();
        constructor(AreaClassName: string, AreaID: number, AreaClass: UE.Class);
        AreaClassName: string;
        AreaID: number;
        AreaClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SupportedAreaData_0__: boolean;
    }
    
    class NavigationData extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderingComp: UE.PrimitiveComponent;
        NavDataConfig: UE.NavDataConfig;
        bEnableDrawing: boolean;
        bForceRebuildOnLoad: boolean;
        bAutoDestroyWhenNoNavigation: boolean;
        bCanBeMainNavData: boolean;
        bCanSpawnOnRebuild: boolean;
        bRebuildAtRuntime: boolean;
        RuntimeGeneration: UE.ERuntimeGenerationType;
        ObservedPathsTickInterval: number;
        DataVersion: number;
        SupportedAreas: TArray<UE.SupportedAreaData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationData;
        static Load(InName: string): NavigationData;
    
        __tid_NavigationData_0__: boolean;
    }
    
    class AbstractNavData extends UE.NavigationData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AbstractNavData;
        static Load(InName: string): AbstractNavData;
    
        __tid_AbstractNavData_0__: boolean;
    }
    
    class BlueprintFunctionLibrary extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintFunctionLibrary;
        static Load(InName: string): BlueprintFunctionLibrary;
    
        __tid_BlueprintFunctionLibrary_0__: boolean;
    }
    
    class AchievementBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetCachedAchievementDescription(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, AchievementID: string, bFoundID: $Ref<boolean>, Title: $Ref<string>, LockedDescription: $Ref<string>, UnlockedDescription: $Ref<string>, bHidden: $Ref<boolean>) : void;
        static GetCachedAchievementProgress(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, AchievementID: string, bFoundID: $Ref<boolean>, Progress: $Ref<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AchievementBlueprintLibrary;
        static Load(InName: string): AchievementBlueprintLibrary;
    
        __tid_AchievementBlueprintLibrary_0__: boolean;
    }
    
    class BlueprintAsyncActionBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Activate() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintAsyncActionBase;
        static Load(InName: string): BlueprintAsyncActionBase;
    
        __tid_BlueprintAsyncActionBase_0__: boolean;
    }
    
    class OnlineBlueprintCallProxyBase extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineBlueprintCallProxyBase;
        static Load(InName: string): OnlineBlueprintCallProxyBase;
    
        __tid_OnlineBlueprintCallProxyBase_0__: boolean;
    }
    
    class AchievementQueryCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<() => void>;
        OnFailure: $MulticastDelegate<() => void>;
        static CacheAchievementDescriptions(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>) : UE.AchievementQueryCallbackProxy;
        static CacheAchievements(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>) : UE.AchievementQueryCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AchievementQueryCallbackProxy;
        static Load(InName: string): AchievementQueryCallbackProxy;
    
        __tid_AchievementQueryCallbackProxy_0__: boolean;
    }
    
    class AchievementWriteCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(WrittenAchievementName: string, WrittenProgress: number, WrittenUserTag: number) => void>;
        OnFailure: $MulticastDelegate<(WrittenAchievementName: string, WrittenProgress: number, WrittenUserTag: number) => void>;
        static WriteAchievementProgress(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, AchievementName: string, Progress?: number /* = 100.000000 */, UserTag?: number /* = 0 */) : UE.AchievementWriteCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AchievementWriteCallbackProxy;
        static Load(InName: string): AchievementWriteCallbackProxy;
    
        __tid_AchievementWriteCallbackProxy_0__: boolean;
    }
    
    class ActiveGizmo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActiveGizmo_0__: boolean;
    }
    
    class ActiveHapticFeedbackEffect {
        constructor();
        constructor(HapticEffect: UE.HapticFeedbackEffect_Base);
        HapticEffect: UE.HapticFeedbackEffect_Base;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActiveHapticFeedbackEffect_0__: boolean;
    }
    
    class EditorUtilityObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Run() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityObject;
        static Load(InName: string): EditorUtilityObject;
    
        __tid_EditorUtilityObject_0__: boolean;
    }
    
    class ActorActionUtility extends UE.EditorUtilityObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetSupportedClass() : UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorActionUtility;
        static Load(InName: string): ActorActionUtility;
    
        __tid_ActorActionUtility_0__: boolean;
    }
    
    class ActorChannel extends UE.Channel {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Actor: UE.Actor;
        CreateSubObjects: TArray<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorChannel;
        static Load(InName: string): ActorChannel;
    
        __tid_ActorChannel_0__: boolean;
    }
    
    class ActorComponentDuplicatedObjectData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorComponentDuplicatedObjectData_0__: boolean;
    }
    
    class ActorComponentInstanceData {
        constructor();
        constructor(SourceComponentTemplate: UE.Object, SourceComponentCreationMethod: UE.EComponentCreationMethod, SourceComponentTypeSerializedIndex: number, SavedProperties: TArray<number>, UniqueTransientPackage: UE.ActorComponentDuplicatedObjectData, DuplicatedObjects: TArray<UE.ActorComponentDuplicatedObjectData>, ReferencedObjects: TArray<UE.Object>, ReferencedNames: TArray<string>);
        SourceComponentTemplate: UE.Object;
        SourceComponentCreationMethod: UE.EComponentCreationMethod;
        SourceComponentTypeSerializedIndex: number;
        SavedProperties: TArray<number>;
        UniqueTransientPackage: UE.ActorComponentDuplicatedObjectData;
        DuplicatedObjects: TArray<UE.ActorComponentDuplicatedObjectData>;
        ReferencedObjects: TArray<UE.Object>;
        ReferencedNames: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorComponentInstanceData_0__: boolean;
    }
    
    class ActorComponentInstanceDataTransientOuter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorComponentInstanceDataTransientOuter;
        static Load(InName: string): ActorComponentInstanceDataTransientOuter;
    
        __tid_ActorComponentInstanceDataTransientOuter_0__: boolean;
    }
    
    class ActorFactory extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DisplayName: string;
        MenuPriority: number;
        NewActorClassName: string;
        NewActorClass: UE.Class;
        bShowInEditorQuickMenu: boolean;
        bUseSurfaceOrientation: boolean;
        SpawnPositionOffset: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactory;
        static Load(InName: string): ActorFactory;
    
        __tid_ActorFactory_0__: boolean;
    }
    
    class ActorFactoryAmbientSound extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryAmbientSound;
        static Load(InName: string): ActorFactoryAmbientSound;
    
        __tid_ActorFactoryAmbientSound_0__: boolean;
    }
    
    class ActorFactorySkeletalMesh extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactorySkeletalMesh;
        static Load(InName: string): ActorFactorySkeletalMesh;
    
        __tid_ActorFactorySkeletalMesh_0__: boolean;
    }
    
    class ActorFactoryAnimationAsset extends UE.ActorFactorySkeletalMesh {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryAnimationAsset;
        static Load(InName: string): ActorFactoryAnimationAsset;
    
        __tid_ActorFactoryAnimationAsset_0__: boolean;
    }
    
    class ActorFactoryAtmosphericFog extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryAtmosphericFog;
        static Load(InName: string): ActorFactoryAtmosphericFog;
    
        __tid_ActorFactoryAtmosphericFog_0__: boolean;
    }
    
    class ActorFactoryStaticMesh extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryStaticMesh;
        static Load(InName: string): ActorFactoryStaticMesh;
    
        __tid_ActorFactoryStaticMesh_0__: boolean;
    }
    
    class ActorFactoryBasicShape extends UE.ActorFactoryStaticMesh {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryBasicShape;
        static Load(InName: string): ActorFactoryBasicShape;
    
        __tid_ActorFactoryBasicShape_0__: boolean;
    }
    
    class ActorFactoryBlueprint extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryBlueprint;
        static Load(InName: string): ActorFactoryBlueprint;
    
        __tid_ActorFactoryBlueprint_0__: boolean;
    }
    
    class ActorFactoryBoxReflectionCapture extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryBoxReflectionCapture;
        static Load(InName: string): ActorFactoryBoxReflectionCapture;
    
        __tid_ActorFactoryBoxReflectionCapture_0__: boolean;
    }
    
    class ActorFactoryVolume extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryVolume;
        static Load(InName: string): ActorFactoryVolume;
    
        __tid_ActorFactoryVolume_0__: boolean;
    }
    
    class ActorFactoryBoxVolume extends UE.ActorFactoryVolume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryBoxVolume;
        static Load(InName: string): ActorFactoryBoxVolume;
    
        __tid_ActorFactoryBoxVolume_0__: boolean;
    }
    
    class ActorFactoryCameraActor extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryCameraActor;
        static Load(InName: string): ActorFactoryCameraActor;
    
        __tid_ActorFactoryCameraActor_0__: boolean;
    }
    
    class ActorFactoryChaosSolver extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryChaosSolver;
        static Load(InName: string): ActorFactoryChaosSolver;
    
        __tid_ActorFactoryChaosSolver_0__: boolean;
    }
    
    class ActorFactoryCharacter extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryCharacter;
        static Load(InName: string): ActorFactoryCharacter;
    
        __tid_ActorFactoryCharacter_0__: boolean;
    }
    
    class ActorFactoryClass extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryClass;
        static Load(InName: string): ActorFactoryClass;
    
        __tid_ActorFactoryClass_0__: boolean;
    }
    
    class ActorFactoryCylinderVolume extends UE.ActorFactoryVolume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryCylinderVolume;
        static Load(InName: string): ActorFactoryCylinderVolume;
    
        __tid_ActorFactoryCylinderVolume_0__: boolean;
    }
    
    class ActorFactoryDeferredDecal extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryDeferredDecal;
        static Load(InName: string): ActorFactoryDeferredDecal;
    
        __tid_ActorFactoryDeferredDecal_0__: boolean;
    }
    
    class ActorFactoryDirectionalLight extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryDirectionalLight;
        static Load(InName: string): ActorFactoryDirectionalLight;
    
        __tid_ActorFactoryDirectionalLight_0__: boolean;
    }
    
    class ActorFactoryEmitter extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryEmitter;
        static Load(InName: string): ActorFactoryEmitter;
    
        __tid_ActorFactoryEmitter_0__: boolean;
    }
    
    class ActorFactoryEmptyActor extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bVisualizeActor: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryEmptyActor;
        static Load(InName: string): ActorFactoryEmptyActor;
    
        __tid_ActorFactoryEmptyActor_0__: boolean;
    }
    
    class ActorFactoryExponentialHeightFog extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryExponentialHeightFog;
        static Load(InName: string): ActorFactoryExponentialHeightFog;
    
        __tid_ActorFactoryExponentialHeightFog_0__: boolean;
    }
    
    class ActorFactoryGeometryCache extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryGeometryCache;
        static Load(InName: string): ActorFactoryGeometryCache;
    
        __tid_ActorFactoryGeometryCache_0__: boolean;
    }
    
    class ActorFactoryGeometryCollection extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryGeometryCollection;
        static Load(InName: string): ActorFactoryGeometryCollection;
    
        __tid_ActorFactoryGeometryCollection_0__: boolean;
    }
    
    class ActorFactoryInteractiveFoliage extends UE.ActorFactoryStaticMesh {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryInteractiveFoliage;
        static Load(InName: string): ActorFactoryInteractiveFoliage;
    
        __tid_ActorFactoryInteractiveFoliage_0__: boolean;
    }
    
    class ActorFactoryLandscape extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryLandscape;
        static Load(InName: string): ActorFactoryLandscape;
    
        __tid_ActorFactoryLandscape_0__: boolean;
    }
    
    class ActorFactoryMatineeActor extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryMatineeActor;
        static Load(InName: string): ActorFactoryMatineeActor;
    
        __tid_ActorFactoryMatineeActor_0__: boolean;
    }
    
    class ActorFactoryMovieScene extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryMovieScene;
        static Load(InName: string): ActorFactoryMovieScene;
    
        __tid_ActorFactoryMovieScene_0__: boolean;
    }
    
    class ActorFactoryNiagara extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryNiagara;
        static Load(InName: string): ActorFactoryNiagara;
    
        __tid_ActorFactoryNiagara_0__: boolean;
    }
    
    class ActorFactoryNote extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryNote;
        static Load(InName: string): ActorFactoryNote;
    
        __tid_ActorFactoryNote_0__: boolean;
    }
    
    class ActorFactoryPawn extends UE.ActorFactoryEmptyActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryPawn;
        static Load(InName: string): ActorFactoryPawn;
    
        __tid_ActorFactoryPawn_0__: boolean;
    }
    
    class ActorFactoryPhysicsAsset extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryPhysicsAsset;
        static Load(InName: string): ActorFactoryPhysicsAsset;
    
        __tid_ActorFactoryPhysicsAsset_0__: boolean;
    }
    
    class ActorFactoryPlanarReflection extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryPlanarReflection;
        static Load(InName: string): ActorFactoryPlanarReflection;
    
        __tid_ActorFactoryPlanarReflection_0__: boolean;
    }
    
    class ActorFactoryPlaneReflectionCapture extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryPlaneReflectionCapture;
        static Load(InName: string): ActorFactoryPlaneReflectionCapture;
    
        __tid_ActorFactoryPlaneReflectionCapture_0__: boolean;
    }
    
    class ActorFactoryPlayerStart extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryPlayerStart;
        static Load(InName: string): ActorFactoryPlayerStart;
    
        __tid_ActorFactoryPlayerStart_0__: boolean;
    }
    
    class ActorFactoryPointLight extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryPointLight;
        static Load(InName: string): ActorFactoryPointLight;
    
        __tid_ActorFactoryPointLight_0__: boolean;
    }
    
    class ActorFactoryProceduralFoliage extends UE.ActorFactoryBoxVolume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryProceduralFoliage;
        static Load(InName: string): ActorFactoryProceduralFoliage;
    
        __tid_ActorFactoryProceduralFoliage_0__: boolean;
    }
    
    class ActorFactoryRectLight extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryRectLight;
        static Load(InName: string): ActorFactoryRectLight;
    
        __tid_ActorFactoryRectLight_0__: boolean;
    }
    
    class ActorFactoryRuntimeVirtualTextureVolume extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryRuntimeVirtualTextureVolume;
        static Load(InName: string): ActorFactoryRuntimeVirtualTextureVolume;
    
        __tid_ActorFactoryRuntimeVirtualTextureVolume_0__: boolean;
    }
    
    class ActorFactorySkyAtmosphere extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactorySkyAtmosphere;
        static Load(InName: string): ActorFactorySkyAtmosphere;
    
        __tid_ActorFactorySkyAtmosphere_0__: boolean;
    }
    
    class ActorFactorySkyLight extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactorySkyLight;
        static Load(InName: string): ActorFactorySkyLight;
    
        __tid_ActorFactorySkyLight_0__: boolean;
    }
    
    class ActorFactorySphereReflectionCapture extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactorySphereReflectionCapture;
        static Load(InName: string): ActorFactorySphereReflectionCapture;
    
        __tid_ActorFactorySphereReflectionCapture_0__: boolean;
    }
    
    class ActorFactorySphereVolume extends UE.ActorFactoryVolume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactorySphereVolume;
        static Load(InName: string): ActorFactorySphereVolume;
    
        __tid_ActorFactorySphereVolume_0__: boolean;
    }
    
    class ActorFactorySpotLight extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactorySpotLight;
        static Load(InName: string): ActorFactorySpotLight;
    
        __tid_ActorFactorySpotLight_0__: boolean;
    }
    
    class ActorFactoryTargetPoint extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryTargetPoint;
        static Load(InName: string): ActorFactoryTargetPoint;
    
        __tid_ActorFactoryTargetPoint_0__: boolean;
    }
    
    class ActorFactoryTextRender extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryTextRender;
        static Load(InName: string): ActorFactoryTextRender;
    
        __tid_ActorFactoryTextRender_0__: boolean;
    }
    
    class ActorFactoryTriggerBox extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryTriggerBox;
        static Load(InName: string): ActorFactoryTriggerBox;
    
        __tid_ActorFactoryTriggerBox_0__: boolean;
    }
    
    class ActorFactoryTriggerCapsule extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryTriggerCapsule;
        static Load(InName: string): ActorFactoryTriggerCapsule;
    
        __tid_ActorFactoryTriggerCapsule_0__: boolean;
    }
    
    class ActorFactoryTriggerSphere extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryTriggerSphere;
        static Load(InName: string): ActorFactoryTriggerSphere;
    
        __tid_ActorFactoryTriggerSphere_0__: boolean;
    }
    
    class ActorFactoryVectorFieldVolume extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryVectorFieldVolume;
        static Load(InName: string): ActorFactoryVectorFieldVolume;
    
        __tid_ActorFactoryVectorFieldVolume_0__: boolean;
    }
    
    class ActorFactoryVolumetricCloud extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorFactoryVolumetricCloud;
        static Load(InName: string): ActorFactoryVolumetricCloud;
    
        __tid_ActorFactoryVolumetricCloud_0__: boolean;
    }
    
    class ActorFolderProps {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorFolderProps_0__: boolean;
    }
    
    class ActorGroupingUtils extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddSelectedToGroup() : void;
        GroupActors(ActorsToGroup: TArray<UE.Actor>) : void;
        GroupSelected() : void;
        LockSelectedGroups() : void;
        RemoveSelectedFromGroup() : void;
        UngroupActors(ActorsToUngroup: TArray<UE.Actor>) : void;
        UngroupSelected() : void;
        UnlockSelectedGroups() : void;
        static Get() : UE.ActorGroupingUtils;
        static IsGroupingActive() : boolean;
        static SetGroupingActive(bInGroupingActive: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorGroupingUtils;
        static Load(InName: string): ActorGroupingUtils;
    
        __tid_ActorGroupingUtils_0__: boolean;
    }
    
    class ActorLayer {
        constructor();
        constructor(Name: string);
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorLayer_0__: boolean;
    }
    
    class AIStimulus {
        constructor();
        constructor(Age: number, ExpirationAge: number, Strength: number, StimulusLocation: UE.Vector, ReceiverLocation: UE.Vector, Tag: string, bSuccessfullySensed: boolean);
        Age: number;
        ExpirationAge: number;
        Strength: number;
        StimulusLocation: UE.Vector;
        ReceiverLocation: UE.Vector;
        Tag: string;
        bSuccessfullySensed: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIStimulus_0__: boolean;
    }
    
    class ActorPerceptionBlueprintInfo {
        constructor();
        constructor(Target: UE.Actor, LastSensedStimuli: TArray<UE.AIStimulus>, bIsHostile: boolean);
        Target: UE.Actor;
        LastSensedStimuli: TArray<UE.AIStimulus>;
        bIsHostile: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorPerceptionBlueprintInfo_0__: boolean;
    }
    
    class ActorPerceptionUpdateInfo {
        constructor();
        constructor(TargetId: number, Target: TWeakObjectPtr<UE.Actor>, Stimulus: UE.AIStimulus);
        TargetId: number;
        Target: TWeakObjectPtr<UE.Actor>;
        Stimulus: UE.AIStimulus;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorPerceptionUpdateInfo_0__: boolean;
    }
    
    class SequenceRecordingBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceRecordingBase;
        static Load(InName: string): SequenceRecordingBase;
    
        __tid_SequenceRecordingBase_0__: boolean;
    }
    
    class ActorRecordingSettings {
        constructor();
        constructor(Settings: TArray<UE.Object>);
        Settings: TArray<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorRecordingSettings_0__: boolean;
    }
    
    class LevelSequenceObjectReferenceMap {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceObjectReferenceMap_0__: boolean;
    }
    
    class LevelSequenceBindingReference {
        constructor();
        constructor(PackageName: string, ExternalObjectPath: UE.SoftObjectPath, ObjectPath: string);
        PackageName: string;
        ExternalObjectPath: UE.SoftObjectPath;
        ObjectPath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceBindingReference_0__: boolean;
    }
    
    class LevelSequenceBindingReferenceArray {
        constructor();
        constructor(References: TArray<UE.LevelSequenceBindingReference>);
        References: TArray<UE.LevelSequenceBindingReference>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceBindingReferenceArray_0__: boolean;
    }
    
    class LevelSequenceBindingReferences {
        constructor();
        constructor(BindingIdToReferences: TMap<UE.Guid, UE.LevelSequenceBindingReferenceArray>, AnimSequenceInstances: TSet<UE.Guid>);
        BindingIdToReferences: TMap<UE.Guid, UE.LevelSequenceBindingReferenceArray>;
        AnimSequenceInstances: TSet<UE.Guid>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceBindingReferences_0__: boolean;
    }
    
    class LevelSequenceObject {
        constructor();
        constructor(ObjectOrOwner: TLazyObjectPtr<UE.Object>, ComponentName: string, CachedComponent: TWeakObjectPtr<UE.Object>);
        ObjectOrOwner: TLazyObjectPtr<UE.Object>;
        ComponentName: string;
        CachedComponent: TWeakObjectPtr<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceObject_0__: boolean;
    }
    
    class LevelSequence extends UE.MovieSceneSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MovieScene: UE.MovieScene;
        ObjectReferences: UE.LevelSequenceObjectReferenceMap;
        BindingReferences: UE.LevelSequenceBindingReferences;
        PossessedObjects: TMap<string, UE.LevelSequenceObject>;
        DirectorBlueprint: UE.Blueprint;
        DirectorClass: UE.Class;
        MetaDataObjects: TArray<UE.Object>;
        AssetUserData: TArray<UE.AssetUserData>;
        CopyMetaData(InMetaData: $Nullable<UE.Object>) : UE.Object;
        FindMetaDataByClass(InClass: $Nullable<UE.Class>) : UE.Object;
        FindOrAddMetaDataByClass(InClass: $Nullable<UE.Class>) : UE.Object;
        RemoveMetaDataByClass(InClass: $Nullable<UE.Class>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequence;
        static Load(InName: string): LevelSequence;
    
        __tid_LevelSequence_0__: boolean;
    }
    
    class AnimationRecordingSettings {
        constructor();
        constructor(bRecordInWorldSpace: boolean, bRemoveRootAnimation: boolean, bAutoSaveAsset: boolean, SampleRate: number, Length: number, InterpMode: UE.ERichCurveInterpMode, TangentMode: UE.ERichCurveTangentMode, bRecordTransforms: boolean, bRecordCurves: boolean);
        bRecordInWorldSpace: boolean;
        bRemoveRootAnimation: boolean;
        bAutoSaveAsset: boolean;
        SampleRate: number;
        Length: number;
        InterpMode: UE.ERichCurveInterpMode;
        TangentMode: UE.ERichCurveTangentMode;
        bRecordTransforms: boolean;
        bRecordCurves: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationRecordingSettings_0__: boolean;
    }
    
    class ActorRecording extends UE.SequenceRecordingBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActorSettings: UE.ActorRecordingSettings;
        bActive: boolean;
        bCreateLevelSequence: boolean;
        TargetLevelSequence: UE.LevelSequence;
        TargetName: string;
        TakeNumber: number;
        bSpecifyTargetAnimation: boolean;
        TargetAnimation: UE.AnimSequence;
        AnimationSettings: UE.AnimationRecordingSettings;
        bRecordToPossessable: boolean;
        ActorToRecord: TSoftObjectPtr<UE.Actor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorRecording;
        static Load(InName: string): ActorRecording;
    
        __tid_ActorRecording_0__: boolean;
    }
    
    enum EActorSequenceObjectReferenceType { ContextActor, ExternalActor, Component, EActorSequenceObjectReferenceType_MAX, __typeKeyDoNoAccess}
    class ActorSequenceObjectReference {
        constructor();
        constructor(Type: UE.EActorSequenceObjectReferenceType, ActorId: UE.Guid, PathToComponent: string);
        Type: UE.EActorSequenceObjectReferenceType;
        ActorId: UE.Guid;
        PathToComponent: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorSequenceObjectReference_0__: boolean;
    }
    
    class ActorSequenceObjectReferences {
        constructor();
        constructor(Array: TArray<UE.ActorSequenceObjectReference>);
        Array: TArray<UE.ActorSequenceObjectReference>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorSequenceObjectReferences_0__: boolean;
    }
    
    class ActorSequenceObjectReferenceMap {
        constructor();
        constructor(BindingIds: TArray<UE.Guid>, References: TArray<UE.ActorSequenceObjectReferences>);
        BindingIds: TArray<UE.Guid>;
        References: TArray<UE.ActorSequenceObjectReferences>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ActorSequenceObjectReferenceMap_0__: boolean;
    }
    
    class ActorSequence extends UE.MovieSceneSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MovieScene: UE.MovieScene;
        ObjectReferences: UE.ActorSequenceObjectReferenceMap;
        bHasBeenInitialized: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorSequence;
        static Load(InName: string): ActorSequence;
    
        __tid_ActorSequence_0__: boolean;
    }
    
    class MovieSceneSequenceLoopCount {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceLoopCount_0__: boolean;
    }
    
    class MovieSceneSequencePlaybackSettings {
        constructor();
        constructor(bAutoPlay: boolean, LoopCount: UE.MovieSceneSequenceLoopCount, PlayRate: number, StartTime: number, bRandomStartTime: boolean, bRestoreState: boolean, bDisableMovementInput: boolean, bDisableLookAtInput: boolean, bHidePlayer: boolean, bHideHud: boolean, bDisableCameraCuts: boolean, bPauseAtEnd: boolean);
        bAutoPlay: boolean;
        LoopCount: UE.MovieSceneSequenceLoopCount;
        PlayRate: number;
        StartTime: number;
        bRandomStartTime: boolean;
        bRestoreState: boolean;
        bDisableMovementInput: boolean;
        bDisableLookAtInput: boolean;
        bHidePlayer: boolean;
        bHideHud: boolean;
        bDisableCameraCuts: boolean;
        bPauseAtEnd: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequencePlaybackSettings_0__: boolean;
    }
    
    enum EMovieScenePlayerStatus { Stopped, Playing, Recording, Scrubbing, Jumping, Stepping, Paused, MAX, __typeKeyDoNoAccess}
    class MovieSceneSequenceReplProperties {
        constructor();
        constructor(LastKnownPosition: UE.FrameTime, LastKnownStatus: UE.EMovieScenePlayerStatus, LastKnownNumLoops: number);
        LastKnownPosition: UE.FrameTime;
        LastKnownStatus: UE.EMovieScenePlayerStatus;
        LastKnownNumLoops: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceReplProperties_0__: boolean;
    }
    
    class MovieScenePlaybackClient extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePlaybackClient;
        static Load(InName: string): MovieScenePlaybackClient;
    
        __tid_MovieScenePlaybackClient_0__: boolean;
    }
    
    class MovieSceneSequenceTickManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SequenceActors: TArray<UE.Actor>;
        Linker: UE.MovieSceneEntitySystemLinker;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSequenceTickManager;
        static Load(InName: string): MovieSceneSequenceTickManager;
    
        __tid_MovieSceneSequenceTickManager_0__: boolean;
    }
    
    enum EMovieScenePositionType { Frame, Time, MarkedFrame, EMovieScenePositionType_MAX, __typeKeyDoNoAccess}
    enum EUpdatePositionMethod { Play, Jump, Scrub, EUpdatePositionMethod_MAX, __typeKeyDoNoAccess}
    class MovieSceneSequencePlaybackParams {
        constructor();
        constructor(Frame: UE.FrameTime, Time: number, MarkedFrame: string, PositionType: UE.EMovieScenePositionType, UpdateMethod: UE.EUpdatePositionMethod);
        Frame: UE.FrameTime;
        Time: number;
        MarkedFrame: string;
        PositionType: UE.EMovieScenePositionType;
        UpdateMethod: UE.EUpdatePositionMethod;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequencePlaybackParams_0__: boolean;
    }
    
    class QualifiedFrameTime {
        constructor();
        constructor(Time: UE.FrameTime, Rate: UE.FrameRate);
        Time: UE.FrameTime;
        Rate: UE.FrameRate;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_QualifiedFrameTime_0__: boolean;
    }
    
    class MovieSceneSequencePlayer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnPlay: $MulticastDelegate<() => void>;
        OnPlayReverse: $MulticastDelegate<() => void>;
        OnStop: $MulticastDelegate<() => void>;
        OnPause: $MulticastDelegate<() => void>;
        OnFinished: $MulticastDelegate<() => void>;
        Status: UE.EMovieScenePlayerStatus;
        bReversePlayback: boolean;
        Sequence: UE.MovieSceneSequence;
        StartTime: UE.FrameNumber;
        DurationFrames: number;
        DurationSubFrames: number;
        CurrentNumLoops: number;
        PlaybackSettings: UE.MovieSceneSequencePlaybackSettings;
        RootTemplateInstance: UE.MovieSceneRootEvaluationTemplateInstance;
        NetSyncProps: UE.MovieSceneSequenceReplProperties;
        PlaybackClient: MovieScenePlaybackClient;
        TickManager: UE.MovieSceneSequenceTickManager;
        ChangePlaybackDirection() : void;
        GetBoundObjects(ObjectBinding: UE.MovieSceneObjectBindingID) : TArray<UE.Object>;
        GetCurrentTime() : UE.QualifiedFrameTime;
        GetDisableCameraCuts() : boolean;
        GetDuration() : UE.QualifiedFrameTime;
        GetEndTime() : UE.QualifiedFrameTime;
        GetFrameDuration() : number;
        GetFrameRate() : UE.FrameRate;
        GetObjectBindings(InObject: $Nullable<UE.Object>) : TArray<UE.MovieSceneObjectBindingID>;
        GetPlayRate() : number;
        GetStartTime() : UE.QualifiedFrameTime;
        GoToEndAndStop() : void;
        IsPaused() : boolean;
        IsPlaying() : boolean;
        IsReversed() : boolean;
        JumpToFrame(NewPosition: UE.FrameTime) : void;
        JumpToMarkedFrame(InLabel: string) : boolean;
        JumpToSeconds(TimeInSeconds: number) : void;
        Pause() : void;
        Play() : void;
        PlayLooping(NumLoops?: number /* = -1 */) : void;
        PlayReverse() : void;
        PlayTo(PlaybackParams: UE.MovieSceneSequencePlaybackParams) : void;
        PlayToFrame(NewPosition: UE.FrameTime) : void;
        PlayToMarkedFrame(InLabel: string) : boolean;
        PlayToSeconds(TimeInSeconds: number) : void;
        RPC_ExplicitServerUpdateEvent(Method: UE.EUpdatePositionMethod, RelevantTime: UE.FrameTime) : void;
        RPC_OnStopEvent(StoppedTime: UE.FrameTime) : void;
        Scrub() : void;
        ScrubToFrame(NewPosition: UE.FrameTime) : void;
        ScrubToMarkedFrame(InLabel: string) : boolean;
        ScrubToSeconds(TimeInSeconds: number) : void;
        SetDisableCameraCuts(bInDisableCameraCuts: boolean) : void;
        SetFrameRange(StartFrame: number, Duration: number, SubFrames?: number /* = 0.000000 */) : void;
        SetFrameRate(FrameRate: UE.FrameRate) : void;
        SetPlaybackPosition(PlaybackParams: UE.MovieSceneSequencePlaybackParams) : void;
        SetPlayRate(PlayRate: number) : void;
        SetTimeRange(StartTime: number, Duration: number) : void;
        Stop() : void;
        StopAtCurrentTime() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSequencePlayer;
        static Load(InName: string): MovieSceneSequencePlayer;
    
        __tid_MovieSceneSequencePlayer_0__: boolean;
    }
    
    class ActorSequencePlayer extends UE.MovieSceneSequencePlayer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorSequencePlayer;
        static Load(InName: string): ActorSequencePlayer;
    
        __tid_ActorSequencePlayer_0__: boolean;
    }
    
    class ActorSequenceComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlaybackSettings: UE.MovieSceneSequencePlaybackSettings;
        Sequence: UE.ActorSequence;
        SequencePlayer: UE.ActorSequencePlayer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorSequenceComponent;
        static Load(InName: string): ActorSequenceComponent;
    
        __tid_ActorSequenceComponent_0__: boolean;
    }
    
    class EditorWorldExtensionActorData {
        constructor();
        constructor(Actor: UE.Actor, bValidForPIE: boolean);
        Actor: UE.Actor;
        bValidForPIE: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorWorldExtensionActorData_0__: boolean;
    }
    
    class EditorWorldExtension extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ExtensionActors: TArray<UE.EditorWorldExtensionActorData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorWorldExtension;
        static Load(InName: string): EditorWorldExtension;
    
        __tid_EditorWorldExtension_0__: boolean;
    }
    
    class ViewportActionKeyInput {
        constructor();
        constructor(ActionType: string, Event: UE.EInputEvent, bIsInputCaptured: boolean);
        ActionType: string;
        Event: UE.EInputEvent;
        bIsInputCaptured: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ViewportActionKeyInput_0__: boolean;
    }
    
    enum EHitResultGizmoFilterMode { All, NoGizmos, GizmosOnly, EHitResultGizmoFilterMode_MAX, __typeKeyDoNoAccess}
    enum EViewportInteractionDraggingMode { Nothing, TransformablesWithGizmo, TransformablesAtLaserImpact, AssistingDrag, TransformablesFreely, World, Interactable, Material, EViewportInteractionDraggingMode_MAX, __typeKeyDoNoAccess}
    class ViewportInteractor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        KeyToActionMap: TMap<UE.Key, UE.ViewportActionKeyInput>;
        WorldInteraction: UE.ViewportWorldInteraction;
        OtherInteractor: UE.ViewportInteractor;
        CanCarry() : boolean;
        GetDraggingMode() : UE.EViewportInteractionDraggingMode;
        GetHitResultGizmoFilterMode() : UE.EHitResultGizmoFilterMode;
        GetHoverLocation() : UE.Vector;
        GetLaserPointer(LaserPointerStart: $Ref<UE.Vector>, LaserPointerEnd: $Ref<UE.Vector>, bEvenIfBlocked?: boolean /* = false */, LaserLengthOverride?: number /* = 0.000000 */) : boolean;
        GetLastRoomSpaceTransform() : UE.Transform;
        GetLastTransform() : UE.Transform;
        GetOtherInteractor() : UE.ViewportInteractor;
        GetRoomSpaceTransform() : UE.Transform;
        GetTransform() : UE.Transform;
        GetTransformAndForwardVector(OutHandTransform: $Ref<UE.Transform>, OutForwardVector: $Ref<UE.Vector>) : boolean;
        GetWorldInteraction() : UE.ViewportWorldInteraction;
        HandleInputAxis_BP(Action: UE.ViewportActionKeyInput, Key: UE.Key, Delta: number, DeltaTime: number, bOutWasHandled: $Ref<boolean>) : void;
        HandleInputKey_BP(Action: UE.ViewportActionKeyInput, Key: UE.Key, Event: UE.EInputEvent, bOutWasHandled: $Ref<boolean>) : void;
        IsHoveringOverGizmo() : boolean;
        SetCanCarry(bInCanCarry: boolean) : void;
        SetDraggingMode(NewDraggingMode: UE.EViewportInteractionDraggingMode) : void;
        SetHitResultGizmoFilterMode(newFilter: UE.EHitResultGizmoFilterMode) : void;
        Shutdown() : void;
        Tick(DeltaTime: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportInteractor;
        static Load(InName: string): ViewportInteractor;
    
        __tid_ViewportInteractor_0__: boolean;
    }
    
    class GizmoHandle {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GizmoHandle_0__: boolean;
    }
    
    class ViewportDragOperation extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportDragOperation;
        static Load(InName: string): ViewportDragOperation;
    
        __tid_ViewportDragOperation_0__: boolean;
    }
    
    class ViewportDragOperationComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DragOperation: UE.ViewportDragOperation;
        DragOperationSubclass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportDragOperationComponent;
        static Load(InName: string): ViewportDragOperationComponent;
    
        __tid_ViewportDragOperationComponent_0__: boolean;
    }
    
    class GizmoHandleGroup extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GizmoMaterial: UE.MaterialInterface;
        TranslucentGizmoMaterial: UE.MaterialInterface;
        Handles: TArray<UE.GizmoHandle>;
        OwningTransformGizmoActor: UE.BaseTransformGizmo;
        DragOperationComponent: UE.ViewportDragOperationComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoHandleGroup;
        static Load(InName: string): GizmoHandleGroup;
    
        __tid_GizmoHandleGroup_0__: boolean;
    }
    
    class BaseTransformGizmo extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SceneComponent: UE.SceneComponent;
        AllHandleGroups: TArray<UE.GizmoHandleGroup>;
        WorldInteraction: UE.ViewportWorldInteraction;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BaseTransformGizmo;
        static Load(InName: string): BaseTransformGizmo;
    
        __tid_BaseTransformGizmo_0__: boolean;
    }
    
    class MouseCursorInteractor extends UE.ViewportInteractor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MouseCursorInteractor;
        static Load(InName: string): MouseCursorInteractor;
    
        __tid_MouseCursorInteractor_0__: boolean;
    }
    
    class ViewportInteractionAssetContainer extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GizmoHandleSelectedSound: UE.SoundBase;
        GizmoHandleDropSound: UE.SoundBase;
        SelectionChangeSound: UE.SoundBase;
        SelectionDropSound: UE.SoundBase;
        SelectionStartDragSound: UE.SoundBase;
        GridSnapSound: UE.SoundBase;
        ActorSnapSound: UE.SoundBase;
        UndoSound: UE.SoundBase;
        RedoSound: UE.SoundBase;
        GridMesh: UE.StaticMesh;
        TranslationHandleMesh: UE.StaticMesh;
        UniformScaleHandleMesh: UE.StaticMesh;
        ScaleHandleMesh: UE.StaticMesh;
        PlaneTranslationHandleMesh: UE.StaticMesh;
        RotationHandleMesh: UE.StaticMesh;
        RotationHandleSelectedMesh: UE.StaticMesh;
        StartRotationIndicatorMesh: UE.StaticMesh;
        CurrentRotationIndicatorMesh: UE.StaticMesh;
        FreeRotationHandleMesh: UE.StaticMesh;
        GridMaterial: UE.MaterialInterface;
        TransformGizmoMaterial: UE.MaterialInterface;
        TranslucentTransformGizmoMaterial: UE.MaterialInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportInteractionAssetContainer;
        static Load(InName: string): ViewportInteractionAssetContainer;
    
        __tid_ViewportInteractionAssetContainer_0__: boolean;
    }
    
    class ViewportWorldInteraction extends UE.EditorWorldExtension {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Interactors: TArray<UE.ViewportInteractor>;
        ViewportTransformer: UE.ViewportTransformer;
        TransformGizmoActor: UE.BaseTransformGizmo;
        SnapGridActor: UE.Actor;
        SnapGridMeshComponent: UE.StaticMeshComponent;
        SnapGridMID: UE.MaterialInstanceDynamic;
        DefaultMouseCursorInteractor: UE.MouseCursorInteractor;
        ActorsToExcludeFromHitTest: TArray<TWeakObjectPtr<UE.Actor>>;
        AssetContainer: UE.ViewportInteractionAssetContainer;
        AddActorToExcludeFromHitTests(ActorToExcludeFromHitTests: $Nullable<UE.Actor>) : void;
        AddInteractor(Interactor: $Nullable<UE.ViewportInteractor>) : void;
        GetHeadTransform() : UE.Transform;
        GetInteractors() : TArray<UE.ViewportInteractor>;
        GetRoomSpaceHeadTransform() : UE.Transform;
        GetRoomTransform() : UE.Transform;
        GetTransformGizmoActor() : UE.BaseTransformGizmo;
        GetWorldScaleFactor() : number;
        RemoveInteractor(Interactor: $Nullable<UE.ViewportInteractor>) : void;
        SetHeadTransform(NewHeadTransform: UE.Transform) : void;
        SetRoomTransformForNextFrame(NewRoomTransform: UE.Transform) : void;
        SetWorldToMetersScale(NewWorldToMetersScale: number, bCompensateRoomWorldScale?: boolean /* = false */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportWorldInteraction;
        static Load(InName: string): ViewportWorldInteraction;
    
        __tid_ViewportWorldInteraction_0__: boolean;
    }
    
    class ViewportTransformer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ViewportWorldInteraction: UE.ViewportWorldInteraction;
        CanAlignToActors() : boolean;
        Init(InitViewportWorldInteraction: $Nullable<UE.ViewportWorldInteraction>) : void;
        OnStartDragging(Interactor: $Nullable<UE.ViewportInteractor>) : void;
        OnStopDragging(Interactor: $Nullable<UE.ViewportInteractor>) : void;
        ShouldCenterTransformGizmoPivot() : boolean;
        Shutdown() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportTransformer;
        static Load(InName: string): ViewportTransformer;
    
        __tid_ViewportTransformer_0__: boolean;
    }
    
    class ActorTransformer extends UE.ViewportTransformer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ActorTransformer;
        static Load(InName: string): ActorTransformer;
    
        __tid_ActorTransformer_0__: boolean;
    }
    
    class AdaptorTriangleID extends UE.ElementID {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AdaptorTriangleID_0__: boolean;
    }
    
    class AdaptorPolygon {
        constructor();
        constructor(PolygonGroupID: UE.PolygonGroupID, TriangulatedPolygonTriangleIndices: TArray<UE.AdaptorTriangleID>);
        PolygonGroupID: UE.PolygonGroupID;
        TriangulatedPolygonTriangleIndices: TArray<UE.AdaptorTriangleID>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AdaptorPolygon_0__: boolean;
    }
    
    class AdaptorPolygon2Group {
        constructor();
        constructor(RenderingSectionIndex: number, MaterialIndex: number, MaxTriangles: number);
        RenderingSectionIndex: number;
        MaterialIndex: number;
        MaxTriangles: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AdaptorPolygon2Group_0__: boolean;
    }
    
    class AddedPinData {
        constructor();
        constructor(PinType: UE.EdGraphPinType, PinName: string);
        PinType: UE.EdGraphPinType;
        PinName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AddedPinData_0__: boolean;
    }
    
    class AdvancedCopyCustomization extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AdvancedCopyCustomization;
        static Load(InName: string): AdvancedCopyCustomization;
    
        __tid_AdvancedCopyCustomization_0__: boolean;
    }
    
    class AdvancedCopyMap {
        constructor();
        constructor(ClassToCopy: UE.SoftClassPath, AdvancedCopyCustomization: UE.SoftClassPath);
        ClassToCopy: UE.SoftClassPath;
        AdvancedCopyCustomization: UE.SoftClassPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AdvancedCopyMap_0__: boolean;
    }
    
    class AdvancedCopyParams {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AdvancedCopyParams_0__: boolean;
    }
    
    enum EPathFollowingResult { Success, Blocked, OffPath, Aborted, Skipped_DEPRECATED, Invalid, EPathFollowingResult_MAX, __typeKeyDoNoAccess}
    class AIRequestID {
        constructor();
        constructor(RequestID: number);
        RequestID: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIRequestID_0__: boolean;
    }
    
    class AIAsyncTaskBlueprintProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(MovementResult: UE.EPathFollowingResult) => void>;
        OnFail: $MulticastDelegate<(MovementResult: UE.EPathFollowingResult) => void>;
        OnMoveCompleted(RequestID: UE.AIRequestID, MovementResult: UE.EPathFollowingResult) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIAsyncTaskBlueprintProxy;
        static Load(InName: string): AIAsyncTaskBlueprintProxy;
    
        __tid_AIAsyncTaskBlueprintProxy_0__: boolean;
    }
    
    class BTNode extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NodeName: string;
        TreeAsset: UE.BehaviorTree;
        ParentNode: UE.BTCompositeNode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTNode;
        static Load(InName: string): BTNode;
    
        __tid_BTNode_0__: boolean;
    }
    
    class BTAuxiliaryNode extends UE.BTNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTAuxiliaryNode;
        static Load(InName: string): BTAuxiliaryNode;
    
        __tid_BTAuxiliaryNode_0__: boolean;
    }
    
    class BTService extends UE.BTAuxiliaryNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Interval: number;
        RandomDeviation: number;
        bCallTickOnSearchStart: boolean;
        bRestartTimerOnEachActivation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTService;
        static Load(InName: string): BTService;
    
        __tid_BTService_0__: boolean;
    }
    
    class BTTaskNode extends UE.BTNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Services: TArray<UE.BTService>;
        bIgnoreRestartSelf: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTaskNode;
        static Load(InName: string): BTTaskNode;
    
        __tid_BTTaskNode_0__: boolean;
    }
    
    enum EBTFlowAbortMode { None, LowerPriority, Self, Both, EBTFlowAbortMode_MAX, __typeKeyDoNoAccess}
    class BTDecorator extends UE.BTAuxiliaryNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bInverseCondition: boolean;
        FlowAbortMode: UE.EBTFlowAbortMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator;
        static Load(InName: string): BTDecorator;
    
        __tid_BTDecorator_0__: boolean;
    }
    
    enum EBTDecoratorLogic { Invalid, Test, And, Or, Not, EBTDecoratorLogic_MAX, __typeKeyDoNoAccess}
    class BTDecoratorLogic {
        constructor();
        constructor(Operation: UE.EBTDecoratorLogic, Number: number);
        Operation: UE.EBTDecoratorLogic;
        Number: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BTDecoratorLogic_0__: boolean;
    }
    
    class BTCompositeChild {
        constructor();
        constructor(ChildComposite: UE.BTCompositeNode, ChildTask: UE.BTTaskNode, Decorators: TArray<UE.BTDecorator>, DecoratorOps: TArray<UE.BTDecoratorLogic>);
        ChildComposite: UE.BTCompositeNode;
        ChildTask: UE.BTTaskNode;
        Decorators: TArray<UE.BTDecorator>;
        DecoratorOps: TArray<UE.BTDecoratorLogic>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BTCompositeChild_0__: boolean;
    }
    
    class BTCompositeNode extends UE.BTNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Children: TArray<UE.BTCompositeChild>;
        Services: TArray<UE.BTService>;
        bApplyDecoratorScope: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTCompositeNode;
        static Load(InName: string): BTCompositeNode;
    
        __tid_BTCompositeNode_0__: boolean;
    }
    
    class BlackboardKeyType extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType;
        static Load(InName: string): BlackboardKeyType;
    
        __tid_BlackboardKeyType_0__: boolean;
    }
    
    class BlackboardEntry {
        constructor();
        constructor(EntryName: string, EntryDescription: string, KeyType: UE.BlackboardKeyType, bInstanceSynced: boolean);
        EntryName: string;
        EntryDescription: string;
        KeyType: UE.BlackboardKeyType;
        bInstanceSynced: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlackboardEntry_0__: boolean;
    }
    
    class BlackboardData extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Parent: UE.BlackboardData;
        ParentKeys: TArray<UE.BlackboardEntry>;
        Keys: TArray<UE.BlackboardEntry>;
        bHasSynchronizedKeys: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardData;
        static Load(InName: string): BlackboardData;
    
        __tid_BlackboardData_0__: boolean;
    }
    
    class BehaviorTree extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RootNode: UE.BTCompositeNode;
        BTGraph: UE.EdGraph;
        LastEditedDocuments: TArray<UE.EditedDocumentInfo>;
        BlackboardAsset: UE.BlackboardData;
        RootDecorators: TArray<UE.BTDecorator>;
        RootDecoratorOps: TArray<UE.BTDecoratorLogic>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTree;
        static Load(InName: string): BehaviorTree;
    
        __tid_BehaviorTree_0__: boolean;
    }
    
    enum ENavPathEvent { Cleared, NewPath, UpdatedDueToGoalMoved, UpdatedDueToNavigationChanged, Invalidated, RePathFailed, MetaPathUpdate, Custom, ENavPathEvent_MAX, __typeKeyDoNoAccess}
    enum ENavigationOptionFlag { Default, Enable, Disable, MAX, __typeKeyDoNoAccess}
    class NavigationPath extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PathUpdatedNotifier: $MulticastDelegate<(AffectedPath: $Nullable<UE.NavigationPath>, PathEvent: UE.ENavPathEvent) => void>;
        PathPoints: TArray<UE.Vector>;
        RecalculateOnInvalidation: UE.ENavigationOptionFlag;
        EnableDebugDrawing(bShouldDrawDebugData: boolean, PathColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        EnableRecalculationOnInvalidation(DoRecalculation: UE.ENavigationOptionFlag) : void;
        GetDebugString() : string;
        GetPathCost() : number;
        GetPathLength() : number;
        IsPartial() : boolean;
        IsStringPulled() : boolean;
        IsValid() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationPath;
        static Load(InName: string): NavigationPath;
    
        __tid_NavigationPath_0__: boolean;
    }
    
    enum EPathFollowingAction { Error, NoMove, DirectMove, PartialPath, PathToGoal, EPathFollowingAction_MAX, __typeKeyDoNoAccess}
    class PathFollowingComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MovementComp: UE.NavMovementComponent;
        MyNavData: UE.NavigationData;
        GetPathActionType() : UE.EPathFollowingAction;
        GetPathDestination() : UE.Vector;
        OnActorBump(SelfActor: $Nullable<UE.Actor>, OtherActor: $Nullable<UE.Actor>, NormalImpulse: UE.Vector, Hit: UE.HitResult) : void;
        OnNavDataRegistered(NavData: $Nullable<UE.NavigationData>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PathFollowingComponent;
        static Load(InName: string): PathFollowingComponent;
    
        __tid_PathFollowingComponent_0__: boolean;
    }
    
    class AISenseConfig extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DebugColor: UE.Color;
        MaxAge: number;
        bStartsEnabled: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig;
        static Load(InName: string): AISenseConfig;
    
        __tid_AISenseConfig_0__: boolean;
    }
    
    class AIPerceptionComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SensesConfig: TArray<UE.AISenseConfig>;
        DominantSense: UE.Class;
        AIOwner: UE.AIController;
        OnPerceptionUpdated: $MulticastDelegate<(UpdatedActors: TArray<UE.Actor>) => void>;
        OnTargetPerceptionUpdated: $MulticastDelegate<(Actor: $Nullable<UE.Actor>, Stimulus: UE.AIStimulus) => void>;
        OnTargetPerceptionInfoUpdated: $MulticastDelegate<(UpdateInfo: UE.ActorPerceptionUpdateInfo) => void>;
        ForgetAll() : void;
        GetActorsPerception(Actor: $Nullable<UE.Actor>, Info: $Ref<UE.ActorPerceptionBlueprintInfo>) : boolean;
        GetCurrentlyPerceivedActors(SenseToUse: $Nullable<UE.Class>, OutActors: $Ref<TArray<UE.Actor>>) : void;
        GetKnownPerceivedActors(SenseToUse: $Nullable<UE.Class>, OutActors: $Ref<TArray<UE.Actor>>) : void;
        GetPerceivedActors(SenseToUse: $Nullable<UE.Class>, OutActors: $Ref<TArray<UE.Actor>>) : void;
        GetPerceivedHostileActors(OutActors: $Ref<TArray<UE.Actor>>) : void;
        GetPerceivedHostileActorsBySense(SenseToUse: $Nullable<UE.Class>, OutActors: $Ref<TArray<UE.Actor>>) : void;
        OnOwnerEndPlay(Actor: $Nullable<UE.Actor>, EndPlayReason: UE.EEndPlayReason) : void;
        RequestStimuliListenerUpdate() : void;
        SetSenseEnabled(SenseClass: $Nullable<UE.Class>, bEnable: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIPerceptionComponent;
        static Load(InName: string): AIPerceptionComponent;
    
        __tid_AIPerceptionComponent_0__: boolean;
    }
    
    enum EAIRequestPriority { SoftScript, Logic, HardScript, Reaction, Ultimate, MAX, __typeKeyDoNoAccess}
    enum EPawnActionResult { NotStarted, InProgress, Success, Failed, Aborted, EPawnActionResult_MAX, __typeKeyDoNoAccess}
    class PawnAction extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChildAction: UE.PawnAction;
        ParentAction: UE.PawnAction;
        OwnerComponent: UE.PawnActionsComponent;
        Instigator: UE.Object;
        BrainComp: UE.BrainComponent;
        bAllowNewSameClassInstance: boolean;
        bReplaceActiveSameClassInstance: boolean;
        bShouldPauseMovement: boolean;
        bAlwaysNotifyOnFinished: boolean;
        Finish(WithResult: UE.EPawnActionResult) : void;
        GetActionPriority() : UE.EAIRequestPriority;
        static CreateActionInstance(WorldContextObject: $Nullable<UE.Object>, ActionClass: $Nullable<UE.Class>) : UE.PawnAction;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnAction;
        static Load(InName: string): PawnAction;
    
        __tid_PawnAction_0__: boolean;
    }
    
    class PawnActionStack {
        constructor();
        constructor(TopAction: UE.PawnAction);
        TopAction: UE.PawnAction;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PawnActionStack_0__: boolean;
    }
    
    class PawnActionEvent {
        constructor();
        constructor(Action: UE.PawnAction);
        Action: UE.PawnAction;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PawnActionEvent_0__: boolean;
    }
    
    enum EPawnActionAbortState { NeverStarted, NotBeingAborted, MarkPendingAbort, LatentAbortInProgress, AbortDone, MAX, __typeKeyDoNoAccess}
    class PawnActionsComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ControlledPawn: UE.Pawn;
        ActionStacks: TArray<UE.PawnActionStack>;
        ActionEvents: TArray<UE.PawnActionEvent>;
        CurrentAction: UE.PawnAction;
        K2_AbortAction(ActionToAbort: $Nullable<UE.PawnAction>) : UE.EPawnActionAbortState;
        K2_ForceAbortAction(ActionToAbort: $Nullable<UE.PawnAction>) : UE.EPawnActionAbortState;
        K2_PushAction(NewAction: $Nullable<UE.PawnAction>, Priority: UE.EAIRequestPriority, Instigator?: UE.Object /* = None */) : boolean;
        static K2_PerformAction(Pawn: $Nullable<UE.Pawn>, Action: $Nullable<UE.PawnAction>, Priority?: UE.EAIRequestPriority /* = HardScript */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnActionsComponent;
        static Load(InName: string): PawnActionsComponent;
    
        __tid_PawnActionsComponent_0__: boolean;
    }
    
    enum ETaskResourceOverlapPolicy { StartOnTop, StartAtEnd, ETaskResourceOverlapPolicy_MAX, __typeKeyDoNoAccess}
    class GameplayTask extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InstanceName: string;
        ResourceOverlapPolicy: UE.ETaskResourceOverlapPolicy;
        ChildTask: UE.GameplayTask;
        EndTask() : void;
        GenericGameplayTaskDelegate__DelegateSignature() : void;
        ReadyForActivation() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTask;
        static Load(InName: string): GameplayTask;
    
        __tid_GameplayTask_0__: boolean;
    }
    
    class GameplayResourceSet {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayResourceSet_0__: boolean;
    }
    
    class GameplayTaskOwnerInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTaskOwnerInterface;
        static Load(InName: string): GameplayTaskOwnerInterface;
    
        __tid_GameplayTaskOwnerInterface_0__: boolean;
    }
    
    enum EGameplayTaskRunResult { Error, Failed, Success_Paused, Success_Active, Success_Finished, EGameplayTaskRunResult_MAX, __typeKeyDoNoAccess}
    class GameplayTasksComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsNetDirty: boolean;
        SimulatedTasks: TArray<UE.GameplayTask>;
        TaskPriorityQueue: TArray<UE.GameplayTask>;
        TickingTasks: TArray<UE.GameplayTask>;
        KnownTasks: TArray<UE.GameplayTask>;
        OnClaimedResourcesChange: $MulticastDelegate<(NewlyClaimed: UE.GameplayResourceSet, FreshlyReleased: UE.GameplayResourceSet) => void>;
        OnRep_SimulatedTasks() : void;
        static K2_RunGameplayTask(TaskOwner: GameplayTaskOwnerInterface, Task: $Nullable<UE.GameplayTask>, Priority: number, AdditionalRequiredResources: TArray<UE.Class>, AdditionalClaimedResources: TArray<UE.Class>) : UE.EGameplayTaskRunResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTasksComponent;
        static Load(InName: string): GameplayTasksComponent;
    
        __tid_GameplayTasksComponent_0__: boolean;
    }
    
    enum EPathFollowingRequestResult { Failed, AlreadyAtGoal, RequestSuccessful, EPathFollowingRequestResult_MAX, __typeKeyDoNoAccess}
    enum EPathFollowingStatus { Idle, Waiting, Paused, Moving, EPathFollowingStatus_MAX, __typeKeyDoNoAccess}
    class AIController extends UE.Controller {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bStartAILogicOnPossess: boolean;
        bStopAILogicOnUnposses: boolean;
        bLOSflag: boolean;
        bSkipExtraLOSChecks: boolean;
        bAllowStrafe: boolean;
        bWantsPlayerState: boolean;
        bSetControlRotationFromPawnOrientation: boolean;
        PathFollowingComponent: UE.PathFollowingComponent;
        BrainComponent: UE.BrainComponent;
        PerceptionComponent: UE.AIPerceptionComponent;
        ActionsComp: UE.PawnActionsComponent;
        Blackboard: UE.BlackboardComponent;
        CachedGameplayTasksComponent: UE.GameplayTasksComponent;
        DefaultNavigationFilterClass: UE.Class;
        ReceiveMoveCompleted: $MulticastDelegate<(RequestID: UE.AIRequestID, Result: UE.EPathFollowingResult) => void>;
        ClaimTaskResource(ResourceClass: $Nullable<UE.Class>) : void;
        GetAIPerceptionComponent() : UE.AIPerceptionComponent;
        GetFocalPoint() : UE.Vector;
        GetFocalPointOnActor(Actor: $Nullable<UE.Actor>) : UE.Vector;
        GetFocusActor() : UE.Actor;
        GetImmediateMoveDestination() : UE.Vector;
        GetMoveStatus() : UE.EPathFollowingStatus;
        GetPathFollowingComponent() : UE.PathFollowingComponent;
        HasPartialPath() : boolean;
        K2_ClearFocus() : void;
        K2_SetFocalPoint(FP: UE.Vector) : void;
        K2_SetFocus(NewFocus: $Nullable<UE.Actor>) : void;
        MoveToActor(Goal: $Nullable<UE.Actor>, AcceptanceRadius?: number /* = -1.000000 */, bStopOnOverlap?: boolean /* = true */, bUsePathfinding?: boolean /* = true */, bCanStrafe?: boolean /* = true */, FilterClass?: UE.Class /* = None */, bAllowPartialPath?: boolean /* = true */) : UE.EPathFollowingRequestResult;
        MoveToLocation(Dest: UE.Vector, AcceptanceRadius?: number /* = -1.000000 */, bStopOnOverlap?: boolean /* = true */, bUsePathfinding?: boolean /* = true */, bProjectDestinationToNavigation?: boolean /* = false */, bCanStrafe?: boolean /* = true */, FilterClass?: UE.Class /* = None */, bAllowPartialPath?: boolean /* = true */) : UE.EPathFollowingRequestResult;
        OnGameplayTaskResourcesClaimed(NewlyClaimed: UE.GameplayResourceSet, FreshlyReleased: UE.GameplayResourceSet) : void;
        OnUsingBlackBoard(BlackboardComp: $Nullable<UE.BlackboardComponent>, BlackboardAsset: $Nullable<UE.BlackboardData>) : void;
        RunBehaviorTree(BTAsset: $Nullable<UE.BehaviorTree>) : boolean;
        SetMoveBlockDetection(bEnable: boolean) : void;
        SetPathFollowingComponent(NewPFComponent: $Nullable<UE.PathFollowingComponent>) : void;
        UnclaimTaskResource(ResourceClass: $Nullable<UE.Class>) : void;
        UseBlackboard(BlackboardAsset: $Nullable<UE.BlackboardData>, BlackboardComponent: $Ref<UE.BlackboardComponent>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIController;
        static Load(InName: string): AIController;
    
        __tid_AIController_0__: boolean;
    }
    
    class BrainComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlackboardComp: UE.BlackboardComponent;
        AIOwner: UE.AIController;
        IsPaused() : boolean;
        IsRunning() : boolean;
        RestartLogic() : void;
        StartLogic() : void;
        StopLogic(Reason: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrainComponent;
        static Load(InName: string): BrainComponent;
    
        __tid_BrainComponent_0__: boolean;
    }
    
    class BlackboardComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrainComp: UE.BrainComponent;
        DefaultBlackboardAsset: UE.BlackboardData;
        BlackboardAsset: UE.BlackboardData;
        KeyInstances: TArray<UE.BlackboardKeyType>;
        ClearValue(KeyName: string) : void;
        GetLocationFromEntry(KeyName: string, ResultLocation: $Ref<UE.Vector>) : boolean;
        GetRotationFromEntry(KeyName: string, ResultRotation: $Ref<UE.Rotator>) : boolean;
        GetValueAsBool(KeyName: string) : boolean;
        GetValueAsClass(KeyName: string) : UE.Class;
        GetValueAsEnum(KeyName: string) : number;
        GetValueAsFloat(KeyName: string) : number;
        GetValueAsInt(KeyName: string) : number;
        GetValueAsName(KeyName: string) : string;
        GetValueAsObject(KeyName: string) : UE.Object;
        GetValueAsRotator(KeyName: string) : UE.Rotator;
        GetValueAsString(KeyName: string) : string;
        GetValueAsVector(KeyName: string) : UE.Vector;
        IsVectorValueSet(KeyName: string) : boolean;
        SetValueAsBool(KeyName: string, BoolValue: boolean) : void;
        SetValueAsClass(KeyName: string, ClassValue: $Nullable<UE.Class>) : void;
        SetValueAsEnum(KeyName: string, EnumValue: number) : void;
        SetValueAsFloat(KeyName: string, FloatValue: number) : void;
        SetValueAsInt(KeyName: string, IntValue: number) : void;
        SetValueAsName(KeyName: string, NameValue: string) : void;
        SetValueAsObject(KeyName: string, ObjectValue: $Nullable<UE.Object>) : void;
        SetValueAsRotator(KeyName: string, VectorValue: UE.Rotator) : void;
        SetValueAsString(KeyName: string, StringValue: string) : void;
        SetValueAsVector(KeyName: string, VectorValue: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardComponent;
        static Load(InName: string): BlackboardComponent;
    
        __tid_BlackboardComponent_0__: boolean;
    }
    
    class AIBlueprintHelperLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateMoveToProxyObject(WorldContextObject: $Nullable<UE.Object>, Pawn: $Nullable<UE.Pawn>, Destination: UE.Vector, TargetActor?: UE.Actor /* = None */, AcceptanceRadius?: number /* = 5.000000 */, bStopOnOverlap?: boolean /* = false */) : UE.AIAsyncTaskBlueprintProxy;
        static GetAIController(ControlledActor: $Nullable<UE.Actor>) : UE.AIController;
        static GetBlackboard(Target: $Nullable<UE.Actor>) : UE.BlackboardComponent;
        static GetCurrentPath(Controller: $Nullable<UE.Controller>) : UE.NavigationPath;
        static GetCurrentPathIndex(Controller: $Nullable<UE.Controller>) : number;
        static GetCurrentPathPoints(Controller: $Nullable<UE.Controller>) : TArray<UE.Vector>;
        static GetNextNavLinkIndex(Controller: $Nullable<UE.Controller>) : number;
        static IsValidAIDirection(DirectionVector: UE.Vector) : boolean;
        static IsValidAILocation(Location: UE.Vector) : boolean;
        static IsValidAIRotation(Rotation: UE.Rotator) : boolean;
        static LockAIResourcesWithAnimation(AnimInstance: $Nullable<UE.AnimInstance>, bLockMovement: boolean, LockAILogic: boolean) : void;
        static SendAIMessage(Target: $Nullable<UE.Pawn>, Message: string, MessageSource: $Nullable<UE.Object>, bSuccess?: boolean /* = true */) : void;
        static SimpleMoveToActor(Controller: $Nullable<UE.Controller>, Goal: $Nullable<UE.Actor>) : void;
        static SimpleMoveToLocation(Controller: $Nullable<UE.Controller>, Goal: UE.Vector) : void;
        static SpawnAIFromClass(WorldContextObject: $Nullable<UE.Object>, PawnClass: $Nullable<UE.Class>, BehaviorTree: $Nullable<UE.BehaviorTree>, Location: UE.Vector, Rotation?: UE.Rotator /* =  */, bNoCollisionFail?: boolean /* = false */, Owner?: UE.Actor /* = None */) : UE.Pawn;
        static UnlockAIResourcesWithAnimation(AnimInstance: $Nullable<UE.AnimInstance>, bUnlockMovement: boolean, UnlockAILogic: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIBlueprintHelperLibrary;
        static Load(InName: string): AIBlueprintHelperLibrary;
    
        __tid_AIBlueprintHelperLibrary_0__: boolean;
    }
    
    class AIDamageEvent {
        constructor();
        constructor(Amount: number, Location: UE.Vector, HitLocation: UE.Vector, DamagedActor: UE.Actor, Instigator: UE.Actor);
        Amount: number;
        Location: UE.Vector;
        HitLocation: UE.Vector;
        DamagedActor: UE.Actor;
        Instigator: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDamageEvent_0__: boolean;
    }
    
    class AIDataProvider extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIDataProvider;
        static Load(InName: string): AIDataProvider;
    
        __tid_AIDataProvider_0__: boolean;
    }
    
    class AIDataProvider_QueryParams extends UE.AIDataProvider {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParamName: string;
        FloatValue: number;
        IntValue: number;
        BoolValue: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIDataProvider_QueryParams;
        static Load(InName: string): AIDataProvider_QueryParams;
    
        __tid_AIDataProvider_QueryParams_0__: boolean;
    }
    
    class AIDataProvider_Random extends UE.AIDataProvider_QueryParams {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: number;
        Max: number;
        bInteger: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIDataProvider_Random;
        static Load(InName: string): AIDataProvider_Random;
    
        __tid_AIDataProvider_Random_0__: boolean;
    }
    
    class AIDataProviderValue {
        constructor();
        constructor(DataBinding: UE.AIDataProvider, DataField: string);
        DataBinding: UE.AIDataProvider;
        DataField: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDataProviderValue_0__: boolean;
    }
    
    class AIDataProviderTypedValue extends UE.AIDataProviderValue {
        constructor();
        constructor(PropertyType: UE.Class);
        PropertyType: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDataProviderTypedValue_0__: boolean;
    }
    
    class AIDataProviderBoolValue extends UE.AIDataProviderTypedValue {
        constructor();
        constructor(DefaultValue: boolean);
        DefaultValue: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDataProviderBoolValue_0__: boolean;
    }
    
    class AIDataProviderFloatValue extends UE.AIDataProviderTypedValue {
        constructor();
        constructor(DefaultValue: number);
        DefaultValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDataProviderFloatValue_0__: boolean;
    }
    
    class AIDataProviderIntValue extends UE.AIDataProviderTypedValue {
        constructor();
        constructor(DefaultValue: number);
        DefaultValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDataProviderIntValue_0__: boolean;
    }
    
    class AIDataProviderStructValue extends UE.AIDataProviderValue {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDataProviderStructValue_0__: boolean;
    }
    
    enum EAIParamType { Float, Int, Bool, MAX, __typeKeyDoNoAccess}
    class BlackboardKeySelector {
        constructor();
        constructor(AllowedTypes: TArray<UE.BlackboardKeyType>, SelectedKeyName: string, SelectedKeyType: UE.Class, SelectedKeyID: number, bNoneIsAllowedValue: boolean);
        AllowedTypes: TArray<UE.BlackboardKeyType>;
        SelectedKeyName: string;
        SelectedKeyType: UE.Class;
        SelectedKeyID: number;
        bNoneIsAllowedValue: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlackboardKeySelector_0__: boolean;
    }
    
    class AIDynamicParam {
        constructor();
        constructor(ParamName: string, ParamType: UE.EAIParamType, Value: number, BBKey: UE.BlackboardKeySelector);
        ParamName: string;
        ParamType: UE.EAIParamType;
        Value: number;
        BBKey: UE.BlackboardKeySelector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIDynamicParam_0__: boolean;
    }
    
    class AIGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GraphVersion: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIGraph;
        static Load(InName: string): AIGraph;
    
        __tid_AIGraph_0__: boolean;
    }
    
    class GraphNodeClassData {
        constructor();
        constructor(AssetName: string, GeneratedClassPackage: string, ClassName: string, Category: string);
        AssetName: string;
        GeneratedClassPackage: string;
        ClassName: string;
        Category: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GraphNodeClassData_0__: boolean;
    }
    
    class AIGraphNode extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClassData: UE.GraphNodeClassData;
        NodeInstance: UE.Object;
        ParentNode: UE.AIGraphNode;
        SubNodes: TArray<UE.AIGraphNode>;
        CopySubNodeIndex: number;
        bIsReadOnly: boolean;
        bIsSubNode: boolean;
        ErrorMessage: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIGraphNode;
        static Load(InName: string): AIGraphNode;
    
        __tid_AIGraphNode_0__: boolean;
    }
    
    class EdGraphSchema extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphSchema;
        static Load(InName: string): EdGraphSchema;
    
        __tid_EdGraphSchema_0__: boolean;
    }
    
    class AIGraphSchema extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIGraphSchema;
        static Load(InName: string): AIGraphSchema;
    
        __tid_AIGraphSchema_0__: boolean;
    }
    
    class AIHotSpotManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIHotSpotManager;
        static Load(InName: string): AIHotSpotManager;
    
        __tid_AIHotSpotManager_0__: boolean;
    }
    
    class FilterOptionPerAxis {
        constructor();
        constructor(bX: boolean, bY: boolean, bZ: boolean);
        bX: boolean;
        bY: boolean;
        bZ: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FilterOptionPerAxis_0__: boolean;
    }
    
    class ConstraintDescriptionEx {
        constructor();
        constructor(AxesFilterOption: UE.FilterOptionPerAxis);
        AxesFilterOption: UE.FilterOptionPerAxis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintDescriptionEx_0__: boolean;
    }
    
    class Axis {
        constructor();
        constructor(Axis: UE.Vector, bInLocalSpace: boolean);
        Axis: UE.Vector;
        bInLocalSpace: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Axis_0__: boolean;
    }
    
    class AimConstraintDescription extends UE.ConstraintDescriptionEx {
        constructor();
        constructor(LookAt_Axis: UE.Axis, LookUp_Axis: UE.Axis, bUseLookUp: boolean, LookUpTarget: UE.Vector);
        LookAt_Axis: UE.Axis;
        LookUp_Axis: UE.Axis;
        bUseLookUp: boolean;
        LookUpTarget: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AimConstraintDescription_0__: boolean;
    }
    
    enum EFilterInterpolationType { BSIT_Average, BSIT_Linear, BSIT_Cubic, BSIT_MAX, __typeKeyDoNoAccess}
    class InterpolationParameter {
        constructor();
        constructor(InterpolationTime: number, InterpolationType: UE.EFilterInterpolationType);
        InterpolationTime: number;
        InterpolationType: UE.EFilterInterpolationType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpolationParameter_0__: boolean;
    }
    
    enum ENotifyTriggerMode { AllAnimations, HighestWeightedAnimation, None, ENotifyTriggerMode_MAX, __typeKeyDoNoAccess}
    class PerBoneInterpolation {
        constructor();
        constructor(BoneReference: UE.BoneReference, InterpolationSpeedPerSec: number);
        BoneReference: UE.BoneReference;
        InterpolationSpeedPerSec: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PerBoneInterpolation_0__: boolean;
    }
    
    class BlendSample {
        constructor();
        constructor(Animation: UE.AnimSequence, SampleValue: UE.Vector, RateScale: number, bSnapToGrid: boolean, bIsValid: boolean);
        Animation: UE.AnimSequence;
        SampleValue: UE.Vector;
        RateScale: number;
        bSnapToGrid: boolean;
        bIsValid: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlendSample_0__: boolean;
    }
    
    class EditorElement {
        constructor();
        constructor(Indices: FixSizeArray<number>, Weights: FixSizeArray<number>);
        Indices: FixSizeArray<number>;
        Weights: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorElement_0__: boolean;
    }
    
    class BlendParameter {
        constructor();
        constructor(DisplayName: string, Min: number, Max: number, GridNum: number);
        DisplayName: string;
        Min: number;
        Max: number;
        GridNum: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlendParameter_0__: boolean;
    }
    
    class BlendSpaceBase extends UE.AnimationAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRotationBlendInMeshSpace: boolean;
        PreviewBasePose: UE.AnimSequence;
        AnimLength: number;
        InterpolationParam: FixSizeArray<UE.InterpolationParameter>;
        TargetWeightInterpolationSpeedPerSec: number;
        NotifyTriggerMode: UE.ENotifyTriggerMode;
        PerBoneBlend: TArray<UE.PerBoneInterpolation>;
        SampleIndexWithMarkers: number;
        SampleData: TArray<UE.BlendSample>;
        GridSamples: TArray<UE.EditorElement>;
        BlendParameters: FixSizeArray<UE.BlendParameter>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendSpaceBase;
        static Load(InName: string): BlendSpaceBase;
    
        __tid_BlendSpaceBase_0__: boolean;
    }
    
    enum EBlendSpaceAxis { BSA_None, BSA_X, BSA_Y, BSA_Max, BSA_MAX, __typeKeyDoNoAccess}
    class BlendSpace extends UE.BlendSpaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisToScaleAnimation: UE.EBlendSpaceAxis;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendSpace;
        static Load(InName: string): BlendSpace;
    
        __tid_BlendSpace_0__: boolean;
    }
    
    class AimOffsetBlendSpace extends UE.BlendSpace {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AimOffsetBlendSpace;
        static Load(InName: string): AimOffsetBlendSpace;
    
        __tid_AimOffsetBlendSpace_0__: boolean;
    }
    
    class BlendSpace1D extends UE.BlendSpaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDisplayEditorVertically: boolean;
        bScaleAnimation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendSpace1D;
        static Load(InName: string): BlendSpace1D;
    
        __tid_BlendSpace1D_0__: boolean;
    }
    
    class AimOffsetBlendSpace1D extends UE.BlendSpace1D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AimOffsetBlendSpace1D;
        static Load(InName: string): AimOffsetBlendSpace1D;
    
        __tid_AimOffsetBlendSpace1D_0__: boolean;
    }
    
    class AutomatedAssetImportData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GroupName: string;
        Filenames: TArray<string>;
        DestinationPath: string;
        FactoryName: string;
        bReplaceExisting: boolean;
        bSkipReadOnly: boolean;
        Factory: UE.Factory;
        LevelToLoad: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomatedAssetImportData;
        static Load(InName: string): AutomatedAssetImportData;
    
        __tid_AutomatedAssetImportData_0__: boolean;
    }
    
    class AssetImportTask extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Filename: string;
        DestinationPath: string;
        DestinationName: string;
        bReplaceExisting: boolean;
        bReplaceExistingSettings: boolean;
        bAutomated: boolean;
        bSave: boolean;
        Factory: UE.Factory;
        Options: UE.Object;
        ImportedObjectPaths: TArray<string>;
        Result: TArray<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetImportTask;
        static Load(InName: string): AssetImportTask;
    
        __tid_AssetImportTask_0__: boolean;
    }
    
    class Factory extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCreateNew: boolean;
        SupportedClass: UE.Class;
        ContextClass: UE.Class;
        Formats: TArray<string>;
        bEditAfterNew: boolean;
        bEditorImport: boolean;
        bText: boolean;
        ImportPriority: number;
        AutomatedImportData: UE.AutomatedAssetImportData;
        AssetImportTask: UE.AssetImportTask;
        OverwriteYesOrNoToAllState: number;
        ScriptFactoryCanImport(Filename: string) : boolean;
        ScriptFactoryCreateFile(InTask: $Nullable<UE.AssetImportTask>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Factory;
        static Load(InName: string): Factory;
    
        __tid_Factory_0__: boolean;
    }
    
    class BlendSpaceFactory1D extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeleton: UE.Skeleton;
        PreviewSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendSpaceFactory1D;
        static Load(InName: string): BlendSpaceFactory1D;
    
        __tid_BlendSpaceFactory1D_0__: boolean;
    }
    
    class AimOffsetBlendSpaceFactory1D extends UE.BlendSpaceFactory1D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AimOffsetBlendSpaceFactory1D;
        static Load(InName: string): AimOffsetBlendSpaceFactory1D;
    
        __tid_AimOffsetBlendSpaceFactory1D_0__: boolean;
    }
    
    class BlendSpaceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeleton: UE.Skeleton;
        PreviewSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendSpaceFactoryNew;
        static Load(InName: string): BlendSpaceFactoryNew;
    
        __tid_BlendSpaceFactoryNew_0__: boolean;
    }
    
    class AimOffsetBlendSpaceFactoryNew extends UE.BlendSpaceFactoryNew {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AimOffsetBlendSpaceFactoryNew;
        static Load(InName: string): AimOffsetBlendSpaceFactoryNew;
    
        __tid_AimOffsetBlendSpaceFactoryNew_0__: boolean;
    }
    
    class AIMoveRequest {
        constructor();
        constructor(GoalActor: UE.Actor);
        GoalActor: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIMoveRequest_0__: boolean;
    }
    
    class AINoiseEvent {
        constructor();
        constructor(NoiseLocation: UE.Vector, Loudness: number, MaxRange: number, Instigator: UE.Actor, Tag: string);
        NoiseLocation: UE.Vector;
        Loudness: number;
        MaxRange: number;
        Instigator: UE.Actor;
        Tag: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AINoiseEvent_0__: boolean;
    }
    
    class AIPerceptionListenerInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIPerceptionListenerInterface;
        static Load(InName: string): AIPerceptionListenerInterface;
    
        __tid_AIPerceptionListenerInterface_0__: boolean;
    }
    
    class AIPerceptionStimuliSourceComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoRegisterAsSource: boolean;
        RegisterAsSourceForSenses: TArray<UE.Class>;
        RegisterForSense(SenseClass: $Nullable<UE.Class>) : void;
        RegisterWithPerceptionSystem() : void;
        UnregisterFromPerceptionSystem() : void;
        UnregisterFromSense(SenseClass: $Nullable<UE.Class>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIPerceptionStimuliSourceComponent;
        static Load(InName: string): AIPerceptionStimuliSourceComponent;
    
        __tid_AIPerceptionStimuliSourceComponent_0__: boolean;
    }
    
    class BehaviorTreeTemplateInfo {
        constructor();
        constructor(Asset: UE.BehaviorTree, Template: UE.BTCompositeNode);
        Asset: UE.BehaviorTree;
        Template: UE.BTCompositeNode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BehaviorTreeTemplateInfo_0__: boolean;
    }
    
    class GameplayTag {
        constructor();
        constructor(TagName: string);
        TagName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTag_0__: boolean;
    }
    
    class BehaviorTreeComponent extends UE.BrainComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NodeInstances: TArray<UE.BTNode>;
        DefaultBehaviorTreeAsset: UE.BehaviorTree;
        AddCooldownTagDuration(CooldownTag: UE.GameplayTag, CooldownDuration: number, bAddToExistingDuration: boolean) : void;
        GetTagCooldownEndTime(CooldownTag: UE.GameplayTag) : number;
        SetDynamicSubtree(InjectTag: UE.GameplayTag, BehaviorAsset: $Nullable<UE.BehaviorTree>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeComponent;
        static Load(InName: string): BehaviorTreeComponent;
    
        __tid_BehaviorTreeComponent_0__: boolean;
    }
    
    class BehaviorTreeManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxDebuggerSteps: number;
        LoadedTemplates: TArray<UE.BehaviorTreeTemplateInfo>;
        ActiveComponents: TArray<UE.BehaviorTreeComponent>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeManager;
        static Load(InName: string): BehaviorTreeManager;
    
        __tid_BehaviorTreeManager_0__: boolean;
    }
    
    class EnvQueryNode extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VerNum: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryNode;
        static Load(InName: string): EnvQueryNode;
    
        __tid_EnvQueryNode_0__: boolean;
    }
    
    class EnvQueryGenerator extends UE.EnvQueryNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OptionName: string;
        ItemType: UE.Class;
        bAutoSortTests: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator;
        static Load(InName: string): EnvQueryGenerator;
    
        __tid_EnvQueryGenerator_0__: boolean;
    }
    
    enum EEnvTestPurpose { Filter, Score, FilterAndScore, EEnvTestPurpose_MAX, __typeKeyDoNoAccess}
    enum EEnvTestFilterOperator { AllPass, AnyPass, EEnvTestFilterOperator_MAX, __typeKeyDoNoAccess}
    enum EEnvTestScoreOperator { AverageScore, MinScore, MaxScore, Multiply, EEnvTestScoreOperator_MAX, __typeKeyDoNoAccess}
    enum EEnvTestFilterType { Minimum, Maximum, Range, Match, EEnvTestFilterType_MAX, __typeKeyDoNoAccess}
    enum EEnvTestScoreEquation { Linear, Square, InverseLinear, SquareRoot, Constant, EEnvTestScoreEquation_MAX, __typeKeyDoNoAccess}
    enum EEnvQueryTestClamping { None, SpecifiedValue, FilterThreshold, EEnvQueryTestClamping_MAX, __typeKeyDoNoAccess}
    enum EEQSNormalizationType { Absolute, RelativeToScores, EEQSNormalizationType_MAX, __typeKeyDoNoAccess}
    class EnvQueryTest extends UE.EnvQueryNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TestOrder: number;
        TestPurpose: UE.EEnvTestPurpose;
        TestComment: string;
        MultipleContextFilterOp: UE.EEnvTestFilterOperator;
        MultipleContextScoreOp: UE.EEnvTestScoreOperator;
        FilterType: UE.EEnvTestFilterType;
        BoolValue: UE.AIDataProviderBoolValue;
        FloatValueMin: UE.AIDataProviderFloatValue;
        FloatValueMax: UE.AIDataProviderFloatValue;
        ScoringEquation: UE.EEnvTestScoreEquation;
        ClampMinType: UE.EEnvQueryTestClamping;
        ClampMaxType: UE.EEnvQueryTestClamping;
        NormalizationType: UE.EEQSNormalizationType;
        ScoreClampMin: UE.AIDataProviderFloatValue;
        ScoreClampMax: UE.AIDataProviderFloatValue;
        ScoringFactor: UE.AIDataProviderFloatValue;
        ReferenceValue: UE.AIDataProviderFloatValue;
        bDefineReferenceValue: boolean;
        bWorkOnFloatValues: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest;
        static Load(InName: string): EnvQueryTest;
    
        __tid_EnvQueryTest_0__: boolean;
    }
    
    class EnvQueryOption extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Generator: UE.EnvQueryGenerator;
        Tests: TArray<UE.EnvQueryTest>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryOption;
        static Load(InName: string): EnvQueryOption;
    
        __tid_EnvQueryOption_0__: boolean;
    }
    
    class EnvQuery extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EdGraph: UE.EdGraph;
        QueryName: string;
        Options: TArray<UE.EnvQueryOption>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQuery;
        static Load(InName: string): EnvQuery;
    
        __tid_EnvQuery_0__: boolean;
    }
    
    class EnvQueryInstanceCache {
        constructor();
        constructor(Template: UE.EnvQuery);
        Template: UE.EnvQuery;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EnvQueryInstanceCache_0__: boolean;
    }
    
    class EnvQueryContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryContext;
        static Load(InName: string): EnvQueryContext;
    
        __tid_EnvQueryContext_0__: boolean;
    }
    
    enum EEnvQueryStatus { Processing, Success, Failed, Aborted, OwnerLost, MissingParam, EEnvQueryStatus_MAX, __typeKeyDoNoAccess}
    class EnvQueryInstanceBlueprintWrapper extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QueryID: number;
        ItemType: UE.Class;
        OptionIndex: number;
        OnQueryFinishedEvent: $MulticastDelegate<(QueryInstance: $Nullable<UE.EnvQueryInstanceBlueprintWrapper>, QueryStatus: UE.EEnvQueryStatus) => void>;
        EQSQueryDoneSignature__DelegateSignature(QueryInstance: $Nullable<UE.EnvQueryInstanceBlueprintWrapper>, QueryStatus: UE.EEnvQueryStatus) : void;
        GetItemScore(ItemIndex: number) : number;
        GetQueryResultsAsActors(ResultActors: $Ref<TArray<UE.Actor>>) : boolean;
        GetQueryResultsAsLocations(ResultLocations: $Ref<TArray<UE.Vector>>) : boolean;
        GetResultsAsActors() : TArray<UE.Actor>;
        GetResultsAsLocations() : TArray<UE.Vector>;
        SetNamedParam(ParamName: string, Value: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryInstanceBlueprintWrapper;
        static Load(InName: string): EnvQueryInstanceBlueprintWrapper;
    
        __tid_EnvQueryInstanceBlueprintWrapper_0__: boolean;
    }
    
    enum EEnvQueryRunMode { SingleResult, RandomBest5Pct, RandomBest25Pct, AllMatching, EEnvQueryRunMode_MAX, __typeKeyDoNoAccess}
    class EnvQueryManager extends UE.AISubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InstanceCache: TArray<UE.EnvQueryInstanceCache>;
        LocalContexts: TArray<UE.EnvQueryContext>;
        GCShieldedWrappers: TArray<UE.EnvQueryInstanceBlueprintWrapper>;
        MaxAllowedTestingTime: number;
        bTestQueriesUsingBreadth: boolean;
        QueryCountWarningThreshold: number;
        QueryCountWarningInterval: number;
        static RunEQSQuery(WorldContextObject: $Nullable<UE.Object>, QueryTemplate: $Nullable<UE.EnvQuery>, Querier: $Nullable<UE.Object>, RunMode: UE.EEnvQueryRunMode, WrapperClass: $Nullable<UE.Class>) : UE.EnvQueryInstanceBlueprintWrapper;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryManager;
        static Load(InName: string): EnvQueryManager;
    
        __tid_EnvQueryManager_0__: boolean;
    }
    
    class NavLocalGridManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddLocalNavigationGridForBox(WorldContextObject: $Nullable<UE.Object>, Location: UE.Vector, Extent?: UE.Vector /* = 1.000000,1.000000,1.000000 */, Rotation?: UE.Rotator /* =  */, Radius2D?: number /* = 5 */, Height?: number /* = 100.000000 */, bRebuildGrids?: boolean /* = true */) : number;
        static AddLocalNavigationGridForCapsule(WorldContextObject: $Nullable<UE.Object>, Location: UE.Vector, CapsuleRadius: number, CapsuleHalfHeight: number, Radius2D?: number /* = 5 */, Height?: number /* = 100.000000 */, bRebuildGrids?: boolean /* = true */) : number;
        static AddLocalNavigationGridForPoint(WorldContextObject: $Nullable<UE.Object>, Location: UE.Vector, Radius2D?: number /* = 5 */, Height?: number /* = 100.000000 */, bRebuildGrids?: boolean /* = true */) : number;
        static AddLocalNavigationGridForPoints(WorldContextObject: $Nullable<UE.Object>, Locations: TArray<UE.Vector>, Radius2D?: number /* = 5 */, Height?: number /* = 100.000000 */, bRebuildGrids?: boolean /* = true */) : number;
        static FindLocalNavigationGridPath(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, PathPoints: $Ref<TArray<UE.Vector>>) : boolean;
        static RemoveLocalNavigationGrid(WorldContextObject: $Nullable<UE.Object>, GridId: number, bRebuildGrids?: boolean /* = true */) : void;
        static SetLocalNavigationGridDensity(WorldContextObject: $Nullable<UE.Object>, CellSize: number) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLocalGridManager;
        static Load(InName: string): NavLocalGridManager;
    
        __tid_NavLocalGridManager_0__: boolean;
    }
    
    class AISystem extends UE.AISystemBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PerceptionSystemClassName: UE.SoftClassPath;
        HotSpotManagerClassName: UE.SoftClassPath;
        AcceptanceRadius: number;
        PathfollowingRegularPathPointAcceptanceRadius: number;
        PathfollowingNavLinkAcceptanceRadius: number;
        bFinishMoveOnGoalOverlap: boolean;
        bAcceptPartialPaths: boolean;
        bAllowStrafing: boolean;
        bEnableBTAITasks: boolean;
        bAllowControllersAsEQSQuerier: boolean;
        bEnableDebuggerPlugin: boolean;
        bForgetStaleActors: boolean;
        bAddBlackboardSelfKey: boolean;
        DefaultSightCollisionChannel: UE.ECollisionChannel;
        BehaviorTreeManager: UE.BehaviorTreeManager;
        EnvironmentQueryManager: UE.EnvQueryManager;
        PerceptionSystem: UE.AIPerceptionSystem;
        AllProxyObjects: TArray<UE.AIAsyncTaskBlueprintProxy>;
        HotSpotManager: UE.AIHotSpotManager;
        NavLocalGrids: UE.NavLocalGridManager;
        AIIgnorePlayers() : void;
        AILoggingVerbose() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISystem;
        static Load(InName: string): AISystem;
    
        __tid_AISystem_0__: boolean;
    }
    
    class AISubsystem extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AISystem: UE.AISystem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISubsystem;
        static Load(InName: string): AISubsystem;
    
        __tid_AISubsystem_0__: boolean;
    }
    
    enum EAISenseNotifyType { OnEveryPerception, OnPerceptionChange, EAISenseNotifyType_MAX, __typeKeyDoNoAccess}
    class AISense extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultExpirationAge: number;
        NotifyType: UE.EAISenseNotifyType;
        bWantsNewPawnNotification: boolean;
        bAutoRegisterAllPawnsAsSources: boolean;
        PerceptionSystemInstance: UE.AIPerceptionSystem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense;
        static Load(InName: string): AISense;
    
        __tid_AISense_0__: boolean;
    }
    
    class AISenseEvent extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseEvent;
        static Load(InName: string): AISenseEvent;
    
        __tid_AISenseEvent_0__: boolean;
    }
    
    class AIPerceptionSystem extends UE.AISubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Senses: TArray<UE.AISense>;
        PerceptionAgingRate: number;
        OnPerceptionStimuliSourceEndPlay(Actor: $Nullable<UE.Actor>, EndPlayReason: UE.EEndPlayReason) : void;
        ReportEvent(PerceptionEvent: $Nullable<UE.AISenseEvent>) : void;
        static GetSenseClassForStimulus(WorldContextObject: $Nullable<UE.Object>, Stimulus: UE.AIStimulus) : UE.Class;
        static RegisterPerceptionStimuliSource(WorldContextObject: $Nullable<UE.Object>, Sense: $Nullable<UE.Class>, Target: $Nullable<UE.Actor>) : boolean;
        static ReportPerceptionEvent(WorldContextObject: $Nullable<UE.Object>, PerceptionEvent: $Nullable<UE.AISenseEvent>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIPerceptionSystem;
        static Load(InName: string): AIPerceptionSystem;
    
        __tid_AIPerceptionSystem_0__: boolean;
    }
    
    class AIPredictionEvent {
        constructor();
        constructor(Requestor: UE.Actor, PredictedActor: UE.Actor);
        Requestor: UE.Actor;
        PredictedActor: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AIPredictionEvent_0__: boolean;
    }
    
    class GameplayTaskResource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ManualResourceID: number;
        AutoResourceID: number;
        bManuallySetID: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTaskResource;
        static Load(InName: string): GameplayTaskResource;
    
        __tid_GameplayTaskResource_0__: boolean;
    }
    
    class AIResource_Logic extends UE.GameplayTaskResource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIResource_Logic;
        static Load(InName: string): AIResource_Logic;
    
        __tid_AIResource_Logic_0__: boolean;
    }
    
    class AIResource_Movement extends UE.GameplayTaskResource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIResource_Movement;
        static Load(InName: string): AIResource_Movement;
    
        __tid_AIResource_Movement_0__: boolean;
    }
    
    class AIResourceInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AIResourceInterface;
        static Load(InName: string): AIResourceInterface;
    
        __tid_AIResourceInterface_0__: boolean;
    }
    
    class EdGraphSchemaAction {
        constructor();
        constructor(MenuDescription: string, TooltipDescription: string, Category: string, Keywords: string, Grouping: number, SectionID: number, MenuDescriptionArray: TArray<string>, FullSearchTitlesArray: TArray<string>, FullSearchKeywordsArray: TArray<string>, FullSearchCategoryArray: TArray<string>, LocalizedMenuDescriptionArray: TArray<string>, LocalizedFullSearchTitlesArray: TArray<string>, LocalizedFullSearchKeywordsArray: TArray<string>, LocalizedFullSearchCategoryArray: TArray<string>, SearchText: string);
        MenuDescription: string;
        TooltipDescription: string;
        Category: string;
        Keywords: string;
        Grouping: number;
        SectionID: number;
        MenuDescriptionArray: TArray<string>;
        FullSearchTitlesArray: TArray<string>;
        FullSearchKeywordsArray: TArray<string>;
        FullSearchCategoryArray: TArray<string>;
        LocalizedMenuDescriptionArray: TArray<string>;
        LocalizedFullSearchTitlesArray: TArray<string>;
        LocalizedFullSearchKeywordsArray: TArray<string>;
        LocalizedFullSearchCategoryArray: TArray<string>;
        SearchText: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_0__: boolean;
    }
    
    class AISchemaAction_AddComment extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AISchemaAction_AddComment_0__: boolean;
    }
    
    class AISchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(NodeTemplate: UE.AIGraphNode);
        NodeTemplate: UE.AIGraphNode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AISchemaAction_NewNode_0__: boolean;
    }
    
    class AISchemaAction_NewSubNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(NodeTemplate: UE.AIGraphNode, ParentNode: UE.AIGraphNode);
        NodeTemplate: UE.AIGraphNode;
        ParentNode: UE.AIGraphNode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AISchemaAction_NewSubNode_0__: boolean;
    }
    
    class AISense_Blueprint extends UE.AISense {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ListenerDataType: UE.Class;
        ListenerContainer: TArray<UE.AIPerceptionComponent>;
        UnprocessedEvents: TArray<UE.AISenseEvent>;
        GetAllListenerActors(ListenerActors: $Ref<TArray<UE.Actor>>) : void;
        GetAllListenerComponents(ListenerComponents: $Ref<TArray<UE.AIPerceptionComponent>>) : void;
        K2_OnNewPawn(NewPawn: $Nullable<UE.Pawn>) : void;
        OnListenerRegistered(ActorListener: $Nullable<UE.Actor>, PerceptionComponent: $Nullable<UE.AIPerceptionComponent>) : void;
        OnListenerUnregistered(ActorListener: $Nullable<UE.Actor>, PerceptionComponent: $Nullable<UE.AIPerceptionComponent>) : void;
        OnListenerUpdated(ActorListener: $Nullable<UE.Actor>, PerceptionComponent: $Nullable<UE.AIPerceptionComponent>) : void;
        OnUpdate(EventsToProcess: TArray<UE.AISenseEvent>) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense_Blueprint;
        static Load(InName: string): AISense_Blueprint;
    
        __tid_AISense_Blueprint_0__: boolean;
    }
    
    class AISense_Damage extends UE.AISense {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RegisteredEvents: TArray<UE.AIDamageEvent>;
        static ReportDamageEvent(WorldContextObject: $Nullable<UE.Object>, DamagedActor: $Nullable<UE.Actor>, Instigator: $Nullable<UE.Actor>, DamageAmount: number, EventLocation: UE.Vector, HitLocation: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense_Damage;
        static Load(InName: string): AISense_Damage;
    
        __tid_AISense_Damage_0__: boolean;
    }
    
    class AISense_Hearing extends UE.AISense {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NoiseEvents: TArray<UE.AINoiseEvent>;
        SpeedOfSoundSq: number;
        static ReportNoiseEvent(WorldContextObject: $Nullable<UE.Object>, NoiseLocation: UE.Vector, Loudness?: number /* = 1.000000 */, Instigator?: UE.Actor /* = None */, MaxRange?: number /* = 0.000000 */, Tag?: string /* = "None" */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense_Hearing;
        static Load(InName: string): AISense_Hearing;
    
        __tid_AISense_Hearing_0__: boolean;
    }
    
    class AISense_Prediction extends UE.AISense {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RegisteredEvents: TArray<UE.AIPredictionEvent>;
        static RequestControllerPredictionEvent(Requestor: $Nullable<UE.AIController>, PredictedActor: $Nullable<UE.Actor>, PredictionTime: number) : void;
        static RequestPawnPredictionEvent(Requestor: $Nullable<UE.Pawn>, PredictedActor: $Nullable<UE.Actor>, PredictionTime: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense_Prediction;
        static Load(InName: string): AISense_Prediction;
    
        __tid_AISense_Prediction_0__: boolean;
    }
    
    class AISense_Sight extends UE.AISense {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxTracesPerTick: number;
        MinQueriesPerTimeSliceCheck: number;
        MaxTimeSlicePerTick: number;
        HighImportanceQueryDistanceThreshold: number;
        MaxQueryImportance: number;
        SightLimitQueryImportance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense_Sight;
        static Load(InName: string): AISense_Sight;
    
        __tid_AISense_Sight_0__: boolean;
    }
    
    class AITeamStimulusEvent {
        constructor();
        constructor(Broadcaster: UE.Actor, Enemy: UE.Actor);
        Broadcaster: UE.Actor;
        Enemy: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AITeamStimulusEvent_0__: boolean;
    }
    
    class AISense_Team extends UE.AISense {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RegisteredEvents: TArray<UE.AITeamStimulusEvent>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense_Team;
        static Load(InName: string): AISense_Team;
    
        __tid_AISense_Team_0__: boolean;
    }
    
    class AITouchEvent {
        constructor();
        constructor(TouchReceiver: UE.Actor, OtherActor: UE.Actor);
        TouchReceiver: UE.Actor;
        OtherActor: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AITouchEvent_0__: boolean;
    }
    
    class AISense_Touch extends UE.AISense {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RegisteredEvents: TArray<UE.AITouchEvent>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISense_Touch;
        static Load(InName: string): AISense_Touch;
    
        __tid_AISense_Touch_0__: boolean;
    }
    
    class AISenseAffiliationFilter {
        constructor();
        constructor(bDetectEnemies: boolean, bDetectNeutrals: boolean, bDetectFriendlies: boolean);
        bDetectEnemies: boolean;
        bDetectNeutrals: boolean;
        bDetectFriendlies: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AISenseAffiliationFilter_0__: boolean;
    }
    
    class ScriptStruct extends UE.Struct {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScriptStruct;
        static Load(InName: string): ScriptStruct;
    
        __tid_ScriptStruct_0__: boolean;
    }
    
    enum EUserDefinedStructureStatus { UDSS_UpToDate, UDSS_Dirty, UDSS_Error, UDSS_Duplicate, UDSS_MAX, __typeKeyDoNoAccess}
    class UserDefinedStruct extends UE.ScriptStruct {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PrimaryStruct: TWeakObjectPtr<UE.UserDefinedStruct>;
        ErrorMessage: string;
        EditorData: UE.Object;
        Status: UE.EUserDefinedStructureStatus;
        Guid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserDefinedStruct;
        static Load(InName: string): UserDefinedStruct;
    
        __tid_UserDefinedStruct_0__: boolean;
    }
    
    class AISenseBlueprintListener extends UE.UserDefinedStruct {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseBlueprintListener;
        static Load(InName: string): AISenseBlueprintListener;
    
        __tid_AISenseBlueprintListener_0__: boolean;
    }
    
    class AISenseConfig_Blueprint extends UE.AISenseConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Implementation: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig_Blueprint;
        static Load(InName: string): AISenseConfig_Blueprint;
    
        __tid_AISenseConfig_Blueprint_0__: boolean;
    }
    
    class AISenseConfig_Damage extends UE.AISenseConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Implementation: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig_Damage;
        static Load(InName: string): AISenseConfig_Damage;
    
        __tid_AISenseConfig_Damage_0__: boolean;
    }
    
    class AISenseConfig_Hearing extends UE.AISenseConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Implementation: UE.Class;
        HearingRange: number;
        LoSHearingRange: number;
        bUseLoSHearing: boolean;
        DetectionByAffiliation: UE.AISenseAffiliationFilter;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig_Hearing;
        static Load(InName: string): AISenseConfig_Hearing;
    
        __tid_AISenseConfig_Hearing_0__: boolean;
    }
    
    class AISenseConfig_Prediction extends UE.AISenseConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig_Prediction;
        static Load(InName: string): AISenseConfig_Prediction;
    
        __tid_AISenseConfig_Prediction_0__: boolean;
    }
    
    class AISenseConfig_Sight extends UE.AISenseConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Implementation: UE.Class;
        SightRadius: number;
        LoseSightRadius: number;
        PeripheralVisionAngleDegrees: number;
        DetectionByAffiliation: UE.AISenseAffiliationFilter;
        AutoSuccessRangeFromLastSeenLocation: number;
        PointOfViewBackwardOffset: number;
        NearClippingRadius: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig_Sight;
        static Load(InName: string): AISenseConfig_Sight;
    
        __tid_AISenseConfig_Sight_0__: boolean;
    }
    
    class AISenseConfig_Team extends UE.AISenseConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig_Team;
        static Load(InName: string): AISenseConfig_Team;
    
        __tid_AISenseConfig_Team_0__: boolean;
    }
    
    class AISenseConfig_Touch extends UE.AISenseConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseConfig_Touch;
        static Load(InName: string): AISenseConfig_Touch;
    
        __tid_AISenseConfig_Touch_0__: boolean;
    }
    
    class AISenseEvent_Damage extends UE.AISenseEvent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Event: UE.AIDamageEvent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseEvent_Damage;
        static Load(InName: string): AISenseEvent_Damage;
    
        __tid_AISenseEvent_Damage_0__: boolean;
    }
    
    class AISenseEvent_Hearing extends UE.AISenseEvent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Event: UE.AINoiseEvent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISenseEvent_Hearing;
        static Load(InName: string): AISenseEvent_Hearing;
    
        __tid_AISenseEvent_Hearing_0__: boolean;
    }
    
    class AISightEvent {
        constructor();
        constructor(SeenActor: UE.Actor, Observer: UE.Actor);
        SeenActor: UE.Actor;
        Observer: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AISightEvent_0__: boolean;
    }
    
    class AISightTargetInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AISightTargetInterface;
        static Load(InName: string): AISightTargetInterface;
    
        __tid_AISightTargetInterface_0__: boolean;
    }
    
    class AITask extends UE.GameplayTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwnerController: UE.AIController;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AITask;
        static Load(InName: string): AITask;
    
        __tid_AITask_0__: boolean;
    }
    
    class AITask_LockLogic extends UE.AITask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AITask_LockLogic;
        static Load(InName: string): AITask_LockLogic;
    
        __tid_AITask_LockLogic_0__: boolean;
    }
    
    enum EAIOptionFlag { Default, Enable, Disable, MAX, __typeKeyDoNoAccess}
    class AITask_MoveTo extends UE.AITask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnRequestFailed: $MulticastDelegate<() => void>;
        OnMoveFinished: $MulticastDelegate<(Result: UE.EPathFollowingResult, AIController: $Nullable<UE.AIController>) => void>;
        MoveRequest: UE.AIMoveRequest;
        static AIMoveTo(Controller: $Nullable<UE.AIController>, GoalLocation: UE.Vector, GoalActor?: UE.Actor /* = None */, AcceptanceRadius?: number /* = -1.000000 */, StopOnOverlap?: UE.EAIOptionFlag /* = Default */, AcceptPartialPath?: UE.EAIOptionFlag /* = Default */, bUsePathfinding?: boolean /* = true */, bLockAILogic?: boolean /* = true */, bUseContinuosGoalTracking?: boolean /* = false */, ProjectGoalOnNavigation?: UE.EAIOptionFlag /* = Default */) : UE.AITask_MoveTo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AITask_MoveTo;
        static Load(InName: string): AITask_MoveTo;
    
        __tid_AITask_MoveTo_0__: boolean;
    }
    
    class AITask_RunEQS extends UE.AITask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static RunEQS(Controller: $Nullable<UE.AIController>, QueryTemplate: $Nullable<UE.EnvQuery>) : UE.AITask_RunEQS;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AITask_RunEQS;
        static Load(InName: string): AITask_RunEQS;
    
        __tid_AITask_RunEQS_0__: boolean;
    }
    
    class GenericTeamId {
        constructor();
        constructor(TeamID: number);
        TeamID: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GenericTeamId_0__: boolean;
    }
    
    class AITestSpawnInfo {
        constructor();
        constructor(PawnClass: UE.Class, ControllerClass: UE.Class, TeamID: UE.GenericTeamId, BehaviorTree: UE.BehaviorTree, SpawnLocation: UE.Actor, NumberToSpawn: number, SpawnDelay: number, PreSpawnDelay: number);
        PawnClass: UE.Class;
        ControllerClass: UE.Class;
        TeamID: UE.GenericTeamId;
        BehaviorTree: UE.BehaviorTree;
        SpawnLocation: UE.Actor;
        NumberToSpawn: number;
        SpawnDelay: number;
        PreSpawnDelay: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AITestSpawnInfo_0__: boolean;
    }
    
    class AITestSpawnSet {
        constructor();
        constructor(SpawnInfoContainer: TArray<UE.AITestSpawnInfo>, Name: string, bEnabled: boolean, FallbackSpawnLocation: UE.Actor);
        SpawnInfoContainer: TArray<UE.AITestSpawnInfo>;
        Name: string;
        bEnabled: boolean;
        FallbackSpawnLocation: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AITestSpawnSet_0__: boolean;
    }
    
    class AlembicImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportSettings: UE.AbcImportSettings;
        bShowOption: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AlembicImportFactory;
        static Load(InName: string): AlembicImportFactory;
    
        __tid_AlembicImportFactory_0__: boolean;
    }
    
    class Commandlet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HelpDescription: string;
        HelpUsage: string;
        HelpWebLink: string;
        HelpParamNames: TArray<string>;
        HelpParamDescriptions: TArray<string>;
        IsServer: boolean;
        IsClient: boolean;
        IsEditor: boolean;
        LogToConsole: boolean;
        ShowErrorCount: boolean;
        ShowProgress: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Commandlet;
        static Load(InName: string): Commandlet;
    
        __tid_Commandlet_0__: boolean;
    }
    
    class AlembicTestCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AlembicTestCommandlet;
        static Load(InName: string): AlembicTestCommandlet;
    
        __tid_AlembicTestCommandlet_0__: boolean;
    }
    
    class AudioComponentParam {
        constructor();
        constructor(ParamName: string, FloatParam: number, BoolParam: boolean, IntParam: number, SoundWaveParam: UE.SoundWave);
        ParamName: string;
        FloatParam: number;
        BoolParam: boolean;
        IntParam: number;
        SoundWaveParam: UE.SoundWave;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioComponentParam_0__: boolean;
    }
    
    enum EAudioComponentPlayState { Playing, Stopped, Paused, FadingIn, FadingOut, Count, EAudioComponentPlayState_MAX, __typeKeyDoNoAccess}
    enum EQuartzCommandDelegateSubType { CommandOnFailedToQueue, CommandOnQueued, CommandOnCanceled, CommandOnAboutToStart, CommandOnStarted, Count, EQuartzCommandDelegateSubType_MAX, __typeKeyDoNoAccess}
    enum EQuartzCommandQuantization { Bar, Beat, ThirtySecondNote, SixteenthNote, EighthNote, QuarterNote, HalfNote, WholeNote, DottedSixteenthNote, DottedEighthNote, DottedQuarterNote, DottedHalfNote, DottedWholeNote, SixteenthNoteTriplet, EighthNoteTriplet, QuarterNoteTriplet, HalfNoteTriplet, Tick, Count, EQuartzCommandQuantization_MAX, __typeKeyDoNoAccess}
    enum EQuarztQuantizationReference { BarRelative, TransportRelative, CurrentTimeRelative, Count, EQuarztQuantizationReference_MAX, __typeKeyDoNoAccess}
    class QuartzQuantizationBoundary {
        constructor();
        constructor(Quantization: UE.EQuartzCommandQuantization, Multiplier: number, CountingReferencePoint: UE.EQuarztQuantizationReference);
        Quantization: UE.EQuartzCommandQuantization;
        Multiplier: number;
        CountingReferencePoint: UE.EQuarztQuantizationReference;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_QuartzQuantizationBoundary_0__: boolean;
    }
    
    class QuartzClockHandle extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetBeatsPerMinute(WorldContextObject: $Nullable<UE.Object>) : number;
        GetMillisecondsPerTick(WorldContextObject: $Nullable<UE.Object>) : number;
        GetSecondsPerTick(WorldContextObject: $Nullable<UE.Object>) : number;
        GetThirtySecondNotesPerMinute(WorldContextObject: $Nullable<UE.Object>) : number;
        GetTicksPerSecond(WorldContextObject: $Nullable<UE.Object>) : number;
        PauseClock(WorldContextObject: $Nullable<UE.Object>) : void;
        ResetTransport(WorldContextObject: $Nullable<UE.Object>, InDelegate: $Delegate<(EventType: UE.EQuartzCommandDelegateSubType, Name: string) => void>) : void;
        ResumeClock(WorldContextObject: $Nullable<UE.Object>) : void;
        SetBeatsPerMinute(WorldContextObject: $Nullable<UE.Object>, QuantizationBoundary: UE.QuartzQuantizationBoundary, Delegate: $Delegate<(EventType: UE.EQuartzCommandDelegateSubType, Name: string) => void>, BeatsPerMinute?: number /* = 60.000000 */) : void;
        SetMillisecondsPerTick(WorldContextObject: $Nullable<UE.Object>, QuantizationBoundary: UE.QuartzQuantizationBoundary, Delegate: $Delegate<(EventType: UE.EQuartzCommandDelegateSubType, Name: string) => void>, MillisecondsPerTick?: number /* = 100.000000 */) : void;
        SetSecondsPerTick(WorldContextObject: $Nullable<UE.Object>, QuantizationBoundary: UE.QuartzQuantizationBoundary, Delegate: $Delegate<(EventType: UE.EQuartzCommandDelegateSubType, Name: string) => void>, SecondsPerTick?: number /* = 0.250000 */) : void;
        SetThirtySecondNotesPerMinute(WorldContextObject: $Nullable<UE.Object>, QuantizationBoundary: UE.QuartzQuantizationBoundary, Delegate: $Delegate<(EventType: UE.EQuartzCommandDelegateSubType, Name: string) => void>, ThirtySecondsNotesPerMinute?: number /* = 960.000000 */) : void;
        SetTicksPerSecond(WorldContextObject: $Nullable<UE.Object>, QuantizationBoundary: UE.QuartzQuantizationBoundary, Delegate: $Delegate<(EventType: UE.EQuartzCommandDelegateSubType, Name: string) => void>, TicksPerSecond?: number /* = 10.000000 */) : void;
        SubscribeToAllQuantizationEvents(WorldContextObject: $Nullable<UE.Object>, OnQuantizationEvent: $Delegate<(ClockName: string, QuantizationType: UE.EQuartzCommandQuantization, NumBars: number, Beat: number, BeatFraction: number) => void>) : void;
        SubscribeToQuantizationEvent(WorldContextObject: $Nullable<UE.Object>, InQuantizationBoundary: UE.EQuartzCommandQuantization, OnQuantizationEvent: $Delegate<(ClockName: string, QuantizationType: UE.EQuartzCommandQuantization, NumBars: number, Beat: number, BeatFraction: number) => void>) : void;
        UnsubscribeFromAllTimeDivisions(WorldContextObject: $Nullable<UE.Object>) : void;
        UnsubscribeFromTimeDivision(WorldContextObject: $Nullable<UE.Object>, InQuantizationBoundary: UE.EQuartzCommandQuantization) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): QuartzClockHandle;
        static Load(InName: string): QuartzClockHandle;
    
        __tid_QuartzClockHandle_0__: boolean;
    }
    
    enum EAudioFaderCurve { Linear, Logarithmic, SCurve, Sin, Count, EAudioFaderCurve_MAX, __typeKeyDoNoAccess}
    class SoundWaveSpectralData {
        constructor();
        constructor(FrequencyHz: number, Magnitude: number, NormalizedMagnitude: number);
        FrequencyHz: number;
        Magnitude: number;
        NormalizedMagnitude: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundWaveSpectralData_0__: boolean;
    }
    
    class SoundWaveSpectralDataPerSound {
        constructor();
        constructor(SpectralData: TArray<UE.SoundWaveSpectralData>, PlaybackTime: number, SoundWave: UE.SoundWave);
        SpectralData: TArray<UE.SoundWaveSpectralData>;
        PlaybackTime: number;
        SoundWave: UE.SoundWave;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundWaveSpectralDataPerSound_0__: boolean;
    }
    
    class SoundWaveEnvelopeDataPerSound {
        constructor();
        constructor(Envelope: number, PlaybackTime: number, SoundWave: UE.SoundWave);
        Envelope: number;
        PlaybackTime: number;
        SoundWave: UE.SoundWave;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundWaveEnvelopeDataPerSound_0__: boolean;
    }
    
    class AudioComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sound: UE.SoundBase;
        InstanceParameters: TArray<UE.AudioComponentParam>;
        SoundClassOverride: UE.SoundClass;
        bAutoDestroy: boolean;
        bStopWhenOwnerDestroyed: boolean;
        bShouldRemainActiveIfDropped: boolean;
        bAllowSpatialization: boolean;
        bOverrideAttenuation: boolean;
        bOverrideSubtitlePriority: boolean;
        bIsUISound: boolean;
        bEnableLowPassFilter: boolean;
        bOverridePriority: boolean;
        bSuppressSubtitles: boolean;
        bAutoManageAttachment: boolean;
        AudioComponentUserID: string;
        PitchModulationMin: number;
        PitchModulationMax: number;
        VolumeModulationMin: number;
        VolumeModulationMax: number;
        VolumeMultiplier: number;
        EnvelopeFollowerAttackTime: number;
        EnvelopeFollowerReleaseTime: number;
        Priority: number;
        SubtitlePriority: number;
        SourceEffectChain: UE.SoundEffectSourcePresetChain;
        VolumeWeightedPriorityScale: number;
        HighFrequencyGainMultiplier: number;
        PitchMultiplier: number;
        LowPassFilterFrequency: number;
        AttenuationSettings: UE.SoundAttenuation;
        AttenuationOverrides: UE.SoundAttenuationSettings;
        ConcurrencySettings: UE.SoundConcurrency;
        ConcurrencySet: TSet<UE.SoundConcurrency>;
        AutoAttachLocationRule: UE.EAttachmentRule;
        AutoAttachRotationRule: UE.EAttachmentRule;
        AutoAttachScaleRule: UE.EAttachmentRule;
        ModulationRouting: UE.SoundModulationDefaultRoutingSettings;
        OnAudioPlayStateChanged: $MulticastDelegate<(PlayState: UE.EAudioComponentPlayState) => void>;
        OnAudioVirtualizationChanged: $MulticastDelegate<(bIsVirtualized: boolean) => void>;
        OnAudioFinished: $MulticastDelegate<() => void>;
        OnAudioPlaybackPercent: $MulticastDelegate<(PlayingSoundWave: $Nullable<UE.SoundWave>, PlaybackPercent: number) => void>;
        OnAudioSingleEnvelopeValue: $MulticastDelegate<(PlayingSoundWave: $Nullable<UE.SoundWave>, EnvelopeValue: number) => void>;
        OnAudioMultiEnvelopeValue: $MulticastDelegate<(AverageEnvelopeValue: number, MaxEnvelope: number, NumWaveInstances: number) => void>;
        OnQueueSubtitles: $Delegate<(Subtitles: TArray<UE.SubtitleCue>, CueDuration: number) => void>;
        AutoAttachParent: TWeakObjectPtr<UE.SceneComponent>;
        AutoAttachSocketName: string;
        AdjustAttenuation(InAttenuationSettings: UE.SoundAttenuationSettings) : void;
        AdjustVolume(AdjustVolumeDuration: number, AdjustVolumeLevel: number, FadeCurve?: UE.EAudioFaderCurve /* = Linear */) : void;
        BP_GetAttenuationSettingsToApply(OutAttenuationSettings: $Ref<UE.SoundAttenuationSettings>) : boolean;
        FadeIn(FadeInDuration: number, FadeVolumeLevel?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, FadeCurve?: UE.EAudioFaderCurve /* = Linear */) : void;
        FadeOut(FadeOutDuration: number, FadeVolumeLevel: number, FadeCurve?: UE.EAudioFaderCurve /* = Linear */) : void;
        GetCookedEnvelopeData(OutEnvelopeData: $Ref<number>) : boolean;
        GetCookedEnvelopeDataForAllPlayingSounds(OutEnvelopeData: $Ref<TArray<UE.SoundWaveEnvelopeDataPerSound>>) : boolean;
        GetCookedFFTData(FrequenciesToGet: TArray<number>, OutSoundWaveSpectralData: $Ref<TArray<UE.SoundWaveSpectralData>>) : boolean;
        GetCookedFFTDataForAllPlayingSounds(OutSoundWaveSpectralData: $Ref<TArray<UE.SoundWaveSpectralDataPerSound>>) : boolean;
        GetPlayState() : UE.EAudioComponentPlayState;
        HasCookedAmplitudeEnvelopeData() : boolean;
        HasCookedFFTData() : boolean;
        IsPlaying() : boolean;
        IsVirtualized() : boolean;
        Play(StartTime?: number /* = 0.000000 */) : void;
        PlayQuantized(WorldContextObject: $Nullable<UE.Object>, InClockHandle: $Ref<UE.QuartzClockHandle>, InQuantizationBoundary: $Ref<UE.QuartzQuantizationBoundary>, InDelegate: $Delegate<(EventType: UE.EQuartzCommandDelegateSubType, Name: string) => void>, InStartTime?: number /* = 0.000000 */, InFadeInDuration?: number /* = 0.000000 */, InFadeVolumeLevel?: number /* = 1.000000 */, InFadeCurve?: UE.EAudioFaderCurve /* = Linear */) : void;
        SetAudioBusSendPostEffect(AudioBus: $Nullable<UE.AudioBus>, SourceBusSendLevel: number) : void;
        SetAudioBusSendPreEffect(AudioBus: $Nullable<UE.AudioBus>, AudioBusSendLevel: number) : void;
        SetBoolParameter(InName: string, InBool: boolean) : void;
        SetFloatParameter(InName: string, InFloat: number) : void;
        SetIntParameter(InName: string, InInt: number) : void;
        SetLowPassFilterEnabled(InLowPassFilterEnabled: boolean) : void;
        SetLowPassFilterFrequency(InLowPassFilterFrequency: number) : void;
        SetPaused(bPause: boolean) : void;
        SetPitchMultiplier(NewPitchMultiplier: number) : void;
        SetSound(NewSound: $Nullable<UE.SoundBase>) : void;
        SetSourceBusSendPostEffect(SoundSourceBus: $Nullable<UE.SoundSourceBus>, SourceBusSendLevel: number) : void;
        SetSourceBusSendPreEffect(SoundSourceBus: $Nullable<UE.SoundSourceBus>, SourceBusSendLevel: number) : void;
        SetSubmixSend(Submix: $Nullable<UE.SoundSubmixBase>, SendLevel: number) : void;
        SetUISound(bInUISound: boolean) : void;
        SetVolumeMultiplier(NewVolumeMultiplier: number) : void;
        SetWaveParameter(InName: string, InWave: $Nullable<UE.SoundWave>) : void;
        Stop() : void;
        StopDelayed(DelayTime: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioComponent;
        static Load(InName: string): AudioComponent;
    
        __tid_AudioComponent_0__: boolean;
    }
    
    class AmbientSound extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AudioComponent: UE.AudioComponent;
        AdjustVolume(AdjustVolumeDuration: number, AdjustVolumeLevel: number) : void;
        FadeIn(FadeInDuration: number, FadeVolumeLevel?: number /* = 1.000000 */) : void;
        FadeOut(FadeOutDuration: number, FadeVolumeLevel: number) : void;
        Play(StartTime?: number /* = 0.000000 */) : void;
        Stop() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AmbientSound;
        static Load(InName: string): AmbientSound;
    
        __tid_AmbientSound_0__: boolean;
    }
    
    class AmbisonicsEncodingSettings extends UE.SoundfieldEncodingSettingsBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AmbisonicsOrder: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AmbisonicsEncodingSettings;
        static Load(InName: string): AmbisonicsEncodingSettings;
    
        __tid_AmbisonicsEncodingSettings_0__: boolean;
    }
    
    class AnalyticsPrivacySettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSendUsageData: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnalyticsPrivacySettings;
        static Load(InName: string): AnalyticsPrivacySettings;
    
        __tid_AnalyticsPrivacySettings_0__: boolean;
    }
    
    class AnchorData {
        constructor();
        constructor(Offsets: UE.Margin, Anchors: UE.Anchors, Alignment: UE.Vector2D);
        Offsets: UE.Margin;
        Anchors: UE.Anchors;
        Alignment: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnchorData_0__: boolean;
    }
    
    class AndroidFileMediaSourceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AndroidFileMediaSourceFactory;
        static Load(InName: string): AndroidFileMediaSourceFactory;
    
        __tid_AndroidFileMediaSourceFactory_0__: boolean;
    }
    
    class AndroidMediaSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CacheableVideoSampleBuffers: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AndroidMediaSettings;
        static Load(InName: string): AndroidMediaSettings;
    
        __tid_AndroidMediaSettings_0__: boolean;
    }
    
    class AndroidPermissionCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnPermissionsGrantedDynamicDelegate: $MulticastDelegate<(Permissions: TArray<string>, GrantResults: TArray<boolean>) => void>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AndroidPermissionCallbackProxy;
        static Load(InName: string): AndroidPermissionCallbackProxy;
    
        __tid_AndroidPermissionCallbackProxy_0__: boolean;
    }
    
    class AndroidPermissionFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AcquirePermissions(permissions: TArray<string>) : UE.AndroidPermissionCallbackProxy;
        static CheckPermission(permission: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AndroidPermissionFunctionLibrary;
        static Load(InName: string): AndroidPermissionFunctionLibrary;
    
        __tid_AndroidPermissionFunctionLibrary_0__: boolean;
    }
    
    enum EAndroidInstallLocation { InternalOnly, PreferExternal, Auto, EAndroidInstallLocation_MAX, __typeKeyDoNoAccess}
    enum EAndroidScreenOrientation { Portrait, ReversePortrait, SensorPortrait, Landscape, ReverseLandscape, SensorLandscape, Sensor, FullSensor, EAndroidScreenOrientation_MAX, __typeKeyDoNoAccess}
    enum EAndroidDepthBufferPreference { Default, Bits16, Bits24, Bits32, EAndroidDepthBufferPreference_MAX, __typeKeyDoNoAccess}
    enum EOculusMobileDevice { Quest, Quest2, EOculusMobileDevice_MAX, __typeKeyDoNoAccess}
    enum EGoogleVRCaps { Cardboard, Daydream33, Daydream63, Daydream66, EGoogleVRCaps_MAX, __typeKeyDoNoAccess}
    class GooglePlayAchievementMapping {
        constructor();
        constructor(Name: string, AchievementID: string);
        Name: string;
        AchievementID: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GooglePlayAchievementMapping_0__: boolean;
    }
    
    class GooglePlayLeaderboardMapping {
        constructor();
        constructor(Name: string, LeaderboardID: string);
        Name: string;
        LeaderboardID: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GooglePlayLeaderboardMapping_0__: boolean;
    }
    
    enum EAndroidAudio { Default, OGG, ADPCM, EAndroidAudio_MAX, __typeKeyDoNoAccess}
    class PlatformRuntimeAudioCompressionOverrides {
        constructor();
        constructor(bOverrideCompressionTimes: boolean, DurationThreshold: number, MaxNumRandomBranches: number, SoundCueQualityIndex: number);
        bOverrideCompressionTimes: boolean;
        DurationThreshold: number;
        MaxNumRandomBranches: number;
        SoundCueQualityIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PlatformRuntimeAudioCompressionOverrides_0__: boolean;
    }
    
    enum EAndroidGraphicsDebugger { None, Mali, Adreno, EAndroidGraphicsDebugger_MAX, __typeKeyDoNoAccess}
    class DirectoryPath {
        constructor();
        constructor(Path: string);
        Path: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DirectoryPath_0__: boolean;
    }
    
    class AndroidRuntimeSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PackageName: string;
        StoreVersion: number;
        StoreVersionOffsetArmV7: number;
        StoreVersionOffsetArm64: number;
        StoreVersionOffsetX8664: number;
        ApplicationDisplayName: string;
        VersionDisplayName: string;
        MinSDKVersion: number;
        TargetSDKVersion: number;
        InstallLocation: UE.EAndroidInstallLocation;
        bEnableGradle: boolean;
        bEnableLint: boolean;
        bPackageDataInsideApk: boolean;
        bCreateAllPlatformsInstall: boolean;
        bDisableVerifyOBBOnStartUp: boolean;
        bForceSmallOBBFiles: boolean;
        bAllowLargeOBBFiles: boolean;
        bAllowPatchOBBFile: boolean;
        bAllowOverflowOBBFiles: boolean;
        bUseExternalFilesDir: boolean;
        bPublicLogFiles: boolean;
        Orientation: UE.EAndroidScreenOrientation;
        MaxAspectRatio: number;
        bUseDisplayCutout: boolean;
        bRestoreNotificationsOnReboot: boolean;
        bFullScreen: boolean;
        bEnableNewKeyboard: boolean;
        DepthBufferPreference: UE.EAndroidDepthBufferPreference;
        bValidateTextureFormats: boolean;
        bEnableBundle: boolean;
        bEnableUniversalAPK: boolean;
        bBundleABISplit: boolean;
        bBundleLanguageSplit: boolean;
        bBundleDensitySplit: boolean;
        ExtraManifestNodeTags: TArray<string>;
        ExtraApplicationNodeTags: TArray<string>;
        ExtraApplicationSettings: string;
        ExtraActivityNodeTags: TArray<string>;
        ExtraActivitySettings: string;
        ExtraPermissions: TArray<string>;
        bAndroidVoiceEnabled: boolean;
        PackageForOculusMobile: TArray<UE.EOculusMobileDevice>;
        bRemoveOSIG: boolean;
        GoogleVRCaps: TArray<UE.EGoogleVRCaps>;
        bGoogleVRSustainedPerformance: boolean;
        KeyStore: string;
        KeyAlias: string;
        KeyStorePassword: string;
        KeyPassword: string;
        bBuildForArmV7: boolean;
        bBuildForArm64: boolean;
        bBuildForX8664: boolean;
        bBuildForES31: boolean;
        bSupportsVulkan: boolean;
        bSupportsVulkanSM5: boolean;
        bAndroidOpenGLSupportsBackbufferSampling: boolean;
        bDetectVulkanByDefault: boolean;
        bBuildWithHiddenSymbolVisibility: boolean;
        bSaveSymbols: boolean;
        bForceLDLinker: boolean;
        bEnableGooglePlaySupport: boolean;
        bUseGetAccounts: boolean;
        GamesAppID: string;
        AchievementMap: TArray<UE.GooglePlayAchievementMapping>;
        LeaderboardMap: TArray<UE.GooglePlayLeaderboardMapping>;
        bEnableSnapshots: boolean;
        bSupportAdMob: boolean;
        AdMobAdUnitID: string;
        AdMobAdUnitIDs: TArray<string>;
        GooglePlayLicenseKey: string;
        GCMClientSenderID: string;
        bShowLaunchImage: boolean;
        bAllowIMU: boolean;
        bAllowControllers: boolean;
        bBlockAndroidKeysOnControllers: boolean;
        bControllersBlockDeviceFeedback: boolean;
        AndroidAudio: UE.EAndroidAudio;
        AudioSampleRate: number;
        AudioCallbackBufferFrameSize: number;
        AudioNumBuffersToEnqueue: number;
        AudioMaxChannels: number;
        AudioNumSourceWorkers: number;
        SpatializationPlugin: string;
        ReverbPlugin: string;
        OcclusionPlugin: string;
        CompressionOverrides: UE.PlatformRuntimeAudioCompressionOverrides;
        bUseAudioStreamCaching: boolean;
        CacheSizeKB: number;
        MaxChunkSizeOverrideKB: number;
        bResampleForDevice: boolean;
        SoundCueCookQualityIndex: number;
        MaxSampleRate: number;
        HighSampleRate: number;
        MedSampleRate: number;
        LowSampleRate: number;
        MinSampleRate: number;
        CompressionQualityModifier: number;
        AutoStreamingThreshold: number;
        AndroidGraphicsDebugger: UE.EAndroidGraphicsDebugger;
        MaliGraphicsDebuggerPath: UE.DirectoryPath;
        bMultiTargetFormat_ETC2: boolean;
        bMultiTargetFormat_DXT: boolean;
        bMultiTargetFormat_ASTC: boolean;
        TextureFormatPriority_ETC2: number;
        TextureFormatPriority_DXT: number;
        TextureFormatPriority_ASTC: number;
        SDKAPILevelOverride: string;
        NDKAPILevelOverride: string;
        bStreamLandscapeMeshLODs: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AndroidRuntimeSettings;
        static Load(InName: string): AndroidRuntimeSettings;
    
        __tid_AndroidRuntimeSettings_0__: boolean;
    }
    
    class AndroidSDKSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SDKPath: UE.DirectoryPath;
        NDKPath: UE.DirectoryPath;
        JavaPath: UE.DirectoryPath;
        SDKAPILevel: string;
        NDKAPILevel: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AndroidSDKSettings;
        static Load(InName: string): AndroidSDKSettings;
    
        __tid_AndroidSDKSettings_0__: boolean;
    }
    
    class AngularRangeLimit {
        constructor();
        constructor(LimitMin: UE.Vector, LimitMax: UE.Vector, Bone: UE.BoneReference);
        LimitMin: UE.Vector;
        LimitMax: UE.Vector;
        Bone: UE.BoneReference;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AngularRangeLimit_0__: boolean;
    }
    
    class AnimationActiveTransitionEntry {
        constructor();
        constructor(BlendProfile: UE.BlendProfile);
        BlendProfile: UE.BlendProfile;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationActiveTransitionEntry_0__: boolean;
    }
    
    class AnimationBlueprintEditorOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bHideUnrelatedNodes: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationBlueprintEditorOptions;
        static Load(InName: string): AnimationBlueprintEditorOptions;
    
        __tid_AnimationBlueprintEditorOptions_0__: boolean;
    }
    
    enum ERawCurveTrackTypes { RCT_Float, RCT_Vector, RCT_Transform, RCT_MAX, __typeKeyDoNoAccess}
    class AnimationBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddAnimationNotifyEvent(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string, StartTime: number, NotifyClass: $Nullable<UE.Class>) : UE.AnimNotify;
        static AddAnimationNotifyEventObject(AnimationSequence: $Nullable<UE.AnimSequence>, StartTime: number, Notify: $Nullable<UE.AnimNotify>, NotifyTrackName: string) : void;
        static AddAnimationNotifyStateEvent(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string, StartTime: number, Duration: number, NotifyStateClass: $Nullable<UE.Class>) : UE.AnimNotifyState;
        static AddAnimationNotifyStateEventObject(AnimationSequence: $Nullable<UE.AnimSequence>, StartTime: number, Duration: number, NotifyState: $Nullable<UE.AnimNotifyState>, NotifyTrackName: string) : void;
        static AddAnimationNotifyTrack(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string, TrackColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        static AddAnimationSyncMarker(AnimationSequence: $Nullable<UE.AnimSequence>, MarkerName: string, Time: number, NotifyTrackName: string) : void;
        static AddCurve(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, CurveType?: UE.ERawCurveTrackTypes /* = RCT_Float */, bMetaDataCurve?: boolean /* = false */) : void;
        static AddFloatCurveKey(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Time: number, Value: number) : void;
        static AddFloatCurveKeys(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Times: TArray<number>, Values: TArray<number>) : void;
        static AddMetaData(AnimationSequence: $Nullable<UE.AnimSequence>, MetaDataClass: $Nullable<UE.Class>, MetaDataInstance: UE.AnimMetaData) : void;
        static AddMetaDataObject(AnimationSequence: $Nullable<UE.AnimSequence>, MetaDataObject: $Nullable<UE.AnimMetaData>) : void;
        static AddTransformationCurveKey(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Time: number, Transform: UE.Transform) : void;
        static AddTransformationCurveKeys(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Times: TArray<number>, Transforms: TArray<UE.Transform>) : void;
        static AddVectorCurveKey(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Time: number, Vector: UE.Vector) : void;
        static AddVectorCurveKeys(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Times: TArray<number>, Vectors: TArray<UE.Vector>) : void;
        static AddVirtualBone(AnimationSequence: $Nullable<UE.AnimSequence>, SourceBoneName: string, TargetBoneName: string, VirtualBoneName: $Ref<string>) : void;
        static ContainsMetaDataOfClass(AnimationSequence: $Nullable<UE.AnimSequence>, MetaDataClass: $Nullable<UE.Class>) : boolean;
        static CopyAnimNotifiesFromSequence(SrcAnimSequence: $Nullable<UE.AnimSequence>, DestAnimSequence: $Nullable<UE.AnimSequence>) : void;
        static DoesBoneNameExist(AnimationSequence: $Nullable<UE.AnimSequence>, BoneName: string, bExists: $Ref<boolean>) : void;
        static DoesCurveExist(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, CurveType: UE.ERawCurveTrackTypes) : boolean;
        static FinalizeBoneAnimation(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static FindBonePathToRoot(AnimationSequence: $Nullable<UE.AnimSequence>, BoneName: string, BonePath: $Ref<TArray<string>>) : void;
        static GetAdditiveAnimationType(AnimationSequence: $Nullable<UE.AnimSequence>, AdditiveAnimationType: $Ref<UE.EAdditiveAnimationType>) : void;
        static GetAdditiveBasePoseType(AnimationSequence: $Nullable<UE.AnimSequence>, AdditiveBasePoseType: $Ref<UE.EAdditiveBasePoseType>) : void;
        static GetAnimationCurveNames(AnimationSequence: $Nullable<UE.AnimSequence>, CurveType: UE.ERawCurveTrackTypes, CurveNames: $Ref<TArray<string>>) : void;
        static GetAnimationInterpolationType(AnimationSequence: $Nullable<UE.AnimSequence>, InterpolationType: $Ref<UE.EAnimInterpolationType>) : void;
        static GetAnimationNotifyEventNames(AnimationSequence: $Nullable<UE.AnimSequence>, EventNames: $Ref<TArray<string>>) : void;
        static GetAnimationNotifyEvents(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyEvents: $Ref<TArray<UE.AnimNotifyEvent>>) : void;
        static GetAnimationNotifyEventsForTrack(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string, Events: $Ref<TArray<UE.AnimNotifyEvent>>) : void;
        static GetAnimationNotifyTrackNames(AnimationSequence: $Nullable<UE.AnimSequence>, TrackNames: $Ref<TArray<string>>) : void;
        static GetAnimationSyncMarkers(AnimationSequence: $Nullable<UE.AnimSequence>, Markers: $Ref<TArray<UE.AnimSyncMarker>>) : void;
        static GetAnimationSyncMarkersForTrack(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string, Markers: $Ref<TArray<UE.AnimSyncMarker>>) : void;
        static GetAnimationTrackNames(AnimationSequence: $Nullable<UE.AnimSequence>, TrackNames: $Ref<TArray<string>>) : void;
        static GetAnimNotifyEventTriggerTime(NotifyEvent: UE.AnimNotifyEvent) : number;
        static GetBoneCompressionSettings(AnimationSequence: $Nullable<UE.AnimSequence>, CompressionSettings: $Ref<UE.AnimBoneCompressionSettings>) : void;
        static GetBonePoseForFrame(AnimationSequence: $Nullable<UE.AnimSequence>, BoneName: string, Frame: number, bExtractRootMotion: boolean, Pose: $Ref<UE.Transform>) : void;
        static GetBonePoseForTime(AnimationSequence: $Nullable<UE.AnimSequence>, BoneName: string, Time: number, bExtractRootMotion: boolean, Pose: $Ref<UE.Transform>) : void;
        static GetBonePosesForFrame(AnimationSequence: $Nullable<UE.AnimSequence>, BoneNames: TArray<string>, Frame: number, bExtractRootMotion: boolean, Poses: $Ref<TArray<UE.Transform>>, PreviewMesh?: UE.SkeletalMesh /* = None */) : void;
        static GetBonePosesForTime(AnimationSequence: $Nullable<UE.AnimSequence>, BoneNames: TArray<string>, Time: number, bExtractRootMotion: boolean, Poses: $Ref<TArray<UE.Transform>>, PreviewMesh?: UE.SkeletalMesh /* = None */) : void;
        static GetCurveCompressionSettings(AnimationSequence: $Nullable<UE.AnimSequence>, CompressionSettings: $Ref<UE.AnimCurveCompressionSettings>) : void;
        static GetFloatKeys(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Times: $Ref<TArray<number>>, Values: $Ref<TArray<number>>) : void;
        static GetFrameAtTime(AnimationSequence: $Nullable<UE.AnimSequence>, Time: number, Frame: $Ref<number>) : void;
        static GetMetaData(AnimationSequence: $Nullable<UE.AnimSequence>, MetaData: TArray<UE.AnimMetaData>) : void;
        static GetMetaDataOfClass(AnimationSequence: $Nullable<UE.AnimSequence>, MetaDataClass: $Nullable<UE.Class>, MetaDataOfClass: TArray<UE.AnimMetaData>) : void;
        static GetNumFrames(AnimationSequence: $Nullable<UE.AnimSequence>, NumFrames: $Ref<number>) : void;
        static GetRateScale(AnimationSequence: $Nullable<UE.AnimSequence>, RateScale: $Ref<number>) : void;
        static GetRawTrackData(AnimationSequence: $Nullable<UE.AnimSequence>, TrackName: string, PositionKeys: $Ref<TArray<UE.Vector>>, RotationKeys: $Ref<TArray<UE.Quat>>, ScalingKeys: $Ref<TArray<UE.Vector>>) : void;
        static GetRawTrackPositionData(AnimationSequence: $Nullable<UE.AnimSequence>, TrackName: string, PositionData: $Ref<TArray<UE.Vector>>) : void;
        static GetRawTrackRotationData(AnimationSequence: $Nullable<UE.AnimSequence>, TrackName: string, RotationData: $Ref<TArray<UE.Quat>>) : void;
        static GetRawTrackScaleData(AnimationSequence: $Nullable<UE.AnimSequence>, TrackName: string, ScaleData: $Ref<TArray<UE.Vector>>) : void;
        static GetRootMotionLockType(AnimationSequence: $Nullable<UE.AnimSequence>, LockType: $Ref<UE.ERootMotionRootLock>) : void;
        static GetSequenceLength(AnimationSequence: $Nullable<UE.AnimSequence>, Length: $Ref<number>) : void;
        static GetTimeAtFrame(AnimationSequence: $Nullable<UE.AnimSequence>, Frame: number, Time: $Ref<number>) : void;
        static GetTransformationKeys(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Times: $Ref<TArray<number>>, Values: $Ref<TArray<UE.Transform>>) : void;
        static GetUniqueMarkerNames(AnimationSequence: $Nullable<UE.AnimSequence>, MarkerNames: $Ref<TArray<string>>) : void;
        static GetVectorKeys(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, Times: $Ref<TArray<number>>, Values: $Ref<TArray<UE.Vector>>) : void;
        static IsRootMotionEnabled(AnimationSequence: $Nullable<UE.AnimSequence>) : boolean;
        static IsRootMotionLockForced(AnimationSequence: $Nullable<UE.AnimSequence>) : boolean;
        static IsValidAnimationSyncMarkerName(AnimationSequence: $Nullable<UE.AnimSequence>, MarkerName: string) : boolean;
        static IsValidAnimNotifyTrackName(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string) : boolean;
        static IsValidRawAnimationTrackName(AnimationSequence: $Nullable<UE.AnimSequence>, TrackName: string) : boolean;
        static IsValidTime(AnimationSequence: $Nullable<UE.AnimSequence>, Time: number, IsValid: $Ref<boolean>) : void;
        static RemoveAllAnimationNotifyTracks(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static RemoveAllAnimationSyncMarkers(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static RemoveAllBoneAnimation(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static RemoveAllCurveData(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static RemoveAllMetaData(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static RemoveAllVirtualBones(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static RemoveAnimationNotifyEventsByName(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyName: string) : number;
        static RemoveAnimationNotifyEventsByTrack(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string) : number;
        static RemoveAnimationNotifyTrack(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string) : void;
        static RemoveAnimationSyncMarkersByName(AnimationSequence: $Nullable<UE.AnimSequence>, MarkerName: string) : number;
        static RemoveAnimationSyncMarkersByTrack(AnimationSequence: $Nullable<UE.AnimSequence>, NotifyTrackName: string) : number;
        static RemoveBoneAnimation(AnimationSequence: $Nullable<UE.AnimSequence>, BoneName: string, bIncludeChildren?: boolean /* = true */, bFinalize?: boolean /* = true */) : void;
        static RemoveCurve(AnimationSequence: $Nullable<UE.AnimSequence>, CurveName: string, bRemoveNameFromSkeleton?: boolean /* = false */) : void;
        static RemoveMetaData(AnimationSequence: $Nullable<UE.AnimSequence>, MetaDataObject: $Nullable<UE.AnimMetaData>) : void;
        static RemoveMetaDataOfClass(AnimationSequence: $Nullable<UE.AnimSequence>, MetaDataClass: $Nullable<UE.Class>) : void;
        static RemoveVirtualBone(AnimationSequence: $Nullable<UE.AnimSequence>, VirtualBoneName: string) : void;
        static RemoveVirtualBones(AnimationSequence: $Nullable<UE.AnimSequence>, VirtualBoneNames: TArray<string>) : void;
        static ReplaceAnimNotifies(AnimationSequence: $Nullable<UE.AnimSequenceBase>, OldNotifyClass: $Nullable<UE.Class>, NewNotifyClass: $Nullable<UE.Class>, OnNotifyReplaced: $Delegate<(OldNotify: $Nullable<UE.AnimNotify>, NewNotify: $Nullable<UE.AnimNotify>) => void>) : void;
        static ReplaceAnimNotifyStates(AnimationSequence: $Nullable<UE.AnimSequenceBase>, OldNotifyClass: $Nullable<UE.Class>, NewNotifyClass: $Nullable<UE.Class>, OnNotifyStateReplaced: $Delegate<(OldNotifyState: $Nullable<UE.AnimNotifyState>, NewNotifyState: $Nullable<UE.AnimNotifyState>) => void>) : void;
        static SetAdditiveAnimationType(AnimationSequence: $Nullable<UE.AnimSequence>, AdditiveAnimationType: UE.EAdditiveAnimationType) : void;
        static SetAdditiveBasePoseType(AnimationSequence: $Nullable<UE.AnimSequence>, AdditiveBasePoseType: UE.EAdditiveBasePoseType) : void;
        static SetAnimationInterpolationType(AnimationSequence: $Nullable<UE.AnimSequence>, InterpolationType: UE.EAnimInterpolationType) : void;
        static SetBoneCompressionSettings(AnimationSequence: $Nullable<UE.AnimSequence>, CompressionSettings: $Nullable<UE.AnimBoneCompressionSettings>) : void;
        static SetCurveCompressionSettings(AnimationSequence: $Nullable<UE.AnimSequence>, CompressionSettings: $Nullable<UE.AnimCurveCompressionSettings>) : void;
        static SetIsRootMotionLockForced(AnimationSequence: $Nullable<UE.AnimSequence>, bForced: boolean) : void;
        static SetRateScale(AnimationSequence: $Nullable<UE.AnimSequence>, RateScale: number) : void;
        static SetRootMotionEnabled(AnimationSequence: $Nullable<UE.AnimSequence>, bEnabled: boolean) : void;
        static SetRootMotionLockType(AnimationSequence: $Nullable<UE.AnimSequence>, RootMotionLockType: UE.ERootMotionRootLock) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationBlueprintLibrary;
        static Load(InName: string): AnimationBlueprintLibrary;
    
        __tid_AnimationBlueprintLibrary_0__: boolean;
    }
    
    enum AnimationCompressionFormat { ACF_None, ACF_Float96NoW, ACF_Fixed48NoW, ACF_IntervalFixed32NoW, ACF_Fixed32NoW, ACF_Float32NoW, ACF_Identity, ACF_MAX, __typeKeyDoNoAccess}
    class BlueprintCallableFunctionRedirect {
        constructor();
        constructor(ClassName: string, OldFunctionName: string, NewFunctionName: string, BlueprintParamName: string, ClassParamName: string);
        ClassName: string;
        OldFunctionName: string;
        NewFunctionName: string;
        BlueprintParamName: string;
        ClassParamName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintCallableFunctionRedirect_0__: boolean;
    }
    
    class EdGraphSchema_K2 extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditoronlyBPFunctionRedirects: TArray<UE.BlueprintCallableFunctionRedirect>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphSchema_K2;
        static Load(InName: string): EdGraphSchema_K2;
    
        __tid_EdGraphSchema_K2_0__: boolean;
    }
    
    class AnimationConduitGraphSchema extends UE.EdGraphSchema_K2 {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationConduitGraphSchema;
        static Load(InName: string): AnimationConduitGraphSchema;
    
        __tid_AnimationConduitGraphSchema_0__: boolean;
    }
    
    class AnimationGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlendOptions: UE.AnimGraphBlendOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationGraph;
        static Load(InName: string): AnimationGraph;
    
        __tid_AnimationGraph_0__: boolean;
    }
    
    class K2Node extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node;
        static Load(InName: string): K2Node;
    
        __tid_K2Node_0__: boolean;
    }
    
    class OptionalPinFromProperty {
        constructor();
        constructor(PropertyName: string, PropertyFriendlyName: string, PropertyTooltip: string, CategoryName: string, bShowPin: boolean, bCanToggleVisibility: boolean, bPropertyIsCustomized: boolean, bHasOverridePin: boolean, bIsMarkedForAdvancedDisplay: boolean, bIsOverrideEnabled: boolean, bIsSetValuePinVisible: boolean, bIsOverridePinVisible: boolean);
        PropertyName: string;
        PropertyFriendlyName: string;
        PropertyTooltip: string;
        CategoryName: string;
        bShowPin: boolean;
        bCanToggleVisibility: boolean;
        bPropertyIsCustomized: boolean;
        bHasOverridePin: boolean;
        bIsMarkedForAdvancedDisplay: boolean;
        bIsOverrideEnabled: boolean;
        bIsSetValuePinVisible: boolean;
        bIsOverridePinVisible: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OptionalPinFromProperty_0__: boolean;
    }
    
    enum EAnimGraphNodePropertyBindingType { None, Property, Function, EAnimGraphNodePropertyBindingType_MAX, __typeKeyDoNoAccess}
    class AnimGraphNodePropertyBinding {
        constructor();
        constructor(PinType: UE.EdGraphPinType, PromotedPinType: UE.EdGraphPinType, PropertyName: string, PathAsText: string, PropertyPath: TArray<string>, Type: UE.EAnimGraphNodePropertyBindingType, bIsBound: boolean, bIsPromotion: boolean);
        PinType: UE.EdGraphPinType;
        PromotedPinType: UE.EdGraphPinType;
        PropertyName: string;
        PathAsText: string;
        PropertyPath: TArray<string>;
        Type: UE.EAnimGraphNodePropertyBindingType;
        bIsBound: boolean;
        bIsPromotion: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimGraphNodePropertyBinding_0__: boolean;
    }
    
    enum EBlueprintUsage { NoProperties, DoesNotUseBlueprint, UsesBlueprint, EBlueprintUsage_MAX, __typeKeyDoNoAccess}
    class AnimGraphNode_Base extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShowPinForProperties: TArray<UE.OptionalPinFromProperty>;
        PropertyBindings: TMap<string, UE.AnimGraphNodePropertyBinding>;
        BlueprintUsage: UE.EBlueprintUsage;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_Base;
        static Load(InName: string): AnimGraphNode_Base;
    
        __tid_AnimGraphNode_Base_0__: boolean;
    }
    
    class AnimNode_Base {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_Base_0__: boolean;
    }
    
    class PoseLinkBase {
        constructor();
        constructor(LinkID: number, SourceLinkID: number);
        LinkID: number;
        SourceLinkID: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PoseLinkBase_0__: boolean;
    }
    
    class PoseLink extends UE.PoseLinkBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PoseLink_0__: boolean;
    }
    
    class AnimNode_Root extends UE.AnimNode_Base {
        constructor();
        constructor(Result: UE.PoseLink, Name: string, Group: string);
        Result: UE.PoseLink;
        Name: string;
        Group: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_Root_0__: boolean;
    }
    
    class AnimNode_StateResult extends UE.AnimNode_Root {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_StateResult_0__: boolean;
    }
    
    class AnimGraphNode_StateResult extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_StateResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_StateResult;
        static Load(InName: string): AnimGraphNode_StateResult;
    
        __tid_AnimGraphNode_StateResult_0__: boolean;
    }
    
    class AnimGraphNode_CustomTransitionResult extends UE.AnimGraphNode_StateResult {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_CustomTransitionResult;
        static Load(InName: string): AnimGraphNode_CustomTransitionResult;
    
        __tid_AnimGraphNode_CustomTransitionResult_0__: boolean;
    }
    
    class AnimationCustomTransitionGraph extends UE.AnimationGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MyResultNode: UE.AnimGraphNode_CustomTransitionResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationCustomTransitionGraph;
        static Load(InName: string): AnimationCustomTransitionGraph;
    
        __tid_AnimationCustomTransitionGraph_0__: boolean;
    }
    
    class AnimationGraphSchema extends UE.EdGraphSchema_K2 {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PN_SequenceName: string;
        NAME_NeverAsPin: string;
        NAME_PinHiddenByDefault: string;
        NAME_PinShownByDefault: string;
        NAME_AlwaysAsPin: string;
        NAME_CustomizeProperty: string;
        NAME_OnEvaluate: string;
        DefaultEvaluationHandlerName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationGraphSchema;
        static Load(InName: string): AnimationGraphSchema;
    
        __tid_AnimationGraphSchema_0__: boolean;
    }
    
    class AnimationCustomTransitionSchema extends UE.AnimationGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationCustomTransitionSchema;
        static Load(InName: string): AnimationCustomTransitionSchema;
    
        __tid_AnimationCustomTransitionSchema_0__: boolean;
    }
    
    class AnimationDataSourceRegistry extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DataSources: TMap<string, TWeakObjectPtr<UE.Object>>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationDataSourceRegistry;
        static Load(InName: string): AnimationDataSourceRegistry;
    
        __tid_AnimationDataSourceRegistry_0__: boolean;
    }
    
    class AnimationEditorPreviewActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationEditorPreviewActor;
        static Load(InName: string): AnimationEditorPreviewActor;
    
        __tid_AnimationEditorPreviewActor_0__: boolean;
    }
    
    class AnimationErrorStats {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationErrorStats_0__: boolean;
    }
    
    class AnimationFrameSnapshot {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationFrameSnapshot_0__: boolean;
    }
    
    enum EAnimGroupRole { CanBeLeader, AlwaysFollower, AlwaysLeader, TransitionLeader, TransitionFollower, EAnimGroupRole_MAX, __typeKeyDoNoAccess}
    enum EAnimSyncGroupScope { Local, Component, EAnimSyncGroupScope_MAX, __typeKeyDoNoAccess}
    class AnimationGroupReference {
        constructor();
        constructor(GroupName: string, GroupRole: UE.EAnimGroupRole, GroupScope: UE.EAnimSyncGroupScope);
        GroupName: string;
        GroupRole: UE.EAnimGroupRole;
        GroupScope: UE.EAnimSyncGroupScope;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationGroupReference_0__: boolean;
    }
    
    enum AnimationKeyFormat { AKF_ConstantKeyLerp, AKF_VariableKeyLerp, AKF_PerTrackCompression, AKF_MAX, __typeKeyDoNoAccess}
    class AnimationModifier extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RevisionGuid: UE.Guid;
        AppliedGuid: UE.Guid;
        StoredNativeRevision: number;
        PreviouslyAppliedModifier: UE.AnimationModifier;
        OnApply(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        OnRevert(AnimationSequence: $Nullable<UE.AnimSequence>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationModifier;
        static Load(InName: string): AnimationModifier;
    
        __tid_AnimationModifier_0__: boolean;
    }
    
    class AnimationModifiersAssetUserData extends UE.AssetUserData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationModifierInstances: TArray<UE.AnimationModifier>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationModifiersAssetUserData;
        static Load(InName: string): AnimationModifiersAssetUserData;
    
        __tid_AnimationModifiersAssetUserData_0__: boolean;
    }
    
    class AnimationPotentialTransition {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationPotentialTransition_0__: boolean;
    }
    
    class DeveloperSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DeveloperSettings;
        static Load(InName: string): DeveloperSettings;
    
        __tid_DeveloperSettings_0__: boolean;
    }
    
    class CustomAttributeSetting {
        constructor();
        constructor(Name: string, Meaning: string);
        Name: string;
        Meaning: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomAttributeSetting_0__: boolean;
    }
    
    enum ECustomAttributeBlendType { Override, Blend, ECustomAttributeBlendType_MAX, __typeKeyDoNoAccess}
    class AnimationSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CompressCommandletVersion: number;
        KeyEndEffectorsMatchNameArray: TArray<string>;
        ForceRecompression: boolean;
        bForceBelowThreshold: boolean;
        bFirstRecompressUsingCurrentOrDefault: boolean;
        bRaiseMaxErrorToExisting: boolean;
        bEnablePerformanceLog: boolean;
        bStripAnimationDataOnDedicatedServer: boolean;
        bTickAnimationOnSkeletalMeshInit: boolean;
        BoneCustomAttributesNames: TArray<UE.CustomAttributeSetting>;
        BoneNamesWithCustomAttributes: TArray<string>;
        AttributeBlendModes: TMap<string, UE.ECustomAttributeBlendType>;
        DefaultAttributeBlendMode: UE.ECustomAttributeBlendType;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationSettings;
        static Load(InName: string): AnimationSettings;
    
        __tid_AnimationSettings_0__: boolean;
    }
    
    class AnimationSetup {
        constructor();
        constructor(AnimSequence: UE.AnimSequence, AnimBlueprint: UE.Class, NumRandomizedInstances: UE.PerPlatformInt, Enabled: UE.PerPlatformBool);
        AnimSequence: UE.AnimSequence;
        AnimBlueprint: UE.Class;
        NumRandomizedInstances: UE.PerPlatformInt;
        Enabled: UE.PerPlatformBool;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationSetup_0__: boolean;
    }
    
    class Enum extends UE.Field {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Enum;
        static Load(InName: string): Enum;
    
        __tid_Enum_0__: boolean;
    }
    
    class AnimationSharingStateProcessor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationStateEnum: TSoftObjectPtr<UE.Enum>;
        GetAnimationStateEnum() : UE.Enum;
        ProcessActorState(OutState: $Ref<number>, InActor: $Nullable<UE.Actor>, CurrentState: number, OnDemandState: number, bShouldProcess: $Ref<boolean>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationSharingStateProcessor;
        static Load(InName: string): AnimationSharingStateProcessor;
    
        __tid_AnimationSharingStateProcessor_0__: boolean;
    }
    
    class AnimSharingInstance extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RegisteredActors: TArray<UE.Actor>;
        StateProcessor: UE.AnimationSharingStateProcessor;
        UsedAnimationSequences: TArray<UE.AnimSequence>;
        StateEnum: UE.Enum;
        SharingActor: UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSharingInstance;
        static Load(InName: string): AnimSharingInstance;
    
        __tid_AnimSharingInstance_0__: boolean;
    }
    
    class AnimationStateEntry {
        constructor();
        constructor(State: number, AnimationSetups: TArray<UE.AnimationSetup>, bOnDemand: boolean, bAdditive: boolean, BlendTime: number, bReturnToPreviousState: boolean, bSetNextState: boolean, NextState: number, MaximumNumberOfConcurrentInstances: UE.PerPlatformInt, WiggleTimePercentage: number, bRequiresCurves: boolean);
        State: number;
        AnimationSetups: TArray<UE.AnimationSetup>;
        bOnDemand: boolean;
        bAdditive: boolean;
        BlendTime: number;
        bReturnToPreviousState: boolean;
        bSetNextState: boolean;
        NextState: number;
        MaximumNumberOfConcurrentInstances: UE.PerPlatformInt;
        WiggleTimePercentage: number;
        bRequiresCurves: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationStateEntry_0__: boolean;
    }
    
    class PerSkeletonAnimationSharingSetup {
        constructor();
        constructor(Skeleton: UE.Skeleton, SkeletalMesh: UE.SkeletalMesh, BlendAnimBlueprint: UE.Class, AdditiveAnimBlueprint: UE.Class, StateProcessorClass: UE.Class, AnimationStates: TArray<UE.AnimationStateEntry>);
        Skeleton: UE.Skeleton;
        SkeletalMesh: UE.SkeletalMesh;
        BlendAnimBlueprint: UE.Class;
        AdditiveAnimBlueprint: UE.Class;
        StateProcessorClass: UE.Class;
        AnimationStates: TArray<UE.AnimationStateEntry>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PerSkeletonAnimationSharingSetup_0__: boolean;
    }
    
    class AnimationSharingScalability {
        constructor();
        constructor(UseBlendTransitions: UE.PerPlatformBool, BlendSignificanceValue: UE.PerPlatformFloat, MaximumNumberConcurrentBlends: UE.PerPlatformInt, TickSignificanceValue: UE.PerPlatformFloat);
        UseBlendTransitions: UE.PerPlatformBool;
        BlendSignificanceValue: UE.PerPlatformFloat;
        MaximumNumberConcurrentBlends: UE.PerPlatformInt;
        TickSignificanceValue: UE.PerPlatformFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationSharingScalability_0__: boolean;
    }
    
    class AnimationSharingSetup extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SkeletonSetups: TArray<UE.PerSkeletonAnimationSharingSetup>;
        ScalabilitySettings: UE.AnimationSharingScalability;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationSharingSetup;
        static Load(InName: string): AnimationSharingSetup;
    
        __tid_AnimationSharingSetup_0__: boolean;
    }
    
    class AnimationSharingManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Skeletons: TArray<UE.Skeleton>;
        PerSkeletonData: TArray<UE.AnimSharingInstance>;
        RegisterActorWithSkeletonBP(InActor: $Nullable<UE.Actor>, SharingSkeleton: $Nullable<UE.Skeleton>) : void;
        static AnimationSharingEnabled() : boolean;
        static CreateAnimationSharingManager(WorldContextObject: $Nullable<UE.Object>, Setup: $Nullable<UE.AnimationSharingSetup>) : boolean;
        static GetAnimationSharingManager(WorldContextObject: $Nullable<UE.Object>) : UE.AnimationSharingManager;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationSharingManager;
        static Load(InName: string): AnimationSharingManager;
    
        __tid_AnimationSharingManager_0__: boolean;
    }
    
    class AnimationSharingSetupFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationSharingSetupFactory;
        static Load(InName: string): AnimationSharingSetupFactory;
    
        __tid_AnimationSharingSetupFactory_0__: boolean;
    }
    
    class AnimationTransitionRule {
        constructor();
        constructor(RuleToExecute: string, TransitionReturnVal: boolean, TransitionIndex: number);
        RuleToExecute: string;
        TransitionReturnVal: boolean;
        TransitionIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationTransitionRule_0__: boolean;
    }
    
    class AnimationState extends UE.AnimationStateBase {
        constructor();
        constructor(Transitions: TArray<UE.AnimationTransitionRule>, StateRootNodeIndex: number, StartNotify: number, EndNotify: number, FullyBlendedNotify: number);
        Transitions: TArray<UE.AnimationTransitionRule>;
        StateRootNodeIndex: number;
        StartNotify: number;
        EndNotify: number;
        FullyBlendedNotify: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimationState_0__: boolean;
    }
    
    class AnimationStateGraph extends UE.AnimationGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MyResultNode: UE.AnimGraphNode_StateResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationStateGraph;
        static Load(InName: string): AnimationStateGraph;
    
        __tid_AnimationStateGraph_0__: boolean;
    }
    
    class AnimationStateGraphSchema extends UE.AnimationGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationStateGraphSchema;
        static Load(InName: string): AnimationStateGraphSchema;
    
        __tid_AnimationStateGraphSchema_0__: boolean;
    }
    
    class AnimStateEntryNode extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStateEntryNode;
        static Load(InName: string): AnimStateEntryNode;
    
        __tid_AnimStateEntryNode_0__: boolean;
    }
    
    class AnimGraphNode_StateMachineBase extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditorStateMachineGraph: UE.AnimationStateMachineGraph;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_StateMachineBase;
        static Load(InName: string): AnimGraphNode_StateMachineBase;
    
        __tid_AnimGraphNode_StateMachineBase_0__: boolean;
    }
    
    class AnimationStateMachineGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EntryNode: UE.AnimStateEntryNode;
        OwnerAnimGraphNode: UE.AnimGraphNode_StateMachineBase;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationStateMachineGraph;
        static Load(InName: string): AnimationStateMachineGraph;
    
        __tid_AnimationStateMachineGraph_0__: boolean;
    }
    
    class AnimationStateMachineSchema extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationStateMachineSchema;
        static Load(InName: string): AnimationStateMachineSchema;
    
        __tid_AnimationStateMachineSchema_0__: boolean;
    }
    
    class SkeletalMeshActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShouldDoAnimNotifies: boolean;
        bWakeOnLevelStart: boolean;
        SkeletalMeshComponent: UE.SkeletalMeshComponent;
        ReplicatedMesh: UE.SkeletalMesh;
        ReplicatedPhysAsset: UE.PhysicsAsset;
        ReplicatedMaterial0: UE.MaterialInterface;
        ReplicatedMaterial1: UE.MaterialInterface;
        OnRep_ReplicatedMaterial0() : void;
        OnRep_ReplicatedMaterial1() : void;
        OnRep_ReplicatedMesh() : void;
        OnRep_ReplicatedPhysAsset() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshActor;
        static Load(InName: string): SkeletalMeshActor;
    
        __tid_SkeletalMeshActor_0__: boolean;
    }
    
    class AnimationThumbnailSkeletalMeshActor extends UE.SkeletalMeshActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationThumbnailSkeletalMeshActor;
        static Load(InName: string): AnimationThumbnailSkeletalMeshActor;
    
        __tid_AnimationThumbnailSkeletalMeshActor_0__: boolean;
    }
    
    class AnimNode_TransitionResult extends UE.AnimNode_Base {
        constructor();
        constructor(bCanEnterTransition: boolean);
        bCanEnterTransition: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_TransitionResult_0__: boolean;
    }
    
    class AnimGraphNode_TransitionResult extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_TransitionResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_TransitionResult;
        static Load(InName: string): AnimGraphNode_TransitionResult;
    
        __tid_AnimGraphNode_TransitionResult_0__: boolean;
    }
    
    class AnimationTransitionGraph extends UE.AnimationGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MyResultNode: UE.AnimGraphNode_TransitionResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationTransitionGraph;
        static Load(InName: string): AnimationTransitionGraph;
    
        __tid_AnimationTransitionGraph_0__: boolean;
    }
    
    class AnimationTransitionSchema extends UE.EdGraphSchema_K2 {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimationTransitionSchema;
        static Load(InName: string): AnimationTransitionSchema;
    
        __tid_AnimationTransitionSchema_0__: boolean;
    }
    
    class AnimBlueprintDebugData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimBlueprintDebugData_0__: boolean;
    }
    
    class AnimBlueprintFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlueprintType: UE.EBlueprintType;
        ParentClass: UE.Class;
        TargetSkeleton: UE.Skeleton;
        PreviewSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBlueprintFactory;
        static Load(InName: string): AnimBlueprintFactory;
    
        __tid_AnimBlueprintFactory_0__: boolean;
    }
    
    class AnimBlueprintFunction {
        constructor();
        constructor(Name: string, Group: string, OutputPoseNodeIndex: number, InputPoseNames: TArray<string>, InputPoseNodeIndices: TArray<number>, bImplemented: boolean);
        Name: string;
        Group: string;
        OutputPoseNodeIndex: number;
        InputPoseNames: TArray<string>;
        InputPoseNodeIndices: TArray<number>;
        bImplemented: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimBlueprintFunction_0__: boolean;
    }
    
    class AnimBlueprintFunctionData {
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimBlueprintFunctionData_0__: boolean;
    }
    
    class AnimBlueprintFunctionPinInfo {
        constructor();
        constructor(Name: string, Type: UE.EdGraphPinType);
        Name: string;
        Type: UE.EdGraphPinType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimBlueprintFunctionPinInfo_0__: boolean;
    }
    
    class AnimBlueprintPostCompileValidation extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBlueprintPostCompileValidation;
        static Load(InName: string): AnimBlueprintPostCompileValidation;
    
        __tid_AnimBlueprintPostCompileValidation_0__: boolean;
    }
    
    class ThumbnailRenderer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ThumbnailRenderer;
        static Load(InName: string): ThumbnailRenderer;
    
        __tid_ThumbnailRenderer_0__: boolean;
    }
    
    class DefaultSizedThumbnailRenderer extends UE.ThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultSizeX: number;
        DefaultSizeY: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DefaultSizedThumbnailRenderer;
        static Load(InName: string): DefaultSizedThumbnailRenderer;
    
        __tid_DefaultSizedThumbnailRenderer_0__: boolean;
    }
    
    class AnimBlueprintThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBlueprintThumbnailRenderer;
        static Load(InName: string): AnimBlueprintThumbnailRenderer;
    
        __tid_AnimBlueprintThumbnailRenderer_0__: boolean;
    }
    
    class AnimBoneCompressionSettingsFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimBoneCompressionSettingsFactory;
        static Load(InName: string): AnimBoneCompressionSettingsFactory;
    
        __tid_AnimBoneCompressionSettingsFactory_0__: boolean;
    }
    
    class AnimClassData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BakedStateMachines: TArray<UE.BakedAnimationStateMachine>;
        TargetSkeleton: UE.Skeleton;
        AnimNotifies: TArray<UE.AnimNotifyEvent>;
        OrderedSavedPoseIndicesMap: TMap<string, UE.CachedPoseIndices>;
        AnimBlueprintFunctions: TArray<UE.AnimBlueprintFunction>;
        AnimBlueprintFunctionData: TArray<UE.AnimBlueprintFunctionData>;
        GraphNameAssetPlayers: TMap<string, UE.GraphAssetPlayerInformation>;
        SyncGroupNames: TArray<string>;
        EvaluateGraphExposedInputs: TArray<UE.ExposedValueHandler>;
        GraphBlendOptions: TMap<string, UE.AnimGraphBlendOptions>;
        PropertyAccessLibrary: UE.PropertyAccessLibrary;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimClassData;
        static Load(InName: string): AnimClassData;
    
        __tid_AnimClassData_0__: boolean;
    }
    
    class AnimClassInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimClassInterface;
        static Load(InName: string): AnimClassInterface;
    
        __tid_AnimClassInterface_0__: boolean;
    }
    
    class AnimComposite extends UE.AnimCompositeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationTrack: UE.AnimTrack;
        PreviewBasePose: UE.AnimSequence;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimComposite;
        static Load(InName: string): AnimComposite;
    
        __tid_AnimComposite_0__: boolean;
    }
    
    class AnimCompositeFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeleton: UE.Skeleton;
        SourceAnimation: UE.AnimSequence;
        PreviewSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompositeFactory;
        static Load(InName: string): AnimCompositeFactory;
    
        __tid_AnimCompositeFactory_0__: boolean;
    }
    
    class AnimCompress extends UE.AnimBoneCompressionCodec {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bNeedsSkeleton: boolean;
        TranslationCompressionFormat: UE.AnimationCompressionFormat;
        RotationCompressionFormat: UE.AnimationCompressionFormat;
        ScaleCompressionFormat: UE.AnimationCompressionFormat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompress;
        static Load(InName: string): AnimCompress;
    
        __tid_AnimCompress_0__: boolean;
    }
    
    class AnimCompress_BitwiseCompressOnly extends UE.AnimCompress {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompress_BitwiseCompressOnly;
        static Load(InName: string): AnimCompress_BitwiseCompressOnly;
    
        __tid_AnimCompress_BitwiseCompressOnly_0__: boolean;
    }
    
    class AnimCompress_LeastDestructive extends UE.AnimCompress_BitwiseCompressOnly {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompress_LeastDestructive;
        static Load(InName: string): AnimCompress_LeastDestructive;
    
        __tid_AnimCompress_LeastDestructive_0__: boolean;
    }
    
    class AnimCompress_RemoveLinearKeys extends UE.AnimCompress {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxPosDiff: number;
        MaxAngleDiff: number;
        MaxScaleDiff: number;
        MaxEffectorDiff: number;
        MinEffectorDiff: number;
        EffectorDiffSocket: number;
        ParentKeyScale: number;
        bRetarget: boolean;
        bActuallyFilterLinearKeys: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompress_RemoveLinearKeys;
        static Load(InName: string): AnimCompress_RemoveLinearKeys;
    
        __tid_AnimCompress_RemoveLinearKeys_0__: boolean;
    }
    
    class AnimCompress_PerTrackCompression extends UE.AnimCompress_RemoveLinearKeys {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxZeroingThreshold: number;
        MaxPosDiffBitwise: number;
        MaxAngleDiffBitwise: number;
        MaxScaleDiffBitwise: number;
        AllowedRotationFormats: TArray<UE.AnimationCompressionFormat>;
        AllowedTranslationFormats: TArray<UE.AnimationCompressionFormat>;
        AllowedScaleFormats: TArray<UE.AnimationCompressionFormat>;
        bResampleAnimation: boolean;
        ResampledFramerate: number;
        MinKeysForResampling: number;
        bUseAdaptiveError: boolean;
        bUseOverrideForEndEffectors: boolean;
        TrackHeightBias: number;
        ParentingDivisor: number;
        ParentingDivisorExponent: number;
        bUseAdaptiveError2: boolean;
        RotationErrorSourceRatio: number;
        TranslationErrorSourceRatio: number;
        ScaleErrorSourceRatio: number;
        MaxErrorPerTrackRatio: number;
        PerturbationProbeSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompress_PerTrackCompression;
        static Load(InName: string): AnimCompress_PerTrackCompression;
    
        __tid_AnimCompress_PerTrackCompression_0__: boolean;
    }
    
    class AnimCompress_RemoveEverySecondKey extends UE.AnimCompress {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MinKeys: number;
        bStartAtSecondKey: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompress_RemoveEverySecondKey;
        static Load(InName: string): AnimCompress_RemoveEverySecondKey;
    
        __tid_AnimCompress_RemoveEverySecondKey_0__: boolean;
    }
    
    class AnimCompress_RemoveTrivialKeys extends UE.AnimCompress {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxPosDiff: number;
        MaxAngleDiff: number;
        MaxScaleDiff: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCompress_RemoveTrivialKeys;
        static Load(InName: string): AnimCompress_RemoveTrivialKeys;
    
        __tid_AnimCompress_RemoveTrivialKeys_0__: boolean;
    }
    
    class AnimControlTrackKey {
        constructor();
        constructor(StartTime: number, AnimSeq: UE.AnimSequence, AnimStartOffset: number, AnimEndOffset: number, AnimPlayRate: number, bLooping: boolean, bReverse: boolean);
        StartTime: number;
        AnimSeq: UE.AnimSequence;
        AnimStartOffset: number;
        AnimEndOffset: number;
        AnimPlayRate: number;
        bLooping: boolean;
        bReverse: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimControlTrackKey_0__: boolean;
    }
    
    class AnimCurveCompressionCodec_CompressedRichCurve extends UE.AnimCurveCompressionCodec {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxCurveError: number;
        UseAnimSequenceSampleRate: boolean;
        ErrorSampleRate: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCurveCompressionCodec_CompressedRichCurve;
        static Load(InName: string): AnimCurveCompressionCodec_CompressedRichCurve;
    
        __tid_AnimCurveCompressionCodec_CompressedRichCurve_0__: boolean;
    }
    
    class AnimCurveCompressionCodec_UniformIndexable extends UE.AnimCurveCompressionCodec {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCurveCompressionCodec_UniformIndexable;
        static Load(InName: string): AnimCurveCompressionCodec_UniformIndexable;
    
        __tid_AnimCurveCompressionCodec_UniformIndexable_0__: boolean;
    }
    
    class AnimCurveCompressionCodec_UniformlySampled extends UE.AnimCurveCompressionCodec {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UseAnimSequenceSampleRate: boolean;
        SampleRate: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCurveCompressionCodec_UniformlySampled;
        static Load(InName: string): AnimCurveCompressionCodec_UniformlySampled;
    
        __tid_AnimCurveCompressionCodec_UniformlySampled_0__: boolean;
    }
    
    class AnimCurveCompressionSettingsFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimCurveCompressionSettingsFactory;
        static Load(InName: string): AnimCurveCompressionSettingsFactory;
    
        __tid_AnimCurveCompressionSettingsFactory_0__: boolean;
    }
    
    class AnimCurveParam {
        constructor();
        constructor(Name: string);
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimCurveParam_0__: boolean;
    }
    
    class AnimCurveType {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimCurveType_0__: boolean;
    }
    
    class AnimGraphNode_AssetPlayerBase extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SyncGroup: UE.AnimationGroupReference;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_AssetPlayerBase;
        static Load(InName: string): AnimGraphNode_AssetPlayerBase;
    
        __tid_AnimGraphNode_AssetPlayerBase_0__: boolean;
    }
    
    class AnimGraphNode_BlendSpaceBase extends UE.AnimGraphNode_AssetPlayerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendSpaceBase;
        static Load(InName: string): AnimGraphNode_BlendSpaceBase;
    
        __tid_AnimGraphNode_BlendSpaceBase_0__: boolean;
    }
    
    class AnimNode_AssetPlayerBase extends UE.AnimNode_Base {
        constructor();
        constructor(GroupName: string, GroupIndex: number, GroupRole: UE.EAnimGroupRole, GroupScope: UE.EAnimSyncGroupScope, bIgnoreForRelevancyTest: boolean, BlendWeight: number, InternalTimeAccumulator: number);
        GroupName: string;
        GroupIndex: number;
        GroupRole: UE.EAnimGroupRole;
        GroupScope: UE.EAnimSyncGroupScope;
        bIgnoreForRelevancyTest: boolean;
        BlendWeight: number;
        InternalTimeAccumulator: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_AssetPlayerBase_0__: boolean;
    }
    
    class AnimNode_BlendSpacePlayer extends UE.AnimNode_AssetPlayerBase {
        constructor();
        constructor(X: number, Y: number, Z: number, PlayRate: number, bLoop: boolean, bResetPlayTimeWhenBlendSpaceChanges: boolean, StartPosition: number, BlendSpace: UE.BlendSpaceBase, PreviousBlendSpace: UE.BlendSpaceBase);
        X: number;
        Y: number;
        Z: number;
        PlayRate: number;
        bLoop: boolean;
        bResetPlayTimeWhenBlendSpaceChanges: boolean;
        StartPosition: number;
        BlendSpace: UE.BlendSpaceBase;
        PreviousBlendSpace: UE.BlendSpaceBase;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BlendSpacePlayer_0__: boolean;
    }
    
    class AnimNode_AimOffsetLookAt extends UE.AnimNode_BlendSpacePlayer {
        constructor();
        constructor(BasePose: UE.PoseLink, LODThreshold: number, SourceSocketName: string, PivotSocketName: string, LookAtLocation: UE.Vector, SocketAxis: UE.Vector, Alpha: number);
        BasePose: UE.PoseLink;
        LODThreshold: number;
        SourceSocketName: string;
        PivotSocketName: string;
        LookAtLocation: UE.Vector;
        SocketAxis: UE.Vector;
        Alpha: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_AimOffsetLookAt_0__: boolean;
    }
    
    class AnimGraphNode_AimOffsetLookAt extends UE.AnimGraphNode_BlendSpaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_AimOffsetLookAt;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_AimOffsetLookAt;
        static Load(InName: string): AnimGraphNode_AimOffsetLookAt;
    
        __tid_AnimGraphNode_AimOffsetLookAt_0__: boolean;
    }
    
    class AnimGraphNode_SkeletalControlBase extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SkeletalControlBase;
        static Load(InName: string): AnimGraphNode_SkeletalControlBase;
    
        __tid_AnimGraphNode_SkeletalControlBase_0__: boolean;
    }
    
    class ComponentSpacePoseLink extends UE.PoseLinkBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentSpacePoseLink_0__: boolean;
    }
    
    enum EAnimAlphaInputType { Float, Bool, Curve, EAnimAlphaInputType_MAX, __typeKeyDoNoAccess}
    class InputScaleBias {
        constructor();
        constructor(Scale: number, Bias: number);
        Scale: number;
        Bias: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputScaleBias_0__: boolean;
    }
    
    class InputAlphaBoolBlend {
        constructor();
        constructor(BlendInTime: number, BlendOutTime: number, BlendOption: UE.EAlphaBlendOption, bInitialized: boolean, CustomCurve: UE.CurveFloat, AlphaBlend: UE.AlphaBlend);
        BlendInTime: number;
        BlendOutTime: number;
        BlendOption: UE.EAlphaBlendOption;
        bInitialized: boolean;
        CustomCurve: UE.CurveFloat;
        AlphaBlend: UE.AlphaBlend;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputAlphaBoolBlend_0__: boolean;
    }
    
    class InputRange {
        constructor();
        constructor(Min: number, Max: number);
        Min: number;
        Max: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputRange_0__: boolean;
    }
    
    class InputScaleBiasClamp {
        constructor();
        constructor(bMapRange: boolean, bClampResult: boolean, bInterpResult: boolean, InRange: UE.InputRange, OutRange: UE.InputRange, Scale: number, Bias: number, ClampMin: number, ClampMax: number, InterpSpeedIncreasing: number, InterpSpeedDecreasing: number);
        bMapRange: boolean;
        bClampResult: boolean;
        bInterpResult: boolean;
        InRange: UE.InputRange;
        OutRange: UE.InputRange;
        Scale: number;
        Bias: number;
        ClampMin: number;
        ClampMax: number;
        InterpSpeedIncreasing: number;
        InterpSpeedDecreasing: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputScaleBiasClamp_0__: boolean;
    }
    
    class AnimNode_SkeletalControlBase extends UE.AnimNode_Base {
        constructor();
        constructor(ComponentPose: UE.ComponentSpacePoseLink, LODThreshold: number, ActualAlpha: number, AlphaInputType: UE.EAnimAlphaInputType, bAlphaBoolEnabled: boolean, Alpha: number, AlphaScaleBias: UE.InputScaleBias, AlphaBoolBlend: UE.InputAlphaBoolBlend, AlphaCurveName: string, AlphaScaleBiasClamp: UE.InputScaleBiasClamp);
        ComponentPose: UE.ComponentSpacePoseLink;
        LODThreshold: number;
        ActualAlpha: number;
        AlphaInputType: UE.EAnimAlphaInputType;
        bAlphaBoolEnabled: boolean;
        Alpha: number;
        AlphaScaleBias: UE.InputScaleBias;
        AlphaBoolBlend: UE.InputAlphaBoolBlend;
        AlphaCurveName: string;
        AlphaScaleBiasClamp: UE.InputScaleBiasClamp;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SkeletalControlBase_0__: boolean;
    }
    
    enum AnimPhysLinearConstraintType { Free, Limited, AnimPhysLinearConstraintType_MAX, __typeKeyDoNoAccess}
    enum AnimPhysAngularConstraintType { Angular, Cone, AnimPhysAngularConstraintType_MAX, __typeKeyDoNoAccess}
    enum AnimPhysTwistAxis { AxisX, AxisY, AxisZ, AnimPhysTwistAxis_MAX, __typeKeyDoNoAccess}
    class AnimPhysConstraintSetup {
        constructor();
        constructor(LinearXLimitType: UE.AnimPhysLinearConstraintType, LinearYLimitType: UE.AnimPhysLinearConstraintType, LinearZLimitType: UE.AnimPhysLinearConstraintType, LinearAxesMin: UE.Vector, LinearAxesMax: UE.Vector, AngularConstraintType: UE.AnimPhysAngularConstraintType, TwistAxis: UE.AnimPhysTwistAxis, AngularTargetAxis: UE.AnimPhysTwistAxis, ConeAngle: number, AngularXAngle: number, AngularYAngle: number, AngularZAngle: number, AngularLimitsMin: UE.Vector, AngularLimitsMax: UE.Vector, AngularTarget: UE.Vector);
        LinearXLimitType: UE.AnimPhysLinearConstraintType;
        LinearYLimitType: UE.AnimPhysLinearConstraintType;
        LinearZLimitType: UE.AnimPhysLinearConstraintType;
        LinearAxesMin: UE.Vector;
        LinearAxesMax: UE.Vector;
        AngularConstraintType: UE.AnimPhysAngularConstraintType;
        TwistAxis: UE.AnimPhysTwistAxis;
        AngularTargetAxis: UE.AnimPhysTwistAxis;
        ConeAngle: number;
        AngularXAngle: number;
        AngularYAngle: number;
        AngularZAngle: number;
        AngularLimitsMin: UE.Vector;
        AngularLimitsMax: UE.Vector;
        AngularTarget: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimPhysConstraintSetup_0__: boolean;
    }
    
    enum ESphericalLimitType { Inner, Outer, ESphericalLimitType_MAX, __typeKeyDoNoAccess}
    class AnimPhysSphericalLimit {
        constructor();
        constructor(DrivingBone: UE.BoneReference, SphereLocalOffset: UE.Vector, LimitRadius: number, LimitType: UE.ESphericalLimitType);
        DrivingBone: UE.BoneReference;
        SphereLocalOffset: UE.Vector;
        LimitRadius: number;
        LimitType: UE.ESphericalLimitType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimPhysSphericalLimit_0__: boolean;
    }
    
    class AnimPhysPlanarLimit {
        constructor();
        constructor(DrivingBone: UE.BoneReference, PlaneTransform: UE.Transform);
        DrivingBone: UE.BoneReference;
        PlaneTransform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimPhysPlanarLimit_0__: boolean;
    }
    
    enum AnimPhysCollisionType { CoM, CustomSphere, InnerSphere, OuterSphere, AnimPhysCollisionType_MAX, __typeKeyDoNoAccess}
    enum AnimPhysSimSpaceType { Component, Actor, World, RootRelative, BoneRelative, AnimPhysSimSpaceType_MAX, __typeKeyDoNoAccess}
    enum ERotationComponent { EulerX, EulerY, EulerZ, QuaternionAngle, SwingAngle, TwistAngle, ERotationComponent_MAX, __typeKeyDoNoAccess}
    enum EEasingFuncType { Linear, Sinusoidal, Cubic, QuadraticInOut, CubicInOut, HermiteCubic, QuarticInOut, QuinticInOut, CircularIn, CircularOut, CircularInOut, ExpIn, ExpOut, ExpInOut, CustomCurve, EEasingFuncType_MAX, __typeKeyDoNoAccess}
    class RotationRetargetingInfo {
        constructor();
        constructor(bEnabled: boolean, Source: UE.Transform, Target: UE.Transform, RotationComponent: UE.ERotationComponent, TwistAxis: UE.Vector, bUseAbsoluteAngle: boolean, SourceMinimum: number, SourceMaximum: number, TargetMinimum: number, TargetMaximum: number, EasingType: UE.EEasingFuncType, CustomCurve: UE.RuntimeFloatCurve, bFlipEasing: boolean, EasingWeight: number, bClamp: boolean);
        bEnabled: boolean;
        Source: UE.Transform;
        Target: UE.Transform;
        RotationComponent: UE.ERotationComponent;
        TwistAxis: UE.Vector;
        bUseAbsoluteAngle: boolean;
        SourceMinimum: number;
        SourceMaximum: number;
        TargetMinimum: number;
        TargetMaximum: number;
        EasingType: UE.EEasingFuncType;
        CustomCurve: UE.RuntimeFloatCurve;
        bFlipEasing: boolean;
        EasingWeight: number;
        bClamp: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RotationRetargetingInfo_0__: boolean;
    }
    
    class AnimNode_AnimDynamics extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(LinearDampingOverride: number, AngularDampingOverride: number, RelativeSpaceBone: UE.BoneReference, BoundBone: UE.BoneReference, ChainEnd: UE.BoneReference, BoxExtents: UE.Vector, LocalJointOffset: UE.Vector, GravityScale: number, GravityOverride: UE.Vector, LinearSpringConstant: number, AngularSpringConstant: number, WindScale: number, ComponentLinearAccScale: UE.Vector, ComponentLinearVelScale: UE.Vector, ComponentAppliedLinearAccClamp: UE.Vector, AngularBiasOverride: number, NumSolverIterationsPreUpdate: number, NumSolverIterationsPostUpdate: number, ConstraintSetup: UE.AnimPhysConstraintSetup, SphericalLimits: TArray<UE.AnimPhysSphericalLimit>, SphereCollisionRadius: number, ExternalForce: UE.Vector, PlanarLimits: TArray<UE.AnimPhysPlanarLimit>, CollisionType: UE.AnimPhysCollisionType, SimulationSpace: UE.AnimPhysSimSpaceType, bUseSphericalLimits: boolean, bUsePlanarLimit: boolean, bDoUpdate: boolean, bDoEval: boolean, bOverrideLinearDamping: boolean, bOverrideAngularBias: boolean, bOverrideAngularDamping: boolean, bEnableWind: boolean, bUseGravityOverride: boolean, bLinearSpring: boolean, bAngularSpring: boolean, bChain: boolean, RetargetingSettings: UE.RotationRetargetingInfo);
        LinearDampingOverride: number;
        AngularDampingOverride: number;
        RelativeSpaceBone: UE.BoneReference;
        BoundBone: UE.BoneReference;
        ChainEnd: UE.BoneReference;
        BoxExtents: UE.Vector;
        LocalJointOffset: UE.Vector;
        GravityScale: number;
        GravityOverride: UE.Vector;
        LinearSpringConstant: number;
        AngularSpringConstant: number;
        WindScale: number;
        ComponentLinearAccScale: UE.Vector;
        ComponentLinearVelScale: UE.Vector;
        ComponentAppliedLinearAccClamp: UE.Vector;
        AngularBiasOverride: number;
        NumSolverIterationsPreUpdate: number;
        NumSolverIterationsPostUpdate: number;
        ConstraintSetup: UE.AnimPhysConstraintSetup;
        SphericalLimits: TArray<UE.AnimPhysSphericalLimit>;
        SphereCollisionRadius: number;
        ExternalForce: UE.Vector;
        PlanarLimits: TArray<UE.AnimPhysPlanarLimit>;
        CollisionType: UE.AnimPhysCollisionType;
        SimulationSpace: UE.AnimPhysSimSpaceType;
        bUseSphericalLimits: boolean;
        bUsePlanarLimit: boolean;
        bDoUpdate: boolean;
        bDoEval: boolean;
        bOverrideLinearDamping: boolean;
        bOverrideAngularBias: boolean;
        bOverrideAngularDamping: boolean;
        bEnableWind: boolean;
        bUseGravityOverride: boolean;
        bLinearSpring: boolean;
        bAngularSpring: boolean;
        bChain: boolean;
        RetargetingSettings: UE.RotationRetargetingInfo;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_AnimDynamics_0__: boolean;
    }
    
    class AnimGraphNode_AnimDynamics extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_AnimDynamics;
        bPreviewLive: boolean;
        bShowLinearLimits: boolean;
        bShowAngularLimits: boolean;
        bShowPlanarLimit: boolean;
        bShowSphericalLimit: boolean;
        bShowCollisionSpheres: boolean;
        LastPreviewComponent: UE.SkeletalMeshComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_AnimDynamics;
        static Load(InName: string): AnimGraphNode_AnimDynamics;
    
        __tid_AnimGraphNode_AnimDynamics_0__: boolean;
    }
    
    class AnimNode_ApplyAdditive extends UE.AnimNode_Base {
        constructor();
        constructor(Base: UE.PoseLink, Additive: UE.PoseLink, Alpha: number, AlphaScaleBias: UE.InputScaleBias, LODThreshold: number, AlphaBoolBlend: UE.InputAlphaBoolBlend, AlphaCurveName: string, AlphaScaleBiasClamp: UE.InputScaleBiasClamp, AlphaInputType: UE.EAnimAlphaInputType, bAlphaBoolEnabled: boolean);
        Base: UE.PoseLink;
        Additive: UE.PoseLink;
        Alpha: number;
        AlphaScaleBias: UE.InputScaleBias;
        LODThreshold: number;
        AlphaBoolBlend: UE.InputAlphaBoolBlend;
        AlphaCurveName: string;
        AlphaScaleBiasClamp: UE.InputScaleBiasClamp;
        AlphaInputType: UE.EAnimAlphaInputType;
        bAlphaBoolEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ApplyAdditive_0__: boolean;
    }
    
    class AnimGraphNode_ApplyAdditive extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ApplyAdditive;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ApplyAdditive;
        static Load(InName: string): AnimGraphNode_ApplyAdditive;
    
        __tid_AnimGraphNode_ApplyAdditive_0__: boolean;
    }
    
    class AnimNode_ApplyLimits extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(AngularRangeLimits: TArray<UE.AngularRangeLimit>, AngularOffsets: TArray<UE.Vector>);
        AngularRangeLimits: TArray<UE.AngularRangeLimit>;
        AngularOffsets: TArray<UE.Vector>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ApplyLimits_0__: boolean;
    }
    
    class AnimGraphNode_ApplyLimits extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ApplyLimits;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ApplyLimits;
        static Load(InName: string): AnimGraphNode_ApplyLimits;
    
        __tid_AnimGraphNode_ApplyLimits_0__: boolean;
    }
    
    class AnimNode_ApplyMeshSpaceAdditive extends UE.AnimNode_Base {
        constructor();
        constructor(Base: UE.PoseLink, Additive: UE.PoseLink, AlphaInputType: UE.EAnimAlphaInputType, Alpha: number, bAlphaBoolEnabled: boolean, AlphaBoolBlend: UE.InputAlphaBoolBlend, AlphaCurveName: string, AlphaScaleBias: UE.InputScaleBias, AlphaScaleBiasClamp: UE.InputScaleBiasClamp, LODThreshold: number);
        Base: UE.PoseLink;
        Additive: UE.PoseLink;
        AlphaInputType: UE.EAnimAlphaInputType;
        Alpha: number;
        bAlphaBoolEnabled: boolean;
        AlphaBoolBlend: UE.InputAlphaBoolBlend;
        AlphaCurveName: string;
        AlphaScaleBias: UE.InputScaleBias;
        AlphaScaleBiasClamp: UE.InputScaleBiasClamp;
        LODThreshold: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ApplyMeshSpaceAdditive_0__: boolean;
    }
    
    class AnimGraphNode_ApplyMeshSpaceAdditive extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ApplyMeshSpaceAdditive;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ApplyMeshSpaceAdditive;
        static Load(InName: string): AnimGraphNode_ApplyMeshSpaceAdditive;
    
        __tid_AnimGraphNode_ApplyMeshSpaceAdditive_0__: boolean;
    }
    
    class BlendBoneByChannelEntry {
        constructor();
        constructor(SourceBone: UE.BoneReference, TargetBone: UE.BoneReference, bBlendTranslation: boolean, bBlendRotation: boolean, bBlendScale: boolean);
        SourceBone: UE.BoneReference;
        TargetBone: UE.BoneReference;
        bBlendTranslation: boolean;
        bBlendRotation: boolean;
        bBlendScale: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlendBoneByChannelEntry_0__: boolean;
    }
    
    enum EBoneControlSpace { BCS_WorldSpace, BCS_ComponentSpace, BCS_ParentBoneSpace, BCS_BoneSpace, BCS_MAX, __typeKeyDoNoAccess}
    class AnimNode_BlendBoneByChannel extends UE.AnimNode_Base {
        constructor();
        constructor(A: UE.PoseLink, B: UE.PoseLink, BoneDefinitions: TArray<UE.BlendBoneByChannelEntry>, Alpha: number, AlphaScaleBias: UE.InputScaleBias, TransformsSpace: UE.EBoneControlSpace);
        A: UE.PoseLink;
        B: UE.PoseLink;
        BoneDefinitions: TArray<UE.BlendBoneByChannelEntry>;
        Alpha: number;
        AlphaScaleBias: UE.InputScaleBias;
        TransformsSpace: UE.EBoneControlSpace;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BlendBoneByChannel_0__: boolean;
    }
    
    class AnimGraphNode_BlendBoneByChannel extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlendNode: UE.AnimNode_BlendBoneByChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendBoneByChannel;
        static Load(InName: string): AnimGraphNode_BlendBoneByChannel;
    
        __tid_AnimGraphNode_BlendBoneByChannel_0__: boolean;
    }
    
    class AnimGraphNode_BlendListBase extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendListBase;
        static Load(InName: string): AnimGraphNode_BlendListBase;
    
        __tid_AnimGraphNode_BlendListBase_0__: boolean;
    }
    
    enum EBlendListTransitionType { StandardBlend, Inertialization, EBlendListTransitionType_MAX, __typeKeyDoNoAccess}
    class AnimNode_BlendListBase extends UE.AnimNode_Base {
        constructor();
        constructor(BlendPose: TArray<UE.PoseLink>, BlendTime: TArray<number>, TransitionType: UE.EBlendListTransitionType, BlendType: UE.EAlphaBlendOption, bResetChildOnActivation: boolean, CustomBlendCurve: UE.CurveFloat, BlendProfile: UE.BlendProfile);
        BlendPose: TArray<UE.PoseLink>;
        BlendTime: TArray<number>;
        TransitionType: UE.EBlendListTransitionType;
        BlendType: UE.EAlphaBlendOption;
        bResetChildOnActivation: boolean;
        CustomBlendCurve: UE.CurveFloat;
        BlendProfile: UE.BlendProfile;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BlendListBase_0__: boolean;
    }
    
    class AnimNode_BlendListByBool extends UE.AnimNode_BlendListBase {
        constructor();
        constructor(bActiveValue: boolean);
        bActiveValue: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BlendListByBool_0__: boolean;
    }
    
    class AnimGraphNode_BlendListByBool extends UE.AnimGraphNode_BlendListBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_BlendListByBool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendListByBool;
        static Load(InName: string): AnimGraphNode_BlendListByBool;
    
        __tid_AnimGraphNode_BlendListByBool_0__: boolean;
    }
    
    class AnimNode_BlendListByEnum extends UE.AnimNode_BlendListBase {
        constructor();
        constructor(EnumToPoseIndex: TArray<number>, ActiveEnumValue: number);
        EnumToPoseIndex: TArray<number>;
        ActiveEnumValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BlendListByEnum_0__: boolean;
    }
    
    class AnimGraphNode_BlendListByEnum extends UE.AnimGraphNode_BlendListBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_BlendListByEnum;
        BoundEnum: UE.Enum;
        VisibleEnumEntries: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendListByEnum;
        static Load(InName: string): AnimGraphNode_BlendListByEnum;
    
        __tid_AnimGraphNode_BlendListByEnum_0__: boolean;
    }
    
    class AnimNode_BlendListByInt extends UE.AnimNode_BlendListBase {
        constructor();
        constructor(ActiveChildIndex: number);
        ActiveChildIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BlendListByInt_0__: boolean;
    }
    
    class AnimGraphNode_BlendListByInt extends UE.AnimGraphNode_BlendListBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_BlendListByInt;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendListByInt;
        static Load(InName: string): AnimGraphNode_BlendListByInt;
    
        __tid_AnimGraphNode_BlendListByInt_0__: boolean;
    }
    
    class AnimNode_BlendSpaceEvaluator extends UE.AnimNode_BlendSpacePlayer {
        constructor();
        constructor(NormalizedTime: number);
        NormalizedTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BlendSpaceEvaluator_0__: boolean;
    }
    
    class AnimGraphNode_BlendSpaceEvaluator extends UE.AnimGraphNode_BlendSpaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_BlendSpaceEvaluator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendSpaceEvaluator;
        static Load(InName: string): AnimGraphNode_BlendSpaceEvaluator;
    
        __tid_AnimGraphNode_BlendSpaceEvaluator_0__: boolean;
    }
    
    class AnimGraphNode_BlendSpacePlayer extends UE.AnimGraphNode_BlendSpaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_BlendSpacePlayer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BlendSpacePlayer;
        static Load(InName: string): AnimGraphNode_BlendSpacePlayer;
    
        __tid_AnimGraphNode_BlendSpacePlayer_0__: boolean;
    }
    
    enum EComponentType { None, TranslationX, TranslationY, TranslationZ, RotationX, RotationY, RotationZ, Scale, ScaleX, ScaleY, ScaleZ, EComponentType_MAX, __typeKeyDoNoAccess}
    enum EDrivenDestinationMode { Bone, MorphTarget, MaterialParameter, EDrivenDestinationMode_MAX, __typeKeyDoNoAccess}
    enum EDrivenBoneModificationMode { AddToInput, ReplaceComponent, AddToRefPose, EDrivenBoneModificationMode_MAX, __typeKeyDoNoAccess}
    class AnimNode_BoneDrivenController extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(SourceBone: UE.BoneReference, DrivingCurve: UE.CurveFloat, Multiplier: number, RangeMin: number, RangeMax: number, RemappedMin: number, RemappedMax: number, ParameterName: string, TargetBone: UE.BoneReference, TargetComponent: UE.EComponentType, DestinationMode: UE.EDrivenDestinationMode, ModificationMode: UE.EDrivenBoneModificationMode, SourceComponent: UE.EComponentType, bUseRange: boolean, bAffectTargetTranslationX: boolean, bAffectTargetTranslationY: boolean, bAffectTargetTranslationZ: boolean, bAffectTargetRotationX: boolean, bAffectTargetRotationY: boolean, bAffectTargetRotationZ: boolean, bAffectTargetScaleX: boolean, bAffectTargetScaleY: boolean, bAffectTargetScaleZ: boolean);
        SourceBone: UE.BoneReference;
        DrivingCurve: UE.CurveFloat;
        Multiplier: number;
        RangeMin: number;
        RangeMax: number;
        RemappedMin: number;
        RemappedMax: number;
        ParameterName: string;
        TargetBone: UE.BoneReference;
        TargetComponent: UE.EComponentType;
        DestinationMode: UE.EDrivenDestinationMode;
        ModificationMode: UE.EDrivenBoneModificationMode;
        SourceComponent: UE.EComponentType;
        bUseRange: boolean;
        bAffectTargetTranslationX: boolean;
        bAffectTargetTranslationY: boolean;
        bAffectTargetTranslationZ: boolean;
        bAffectTargetRotationX: boolean;
        bAffectTargetRotationY: boolean;
        bAffectTargetRotationZ: boolean;
        bAffectTargetScaleX: boolean;
        bAffectTargetScaleY: boolean;
        bAffectTargetScaleZ: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_BoneDrivenController_0__: boolean;
    }
    
    class AnimGraphNode_BoneDrivenController extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_BoneDrivenController;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_BoneDrivenController;
        static Load(InName: string): AnimGraphNode_BoneDrivenController;
    
        __tid_AnimGraphNode_BoneDrivenController_0__: boolean;
    }
    
    class SocketReference {
        constructor();
        constructor(SocketName: string);
        SocketName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SocketReference_0__: boolean;
    }
    
    class BoneSocketTarget {
        constructor();
        constructor(bUseSocket: boolean, BoneReference: UE.BoneReference, SocketReference: UE.SocketReference);
        bUseSocket: boolean;
        BoneReference: UE.BoneReference;
        SocketReference: UE.SocketReference;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoneSocketTarget_0__: boolean;
    }
    
    class AnimNode_CCDIK extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(EffectorLocation: UE.Vector, EffectorLocationSpace: UE.EBoneControlSpace, EffectorTarget: UE.BoneSocketTarget, TipBone: UE.BoneReference, RootBone: UE.BoneReference, Precision: number, MaxIterations: number, bStartFromTail: boolean, bEnableRotationLimit: boolean, RotationLimitPerJoints: TArray<number>);
        EffectorLocation: UE.Vector;
        EffectorLocationSpace: UE.EBoneControlSpace;
        EffectorTarget: UE.BoneSocketTarget;
        TipBone: UE.BoneReference;
        RootBone: UE.BoneReference;
        Precision: number;
        MaxIterations: number;
        bStartFromTail: boolean;
        bEnableRotationLimit: boolean;
        RotationLimitPerJoints: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_CCDIK_0__: boolean;
    }
    
    class AnimGraphNode_CCDIK extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_CCDIK;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_CCDIK;
        static Load(InName: string): AnimGraphNode_CCDIK;
    
        __tid_AnimGraphNode_CCDIK_0__: boolean;
    }
    
    class AnimNode_ConvertComponentToLocalSpace extends UE.AnimNode_Base {
        constructor();
        constructor(ComponentPose: UE.ComponentSpacePoseLink);
        ComponentPose: UE.ComponentSpacePoseLink;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ConvertComponentToLocalSpace_0__: boolean;
    }
    
    class AnimGraphNode_ComponentToLocalSpace extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ConvertComponentToLocalSpace;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ComponentToLocalSpace;
        static Load(InName: string): AnimGraphNode_ComponentToLocalSpace;
    
        __tid_AnimGraphNode_ComponentToLocalSpace_0__: boolean;
    }
    
    enum EConstraintOffsetOption { None, Offset_RefPose, EConstraintOffsetOption_MAX, __typeKeyDoNoAccess}
    enum ETransformConstraintType { Translation, Rotation, Scale, Parent, ETransformConstraintType_MAX, __typeKeyDoNoAccess}
    class Constraint {
        constructor();
        constructor(TargetBone: UE.BoneReference, OffsetOption: UE.EConstraintOffsetOption, TransformType: UE.ETransformConstraintType, PerAxis: UE.FilterOptionPerAxis);
        TargetBone: UE.BoneReference;
        OffsetOption: UE.EConstraintOffsetOption;
        TransformType: UE.ETransformConstraintType;
        PerAxis: UE.FilterOptionPerAxis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Constraint_0__: boolean;
    }
    
    class AnimNode_Constraint extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(BoneToModify: UE.BoneReference, ConstraintSetup: TArray<UE.Constraint>, ConstraintWeights: TArray<number>);
        BoneToModify: UE.BoneReference;
        ConstraintSetup: TArray<UE.Constraint>;
        ConstraintWeights: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_Constraint_0__: boolean;
    }
    
    class AnimGraphNode_Constraint extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_Constraint;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_Constraint;
        static Load(InName: string): AnimGraphNode_Constraint;
    
        __tid_AnimGraphNode_Constraint_0__: boolean;
    }
    
    class AnimNode_CopyBone extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(SourceBone: UE.BoneReference, TargetBone: UE.BoneReference, bCopyTranslation: boolean, bCopyRotation: boolean, bCopyScale: boolean, ControlSpace: UE.EBoneControlSpace);
        SourceBone: UE.BoneReference;
        TargetBone: UE.BoneReference;
        bCopyTranslation: boolean;
        bCopyRotation: boolean;
        bCopyScale: boolean;
        ControlSpace: UE.EBoneControlSpace;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_CopyBone_0__: boolean;
    }
    
    class AnimGraphNode_CopyBone extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_CopyBone;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_CopyBone;
        static Load(InName: string): AnimGraphNode_CopyBone;
    
        __tid_AnimGraphNode_CopyBone_0__: boolean;
    }
    
    enum CopyBoneDeltaMode { Accumulate, Copy, CopyBoneDeltaMode_MAX, __typeKeyDoNoAccess}
    class AnimNode_CopyBoneDelta extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(SourceBone: UE.BoneReference, TargetBone: UE.BoneReference, bCopyTranslation: boolean, bCopyRotation: boolean, bCopyScale: boolean, CopyMode: UE.CopyBoneDeltaMode, TranslationMultiplier: number, RotationMultiplier: number, ScaleMultiplier: number);
        SourceBone: UE.BoneReference;
        TargetBone: UE.BoneReference;
        bCopyTranslation: boolean;
        bCopyRotation: boolean;
        bCopyScale: boolean;
        CopyMode: UE.CopyBoneDeltaMode;
        TranslationMultiplier: number;
        RotationMultiplier: number;
        ScaleMultiplier: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_CopyBoneDelta_0__: boolean;
    }
    
    class AnimGraphNode_CopyBoneDelta extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_CopyBoneDelta;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_CopyBoneDelta;
        static Load(InName: string): AnimGraphNode_CopyBoneDelta;
    
        __tid_AnimGraphNode_CopyBoneDelta_0__: boolean;
    }
    
    class AnimNode_CopyPoseFromMesh extends UE.AnimNode_Base {
        constructor();
        constructor(SourceMeshComponent: TWeakObjectPtr<UE.SkeletalMeshComponent>, bUseAttachedParent: boolean, bCopyCurves: boolean, bCopyCustomAttributes: boolean, bUseMeshPose: boolean, RootBoneToCopy: string);
        SourceMeshComponent: TWeakObjectPtr<UE.SkeletalMeshComponent>;
        bUseAttachedParent: boolean;
        bCopyCurves: boolean;
        bCopyCustomAttributes: boolean;
        bUseMeshPose: boolean;
        RootBoneToCopy: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_CopyPoseFromMesh_0__: boolean;
    }
    
    class AnimGraphNode_CopyPoseFromMesh extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_CopyPoseFromMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_CopyPoseFromMesh;
        static Load(InName: string): AnimGraphNode_CopyPoseFromMesh;
    
        __tid_AnimGraphNode_CopyPoseFromMesh_0__: boolean;
    }
    
    class NamedCurveValue {
        constructor();
        constructor(Name: string, Value: number);
        Name: string;
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedCurveValue_0__: boolean;
    }
    
    class CurveSourceInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetBindingName() : string;
        GetCurves(OutValues: $Ref<TArray<UE.NamedCurveValue>>) : void;
        GetCurveValue(CurveName: string) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveSourceInterface;
        static Load(InName: string): CurveSourceInterface;
    
        __tid_CurveSourceInterface_0__: boolean;
    }
    
    class AnimNode_CurveSource extends UE.AnimNode_Base {
        constructor();
        constructor(SourcePose: UE.PoseLink, SourceBinding: string, Alpha: number, CurveSource: CurveSourceInterface);
        SourcePose: UE.PoseLink;
        SourceBinding: string;
        Alpha: number;
        CurveSource: CurveSourceInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_CurveSource_0__: boolean;
    }
    
    class AnimGraphNode_CurveSource extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_CurveSource;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_CurveSource;
        static Load(InName: string): AnimGraphNode_CurveSource;
    
        __tid_AnimGraphNode_CurveSource_0__: boolean;
    }
    
    class AnimGraphNode_CustomProperty extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        KnownExposableProperties: TArray<string>;
        ExposedPropertyNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_CustomProperty;
        static Load(InName: string): AnimGraphNode_CustomProperty;
    
        __tid_AnimGraphNode_CustomProperty_0__: boolean;
    }
    
    enum EBoneRotationSource { BRS_KeepComponentSpaceRotation, BRS_KeepLocalSpaceRotation, BRS_CopyFromTarget, BRS_MAX, __typeKeyDoNoAccess}
    class AnimNode_Fabrik extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(EffectorTransform: UE.Transform, EffectorTarget: UE.BoneSocketTarget, TipBone: UE.BoneReference, RootBone: UE.BoneReference, Precision: number, MaxIterations: number, EffectorTransformSpace: UE.EBoneControlSpace, EffectorRotationSource: UE.EBoneRotationSource, bEnableDebugDraw: boolean, EffectorTransformBone: UE.BoneReference);
        EffectorTransform: UE.Transform;
        EffectorTarget: UE.BoneSocketTarget;
        TipBone: UE.BoneReference;
        RootBone: UE.BoneReference;
        Precision: number;
        MaxIterations: number;
        EffectorTransformSpace: UE.EBoneControlSpace;
        EffectorRotationSource: UE.EBoneRotationSource;
        bEnableDebugDraw: boolean;
        EffectorTransformBone: UE.BoneReference;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_Fabrik_0__: boolean;
    }
    
    class AnimGraphNode_Fabrik extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_Fabrik;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_Fabrik;
        static Load(InName: string): AnimGraphNode_Fabrik;
    
        __tid_AnimGraphNode_Fabrik_0__: boolean;
    }
    
    class AnimNode_HandIKRetargeting extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(RightHandFK: UE.BoneReference, LeftHandFK: UE.BoneReference, RightHandIK: UE.BoneReference, LeftHandIK: UE.BoneReference, IKBonesToMove: TArray<UE.BoneReference>, HandFKWeight: number);
        RightHandFK: UE.BoneReference;
        LeftHandFK: UE.BoneReference;
        RightHandIK: UE.BoneReference;
        LeftHandIK: UE.BoneReference;
        IKBonesToMove: TArray<UE.BoneReference>;
        HandFKWeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_HandIKRetargeting_0__: boolean;
    }
    
    class AnimGraphNode_HandIKRetargeting extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_HandIKRetargeting;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_HandIKRetargeting;
        static Load(InName: string): AnimGraphNode_HandIKRetargeting;
    
        __tid_AnimGraphNode_HandIKRetargeting_0__: boolean;
    }
    
    enum ERefPoseType { EIT_LocalSpace, EIT_Additive, EIT_MAX, __typeKeyDoNoAccess}
    class AnimNode_RefPose extends UE.AnimNode_Base {
        constructor();
        constructor(RefPoseType: UE.ERefPoseType);
        RefPoseType: UE.ERefPoseType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_RefPose_0__: boolean;
    }
    
    class AnimGraphNode_RefPoseBase extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_RefPose;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_RefPoseBase;
        static Load(InName: string): AnimGraphNode_RefPoseBase;
    
        __tid_AnimGraphNode_RefPoseBase_0__: boolean;
    }
    
    class AnimGraphNode_IdentityPose extends UE.AnimGraphNode_RefPoseBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_IdentityPose;
        static Load(InName: string): AnimGraphNode_IdentityPose;
    
        __tid_AnimGraphNode_IdentityPose_0__: boolean;
    }
    
    class AnimNode_Inertialization extends UE.AnimNode_Base {
        constructor();
        constructor(Source: UE.PoseLink);
        Source: UE.PoseLink;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_Inertialization_0__: boolean;
    }
    
    class AnimGraphNode_Inertialization extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_Inertialization;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_Inertialization;
        static Load(InName: string): AnimGraphNode_Inertialization;
    
        __tid_AnimGraphNode_Inertialization_0__: boolean;
    }
    
    class BranchFilter {
        constructor();
        constructor(BoneName: string, BlendDepth: number);
        BoneName: string;
        BlendDepth: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BranchFilter_0__: boolean;
    }
    
    class InputBlendPose {
        constructor();
        constructor(BranchFilters: TArray<UE.BranchFilter>);
        BranchFilters: TArray<UE.BranchFilter>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputBlendPose_0__: boolean;
    }
    
    enum ECurveBlendOption { Override, DoNotOverride, NormalizeByWeight, BlendByWeight, UseBasePose, UseMaxValue, UseMinValue, ECurveBlendOption_MAX, __typeKeyDoNoAccess}
    class PerBoneBlendWeight {
        constructor();
        constructor(SourceIndex: number, BlendWeight: number);
        SourceIndex: number;
        BlendWeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PerBoneBlendWeight_0__: boolean;
    }
    
    class AnimNode_LayeredBoneBlend extends UE.AnimNode_Base {
        constructor();
        constructor(BasePose: UE.PoseLink, BlendPoses: TArray<UE.PoseLink>, LayerSetup: TArray<UE.InputBlendPose>, BlendWeights: TArray<number>, bMeshSpaceRotationBlend: boolean, bMeshSpaceScaleBlend: boolean, CurveBlendOption: UE.ECurveBlendOption, bBlendRootMotionBasedOnRootBone: boolean, LODThreshold: number, PerBoneBlendWeights: TArray<UE.PerBoneBlendWeight>, SkeletonGuid: UE.Guid, VirtualBoneGuid: UE.Guid);
        BasePose: UE.PoseLink;
        BlendPoses: TArray<UE.PoseLink>;
        LayerSetup: TArray<UE.InputBlendPose>;
        BlendWeights: TArray<number>;
        bMeshSpaceRotationBlend: boolean;
        bMeshSpaceScaleBlend: boolean;
        CurveBlendOption: UE.ECurveBlendOption;
        bBlendRootMotionBasedOnRootBone: boolean;
        LODThreshold: number;
        PerBoneBlendWeights: TArray<UE.PerBoneBlendWeight>;
        SkeletonGuid: UE.Guid;
        VirtualBoneGuid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_LayeredBoneBlend_0__: boolean;
    }
    
    class AnimGraphNode_LayeredBoneBlend extends UE.AnimGraphNode_BlendListBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_LayeredBoneBlend;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LayeredBoneBlend;
        static Load(InName: string): AnimGraphNode_LayeredBoneBlend;
    
        __tid_AnimGraphNode_LayeredBoneBlend_0__: boolean;
    }
    
    class AnimLegIKDefinition {
        constructor();
        constructor(IKFootBone: UE.BoneReference, FKFootBone: UE.BoneReference, NumBonesInLimb: number, MinRotationAngle: number, FootBoneForwardAxis: UE.EAxis, HingeRotationAxis: UE.EAxis, bEnableRotationLimit: boolean, bEnableKneeTwistCorrection: boolean);
        IKFootBone: UE.BoneReference;
        FKFootBone: UE.BoneReference;
        NumBonesInLimb: number;
        MinRotationAngle: number;
        FootBoneForwardAxis: UE.EAxis;
        HingeRotationAxis: UE.EAxis;
        bEnableRotationLimit: boolean;
        bEnableKneeTwistCorrection: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimLegIKDefinition_0__: boolean;
    }
    
    class AnimNode_LegIK extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(ReachPrecision: number, MaxIterations: number, LegsDefinition: TArray<UE.AnimLegIKDefinition>);
        ReachPrecision: number;
        MaxIterations: number;
        LegsDefinition: TArray<UE.AnimLegIKDefinition>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_LegIK_0__: boolean;
    }
    
    class AnimGraphNode_LegIK extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_LegIK;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LegIK;
        static Load(InName: string): AnimGraphNode_LegIK;
    
        __tid_AnimGraphNode_LegIK_0__: boolean;
    }
    
    class AnimGraphNode_LinkedAnimGraphBase extends UE.AnimGraphNode_CustomProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LinkedAnimGraphBase;
        static Load(InName: string): AnimGraphNode_LinkedAnimGraphBase;
    
        __tid_AnimGraphNode_LinkedAnimGraphBase_0__: boolean;
    }
    
    class AnimNode_CustomProperty extends UE.AnimNode_Base {
        constructor();
        constructor(SourcePropertyNames: TArray<string>, DestPropertyNames: TArray<string>, TargetInstance: UE.Object);
        SourcePropertyNames: TArray<string>;
        DestPropertyNames: TArray<string>;
        TargetInstance: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_CustomProperty_0__: boolean;
    }
    
    class AnimNode_LinkedAnimGraph extends UE.AnimNode_CustomProperty {
        constructor();
        constructor(InputPoses: TArray<UE.PoseLink>, InputPoseNames: TArray<string>, InstanceClass: UE.Class, Tag: string, bReceiveNotifiesFromLinkedInstances: boolean, bPropagateNotifiesToLinkedInstances: boolean);
        InputPoses: TArray<UE.PoseLink>;
        InputPoseNames: TArray<string>;
        InstanceClass: UE.Class;
        Tag: string;
        bReceiveNotifiesFromLinkedInstances: boolean;
        bPropagateNotifiesToLinkedInstances: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_LinkedAnimGraph_0__: boolean;
    }
    
    class AnimGraphNode_LinkedAnimGraph extends UE.AnimGraphNode_LinkedAnimGraphBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_LinkedAnimGraph;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LinkedAnimGraph;
        static Load(InName: string): AnimGraphNode_LinkedAnimGraph;
    
        __tid_AnimGraphNode_LinkedAnimGraph_0__: boolean;
    }
    
    class AnimNode_LinkedAnimLayer extends UE.AnimNode_LinkedAnimGraph {
        constructor();
        constructor(Interface: UE.Class, Layer: string);
        Interface: UE.Class;
        Layer: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_LinkedAnimLayer_0__: boolean;
    }
    
    class AnimGraphNode_LinkedAnimLayer extends UE.AnimGraphNode_LinkedAnimGraphBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_LinkedAnimLayer;
        InterfaceGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LinkedAnimLayer;
        static Load(InName: string): AnimGraphNode_LinkedAnimLayer;
    
        __tid_AnimGraphNode_LinkedAnimLayer_0__: boolean;
    }
    
    class AnimNode_LinkedInputPose extends UE.AnimNode_Base {
        constructor();
        constructor(Name: string, Graph: string, InputPose: UE.PoseLink);
        Name: string;
        Graph: string;
        InputPose: UE.PoseLink;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_LinkedInputPose_0__: boolean;
    }
    
    class MemberReference {
        constructor();
        constructor(MemberParent: UE.Object, MemberScope: string, MemberName: string, MemberGuid: UE.Guid, bSelfContext: boolean, bWasDeprecated: boolean);
        MemberParent: UE.Object;
        MemberScope: string;
        MemberName: string;
        MemberGuid: UE.Guid;
        bSelfContext: boolean;
        bWasDeprecated: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MemberReference_0__: boolean;
    }
    
    class AnimGraphNode_LinkedInputPose extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_LinkedInputPose;
        Inputs: TArray<UE.AnimBlueprintFunctionPinInfo>;
        FunctionReference: UE.MemberReference;
        InputPoseIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LinkedInputPose;
        static Load(InName: string): AnimGraphNode_LinkedInputPose;
    
        __tid_AnimGraphNode_LinkedInputPose_0__: boolean;
    }
    
    class AnimGraphNode_LocalRefPose extends UE.AnimGraphNode_RefPoseBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LocalRefPose;
        static Load(InName: string): AnimGraphNode_LocalRefPose;
    
        __tid_AnimGraphNode_LocalRefPose_0__: boolean;
    }
    
    class AnimNode_ConvertLocalToComponentSpace extends UE.AnimNode_Base {
        constructor();
        constructor(LocalPose: UE.PoseLink);
        LocalPose: UE.PoseLink;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ConvertLocalToComponentSpace_0__: boolean;
    }
    
    class AnimGraphNode_LocalToComponentSpace extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ConvertLocalToComponentSpace;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LocalToComponentSpace;
        static Load(InName: string): AnimGraphNode_LocalToComponentSpace;
    
        __tid_AnimGraphNode_LocalToComponentSpace_0__: boolean;
    }
    
    enum EInterpolationBlend { Linear, Cubic, Sinusoidal, EaseInOutExponent2, EaseInOutExponent3, EaseInOutExponent4, EaseInOutExponent5, MAX, __typeKeyDoNoAccess}
    enum EAxisOption { X, Y, Z, X_Neg, Y_Neg, Z_Neg, Custom, EAxisOption_MAX, __typeKeyDoNoAccess}
    class AnimNode_LookAt extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(BoneToModify: UE.BoneReference, LookAtTarget: UE.BoneSocketTarget, LookAtLocation: UE.Vector, LookAt_Axis: UE.Axis, bUseLookUpAxis: boolean, InterpolationType: UE.EInterpolationBlend, LookUp_Axis: UE.Axis, LookAtClamp: number, InterpolationTime: number, InterpolationTriggerThreashold: number, LookAtBone: UE.BoneReference, LookAtSocket: string, LookAtAxis: UE.EAxisOption, CustomLookAtAxis: UE.Vector, LookUpAxis: UE.EAxisOption, CustomLookUpAxis: UE.Vector);
        BoneToModify: UE.BoneReference;
        LookAtTarget: UE.BoneSocketTarget;
        LookAtLocation: UE.Vector;
        LookAt_Axis: UE.Axis;
        bUseLookUpAxis: boolean;
        InterpolationType: UE.EInterpolationBlend;
        LookUp_Axis: UE.Axis;
        LookAtClamp: number;
        InterpolationTime: number;
        InterpolationTriggerThreashold: number;
        LookAtBone: UE.BoneReference;
        LookAtSocket: string;
        LookAtAxis: UE.EAxisOption;
        CustomLookAtAxis: UE.Vector;
        LookUpAxis: UE.EAxisOption;
        CustomLookUpAxis: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_LookAt_0__: boolean;
    }
    
    class AnimGraphNode_LookAt extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_LookAt;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_LookAt;
        static Load(InName: string): AnimGraphNode_LookAt;
    
        __tid_AnimGraphNode_LookAt_0__: boolean;
    }
    
    class AnimNode_MakeDynamicAdditive extends UE.AnimNode_Base {
        constructor();
        constructor(Base: UE.PoseLink, Additive: UE.PoseLink, bMeshSpaceAdditive: boolean);
        Base: UE.PoseLink;
        Additive: UE.PoseLink;
        bMeshSpaceAdditive: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_MakeDynamicAdditive_0__: boolean;
    }
    
    class AnimGraphNode_MakeDynamicAdditive extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_MakeDynamicAdditive;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_MakeDynamicAdditive;
        static Load(InName: string): AnimGraphNode_MakeDynamicAdditive;
    
        __tid_AnimGraphNode_MakeDynamicAdditive_0__: boolean;
    }
    
    class AnimNode_MeshSpaceRefPose extends UE.AnimNode_Base {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_MeshSpaceRefPose_0__: boolean;
    }
    
    class AnimGraphNode_MeshRefPose extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_MeshSpaceRefPose;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_MeshRefPose;
        static Load(InName: string): AnimGraphNode_MeshRefPose;
    
        __tid_AnimGraphNode_MeshRefPose_0__: boolean;
    }
    
    enum EBoneModificationMode { BMM_Ignore, BMM_Replace, BMM_Additive, BMM_MAX, __typeKeyDoNoAccess}
    class AnimNode_ModifyBone extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(BoneToModify: UE.BoneReference, Translation: UE.Vector, Rotation: UE.Rotator, Scale: UE.Vector, TranslationMode: UE.EBoneModificationMode, RotationMode: UE.EBoneModificationMode, ScaleMode: UE.EBoneModificationMode, TranslationSpace: UE.EBoneControlSpace, RotationSpace: UE.EBoneControlSpace, ScaleSpace: UE.EBoneControlSpace);
        BoneToModify: UE.BoneReference;
        Translation: UE.Vector;
        Rotation: UE.Rotator;
        Scale: UE.Vector;
        TranslationMode: UE.EBoneModificationMode;
        RotationMode: UE.EBoneModificationMode;
        ScaleMode: UE.EBoneModificationMode;
        TranslationSpace: UE.EBoneControlSpace;
        RotationSpace: UE.EBoneControlSpace;
        ScaleSpace: UE.EBoneControlSpace;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ModifyBone_0__: boolean;
    }
    
    class AnimGraphNode_ModifyBone extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ModifyBone;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ModifyBone;
        static Load(InName: string): AnimGraphNode_ModifyBone;
    
        __tid_AnimGraphNode_ModifyBone_0__: boolean;
    }
    
    enum EModifyCurveApplyMode { Add, Scale, Blend, WeightedMovingAverage, RemapCurve, EModifyCurveApplyMode_MAX, __typeKeyDoNoAccess}
    class AnimNode_ModifyCurve extends UE.AnimNode_Base {
        constructor();
        constructor(SourcePose: UE.PoseLink, CurveValues: TArray<number>, CurveNames: TArray<string>, Alpha: number, ApplyMode: UE.EModifyCurveApplyMode);
        SourcePose: UE.PoseLink;
        CurveValues: TArray<number>;
        CurveNames: TArray<string>;
        Alpha: number;
        ApplyMode: UE.EModifyCurveApplyMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ModifyCurve_0__: boolean;
    }
    
    class AnimGraphNode_ModifyCurve extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ModifyCurve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ModifyCurve;
        static Load(InName: string): AnimGraphNode_ModifyCurve;
    
        __tid_AnimGraphNode_ModifyCurve_0__: boolean;
    }
    
    class AnimNode_MultiWayBlend extends UE.AnimNode_Base {
        constructor();
        constructor(Poses: TArray<UE.PoseLink>, DesiredAlphas: TArray<number>, AlphaScaleBias: UE.InputScaleBias, bAdditiveNode: boolean, bNormalizeAlpha: boolean);
        Poses: TArray<UE.PoseLink>;
        DesiredAlphas: TArray<number>;
        AlphaScaleBias: UE.InputScaleBias;
        bAdditiveNode: boolean;
        bNormalizeAlpha: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_MultiWayBlend_0__: boolean;
    }
    
    class AnimGraphNode_MultiWayBlend extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_MultiWayBlend;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_MultiWayBlend;
        static Load(InName: string): AnimGraphNode_MultiWayBlend;
    
        __tid_AnimGraphNode_MultiWayBlend_0__: boolean;
    }
    
    class AnimNode_ObserveBone extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(BoneToObserve: UE.BoneReference, DisplaySpace: UE.EBoneControlSpace, bRelativeToRefPose: boolean, Translation: UE.Vector, Rotation: UE.Rotator, Scale: UE.Vector);
        BoneToObserve: UE.BoneReference;
        DisplaySpace: UE.EBoneControlSpace;
        bRelativeToRefPose: boolean;
        Translation: UE.Vector;
        Rotation: UE.Rotator;
        Scale: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ObserveBone_0__: boolean;
    }
    
    class AnimGraphNode_ObserveBone extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ObserveBone;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ObserveBone;
        static Load(InName: string): AnimGraphNode_ObserveBone;
    
        __tid_AnimGraphNode_ObserveBone_0__: boolean;
    }
    
    class AnimGraphNode_PoseHandler extends UE.AnimGraphNode_AssetPlayerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_PoseHandler;
        static Load(InName: string): AnimGraphNode_PoseHandler;
    
        __tid_AnimGraphNode_PoseHandler_0__: boolean;
    }
    
    class AnimNode_PoseHandler extends UE.AnimNode_AssetPlayerBase {
        constructor();
        constructor(PoseAsset: UE.PoseAsset);
        PoseAsset: UE.PoseAsset;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_PoseHandler_0__: boolean;
    }
    
    class AnimNode_PoseBlendNode extends UE.AnimNode_PoseHandler {
        constructor();
        constructor(SourcePose: UE.PoseLink, BlendOption: UE.EAlphaBlendOption, CustomCurve: UE.CurveFloat);
        SourcePose: UE.PoseLink;
        BlendOption: UE.EAlphaBlendOption;
        CustomCurve: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_PoseBlendNode_0__: boolean;
    }
    
    class AnimGraphNode_PoseBlendNode extends UE.AnimGraphNode_PoseHandler {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_PoseBlendNode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_PoseBlendNode;
        static Load(InName: string): AnimGraphNode_PoseBlendNode;
    
        __tid_AnimGraphNode_PoseBlendNode_0__: boolean;
    }
    
    class AnimNode_PoseByName extends UE.AnimNode_PoseHandler {
        constructor();
        constructor(PoseName: string, PoseWeight: number);
        PoseName: string;
        PoseWeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_PoseByName_0__: boolean;
    }
    
    class AnimGraphNode_PoseByName extends UE.AnimGraphNode_AssetPlayerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_PoseByName;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_PoseByName;
        static Load(InName: string): AnimGraphNode_PoseByName;
    
        __tid_AnimGraphNode_PoseByName_0__: boolean;
    }
    
    class PoseDriverTransform {
        constructor();
        constructor(TargetTranslation: UE.Vector, TargetRotation: UE.Rotator);
        TargetTranslation: UE.Vector;
        TargetRotation: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PoseDriverTransform_0__: boolean;
    }
    
    enum ERBFDistanceMethod { Euclidean, Quaternion, SwingAngle, TwistAngle, DefaultMethod, ERBFDistanceMethod_MAX, __typeKeyDoNoAccess}
    enum ERBFFunctionType { Gaussian, Exponential, Linear, Cubic, Quintic, DefaultFunction, ERBFFunctionType_MAX, __typeKeyDoNoAccess}
    class PoseDriverTarget {
        constructor();
        constructor(BoneTransforms: TArray<UE.PoseDriverTransform>, TargetRotation: UE.Rotator, TargetScale: number, DistanceMethod: UE.ERBFDistanceMethod, FunctionType: UE.ERBFFunctionType, bApplyCustomCurve: boolean, CustomCurve: UE.RichCurve, DrivenName: string, bIsHidden: boolean);
        BoneTransforms: TArray<UE.PoseDriverTransform>;
        TargetRotation: UE.Rotator;
        TargetScale: number;
        DistanceMethod: UE.ERBFDistanceMethod;
        FunctionType: UE.ERBFFunctionType;
        bApplyCustomCurve: boolean;
        CustomCurve: UE.RichCurve;
        DrivenName: string;
        bIsHidden: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PoseDriverTarget_0__: boolean;
    }
    
    enum ERBFSolverType { Additive, Interpolative, ERBFSolverType_MAX, __typeKeyDoNoAccess}
    enum EBoneAxis { BA_X, BA_Y, BA_Z, BA_MAX, __typeKeyDoNoAccess}
    enum ERBFNormalizeMethod { OnlyNormalizeAboveOne, AlwaysNormalize, NormalizeWithinMedian, NoNormalization, ERBFNormalizeMethod_MAX, __typeKeyDoNoAccess}
    class RBFParams {
        constructor();
        constructor(TargetDimensions: number, SolverType: UE.ERBFSolverType, Radius: number, bAutomaticRadius: boolean, Function: UE.ERBFFunctionType, DistanceMethod: UE.ERBFDistanceMethod, TwistAxis: UE.EBoneAxis, WeightThreshold: number, NormalizeMethod: UE.ERBFNormalizeMethod, MedianReference: UE.Vector, MedianMin: number, MedianMax: number);
        TargetDimensions: number;
        SolverType: UE.ERBFSolverType;
        Radius: number;
        bAutomaticRadius: boolean;
        Function: UE.ERBFFunctionType;
        DistanceMethod: UE.ERBFDistanceMethod;
        TwistAxis: UE.EBoneAxis;
        WeightThreshold: number;
        NormalizeMethod: UE.ERBFNormalizeMethod;
        MedianReference: UE.Vector;
        MedianMin: number;
        MedianMax: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RBFParams_0__: boolean;
    }
    
    enum EPoseDriverType { SwingAndTwist, SwingOnly, Translation, EPoseDriverType_MAX, __typeKeyDoNoAccess}
    enum EPoseDriverSource { Rotation, Translation, EPoseDriverSource_MAX, __typeKeyDoNoAccess}
    enum EPoseDriverOutput { DrivePoses, DriveCurves, EPoseDriverOutput_MAX, __typeKeyDoNoAccess}
    class AnimNode_PoseDriver extends UE.AnimNode_PoseHandler {
        constructor();
        constructor(SourcePose: UE.PoseLink, SourceBones: TArray<UE.BoneReference>, OnlyDriveBones: TArray<UE.BoneReference>, PoseTargets: TArray<UE.PoseDriverTarget>, EvalSpaceBone: UE.BoneReference, RBFParams: UE.RBFParams, SourceBone: UE.BoneReference, TwistAxis: UE.EBoneAxis, Type: UE.EPoseDriverType, RadialScaling: number, DriveSource: UE.EPoseDriverSource, DriveOutput: UE.EPoseDriverOutput, bOnlyDriveSelectedBones: boolean, bSoloDrivenOnly: boolean, LODThreshold: number);
        SourcePose: UE.PoseLink;
        SourceBones: TArray<UE.BoneReference>;
        OnlyDriveBones: TArray<UE.BoneReference>;
        PoseTargets: TArray<UE.PoseDriverTarget>;
        EvalSpaceBone: UE.BoneReference;
        RBFParams: UE.RBFParams;
        SourceBone: UE.BoneReference;
        TwistAxis: UE.EBoneAxis;
        Type: UE.EPoseDriverType;
        RadialScaling: number;
        DriveSource: UE.EPoseDriverSource;
        DriveOutput: UE.EPoseDriverOutput;
        bOnlyDriveSelectedBones: boolean;
        bSoloDrivenOnly: boolean;
        LODThreshold: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_PoseDriver_0__: boolean;
    }
    
    class AnimGraphNode_PoseDriver extends UE.AnimGraphNode_PoseHandler {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_PoseDriver;
        AxisLength: number;
        ConeSubdivision: number;
        bDrawDebugCones: boolean;
        LastPreviewComponent: UE.SkeletalMeshComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_PoseDriver;
        static Load(InName: string): AnimGraphNode_PoseDriver;
    
        __tid_AnimGraphNode_PoseDriver_0__: boolean;
    }
    
    enum ESnapshotSourceMode { NamedSnapshot, SnapshotPin, ESnapshotSourceMode_MAX, __typeKeyDoNoAccess}
    class AnimNode_PoseSnapshot extends UE.AnimNode_Base {
        constructor();
        constructor(SnapshotName: string, Snapshot: UE.PoseSnapshot, Mode: UE.ESnapshotSourceMode);
        SnapshotName: string;
        Snapshot: UE.PoseSnapshot;
        Mode: UE.ESnapshotSourceMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_PoseSnapshot_0__: boolean;
    }
    
    class AnimGraphNode_PoseSnapshot extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_PoseSnapshot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_PoseSnapshot;
        static Load(InName: string): AnimGraphNode_PoseSnapshot;
    
        __tid_AnimGraphNode_PoseSnapshot_0__: boolean;
    }
    
    class RandomPlayerSequenceEntry {
        constructor();
        constructor(Sequence: UE.AnimSequence, ChanceToPlay: number, MinLoopCount: number, MaxLoopCount: number, MinPlayRate: number, MaxPlayRate: number, BlendIn: UE.AlphaBlend);
        Sequence: UE.AnimSequence;
        ChanceToPlay: number;
        MinLoopCount: number;
        MaxLoopCount: number;
        MinPlayRate: number;
        MaxPlayRate: number;
        BlendIn: UE.AlphaBlend;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RandomPlayerSequenceEntry_0__: boolean;
    }
    
    class AnimNode_RandomPlayer extends UE.AnimNode_Base {
        constructor();
        constructor(Entries: TArray<UE.RandomPlayerSequenceEntry>, bShuffleMode: boolean);
        Entries: TArray<UE.RandomPlayerSequenceEntry>;
        bShuffleMode: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_RandomPlayer_0__: boolean;
    }
    
    class AnimGraphNode_RandomPlayer extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_RandomPlayer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_RandomPlayer;
        static Load(InName: string): AnimGraphNode_RandomPlayer;
    
        __tid_AnimGraphNode_RandomPlayer_0__: boolean;
    }
    
    class AnimNode_ResetRoot extends UE.AnimNode_SkeletalControlBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ResetRoot_0__: boolean;
    }
    
    class AnimGraphNode_ResetRoot extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ResetRoot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ResetRoot;
        static Load(InName: string): AnimGraphNode_ResetRoot;
    
        __tid_AnimGraphNode_ResetRoot_0__: boolean;
    }
    
    class SimSpaceSettings {
        constructor();
        constructor(MasterAlpha: number, VelocityScaleZ: number, MaxLinearVelocity: number, MaxAngularVelocity: number, MaxLinearAcceleration: number, MaxAngularAcceleration: number, ExternalLinearDrag: number, ExternalLinearDragV: UE.Vector, ExternalLinearVelocity: UE.Vector, ExternalAngularVelocity: UE.Vector);
        MasterAlpha: number;
        VelocityScaleZ: number;
        MaxLinearVelocity: number;
        MaxAngularVelocity: number;
        MaxLinearAcceleration: number;
        MaxAngularAcceleration: number;
        ExternalLinearDrag: number;
        ExternalLinearDragV: UE.Vector;
        ExternalLinearVelocity: UE.Vector;
        ExternalAngularVelocity: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SimSpaceSettings_0__: boolean;
    }
    
    enum ESimulationSpace { ComponentSpace, WorldSpace, BaseBoneSpace, ESimulationSpace_MAX, __typeKeyDoNoAccess}
    class AnimNode_RigidBody extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(OverridePhysicsAsset: UE.PhysicsAsset, OverrideWorldGravity: UE.Vector, ExternalForce: UE.Vector, ComponentLinearAccScale: UE.Vector, ComponentLinearVelScale: UE.Vector, ComponentAppliedLinearAccClamp: UE.Vector, SimSpaceSettings: UE.SimSpaceSettings, CachedBoundsScale: number, BaseBoneRef: UE.BoneReference, OverlapChannel: UE.ECollisionChannel, SimulationSpace: UE.ESimulationSpace, bForceDisableCollisionBetweenConstraintBodies: boolean, bEnableWorldGeometry: boolean, bOverrideWorldGravity: boolean, bTransferBoneVelocities: boolean, bFreezeIncomingPoseOnStart: boolean, bClampLinearTranslationLimitToRefPose: boolean, WorldSpaceMinimumScale: number, EvaluationResetTime: number, bComponentSpaceSimulation: boolean);
        OverridePhysicsAsset: UE.PhysicsAsset;
        OverrideWorldGravity: UE.Vector;
        ExternalForce: UE.Vector;
        ComponentLinearAccScale: UE.Vector;
        ComponentLinearVelScale: UE.Vector;
        ComponentAppliedLinearAccClamp: UE.Vector;
        SimSpaceSettings: UE.SimSpaceSettings;
        CachedBoundsScale: number;
        BaseBoneRef: UE.BoneReference;
        OverlapChannel: UE.ECollisionChannel;
        SimulationSpace: UE.ESimulationSpace;
        bForceDisableCollisionBetweenConstraintBodies: boolean;
        bEnableWorldGeometry: boolean;
        bOverrideWorldGravity: boolean;
        bTransferBoneVelocities: boolean;
        bFreezeIncomingPoseOnStart: boolean;
        bClampLinearTranslationLimitToRefPose: boolean;
        WorldSpaceMinimumScale: number;
        EvaluationResetTime: number;
        bComponentSpaceSimulation: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_RigidBody_0__: boolean;
    }
    
    class AnimGraphNode_RigidBody extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_RigidBody;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_RigidBody;
        static Load(InName: string): AnimGraphNode_RigidBody;
    
        __tid_AnimGraphNode_RigidBody_0__: boolean;
    }
    
    class AnimGraphNode_Root extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_Root;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_Root;
        static Load(InName: string): AnimGraphNode_Root;
    
        __tid_AnimGraphNode_Root_0__: boolean;
    }
    
    class AnimNode_RotateRootBone extends UE.AnimNode_Base {
        constructor();
        constructor(BasePose: UE.PoseLink, Pitch: number, Yaw: number, PitchScaleBiasClamp: UE.InputScaleBiasClamp, YawScaleBiasClamp: UE.InputScaleBiasClamp, MeshToComponent: UE.Rotator);
        BasePose: UE.PoseLink;
        Pitch: number;
        Yaw: number;
        PitchScaleBiasClamp: UE.InputScaleBiasClamp;
        YawScaleBiasClamp: UE.InputScaleBiasClamp;
        MeshToComponent: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_RotateRootBone_0__: boolean;
    }
    
    class AnimGraphNode_RotateRootBone extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_RotateRootBone;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_RotateRootBone;
        static Load(InName: string): AnimGraphNode_RotateRootBone;
    
        __tid_AnimGraphNode_RotateRootBone_0__: boolean;
    }
    
    class AnimNode_RotationMultiplier extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(TargetBone: UE.BoneReference, SourceBone: UE.BoneReference, Multiplier: number, RotationAxisToRefer: UE.EBoneAxis, bIsAdditive: boolean);
        TargetBone: UE.BoneReference;
        SourceBone: UE.BoneReference;
        Multiplier: number;
        RotationAxisToRefer: UE.EBoneAxis;
        bIsAdditive: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_RotationMultiplier_0__: boolean;
    }
    
    class AnimGraphNode_RotationMultiplier extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_RotationMultiplier;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_RotationMultiplier;
        static Load(InName: string): AnimGraphNode_RotationMultiplier;
    
        __tid_AnimGraphNode_RotationMultiplier_0__: boolean;
    }
    
    class AnimNode_RotationOffsetBlendSpace extends UE.AnimNode_BlendSpacePlayer {
        constructor();
        constructor(BasePose: UE.PoseLink, LODThreshold: number, Alpha: number, AlphaScaleBias: UE.InputScaleBias, AlphaBoolBlend: UE.InputAlphaBoolBlend, AlphaCurveName: string, AlphaScaleBiasClamp: UE.InputScaleBiasClamp, AlphaInputType: UE.EAnimAlphaInputType, bAlphaBoolEnabled: boolean);
        BasePose: UE.PoseLink;
        LODThreshold: number;
        Alpha: number;
        AlphaScaleBias: UE.InputScaleBias;
        AlphaBoolBlend: UE.InputAlphaBoolBlend;
        AlphaCurveName: string;
        AlphaScaleBiasClamp: UE.InputScaleBiasClamp;
        AlphaInputType: UE.EAnimAlphaInputType;
        bAlphaBoolEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_RotationOffsetBlendSpace_0__: boolean;
    }
    
    class AnimGraphNode_RotationOffsetBlendSpace extends UE.AnimGraphNode_BlendSpaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_RotationOffsetBlendSpace;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_RotationOffsetBlendSpace;
        static Load(InName: string): AnimGraphNode_RotationOffsetBlendSpace;
    
        __tid_AnimGraphNode_RotationOffsetBlendSpace_0__: boolean;
    }
    
    class AnimNode_SaveCachedPose extends UE.AnimNode_Base {
        constructor();
        constructor(Pose: UE.PoseLink, CachePoseName: string);
        Pose: UE.PoseLink;
        CachePoseName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SaveCachedPose_0__: boolean;
    }
    
    class AnimGraphNode_SaveCachedPose extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_SaveCachedPose;
        CacheName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SaveCachedPose;
        static Load(InName: string): AnimGraphNode_SaveCachedPose;
    
        __tid_AnimGraphNode_SaveCachedPose_0__: boolean;
    }
    
    enum EScaleChainInitialLength { FixedDefaultLengthValue, Distance, ChainLength, EScaleChainInitialLength_MAX, __typeKeyDoNoAccess}
    class AnimNode_ScaleChainLength extends UE.AnimNode_Base {
        constructor();
        constructor(InputPose: UE.PoseLink, DefaultChainLength: number, ChainStartBone: UE.BoneReference, ChainEndBone: UE.BoneReference, TargetLocation: UE.Vector, Alpha: number, AlphaScaleBias: UE.InputScaleBias, ChainInitialLength: UE.EScaleChainInitialLength);
        InputPose: UE.PoseLink;
        DefaultChainLength: number;
        ChainStartBone: UE.BoneReference;
        ChainEndBone: UE.BoneReference;
        TargetLocation: UE.Vector;
        Alpha: number;
        AlphaScaleBias: UE.InputScaleBias;
        ChainInitialLength: UE.EScaleChainInitialLength;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_ScaleChainLength_0__: boolean;
    }
    
    class AnimGraphNode_ScaleChainLength extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_ScaleChainLength;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_ScaleChainLength;
        static Load(InName: string): AnimGraphNode_ScaleChainLength;
    
        __tid_AnimGraphNode_ScaleChainLength_0__: boolean;
    }
    
    enum ESequenceEvalReinit { NoReset, StartPosition, ExplicitTime, ESequenceEvalReinit_MAX, __typeKeyDoNoAccess}
    class AnimNode_SequenceEvaluator extends UE.AnimNode_AssetPlayerBase {
        constructor();
        constructor(Sequence: UE.AnimSequenceBase, ExplicitTime: number, bShouldLoop: boolean, bTeleportToExplicitTime: boolean, ReinitializationBehavior: UE.ESequenceEvalReinit, StartPosition: number);
        Sequence: UE.AnimSequenceBase;
        ExplicitTime: number;
        bShouldLoop: boolean;
        bTeleportToExplicitTime: boolean;
        ReinitializationBehavior: UE.ESequenceEvalReinit;
        StartPosition: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SequenceEvaluator_0__: boolean;
    }
    
    class AnimGraphNode_SequenceEvaluator extends UE.AnimGraphNode_AssetPlayerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_SequenceEvaluator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SequenceEvaluator;
        static Load(InName: string): AnimGraphNode_SequenceEvaluator;
    
        __tid_AnimGraphNode_SequenceEvaluator_0__: boolean;
    }
    
    class AnimNode_SequencePlayer extends UE.AnimNode_AssetPlayerBase {
        constructor();
        constructor(Sequence: UE.AnimSequenceBase, PlayRateBasis: number, PlayRate: number, PlayRateScaleBiasClamp: UE.InputScaleBiasClamp, StartPosition: number, bLoopAnimation: boolean);
        Sequence: UE.AnimSequenceBase;
        PlayRateBasis: number;
        PlayRate: number;
        PlayRateScaleBiasClamp: UE.InputScaleBiasClamp;
        StartPosition: number;
        bLoopAnimation: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SequencePlayer_0__: boolean;
    }
    
    class AnimGraphNode_SequencePlayer extends UE.AnimGraphNode_AssetPlayerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_SequencePlayer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SequencePlayer;
        static Load(InName: string): AnimGraphNode_SequencePlayer;
    
        __tid_AnimGraphNode_SequencePlayer_0__: boolean;
    }
    
    class AnimNode_Slot extends UE.AnimNode_Base {
        constructor();
        constructor(Source: UE.PoseLink, SlotName: string, bAlwaysUpdateSourcePose: boolean);
        Source: UE.PoseLink;
        SlotName: string;
        bAlwaysUpdateSourcePose: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_Slot_0__: boolean;
    }
    
    class AnimGraphNode_Slot extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_Slot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_Slot;
        static Load(InName: string): AnimGraphNode_Slot;
    
        __tid_AnimGraphNode_Slot_0__: boolean;
    }
    
    enum ESplineBoneAxis { None, X, Y, Z, ESplineBoneAxis_MAX, __typeKeyDoNoAccess}
    class AnimNode_SplineIK extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(StartBone: UE.BoneReference, EndBone: UE.BoneReference, BoneAxis: UE.ESplineBoneAxis, bAutoCalculateSpline: boolean, PointCount: number, ControlPoints: TArray<UE.Transform>, Roll: number, TwistStart: number, TwistEnd: number, TwistBlend: UE.AlphaBlend, Stretch: number, Offset: number);
        StartBone: UE.BoneReference;
        EndBone: UE.BoneReference;
        BoneAxis: UE.ESplineBoneAxis;
        bAutoCalculateSpline: boolean;
        PointCount: number;
        ControlPoints: TArray<UE.Transform>;
        Roll: number;
        TwistStart: number;
        TwistEnd: number;
        TwistBlend: UE.AlphaBlend;
        Stretch: number;
        Offset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SplineIK_0__: boolean;
    }
    
    class AnimGraphNode_SplineIK extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_SplineIK;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SplineIK;
        static Load(InName: string): AnimGraphNode_SplineIK;
    
        __tid_AnimGraphNode_SplineIK_0__: boolean;
    }
    
    class AnimNode_SpringBone extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(SpringBone: UE.BoneReference, MaxDisplacement: number, SpringStiffness: number, SpringDamping: number, ErrorResetThresh: number, bNoZSpring: boolean, bLimitDisplacement: boolean, bTranslateX: boolean, bTranslateY: boolean, bTranslateZ: boolean, bRotateX: boolean, bRotateY: boolean, bRotateZ: boolean);
        SpringBone: UE.BoneReference;
        MaxDisplacement: number;
        SpringStiffness: number;
        SpringDamping: number;
        ErrorResetThresh: number;
        bNoZSpring: boolean;
        bLimitDisplacement: boolean;
        bTranslateX: boolean;
        bTranslateY: boolean;
        bTranslateZ: boolean;
        bRotateX: boolean;
        bRotateY: boolean;
        bRotateZ: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SpringBone_0__: boolean;
    }
    
    class AnimGraphNode_SpringBone extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_SpringBone;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SpringBone;
        static Load(InName: string): AnimGraphNode_SpringBone;
    
        __tid_AnimGraphNode_SpringBone_0__: boolean;
    }
    
    class AnimNode_StateMachine extends UE.AnimNode_Base {
        constructor();
        constructor(StateMachineIndexInClass: number, MaxTransitionsPerFrame: number, bSkipFirstUpdateTransition: boolean, bReinitializeOnBecomingRelevant: boolean);
        StateMachineIndexInClass: number;
        MaxTransitionsPerFrame: number;
        bSkipFirstUpdateTransition: boolean;
        bReinitializeOnBecomingRelevant: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_StateMachine_0__: boolean;
    }
    
    class AnimGraphNode_StateMachine extends UE.AnimGraphNode_StateMachineBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_StateMachine;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_StateMachine;
        static Load(InName: string): AnimGraphNode_StateMachine;
    
        __tid_AnimGraphNode_StateMachine_0__: boolean;
    }
    
    enum EMotionRange { VR_WithoutController, VR_WithController, VR_MAX, __typeKeyDoNoAccess}
    enum EHand { VR_LeftHand, VR_RightHand, VR_MAX, __typeKeyDoNoAccess}
    enum EHandSkeleton { VR_SteamVRHandSkeleton, VR_UE4HandSkeleton, VR_MAX, __typeKeyDoNoAccess}
    class SteamVRSkeletonTransform {
        constructor();
        constructor(Root: UE.Transform, Wrist: UE.Transform, Thumb_0: UE.Transform, Thumb_1: UE.Transform, Thumb_2: UE.Transform, Thumb_3: UE.Transform, Index_0: UE.Transform, Index_1: UE.Transform, Index_2: UE.Transform, Index_3: UE.Transform, Index_4: UE.Transform, Middle_0: UE.Transform, Middle_1: UE.Transform, Middle_2: UE.Transform, Middle_3: UE.Transform, Middle_4: UE.Transform, Ring_0: UE.Transform, Ring_1: UE.Transform, Ring_2: UE.Transform, Ring_3: UE.Transform, Ring_4: UE.Transform, Pinky_0: UE.Transform, Pinky_1: UE.Transform, Pinky_2: UE.Transform, Pinky_3: UE.Transform, Pinky_4: UE.Transform, Aux_Thumb: UE.Transform, Aux_Index: UE.Transform, Aux_Middle: UE.Transform, Aux_Ring: UE.Transform, Aux_Pinky: UE.Transform);
        Root: UE.Transform;
        Wrist: UE.Transform;
        Thumb_0: UE.Transform;
        Thumb_1: UE.Transform;
        Thumb_2: UE.Transform;
        Thumb_3: UE.Transform;
        Index_0: UE.Transform;
        Index_1: UE.Transform;
        Index_2: UE.Transform;
        Index_3: UE.Transform;
        Index_4: UE.Transform;
        Middle_0: UE.Transform;
        Middle_1: UE.Transform;
        Middle_2: UE.Transform;
        Middle_3: UE.Transform;
        Middle_4: UE.Transform;
        Ring_0: UE.Transform;
        Ring_1: UE.Transform;
        Ring_2: UE.Transform;
        Ring_3: UE.Transform;
        Ring_4: UE.Transform;
        Pinky_0: UE.Transform;
        Pinky_1: UE.Transform;
        Pinky_2: UE.Transform;
        Pinky_3: UE.Transform;
        Pinky_4: UE.Transform;
        Aux_Thumb: UE.Transform;
        Aux_Index: UE.Transform;
        Aux_Middle: UE.Transform;
        Aux_Ring: UE.Transform;
        Aux_Pinky: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SteamVRSkeletonTransform_0__: boolean;
    }
    
    class UE4RetargettingRefs {
        constructor();
        constructor(bIsInitialized: boolean, bIsRightHanded: boolean, KnuckleAverageMS_UE4: UE.Vector, WristSideDirectionLS_UE4: UE.Vector, WristForwardLS_UE4: UE.Vector);
        bIsInitialized: boolean;
        bIsRightHanded: boolean;
        KnuckleAverageMS_UE4: UE.Vector;
        WristSideDirectionLS_UE4: UE.Vector;
        WristForwardLS_UE4: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UE4RetargettingRefs_0__: boolean;
    }
    
    class AnimNode_SteamVRInputAnimPose extends UE.AnimNode_Base {
        constructor();
        constructor(MotionRange: UE.EMotionRange, Hand: UE.EHand, HandSkeleton: UE.EHandSkeleton, Mirror: boolean, SteamVRSkeletalTransform: UE.SteamVRSkeletonTransform, UE4RetargettingRefs: UE.UE4RetargettingRefs);
        MotionRange: UE.EMotionRange;
        Hand: UE.EHand;
        HandSkeleton: UE.EHandSkeleton;
        Mirror: boolean;
        SteamVRSkeletalTransform: UE.SteamVRSkeletonTransform;
        UE4RetargettingRefs: UE.UE4RetargettingRefs;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SteamVRInputAnimPose_0__: boolean;
    }
    
    class AnimGraphNode_SteamVRInputAnimPose extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_SteamVRInputAnimPose;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SteamVRInputAnimPose;
        static Load(InName: string): AnimGraphNode_SteamVRInputAnimPose;
    
        __tid_AnimGraphNode_SteamVRInputAnimPose_0__: boolean;
    }
    
    class AnimNode_SteamVRSetWristTransform extends UE.AnimNode_Base {
        constructor();
        constructor(ReferencePose: UE.PoseLink, HandSkeleton: UE.EHandSkeleton, TargetPose: UE.PoseLink);
        ReferencePose: UE.PoseLink;
        HandSkeleton: UE.EHandSkeleton;
        TargetPose: UE.PoseLink;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SteamVRSetWristTransform_0__: boolean;
    }
    
    class AnimGraphNode_SteamVRSetWristTransform extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_SteamVRSetWristTransform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_SteamVRSetWristTransform;
        static Load(InName: string): AnimGraphNode_SteamVRSetWristTransform;
    
        __tid_AnimGraphNode_SteamVRSetWristTransform_0__: boolean;
    }
    
    class RotationLimit {
        constructor();
        constructor(LimitMin: UE.Vector, LimitMax: UE.Vector);
        LimitMin: UE.Vector;
        LimitMax: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RotationLimit_0__: boolean;
    }
    
    class AnimNode_Trail extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(TrailBone: UE.BoneReference, ChainLength: number, ChainBoneAxis: UE.EAxis, bInvertChainBoneAxis: boolean, bLimitStretch: boolean, bLimitRotation: boolean, bUsePlanarLimit: boolean, bActorSpaceFakeVel: boolean, bReorientParentToChild: boolean, bEnableDebug: boolean, bShowBaseMotion: boolean, bShowTrailLocation: boolean, bShowLimit: boolean, DebugLifeTime: number, TrailRelaxation: number, MaxDeltaTime: number, RelaxationSpeedScale: number, TrailRelaxationSpeed: UE.RuntimeFloatCurve, RelaxationSpeedScaleInputProcessor: UE.InputScaleBiasClamp, RotationLimits: TArray<UE.RotationLimit>, RotationOffsets: TArray<UE.Vector>, PlanarLimits: TArray<UE.AnimPhysPlanarLimit>, StretchLimit: number, FakeVelocity: UE.Vector, BaseJoint: UE.BoneReference, TrailBoneRotationBlendAlpha: number, LastBoneRotationAnimAlphaBlend: number);
        TrailBone: UE.BoneReference;
        ChainLength: number;
        ChainBoneAxis: UE.EAxis;
        bInvertChainBoneAxis: boolean;
        bLimitStretch: boolean;
        bLimitRotation: boolean;
        bUsePlanarLimit: boolean;
        bActorSpaceFakeVel: boolean;
        bReorientParentToChild: boolean;
        bEnableDebug: boolean;
        bShowBaseMotion: boolean;
        bShowTrailLocation: boolean;
        bShowLimit: boolean;
        DebugLifeTime: number;
        TrailRelaxation: number;
        MaxDeltaTime: number;
        RelaxationSpeedScale: number;
        TrailRelaxationSpeed: UE.RuntimeFloatCurve;
        RelaxationSpeedScaleInputProcessor: UE.InputScaleBiasClamp;
        RotationLimits: TArray<UE.RotationLimit>;
        RotationOffsets: TArray<UE.Vector>;
        PlanarLimits: TArray<UE.AnimPhysPlanarLimit>;
        StretchLimit: number;
        FakeVelocity: UE.Vector;
        BaseJoint: UE.BoneReference;
        TrailBoneRotationBlendAlpha: number;
        LastBoneRotationAnimAlphaBlend: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_Trail_0__: boolean;
    }
    
    class AnimGraphNode_Trail extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_Trail;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_Trail;
        static Load(InName: string): AnimGraphNode_Trail;
    
        __tid_AnimGraphNode_Trail_0__: boolean;
    }
    
    enum EEvaluatorDataSource { EDS_SourcePose, EDS_DestinationPose, EDS_MAX, __typeKeyDoNoAccess}
    enum EEvaluatorMode { EM_Standard, EM_Freeze, EM_DelayedFreeze, EM_MAX, __typeKeyDoNoAccess}
    class AnimNode_TransitionPoseEvaluator extends UE.AnimNode_Base {
        constructor();
        constructor(FramesToCachePose: number, DataSource: UE.EEvaluatorDataSource, EvaluatorMode: UE.EEvaluatorMode);
        FramesToCachePose: number;
        DataSource: UE.EEvaluatorDataSource;
        EvaluatorMode: UE.EEvaluatorMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_TransitionPoseEvaluator_0__: boolean;
    }
    
    class AnimGraphNode_TransitionPoseEvaluator extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_TransitionPoseEvaluator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_TransitionPoseEvaluator;
        static Load(InName: string): AnimGraphNode_TransitionPoseEvaluator;
    
        __tid_AnimGraphNode_TransitionPoseEvaluator_0__: boolean;
    }
    
    class ReferenceBoneFrame {
        constructor();
        constructor(Bone: UE.BoneReference, Axis: UE.Axis);
        Bone: UE.BoneReference;
        Axis: UE.Axis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ReferenceBoneFrame_0__: boolean;
    }
    
    class AnimNode_TwistCorrectiveNode extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(BaseFrame: UE.ReferenceBoneFrame, TwistFrame: UE.ReferenceBoneFrame, TwistPlaneNormalAxis: UE.Axis, RangeMax: number, RemappedMin: number, RemappedMax: number, Curve: UE.AnimCurveParam);
        BaseFrame: UE.ReferenceBoneFrame;
        TwistFrame: UE.ReferenceBoneFrame;
        TwistPlaneNormalAxis: UE.Axis;
        RangeMax: number;
        RemappedMin: number;
        RemappedMax: number;
        Curve: UE.AnimCurveParam;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_TwistCorrectiveNode_0__: boolean;
    }
    
    class AnimGraphNode_TwistCorrectiveNode extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_TwistCorrectiveNode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_TwistCorrectiveNode;
        static Load(InName: string): AnimGraphNode_TwistCorrectiveNode;
    
        __tid_AnimGraphNode_TwistCorrectiveNode_0__: boolean;
    }
    
    class AnimNode_TwoBoneIK extends UE.AnimNode_SkeletalControlBase {
        constructor();
        constructor(IKBone: UE.BoneReference, StartStretchRatio: number, MaxStretchScale: number, StretchLimits: UE.Vector2D, bNoTwist: boolean, JointTargetSpaceBoneName: string, EffectorSpaceBoneName: string, EffectorLocation: UE.Vector, EffectorTarget: UE.BoneSocketTarget, JointTargetLocation: UE.Vector, JointTarget: UE.BoneSocketTarget, TwistAxis: UE.Axis, EffectorLocationSpace: UE.EBoneControlSpace, JointTargetLocationSpace: UE.EBoneControlSpace, bAllowStretching: boolean, bTakeRotationFromEffectorSpace: boolean, bMaintainEffectorRelRot: boolean, bAllowTwist: boolean);
        IKBone: UE.BoneReference;
        StartStretchRatio: number;
        MaxStretchScale: number;
        StretchLimits: UE.Vector2D;
        bNoTwist: boolean;
        JointTargetSpaceBoneName: string;
        EffectorSpaceBoneName: string;
        EffectorLocation: UE.Vector;
        EffectorTarget: UE.BoneSocketTarget;
        JointTargetLocation: UE.Vector;
        JointTarget: UE.BoneSocketTarget;
        TwistAxis: UE.Axis;
        EffectorLocationSpace: UE.EBoneControlSpace;
        JointTargetLocationSpace: UE.EBoneControlSpace;
        bAllowStretching: boolean;
        bTakeRotationFromEffectorSpace: boolean;
        bMaintainEffectorRelRot: boolean;
        bAllowTwist: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_TwoBoneIK_0__: boolean;
    }
    
    class AnimGraphNode_TwoBoneIK extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_TwoBoneIK;
        bEnableDebugDraw: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_TwoBoneIK;
        static Load(InName: string): AnimGraphNode_TwoBoneIK;
    
        __tid_AnimGraphNode_TwoBoneIK_0__: boolean;
    }
    
    class AnimNode_TwoWayBlend extends UE.AnimNode_Base {
        constructor();
        constructor(A: UE.PoseLink, B: UE.PoseLink, AlphaInputType: UE.EAnimAlphaInputType, bAlphaBoolEnabled: boolean, bResetChildOnActivation: boolean, Alpha: number, AlphaScaleBias: UE.InputScaleBias, AlphaBoolBlend: UE.InputAlphaBoolBlend, AlphaCurveName: string, AlphaScaleBiasClamp: UE.InputScaleBiasClamp);
        A: UE.PoseLink;
        B: UE.PoseLink;
        AlphaInputType: UE.EAnimAlphaInputType;
        bAlphaBoolEnabled: boolean;
        bResetChildOnActivation: boolean;
        Alpha: number;
        AlphaScaleBias: UE.InputScaleBias;
        AlphaBoolBlend: UE.InputAlphaBoolBlend;
        AlphaCurveName: string;
        AlphaScaleBiasClamp: UE.InputScaleBiasClamp;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_TwoWayBlend_0__: boolean;
    }
    
    class AnimGraphNode_TwoWayBlend extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlendNode: UE.AnimNode_TwoWayBlend;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_TwoWayBlend;
        static Load(InName: string): AnimGraphNode_TwoWayBlend;
    
        __tid_AnimGraphNode_TwoWayBlend_0__: boolean;
    }
    
    class AnimNode_UseCachedPose extends UE.AnimNode_Base {
        constructor();
        constructor(LinkToCachingNode: UE.PoseLink, CachePoseName: string);
        LinkToCachingNode: UE.PoseLink;
        CachePoseName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_UseCachedPose_0__: boolean;
    }
    
    class AnimGraphNode_UseCachedPose extends UE.AnimGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_UseCachedPose;
        SaveCachedPoseNode: TWeakObjectPtr<UE.AnimGraphNode_SaveCachedPose>;
        NameOfCache: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_UseCachedPose;
        static Load(InName: string): AnimGraphNode_UseCachedPose;
    
        __tid_AnimGraphNode_UseCachedPose_0__: boolean;
    }
    
    class AnimNode_WheelHandler extends UE.AnimNode_SkeletalControlBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_WheelHandler_0__: boolean;
    }
    
    class AnimGraphNode_WheelHandler extends UE.AnimGraphNode_SkeletalControlBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.AnimNode_WheelHandler;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimGraphNode_WheelHandler;
        static Load(InName: string): AnimGraphNode_WheelHandler;
    
        __tid_AnimGraphNode_WheelHandler_0__: boolean;
    }
    
    class AnimGroupInstance {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimGroupInstance_0__: boolean;
    }
    
    class AnimInstanceProxy {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimInstanceProxy_0__: boolean;
    }
    
    class AnimInstanceSubsystemData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimInstanceSubsystemData_0__: boolean;
    }
    
    class AnimLayerInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimLayerInterface;
        static Load(InName: string): AnimLayerInterface;
    
        __tid_AnimLayerInterface_0__: boolean;
    }
    
    class AnimLayerInterfaceFactory extends UE.AnimBlueprintFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimLayerInterfaceFactory;
        static Load(InName: string): AnimLayerInterfaceFactory;
    
        __tid_AnimLayerInterfaceFactory_0__: boolean;
    }
    
    class AnimLegIKData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimLegIKData_0__: boolean;
    }
    
    class AnimMontageFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeleton: UE.Skeleton;
        SourceAnimation: UE.AnimSequence;
        PreviewSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimMontageFactory;
        static Load(InName: string): AnimMontageFactory;
    
        __tid_AnimMontageFactory_0__: boolean;
    }
    
    class AnimMontageInstance {
        constructor();
        constructor(Montage: UE.AnimMontage, bPlaying: boolean, DefaultBlendTimeMultiplier: number, NextSections: TArray<number>, PrevSections: TArray<number>, ActiveStateBranchingPoints: TArray<UE.AnimNotifyEvent>, Position: number, PlayRate: number, Blend: UE.AlphaBlend, DisableRootMotionCount: number);
        Montage: UE.AnimMontage;
        bPlaying: boolean;
        DefaultBlendTimeMultiplier: number;
        NextSections: TArray<number>;
        PrevSections: TArray<number>;
        ActiveStateBranchingPoints: TArray<UE.AnimNotifyEvent>;
        Position: number;
        PlayRate: number;
        Blend: UE.AlphaBlend;
        DisableRootMotionCount: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimMontageInstance_0__: boolean;
    }
    
    class AnimNode_SingleNode extends UE.AnimNode_Base {
        constructor();
        constructor(SourcePose: UE.PoseLink);
        SourcePose: UE.PoseLink;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimNode_SingleNode_0__: boolean;
    }
    
    class AnimNotify_PauseClothingSimulation extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_PauseClothingSimulation;
        static Load(InName: string): AnimNotify_PauseClothingSimulation;
    
        __tid_AnimNotify_PauseClothingSimulation_0__: boolean;
    }
    
    class AnimNotify_PlayMontageNotify extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NotifyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_PlayMontageNotify;
        static Load(InName: string): AnimNotify_PlayMontageNotify;
    
        __tid_AnimNotify_PlayMontageNotify_0__: boolean;
    }
    
    class AnimNotify_PlayMontageNotifyWindow extends UE.AnimNotifyState {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NotifyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_PlayMontageNotifyWindow;
        static Load(InName: string): AnimNotify_PlayMontageNotifyWindow;
    
        __tid_AnimNotify_PlayMontageNotifyWindow_0__: boolean;
    }
    
    class NiagaraScriptBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraScriptBase;
        static Load(InName: string): NiagaraScriptBase;
    
        __tid_NiagaraScriptBase_0__: boolean;
    }
    
    enum ENiagaraScriptUsage { Function, Module, DynamicInput, ParticleSpawnScript, ParticleSpawnScriptInterpolated, ParticleUpdateScript, ParticleEventScript, ParticleSimulationStageScript, ParticleGPUComputeScript, EmitterSpawnScript, EmitterUpdateScript, SystemSpawnScript, SystemUpdateScript, ENiagaraScriptUsage_MAX, __typeKeyDoNoAccess}
    enum ENiagaraModuleDependencyType { PreDependency, PostDependency, ENiagaraModuleDependencyType_MAX, __typeKeyDoNoAccess}
    enum ENiagaraModuleDependencyScriptConstraint { SameScript, AllScripts, ENiagaraModuleDependencyScriptConstraint_MAX, __typeKeyDoNoAccess}
    class NiagaraModuleDependency {
        constructor();
        constructor(Id: string, Type: UE.ENiagaraModuleDependencyType, ScriptConstraint: UE.ENiagaraModuleDependencyScriptConstraint, Description: string);
        Id: string;
        Type: UE.ENiagaraModuleDependencyType;
        ScriptConstraint: UE.ENiagaraModuleDependencyScriptConstraint;
        Description: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraModuleDependency_0__: boolean;
    }
    
    enum ENiagaraScriptLibraryVisibility { Invalid, Unexposed, Library, Hidden, ENiagaraScriptLibraryVisibility_MAX, __typeKeyDoNoAccess}
    class NiagaraTypeDefinitionHandle {
        constructor();
        constructor(RegisteredTypeIndex: number);
        RegisteredTypeIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraTypeDefinitionHandle_0__: boolean;
    }
    
    class NiagaraTypeDefinition {
        constructor();
        constructor(ClassStructOrEnum: UE.Object, UnderlyingType: number, Struct: UE.Struct, Enum: UE.Enum);
        ClassStructOrEnum: UE.Object;
        UnderlyingType: number;
        Struct: UE.Struct;
        Enum: UE.Enum;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraTypeDefinition_0__: boolean;
    }
    
    class NiagaraVariableBase {
        constructor();
        constructor(Name: string, TypeDefHandle: UE.NiagaraTypeDefinitionHandle, TypeDef: UE.NiagaraTypeDefinition);
        Name: string;
        TypeDefHandle: UE.NiagaraTypeDefinitionHandle;
        TypeDef: UE.NiagaraTypeDefinition;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableBase_0__: boolean;
    }
    
    class NiagaraVariable extends UE.NiagaraVariableBase {
        constructor();
        constructor(VarData: TArray<number>);
        VarData: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariable_0__: boolean;
    }
    
    class NiagaraVariableWithOffset extends UE.NiagaraVariableBase {
        constructor();
        constructor(Offset: number);
        Offset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableWithOffset_0__: boolean;
    }
    
    class NiagaraMergeable extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MergeId: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraMergeable;
        static Load(InName: string): NiagaraMergeable;
    
        __tid_NiagaraMergeable_0__: boolean;
    }
    
    class NiagaraDataInterfaceBase extends UE.NiagaraMergeable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceBase;
        static Load(InName: string): NiagaraDataInterfaceBase;
    
        __tid_NiagaraDataInterfaceBase_0__: boolean;
    }
    
    class NiagaraDataInterface extends UE.NiagaraDataInterfaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterface;
        static Load(InName: string): NiagaraDataInterface;
    
        __tid_NiagaraDataInterface_0__: boolean;
    }
    
    class NiagaraParameterStore {
        constructor();
        constructor(Owner: UE.Object, ParameterOffsets: TMap<UE.NiagaraVariable, number>, SortedParameterOffsets: TArray<UE.NiagaraVariableWithOffset>, ParameterData: TArray<number>, DataInterfaces: TArray<UE.NiagaraDataInterface>, UObjects: TArray<UE.Object>, DebugName: string);
        Owner: UE.Object;
        ParameterOffsets: TMap<UE.NiagaraVariable, number>;
        SortedParameterOffsets: TArray<UE.NiagaraVariableWithOffset>;
        ParameterData: TArray<number>;
        DataInterfaces: TArray<UE.NiagaraDataInterface>;
        UObjects: TArray<UE.Object>;
        DebugName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraParameterStore_0__: boolean;
    }
    
    enum ENiagaraNumericOutputTypeSelectionMode { None, Largest, Smallest, Scalar, ENiagaraNumericOutputTypeSelectionMode_MAX, __typeKeyDoNoAccess}
    class NiagaraScriptHighlight {
        constructor();
        constructor(Color: UE.LinearColor, DisplayName: string);
        Color: UE.LinearColor;
        DisplayName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptHighlight_0__: boolean;
    }
    
    class NiagaraScriptExecutionPaddingInfo {
        constructor();
        constructor(SrcOffset: number, DestOffset: number, SrcSize: number, DestSize: number);
        SrcOffset: number;
        DestOffset: number;
        SrcSize: number;
        DestSize: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptExecutionPaddingInfo_0__: boolean;
    }
    
    class NiagaraScriptExecutionParameterStore extends UE.NiagaraParameterStore {
        constructor();
        constructor(ParameterSize: number, PaddedParameterSize: number, PaddingInfo: TArray<UE.NiagaraScriptExecutionPaddingInfo>, bInitialized: boolean);
        ParameterSize: number;
        PaddedParameterSize: number;
        PaddingInfo: TArray<UE.NiagaraScriptExecutionPaddingInfo>;
        bInitialized: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptExecutionParameterStore_0__: boolean;
    }
    
    class NiagaraBoundParameter {
        constructor();
        constructor(Parameter: UE.NiagaraVariable, SrcOffset: number, DestOffset: number);
        Parameter: UE.NiagaraVariable;
        SrcOffset: number;
        DestOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraBoundParameter_0__: boolean;
    }
    
    class NiagaraScriptSourceBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraScriptSourceBase;
        static Load(InName: string): NiagaraScriptSourceBase;
    
        __tid_NiagaraScriptSourceBase_0__: boolean;
    }
    
    class NiagaraCompileHash {
        constructor();
        constructor(DataHash: TArray<number>);
        DataHash: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraCompileHash_0__: boolean;
    }
    
    class NiagaraVMExecutableDataId {
        constructor();
        constructor(CompilerVersionID: UE.Guid, ScriptUsageType: UE.ENiagaraScriptUsage, ScriptUsageTypeID: UE.Guid, AdditionalDefines: TArray<string>, bUsesRapidIterationParams: boolean, bInterpolatedSpawn: boolean, bRequiresPersistentIDs: boolean, BaseScriptID: UE.Guid, BaseScriptCompileHash: UE.NiagaraCompileHash, ReferencedCompileHashes: TArray<UE.NiagaraCompileHash>);
        CompilerVersionID: UE.Guid;
        ScriptUsageType: UE.ENiagaraScriptUsage;
        ScriptUsageTypeID: UE.Guid;
        AdditionalDefines: TArray<string>;
        bUsesRapidIterationParams: boolean;
        bInterpolatedSpawn: boolean;
        bRequiresPersistentIDs: boolean;
        BaseScriptID: UE.Guid;
        BaseScriptCompileHash: UE.NiagaraCompileHash;
        ReferencedCompileHashes: TArray<UE.NiagaraCompileHash>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVMExecutableDataId_0__: boolean;
    }
    
    class NiagaraParameters {
        constructor();
        constructor(Parameters: TArray<UE.NiagaraVariable>);
        Parameters: TArray<UE.NiagaraVariable>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraParameters_0__: boolean;
    }
    
    class NiagaraScriptDataUsageInfo {
        constructor();
        constructor(bReadsAttributeData: boolean);
        bReadsAttributeData: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptDataUsageInfo_0__: boolean;
    }
    
    class NiagaraFunctionSignature {
        constructor();
        constructor(Name: string, Inputs: TArray<UE.NiagaraVariable>, Outputs: TArray<UE.NiagaraVariable>, OwnerName: string, bRequiresContext: boolean, bRequiresExecPin: boolean, bMemberFunction: boolean, bExperimental: boolean, ExperimentalMessage: string, FunctionVersion: number, bSupportsCPU: boolean, bSupportsGPU: boolean, bWriteFunction: boolean, bSoftDeprecatedFunction: boolean, ModuleUsageBitmask: number, ContextStageMinIndex: number, ContextStageMaxIndex: number, FunctionSpecifiers: TMap<string, string>, Description: string);
        Name: string;
        Inputs: TArray<UE.NiagaraVariable>;
        Outputs: TArray<UE.NiagaraVariable>;
        OwnerName: string;
        bRequiresContext: boolean;
        bRequiresExecPin: boolean;
        bMemberFunction: boolean;
        bExperimental: boolean;
        ExperimentalMessage: string;
        FunctionVersion: number;
        bSupportsCPU: boolean;
        bSupportsGPU: boolean;
        bWriteFunction: boolean;
        bSoftDeprecatedFunction: boolean;
        ModuleUsageBitmask: number;
        ContextStageMinIndex: number;
        ContextStageMaxIndex: number;
        FunctionSpecifiers: TMap<string, string>;
        Description: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraFunctionSignature_0__: boolean;
    }
    
    class NiagaraScriptDataInterfaceCompileInfo {
        constructor();
        constructor(Name: string, UserPtrIdx: number, Type: UE.NiagaraTypeDefinition, RegisteredFunctions: TArray<UE.NiagaraFunctionSignature>, RegisteredParameterMapRead: string, RegisteredParameterMapWrite: string, bIsPlaceholder: boolean);
        Name: string;
        UserPtrIdx: number;
        Type: UE.NiagaraTypeDefinition;
        RegisteredFunctions: TArray<UE.NiagaraFunctionSignature>;
        RegisteredParameterMapRead: string;
        RegisteredParameterMapWrite: string;
        bIsPlaceholder: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptDataInterfaceCompileInfo_0__: boolean;
    }
    
    class VMFunctionSpecifier {
        constructor();
        constructor(Key: string, Value: string);
        Key: string;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VMFunctionSpecifier_0__: boolean;
    }
    
    class VMExternalFunctionBindingInfo {
        constructor();
        constructor(Name: string, OwnerName: string, InputParamLocations: TArray<boolean>, NumOutputs: number, FunctionSpecifiers: TArray<UE.VMFunctionSpecifier>, Specifiers: TMap<string, string>);
        Name: string;
        OwnerName: string;
        InputParamLocations: TArray<boolean>;
        NumOutputs: number;
        FunctionSpecifiers: TArray<UE.VMFunctionSpecifier>;
        Specifiers: TMap<string, string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VMExternalFunctionBindingInfo_0__: boolean;
    }
    
    enum ENiagaraDataSetType { ParticleData, Shared, Event, ENiagaraDataSetType_MAX, __typeKeyDoNoAccess}
    class NiagaraDataSetID {
        constructor();
        constructor(Name: string, Type: UE.ENiagaraDataSetType);
        Name: string;
        Type: UE.ENiagaraDataSetType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraDataSetID_0__: boolean;
    }
    
    class NiagaraDataSetProperties {
        constructor();
        constructor(ID: UE.NiagaraDataSetID, Variables: TArray<UE.NiagaraVariable>);
        ID: UE.NiagaraDataSetID;
        Variables: TArray<UE.NiagaraVariable>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraDataSetProperties_0__: boolean;
    }
    
    class NiagaraStatScope {
        constructor();
        constructor(FullName: string, FriendlyName: string);
        FullName: string;
        FriendlyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraStatScope_0__: boolean;
    }
    
    class NiagaraDataInterfaceGeneratedFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraDataInterfaceGeneratedFunction_0__: boolean;
    }
    
    class NiagaraDataInterfaceGPUParamInfo {
        constructor();
        constructor(DataInterfaceHLSLSymbol: string, DIClassName: string, GeneratedFunctions: TArray<UE.NiagaraDataInterfaceGeneratedFunction>);
        DataInterfaceHLSLSymbol: string;
        DIClassName: string;
        GeneratedFunctions: TArray<UE.NiagaraDataInterfaceGeneratedFunction>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraDataInterfaceGPUParamInfo_0__: boolean;
    }
    
    enum ENiagaraScriptCompileStatus { NCS_Unknown, NCS_Dirty, NCS_Error, NCS_UpToDate, NCS_BeingCreated, NCS_UpToDateWithWarnings, NCS_ComputeUpToDateWithWarnings, NCS_MAX, __typeKeyDoNoAccess}
    class SimulationStageMetaData {
        constructor();
        constructor(SimulationStageName: string, IterationSource: string, bSpawnOnly: boolean, bWritesParticles: boolean, bPartialParticleUpdate: boolean, OutputDestinations: TArray<string>, MinStage: number, MaxStage: number);
        SimulationStageName: string;
        IterationSource: string;
        bSpawnOnly: boolean;
        bWritesParticles: boolean;
        bPartialParticleUpdate: boolean;
        OutputDestinations: TArray<string>;
        MinStage: number;
        MaxStage: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SimulationStageMetaData_0__: boolean;
    }
    
    enum FNiagaraCompileEventSeverity { Log, Warning, Error, FNiagaraCompileEventSeverity_MAX, __typeKeyDoNoAccess}
    class NiagaraCompileEvent {
        constructor();
        constructor(Severity: UE.FNiagaraCompileEventSeverity, Message: string, NodeGuid: UE.Guid, PinGuid: UE.Guid, StackGuids: TArray<UE.Guid>);
        Severity: UE.FNiagaraCompileEventSeverity;
        Message: string;
        NodeGuid: UE.Guid;
        PinGuid: UE.Guid;
        StackGuids: TArray<UE.Guid>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraCompileEvent_0__: boolean;
    }
    
    class NiagaraVMExecutableData {
        constructor();
        constructor(ByteCode: TArray<number>, OptimizedByteCode: TArray<number>, NumTempRegisters: number, NumUserPtrs: number, Parameters: UE.NiagaraParameters, InternalParameters: UE.NiagaraParameters, ScriptLiterals: TArray<number>, Attributes: TArray<UE.NiagaraVariable>, DataUsage: UE.NiagaraScriptDataUsageInfo, DataSetToParameters: TMap<string, UE.NiagaraParameters>, AdditionalExternalFunctions: TArray<UE.NiagaraFunctionSignature>, DataInterfaceInfo: TArray<UE.NiagaraScriptDataInterfaceCompileInfo>, CalledVMExternalFunctions: TArray<UE.VMExternalFunctionBindingInfo>, ReadDataSets: TArray<UE.NiagaraDataSetID>, WriteDataSets: TArray<UE.NiagaraDataSetProperties>, StatScopes: TArray<UE.NiagaraStatScope>, LastHlslTranslation: string, LastHlslTranslationGPU: string, LastAssemblyTranslation: string, LastOpCount: number, DIParamInfo: TArray<UE.NiagaraDataInterfaceGPUParamInfo>, ParameterCollectionPaths: TArray<string>, LastCompileStatus: UE.ENiagaraScriptCompileStatus, SimulationStageMetaData: TArray<UE.SimulationStageMetaData>, bReadsAttributeData: boolean, ErrorMsg: string, CompileTime: number, LastCompileEvents: TArray<UE.NiagaraCompileEvent>, bReadsSignificanceIndex: boolean);
        ByteCode: TArray<number>;
        OptimizedByteCode: TArray<number>;
        NumTempRegisters: number;
        NumUserPtrs: number;
        Parameters: UE.NiagaraParameters;
        InternalParameters: UE.NiagaraParameters;
        ScriptLiterals: TArray<number>;
        Attributes: TArray<UE.NiagaraVariable>;
        DataUsage: UE.NiagaraScriptDataUsageInfo;
        DataSetToParameters: TMap<string, UE.NiagaraParameters>;
        AdditionalExternalFunctions: TArray<UE.NiagaraFunctionSignature>;
        DataInterfaceInfo: TArray<UE.NiagaraScriptDataInterfaceCompileInfo>;
        CalledVMExternalFunctions: TArray<UE.VMExternalFunctionBindingInfo>;
        ReadDataSets: TArray<UE.NiagaraDataSetID>;
        WriteDataSets: TArray<UE.NiagaraDataSetProperties>;
        StatScopes: TArray<UE.NiagaraStatScope>;
        LastHlslTranslation: string;
        LastHlslTranslationGPU: string;
        LastAssemblyTranslation: string;
        LastOpCount: number;
        DIParamInfo: TArray<UE.NiagaraDataInterfaceGPUParamInfo>;
        ParameterCollectionPaths: TArray<string>;
        LastCompileStatus: UE.ENiagaraScriptCompileStatus;
        SimulationStageMetaData: TArray<UE.SimulationStageMetaData>;
        bReadsAttributeData: boolean;
        ErrorMsg: string;
        CompileTime: number;
        LastCompileEvents: TArray<UE.NiagaraCompileEvent>;
        bReadsSignificanceIndex: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVMExecutableData_0__: boolean;
    }
    
    class NiagaraParameterCollectionInstance extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Collection: UE.NiagaraParameterCollection;
        OverridenParameters: TArray<UE.NiagaraVariable>;
        ParameterStorage: UE.NiagaraParameterStore;
        GetBoolParameter(InVariableName: string) : boolean;
        GetColorParameter(InVariableName: string) : UE.LinearColor;
        GetFloatParameter(InVariableName: string) : number;
        GetIntParameter(InVariableName: string) : number;
        GetQuatParameter(InVariableName: string) : UE.Quat;
        GetVector2DParameter(InVariableName: string) : UE.Vector2D;
        GetVector4Parameter(InVariableName: string) : UE.Vector4;
        GetVectorParameter(InVariableName: string) : UE.Vector;
        SetBoolParameter(InVariableName: string, InValue: boolean) : void;
        SetColorParameter(InVariableName: string, InValue: UE.LinearColor) : void;
        SetFloatParameter(InVariableName: string, InValue: number) : void;
        SetIntParameter(InVariableName: string, InValue: number) : void;
        SetQuatParameter(InVariableName: string, InValue: UE.Quat) : void;
        SetVector2DParameter(InVariableName: string, InValue: UE.Vector2D) : void;
        SetVector4Parameter(InVariableName: string, InValue: UE.Vector4) : void;
        SetVectorParameter(InVariableName: string, InValue: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraParameterCollectionInstance;
        static Load(InName: string): NiagaraParameterCollectionInstance;
    
        __tid_NiagaraParameterCollectionInstance_0__: boolean;
    }
    
    class NiagaraParameterCollection extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Namespace: string;
        Parameters: TArray<UE.NiagaraVariable>;
        SourceMaterialCollection: UE.MaterialParameterCollection;
        DefaultInstance: UE.NiagaraParameterCollectionInstance;
        CompileId: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraParameterCollection;
        static Load(InName: string): NiagaraParameterCollection;
    
        __tid_NiagaraParameterCollection_0__: boolean;
    }
    
    class NiagaraScriptDataInterfaceInfo {
        constructor();
        constructor(DataInterface: UE.NiagaraDataInterface, Name: string, UserPtrIdx: number, Type: UE.NiagaraTypeDefinition, RegisteredParameterMapRead: string, RegisteredParameterMapWrite: string);
        DataInterface: UE.NiagaraDataInterface;
        Name: string;
        UserPtrIdx: number;
        Type: UE.NiagaraTypeDefinition;
        RegisteredParameterMapRead: string;
        RegisteredParameterMapWrite: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptDataInterfaceInfo_0__: boolean;
    }
    
    class NiagaraScript extends UE.NiagaraScriptBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Usage: UE.ENiagaraScriptUsage;
        UsageIndex: number;
        UsageId: UE.Guid;
        ModuleUsageBitmask: number;
        Category: string;
        ProvidedDependencies: TArray<string>;
        RequiredDependencies: TArray<UE.NiagaraModuleDependency>;
        bDeprecated: boolean;
        DeprecationMessage: string;
        DeprecationRecommendation: UE.NiagaraScript;
        ConversionUtility: UE.Class;
        bExperimental: boolean;
        ExperimentalMessage: string;
        bExposeToLibrary: boolean;
        LibraryVisibility: UE.ENiagaraScriptLibraryVisibility;
        RapidIterationParameters: UE.NiagaraParameterStore;
        NumericOutputTypeSelectionMode: UE.ENiagaraNumericOutputTypeSelectionMode;
        Description: string;
        Keywords: string;
        CollapsedViewFormat: string;
        Highlights: TArray<UE.NiagaraScriptHighlight>;
        ScriptMetaData: TMap<string, string>;
        ScriptExecutionParamStoreCPU: UE.NiagaraScriptExecutionParameterStore;
        ScriptExecutionParamStoreGPU: UE.NiagaraScriptExecutionParameterStore;
        ScriptExecutionParamStore: UE.NiagaraScriptExecutionParameterStore;
        ScriptExecutionBoundParameters: TArray<UE.NiagaraBoundParameter>;
        Source: UE.NiagaraScriptSourceBase;
        CachedScriptVMId: UE.NiagaraVMExecutableDataId;
        LastGeneratedVMId: UE.NiagaraVMExecutableDataId;
        ActiveCompileRoots: TArray<UE.Object>;
        CachedScriptVM: UE.NiagaraVMExecutableData;
        CachedParameterCollectionReferences: TArray<UE.NiagaraParameterCollection>;
        CachedDefaultDataInterfaces: TArray<UE.NiagaraScriptDataInterfaceInfo>;
        RaiseOnGPUCompilationComplete() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraScript;
        static Load(InName: string): NiagaraScript;
    
        __tid_NiagaraScript_0__: boolean;
    }
    
    enum ENiagaraTickBehavior { UsePrereqs, UseComponentTickGroup, ForceTickFirst, ForceTickLast, ENiagaraTickBehavior_MAX, __typeKeyDoNoAccess}
    class NiagaraUserRedirectionParameterStore extends UE.NiagaraParameterStore {
        constructor();
        constructor(UserParameterRedirects: TMap<UE.NiagaraVariable, UE.NiagaraVariable>);
        UserParameterRedirects: TMap<UE.NiagaraVariable, UE.NiagaraVariable>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraUserRedirectionParameterStore_0__: boolean;
    }
    
    enum ENiagaraVariantMode { None, Object, DataInterface, Bytes, ENiagaraVariantMode_MAX, __typeKeyDoNoAccess}
    class NiagaraVariant {
        constructor();
        constructor(Object: UE.Object, DataInterface: UE.NiagaraDataInterface, Bytes: TArray<number>, CurrentMode: UE.ENiagaraVariantMode);
        Object: UE.Object;
        DataInterface: UE.NiagaraDataInterface;
        Bytes: TArray<number>;
        CurrentMode: UE.ENiagaraVariantMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariant_0__: boolean;
    }
    
    class NiagaraDeviceProfileStateEntry {
        constructor();
        constructor(ProfileName: string, QualityLevelMask: number, SetQualityLevelMask: number);
        ProfileName: string;
        QualityLevelMask: number;
        SetQualityLevelMask: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraDeviceProfileStateEntry_0__: boolean;
    }
    
    class NiagaraPlatformSetCVarCondition {
        constructor();
        constructor(CVarName: string, Value: boolean, MinInt: number, MaxInt: number, MinFloat: number, MaxFloat: number, bUseMinInt: boolean, bUseMaxInt: boolean, bUseMinFloat: boolean, bUseMaxFloat: boolean);
        CVarName: string;
        Value: boolean;
        MinInt: number;
        MaxInt: number;
        MinFloat: number;
        MaxFloat: number;
        bUseMinInt: boolean;
        bUseMaxInt: boolean;
        bUseMinFloat: boolean;
        bUseMaxFloat: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraPlatformSetCVarCondition_0__: boolean;
    }
    
    class NiagaraPlatformSet {
        constructor();
        constructor(QualityLevelMask: number, DeviceProfileStates: TArray<UE.NiagaraDeviceProfileStateEntry>, CVarConditions: TArray<UE.NiagaraPlatformSetCVarCondition>);
        QualityLevelMask: number;
        DeviceProfileStates: TArray<UE.NiagaraDeviceProfileStateEntry>;
        CVarConditions: TArray<UE.NiagaraPlatformSetCVarCondition>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraPlatformSet_0__: boolean;
    }
    
    class NiagaraRendererProperties extends UE.NiagaraMergeable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Platforms: UE.NiagaraPlatformSet;
        SortOrderHint: number;
        bIsEnabled: boolean;
        bMotionBlurEnabled: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraRendererProperties;
        static Load(InName: string): NiagaraRendererProperties;
    
        __tid_NiagaraRendererProperties_0__: boolean;
    }
    
    class NiagaraMaterialOverride {
        constructor();
        constructor(Material: UE.MaterialInterface, MaterialSubIndex: number, EmitterRendererProperty: UE.NiagaraRendererProperties);
        Material: UE.MaterialInterface;
        MaterialSubIndex: number;
        EmitterRendererProperty: UE.NiagaraRendererProperties;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraMaterialOverride_0__: boolean;
    }
    
    class TextureRenderTarget extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetGamma: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTarget;
        static Load(InName: string): TextureRenderTarget;
    
        __tid_TextureRenderTarget_0__: boolean;
    }
    
    enum ENiagaraAgeUpdateMode { TickDeltaTime, DesiredAge, DesiredAgeNoSeek, ENiagaraAgeUpdateMode_MAX, __typeKeyDoNoAccess}
    class NiagaraComponent extends UE.FXSystemComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Asset: UE.NiagaraSystem;
        TickBehavior: UE.ENiagaraTickBehavior;
        OverrideParameters: UE.NiagaraUserRedirectionParameterStore;
        EditorOverridesValue: TMap<string, boolean>;
        TemplateParameterOverrides: TMap<UE.NiagaraVariableBase, UE.NiagaraVariant>;
        InstanceParameterOverrides: TMap<UE.NiagaraVariableBase, UE.NiagaraVariant>;
        bForceSolo: boolean;
        bEnableGpuComputeDebug: boolean;
        bAutoDestroy: boolean;
        bRenderingEnabled: boolean;
        bAutoManageAttachment: boolean;
        bAutoAttachWeldSimulatedBodies: boolean;
        MaxTimeBeforeForceUpdateTransform: number;
        EmitterMaterials: TArray<UE.NiagaraMaterialOverride>;
        OnSystemFinished: $MulticastDelegate<(PSystem: $Nullable<UE.NiagaraComponent>) => void>;
        AutoAttachParent: TWeakObjectPtr<UE.SceneComponent>;
        AutoAttachSocketName: string;
        AutoAttachLocationRule: UE.EAttachmentRule;
        AutoAttachRotationRule: UE.EAttachmentRule;
        AutoAttachScaleRule: UE.EAttachmentRule;
        bWaitForCompilationOnActivate: boolean;
        AdvanceSimulation(TickCount: number, TickDeltaSeconds: number) : void;
        AdvanceSimulationByTime(SimulateTime: number, TickDeltaSeconds: number) : void;
        GetAgeUpdateMode() : UE.ENiagaraAgeUpdateMode;
        GetAsset() : UE.NiagaraSystem;
        GetDataInterface(Name: string) : UE.NiagaraDataInterface;
        GetDesiredAge() : number;
        GetForceSolo() : boolean;
        GetMaxSimTime() : number;
        GetNiagaraParticlePositions_DebugOnly(InEmitterName: string) : TArray<UE.Vector>;
        GetNiagaraParticleValues_DebugOnly(InEmitterName: string, InValueName: string) : TArray<number>;
        GetNiagaraParticleValueVec3_DebugOnly(InEmitterName: string, InValueName: string) : TArray<UE.Vector>;
        GetPreviewLODDistance() : number;
        GetPreviewLODDistanceEnabled() : boolean;
        GetSeekDelta() : number;
        GetTickBehavior() : UE.ENiagaraTickBehavior;
        IsPaused() : boolean;
        ReinitializeSystem() : void;
        ResetSystem() : void;
        SeekToDesiredAge(InDesiredAge: number) : void;
        SetAgeUpdateMode(InAgeUpdateMode: UE.ENiagaraAgeUpdateMode) : void;
        SetAllowScalability(bAllow: boolean) : void;
        SetAsset(InAsset: $Nullable<UE.NiagaraSystem>) : void;
        SetAutoDestroy(bInAutoDestroy: boolean) : void;
        SetCanRenderWhileSeeking(bInCanRenderWhileSeeking: boolean) : void;
        SetDesiredAge(InDesiredAge: number) : void;
        SetForceSolo(bInForceSolo: boolean) : void;
        SetGpuComputeDebug(bEnableDebug: boolean) : void;
        SetMaxSimTime(InMaxTime: number) : void;
        SetNiagaraVariableActor(InVariableName: string, Actor: $Nullable<UE.Actor>) : void;
        SetNiagaraVariableBool(InVariableName: string, InValue: boolean) : void;
        SetNiagaraVariableFloat(InVariableName: string, InValue: number) : void;
        SetNiagaraVariableInt(InVariableName: string, InValue: number) : void;
        SetNiagaraVariableLinearColor(InVariableName: string, InValue: UE.LinearColor) : void;
        SetNiagaraVariableObject(InVariableName: string, Object: $Nullable<UE.Object>) : void;
        SetNiagaraVariableQuat(InVariableName: string, InValue: UE.Quat) : void;
        SetNiagaraVariableVec2(InVariableName: string, InValue: UE.Vector2D) : void;
        SetNiagaraVariableVec3(InVariableName: string, InValue: UE.Vector) : void;
        SetNiagaraVariableVec4(InVariableName: string, InValue: UE.Vector4) : void;
        SetPaused(bInPaused: boolean) : void;
        SetPreviewLODDistance(bEnablePreviewLODDistance: boolean, PreviewLODDistance: number) : void;
        SetRenderingEnabled(bInRenderingEnabled: boolean) : void;
        SetSeekDelta(InSeekDelta: number) : void;
        SetTickBehavior(NewTickBehavior: UE.ENiagaraTickBehavior) : void;
        SetVariableActor(InVariableName: string, Actor: $Nullable<UE.Actor>) : void;
        SetVariableBool(InVariableName: string, InValue: boolean) : void;
        SetVariableFloat(InVariableName: string, InValue: number) : void;
        SetVariableInt(InVariableName: string, InValue: number) : void;
        SetVariableLinearColor(InVariableName: string, InValue: UE.LinearColor) : void;
        SetVariableMaterial(InVariableName: string, Object: $Nullable<UE.MaterialInterface>) : void;
        SetVariableObject(InVariableName: string, Object: $Nullable<UE.Object>) : void;
        SetVariableQuat(InVariableName: string, InValue: UE.Quat) : void;
        SetVariableTextureRenderTarget(InVariableName: string, TextureRenderTarget: $Nullable<UE.TextureRenderTarget>) : void;
        SetVariableVec2(InVariableName: string, InValue: UE.Vector2D) : void;
        SetVariableVec3(InVariableName: string, InValue: UE.Vector) : void;
        SetVariableVec4(InVariableName: string, InValue: UE.Vector4) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraComponent;
        static Load(InName: string): NiagaraComponent;
    
        __tid_NiagaraComponent_0__: boolean;
    }
    
    class NiagaraSystemUpdateContext {
        constructor();
        constructor(ComponentsToReset: TArray<UE.NiagaraComponent>, ComponentsToReInit: TArray<UE.NiagaraComponent>, ComponentsToNotifySimDestroy: TArray<UE.NiagaraComponent>, SystemSimsToDestroy: TArray<UE.NiagaraSystem>);
        ComponentsToReset: TArray<UE.NiagaraComponent>;
        ComponentsToReInit: TArray<UE.NiagaraComponent>;
        ComponentsToNotifySimDestroy: TArray<UE.NiagaraComponent>;
        SystemSimsToDestroy: TArray<UE.NiagaraSystem>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSystemUpdateContext_0__: boolean;
    }
    
    enum ENiagaraScalabilityUpdateFrequency { SpawnOnly, Low, Medium, High, Continuous, ENiagaraScalabilityUpdateFrequency_MAX, __typeKeyDoNoAccess}
    enum ENiagaraCullReaction { Deactivate, DeactivateImmediate, DeactivateResume, DeactivateImmediateResume, ENiagaraCullReaction_MAX, __typeKeyDoNoAccess}
    class NiagaraSignificanceHandler extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSignificanceHandler;
        static Load(InName: string): NiagaraSignificanceHandler;
    
        __tid_NiagaraSignificanceHandler_0__: boolean;
    }
    
    class NiagaraSystemScalabilitySettings {
        constructor();
        constructor(Platforms: UE.NiagaraPlatformSet, bCullByDistance: boolean, bCullMaxInstanceCount: boolean, bCullPerSystemMaxInstanceCount: boolean, bCullByMaxTimeWithoutRender: boolean, MaxDistance: number, MaxInstances: number, MaxSystemInstances: number, MaxTimeWithoutRender: number);
        Platforms: UE.NiagaraPlatformSet;
        bCullByDistance: boolean;
        bCullMaxInstanceCount: boolean;
        bCullPerSystemMaxInstanceCount: boolean;
        bCullByMaxTimeWithoutRender: boolean;
        MaxDistance: number;
        MaxInstances: number;
        MaxSystemInstances: number;
        MaxTimeWithoutRender: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSystemScalabilitySettings_0__: boolean;
    }
    
    class NiagaraSystemScalabilitySettingsArray {
        constructor();
        constructor(Settings: TArray<UE.NiagaraSystemScalabilitySettings>);
        Settings: TArray<UE.NiagaraSystemScalabilitySettings>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSystemScalabilitySettingsArray_0__: boolean;
    }
    
    class NiagaraEmitterScalabilitySettings {
        constructor();
        constructor(Platforms: UE.NiagaraPlatformSet, bScaleSpawnCount: boolean, SpawnCountScale: number);
        Platforms: UE.NiagaraPlatformSet;
        bScaleSpawnCount: boolean;
        SpawnCountScale: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterScalabilitySettings_0__: boolean;
    }
    
    class NiagaraEmitterScalabilitySettingsArray {
        constructor();
        constructor(Settings: TArray<UE.NiagaraEmitterScalabilitySettings>);
        Settings: TArray<UE.NiagaraEmitterScalabilitySettings>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterScalabilitySettingsArray_0__: boolean;
    }
    
    class NiagaraEffectType extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UpdateFrequency: UE.ENiagaraScalabilityUpdateFrequency;
        CullReaction: UE.ENiagaraCullReaction;
        SignificanceHandler: UE.NiagaraSignificanceHandler;
        DetailLevelScalabilitySettings: TArray<UE.NiagaraSystemScalabilitySettings>;
        SystemScalabilitySettings: UE.NiagaraSystemScalabilitySettingsArray;
        EmitterScalabilitySettings: UE.NiagaraEmitterScalabilitySettingsArray;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEffectType;
        static Load(InName: string): NiagaraEffectType;
    
        __tid_NiagaraEffectType_0__: boolean;
    }
    
    class NiagaraSystemScalabilityOverride extends UE.NiagaraSystemScalabilitySettings {
        constructor();
        constructor(bOverrideDistanceSettings: boolean, bOverrideInstanceCountSettings: boolean, bOverridePerSystemInstanceCountSettings: boolean, bOverrideTimeSinceRendererSettings: boolean);
        bOverrideDistanceSettings: boolean;
        bOverrideInstanceCountSettings: boolean;
        bOverridePerSystemInstanceCountSettings: boolean;
        bOverrideTimeSinceRendererSettings: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSystemScalabilityOverride_0__: boolean;
    }
    
    class NiagaraSystemScalabilityOverrides {
        constructor();
        constructor(Overrides: TArray<UE.NiagaraSystemScalabilityOverride>);
        Overrides: TArray<UE.NiagaraSystemScalabilityOverride>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSystemScalabilityOverrides_0__: boolean;
    }
    
    enum EParticleAllocationMode { AutomaticEstimate, ManualEstimate, EParticleAllocationMode_MAX, __typeKeyDoNoAccess}
    class NiagaraEventReceiverProperties {
        constructor();
        constructor(Name: string, SourceEventGenerator: string, SourceEmitter: string);
        Name: string;
        SourceEventGenerator: string;
        SourceEmitter: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEventReceiverProperties_0__: boolean;
    }
    
    class NiagaraTypeLayoutInfo {
        constructor();
        constructor(FloatComponentByteOffsets: TArray<number>, FloatComponentRegisterOffsets: TArray<number>, Int32ComponentByteOffsets: TArray<number>, Int32ComponentRegisterOffsets: TArray<number>, HalfComponentByteOffsets: TArray<number>, HalfComponentRegisterOffsets: TArray<number>);
        FloatComponentByteOffsets: TArray<number>;
        FloatComponentRegisterOffsets: TArray<number>;
        Int32ComponentByteOffsets: TArray<number>;
        Int32ComponentRegisterOffsets: TArray<number>;
        HalfComponentByteOffsets: TArray<number>;
        HalfComponentRegisterOffsets: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraTypeLayoutInfo_0__: boolean;
    }
    
    class NiagaraVariableLayoutInfo {
        constructor();
        constructor(FloatComponentStart: number, Int32ComponentStart: number, HalfComponentStart: number, LayoutInfo: UE.NiagaraTypeLayoutInfo);
        FloatComponentStart: number;
        Int32ComponentStart: number;
        HalfComponentStart: number;
        LayoutInfo: UE.NiagaraTypeLayoutInfo;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableLayoutInfo_0__: boolean;
    }
    
    enum ENiagaraSimTarget { CPUSim, GPUComputeSim, ENiagaraSimTarget_MAX, __typeKeyDoNoAccess}
    class NiagaraDataSetCompiledData {
        constructor();
        constructor(Variables: TArray<UE.NiagaraVariable>, VariableLayouts: TArray<UE.NiagaraVariableLayoutInfo>, ID: UE.NiagaraDataSetID, TotalFloatComponents: number, TotalInt32Components: number, TotalHalfComponents: number, bRequiresPersistentIDs: boolean, SimTarget: UE.ENiagaraSimTarget);
        Variables: TArray<UE.NiagaraVariable>;
        VariableLayouts: TArray<UE.NiagaraVariableLayoutInfo>;
        ID: UE.NiagaraDataSetID;
        TotalFloatComponents: number;
        TotalInt32Components: number;
        TotalHalfComponents: number;
        bRequiresPersistentIDs: boolean;
        SimTarget: UE.ENiagaraSimTarget;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraDataSetCompiledData_0__: boolean;
    }
    
    class NiagaraEventGeneratorProperties {
        constructor();
        constructor(MaxEventsPerFrame: number, ID: string, DataSetCompiledData: UE.NiagaraDataSetCompiledData);
        MaxEventsPerFrame: number;
        ID: string;
        DataSetCompiledData: UE.NiagaraDataSetCompiledData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEventGeneratorProperties_0__: boolean;
    }
    
    class NiagaraEmitterScriptProperties {
        constructor();
        constructor(Script: UE.NiagaraScript, EventReceivers: TArray<UE.NiagaraEventReceiverProperties>, EventGenerators: TArray<UE.NiagaraEventGeneratorProperties>);
        Script: UE.NiagaraScript;
        EventReceivers: TArray<UE.NiagaraEventReceiverProperties>;
        EventGenerators: TArray<UE.NiagaraEventGeneratorProperties>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterScriptProperties_0__: boolean;
    }
    
    class NiagaraDetailsLevelScaleOverrides {
        constructor();
        constructor(Low: number, Medium: number, High: number, Epic: number, Cine: number);
        Low: number;
        Medium: number;
        High: number;
        Epic: number;
        Cine: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraDetailsLevelScaleOverrides_0__: boolean;
    }
    
    class NiagaraEmitterScalabilityOverride extends UE.NiagaraEmitterScalabilitySettings {
        constructor();
        constructor(bOverrideSpawnCountScale: boolean);
        bOverrideSpawnCountScale: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterScalabilityOverride_0__: boolean;
    }
    
    class NiagaraEmitterScalabilityOverrides {
        constructor();
        constructor(Overrides: TArray<UE.NiagaraEmitterScalabilityOverride>);
        Overrides: TArray<UE.NiagaraEmitterScalabilityOverride>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterScalabilityOverrides_0__: boolean;
    }
    
    class NiagaraEditorDataBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEditorDataBase;
        static Load(InName: string): NiagaraEditorDataBase;
    
        __tid_NiagaraEditorDataBase_0__: boolean;
    }
    
    enum EScriptExecutionMode { EveryParticle, SpawnedParticles, SingleParticle, EScriptExecutionMode_MAX, __typeKeyDoNoAccess}
    class NiagaraEventScriptProperties extends UE.NiagaraEmitterScriptProperties {
        constructor();
        constructor(ExecutionMode: UE.EScriptExecutionMode, SpawnNumber: number, MaxEventsPerFrame: number, SourceEmitterID: UE.Guid, SourceEventName: string, bRandomSpawnNumber: boolean, MinSpawnNumber: number);
        ExecutionMode: UE.EScriptExecutionMode;
        SpawnNumber: number;
        MaxEventsPerFrame: number;
        SourceEmitterID: UE.Guid;
        SourceEventName: string;
        bRandomSpawnNumber: boolean;
        MinSpawnNumber: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEventScriptProperties_0__: boolean;
    }
    
    class NiagaraSimulationStageBase extends UE.NiagaraMergeable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Script: UE.NiagaraScript;
        SimulationStageName: string;
        bEnabled: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSimulationStageBase;
        static Load(InName: string): NiagaraSimulationStageBase;
    
        __tid_NiagaraSimulationStageBase_0__: boolean;
    }
    
    class NiagaraMessageDataBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraMessageDataBase;
        static Load(InName: string): NiagaraMessageDataBase;
    
        __tid_NiagaraMessageDataBase_0__: boolean;
    }
    
    class NiagaraEmitter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bLocalSpace: boolean;
        bDeterminism: boolean;
        RandomSeed: number;
        AllocationMode: UE.EParticleAllocationMode;
        PreAllocationCount: number;
        UpdateScriptProps: UE.NiagaraEmitterScriptProperties;
        SpawnScriptProps: UE.NiagaraEmitterScriptProperties;
        EmitterSpawnScriptProps: UE.NiagaraEmitterScriptProperties;
        EmitterUpdateScriptProps: UE.NiagaraEmitterScriptProperties;
        AttributesToPreserve: TArray<string>;
        SimTarget: UE.ENiagaraSimTarget;
        FixedBounds: UE.Box;
        MinDetailLevel: number;
        MaxDetailLevel: number;
        GlobalSpawnCountScaleOverrides: UE.NiagaraDetailsLevelScaleOverrides;
        Platforms: UE.NiagaraPlatformSet;
        ScalabilityOverrides: UE.NiagaraEmitterScalabilityOverrides;
        bInterpolatedSpawning: boolean;
        bFixedBounds: boolean;
        bUseMinDetailLevel: boolean;
        bUseMaxDetailLevel: boolean;
        bOverrideGlobalSpawnCountScale: boolean;
        bRequiresPersistentIDs: boolean;
        bCombineEventSpawn: boolean;
        MaxDeltaTimePerTick: number;
        DefaultShaderStageIndex: number;
        MaxUpdateIterations: number;
        SpawnStages: TSet<number>;
        bSimulationStagesEnabled: boolean;
        bDeprecatedShaderStagesEnabled: boolean;
        bLimitDeltaTime: boolean;
        GraphSource: UE.NiagaraScriptSourceBase;
        bBakeOutRapidIteration: boolean;
        ThumbnailImage: UE.Texture2D;
        ThumbnailImageOutOfDate: boolean;
        bExposeToLibrary: boolean;
        bIsTemplateAsset: boolean;
        TemplateAssetDescription: string;
        ScratchPadScripts: TArray<UE.NiagaraScript>;
        ParentScratchPadScripts: TArray<UE.NiagaraScript>;
        ChangeId: UE.Guid;
        EditorData: UE.NiagaraEditorDataBase;
        UniqueEmitterName: string;
        RendererProperties: TArray<UE.NiagaraRendererProperties>;
        EventHandlerScriptProps: TArray<UE.NiagaraEventScriptProperties>;
        SimulationStages: TArray<UE.NiagaraSimulationStageBase>;
        GPUComputeScript: UE.NiagaraScript;
        SharedEventGeneratorIds: TArray<string>;
        Parent: UE.NiagaraEmitter;
        ParentAtLastMerge: UE.NiagaraEmitter;
        MessageKeyToMessageMap: TMap<UE.Guid, UE.NiagaraMessageDataBase>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEmitter;
        static Load(InName: string): NiagaraEmitter;
    
        __tid_NiagaraEmitter_0__: boolean;
    }
    
    class NiagaraEmitterHandle {
        constructor();
        constructor(Id: UE.Guid, IdName: string, bIsEnabled: boolean, Name: string, Source: UE.NiagaraEmitter, LastMergedSource: UE.NiagaraEmitter, Instance: UE.NiagaraEmitter);
        Id: UE.Guid;
        IdName: string;
        bIsEnabled: boolean;
        Name: string;
        Source: UE.NiagaraEmitter;
        LastMergedSource: UE.NiagaraEmitter;
        Instance: UE.NiagaraEmitter;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterHandle_0__: boolean;
    }
    
    class NiagaraSystemCompileRequest {
        constructor();
        constructor(RootObjects: TArray<UE.Object>);
        RootObjects: TArray<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSystemCompileRequest_0__: boolean;
    }
    
    class NiagaraParameterDataSetBinding {
        constructor();
        constructor(ParameterOffset: number, DataSetComponentOffset: number);
        ParameterOffset: number;
        DataSetComponentOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraParameterDataSetBinding_0__: boolean;
    }
    
    class NiagaraParameterDataSetBindingCollection {
        constructor();
        constructor(FloatOffsets: TArray<UE.NiagaraParameterDataSetBinding>, Int32Offsets: TArray<UE.NiagaraParameterDataSetBinding>);
        FloatOffsets: TArray<UE.NiagaraParameterDataSetBinding>;
        Int32Offsets: TArray<UE.NiagaraParameterDataSetBinding>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraParameterDataSetBindingCollection_0__: boolean;
    }
    
    class NiagaraSystemCompiledData {
        constructor();
        constructor(InstanceParamStore: UE.NiagaraParameterStore, DataSetCompiledData: UE.NiagaraDataSetCompiledData, SpawnInstanceParamsDataSetCompiledData: UE.NiagaraDataSetCompiledData, UpdateInstanceParamsDataSetCompiledData: UE.NiagaraDataSetCompiledData, SpawnInstanceGlobalBinding: UE.NiagaraParameterDataSetBindingCollection, SpawnInstanceSystemBinding: UE.NiagaraParameterDataSetBindingCollection, SpawnInstanceOwnerBinding: UE.NiagaraParameterDataSetBindingCollection, SpawnInstanceEmitterBindings: TArray<UE.NiagaraParameterDataSetBindingCollection>, UpdateInstanceGlobalBinding: UE.NiagaraParameterDataSetBindingCollection, UpdateInstanceSystemBinding: UE.NiagaraParameterDataSetBindingCollection, UpdateInstanceOwnerBinding: UE.NiagaraParameterDataSetBindingCollection, UpdateInstanceEmitterBindings: TArray<UE.NiagaraParameterDataSetBindingCollection>);
        InstanceParamStore: UE.NiagaraParameterStore;
        DataSetCompiledData: UE.NiagaraDataSetCompiledData;
        SpawnInstanceParamsDataSetCompiledData: UE.NiagaraDataSetCompiledData;
        UpdateInstanceParamsDataSetCompiledData: UE.NiagaraDataSetCompiledData;
        SpawnInstanceGlobalBinding: UE.NiagaraParameterDataSetBindingCollection;
        SpawnInstanceSystemBinding: UE.NiagaraParameterDataSetBindingCollection;
        SpawnInstanceOwnerBinding: UE.NiagaraParameterDataSetBindingCollection;
        SpawnInstanceEmitterBindings: TArray<UE.NiagaraParameterDataSetBindingCollection>;
        UpdateInstanceGlobalBinding: UE.NiagaraParameterDataSetBindingCollection;
        UpdateInstanceSystemBinding: UE.NiagaraParameterDataSetBindingCollection;
        UpdateInstanceOwnerBinding: UE.NiagaraParameterDataSetBindingCollection;
        UpdateInstanceEmitterBindings: TArray<UE.NiagaraParameterDataSetBindingCollection>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSystemCompiledData_0__: boolean;
    }
    
    class NiagaraSystem extends UE.FXSystemAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ThumbnailImage: UE.Texture2D;
        ThumbnailImageOutOfDate: boolean;
        bExposeToLibrary: boolean;
        bIsTemplateAsset: boolean;
        TemplateAssetDescription: string;
        ScratchPadScripts: TArray<UE.NiagaraScript>;
        EditorOnlyAddedParameters: UE.NiagaraParameterStore;
        UpdateContext: UE.NiagaraSystemUpdateContext;
        bBakeOutRapidIteration: boolean;
        bBakeOutRapidIterationOnCook: boolean;
        bCompressAttributes: boolean;
        bTrimAttributes: boolean;
        bTrimAttributesOnCook: boolean;
        bDumpDebugSystemInfo: boolean;
        bDumpDebugEmitterInfo: boolean;
        bRequireCurrentFrameData: boolean;
        bFixedBounds: boolean;
        EffectType: UE.NiagaraEffectType;
        bOverrideScalabilitySettings: boolean;
        ScalabilityOverrides: TArray<UE.NiagaraSystemScalabilityOverride>;
        SystemScalabilityOverrides: UE.NiagaraSystemScalabilityOverrides;
        EmitterHandles: TArray<UE.NiagaraEmitterHandle>;
        ParameterCollectionOverrides: TArray<UE.NiagaraParameterCollectionInstance>;
        ActiveCompilations: TArray<UE.NiagaraSystemCompileRequest>;
        SystemSpawnScript: UE.NiagaraScript;
        SystemUpdateScript: UE.NiagaraScript;
        SystemCompiledData: UE.NiagaraSystemCompiledData;
        ExposedParameters: UE.NiagaraUserRedirectionParameterStore;
        EditorData: UE.NiagaraEditorDataBase;
        FixedBounds: UE.Box;
        bAutoDeactivate: boolean;
        WarmupTime: number;
        WarmupTickCount: number;
        WarmupTickDelta: number;
        bHasSystemScriptDIsWithPerInstanceData: boolean;
        UserDINamesReadInSystemScripts: TArray<string>;
        MessageKeyToMessageMap: TMap<UE.Guid, UE.NiagaraMessageDataBase>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSystem;
        static Load(InName: string): NiagaraSystem;
    
        __tid_NiagaraSystem_0__: boolean;
    }
    
    class AnimNotify_PlayNiagaraEffect extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Template: UE.NiagaraSystem;
        LocationOffset: UE.Vector;
        RotationOffset: UE.Rotator;
        Scale: UE.Vector;
        bAbsoluteScale: boolean;
        Attached: boolean;
        SocketName: string;
        GetSpawnedEffect() : UE.FXSystemComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_PlayNiagaraEffect;
        static Load(InName: string): AnimNotify_PlayNiagaraEffect;
    
        __tid_AnimNotify_PlayNiagaraEffect_0__: boolean;
    }
    
    class AnimNotify_PlayParticleEffect extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PSTemplate: UE.ParticleSystem;
        LocationOffset: UE.Vector;
        RotationOffset: UE.Rotator;
        Scale: UE.Vector;
        Attached: boolean;
        SocketName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_PlayParticleEffect;
        static Load(InName: string): AnimNotify_PlayParticleEffect;
    
        __tid_AnimNotify_PlayParticleEffect_0__: boolean;
    }
    
    class AnimNotify_PlaySound extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sound: UE.SoundBase;
        VolumeMultiplier: number;
        PitchMultiplier: number;
        bFollow: boolean;
        bPreviewIgnoreAttenuation: boolean;
        AttachName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_PlaySound;
        static Load(InName: string): AnimNotify_PlaySound;
    
        __tid_AnimNotify_PlaySound_0__: boolean;
    }
    
    class AnimNotify_ResetClothingSimulation extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_ResetClothingSimulation;
        static Load(InName: string): AnimNotify_ResetClothingSimulation;
    
        __tid_AnimNotify_ResetClothingSimulation_0__: boolean;
    }
    
    class AnimNotify_ResetDynamics extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_ResetDynamics;
        static Load(InName: string): AnimNotify_ResetDynamics;
    
        __tid_AnimNotify_ResetDynamics_0__: boolean;
    }
    
    class AnimNotify_ResumeClothingSimulation extends UE.AnimNotify {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotify_ResumeClothingSimulation;
        static Load(InName: string): AnimNotify_ResumeClothingSimulation;
    
        __tid_AnimNotify_ResumeClothingSimulation_0__: boolean;
    }
    
    class AnimNotifyState_DisableRootMotion extends UE.AnimNotifyState {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotifyState_DisableRootMotion;
        static Load(InName: string): AnimNotifyState_DisableRootMotion;
    
        __tid_AnimNotifyState_DisableRootMotion_0__: boolean;
    }
    
    class AnimNotifyState_TimedNiagaraEffect extends UE.AnimNotifyState {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Template: UE.NiagaraSystem;
        SocketName: string;
        LocationOffset: UE.Vector;
        RotationOffset: UE.Rotator;
        bDestroyAtEnd: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotifyState_TimedNiagaraEffect;
        static Load(InName: string): AnimNotifyState_TimedNiagaraEffect;
    
        __tid_AnimNotifyState_TimedNiagaraEffect_0__: boolean;
    }
    
    class AnimNotifyState_TimedParticleEffect extends UE.AnimNotifyState {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PSTemplate: UE.ParticleSystem;
        SocketName: string;
        LocationOffset: UE.Vector;
        RotationOffset: UE.Rotator;
        bDestroyAtEnd: boolean;
        PreviousPSTemplates: TArray<UE.ParticleSystem>;
        PreviousSocketNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotifyState_TimedParticleEffect;
        static Load(InName: string): AnimNotifyState_TimedParticleEffect;
    
        __tid_AnimNotifyState_TimedParticleEffect_0__: boolean;
    }
    
    class AnimNotifyState_Trail extends UE.AnimNotifyState {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PSTemplate: UE.ParticleSystem;
        FirstSocketName: string;
        SecondSocketName: string;
        WidthScaleMode: UE.ETrailWidthMode;
        WidthScaleCurve: string;
        bRecycleSpawnedSystems: boolean;
        bRenderGeometry: boolean;
        bRenderSpawnPoints: boolean;
        bRenderTangents: boolean;
        bRenderTessellation: boolean;
        OverridePSTemplate(MeshComp: $Nullable<UE.SkeletalMeshComponent>, Animation: $Nullable<UE.AnimSequenceBase>) : UE.ParticleSystem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimNotifyState_Trail;
        static Load(InName: string): AnimNotifyState_Trail;
    
        __tid_AnimNotifyState_Trail_0__: boolean;
    }
    
    class AnimPreviewAttacheInstance extends UE.AnimInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimPreviewAttacheInstance;
        static Load(InName: string): AnimPreviewAttacheInstance;
    
        __tid_AnimPreviewAttacheInstance_0__: boolean;
    }
    
    class AnimPreviewAttacheInstanceProxy extends UE.AnimInstanceProxy {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimPreviewAttacheInstanceProxy_0__: boolean;
    }
    
    class AnimSingleNodeInstance extends UE.AnimInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurrentAsset: UE.AnimationAsset;
        PostEvaluateAnimEvent: $Delegate<() => void>;
        GetAnimationAsset() : UE.AnimationAsset;
        GetLength() : number;
        PlayAnim(bIsLooping?: boolean /* = false */, InPlayRate?: number /* = 1.000000 */, InStartPosition?: number /* = 0.000000 */) : void;
        SetAnimationAsset(NewAsset: $Nullable<UE.AnimationAsset>, bIsLooping?: boolean /* = true */, InPlayRate?: number /* = 1.000000 */) : void;
        SetBlendSpaceInput(InBlendInput: UE.Vector) : void;
        SetLooping(bIsLooping: boolean) : void;
        SetPlaying(bIsPlaying: boolean) : void;
        SetPlayRate(InPlayRate: number) : void;
        SetPosition(InPosition: number, bFireNotifies?: boolean /* = true */) : void;
        SetPositionWithPreviousTime(InPosition: number, InPreviousTime: number, bFireNotifies?: boolean /* = true */) : void;
        SetPreviewCurveOverride(PoseName: string, Value: number, bRemoveIfZero: boolean) : void;
        SetReverse(bInReverse: boolean) : void;
        StopAnim() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSingleNodeInstance;
        static Load(InName: string): AnimSingleNodeInstance;
    
        __tid_AnimSingleNodeInstance_0__: boolean;
    }
    
    enum EMontagePreviewType { EMPT_Normal, EMPT_AllSections, EMPT_MAX, __typeKeyDoNoAccess}
    class AnimPreviewInstance extends UE.AnimSingleNodeInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MontagePreviewType: UE.EMontagePreviewType;
        MontagePreviewStartSectionIdx: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimPreviewInstance;
        static Load(InName: string): AnimPreviewInstance;
    
        __tid_AnimPreviewInstance_0__: boolean;
    }
    
    class AnimSingleNodeInstanceProxy extends UE.AnimInstanceProxy {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSingleNodeInstanceProxy_0__: boolean;
    }
    
    class AnimPreviewInstanceProxy extends UE.AnimSingleNodeInstanceProxy {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimPreviewInstanceProxy_0__: boolean;
    }
    
    class AnimSeqExportOption extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bExportTransforms: boolean;
        bExportCurves: boolean;
        bRecordInWorldSpace: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSeqExportOption;
        static Load(InName: string): AnimSeqExportOption;
    
        __tid_AnimSeqExportOption_0__: boolean;
    }
    
    class AssetExportTask extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Object: UE.Object;
        Exporter: UE.Exporter;
        Filename: string;
        bSelected: boolean;
        bReplaceIdentical: boolean;
        bPrompt: boolean;
        bAutomated: boolean;
        bUseFileArchive: boolean;
        bWriteEmptyFiles: boolean;
        IgnoreObjectList: TArray<UE.Object>;
        Options: UE.Object;
        Errors: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetExportTask;
        static Load(InName: string): AssetExportTask;
    
        __tid_AssetExportTask_0__: boolean;
    }
    
    class Exporter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SupportedClass: UE.Class;
        ExportRootScope: UE.Object;
        FormatExtension: TArray<string>;
        FormatDescription: TArray<string>;
        PreferredFormatIndex: number;
        TextIndent: number;
        bText: boolean;
        bSelectedOnly: boolean;
        bForceFileOperations: boolean;
        ExportTask: UE.AssetExportTask;
        ScriptRunAssetExportTask(Task: $Nullable<UE.AssetExportTask>) : boolean;
        static RunAssetExportTask(Task: $Nullable<UE.AssetExportTask>) : boolean;
        static RunAssetExportTasks(ExportTasks: TArray<UE.AssetExportTask>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Exporter;
        static Load(InName: string): Exporter;
    
        __tid_Exporter_0__: boolean;
    }
    
    class ExporterFBX extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExporterFBX;
        static Load(InName: string): ExporterFBX;
    
        __tid_ExporterFBX_0__: boolean;
    }
    
    class AnimSequenceExporterFBX extends UE.ExporterFBX {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSequenceExporterFBX;
        static Load(InName: string): AnimSequenceExporterFBX;
    
        __tid_AnimSequenceExporterFBX_0__: boolean;
    }
    
    class AnimSequenceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeleton: UE.Skeleton;
        PreviewSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSequenceFactory;
        static Load(InName: string): AnimSequenceFactory;
    
        __tid_AnimSequenceFactory_0__: boolean;
    }
    
    class AnimSequenceLevelSequenceLink extends UE.AssetUserData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SkelTrackGuid: UE.Guid;
        PathToLevelSequence: UE.SoftObjectPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSequenceLevelSequenceLink;
        static Load(InName: string): AnimSequenceLevelSequenceLink;
    
        __tid_AnimSequenceLevelSequenceLink_0__: boolean;
    }
    
    class AnimSequencerInstance extends UE.AnimInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSequencerInstance;
        static Load(InName: string): AnimSequencerInstance;
    
        __tid_AnimSequencerInstance_0__: boolean;
    }
    
    class AnimSequencerInstanceProxy extends UE.AnimInstanceProxy {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSequencerInstanceProxy_0__: boolean;
    }
    
    class AnimSequenceThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSequenceThumbnailRenderer;
        static Load(InName: string): AnimSequenceThumbnailRenderer;
    
        __tid_AnimSequenceThumbnailRenderer_0__: boolean;
    }
    
    class RawAnimSequenceTrack {
        constructor();
        constructor(PosKeys: TArray<UE.Vector>, RotKeys: TArray<UE.Quat>, ScaleKeys: TArray<UE.Vector>);
        PosKeys: TArray<UE.Vector>;
        RotKeys: TArray<UE.Quat>;
        ScaleKeys: TArray<UE.Vector>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RawAnimSequenceTrack_0__: boolean;
    }
    
    class AnimSequenceTrackContainer {
        constructor();
        constructor(AnimationTracks: TArray<UE.RawAnimSequenceTrack>, TrackNames: TArray<string>);
        AnimationTracks: TArray<UE.RawAnimSequenceTrack>;
        TrackNames: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSequenceTrackContainer_0__: boolean;
    }
    
    class AnimSetMeshLinkup {
        constructor();
        constructor(BoneToTrackTable: TArray<number>);
        BoneToTrackTable: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSetMeshLinkup_0__: boolean;
    }
    
    class AnimSet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAnimRotationOnly: boolean;
        TrackBoneNames: TArray<string>;
        Sequences: TArray<UE.AnimSequence>;
        LinkupCache: TArray<UE.AnimSetMeshLinkup>;
        BoneUseAnimTranslation: TArray<number>;
        ForceUseMeshTranslation: TArray<number>;
        UseTranslationBoneNames: TArray<string>;
        ForceMeshTranslationBoneNames: TArray<string>;
        PreviewSkelMeshName: string;
        BestRatioSkelMeshName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSet;
        static Load(InName: string): AnimSet;
    
        __tid_AnimSet_0__: boolean;
    }
    
    class AnimSharingAdditiveInstance extends UE.AnimInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseComponent: TWeakObjectPtr<UE.SkeletalMeshComponent>;
        AdditiveAnimation: TWeakObjectPtr<UE.AnimSequence>;
        Alpha: number;
        bStateBool: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSharingAdditiveInstance;
        static Load(InName: string): AnimSharingAdditiveInstance;
    
        __tid_AnimSharingAdditiveInstance_0__: boolean;
    }
    
    class AnimSharingStateInstance extends UE.AnimInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationToPlay: UE.AnimSequence;
        PermutationTimeOffset: number;
        PlayRate: number;
        bStateBool: boolean;
        Instance: UE.AnimSharingInstance;
        GetInstancedActors(Actors: $Ref<TArray<UE.Actor>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSharingStateInstance;
        static Load(InName: string): AnimSharingStateInstance;
    
        __tid_AnimSharingStateInstance_0__: boolean;
    }
    
    class AnimSharingTransitionInstance extends UE.AnimInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FromComponent: TWeakObjectPtr<UE.SkeletalMeshComponent>;
        ToComponent: TWeakObjectPtr<UE.SkeletalMeshComponent>;
        BlendTime: number;
        bBlendBool: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimSharingTransitionInstance;
        static Load(InName: string): AnimSharingTransitionInstance;
    
        __tid_AnimSharingTransitionInstance_0__: boolean;
    }
    
    class AnimSlotDesc {
        constructor();
        constructor(SlotName: string, NumChannels: number);
        SlotName: string;
        NumChannels: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSlotDesc_0__: boolean;
    }
    
    class AnimSlotInfo {
        constructor();
        constructor(SlotName: string, ChannelWeights: TArray<number>);
        SlotName: string;
        ChannelWeights: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimSlotInfo_0__: boolean;
    }
    
    class AnimStateNodeBase extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStateNodeBase;
        static Load(InName: string): AnimStateNodeBase;
    
        __tid_AnimStateNodeBase_0__: boolean;
    }
    
    class AnimStateConduitNode extends UE.AnimStateNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundGraph: UE.EdGraph;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStateConduitNode;
        static Load(InName: string): AnimStateConduitNode;
    
        __tid_AnimStateConduitNode_0__: boolean;
    }
    
    class AnimStateMachineTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStateMachineTypes;
        static Load(InName: string): AnimStateMachineTypes;
    
        __tid_AnimStateMachineTypes_0__: boolean;
    }
    
    enum EAnimStateType { AST_SingleAnimation, AST_BlendGraph, AST_MAX, __typeKeyDoNoAccess}
    class AnimStateNode extends UE.AnimStateNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundGraph: UE.EdGraph;
        StateType: UE.EAnimStateType;
        StateEntered: UE.AnimNotifyEvent;
        StateLeft: UE.AnimNotifyEvent;
        StateFullyBlended: UE.AnimNotifyEvent;
        bAlwaysResetOnEntry: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStateNode;
        static Load(InName: string): AnimStateNode;
    
        __tid_AnimStateNode_0__: boolean;
    }
    
    enum ETransitionBlendMode { TBM_Linear, TBM_Cubic, TBM_MAX, __typeKeyDoNoAccess}
    class AnimStateTransitionNode extends UE.AnimStateNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundGraph: UE.EdGraph;
        CustomTransitionGraph: UE.EdGraph;
        PriorityOrder: number;
        CrossfadeDuration: number;
        CrossfadeMode: UE.ETransitionBlendMode;
        BlendMode: UE.EAlphaBlendOption;
        CustomBlendCurve: UE.CurveFloat;
        BlendProfile: UE.BlendProfile;
        bAutomaticRuleBasedOnSequencePlayerInState: boolean;
        LogicType: UE.ETransitionLogicType;
        TransitionStart: UE.AnimNotifyEvent;
        TransitionEnd: UE.AnimNotifyEvent;
        TransitionInterrupt: UE.AnimNotifyEvent;
        Bidirectional: boolean;
        bSharedRules: boolean;
        bSharedCrossfade: boolean;
        SharedRulesName: string;
        SharedRulesGuid: UE.Guid;
        SharedColor: UE.LinearColor;
        SharedCrossfadeName: string;
        SharedCrossfadeGuid: UE.Guid;
        SharedCrossfadeIdx: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStateTransitionNode;
        static Load(InName: string): AnimStateTransitionNode;
    
        __tid_AnimStateTransitionNode_0__: boolean;
    }
    
    class AnimStreamable extends UE.AnimSequenceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumFrames: number;
        Interpolation: UE.EAnimInterpolationType;
        RetargetSource: string;
        SourceSequence: UE.AnimSequence;
        RawDataGuid: UE.Guid;
        RawAnimationData: TArray<UE.RawAnimSequenceTrack>;
        TrackToSkeletonMapTable: TArray<UE.TrackToSkeletonMap>;
        AnimationTrackNames: TArray<string>;
        BoneCompressionSettings: UE.AnimBoneCompressionSettings;
        CurveCompressionSettings: UE.AnimCurveCompressionSettings;
        bEnableRootMotion: boolean;
        RootMotionRootLock: UE.ERootMotionRootLock;
        bForceRootLock: boolean;
        bUseNormalizedRootMotionScale: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStreamable;
        static Load(InName: string): AnimStreamable;
    
        __tid_AnimStreamable_0__: boolean;
    }
    
    class AnimStreamableFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeleton: UE.Skeleton;
        SourceAnimation: UE.AnimSequence;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnimStreamableFactory;
        static Load(InName: string): AnimStreamableFactory;
    
        __tid_AnimStreamableFactory_0__: boolean;
    }
    
    class AnimTickRecord {
        constructor();
        constructor(SourceAsset: UE.AnimationAsset);
        SourceAsset: UE.AnimationAsset;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimTickRecord_0__: boolean;
    }
    
    enum EUpdateRateShiftBucket { ShiftBucket0, ShiftBucket1, ShiftBucket2, ShiftBucket3, ShiftBucket4, ShiftBucket5, ShiftBucketMax, EUpdateRateShiftBucket_MAX, __typeKeyDoNoAccess}
    class AnimUpdateRateParameters {
        constructor();
        constructor(ShiftBucket: UE.EUpdateRateShiftBucket, bInterpolateSkippedFrames: boolean, bShouldUseLodMap: boolean, bShouldUseMinLod: boolean, bSkipUpdate: boolean, bSkipEvaluation: boolean, UpdateRate: number, EvaluationRate: number, TickedPoseOffestTime: number, AdditionalTime: number, BaseNonRenderedUpdateRate: number, MaxEvalRateForInterpolation: number, BaseVisibleDistanceFactorThesholds: TArray<number>, LODToFrameSkipMap: TMap<number, number>, SkippedUpdateFrames: number, SkippedEvalFrames: number);
        ShiftBucket: UE.EUpdateRateShiftBucket;
        bInterpolateSkippedFrames: boolean;
        bShouldUseLodMap: boolean;
        bShouldUseMinLod: boolean;
        bSkipUpdate: boolean;
        bSkipEvaluation: boolean;
        UpdateRate: number;
        EvaluationRate: number;
        TickedPoseOffestTime: number;
        AdditionalTime: number;
        BaseNonRenderedUpdateRate: number;
        MaxEvalRateForInterpolation: number;
        BaseVisibleDistanceFactorThesholds: TArray<number>;
        LODToFrameSkipMap: TMap<number, number>;
        SkippedUpdateFrames: number;
        SkippedEvalFrames: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AnimUpdateRateParameters_0__: boolean;
    }
    
    class InputBehavior extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputBehavior;
        static Load(InName: string): InputBehavior;
    
        __tid_InputBehavior_0__: boolean;
    }
    
    class AnyButtonInputBehavior extends UE.InputBehavior {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AnyButtonInputBehavior;
        static Load(InName: string): AnyButtonInputBehavior;
    
        __tid_AnyButtonInputBehavior_0__: boolean;
    }
    
    class AppleImageInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AppleImageInterface;
        static Load(InName: string): AppleImageInterface;
    
        __tid_AppleImageInterface_0__: boolean;
    }
    
    class AppleImageUtilsImageConversionResult {
        constructor();
        constructor(Error: string, ImageData: TArray<number>);
        Error: string;
        ImageData: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AppleImageUtilsImageConversionResult_0__: boolean;
    }
    
    enum ETextureRotationDirection { None, Left, Right, Down, LeftMirrored, RightMirrored, DownMirrored, UpMirrored, ETextureRotationDirection_MAX, __typeKeyDoNoAccess}
    class AppleImageUtilsBaseAsyncTaskBlueprintProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(ConversionResult: UE.AppleImageUtilsImageConversionResult) => void>;
        OnFailure: $MulticastDelegate<(ConversionResult: UE.AppleImageUtilsImageConversionResult) => void>;
        ConversionResult: UE.AppleImageUtilsImageConversionResult;
        static CreateProxyObjectForConvertToHEIF(SourceImage: $Nullable<UE.Texture>, Quality?: number /* = 85 */, bWantColor?: boolean /* = true */, bUseGpu?: boolean /* = true */, Scale?: number /* = 1.000000 */, Rotate?: UE.ETextureRotationDirection /* = None */) : UE.AppleImageUtilsBaseAsyncTaskBlueprintProxy;
        static CreateProxyObjectForConvertToJPEG(SourceImage: $Nullable<UE.Texture>, Quality?: number /* = 85 */, bWantColor?: boolean /* = true */, bUseGpu?: boolean /* = true */, Scale?: number /* = 1.000000 */, Rotate?: UE.ETextureRotationDirection /* = None */) : UE.AppleImageUtilsBaseAsyncTaskBlueprintProxy;
        static CreateProxyObjectForConvertToPNG(SourceImage: $Nullable<UE.Texture>, bWantColor?: boolean /* = true */, bUseGpu?: boolean /* = true */, Scale?: number /* = 1.000000 */, Rotate?: UE.ETextureRotationDirection /* = None */) : UE.AppleImageUtilsBaseAsyncTaskBlueprintProxy;
        static CreateProxyObjectForConvertToTIFF(SourceImage: $Nullable<UE.Texture>, bWantColor?: boolean /* = true */, bUseGpu?: boolean /* = true */, Scale?: number /* = 1.000000 */, Rotate?: UE.ETextureRotationDirection /* = None */) : UE.AppleImageUtilsBaseAsyncTaskBlueprintProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
        static Load(InName: string): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
    
        __tid_AppleImageUtilsBaseAsyncTaskBlueprintProxy_0__: boolean;
    }
    
    enum ETemperatureSeverityType { Unknown, Good, Bad, Serious, Critical, NumSeverities, ETemperatureSeverityType_MAX, __typeKeyDoNoAccess}
    class ApplicationLifecycleComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ApplicationWillDeactivateDelegate: $MulticastDelegate<() => void>;
        ApplicationHasReactivatedDelegate: $MulticastDelegate<() => void>;
        ApplicationWillEnterBackgroundDelegate: $MulticastDelegate<() => void>;
        ApplicationHasEnteredForegroundDelegate: $MulticastDelegate<() => void>;
        ApplicationWillTerminateDelegate: $MulticastDelegate<() => void>;
        ApplicationShouldUnloadResourcesDelegate: $MulticastDelegate<() => void>;
        ApplicationReceivedStartupArgumentsDelegate: $MulticastDelegate<(StartupArguments: TArray<string>) => void>;
        OnTemperatureChangeDelegate: $MulticastDelegate<(Severity: UE.ETemperatureSeverityType) => void>;
        OnLowPowerModeDelegate: $MulticastDelegate<(bInLowPowerMode: boolean) => void>;
        ApplicationLifetimeDelegate__DelegateSignature() : void;
        ApplicationStartupArgumentsDelegate__DelegateSignature(StartupArguments: TArray<string>) : void;
        OnLowPowerModeDelegate__DelegateSignature(bInLowPowerMode: boolean) : void;
        OnTemperatureChangeDelegate__DelegateSignature(Severity: UE.ETemperatureSeverityType) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ApplicationLifecycleComponent;
        static Load(InName: string): ApplicationLifecycleComponent;
    
        __tid_ApplicationLifecycleComponent_0__: boolean;
    }
    
    class MRMeshComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Material: UE.MaterialInterface;
        WireframeMaterial: UE.MaterialInterface;
        bCreateMeshProxySections: boolean;
        bUpdateNavMeshOnMeshUpdate: boolean;
        bNeverCreateCollisionMesh: boolean;
        CachedBodySetup: UE.BodySetup;
        BodySetups: TArray<UE.BodySetup>;
        Clear() : void;
        ForceNavMeshUpdate() : void;
        GetEnableMeshOcclusion() : boolean;
        GetUseWireframe() : boolean;
        GetWireframeColor() : UE.LinearColor;
        IsConnected() : boolean;
        SetEnableMeshOcclusion(bEnable: boolean) : void;
        SetUseWireframe(bUseWireframe: boolean) : void;
        SetWireframeColor(InColor: UE.LinearColor) : void;
        SetWireframeMaterial(InMaterial: $Nullable<UE.MaterialInterface>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MRMeshComponent;
        static Load(InName: string): MRMeshComponent;
    
        __tid_MRMeshComponent_0__: boolean;
    }
    
    enum EARTrackingState { Unknown, Tracking, NotTracking, StoppedTracking, EARTrackingState_MAX, __typeKeyDoNoAccess}
    enum EARObjectClassification { NotApplicable, Unknown, Wall, Ceiling, Floor, Table, Seat, Face, Image, World, SceneObject, HandMesh, Door, Window, EARObjectClassification_MAX, __typeKeyDoNoAccess}
    class ARTrackedGeometry extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UniqueId: UE.Guid;
        LocalToTrackingTransform: UE.Transform;
        LocalToAlignedTrackingTransform: UE.Transform;
        TrackingState: UE.EARTrackingState;
        UnderlyingMesh: UE.MRMeshComponent;
        ObjectClassification: UE.EARObjectClassification;
        LastUpdateFrameNumber: number;
        DebugName: string;
        GetDebugName() : string;
        GetLastUpdateFrameNumber() : number;
        GetLastUpdateTimestamp() : number;
        GetLocalToTrackingTransform() : UE.Transform;
        GetLocalToWorldTransform() : UE.Transform;
        GetName() : string;
        GetObjectClassification() : UE.EARObjectClassification;
        GetTrackingState() : UE.EARTrackingState;
        GetUnderlyingMesh() : UE.MRMeshComponent;
        IsTracked() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTrackedGeometry;
        static Load(InName: string): ARTrackedGeometry;
    
        __tid_ARTrackedGeometry_0__: boolean;
    }
    
    class ARComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NativeID: UE.Guid;
        bUseDefaultReplication: boolean;
        DefaultMeshMaterial: UE.MaterialInterface;
        DefaultWireframeMeshMaterial: UE.MaterialInterface;
        MRMeshComponent: UE.MRMeshComponent;
        MyTrackedGeometry: UE.ARTrackedGeometry;
        GetMRMesh() : UE.MRMeshComponent;
        OnRep_Payload() : void;
        ReceiveRemove() : void;
        SetNativeID(NativeID: UE.Guid) : void;
        UpdateVisualization() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARComponent;
        static Load(InName: string): ARComponent;
    
        __tid_ARComponent_0__: boolean;
    }
    
    class ARActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddARComponent(InComponentClass: $Nullable<UE.Class>, NativeID: UE.Guid) : UE.ARComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARActor;
        static Load(InName: string): ARActor;
    
        __tid_ARActor_0__: boolean;
    }
    
    class ARBaseAsyncTaskBlueprintProxy extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARBaseAsyncTaskBlueprintProxy;
        static Load(InName: string): ARBaseAsyncTaskBlueprintProxy;
    
        __tid_ARBaseAsyncTaskBlueprintProxy_0__: boolean;
    }
    
    class ARLightEstimate extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARLightEstimate;
        static Load(InName: string): ARLightEstimate;
    
        __tid_ARLightEstimate_0__: boolean;
    }
    
    class ARBasicLightEstimate extends UE.ARLightEstimate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AmbientIntensityLumens: number;
        AmbientColorTemperatureKelvin: number;
        AmbientColor: UE.LinearColor;
        GetAmbientColor() : UE.LinearColor;
        GetAmbientColorTemperatureKelvin() : number;
        GetAmbientIntensityLumens() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARBasicLightEstimate;
        static Load(InName: string): ARBasicLightEstimate;
    
        __tid_ARBasicLightEstimate_0__: boolean;
    }
    
    enum EARCaptureType { Camera, QRCode, SpatialMapping, SceneUnderstanding, EARCaptureType_MAX, __typeKeyDoNoAccess}
    enum EARWorldAlignment { Gravity, GravityAndHeading, Camera, EARWorldAlignment_MAX, __typeKeyDoNoAccess}
    enum EARSessionType { None, Orientation, World, Face, Image, ObjectScanning, PoseTracking, GeoTracking, EARSessionType_MAX, __typeKeyDoNoAccess}
    enum EARPlaneDetectionMode { None, HorizontalPlaneDetection, VerticalPlaneDetection, EARPlaneDetectionMode_MAX, __typeKeyDoNoAccess}
    enum EARLightEstimationMode { None, AmbientLightEstimate, DirectionalLightEstimate, EARLightEstimationMode_MAX, __typeKeyDoNoAccess}
    enum EARFrameSyncMode { SyncTickWithCameraImage, SyncTickWithoutCameraImage, EARFrameSyncMode_MAX, __typeKeyDoNoAccess}
    enum EARCandidateImageOrientation { Landscape, Portrait, EARCandidateImageOrientation_MAX, __typeKeyDoNoAccess}
    class ARCandidateImage extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CandidateTexture: UE.Texture2D;
        FriendlyName: string;
        Width: number;
        Height: number;
        Orientation: UE.EARCandidateImageOrientation;
        GetCandidateTexture() : UE.Texture2D;
        GetFriendlyName() : string;
        GetOrientation() : UE.EARCandidateImageOrientation;
        GetPhysicalHeight() : number;
        GetPhysicalWidth() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARCandidateImage;
        static Load(InName: string): ARCandidateImage;
    
        __tid_ARCandidateImage_0__: boolean;
    }
    
    enum EAREnvironmentCaptureProbeType { None, Manual, Automatic, EAREnvironmentCaptureProbeType_MAX, __typeKeyDoNoAccess}
    class ARCandidateObject extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CandidateObjectData: TArray<number>;
        FriendlyName: string;
        BoundingBox: UE.Box;
        GetBoundingBox() : UE.Box;
        GetCandidateObjectData() : TArray<number>;
        GetFriendlyName() : string;
        SetBoundingBox(InBoundingBox: UE.Box) : void;
        SetCandidateObjectData(InCandidateObject: TArray<number>) : void;
        SetFriendlyName(NewName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARCandidateObject;
        static Load(InName: string): ARCandidateObject;
    
        __tid_ARCandidateObject_0__: boolean;
    }
    
    class ARVideoFormat {
        constructor();
        constructor(FPS: number, Width: number, Height: number);
        FPS: number;
        Width: number;
        Height: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARVideoFormat_0__: boolean;
    }
    
    enum EARFaceTrackingDirection { FaceRelative, FaceMirrored, EARFaceTrackingDirection_MAX, __typeKeyDoNoAccess}
    enum EARFaceTrackingUpdate { CurvesAndGeo, CurvesOnly, EARFaceTrackingUpdate_MAX, __typeKeyDoNoAccess}
    enum EARSessionTrackingFeature { None, PoseDetection2D, PersonSegmentation, PersonSegmentationWithDepth, SceneDepth, SmoothedSceneDepth, EARSessionTrackingFeature_MAX, __typeKeyDoNoAccess}
    enum EARSceneReconstruction { None, MeshOnly, MeshWithClassification, EARSceneReconstruction_MAX, __typeKeyDoNoAccess}
    class ARSessionConfig extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bGenerateMeshDataFromTrackedGeometry: boolean;
        bGenerateCollisionForMeshData: boolean;
        bGenerateNavMeshForMeshData: boolean;
        bUseMeshDataForOcclusion: boolean;
        bRenderMeshDataInWireframe: boolean;
        bTrackSceneObjects: boolean;
        bUsePersonSegmentationForOcclusion: boolean;
        bUseSceneDepthForOcclusion: boolean;
        bUseAutomaticImageScaleEstimation: boolean;
        bUseStandardOnboardingUX: boolean;
        WorldAlignment: UE.EARWorldAlignment;
        SessionType: UE.EARSessionType;
        PlaneDetectionMode: UE.EARPlaneDetectionMode;
        bHorizontalPlaneDetection: boolean;
        bVerticalPlaneDetection: boolean;
        bEnableAutoFocus: boolean;
        LightEstimationMode: UE.EARLightEstimationMode;
        FrameSyncMode: UE.EARFrameSyncMode;
        bEnableAutomaticCameraOverlay: boolean;
        bEnableAutomaticCameraTracking: boolean;
        bResetCameraTracking: boolean;
        bResetTrackedObjects: boolean;
        CandidateImages: TArray<UE.ARCandidateImage>;
        MaxNumSimultaneousImagesTracked: number;
        EnvironmentCaptureProbeType: UE.EAREnvironmentCaptureProbeType;
        WorldMapData: TArray<number>;
        CandidateObjects: TArray<UE.ARCandidateObject>;
        DesiredVideoFormat: UE.ARVideoFormat;
        bUseOptimalVideoFormat: boolean;
        FaceTrackingDirection: UE.EARFaceTrackingDirection;
        FaceTrackingUpdate: UE.EARFaceTrackingUpdate;
        MaxNumberOfTrackedFaces: number;
        SerializedARCandidateImageDatabase: TArray<number>;
        EnabledSessionTrackingFeature: UE.EARSessionTrackingFeature;
        SceneReconstructionMethod: UE.EARSceneReconstruction;
        PlaneComponentClass: UE.Class;
        PointComponentClass: UE.Class;
        FaceComponentClass: UE.Class;
        ImageComponentClass: UE.Class;
        QRCodeComponentClass: UE.Class;
        PoseComponentClass: UE.Class;
        EnvironmentProbeComponentClass: UE.Class;
        ObjectComponentClass: UE.Class;
        MeshComponentClass: UE.Class;
        GeoAnchorComponentClass: UE.Class;
        DefaultMeshMaterial: UE.MaterialInterface;
        DefaultWireframeMeshMaterial: UE.MaterialInterface;
        AddCandidateImage(NewCandidateImage: $Nullable<UE.ARCandidateImage>) : void;
        AddCandidateObject(CandidateObject: $Nullable<UE.ARCandidateObject>) : void;
        GetCandidateImageList() : TArray<UE.ARCandidateImage>;
        GetCandidateObjectList() : TArray<UE.ARCandidateObject>;
        GetDesiredVideoFormat() : UE.ARVideoFormat;
        GetEnabledSessionTrackingFeature() : UE.EARSessionTrackingFeature;
        GetEnvironmentCaptureProbeType() : UE.EAREnvironmentCaptureProbeType;
        GetFaceTrackingDirection() : UE.EARFaceTrackingDirection;
        GetFaceTrackingUpdate() : UE.EARFaceTrackingUpdate;
        GetFrameSyncMode() : UE.EARFrameSyncMode;
        GetLightEstimationMode() : UE.EARLightEstimationMode;
        GetMaxNumSimultaneousImagesTracked() : number;
        GetPlaneDetectionMode() : UE.EARPlaneDetectionMode;
        GetSceneReconstructionMethod() : UE.EARSceneReconstruction;
        GetSessionType() : UE.EARSessionType;
        GetWorldAlignment() : UE.EARWorldAlignment;
        GetWorldMapData() : TArray<number>;
        SetCandidateObjectList(InCandidateObjects: TArray<UE.ARCandidateObject>) : void;
        SetDesiredVideoFormat(NewFormat: UE.ARVideoFormat) : void;
        SetEnableAutoFocus(bNewValue: boolean) : void;
        SetFaceTrackingDirection(InDirection: UE.EARFaceTrackingDirection) : void;
        SetFaceTrackingUpdate(InUpdate: UE.EARFaceTrackingUpdate) : void;
        SetResetCameraTracking(bNewValue: boolean) : void;
        SetResetTrackedObjects(bNewValue: boolean) : void;
        SetSceneReconstructionMethod(InSceneReconstructionMethod: UE.EARSceneReconstruction) : void;
        SetSessionTrackingFeatureToEnable(InSessionTrackingFeature: UE.EARSessionTrackingFeature) : void;
        SetWorldMapData(WorldMapData: TArray<number>) : void;
        ShouldEnableAutoFocus() : boolean;
        ShouldEnableCameraTracking() : boolean;
        ShouldRenderCameraOverlay() : boolean;
        ShouldResetCameraTracking() : boolean;
        ShouldResetTrackedObjects() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARSessionConfig;
        static Load(InName: string): ARSessionConfig;
    
        __tid_ARSessionConfig_0__: boolean;
    }
    
    class ARPin extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TrackedGeometry: UE.ARTrackedGeometry;
        PinnedComponent: UE.SceneComponent;
        LocalToTrackingTransform: UE.Transform;
        LocalToAlignedTrackingTransform: UE.Transform;
        TrackingState: UE.EARTrackingState;
        OnARTrackingStateChanged: $MulticastDelegate<(NewTrackingState: UE.EARTrackingState) => void>;
        OnARTransformUpdated: $MulticastDelegate<(OldToNewTransform: UE.Transform) => void>;
        DebugDraw(World: $Nullable<UE.World>, Color: UE.LinearColor, Scale: number, PersistForSeconds: number) : void;
        GetDebugName() : string;
        GetLocalToTrackingTransform() : UE.Transform;
        GetLocalToWorldTransform() : UE.Transform;
        GetPinnedComponent() : UE.SceneComponent;
        GetTrackedGeometry() : UE.ARTrackedGeometry;
        GetTrackingState() : UE.EARTrackingState;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARPin;
        static Load(InName: string): ARPin;
    
        __tid_ARPin_0__: boolean;
    }
    
    enum EARLineTraceChannels { None, FeaturePoint, GroundPlane, PlaneUsingExtent, PlaneUsingBoundaryPolygon, EARLineTraceChannels_MAX, __typeKeyDoNoAccess}
    class ARTraceResult {
        constructor();
        constructor(DistanceFromCamera: number, TraceChannel: UE.EARLineTraceChannels, LocalTransform: UE.Transform, TrackedGeometry: UE.ARTrackedGeometry);
        DistanceFromCamera: number;
        TraceChannel: UE.EARLineTraceChannels;
        LocalTransform: UE.Transform;
        TrackedGeometry: UE.ARTrackedGeometry;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARTraceResult_0__: boolean;
    }
    
    enum EARWorldMappingState { NotAvailable, StillMappingNotRelocalizable, StillMappingRelocalizable, Mapped, EARWorldMappingState_MAX, __typeKeyDoNoAccess}
    enum EARTrackingQualityReason { None, Initializing, Relocalizing, ExcessiveMotion, InsufficientFeatures, InsufficientLight, BadState, EARTrackingQualityReason_MAX, __typeKeyDoNoAccess}
    enum EARTrackingQuality { NotTracking, OrientationOnly, OrientationAndPosition, EARTrackingQuality_MAX, __typeKeyDoNoAccess}
    enum EARTextureType { Unknown, CameraImage, CameraDepth, EnvironmentCapture, PersonSegmentationImage, PersonSegmentationDepth, SceneDepthMap, SceneDepthConfidenceMap, EARTextureType_MAX, __typeKeyDoNoAccess}
    class ARTexture extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureType: UE.EARTextureType;
        Timestamp: number;
        ExternalTextureGuid: UE.Guid;
        Size: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTexture;
        static Load(InName: string): ARTexture;
    
        __tid_ARTexture_0__: boolean;
    }
    
    class ARCameraIntrinsics {
        constructor();
        constructor(ImageResolution: UE.IntPoint, FocalLength: UE.Vector2D, PrincipalPoint: UE.Vector2D);
        ImageResolution: UE.IntPoint;
        FocalLength: UE.Vector2D;
        PrincipalPoint: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARCameraIntrinsics_0__: boolean;
    }
    
    class ARTextureCameraImage extends UE.ARTexture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTextureCameraImage;
        static Load(InName: string): ARTextureCameraImage;
    
        __tid_ARTextureCameraImage_0__: boolean;
    }
    
    enum EARDepthQuality { Unkown, Low, High, EARDepthQuality_MAX, __typeKeyDoNoAccess}
    enum EARDepthAccuracy { Unkown, Approximate, Accurate, EARDepthAccuracy_MAX, __typeKeyDoNoAccess}
    class ARTextureCameraDepth extends UE.ARTexture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DepthQuality: UE.EARDepthQuality;
        DepthAccuracy: UE.EARDepthAccuracy;
        bIsTemporallySmoothed: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTextureCameraDepth;
        static Load(InName: string): ARTextureCameraDepth;
    
        __tid_ARTextureCameraDepth_0__: boolean;
    }
    
    enum EARSessionStatus { NotStarted, Running, NotSupported, FatalError, PermissionNotGranted, UnsupportedConfiguration, Other, EARSessionStatus_MAX, __typeKeyDoNoAccess}
    class ARSessionStatus {
        constructor();
        constructor(AdditionalInfo: string, Status: UE.EARSessionStatus);
        AdditionalInfo: string;
        Status: UE.EARSessionStatus;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARSessionStatus_0__: boolean;
    }
    
    class ARSkeletonDefinition {
        constructor();
        constructor(NumJoints: number, JointNames: TArray<string>, ParentIndices: TArray<number>);
        NumJoints: number;
        JointNames: TArray<string>;
        ParentIndices: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARSkeletonDefinition_0__: boolean;
    }
    
    enum EARJointTransformSpace { Model, ParentJoint, EARJointTransformSpace_MAX, __typeKeyDoNoAccess}
    class ARPose3D {
        constructor();
        constructor(SkeletonDefinition: UE.ARSkeletonDefinition, JointTransforms: TArray<UE.Transform>, IsJointTracked: TArray<boolean>, JointTransformSpace: UE.EARJointTransformSpace);
        SkeletonDefinition: UE.ARSkeletonDefinition;
        JointTransforms: TArray<UE.Transform>;
        IsJointTracked: TArray<boolean>;
        JointTransformSpace: UE.EARJointTransformSpace;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARPose3D_0__: boolean;
    }
    
    class ARTrackedPose extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TrackedPose: UE.ARPose3D;
        GetTrackedPoseData() : UE.ARPose3D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTrackedPose;
        static Load(InName: string): ARTrackedPose;
    
        __tid_ARTrackedPose_0__: boolean;
    }
    
    class ARTrackedPoint extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTrackedPoint;
        static Load(InName: string): ARTrackedPoint;
    
        __tid_ARTrackedPoint_0__: boolean;
    }
    
    enum EARPlaneOrientation { Horizontal, Vertical, Diagonal, EARPlaneOrientation_MAX, __typeKeyDoNoAccess}
    class ARPlaneGeometry extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Orientation: UE.EARPlaneOrientation;
        Center: UE.Vector;
        Extent: UE.Vector;
        BoundaryPolygon: TArray<UE.Vector>;
        SubsumedBy: UE.ARPlaneGeometry;
        GetBoundaryPolygonInLocalSpace() : TArray<UE.Vector>;
        GetCenter() : UE.Vector;
        GetExtent() : UE.Vector;
        GetOrientation() : UE.EARPlaneOrientation;
        GetSubsumedBy() : UE.ARPlaneGeometry;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARPlaneGeometry;
        static Load(InName: string): ARPlaneGeometry;
    
        __tid_ARPlaneGeometry_0__: boolean;
    }
    
    class ARTrackedImage extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DetectedImage: UE.ARCandidateImage;
        EstimatedSize: UE.Vector2D;
        GetDetectedImage() : UE.ARCandidateImage;
        GetEstimateSize() : UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTrackedImage;
        static Load(InName: string): ARTrackedImage;
    
        __tid_ARTrackedImage_0__: boolean;
    }
    
    class AREnvironmentCaptureProbeTexture extends UE.TextureCube {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureType: UE.EARTextureType;
        Timestamp: number;
        ExternalTextureGuid: UE.Guid;
        Size: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AREnvironmentCaptureProbeTexture;
        static Load(InName: string): AREnvironmentCaptureProbeTexture;
    
        __tid_AREnvironmentCaptureProbeTexture_0__: boolean;
    }
    
    class AREnvironmentCaptureProbe extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Extent: UE.Vector;
        EnvironmentCaptureTexture: UE.AREnvironmentCaptureProbeTexture;
        GetEnvironmentCaptureTexture() : UE.AREnvironmentCaptureProbeTexture;
        GetExtent() : UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AREnvironmentCaptureProbe;
        static Load(InName: string): AREnvironmentCaptureProbe;
    
        __tid_AREnvironmentCaptureProbe_0__: boolean;
    }
    
    class ARPose2D {
        constructor();
        constructor(SkeletonDefinition: UE.ARSkeletonDefinition, JointLocations: TArray<UE.Vector2D>, IsJointTracked: TArray<boolean>);
        SkeletonDefinition: UE.ARSkeletonDefinition;
        JointLocations: TArray<UE.Vector2D>;
        IsJointTracked: TArray<boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARPose2D_0__: boolean;
    }
    
    class ARBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddManualEnvironmentCaptureProbe(Location: UE.Vector, Extent: UE.Vector) : boolean;
        static AddRuntimeCandidateImage(SessionConfig: $Nullable<UE.ARSessionConfig>, CandidateTexture: $Nullable<UE.Texture2D>, FriendlyName: string, PhysicalWidth: number) : UE.ARCandidateImage;
        static AddTrackedPointWithName(WorldTransform: UE.Transform, PointName: string, bDeletePointsWithSameName?: boolean /* = true */) : boolean;
        static CalculateAlignmentTransform(TransformInFirstCoordinateSystem: UE.Transform, TransformInSecondCoordinateSystem: UE.Transform, AlignmentTransform: $Ref<UE.Transform>) : void;
        static CalculateClosestIntersection(StartPoints: TArray<UE.Vector>, EndPoints: TArray<UE.Vector>, ClosestIntersection: $Ref<UE.Vector>) : void;
        static DebugDrawPin(ARPin: $Nullable<UE.ARPin>, WorldContextObject: $Nullable<UE.Object>, Color?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=0.000000,A=0.750000) */, Scale?: number /* = 5.000000 */, PersistForSeconds?: number /* = 0.000000 */) : void;
        static DebugDrawTrackedGeometry(TrackedGeometry: $Nullable<UE.ARTrackedGeometry>, WorldContextObject: $Nullable<UE.Object>, Color?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=0.000000,A=0.750000) */, OutlineThickness?: number /* = 5.000000 */, PersistForSeconds?: number /* = 0.000000 */) : void;
        static FindTrackedPointsByName(PointName: string) : TArray<UE.ARTrackedPoint>;
        static GetAlignmentTransform() : UE.Transform;
        static GetAllGeometries() : TArray<UE.ARTrackedGeometry>;
        static GetAllGeometriesByClass(GeometryClass: $Nullable<UE.Class>) : TArray<UE.ARTrackedGeometry>;
        static GetAllPins() : TArray<UE.ARPin>;
        static GetAllTracked2DPoses() : TArray<UE.ARPose2D>;
        static GetAllTrackedEnvironmentCaptureProbes() : TArray<UE.AREnvironmentCaptureProbe>;
        static GetAllTrackedImages() : TArray<UE.ARTrackedImage>;
        static GetAllTrackedPlanes() : TArray<UE.ARPlaneGeometry>;
        static GetAllTrackedPoints() : TArray<UE.ARTrackedPoint>;
        static GetAllTrackedPoses() : TArray<UE.ARTrackedPose>;
        static GetARSessionStatus() : UE.ARSessionStatus;
        static GetARTexture(TextureType: UE.EARTextureType) : UE.ARTexture;
        static GetARWorldScale() : number;
        static GetCameraDepth() : UE.ARTextureCameraDepth;
        static GetCameraImage() : UE.ARTextureCameraImage;
        static GetCameraIntrinsics(OutCameraIntrinsics: $Ref<UE.ARCameraIntrinsics>) : boolean;
        static GetCurrentLightEstimate() : UE.ARLightEstimate;
        static GetNumberOfTrackedFacesSupported() : number;
        static GetObjectClassificationAtLocation(InWorldLocation: UE.Vector, OutClassification: $Ref<UE.EARObjectClassification>, OutClassificationLocation: $Ref<UE.Vector>, MaxLocationDiff?: number /* = 10.000000 */) : boolean;
        static GetPersonSegmentationDepthImage() : UE.ARTexture;
        static GetPersonSegmentationImage() : UE.ARTexture;
        static GetPointCloud() : TArray<UE.Vector>;
        static GetSessionConfig() : UE.ARSessionConfig;
        static GetSupportedVideoFormats(SessionType: UE.EARSessionType) : TArray<UE.ARVideoFormat>;
        static GetTrackingQuality() : UE.EARTrackingQuality;
        static GetTrackingQualityReason() : UE.EARTrackingQualityReason;
        static GetWorldMappingStatus() : UE.EARWorldMappingState;
        static IsARPinLocalStoreReady() : boolean;
        static IsARPinLocalStoreSupported() : boolean;
        static IsARSupported() : boolean;
        static IsSceneReconstructionSupported(SessionType: UE.EARSessionType, SceneReconstructionMethod: UE.EARSceneReconstruction) : boolean;
        static IsSessionTrackingFeatureSupported(SessionType: UE.EARSessionType, SessionTrackingFeature: UE.EARSessionTrackingFeature) : boolean;
        static IsSessionTypeSupported(SessionType: UE.EARSessionType) : boolean;
        static LineTraceTrackedObjects(ScreenCoord: UE.Vector2D, bTestFeaturePoints?: boolean /* = true */, bTestGroundPlane?: boolean /* = true */, bTestPlaneExtents?: boolean /* = true */, bTestPlaneBoundaryPolygon?: boolean /* = true */) : TArray<UE.ARTraceResult>;
        static LineTraceTrackedObjects3D(Start: UE.Vector, End: UE.Vector, bTestFeaturePoints?: boolean /* = true */, bTestGroundPlane?: boolean /* = true */, bTestPlaneExtents?: boolean /* = true */, bTestPlaneBoundaryPolygon?: boolean /* = true */) : TArray<UE.ARTraceResult>;
        static LoadARPinsFromLocalStore() : TMap<string, UE.ARPin>;
        static PauseARSession() : void;
        static PinComponent(ComponentToPin: $Nullable<UE.SceneComponent>, PinToWorldTransform: UE.Transform, TrackedGeometry?: UE.ARTrackedGeometry /* = None */, DebugName?: string /* = "None" */) : UE.ARPin;
        static PinComponentToARPin(ComponentToPin: $Nullable<UE.SceneComponent>, Pin: $Nullable<UE.ARPin>) : boolean;
        static PinComponentToTraceResult(ComponentToPin: $Nullable<UE.SceneComponent>, TraceResult: UE.ARTraceResult, DebugName?: string /* = "None" */) : UE.ARPin;
        static RemoveAllARPinsFromLocalStore() : void;
        static RemoveARPinFromLocalStore(InSaveName: string) : void;
        static RemovePin(PinToRemove: $Nullable<UE.ARPin>) : void;
        static ResizeXRCamera(InSize: UE.IntPoint) : UE.IntPoint;
        static SaveARPinToLocalStore(InSaveName: string, InPin: $Nullable<UE.ARPin>) : boolean;
        static SetAlignmentTransform(InAlignmentTransform: UE.Transform) : void;
        static SetARWorldOriginLocationAndRotation(OriginLocation: UE.Vector, OriginRotation: UE.Rotator, bIsTransformInWorldSpace?: boolean /* = true */, bMaintainUpDirection?: boolean /* = true */) : void;
        static SetARWorldScale(InWorldScale: number) : void;
        static SetEnabledXRCamera(bOnOff: boolean) : void;
        static StartARSession(SessionConfig: $Nullable<UE.ARSessionConfig>) : void;
        static StopARSession() : void;
        static ToggleARCapture(bOnOff: boolean, CaptureType: UE.EARCaptureType) : boolean;
        static UnpinComponent(ComponentToUnpin: $Nullable<UE.SceneComponent>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARBlueprintLibrary;
        static Load(InName: string): ARBlueprintLibrary;
    
        __tid_ARBlueprintLibrary_0__: boolean;
    }
    
    class ArchVisCharacter extends UE.Character {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LookUpAxisName: string;
        LookUpAtRateAxisName: string;
        TurnAxisName: string;
        TurnAtRateAxisName: string;
        MoveForwardAxisName: string;
        MoveRightAxisName: string;
        MouseSensitivityScale_Pitch: number;
        MouseSensitivityScale_Yaw: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ArchVisCharacter;
        static Load(InName: string): ArchVisCharacter;
    
        __tid_ArchVisCharacter_0__: boolean;
    }
    
    class ArchVisCharMovementComponent extends UE.CharacterMovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RotationalAcceleration: UE.Rotator;
        RotationalDeceleration: UE.Rotator;
        MaxRotationalVelocity: UE.Rotator;
        MinPitch: number;
        MaxPitch: number;
        WalkingFriction: number;
        WalkingSpeed: number;
        WalkingAcceleration: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ArchVisCharMovementComponent;
        static Load(InName: string): ArchVisCharMovementComponent;
    
        __tid_ArchVisCharMovementComponent_0__: boolean;
    }
    
    enum EShapeAddMode { AppendAfter, AppendBefore, InsertAfter, InsertBefore, EShapeAddMode_MAX, __typeKeyDoNoAccess}
    class SplineGeneratorBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShapeAddMode: UE.EShapeAddMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SplineGeneratorBase;
        static Load(InName: string): SplineGeneratorBase;
    
        __tid_SplineGeneratorBase_0__: boolean;
    }
    
    class ArcSplineGenerator extends UE.SplineGeneratorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberOfPoints: number;
        Radius: number;
        Degrees: number;
        bReverseDir: boolean;
        bKeepFirstKeyTangent: boolean;
        bBranchRight: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ArcSplineGenerator;
        static Load(InName: string): ArcSplineGenerator;
    
        __tid_ArcSplineGenerator_0__: boolean;
    }
    
    enum EARServicePermissionRequestResult { Granted, Denied, EARServicePermissionRequestResult_MAX, __typeKeyDoNoAccess}
    enum EARServiceInstallRequestResult { Installed, DeviceNotCompatible, UserDeclinedInstallation, FatalError, EARServiceInstallRequestResult_MAX, __typeKeyDoNoAccess}
    enum EARServiceAvailability { UnknownError, UnknownChecking, UnknownTimedOut, UnsupportedDeviceNotCapable, SupportedNotInstalled, SupportedVersionTooOld, SupportedInstalled, EARServiceAvailability_MAX, __typeKeyDoNoAccess}
    class ARDependencyHandler extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CheckARServiceAvailability(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, OutAvailability: $Ref<UE.EARServiceAvailability>) : void;
        InstallARService(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, OutInstallResult: $Ref<UE.EARServiceInstallRequestResult>) : void;
        RequestARSessionPermission(WorldContextObject: $Nullable<UE.Object>, SessionConfig: $Nullable<UE.ARSessionConfig>, LatentInfo: UE.LatentActionInfo, OutPermissionResult: $Ref<UE.EARServicePermissionRequestResult>) : void;
        StartARSessionLatent(WorldContextObject: $Nullable<UE.Object>, SessionConfig: $Nullable<UE.ARSessionConfig>, LatentInfo: UE.LatentActionInfo) : void;
        static GetARDependencyHandler() : UE.ARDependencyHandler;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARDependencyHandler;
        static Load(InName: string): ARDependencyHandler;
    
        __tid_ARDependencyHandler_0__: boolean;
    }
    
    class AREnvironmentProbeUpdatePayload {
        constructor();
        constructor(WorldTransform: UE.Transform);
        WorldTransform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AREnvironmentProbeUpdatePayload_0__: boolean;
    }
    
    class AREnvironmentProbeComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.AREnvironmentProbeUpdatePayload;
        ReceiveAdd(Payload: UE.AREnvironmentProbeUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.AREnvironmentProbeUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.AREnvironmentProbeUpdatePayload) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AREnvironmentProbeComponent;
        static Load(InName: string): AREnvironmentProbeComponent;
    
        __tid_AREnvironmentProbeComponent_0__: boolean;
    }
    
    enum EARFaceTransformMixing { ComponentOnly, ComponentLocationTrackedRotation, ComponentWithTracked, TrackingOnly, EARFaceTransformMixing_MAX, __typeKeyDoNoAccess}
    class ARSessionPayload {
        constructor();
        constructor(ConfigFlags: number, DefaultMeshMaterial: UE.MaterialInterface, DefaultWireframeMeshMaterial: UE.MaterialInterface);
        ConfigFlags: number;
        DefaultMeshMaterial: UE.MaterialInterface;
        DefaultWireframeMeshMaterial: UE.MaterialInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARSessionPayload_0__: boolean;
    }
    
    class ARFaceUpdatePayload {
        constructor();
        constructor(SessionPayload: UE.ARSessionPayload, LeftEyePosition: UE.Vector, RightEyePosition: UE.Vector, LookAtTarget: UE.Vector);
        SessionPayload: UE.ARSessionPayload;
        LeftEyePosition: UE.Vector;
        RightEyePosition: UE.Vector;
        LookAtTarget: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARFaceUpdatePayload_0__: boolean;
    }
    
    enum EFaceComponentDebugMode { None, ShowEyeVectors, ShowFaceMesh, EFaceComponentDebugMode_MAX, __typeKeyDoNoAccess}
    class ARFaceComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransformSetting: UE.EARFaceTransformMixing;
        bUpdateVertexNormal: boolean;
        bFaceOutOfScreen: boolean;
        ReplicatedPayload: UE.ARFaceUpdatePayload;
        ReceiveAdd(Payload: UE.ARFaceUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARFaceUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARFaceUpdatePayload) : void;
        static SetFaceComponentDebugMode(NewDebugMode: UE.EFaceComponentDebugMode) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARFaceComponent;
        static Load(InName: string): ARFaceComponent;
    
        __tid_ARFaceComponent_0__: boolean;
    }
    
    enum EARFaceBlendShape { EyeBlinkLeft, EyeLookDownLeft, EyeLookInLeft, EyeLookOutLeft, EyeLookUpLeft, EyeSquintLeft, EyeWideLeft, EyeBlinkRight, EyeLookDownRight, EyeLookInRight, EyeLookOutRight, EyeLookUpRight, EyeSquintRight, EyeWideRight, JawForward, JawLeft, JawRight, JawOpen, MouthClose, MouthFunnel, MouthPucker, MouthLeft, MouthRight, MouthSmileLeft, MouthSmileRight, MouthFrownLeft, MouthFrownRight, MouthDimpleLeft, MouthDimpleRight, MouthStretchLeft, MouthStretchRight, MouthRollLower, MouthRollUpper, MouthShrugLower, MouthShrugUpper, MouthPressLeft, MouthPressRight, MouthLowerDownLeft, MouthLowerDownRight, MouthUpperUpLeft, MouthUpperUpRight, BrowDownLeft, BrowDownRight, BrowInnerUp, BrowOuterUpLeft, BrowOuterUpRight, CheekPuff, CheekSquintLeft, CheekSquintRight, NoseSneerLeft, NoseSneerRight, TongueOut, HeadYaw, HeadPitch, HeadRoll, LeftEyeYaw, LeftEyePitch, LeftEyeRoll, RightEyeYaw, RightEyePitch, RightEyeRoll, MAX, __typeKeyDoNoAccess}
    enum EAREye { LeftEye, RightEye, EAREye_MAX, __typeKeyDoNoAccess}
    class ARFaceGeometry extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LookAtTarget: UE.Vector;
        bIsTracked: boolean;
        BlendShapes: TMap<UE.EARFaceBlendShape, number>;
        LeftEyeTransform: UE.Transform;
        RightEyeTransform: UE.Transform;
        GetBlendShapes() : TMap<UE.EARFaceBlendShape, number>;
        GetBlendShapeValue(BlendShape: UE.EARFaceBlendShape) : number;
        GetLocalSpaceEyeTransform(Eye: UE.EAREye) : UE.Transform;
        GetWorldSpaceEyeTransform(Eye: UE.EAREye) : UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARFaceGeometry;
        static Load(InName: string): ARFaceGeometry;
    
        __tid_ARFaceGeometry_0__: boolean;
    }
    
    class ARFilter {
        constructor();
        constructor(PackageNames: TArray<string>, PackagePaths: TArray<string>, ObjectPaths: TArray<string>, ClassNames: TArray<string>, RecursiveClassesExclusionSet: TSet<string>, bRecursivePaths: boolean, bRecursiveClasses: boolean, bIncludeOnlyOnDiskAssets: boolean);
        PackageNames: TArray<string>;
        PackagePaths: TArray<string>;
        ObjectPaths: TArray<string>;
        ClassNames: TArray<string>;
        RecursiveClassesExclusionSet: TSet<string>;
        bRecursivePaths: boolean;
        bRecursiveClasses: boolean;
        bIncludeOnlyOnDiskAssets: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARFilter_0__: boolean;
    }
    
    enum EARAltitudeSource { Precise, Coarse, UserDefined, Unknown, EARAltitudeSource_MAX, __typeKeyDoNoAccess}
    class ARGeoAnchor extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetAltitudeMeters() : number;
        GetAltitudeSource() : UE.EARAltitudeSource;
        GetLatitude() : number;
        GetLongitude() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARGeoAnchor;
        static Load(InName: string): ARGeoAnchor;
    
        __tid_ARGeoAnchor_0__: boolean;
    }
    
    class ARGeoAnchorUpdatePayload {
        constructor();
        constructor(SessionPayload: UE.ARSessionPayload, WorldTransform: UE.Transform, Longitude: number, Latitude: number, AltitudeMeters: number, AltitudeSource: UE.EARAltitudeSource, AnchorName: string);
        SessionPayload: UE.ARSessionPayload;
        WorldTransform: UE.Transform;
        Longitude: number;
        Latitude: number;
        AltitudeMeters: number;
        AltitudeSource: UE.EARAltitudeSource;
        AnchorName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARGeoAnchorUpdatePayload_0__: boolean;
    }
    
    enum EGeoAnchorComponentDebugMode { None, ShowGeoData, EGeoAnchorComponentDebugMode_MAX, __typeKeyDoNoAccess}
    class ARGeoAnchorComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARGeoAnchorUpdatePayload;
        ReceiveAdd(Payload: UE.ARGeoAnchorUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARGeoAnchorUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARGeoAnchorUpdatePayload) : void;
        static SetGeoAnchorComponentDebugMode(NewDebugMode: UE.EGeoAnchorComponentDebugMode) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARGeoAnchorComponent;
        static Load(InName: string): ARGeoAnchorComponent;
    
        __tid_ARGeoAnchorComponent_0__: boolean;
    }
    
    enum EARGeoTrackingStateReason { None, NotAvailableAtLocation, NeedLocationPermissions, DevicePointedTooLow, WorldTrackingUnstable, WaitingForLocation, GeoDataNotLoaded, VisualLocalizationFailed, WaitingForAvailabilityCheck, EARGeoTrackingStateReason_MAX, __typeKeyDoNoAccess}
    enum EARGeoTrackingState { Initializing, Localized, Localizing, NotAvailable, EARGeoTrackingState_MAX, __typeKeyDoNoAccess}
    enum EARGeoTrackingAccuracy { Undetermined, Low, Medium, High, EARGeoTrackingAccuracy_MAX, __typeKeyDoNoAccess}
    class ARGeoTrackingSupport extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddGeoAnchorAtLocation(Longitude: number, Latitude: number, OptionalAnchorName: string) : boolean;
        AddGeoAnchorAtLocationWithAltitude(Longitude: number, Latitude: number, AltitudeMeters: number, OptionalAnchorName: string) : boolean;
        GetGeoTrackingAccuracy() : UE.EARGeoTrackingAccuracy;
        GetGeoTrackingState() : UE.EARGeoTrackingState;
        GetGeoTrackingStateReason() : UE.EARGeoTrackingStateReason;
        static GetGeoTrackingSupport() : UE.ARGeoTrackingSupport;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARGeoTrackingSupport;
        static Load(InName: string): ARGeoTrackingSupport;
    
        __tid_ARGeoTrackingSupport_0__: boolean;
    }
    
    class ARGetCandidateObjectAsyncTaskBlueprintProxy extends UE.ARBaseAsyncTaskBlueprintProxy {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(SavedObject: $Nullable<UE.ARCandidateObject>) => void>;
        OnFailed: $MulticastDelegate<(SavedObject: $Nullable<UE.ARCandidateObject>) => void>;
        static ARGetCandidateObject(WorldContextObject: $Nullable<UE.Object>, Location: UE.Vector, Extent: UE.Vector) : UE.ARGetCandidateObjectAsyncTaskBlueprintProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARGetCandidateObjectAsyncTaskBlueprintProxy;
        static Load(InName: string): ARGetCandidateObjectAsyncTaskBlueprintProxy;
    
        __tid_ARGetCandidateObjectAsyncTaskBlueprintProxy_0__: boolean;
    }
    
    class ARImageUpdatePayload {
        constructor();
        constructor(SessionPayload: UE.ARSessionPayload, WorldTransform: UE.Transform, DetectedImage: UE.ARCandidateImage, EstimatedSize: UE.Vector2D);
        SessionPayload: UE.ARSessionPayload;
        WorldTransform: UE.Transform;
        DetectedImage: UE.ARCandidateImage;
        EstimatedSize: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARImageUpdatePayload_0__: boolean;
    }
    
    enum EImageComponentDebugMode { None, ShowDetectedImage, EImageComponentDebugMode_MAX, __typeKeyDoNoAccess}
    class ARImageComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARImageUpdatePayload;
        ReceiveAdd(Payload: UE.ARImageUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARImageUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARImageUpdatePayload) : void;
        static SetImageComponentDebugMode(NewDebugMode: UE.EImageComponentDebugMode) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARImageComponent;
        static Load(InName: string): ARImageComponent;
    
        __tid_ARImageComponent_0__: boolean;
    }
    
    class ARLifeCycleComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnARActorSpawnedDelegate: $MulticastDelegate<(ComponentClass: $Nullable<UE.Class>, NativeID: UE.Guid, SpawnedActor: $Nullable<UE.ARActor>) => void>;
        OnARActorToBeDestroyedDelegate: $MulticastDelegate<(Actor: $Nullable<UE.ARActor>) => void>;
        InstanceARActorSpawnedDelegate__DelegateSignature(ComponentClass: $Nullable<UE.Class>, NativeID: UE.Guid, SpawnedActor: $Nullable<UE.ARActor>) : void;
        InstanceARActorToBeDestroyedDelegate__DelegateSignature(Actor: $Nullable<UE.ARActor>) : void;
        ServerDestroyARActor(Actor: $Nullable<UE.ARActor>) : void;
        ServerSpawnARActor(ComponentClass: $Nullable<UE.Class>, NativeID: UE.Guid) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARLifeCycleComponent;
        static Load(InName: string): ARLifeCycleComponent;
    
        __tid_ARLifeCycleComponent_0__: boolean;
    }
    
    class ARMeshUpdatePayload {
        constructor();
        constructor(SessionPayload: UE.ARSessionPayload, WorldTransform: UE.Transform, ObjectClassification: UE.EARObjectClassification);
        SessionPayload: UE.ARSessionPayload;
        WorldTransform: UE.Transform;
        ObjectClassification: UE.EARObjectClassification;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARMeshUpdatePayload_0__: boolean;
    }
    
    class ARMeshComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARMeshUpdatePayload;
        ReceiveAdd(Payload: UE.ARMeshUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARMeshUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARMeshUpdatePayload) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARMeshComponent;
        static Load(InName: string): ARMeshComponent;
    
        __tid_ARMeshComponent_0__: boolean;
    }
    
    class ARMeshGeometry extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetObjectClassificationAtLocation(InWorldLocation: UE.Vector, OutClassification: $Ref<UE.EARObjectClassification>, OutClassificationLocation: $Ref<UE.Vector>, MaxLocationDiff?: number /* = 10.000000 */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARMeshGeometry;
        static Load(InName: string): ARMeshGeometry;
    
        __tid_ARMeshGeometry_0__: boolean;
    }
    
    class ARObjectUpdatePayload {
        constructor();
        constructor(WorldTransform: UE.Transform);
        WorldTransform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARObjectUpdatePayload_0__: boolean;
    }
    
    class ARObjectComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARObjectUpdatePayload;
        ReceiveAdd(Payload: UE.ARObjectUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARObjectUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARObjectUpdatePayload) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARObjectComponent;
        static Load(InName: string): ARObjectComponent;
    
        __tid_ARObjectComponent_0__: boolean;
    }
    
    class AROriginActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AROriginActor;
        static Load(InName: string): AROriginActor;
    
        __tid_AROriginActor_0__: boolean;
    }
    
    class ARPlaneUpdatePayload {
        constructor();
        constructor(SessionPayload: UE.ARSessionPayload, WorldTransform: UE.Transform, Center: UE.Vector, Extents: UE.Vector, BoundaryVertices: TArray<UE.Vector>, ObjectClassification: UE.EARObjectClassification);
        SessionPayload: UE.ARSessionPayload;
        WorldTransform: UE.Transform;
        Center: UE.Vector;
        Extents: UE.Vector;
        BoundaryVertices: TArray<UE.Vector>;
        ObjectClassification: UE.EARObjectClassification;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARPlaneUpdatePayload_0__: boolean;
    }
    
    enum EPlaneComponentDebugMode { None, ShowNetworkRole, ShowClassification, EPlaneComponentDebugMode_MAX, __typeKeyDoNoAccess}
    class ARPlaneComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARPlaneUpdatePayload;
        ReceiveAdd(Payload: UE.ARPlaneUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARPlaneUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARPlaneUpdatePayload) : void;
        static GetObjectClassificationDebugColors() : TMap<UE.EARObjectClassification, UE.LinearColor>;
        static SetObjectClassificationDebugColors(InColors: TMap<UE.EARObjectClassification, UE.LinearColor>) : void;
        static SetPlaneComponentDebugMode(NewDebugMode: UE.EPlaneComponentDebugMode) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARPlaneComponent;
        static Load(InName: string): ARPlaneComponent;
    
        __tid_ARPlaneComponent_0__: boolean;
    }
    
    class ARPointUpdatePayload {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARPointUpdatePayload_0__: boolean;
    }
    
    class ARPointComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARPointUpdatePayload;
        ReceiveAdd(Payload: UE.ARPointUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARPointUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARPointUpdatePayload) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARPointComponent;
        static Load(InName: string): ARPointComponent;
    
        __tid_ARPointComponent_0__: boolean;
    }
    
    class ARPoseUpdatePayload {
        constructor();
        constructor(WorldTransform: UE.Transform, JointTransforms: TArray<UE.Transform>);
        WorldTransform: UE.Transform;
        JointTransforms: TArray<UE.Transform>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARPoseUpdatePayload_0__: boolean;
    }
    
    enum EPoseComponentDebugMode { None, ShowSkeleton, EPoseComponentDebugMode_MAX, __typeKeyDoNoAccess}
    class ARPoseComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARPoseUpdatePayload;
        ReceiveAdd(Payload: UE.ARPoseUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARPoseUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARPoseUpdatePayload) : void;
        static SetPoseComponentDebugMode(NewDebugMode: UE.EPoseComponentDebugMode) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARPoseComponent;
        static Load(InName: string): ARPoseComponent;
    
        __tid_ARPoseComponent_0__: boolean;
    }
    
    class ARQRCodeUpdatePayload {
        constructor();
        constructor(SessionPayload: UE.ARSessionPayload, WorldTransform: UE.Transform, Extents: UE.Vector, QRCode: string);
        SessionPayload: UE.ARSessionPayload;
        WorldTransform: UE.Transform;
        Extents: UE.Vector;
        QRCode: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARQRCodeUpdatePayload_0__: boolean;
    }
    
    enum EQRCodeComponentDebugMode { None, ShowQRCode, EQRCodeComponentDebugMode_MAX, __typeKeyDoNoAccess}
    class ARQRCodeComponent extends UE.ARComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReplicatedPayload: UE.ARQRCodeUpdatePayload;
        ReceiveAdd(Payload: UE.ARQRCodeUpdatePayload) : void;
        ReceiveUpdate(Payload: UE.ARQRCodeUpdatePayload) : void;
        ServerUpdatePayload(NewPayload: UE.ARQRCodeUpdatePayload) : void;
        static SetQRCodeComponentDebugMode(NewDebugMode: UE.EQRCodeComponentDebugMode) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARQRCodeComponent;
        static Load(InName: string): ARQRCodeComponent;
    
        __tid_ARQRCodeComponent_0__: boolean;
    }
    
    enum ArrayLabelEnum { ArrayIndex0, ArrayIndex1, ArrayIndex2, ArrayIndex3, ArrayIndex4, ArrayIndex5, ArrayIndex_MAX, ArrayLabelEnum_MAX, __typeKeyDoNoAccess}
    class ArrayProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ArrayProperty;
        static Load(InName: string): ArrayProperty;
    
        __tid_ArrayProperty_0__: boolean;
    }
    
    class ARSaveWorldAsyncTaskBlueprintProxy extends UE.ARBaseAsyncTaskBlueprintProxy {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(SavedWorld: TArray<number>) => void>;
        OnFailed: $MulticastDelegate<(SavedWorld: TArray<number>) => void>;
        static ARSaveWorld(WorldContextObject: $Nullable<UE.Object>) : UE.ARSaveWorldAsyncTaskBlueprintProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARSaveWorldAsyncTaskBlueprintProxy;
        static Load(InName: string): ARSaveWorldAsyncTaskBlueprintProxy;
    
        __tid_ARSaveWorldAsyncTaskBlueprintProxy_0__: boolean;
    }
    
    class GameMode extends UE.GameModeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MatchState: string;
        bDelayedStart: boolean;
        NumSpectators: number;
        NumPlayers: number;
        NumBots: number;
        MinRespawnDelay: number;
        NumTravellingPlayers: number;
        EngineMessageClass: UE.Class;
        InactivePlayerArray: TArray<UE.PlayerState>;
        InactivePlayerStateLifeSpan: number;
        MaxInactivePlayers: number;
        bHandleDedicatedServerReplays: boolean;
        AbortMatch() : void;
        EndMatch() : void;
        GetMatchState() : string;
        IsMatchInProgress() : boolean;
        K2_OnSetMatchState(NewState: string) : void;
        ReadyToEndMatch() : boolean;
        ReadyToStartMatch() : boolean;
        RestartGame() : void;
        Say(Msg: string) : void;
        SetBandwidthLimit(AsyncIOBandwidthLimit: number) : void;
        StartMatch() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameMode;
        static Load(InName: string): GameMode;
    
        __tid_GameMode_0__: boolean;
    }
    
    class GameState extends UE.GameStateBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MatchState: string;
        PreviousMatchState: string;
        ElapsedTime: number;
        OnRep_ElapsedTime() : void;
        OnRep_MatchState() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameState;
        static Load(InName: string): GameState;
    
        __tid_GameState_0__: boolean;
    }
    
    class ARSharedWorldGameState extends UE.GameState {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PreviewImageData: TArray<number>;
        ARWorldData: TArray<number>;
        PreviewImageBytesTotal: number;
        ARWorldBytesTotal: number;
        PreviewImageBytesDelivered: number;
        ARWorldBytesDelivered: number;
        K2_OnARWorldMapIsReady() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARSharedWorldGameState;
        static Load(InName: string): ARSharedWorldGameState;
    
        __tid_ARSharedWorldGameState_0__: boolean;
    }
    
    class ARSharedWorldGameMode extends UE.GameMode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BufferSizePerChunk: number;
        GetARSharedWorldGameState() : UE.ARSharedWorldGameState;
        SetARSharedWorldData(ARWorldData: TArray<number>) : void;
        SetARWorldSharingIsReady() : void;
        SetPreviewImageData(ImageData: TArray<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARSharedWorldGameMode;
        static Load(InName: string): ARSharedWorldGameMode;
    
        __tid_ARSharedWorldGameMode_0__: boolean;
    }
    
    class ARSharedWorldPlayerController extends UE.PlayerController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClientInitSharedWorld(PreviewImageSize: number, ARWorldDataSize: number) : void;
        ClientUpdateARWorldData(Offset: number, Buffer: TArray<number>) : void;
        ClientUpdatePreviewImageData(Offset: number, Buffer: TArray<number>) : void;
        ServerMarkReadyForReceiving() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARSharedWorldPlayerController;
        static Load(InName: string): ARSharedWorldPlayerController;
    
        __tid_ARSharedWorldPlayerController_0__: boolean;
    }
    
    class ARSharedWorldReplicationState {
        constructor();
        constructor(PreviewImageOffset: number, ARWorldOffset: number);
        PreviewImageOffset: number;
        ARWorldOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ARSharedWorldReplicationState_0__: boolean;
    }
    
    class LightComponentBase extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightGuid: UE.Guid;
        Brightness: number;
        Intensity: number;
        LightColor: UE.Color;
        bAffectsWorld: boolean;
        CastShadows: boolean;
        CastStaticShadows: boolean;
        CastDynamicShadows: boolean;
        bAffectTranslucentLighting: boolean;
        bTransmission: boolean;
        bCastVolumetricShadow: boolean;
        bCastDeepShadow: boolean;
        bCastRaytracedShadow: boolean;
        bAffectReflection: boolean;
        bAffectGlobalIllumination: boolean;
        DeepShadowLayerDistribution: number;
        IndirectLightingIntensity: number;
        VolumetricScatteringIntensity: number;
        SamplesPerPixel: number;
        StaticEditorTexture: UE.Texture2D;
        StaticEditorTextureScale: number;
        DynamicEditorTexture: UE.Texture2D;
        DynamicEditorTextureScale: number;
        GetLightColor() : UE.LinearColor;
        SetAffectGlobalIllumination(bNewValue: boolean) : void;
        SetAffectReflection(bNewValue: boolean) : void;
        SetCastDeepShadow(bNewValue: boolean) : void;
        SetCastRaytracedShadow(bNewValue: boolean) : void;
        SetCastShadows(bNewValue: boolean) : void;
        SetCastVolumetricShadow(bNewValue: boolean) : void;
        SetSamplesPerPixel(NewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightComponentBase;
        static Load(InName: string): LightComponentBase;
    
        __tid_LightComponentBase_0__: boolean;
    }
    
    enum ESkyLightSourceType { SLS_CapturedScene, SLS_SpecifiedCubemap, SLS_MAX, __typeKeyDoNoAccess}
    enum EOcclusionCombineMode { OCM_Minimum, OCM_Multiply, OCM_MAX, __typeKeyDoNoAccess}
    class SkyLightComponent extends UE.LightComponentBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRealTimeCapture: boolean;
        SourceType: UE.ESkyLightSourceType;
        Cubemap: UE.TextureCube;
        SourceCubemapAngle: number;
        CubemapResolution: number;
        SkyDistanceThreshold: number;
        bCaptureEmissiveOnly: boolean;
        bLowerHemisphereIsBlack: boolean;
        LowerHemisphereColor: UE.LinearColor;
        OcclusionMaxDistance: number;
        Contrast: number;
        OcclusionExponent: number;
        MinOcclusion: number;
        OcclusionTint: UE.Color;
        bCloudAmbientOcclusion: boolean;
        CloudAmbientOcclusionStrength: number;
        CloudAmbientOcclusionExtent: number;
        CloudAmbientOcclusionMapResolutionScale: number;
        CloudAmbientOcclusionApertureScale: number;
        OcclusionCombineMode: UE.EOcclusionCombineMode;
        BlendDestinationCubemap: UE.TextureCube;
        RecaptureSky() : void;
        SetCubemap(NewCubemap: $Nullable<UE.TextureCube>) : void;
        SetCubemapBlend(SourceCubemap: $Nullable<UE.TextureCube>, DestinationCubemap: $Nullable<UE.TextureCube>, InBlendFraction: number) : void;
        SetIndirectLightingIntensity(NewIntensity: number) : void;
        SetIntensity(NewIntensity: number) : void;
        SetLightColor(NewLightColor: UE.LinearColor) : void;
        SetLowerHemisphereColor(InLowerHemisphereColor: UE.LinearColor) : void;
        SetMinOcclusion(InMinOcclusion: number) : void;
        SetOcclusionContrast(InOcclusionContrast: number) : void;
        SetOcclusionExponent(InOcclusionExponent: number) : void;
        SetOcclusionTint(InTint: UE.Color) : void;
        SetVolumetricScatteringIntensity(NewIntensity: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkyLightComponent;
        static Load(InName: string): SkyLightComponent;
    
        __tid_SkyLightComponent_0__: boolean;
    }
    
    class SkyLight extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightComponent: UE.SkyLightComponent;
        bEnabled: boolean;
        OnRep_bEnabled() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkyLight;
        static Load(InName: string): SkyLight;
    
        __tid_SkyLight_0__: boolean;
    }
    
    class ARSkyLight extends UE.SkyLight {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CaptureProbe: UE.AREnvironmentCaptureProbe;
        SetEnvironmentCaptureProbe(InCaptureProbe: $Nullable<UE.AREnvironmentCaptureProbe>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARSkyLight;
        static Load(InName: string): ARSkyLight;
    
        __tid_ARSkyLight_0__: boolean;
    }
    
    class ARTraceResultDummy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTraceResultDummy;
        static Load(InName: string): ARTraceResultDummy;
    
        __tid_ARTraceResultDummy_0__: boolean;
    }
    
    class ARTraceResultLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetDistanceFromCamera(TraceResult: UE.ARTraceResult) : number;
        static GetLocalToTrackingTransform(TraceResult: UE.ARTraceResult) : UE.Transform;
        static GetLocalToWorldTransform(TraceResult: UE.ARTraceResult) : UE.Transform;
        static GetLocalTransform(TraceResult: UE.ARTraceResult) : UE.Transform;
        static GetTraceChannel(TraceResult: UE.ARTraceResult) : UE.EARLineTraceChannels;
        static GetTrackedGeometry(TraceResult: UE.ARTraceResult) : UE.ARTrackedGeometry;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTraceResultLibrary;
        static Load(InName: string): ARTraceResultLibrary;
    
        __tid_ARTraceResultLibrary_0__: boolean;
    }
    
    class ARTrackedObject extends UE.ARTrackedGeometry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DetectedObject: UE.ARCandidateObject;
        GetDetectedObject() : UE.ARCandidateObject;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTrackedObject;
        static Load(InName: string): ARTrackedObject;
    
        __tid_ARTrackedObject_0__: boolean;
    }
    
    class ARTrackableNotifyComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnAddTrackedGeometry: $MulticastDelegate<(TrackedGeometry: $Nullable<UE.ARTrackedGeometry>) => void>;
        OnUpdateTrackedGeometry: $MulticastDelegate<(TrackedGeometry: $Nullable<UE.ARTrackedGeometry>) => void>;
        OnRemoveTrackedGeometry: $MulticastDelegate<(TrackedGeometry: $Nullable<UE.ARTrackedGeometry>) => void>;
        OnAddTrackedPlane: $MulticastDelegate<(TrackedPlane: $Nullable<UE.ARPlaneGeometry>) => void>;
        OnUpdateTrackedPlane: $MulticastDelegate<(TrackedPlane: $Nullable<UE.ARPlaneGeometry>) => void>;
        OnRemoveTrackedPlane: $MulticastDelegate<(TrackedPlane: $Nullable<UE.ARPlaneGeometry>) => void>;
        OnAddTrackedPoint: $MulticastDelegate<(TrackedPoint: $Nullable<UE.ARTrackedPoint>) => void>;
        OnUpdateTrackedPoint: $MulticastDelegate<(TrackedPoint: $Nullable<UE.ARTrackedPoint>) => void>;
        OnRemoveTrackedPoint: $MulticastDelegate<(TrackedPoint: $Nullable<UE.ARTrackedPoint>) => void>;
        OnAddTrackedImage: $MulticastDelegate<(TrackedImage: $Nullable<UE.ARTrackedImage>) => void>;
        OnUpdateTrackedImage: $MulticastDelegate<(TrackedImage: $Nullable<UE.ARTrackedImage>) => void>;
        OnRemoveTrackedImage: $MulticastDelegate<(TrackedImage: $Nullable<UE.ARTrackedImage>) => void>;
        OnAddTrackedFace: $MulticastDelegate<(TrackedFace: $Nullable<UE.ARFaceGeometry>) => void>;
        OnUpdateTrackedFace: $MulticastDelegate<(TrackedFace: $Nullable<UE.ARFaceGeometry>) => void>;
        OnRemoveTrackedFace: $MulticastDelegate<(TrackedFace: $Nullable<UE.ARFaceGeometry>) => void>;
        OnAddTrackedEnvProbe: $MulticastDelegate<(TrackedEnvProbe: $Nullable<UE.AREnvironmentCaptureProbe>) => void>;
        OnUpdateTrackedEnvProbe: $MulticastDelegate<(TrackedEnvProbe: $Nullable<UE.AREnvironmentCaptureProbe>) => void>;
        OnRemoveTrackedEnvProbe: $MulticastDelegate<(TrackedEnvProbe: $Nullable<UE.AREnvironmentCaptureProbe>) => void>;
        OnAddTrackedObject: $MulticastDelegate<(TrackedObject: $Nullable<UE.ARTrackedObject>) => void>;
        OnUpdateTrackedObject: $MulticastDelegate<(TrackedObject: $Nullable<UE.ARTrackedObject>) => void>;
        OnRemoveTrackedObject: $MulticastDelegate<(TrackedObject: $Nullable<UE.ARTrackedObject>) => void>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTrackableNotifyComponent;
        static Load(InName: string): ARTrackableNotifyComponent;
    
        __tid_ARTrackableNotifyComponent_0__: boolean;
    }
    
    class ARTrackedQRCode extends UE.ARTrackedImage {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QRCode: string;
        Version: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTrackedQRCode;
        static Load(InName: string): ARTrackedQRCode;
    
        __tid_ARTrackedQRCode_0__: boolean;
    }
    
    class ARTypesDummyClass extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ARTypesDummyClass;
        static Load(InName: string): ARTypesDummyClass;
    
        __tid_ARTypesDummyClass_0__: boolean;
    }
    
    class AssetActionUtility extends UE.EditorUtilityObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetSupportedClass() : UE.Class;
        IsActionForBlueprints() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetActionUtility;
        static Load(InName: string): AssetActionUtility;
    
        __tid_AssetActionUtility_0__: boolean;
    }
    
    class AssetBakeOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetBakeOptions;
        static Load(InName: string): AssetBakeOptions;
    
        __tid_AssetBakeOptions_0__: boolean;
    }
    
    class PrimaryAssetType {
        constructor();
        constructor(Name: string);
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimaryAssetType_0__: boolean;
    }
    
    class PrimaryAssetId {
        constructor();
        constructor(PrimaryAssetType: UE.PrimaryAssetType, PrimaryAssetName: string);
        PrimaryAssetType: UE.PrimaryAssetType;
        PrimaryAssetName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimaryAssetId_0__: boolean;
    }
    
    class AssetBundleEntry {
        constructor();
        constructor(BundleScope: UE.PrimaryAssetId, BundleName: string, BundleAssets: TArray<UE.SoftObjectPath>);
        BundleScope: UE.PrimaryAssetId;
        BundleName: string;
        BundleAssets: TArray<UE.SoftObjectPath>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetBundleEntry_0__: boolean;
    }
    
    class AssetBundleData {
        constructor();
        constructor(Bundles: TArray<UE.AssetBundleEntry>);
        Bundles: TArray<UE.AssetBundleEntry>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetBundleData_0__: boolean;
    }
    
    enum EOculusAssetType { Default, Store, Language_Pack, Length, EOculusAssetType_MAX, __typeKeyDoNoAccess}
    class AssetConfig {
        constructor();
        constructor(AssetType: UE.EOculusAssetType, Required: boolean, Name: string, Sku: string);
        AssetType: UE.EOculusAssetType;
        Required: boolean;
        Name: string;
        Sku: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetConfig_0__: boolean;
    }
    
    class AssetConfigArray {
        constructor();
        constructor(ConfigArray: TArray<UE.AssetConfig>);
        ConfigArray: TArray<UE.AssetConfig>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetConfigArray_0__: boolean;
    }
    
    class AssetData {
        constructor();
        constructor(ObjectPath: string, PackageName: string, PackagePath: string, AssetName: string, AssetClass: string);
        ObjectPath: string;
        PackageName: string;
        PackagePath: string;
        AssetName: string;
        AssetClass: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetData_0__: boolean;
    }
    
    class AssetEditor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetEditor;
        static Load(InName: string): AssetEditor;
    
        __tid_AssetEditor_0__: boolean;
    }
    
    enum EViewModeIndex { VMI_BrushWireframe, VMI_Wireframe, VMI_Unlit, VMI_Lit, VMI_Lit_DetailLighting, VMI_LightingOnly, VMI_LightComplexity, VMI_ShaderComplexity, VMI_LightmapDensity, VMI_LitLightmapDensity, VMI_ReflectionOverride, VMI_VisualizeBuffer, VMI_StationaryLightOverlap, VMI_CollisionPawn, VMI_CollisionVisibility, VMI_LODColoration, VMI_QuadOverdraw, VMI_PrimitiveDistanceAccuracy, VMI_MeshUVDensityAccuracy, VMI_ShaderComplexityWithQuadOverdraw, VMI_HLODColoration, VMI_GroupLODColoration, VMI_MaterialTextureScaleAccuracy, VMI_RequiredTextureResolution, VMI_PathTracing, VMI_RayTracingDebug, VMI_Max, VMI_Unknown, VMI_MAX, __typeKeyDoNoAccess}
    enum EAnimationViewportCameraFollowMode { None, Bounds, Bone, EAnimationViewportCameraFollowMode_MAX, __typeKeyDoNoAccess}
    class ViewportConfigOptions {
        constructor();
        constructor(ViewModeIndex: UE.EViewModeIndex, ViewFOV: number, CameraSpeedSetting: number, CameraSpeedScalar: number, CameraFollowMode: UE.EAnimationViewportCameraFollowMode, CameraFollowBoneName: string);
        ViewModeIndex: UE.EViewModeIndex;
        ViewFOV: number;
        CameraSpeedSetting: number;
        CameraSpeedScalar: number;
        CameraFollowMode: UE.EAnimationViewportCameraFollowMode;
        CameraFollowBoneName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ViewportConfigOptions_0__: boolean;
    }
    
    class AssetEditorOptions {
        constructor();
        constructor(Context: string, ViewportConfigs: FixSizeArray<UE.ViewportConfigOptions>);
        Context: string;
        ViewportConfigs: FixSizeArray<UE.ViewportConfigOptions>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetEditorOptions_0__: boolean;
    }
    
    class AssetEditorRequestOpenAsset {
        constructor();
        constructor(AssetName: string);
        AssetName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetEditorRequestOpenAsset_0__: boolean;
    }
    
    class Subsystem extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Subsystem;
        static Load(InName: string): Subsystem;
    
        __tid_Subsystem_0__: boolean;
    }
    
    class DynamicSubsystem extends UE.Subsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DynamicSubsystem;
        static Load(InName: string): DynamicSubsystem;
    
        __tid_DynamicSubsystem_0__: boolean;
    }
    
    class EditorSubsystem extends UE.DynamicSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorSubsystem;
        static Load(InName: string): EditorSubsystem;
    
        __tid_EditorSubsystem_0__: boolean;
    }
    
    class AssetEditorSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwnedAssetEditors: TArray<UE.AssetEditor>;
        CloseAllEditorsForAsset(Asset: $Nullable<UE.Object>) : number;
        OpenEditorForAssets(Assets: TArray<UE.Object>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetEditorSubsystem;
        static Load(InName: string): AssetEditorSubsystem;
    
        __tid_AssetEditorSubsystem_0__: boolean;
    }
    
    class AssetEditorToolkitMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetEditorToolkitMenuContext;
        static Load(InName: string): AssetEditorToolkitMenuContext;
    
        __tid_AssetEditorToolkitMenuContext_0__: boolean;
    }
    
    class IniStringValue {
        constructor();
        constructor(Section: string, Key: string, Value: string, Filename: string);
        Section: string;
        Key: string;
        Value: string;
        Filename: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IniStringValue_0__: boolean;
    }
    
    class AssetGuideline extends UE.AssetUserData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Plugins: TArray<string>;
        ProjectSettings: TArray<UE.IniStringValue>;
        GuidelineName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetGuideline;
        static Load(InName: string): AssetGuideline;
    
        __tid_AssetGuideline_0__: boolean;
    }
    
    class AssetManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ObjectReferenceList: TArray<UE.Object>;
        bIsGlobalAsyncScanEnvironment: boolean;
        bShouldGuessTypeAndName: boolean;
        bShouldUseSynchronousLoad: boolean;
        bIsLoadingFromPakFiles: boolean;
        bShouldAcquireMissingChunksOnLoad: boolean;
        bOnlyCookProductionAssets: boolean;
        bIsBulkScanning: boolean;
        bIsPrimaryAssetDirectoryCurrent: boolean;
        bIsManagementDatabaseCurrent: boolean;
        bUpdateManagementDatabaseAfterScan: boolean;
        bIncludeOnlyOnDiskAssets: boolean;
        bHasCompletedInitialScan: boolean;
        NumberOfSpawnedNotifications: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetManager;
        static Load(InName: string): AssetManager;
    
        __tid_AssetManager_0__: boolean;
    }
    
    class AssetManagerRedirect {
        constructor();
        constructor(Old: string, New: string);
        Old: string;
        New: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetManagerRedirect_0__: boolean;
    }
    
    enum EPrimaryAssetCookRule { Unknown, NeverCook, DevelopmentCook, DevelopmentAlwaysCook, AlwaysCook, EPrimaryAssetCookRule_MAX, __typeKeyDoNoAccess}
    class PrimaryAssetRules {
        constructor();
        constructor(Priority: number, ChunkId: number, bApplyRecursively: boolean, CookRule: UE.EPrimaryAssetCookRule);
        Priority: number;
        ChunkId: number;
        bApplyRecursively: boolean;
        CookRule: UE.EPrimaryAssetCookRule;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimaryAssetRules_0__: boolean;
    }
    
    class PrimaryAssetTypeInfo {
        constructor();
        constructor(PrimaryAssetType: string, AssetBaseClass: TSoftClassPtr<UE.Object>, AssetBaseClassLoaded: UE.Class, bHasBlueprintClasses: boolean, bIsEditorOnly: boolean, Directories: TArray<UE.DirectoryPath>, SpecificAssets: TArray<UE.SoftObjectPath>, Rules: UE.PrimaryAssetRules, AssetScanPaths: TArray<string>, bIsDynamicAsset: boolean, NumberOfAssets: number);
        PrimaryAssetType: string;
        AssetBaseClass: TSoftClassPtr<UE.Object>;
        AssetBaseClassLoaded: UE.Class;
        bHasBlueprintClasses: boolean;
        bIsEditorOnly: boolean;
        Directories: TArray<UE.DirectoryPath>;
        SpecificAssets: TArray<UE.SoftObjectPath>;
        Rules: UE.PrimaryAssetRules;
        AssetScanPaths: TArray<string>;
        bIsDynamicAsset: boolean;
        NumberOfAssets: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimaryAssetTypeInfo_0__: boolean;
    }
    
    class PrimaryAssetRulesOverride {
        constructor();
        constructor(PrimaryAssetId: UE.PrimaryAssetId, Rules: UE.PrimaryAssetRules);
        PrimaryAssetId: UE.PrimaryAssetId;
        Rules: UE.PrimaryAssetRules;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimaryAssetRulesOverride_0__: boolean;
    }
    
    class PrimaryAssetRulesCustomOverride {
        constructor();
        constructor(PrimaryAssetType: UE.PrimaryAssetType, FilterDirectory: UE.DirectoryPath, FilterString: string, Rules: UE.PrimaryAssetRules);
        PrimaryAssetType: UE.PrimaryAssetType;
        FilterDirectory: UE.DirectoryPath;
        FilterString: string;
        Rules: UE.PrimaryAssetRules;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimaryAssetRulesCustomOverride_0__: boolean;
    }
    
    class AssetManagerSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PrimaryAssetTypesToScan: TArray<UE.PrimaryAssetTypeInfo>;
        DirectoriesToExclude: TArray<UE.DirectoryPath>;
        PrimaryAssetRules: TArray<UE.PrimaryAssetRulesOverride>;
        CustomPrimaryAssetRules: TArray<UE.PrimaryAssetRulesCustomOverride>;
        bOnlyCookProductionAssets: boolean;
        bShouldManagerDetermineTypeAndName: boolean;
        bShouldGuessTypeAndNameInEditor: boolean;
        bShouldAcquireMissingChunksOnLoad: boolean;
        PrimaryAssetIdRedirects: TArray<UE.AssetManagerRedirect>;
        PrimaryAssetTypeRedirects: TArray<UE.AssetManagerRedirect>;
        AssetPathRedirects: TArray<UE.AssetManagerRedirect>;
        MetaDataTagsForAssetRegistry: TSet<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetManagerSettings;
        static Load(InName: string): AssetManagerSettings;
    
        __tid_AssetManagerSettings_0__: boolean;
    }
    
    class AssetRegistryDependencyOptions {
        constructor();
        constructor(bIncludeSoftPackageReferences: boolean, bIncludeHardPackageReferences: boolean, bIncludeSearchableNames: boolean, bIncludeSoftManagementReferences: boolean, bIncludeHardManagementReferences: boolean);
        bIncludeSoftPackageReferences: boolean;
        bIncludeHardPackageReferences: boolean;
        bIncludeSearchableNames: boolean;
        bIncludeSoftManagementReferences: boolean;
        bIncludeHardManagementReferences: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetRegistryDependencyOptions_0__: boolean;
    }
    
    class AssetRegistry extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetAllAssets(OutAssetData: $Ref<TArray<UE.AssetData>>, bIncludeOnlyOnDiskAssets?: boolean /* = false */) : boolean;
        GetAllCachedPaths(OutPathList: $Ref<TArray<string>>) : void;
        GetAssetByObjectPath(ObjectPath: string, bIncludeOnlyOnDiskAssets?: boolean /* = false */) : UE.AssetData;
        GetAssets(Filter: UE.ARFilter, OutAssetData: $Ref<TArray<UE.AssetData>>) : boolean;
        GetAssetsByClass(ClassName: string, OutAssetData: $Ref<TArray<UE.AssetData>>, bSearchSubClasses?: boolean /* = false */) : boolean;
        GetAssetsByPackageName(PackageName: string, OutAssetData: $Ref<TArray<UE.AssetData>>, bIncludeOnlyOnDiskAssets?: boolean /* = false */) : boolean;
        GetAssetsByPath(PackagePath: string, OutAssetData: $Ref<TArray<UE.AssetData>>, bRecursive?: boolean /* = false */, bIncludeOnlyOnDiskAssets?: boolean /* = false */) : boolean;
        GetSubPaths(InBasePath: string, OutPathList: $Ref<TArray<string>>, bInRecurse: boolean) : void;
        HasAssets(PackagePath: string, bRecursive?: boolean /* = false */) : boolean;
        IsLoadingAssets() : boolean;
        K2_GetDependencies(PackageName: string, DependencyOptions: UE.AssetRegistryDependencyOptions, OutDependencies: $Ref<TArray<string>>) : boolean;
        K2_GetReferencers(PackageName: string, ReferenceOptions: UE.AssetRegistryDependencyOptions, OutReferencers: $Ref<TArray<string>>) : boolean;
        PrioritizeSearchPath(PathToPrioritize: string) : void;
        RunAssetsThroughFilter(AssetDataList: $Ref<TArray<UE.AssetData>>, Filter: UE.ARFilter) : void;
        ScanFilesSynchronous(InFilePaths: TArray<string>, bForceRescan?: boolean /* = false */) : void;
        ScanModifiedAssetFiles(InFilePaths: TArray<string>) : void;
        ScanPathsSynchronous(InPaths: TArray<string>, bForceRescan?: boolean /* = false */) : void;
        SearchAllAssets(bSynchronousSearch: boolean) : void;
        UseFilterToExcludeAssets(AssetDataList: $Ref<TArray<UE.AssetData>>, Filter: UE.ARFilter) : void;
        WaitForCompletion() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetRegistry;
        static Load(InName: string): AssetRegistry;
    
        __tid_AssetRegistry_0__: boolean;
    }
    
    class AssetRegistryDumpCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetRegistryDumpCommandlet;
        static Load(InName: string): AssetRegistryDumpCommandlet;
    
        __tid_AssetRegistryDumpCommandlet_0__: boolean;
    }
    
    class TagAndValue {
        constructor();
        constructor(Tag: string, Value: string);
        Tag: string;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TagAndValue_0__: boolean;
    }
    
    class AssetRegistryHelpers extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateAssetData(InAsset: $Nullable<UE.Object>, bAllowBlueprintClass?: boolean /* = false */) : UE.AssetData;
        static GetAsset(InAssetData: UE.AssetData) : UE.Object;
        static GetAssetRegistry() : AssetRegistry;
        static GetClass(InAssetData: UE.AssetData) : UE.Class;
        static GetExportTextName(InAssetData: UE.AssetData) : string;
        static GetFullName(InAssetData: UE.AssetData) : string;
        static GetTagValue(InAssetData: UE.AssetData, InTagName: string, OutTagValue: $Ref<string>) : boolean;
        static IsAssetLoaded(InAssetData: UE.AssetData) : boolean;
        static IsRedirector(InAssetData: UE.AssetData) : boolean;
        static IsUAsset(InAssetData: UE.AssetData) : boolean;
        static IsValid(InAssetData: UE.AssetData) : boolean;
        static SetFilterTagsAndValues(InFilter: UE.ARFilter, InTagsAndValues: TArray<UE.TagAndValue>) : UE.ARFilter;
        static ToSoftObjectPath(InAssetData: UE.AssetData) : UE.SoftObjectPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetRegistryHelpers;
        static Load(InName: string): AssetRegistryHelpers;
    
        __tid_AssetRegistryHelpers_0__: boolean;
    }
    
    class AssetRegistryImpl extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetRegistryImpl;
        static Load(InName: string): AssetRegistryImpl;
    
        __tid_AssetRegistryImpl_0__: boolean;
    }
    
    class AssetRegUtilCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetRegUtilCommandlet;
        static Load(InName: string): AssetRegUtilCommandlet;
    
        __tid_AssetRegUtilCommandlet_0__: boolean;
    }
    
    class AssetRenameData {
        constructor();
        constructor(Asset: TWeakObjectPtr<UE.Object>, NewPackagePath: string, NewName: string, OldObjectPath: UE.SoftObjectPath, NewObjectPath: UE.SoftObjectPath, bOnlyFixSoftReferences: boolean);
        Asset: TWeakObjectPtr<UE.Object>;
        NewPackagePath: string;
        NewName: string;
        OldObjectPath: UE.SoftObjectPath;
        NewObjectPath: UE.SoftObjectPath;
        bOnlyFixSoftReferences: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AssetRenameData_0__: boolean;
    }
    
    class EngineSubsystem extends UE.DynamicSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EngineSubsystem;
        static Load(InName: string): EngineSubsystem;
    
        __tid_EngineSubsystem_0__: boolean;
    }
    
    enum ECollectionScriptingShareType { Local, Private, Shared, ECollectionScriptingShareType_MAX, __typeKeyDoNoAccess}
    class AssetTagsSubsystem extends UE.EngineSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddAssetDatasToCollection(Name: string, AssetDatas: TArray<UE.AssetData>) : boolean;
        AddAssetDataToCollection(Name: string, AssetData: UE.AssetData) : boolean;
        AddAssetPtrsToCollection(Name: string, AssetPtrs: TArray<UE.Object>) : boolean;
        AddAssetPtrToCollection(Name: string, AssetPtr: $Nullable<UE.Object>) : boolean;
        AddAssetsToCollection(Name: string, AssetPathNames: TArray<string>) : boolean;
        AddAssetToCollection(Name: string, AssetPathName: string) : boolean;
        CollectionExists(Name: string) : boolean;
        CreateCollection(Name: string, ShareType: UE.ECollectionScriptingShareType) : boolean;
        DestroyCollection(Name: string) : boolean;
        EmptyCollection(Name: string) : boolean;
        GetAssetsInCollection(Name: string) : TArray<UE.AssetData>;
        GetCollections() : TArray<string>;
        GetCollectionsContainingAsset(AssetPathName: string) : TArray<string>;
        GetCollectionsContainingAssetData(AssetData: UE.AssetData) : TArray<string>;
        GetCollectionsContainingAssetPtr(AssetPtr: $Nullable<UE.Object>) : TArray<string>;
        RemoveAssetDataFromCollection(Name: string, AssetData: UE.AssetData) : boolean;
        RemoveAssetDatasFromCollection(Name: string, AssetDatas: TArray<UE.AssetData>) : boolean;
        RemoveAssetFromCollection(Name: string, AssetPathName: string) : boolean;
        RemoveAssetPtrFromCollection(Name: string, AssetPtr: $Nullable<UE.Object>) : boolean;
        RemoveAssetPtrsFromCollection(Name: string, AssetPtrs: TArray<UE.Object>) : boolean;
        RemoveAssetsFromCollection(Name: string, AssetPathNames: TArray<string>) : boolean;
        RenameCollection(Name: string, NewName: string) : boolean;
        ReparentCollection(Name: string, NewParentName: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetTagsSubsystem;
        static Load(InName: string): AssetTagsSubsystem;
    
        __tid_AssetTagsSubsystem_0__: boolean;
    }
    
    enum EAssetRenameResult { Failure, Success, Pending, EAssetRenameResult_MAX, __typeKeyDoNoAccess}
    class AssetTools extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreateAsset(AssetName: string, PackagePath: string, AssetClass: $Nullable<UE.Class>, Factory: $Nullable<UE.Factory>, CallingContext?: string /* = "None" */) : UE.Object;
        CreateAssetWithDialog(AssetName: string, PackagePath: string, AssetClass: $Nullable<UE.Class>, Factory: $Nullable<UE.Factory>, CallingContext?: string /* = "None" */) : UE.Object;
        CreateUniqueAssetName(InBasePackageName: string, InSuffix: string, OutPackageName: $Ref<string>, OutAssetName: $Ref<string>) : void;
        DuplicateAsset(AssetName: string, PackagePath: string, OriginalObject: $Nullable<UE.Object>) : UE.Object;
        DuplicateAssetWithDialog(AssetName: string, PackagePath: string, OriginalObject: $Nullable<UE.Object>) : UE.Object;
        DuplicateAssetWithDialogAndTitle(AssetName: string, PackagePath: string, OriginalObject: $Nullable<UE.Object>, DialogTitle: string) : UE.Object;
        ExportAssets(AssetsToExport: TArray<string>, ExportPath: string) : void;
        ExportAssetsWithDialog(AssetsToExport: TArray<string>, bPromptForIndividualFilenames: boolean) : void;
        FindSoftReferencesToObject(TargetObject: UE.SoftObjectPath, ReferencingObjects: $Ref<TArray<UE.Object>>) : void;
        ImportAssetsAutomated(ImportData: $Nullable<UE.AutomatedAssetImportData>) : TArray<UE.Object>;
        ImportAssetsWithDialog(DestinationPath: string) : TArray<UE.Object>;
        ImportAssetTasks(ImportTasks: TArray<UE.AssetImportTask>) : void;
        OpenEditorForAssets(Assets: TArray<UE.Object>) : void;
        RenameAssets(AssetsAndNames: TArray<UE.AssetRenameData>) : boolean;
        RenameAssetsWithDialog(AssetsAndNames: TArray<UE.AssetRenameData>, bAutoCheckout?: boolean /* = false */) : UE.EAssetRenameResult;
        RenameReferencingSoftObjectPaths(PackagesToCheck: TArray<UE.Package>, AssetRedirectorMap: TMap<UE.SoftObjectPath, UE.SoftObjectPath>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetTools;
        static Load(InName: string): AssetTools;
    
        __tid_AssetTools_0__: boolean;
    }
    
    class AssetToolsHelpers extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetAssetTools() : AssetTools;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetToolsHelpers;
        static Load(InName: string): AssetToolsHelpers;
    
        __tid_AssetToolsHelpers_0__: boolean;
    }
    
    class AssetToolsImpl extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetToolsImpl;
        static Load(InName: string): AssetToolsImpl;
    
        __tid_AssetToolsImpl_0__: boolean;
    }
    
    class AssetToolsSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AdvancedCopyCustomizations: TArray<UE.AdvancedCopyMap>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetToolsSettings;
        static Load(InName: string): AssetToolsSettings;
    
        __tid_AssetToolsSettings_0__: boolean;
    }
    
    class PreviewSceneProfile {
        constructor();
        constructor(ProfileName: string, bSharedProfile: boolean, bUseSkyLighting: boolean, DirectionalLightIntensity: number, DirectionalLightColor: UE.LinearColor, SkyLightIntensity: number, bRotateLightingRig: boolean, bShowEnvironment: boolean, bShowFloor: boolean, EnvironmentColor: UE.LinearColor, EnvironmentIntensity: number, EnvironmentCubeMap: TSoftObjectPtr<UE.TextureCube>, EnvironmentCubeMapPath: string, bPostProcessingEnabled: boolean, PostProcessingSettings: UE.PostProcessSettings, LightingRigRotation: number, RotationSpeed: number, DirectionalLightRotation: UE.Rotator);
        ProfileName: string;
        bSharedProfile: boolean;
        bUseSkyLighting: boolean;
        DirectionalLightIntensity: number;
        DirectionalLightColor: UE.LinearColor;
        SkyLightIntensity: number;
        bRotateLightingRig: boolean;
        bShowEnvironment: boolean;
        bShowFloor: boolean;
        EnvironmentColor: UE.LinearColor;
        EnvironmentIntensity: number;
        EnvironmentCubeMap: TSoftObjectPtr<UE.TextureCube>;
        EnvironmentCubeMapPath: string;
        bPostProcessingEnabled: boolean;
        PostProcessingSettings: UE.PostProcessSettings;
        LightingRigRotation: number;
        RotationSpeed: number;
        DirectionalLightRotation: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PreviewSceneProfile_0__: boolean;
    }
    
    class AssetViewerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Profiles: TArray<UE.PreviewSceneProfile>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AssetViewerSettings;
        static Load(InName: string): AssetViewerSettings;
    
        __tid_AssetViewerSettings_0__: boolean;
    }
    
    class AsyncActionLoadPrimaryAssetBase extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncActionLoadPrimaryAssetBase;
        static Load(InName: string): AsyncActionLoadPrimaryAssetBase;
    
        __tid_AsyncActionLoadPrimaryAssetBase_0__: boolean;
    }
    
    class AsyncActionChangePrimaryAssetBundles extends UE.AsyncActionLoadPrimaryAssetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Completed: $MulticastDelegate<() => void>;
        static AsyncChangeBundleStateForMatchingPrimaryAssets(WorldContextObject: $Nullable<UE.Object>, NewBundles: TArray<string>, OldBundles: TArray<string>) : UE.AsyncActionChangePrimaryAssetBundles;
        static AsyncChangeBundleStateForPrimaryAssetList(WorldContextObject: $Nullable<UE.Object>, PrimaryAssetList: TArray<UE.PrimaryAssetId>, AddBundles: TArray<string>, RemoveBundles: TArray<string>) : UE.AsyncActionChangePrimaryAssetBundles;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncActionChangePrimaryAssetBundles;
        static Load(InName: string): AsyncActionChangePrimaryAssetBundles;
    
        __tid_AsyncActionChangePrimaryAssetBundles_0__: boolean;
    }
    
    class SaveGame extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SaveGame;
        static Load(InName: string): SaveGame;
    
        __tid_SaveGame_0__: boolean;
    }
    
    class AsyncActionHandleSaveGame extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Completed: $MulticastDelegate<(SaveGame: $Nullable<UE.SaveGame>, bSuccess: boolean) => void>;
        SaveGameObject: UE.SaveGame;
        static AsyncLoadGameFromSlot(WorldContextObject: $Nullable<UE.Object>, SlotName: string, UserIndex: number) : UE.AsyncActionHandleSaveGame;
        static AsyncSaveGameToSlot(WorldContextObject: $Nullable<UE.Object>, SaveGameObject: $Nullable<UE.SaveGame>, SlotName: string, UserIndex: number) : UE.AsyncActionHandleSaveGame;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncActionHandleSaveGame;
        static Load(InName: string): AsyncActionHandleSaveGame;
    
        __tid_AsyncActionHandleSaveGame_0__: boolean;
    }
    
    class AsyncActionLoadPrimaryAsset extends UE.AsyncActionLoadPrimaryAssetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Completed: $MulticastDelegate<(Loaded: $Nullable<UE.Object>) => void>;
        static AsyncLoadPrimaryAsset(WorldContextObject: $Nullable<UE.Object>, PrimaryAsset: UE.PrimaryAssetId, LoadBundles: TArray<string>) : UE.AsyncActionLoadPrimaryAsset;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncActionLoadPrimaryAsset;
        static Load(InName: string): AsyncActionLoadPrimaryAsset;
    
        __tid_AsyncActionLoadPrimaryAsset_0__: boolean;
    }
    
    class AsyncActionLoadPrimaryAssetClass extends UE.AsyncActionLoadPrimaryAssetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Completed: $MulticastDelegate<(Loaded: $Nullable<UE.Class>) => void>;
        static AsyncLoadPrimaryAssetClass(WorldContextObject: $Nullable<UE.Object>, PrimaryAsset: UE.PrimaryAssetId, LoadBundles: TArray<string>) : UE.AsyncActionLoadPrimaryAssetClass;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncActionLoadPrimaryAssetClass;
        static Load(InName: string): AsyncActionLoadPrimaryAssetClass;
    
        __tid_AsyncActionLoadPrimaryAssetClass_0__: boolean;
    }
    
    class AsyncActionLoadPrimaryAssetClassList extends UE.AsyncActionLoadPrimaryAssetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Completed: $MulticastDelegate<(Loaded: TArray<UE.Class>) => void>;
        static AsyncLoadPrimaryAssetClassList(WorldContextObject: $Nullable<UE.Object>, PrimaryAssetList: TArray<UE.PrimaryAssetId>, LoadBundles: TArray<string>) : UE.AsyncActionLoadPrimaryAssetClassList;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncActionLoadPrimaryAssetClassList;
        static Load(InName: string): AsyncActionLoadPrimaryAssetClassList;
    
        __tid_AsyncActionLoadPrimaryAssetClassList_0__: boolean;
    }
    
    class AsyncActionLoadPrimaryAssetList extends UE.AsyncActionLoadPrimaryAssetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Completed: $MulticastDelegate<(Loaded: TArray<UE.Object>) => void>;
        static AsyncLoadPrimaryAssetList(WorldContextObject: $Nullable<UE.Object>, PrimaryAssetList: TArray<UE.PrimaryAssetId>, LoadBundles: TArray<string>) : UE.AsyncActionLoadPrimaryAssetList;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncActionLoadPrimaryAssetList;
        static Load(InName: string): AsyncActionLoadPrimaryAssetList;
    
        __tid_AsyncActionLoadPrimaryAssetList_0__: boolean;
    }
    
    class AsyncLoadState extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LoadedCallback: $Delegate<(Obj: $Nullable<UE.Class>) => void>;
        StartLoad(InPath: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncLoadState;
        static Load(InName: string): AsyncLoadState;
    
        __tid_AsyncLoadState_0__: boolean;
    }
    
    class XRDeviceId {
        constructor();
        constructor(SystemName: string, DeviceId: number);
        SystemName: string;
        DeviceId: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_XRDeviceId_0__: boolean;
    }
    
    class AsyncTask_LoadXRDeviceVisComponent extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnModelLoaded: $MulticastDelegate<(LoadedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        OnLoadFailure: $MulticastDelegate<(LoadedComponent: $Nullable<UE.PrimitiveComponent>) => void>;
        SpawnedComponent: UE.PrimitiveComponent;
        static AddDeviceVisualizationComponentAsync(Target: $Nullable<UE.Actor>, XRDeviceId: UE.XRDeviceId, bManualAttachment: boolean, RelativeTransform: UE.Transform, NewComponent: $Ref<UE.PrimitiveComponent>) : UE.AsyncTask_LoadXRDeviceVisComponent;
        static AddNamedDeviceVisualizationComponentAsync(Target: $Nullable<UE.Actor>, SystemName: string, DeviceName: string, bManualAttachment: boolean, RelativeTransform: UE.Transform, XRDeviceId: $Ref<UE.XRDeviceId>, NewComponent: $Ref<UE.PrimitiveComponent>) : UE.AsyncTask_LoadXRDeviceVisComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncTask_LoadXRDeviceVisComponent;
        static Load(InName: string): AsyncTask_LoadXRDeviceVisComponent;
    
        __tid_AsyncTask_LoadXRDeviceVisComponent_0__: boolean;
    }
    
    enum EPixelFormat { PF_Unknown, PF_A32B32G32R32F, PF_B8G8R8A8, PF_G8, PF_G16, PF_DXT1, PF_DXT3, PF_DXT5, PF_UYVY, PF_FloatRGB, PF_FloatRGBA, PF_DepthStencil, PF_ShadowDepth, PF_R32_FLOAT, PF_G16R16, PF_G16R16F, PF_G16R16F_FILTER, PF_G32R32F, PF_A2B10G10R10, PF_A16B16G16R16, PF_D24, PF_R16F, PF_R16F_FILTER, PF_BC5, PF_V8U8, PF_A1, PF_FloatR11G11B10, PF_A8, PF_R32_UINT, PF_R32_SINT, PF_PVRTC2, PF_PVRTC4, PF_R16_UINT, PF_R16_SINT, PF_R16G16B16A16_UINT, PF_R16G16B16A16_SINT, PF_R5G6B5_UNORM, PF_R8G8B8A8, PF_A8R8G8B8, PF_BC4, PF_R8G8, PF_ATC_RGB, PF_ATC_RGBA_E, PF_ATC_RGBA_I, PF_X24_G8, PF_ETC1, PF_ETC2_RGB, PF_ETC2_RGBA, PF_R32G32B32A32_UINT, PF_R16G16_UINT, PF_ASTC_4x4, PF_ASTC_6x6, PF_ASTC_8x8, PF_ASTC_10x10, PF_ASTC_12x12, PF_BC6H, PF_BC7, PF_R8_UINT, PF_L8, PF_XGXR8, PF_R8G8B8A8_UINT, PF_R8G8B8A8_SNORM, PF_R16G16B16A16_UNORM, PF_R16G16B16A16_SNORM, PF_PLATFORM_HDR_0, PF_PLATFORM_HDR_1, PF_PLATFORM_HDR_2, PF_NV12, PF_R32G32_UINT, PF_ETC2_R11_EAC, PF_ETC2_RG11_EAC, PF_MAX, __typeKeyDoNoAccess}
    class Texture2DDynamic extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Format: UE.EPixelFormat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Texture2DDynamic;
        static Load(InName: string): Texture2DDynamic;
    
        __tid_Texture2DDynamic_0__: boolean;
    }
    
    class AsyncTaskDownloadImage extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(Texture: $Nullable<UE.Texture2DDynamic>) => void>;
        OnFail: $MulticastDelegate<(Texture: $Nullable<UE.Texture2DDynamic>) => void>;
        static DownloadImage(URL: string) : UE.AsyncTaskDownloadImage;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AsyncTaskDownloadImage;
        static Load(InName: string): AsyncTaskDownloadImage;
    
        __tid_AsyncTaskDownloadImage_0__: boolean;
    }
    
    class SceneComponentInstanceData extends UE.ActorComponentInstanceData {
        constructor();
        constructor(AttachedInstanceComponents: TMap<UE.SceneComponent, UE.Transform>);
        AttachedInstanceComponents: TMap<UE.SceneComponent, UE.Transform>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SceneComponentInstanceData_0__: boolean;
    }
    
    class AtmospherePrecomputeInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AtmospherePrecomputeInstanceData_0__: boolean;
    }
    
    class AtmospherePrecomputeParameters {
        constructor();
        constructor(DensityHeight: number, DecayHeight: number, MaxScatteringOrder: number, TransmittanceTexWidth: number, TransmittanceTexHeight: number, IrradianceTexWidth: number, IrradianceTexHeight: number, InscatterAltitudeSampleNum: number, InscatterMuNum: number, InscatterMuSNum: number, InscatterNuNum: number);
        DensityHeight: number;
        DecayHeight: number;
        MaxScatteringOrder: number;
        TransmittanceTexWidth: number;
        TransmittanceTexHeight: number;
        IrradianceTexWidth: number;
        IrradianceTexHeight: number;
        InscatterAltitudeSampleNum: number;
        InscatterMuNum: number;
        InscatterMuSNum: number;
        InscatterNuNum: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AtmospherePrecomputeParameters_0__: boolean;
    }
    
    class AtmosphericFogComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SunMultiplier: number;
        FogMultiplier: number;
        DensityMultiplier: number;
        DensityOffset: number;
        DistanceScale: number;
        AltitudeScale: number;
        DistanceOffset: number;
        GroundOffset: number;
        StartDistance: number;
        SunDiscScale: number;
        DefaultBrightness: number;
        DefaultLightColor: UE.Color;
        bDisableSunDisk: boolean;
        bAtmosphereAffectsSunIlluminance: boolean;
        bDisableGroundScattering: boolean;
        PrecomputeParams: UE.AtmospherePrecomputeParameters;
        TransmittanceTexture: UE.Texture2D;
        IrradianceTexture: UE.Texture2D;
        DisableGroundScattering(NewGroundScattering: boolean) : void;
        DisableSunDisk(NewSunDisk: boolean) : void;
        SetAltitudeScale(NewAltitudeScale: number) : void;
        SetDefaultBrightness(NewBrightness: number) : void;
        SetDefaultLightColor(NewLightColor: UE.LinearColor) : void;
        SetDensityMultiplier(NewDensityMultiplier: number) : void;
        SetDensityOffset(NewDensityOffset: number) : void;
        SetDistanceOffset(NewDistanceOffset: number) : void;
        SetDistanceScale(NewDistanceScale: number) : void;
        SetFogMultiplier(NewFogMultiplier: number) : void;
        SetPrecomputeParams(DensityHeight: number, MaxScatteringOrder: number, InscatterAltitudeSampleNum: number) : void;
        SetStartDistance(NewStartDistance: number) : void;
        SetSunMultiplier(NewSunMultiplier: number) : void;
        StartPrecompute() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AtmosphericFogComponent;
        static Load(InName: string): AtmosphericFogComponent;
    
        __tid_AtmosphericFogComponent_0__: boolean;
    }
    
    class AtmosphericFog extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AtmosphericFogComponent: UE.AtmosphericFogComponent;
        ArrowComponent: UE.ArrowComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AtmosphericFog;
        static Load(InName: string): AtmosphericFog;
    
        __tid_AtmosphericFog_0__: boolean;
    }
    
    class MeshElementAttributeValue {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshElementAttributeValue_0__: boolean;
    }
    
    class MeshElementAttributeData {
        constructor();
        constructor(AttributeName: string, AttributeIndex: number, AttributeValue: UE.MeshElementAttributeValue);
        AttributeName: string;
        AttributeIndex: number;
        AttributeValue: UE.MeshElementAttributeValue;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshElementAttributeData_0__: boolean;
    }
    
    class MeshElementAttributeList {
        constructor();
        constructor(Attributes: TArray<UE.MeshElementAttributeData>);
        Attributes: TArray<UE.MeshElementAttributeData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshElementAttributeList_0__: boolean;
    }
    
    class AttributesForEdge {
        constructor();
        constructor(EdgeID: UE.EdgeID, EdgeAttributes: UE.MeshElementAttributeList);
        EdgeID: UE.EdgeID;
        EdgeAttributes: UE.MeshElementAttributeList;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AttributesForEdge_0__: boolean;
    }
    
    class AttributesForVertex {
        constructor();
        constructor(VertexID: UE.VertexID, VertexAttributes: UE.MeshElementAttributeList);
        VertexID: UE.VertexID;
        VertexAttributes: UE.MeshElementAttributeList;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AttributesForVertex_0__: boolean;
    }
    
    class AttributesForVertexInstance {
        constructor();
        constructor(VertexInstanceID: UE.VertexInstanceID, VertexInstanceAttributes: UE.MeshElementAttributeList);
        VertexInstanceID: UE.VertexInstanceID;
        VertexInstanceAttributes: UE.MeshElementAttributeList;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AttributesForVertexInstance_0__: boolean;
    }
    
    class AudioAnalyzerAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioAnalyzerAsset;
        static Load(InName: string): AudioAnalyzerAsset;
    
        __tid_AudioAnalyzerAsset_0__: boolean;
    }
    
    class AudioAnalyzerNRT extends UE.AudioAnalyzerAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sound: UE.SoundWave;
        DurationInSeconds: number;
        AnalyzeAudio() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioAnalyzerNRT;
        static Load(InName: string): AudioAnalyzerNRT;
    
        __tid_AudioAnalyzerNRT_0__: boolean;
    }
    
    class AudioAnalyzerNRTSettings extends UE.AudioAnalyzerAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioAnalyzerNRTSettings;
        static Load(InName: string): AudioAnalyzerNRTSettings;
    
        __tid_AudioAnalyzerNRTSettings_0__: boolean;
    }
    
    class AudioBusFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioBusFactory;
        static Load(InName: string): AudioBusFactory;
    
        __tid_AudioBusFactory_0__: boolean;
    }
    
    class AudioGenerator extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioGenerator;
        static Load(InName: string): AudioGenerator;
    
        __tid_AudioGenerator_0__: boolean;
    }
    
    class AudioCaptureDeviceInfo {
        constructor();
        constructor(DeviceName: string, NumInputChannels: number, SampleRate: number);
        DeviceName: string;
        NumInputChannels: number;
        SampleRate: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioCaptureDeviceInfo_0__: boolean;
    }
    
    class AudioCapture extends UE.AudioGenerator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetAudioCaptureDeviceInfo(OutInfo: $Ref<UE.AudioCaptureDeviceInfo>) : boolean;
        IsCapturingAudio() : boolean;
        StartCapturingAudio() : void;
        StopCapturingAudio() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioCapture;
        static Load(InName: string): AudioCapture;
    
        __tid_AudioCapture_0__: boolean;
    }
    
    class SoundWaveProcedural extends UE.SoundWave {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundWaveProcedural;
        static Load(InName: string): SoundWaveProcedural;
    
        __tid_SoundWaveProcedural_0__: boolean;
    }
    
    class SynthSound extends UE.SoundWaveProcedural {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwningSynthComponent: UE.SynthComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthSound;
        static Load(InName: string): SynthSound;
    
        __tid_SynthSound_0__: boolean;
    }
    
    class SynthComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoDestroy: boolean;
        bStopWhenOwnerDestroyed: boolean;
        bAllowSpatialization: boolean;
        bOverrideAttenuation: boolean;
        bOutputToBusOnly: boolean;
        AttenuationSettings: UE.SoundAttenuation;
        AttenuationOverrides: UE.SoundAttenuationSettings;
        ConcurrencySettings: UE.SoundConcurrency;
        ConcurrencySet: TSet<UE.SoundConcurrency>;
        SoundClass: UE.SoundClass;
        SourceEffectChain: UE.SoundEffectSourcePresetChain;
        SoundSubmix: UE.SoundSubmixBase;
        SoundSubmixSends: TArray<UE.SoundSubmixSendInfo>;
        BusSends: TArray<UE.SoundSourceBusSendInfo>;
        PreEffectBusSends: TArray<UE.SoundSourceBusSendInfo>;
        bIsUISound: boolean;
        bIsPreviewSound: boolean;
        EnvelopeFollowerAttackTime: number;
        EnvelopeFollowerReleaseTime: number;
        OnAudioEnvelopeValue: $MulticastDelegate<(EnvelopeValue: number) => void>;
        Synth: UE.SynthSound;
        AudioComponent: UE.AudioComponent;
        IsPlaying() : boolean;
        SetLowPassFilterEnabled(InLowPassFilterEnabled: boolean) : void;
        SetLowPassFilterFrequency(InLowPassFilterFrequency: number) : void;
        SetSubmixSend(Submix: $Nullable<UE.SoundSubmixBase>, SendLevel: number) : void;
        SetVolumeMultiplier(VolumeMultiplier: number) : void;
        Start() : void;
        Stop() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthComponent;
        static Load(InName: string): SynthComponent;
    
        __tid_SynthComponent_0__: boolean;
    }
    
    class AudioCaptureComponent extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        JitterLatencyFrames: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioCaptureComponent;
        static Load(InName: string): AudioCaptureComponent;
    
        __tid_AudioCaptureComponent_0__: boolean;
    }
    
    class AudioCaptureFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateAudioCapture() : UE.AudioCapture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioCaptureFunctionLibrary;
        static Load(InName: string): AudioCaptureFunctionLibrary;
    
        __tid_AudioCaptureFunctionLibrary_0__: boolean;
    }
    
    class AudioCurveSourceComponent extends UE.AudioComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurveSourceBindingName: string;
        CurveSyncOffset: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioCurveSourceComponent;
        static Load(InName: string): AudioCurveSourceComponent;
    
        __tid_AudioCurveSourceComponent_0__: boolean;
    }
    
    class AudioEndpointSettingsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioEndpointSettingsBase;
        static Load(InName: string): AudioEndpointSettingsBase;
    
        __tid_AudioEndpointSettingsBase_0__: boolean;
    }
    
    class AudioImpulseResponse extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImpulseResponse: TArray<number>;
        NumChannels: number;
        SampleRate: number;
        NormalizationVolumeDb: number;
        bTrueStereo: boolean;
        IRData: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioImpulseResponse;
        static Load(InName: string): AudioImpulseResponse;
    
        __tid_AudioImpulseResponse_0__: boolean;
    }
    
    class AudioImpulseResponseFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioImpulseResponseFactory;
        static Load(InName: string): AudioImpulseResponseFactory;
    
        __tid_AudioImpulseResponseFactory_0__: boolean;
    }
    
    class SoundNode extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChildNodes: TArray<UE.SoundNode>;
        GraphNode: UE.EdGraphNode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNode;
        static Load(InName: string): SoundNode;
    
        __tid_SoundNode_0__: boolean;
    }
    
    class SoundCue extends UE.SoundBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bPrimeOnLoad: boolean;
        FirstNode: UE.SoundNode;
        VolumeMultiplier: number;
        PitchMultiplier: number;
        AttenuationOverrides: UE.SoundAttenuationSettings;
        AllNodes: TArray<UE.SoundNode>;
        SoundCueGraph: UE.EdGraph;
        SubtitlePriority: number;
        bOverrideAttenuation: boolean;
        bExcludeFromRandomNodeBranchCulling: boolean;
        CookedQualityIndex: number;
        bHasPlayWhenSilent: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundCue;
        static Load(InName: string): SoundCue;
    
        __tid_SoundCue_0__: boolean;
    }
    
    enum EAudioSpectrumBandPresetType { KickDrum, SnareDrum, Voice, Cymbals, EAudioSpectrumBandPresetType_MAX, __typeKeyDoNoAccess}
    enum EMusicalNoteName { C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B, EMusicalNoteName_MAX, __typeKeyDoNoAccess}
    class AudioMixerBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddMasterSubmixEffect(WorldContextObject: $Nullable<UE.Object>, SubmixEffectPreset: $Nullable<UE.SoundEffectSubmixPreset>) : void;
        static AddSourceEffectToPresetChain(WorldContextObject: $Nullable<UE.Object>, PresetChain: $Nullable<UE.SoundEffectSourcePresetChain>, Entry: UE.SourceEffectChainEntry) : void;
        static AddSubmixEffect(WorldContextObject: $Nullable<UE.Object>, SoundSubmix: $Nullable<UE.SoundSubmix>, SubmixEffectPreset: $Nullable<UE.SoundEffectSubmixPreset>) : number;
        static ClearMasterSubmixEffects(WorldContextObject: $Nullable<UE.Object>) : void;
        static ClearSubmixEffectChainOverride(WorldContextObject: $Nullable<UE.Object>, SoundSubmix: $Nullable<UE.SoundSubmix>, FadeTimeSec: number) : void;
        static ClearSubmixEffects(WorldContextObject: $Nullable<UE.Object>, SoundSubmix: $Nullable<UE.SoundSubmix>) : void;
        static GetMagnitudeForFrequencies(WorldContextObject: $Nullable<UE.Object>, Frequencies: TArray<number>, Magnitudes: $Ref<TArray<number>>, SubmixToAnalyze?: UE.SoundSubmix /* = None */) : void;
        static GetNumberOfEntriesInSourceEffectChain(WorldContextObject: $Nullable<UE.Object>, PresetChain: $Nullable<UE.SoundEffectSourcePresetChain>) : number;
        static GetPhaseForFrequencies(WorldContextObject: $Nullable<UE.Object>, Frequencies: TArray<number>, Phases: $Ref<TArray<number>>, SubmixToAnalyze?: UE.SoundSubmix /* = None */) : void;
        static IsAudioBusActive(WorldContextObject: $Nullable<UE.Object>, AudioBus: $Nullable<UE.AudioBus>) : boolean;
        static MakeFullSpectrumSpectralAnalysisBandSettings(InNumBands?: number /* = 30 */, InMinimumFrequency?: number /* = 40.000000 */, InMaximumFrequency?: number /* = 16000.000000 */, InAttackTimeMsec?: number /* = 10 */, InReleaseTimeMsec?: number /* = 10 */) : TArray<UE.SoundSubmixSpectralAnalysisBandSettings>;
        static MakeMusicalSpectralAnalysisBandSettings(InNumSemitones?: number /* = 60 */, InStartingMusicalNote?: UE.EMusicalNoteName /* = C */, InStartingOctave?: number /* = 2 */, InAttackTimeMsec?: number /* = 10 */, InReleaseTimeMsec?: number /* = 10 */) : TArray<UE.SoundSubmixSpectralAnalysisBandSettings>;
        static MakePresetSpectralAnalysisBandSettings(InBandPresetType: UE.EAudioSpectrumBandPresetType, InNumBands?: number /* = 10 */, InAttackTimeMsec?: number /* = 10 */, InReleaseTimeMsec?: number /* = 10 */) : TArray<UE.SoundSubmixSpectralAnalysisBandSettings>;
        static PauseRecordingOutput(WorldContextObject: $Nullable<UE.Object>, SubmixToPause?: UE.SoundSubmix /* = None */) : void;
        static PrimeSoundCueForPlayback(SoundCue: $Nullable<UE.SoundCue>) : void;
        static PrimeSoundForPlayback(SoundWave: $Nullable<UE.SoundWave>, OnLoadCompletion: $Delegate<(LoadedSoundWave: $Nullable<UE.SoundWave>, WasCancelled: boolean) => void>) : void;
        static RemoveMasterSubmixEffect(WorldContextObject: $Nullable<UE.Object>, SubmixEffectPreset: $Nullable<UE.SoundEffectSubmixPreset>) : void;
        static RemoveSourceEffectFromPresetChain(WorldContextObject: $Nullable<UE.Object>, PresetChain: $Nullable<UE.SoundEffectSourcePresetChain>, EntryIndex: number) : void;
        static RemoveSubmixEffectPreset(WorldContextObject: $Nullable<UE.Object>, SoundSubmix: $Nullable<UE.SoundSubmix>, SubmixEffectPreset: $Nullable<UE.SoundEffectSubmixPreset>) : void;
        static RemoveSubmixEffectPresetAtIndex(WorldContextObject: $Nullable<UE.Object>, SoundSubmix: $Nullable<UE.SoundSubmix>, SubmixChainIndex: number) : void;
        static ReplaceSoundEffectSubmix(WorldContextObject: $Nullable<UE.Object>, InSoundSubmix: $Nullable<UE.SoundSubmix>, SubmixChainIndex: number, SubmixEffectPreset: $Nullable<UE.SoundEffectSubmixPreset>) : void;
        static ResumeRecordingOutput(WorldContextObject: $Nullable<UE.Object>, SubmixToPause?: UE.SoundSubmix /* = None */) : void;
        static SetBypassSourceEffectChainEntry(WorldContextObject: $Nullable<UE.Object>, PresetChain: $Nullable<UE.SoundEffectSourcePresetChain>, EntryIndex: number, bBypassed: boolean) : void;
        static SetSubmixEffectChainOverride(WorldContextObject: $Nullable<UE.Object>, SoundSubmix: $Nullable<UE.SoundSubmix>, SubmixEffectPresetChain: TArray<UE.SoundEffectSubmixPreset>, FadeTimeSec: number) : void;
        static StartAnalyzingOutput(WorldContextObject: $Nullable<UE.Object>, SubmixToAnalyze?: UE.SoundSubmix /* = None */, FFTSize?: UE.EFFTSize /* = DefaultSize */, InterpolationMethod?: UE.EFFTPeakInterpolationMethod /* = Linear */, WindowType?: UE.EFFTWindowType /* = Hann */, HopSize?: number /* = 0.000000 */, SpectrumType?: UE.EAudioSpectrumType /* = MagnitudeSpectrum */) : void;
        static StartAudioBus(WorldContextObject: $Nullable<UE.Object>, AudioBus: $Nullable<UE.AudioBus>) : void;
        static StartRecordingOutput(WorldContextObject: $Nullable<UE.Object>, ExpectedDuration: number, SubmixToRecord?: UE.SoundSubmix /* = None */) : void;
        static StopAnalyzingOutput(WorldContextObject: $Nullable<UE.Object>, SubmixToStopAnalyzing?: UE.SoundSubmix /* = None */) : void;
        static StopAudioBus(WorldContextObject: $Nullable<UE.Object>, AudioBus: $Nullable<UE.AudioBus>) : void;
        static StopRecordingOutput(WorldContextObject: $Nullable<UE.Object>, ExportType: UE.EAudioRecordingExportType, Name: string, Path: string, SubmixToRecord?: UE.SoundSubmix /* = None */, ExistingSoundWaveToOverwrite?: UE.SoundWave /* = None */) : UE.SoundWave;
        static TrimAudioCache(InMegabytesToFree: number) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioMixerBlueprintLibrary;
        static Load(InName: string): AudioMixerBlueprintLibrary;
    
        __tid_AudioMixerBlueprintLibrary_0__: boolean;
    }
    
    class AudioMixerCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioMixerCommandlet;
        static Load(InName: string): AudioMixerCommandlet;
    
        __tid_AudioMixerCommandlet_0__: boolean;
    }
    
    class AudioQualitySettings {
        constructor();
        constructor(DisplayName: string, MaxChannels: number);
        DisplayName: string;
        MaxChannels: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioQualitySettings_0__: boolean;
    }
    
    class AudioReverbEffect extends UE.AudioEffectParameters {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioReverbEffect_0__: boolean;
    }
    
    enum EVoiceSampleRate { Low16000Hz, Normal24000Hz, EVoiceSampleRate_MAX, __typeKeyDoNoAccess}
    enum EPanningMethod { Linear, EqualPower, EPanningMethod_MAX, __typeKeyDoNoAccess}
    enum EMonoChannelUpmixMethod { Linear, EqualPower, FullVolume, EMonoChannelUpmixMethod_MAX, __typeKeyDoNoAccess}
    class AudioSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultSoundClassName: UE.SoftObjectPath;
        DefaultMediaSoundClassName: UE.SoftObjectPath;
        DefaultSoundConcurrencyName: UE.SoftObjectPath;
        DefaultBaseSoundMix: UE.SoftObjectPath;
        VoiPSoundClass: UE.SoftObjectPath;
        MasterSubmix: UE.SoftObjectPath;
        ReverbSubmix: UE.SoftObjectPath;
        EQSubmix: UE.SoftObjectPath;
        VoiPSampleRate: UE.EVoiceSampleRate;
        DefaultReverbSendLevel: number;
        MaximumConcurrentStreams: number;
        GlobalMinPitchScale: number;
        GlobalMaxPitchScale: number;
        QualityLevels: TArray<UE.AudioQualitySettings>;
        bAllowPlayWhenSilent: boolean;
        bDisableMasterEQ: boolean;
        bAllowCenterChannel3DPanning: boolean;
        NumStoppingSources: number;
        PanningMethod: UE.EPanningMethod;
        MonoChannelUpmixMethod: UE.EMonoChannelUpmixMethod;
        DialogueFilenameFormat: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioSettings;
        static Load(InName: string): AudioSettings;
    
        __tid_AudioSettings_0__: boolean;
    }
    
    class AudioSynesthesiaNRT extends UE.AudioAnalyzerNRT {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioSynesthesiaNRT;
        static Load(InName: string): AudioSynesthesiaNRT;
    
        __tid_AudioSynesthesiaNRT_0__: boolean;
    }
    
    class AudioSynesthesiaNRTFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AudioSynesthesiaNRTClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioSynesthesiaNRTFactory;
        static Load(InName: string): AudioSynesthesiaNRTFactory;
    
        __tid_AudioSynesthesiaNRTFactory_0__: boolean;
    }
    
    class AudioSynesthesiaNRTSettings extends UE.AudioAnalyzerNRTSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioSynesthesiaNRTSettings;
        static Load(InName: string): AudioSynesthesiaNRTSettings;
    
        __tid_AudioSynesthesiaNRTSettings_0__: boolean;
    }
    
    class AudioSynesthesiaNRTSettingsFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AudioSynesthesiaNRTSettingsClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioSynesthesiaNRTSettingsFactory;
        static Load(InName: string): AudioSynesthesiaNRTSettingsFactory;
    
        __tid_AudioSynesthesiaNRTSettingsFactory_0__: boolean;
    }
    
    class AudioTestCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioTestCommandlet;
        static Load(InName: string): AudioTestCommandlet;
    
        __tid_AudioTestCommandlet_0__: boolean;
    }
    
    enum EAudioVolumeLocationState { InsideTheVolume, OutsideTheVolume, EAudioVolumeLocationState_MAX, __typeKeyDoNoAccess}
    class AudioVolumeSubmixSendSettings {
        constructor();
        constructor(ListenerLocationState: UE.EAudioVolumeLocationState, SourceLocationState: UE.EAudioVolumeLocationState, SubmixSends: TArray<UE.SoundSubmixSendInfo>);
        ListenerLocationState: UE.EAudioVolumeLocationState;
        SourceLocationState: UE.EAudioVolumeLocationState;
        SubmixSends: TArray<UE.SoundSubmixSendInfo>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioVolumeSubmixSendSettings_0__: boolean;
    }
    
    class AudioVolumeSubmixOverrideSettings {
        constructor();
        constructor(Submix: UE.SoundSubmix, SubmixEffectChain: TArray<UE.SoundEffectSubmixPreset>, CrossfadeTime: number);
        Submix: UE.SoundSubmix;
        SubmixEffectChain: TArray<UE.SoundEffectSubmixPreset>;
        CrossfadeTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AudioVolumeSubmixOverrideSettings_0__: boolean;
    }
    
    class AudioVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Priority: number;
        bEnabled: boolean;
        Settings: UE.ReverbSettings;
        AmbientZoneSettings: UE.InteriorSettings;
        SubmixSendSettings: TArray<UE.AudioVolumeSubmixSendSettings>;
        SubmixOverrideSettings: TArray<UE.AudioVolumeSubmixOverrideSettings>;
        OnRep_bEnabled() : void;
        SetEnabled(bNewEnabled: boolean) : void;
        SetInteriorSettings(NewInteriorSettings: UE.InteriorSettings) : void;
        SetPriority(NewPriority: number) : void;
        SetReverbSettings(NewReverbSettings: UE.ReverbSettings) : void;
        SetSubmixOverrideSettings(NewSubmixOverrideSettings: TArray<UE.AudioVolumeSubmixOverrideSettings>) : void;
        SetSubmixSendSettings(NewSubmixSendSettings: TArray<UE.AudioVolumeSubmixSendSettings>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AudioVolume;
        static Load(InName: string): AudioVolume;
    
        __tid_AudioVolume_0__: boolean;
    }
    
    class AutoClusterFractureCommand extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutoClusterFractureCommand;
        static Load(InName: string): AutoClusterFractureCommand;
    
        __tid_AutoClusterFractureCommand_0__: boolean;
    }
    
    class AutoCompleteCommand {
        constructor();
        constructor(Command: string, Desc: string);
        Command: string;
        Desc: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutoCompleteCommand_0__: boolean;
    }
    
    class AutoCompleteNode {
        constructor();
        constructor(IndexChar: number, AutoCompleteListIndices: TArray<number>);
        IndexChar: number;
        AutoCompleteListIndices: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutoCompleteNode_0__: boolean;
    }
    
    class WorldSubsystem extends UE.Subsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WorldSubsystem;
        static Load(InName: string): WorldSubsystem;
    
        __tid_WorldSubsystem_0__: boolean;
    }
    
    class AutoDestroySubsystem extends UE.WorldSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActorsToPoll: TArray<UE.Actor>;
        OnActorEndPlay(Actor: $Nullable<UE.Actor>, EndPlayReason: UE.EEndPlayReason) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutoDestroySubsystem;
        static Load(InName: string): AutoDestroySubsystem;
    
        __tid_AutoDestroySubsystem_0__: boolean;
    }
    
    enum EMovieSceneCaptureProtocolState { Idle, Initialized, Capturing, Finalizing, EMovieSceneCaptureProtocolState_MAX, __typeKeyDoNoAccess}
    class MovieSceneCaptureProtocolBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        State: UE.EMovieSceneCaptureProtocolState;
        GetState() : UE.EMovieSceneCaptureProtocolState;
        IsCapturing() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCaptureProtocolBase;
        static Load(InName: string): MovieSceneCaptureProtocolBase;
    
        __tid_MovieSceneCaptureProtocolBase_0__: boolean;
    }
    
    class MovieSceneImageCaptureProtocolBase extends UE.MovieSceneCaptureProtocolBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneImageCaptureProtocolBase;
        static Load(InName: string): MovieSceneImageCaptureProtocolBase;
    
        __tid_MovieSceneImageCaptureProtocolBase_0__: boolean;
    }
    
    class MovieSceneAudioCaptureProtocolBase extends UE.MovieSceneCaptureProtocolBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneAudioCaptureProtocolBase;
        static Load(InName: string): MovieSceneAudioCaptureProtocolBase;
    
        __tid_MovieSceneAudioCaptureProtocolBase_0__: boolean;
    }
    
    class CaptureResolution {
        constructor();
        constructor(ResX: number, ResY: number);
        ResX: number;
        ResY: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CaptureResolution_0__: boolean;
    }
    
    class MovieSceneCaptureSettings {
        constructor();
        constructor(OutputDirectory: UE.DirectoryPath, GameModeOverride: UE.Class, OutputFormat: string, bOverwriteExisting: boolean, bUseRelativeFrameNumbers: boolean, HandleFrames: number, MovieExtension: string, ZeroPadFrameNumbers: number, FrameRate: UE.FrameRate, bUseCustomFrameRate: boolean, CustomFrameRate: UE.FrameRate, Resolution: UE.CaptureResolution, bEnableTextureStreaming: boolean, bCinematicEngineScalability: boolean, bCinematicMode: boolean, bAllowMovement: boolean, bAllowTurning: boolean, bShowPlayer: boolean, bShowHUD: boolean, bUsePathTracer: boolean, PathTracerSamplePerPixel: number);
        OutputDirectory: UE.DirectoryPath;
        GameModeOverride: UE.Class;
        OutputFormat: string;
        bOverwriteExisting: boolean;
        bUseRelativeFrameNumbers: boolean;
        HandleFrames: number;
        MovieExtension: string;
        ZeroPadFrameNumbers: number;
        FrameRate: UE.FrameRate;
        bUseCustomFrameRate: boolean;
        CustomFrameRate: UE.FrameRate;
        Resolution: UE.CaptureResolution;
        bEnableTextureStreaming: boolean;
        bCinematicEngineScalability: boolean;
        bCinematicMode: boolean;
        bAllowMovement: boolean;
        bAllowTurning: boolean;
        bShowPlayer: boolean;
        bShowHUD: boolean;
        bUsePathTracer: boolean;
        PathTracerSamplePerPixel: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCaptureSettings_0__: boolean;
    }
    
    class MovieSceneCapture extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImageCaptureProtocolType: UE.SoftClassPath;
        AudioCaptureProtocolType: UE.SoftClassPath;
        ImageCaptureProtocol: UE.MovieSceneImageCaptureProtocolBase;
        AudioCaptureProtocol: UE.MovieSceneAudioCaptureProtocolBase;
        Settings: UE.MovieSceneCaptureSettings;
        bUseSeparateProcess: boolean;
        bCloseEditorWhenCaptureStarts: boolean;
        AdditionalCommandLineArguments: string;
        InheritedCommandLineArguments: string;
        GetAudioCaptureProtocol() : UE.MovieSceneCaptureProtocolBase;
        GetImageCaptureProtocol() : UE.MovieSceneCaptureProtocolBase;
        SetAudioCaptureProtocolType(ProtocolType: $Nullable<UE.Class>) : void;
        SetImageCaptureProtocolType(ProtocolType: $Nullable<UE.Class>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCapture;
        static Load(InName: string): MovieSceneCapture;
    
        __tid_MovieSceneCapture_0__: boolean;
    }
    
    class LevelSequenceBurnInInitSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceBurnInInitSettings;
        static Load(InName: string): LevelSequenceBurnInInitSettings;
    
        __tid_LevelSequenceBurnInInitSettings_0__: boolean;
    }
    
    class LevelSequenceBurnInOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseBurnIn: boolean;
        BurnInClass: UE.SoftClassPath;
        Settings: UE.LevelSequenceBurnInInitSettings;
        SetBurnIn(InBurnInClass: UE.SoftClassPath) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceBurnInOptions;
        static Load(InName: string): LevelSequenceBurnInOptions;
    
        __tid_LevelSequenceBurnInOptions_0__: boolean;
    }
    
    class LevelSequencePlayer extends UE.MovieSceneSequencePlayer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnCameraCut: $MulticastDelegate<(CameraComponent: $Nullable<UE.CameraComponent>) => void>;
        GetActiveCameraComponent() : UE.CameraComponent;
        static CreateLevelSequencePlayer(WorldContextObject: $Nullable<UE.Object>, LevelSequence: $Nullable<UE.LevelSequence>, Settings: UE.MovieSceneSequencePlaybackSettings, OutActor: $Ref<UE.LevelSequenceActor>) : UE.LevelSequencePlayer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequencePlayer;
        static Load(InName: string): LevelSequencePlayer;
    
        __tid_LevelSequencePlayer_0__: boolean;
    }
    
    class LevelSequenceCameraSettings {
        constructor();
        constructor(bOverrideAspectRatioAxisConstraint: boolean, AspectRatioAxisConstraint: UE.EAspectRatioAxisConstraint);
        bOverrideAspectRatioAxisConstraint: boolean;
        AspectRatioAxisConstraint: UE.EAspectRatioAxisConstraint;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceCameraSettings_0__: boolean;
    }
    
    class MovieSceneBindingOverrideData {
        constructor();
        constructor(ObjectBindingId: UE.MovieSceneObjectBindingID, Object: TWeakObjectPtr<UE.Object>, bOverridesDefault: boolean);
        ObjectBindingId: UE.MovieSceneObjectBindingID;
        Object: TWeakObjectPtr<UE.Object>;
        bOverridesDefault: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneBindingOverrideData_0__: boolean;
    }
    
    class MovieSceneBindingOverrides extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BindingData: TArray<UE.MovieSceneBindingOverrideData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBindingOverrides;
        static Load(InName: string): MovieSceneBindingOverrides;
    
        __tid_MovieSceneBindingOverrides_0__: boolean;
    }
    
    class LevelSequenceSnapshotSettings {
        constructor();
        constructor(ZeroPadAmount: number, FrameRate: UE.FrameRate);
        ZeroPadAmount: number;
        FrameRate: UE.FrameRate;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceSnapshotSettings_0__: boolean;
    }
    
    class LevelSequencePlayerSnapshot {
        constructor();
        constructor(MasterName: string, MasterTime: UE.QualifiedFrameTime, SourceTime: UE.QualifiedFrameTime, CurrentShotName: string, CurrentShotLocalTime: UE.QualifiedFrameTime, CurrentShotSourceTime: UE.QualifiedFrameTime, SourceTimecode: string, CameraComponent: TSoftObjectPtr<UE.CameraComponent>, Settings: UE.LevelSequenceSnapshotSettings, ActiveShot: UE.LevelSequence, ShotID: UE.MovieSceneSequenceID);
        MasterName: string;
        MasterTime: UE.QualifiedFrameTime;
        SourceTime: UE.QualifiedFrameTime;
        CurrentShotName: string;
        CurrentShotLocalTime: UE.QualifiedFrameTime;
        CurrentShotSourceTime: UE.QualifiedFrameTime;
        SourceTimecode: string;
        CameraComponent: TSoftObjectPtr<UE.CameraComponent>;
        Settings: UE.LevelSequenceSnapshotSettings;
        ActiveShot: UE.LevelSequence;
        ShotID: UE.MovieSceneSequenceID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequencePlayerSnapshot_0__: boolean;
    }
    
    class LevelSequenceBurnIn extends UE.UserWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FrameInformation: UE.LevelSequencePlayerSnapshot;
        LevelSequenceActor: UE.LevelSequenceActor;
        GetSettingsClass() : UE.Class;
        SetSettings(InSettings: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceBurnIn;
        static Load(InName: string): LevelSequenceBurnIn;
    
        __tid_LevelSequenceBurnIn_0__: boolean;
    }
    
    class LevelSequenceActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlaybackSettings: UE.MovieSceneSequencePlaybackSettings;
        SequencePlayer: UE.LevelSequencePlayer;
        LevelSequence: UE.SoftObjectPath;
        CameraSettings: UE.LevelSequenceCameraSettings;
        BurnInOptions: UE.LevelSequenceBurnInOptions;
        BindingOverrides: UE.MovieSceneBindingOverrides;
        bAutoPlay: boolean;
        bOverrideInstanceData: boolean;
        bReplicatePlayback: boolean;
        DefaultInstanceData: UE.Object;
        BurnInInstance: UE.LevelSequenceBurnIn;
        bShowBurnin: boolean;
        AddBinding(Binding: UE.MovieSceneObjectBindingID, Actor: $Nullable<UE.Actor>, bAllowBindingsFromAsset?: boolean /* = false */) : void;
        AddBindingByTag(BindingTag: string, Actor: $Nullable<UE.Actor>, bAllowBindingsFromAsset?: boolean /* = false */) : void;
        FindNamedBinding(Tag: string) : UE.MovieSceneObjectBindingID;
        FindNamedBindings(Tag: string) : TArray<UE.MovieSceneObjectBindingID>;
        GetSequence() : UE.LevelSequence;
        GetSequencePlayer() : UE.LevelSequencePlayer;
        HideBurnin() : void;
        LoadSequence() : UE.LevelSequence;
        OnLevelSequenceLoaded__DelegateSignature() : void;
        RemoveBinding(Binding: UE.MovieSceneObjectBindingID, Actor: $Nullable<UE.Actor>) : void;
        RemoveBindingByTag(Tag: string, Actor: $Nullable<UE.Actor>) : void;
        ResetBinding(Binding: UE.MovieSceneObjectBindingID) : void;
        ResetBindings() : void;
        SetBinding(Binding: UE.MovieSceneObjectBindingID, Actors: TArray<UE.Actor>, bAllowBindingsFromAsset?: boolean /* = false */) : void;
        SetBindingByTag(BindingTag: string, Actors: TArray<UE.Actor>, bAllowBindingsFromAsset?: boolean /* = false */) : void;
        SetReplicatePlayback(ReplicatePlayback: boolean) : void;
        SetSequence(InSequence: $Nullable<UE.LevelSequence>) : void;
        ShowBurnin() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceActor;
        static Load(InName: string): LevelSequenceActor;
    
        __tid_LevelSequenceActor_0__: boolean;
    }
    
    class AutomatedLevelSequenceCapture extends UE.MovieSceneCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LevelSequenceAsset: UE.SoftObjectPath;
        ShotName: string;
        bUseCustomStartFrame: boolean;
        CustomStartFrame: UE.FrameNumber;
        bUseCustomEndFrame: boolean;
        CustomEndFrame: UE.FrameNumber;
        WarmUpFrameCount: number;
        DelayBeforeWarmUp: number;
        DelayBeforeShotWarmUp: number;
        DelayEveryFrame: number;
        BurnInOptions: UE.LevelSequenceBurnInOptions;
        bWriteEditDecisionList: boolean;
        bWriteFinalCutProXML: boolean;
        LevelSequenceActor: TWeakObjectPtr<UE.LevelSequenceActor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomatedLevelSequenceCapture;
        static Load(InName: string): AutomatedLevelSequenceCapture;
    
        __tid_AutomatedLevelSequenceCapture_0__: boolean;
    }
    
    class AutomatedTestFilter {
        constructor();
        constructor(Contains: string, MatchFromStart: boolean);
        Contains: string;
        MatchFromStart: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomatedTestFilter_0__: boolean;
    }
    
    class AutomatedTestGroup {
        constructor();
        constructor(Name: string, Filters: TArray<UE.AutomatedTestFilter>);
        Name: string;
        Filters: TArray<UE.AutomatedTestFilter>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomatedTestGroup_0__: boolean;
    }
    
    class DateTime {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DateTime_0__: boolean;
    }
    
    enum EAutomationState { NotRun, InProcess, Fail, Success, NotEnoughParticipants, EAutomationState_MAX, __typeKeyDoNoAccess}
    enum EAutomationEventType { Info, Warning, Error, EAutomationEventType_MAX, __typeKeyDoNoAccess}
    class AutomationEvent {
        constructor();
        constructor(Type: UE.EAutomationEventType, Message: string, Context: string, Artifact: UE.Guid);
        Type: UE.EAutomationEventType;
        Message: string;
        Context: string;
        Artifact: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationEvent_0__: boolean;
    }
    
    class AutomationExecutionEntry {
        constructor();
        constructor(Event: UE.AutomationEvent, Filename: string, LineNumber: number, Timestamp: UE.DateTime);
        Event: UE.AutomationEvent;
        Filename: string;
        LineNumber: number;
        Timestamp: UE.DateTime;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationExecutionEntry_0__: boolean;
    }
    
    enum EAutomationArtifactType { None, Image, Comparison, EAutomationArtifactType_MAX, __typeKeyDoNoAccess}
    class AutomationArtifact {
        constructor();
        constructor(Id: UE.Guid, Name: string, Type: UE.EAutomationArtifactType, Files: TMap<string, string>);
        Id: UE.Guid;
        Name: string;
        Type: UE.EAutomationArtifactType;
        Files: TMap<string, string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationArtifact_0__: boolean;
    }
    
    class AutomatedTestResult {
        constructor();
        constructor(TestDisplayName: string, FullTestPath: string, State: UE.EAutomationState, Entries: TArray<UE.AutomationExecutionEntry>, Warnings: number, Errors: number, Artifacts: TArray<UE.AutomationArtifact>);
        TestDisplayName: string;
        FullTestPath: string;
        State: UE.EAutomationState;
        Entries: TArray<UE.AutomationExecutionEntry>;
        Warnings: number;
        Errors: number;
        Artifacts: TArray<UE.AutomationArtifact>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomatedTestResult_0__: boolean;
    }
    
    class AutomatedTestPassResults {
        constructor();
        constructor(ClientDescriptor: string, ReportCreatedOn: UE.DateTime, Succeeded: number, SucceededWithWarnings: number, Failed: number, NotRun: number, TotalDuration: number, ComparisonExported: boolean, ComparisonExportDirectory: string, Tests: TArray<UE.AutomatedTestResult>);
        ClientDescriptor: string;
        ReportCreatedOn: UE.DateTime;
        Succeeded: number;
        SucceededWithWarnings: number;
        Failed: number;
        NotRun: number;
        TotalDuration: number;
        ComparisonExported: boolean;
        ComparisonExportDirectory: string;
        Tests: TArray<UE.AutomatedTestResult>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomatedTestPassResults_0__: boolean;
    }
    
    enum EComparisonTolerance { Zero, Low, Medium, High, Custom, EComparisonTolerance_MAX, __typeKeyDoNoAccess}
    class AutomationEditorTask extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IsTaskDone() : boolean;
        IsValidTask() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomationEditorTask;
        static Load(InName: string): AutomationEditorTask;
    
        __tid_AutomationEditorTask_0__: boolean;
    }
    
    class AutomationViewSettings extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AntiAliasing: boolean;
        MotionBlur: boolean;
        TemporalAA: boolean;
        ScreenSpaceReflections: boolean;
        ScreenSpaceAO: boolean;
        DistanceFieldAO: boolean;
        ContactShadows: boolean;
        EyeAdaptation: boolean;
        Bloom: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomationViewSettings;
        static Load(InName: string): AutomationViewSettings;
    
        __tid_AutomationViewSettings_0__: boolean;
    }
    
    class ComparisonToleranceAmount {
        constructor();
        constructor(Red: number, Green: number, Blue: number, Alpha: number, MinBrightness: number, MaxBrightness: number);
        Red: number;
        Green: number;
        Blue: number;
        Alpha: number;
        MinBrightness: number;
        MaxBrightness: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComparisonToleranceAmount_0__: boolean;
    }
    
    class AutomationScreenshotOptions {
        constructor();
        constructor(Resolution: UE.Vector2D, Delay: number, bOverride_OverrideTimeTo: boolean, OverrideTimeTo: number, bDisableNoisyRenderingFeatures: boolean, bDisableTonemapping: boolean, ViewSettings: UE.AutomationViewSettings, VisualizeBuffer: string, Tolerance: UE.EComparisonTolerance, ToleranceAmount: UE.ComparisonToleranceAmount, MaximumLocalError: number, MaximumGlobalError: number, bIgnoreAntiAliasing: boolean, bIgnoreColors: boolean);
        Resolution: UE.Vector2D;
        Delay: number;
        bOverride_OverrideTimeTo: boolean;
        OverrideTimeTo: number;
        bDisableNoisyRenderingFeatures: boolean;
        bDisableTonemapping: boolean;
        ViewSettings: UE.AutomationViewSettings;
        VisualizeBuffer: string;
        Tolerance: UE.EComparisonTolerance;
        ToleranceAmount: UE.ComparisonToleranceAmount;
        MaximumLocalError: number;
        MaximumGlobalError: number;
        bIgnoreAntiAliasing: boolean;
        bIgnoreColors: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationScreenshotOptions_0__: boolean;
    }
    
    class AutomationWaitForLoadingOptions {
        constructor();
        constructor(WaitForReplicationToSettle: boolean);
        WaitForReplicationToSettle: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWaitForLoadingOptions_0__: boolean;
    }
    
    class AutomationBlueprintFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddExpectedLogError(ExpectedPatternString: string, Occurrences?: number /* = 1 */, ExactMatch?: boolean /* = false */) : void;
        static AreAutomatedTestsRunning() : boolean;
        static AutomationWaitForLoading(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, Options: UE.AutomationWaitForLoadingOptions) : void;
        static DisableStatGroup(WorldContextObject: $Nullable<UE.Object>, GroupName: string) : void;
        static EnableStatGroup(WorldContextObject: $Nullable<UE.Object>, GroupName: string) : void;
        static GetDefaultScreenshotOptionsForGameplay(Tolerance?: UE.EComparisonTolerance /* = Low */, Delay?: number /* = 0.200000 */) : UE.AutomationScreenshotOptions;
        static GetDefaultScreenshotOptionsForRendering(Tolerance?: UE.EComparisonTolerance /* = Low */, Delay?: number /* = 0.200000 */) : UE.AutomationScreenshotOptions;
        static GetStatCallCount(StatName: string) : number;
        static GetStatExcAverage(StatName: string) : number;
        static GetStatExcMax(StatName: string) : number;
        static GetStatIncAverage(StatName: string) : number;
        static GetStatIncMax(StatName: string) : number;
        static SetScalabilityQualityLevelRelativeToMax(WorldContextObject: $Nullable<UE.Object>, Value?: number /* = 1 */) : void;
        static SetScalabilityQualityToEpic(WorldContextObject: $Nullable<UE.Object>) : void;
        static SetScalabilityQualityToLow(WorldContextObject: $Nullable<UE.Object>) : void;
        static TakeAutomationScreenshot(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, Name: string, Notes: string, Options: UE.AutomationScreenshotOptions) : void;
        static TakeAutomationScreenshotAtCamera(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, Camera: $Nullable<UE.CameraActor>, NameOverride: string, Notes: string, Options: UE.AutomationScreenshotOptions) : void;
        static TakeAutomationScreenshotOfUI(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, Name: string, Options: UE.AutomationScreenshotOptions) : void;
        static TakeHighResScreenshot(ResX: number, ResY: number, Filename: string, Camera?: UE.CameraActor /* = None */, bMaskEnabled?: boolean /* = false */, bCaptureHDR?: boolean /* = false */, ComparisonTolerance?: UE.EComparisonTolerance /* = Low */, ComparisonNotes?: string /* = "" */, Delay?: number /* = 0.000000 */) : UE.AutomationEditorTask;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomationBlueprintFunctionLibrary;
        static Load(InName: string): AutomationBlueprintFunctionLibrary;
    
        __tid_AutomationBlueprintFunctionLibrary_0__: boolean;
    }
    
    class AutomationControllerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Groups: TArray<UE.AutomatedTestGroup>;
        bSuppressLogErrors: boolean;
        bSuppressLogWarnings: boolean;
        bTreatLogWarningsAsTestErrors: boolean;
        CheckTestIntervalSeconds: number;
        GameInstanceLostTimerSeconds: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomationControllerSettings;
        static Load(InName: string): AutomationControllerSettings;
    
        __tid_AutomationControllerSettings_0__: boolean;
    }
    
    class AutomationPerformaceHelper extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeginRecording(RecordName: string, InGPUBudget: number, InRenderThreadBudget: number, InGameThreadBudget: number) : void;
        BeginRecordingBaseline(RecordName: string) : void;
        BeginStatsFile(RecordName: string) : void;
        EndRecording() : void;
        EndRecordingBaseline() : void;
        EndStatsFile() : void;
        IsCurrentRecordWithinGameThreadBudget() : boolean;
        IsCurrentRecordWithinGPUBudget() : boolean;
        IsCurrentRecordWithinRenderThreadBudget() : boolean;
        IsRecording() : boolean;
        OnAllTestsComplete() : void;
        OnBeginTests() : void;
        Sample(DeltaSeconds: number) : void;
        StartCPUProfiling() : void;
        StopCPUProfiling() : void;
        Tick(DeltaSeconds: number) : void;
        TriggerGPUTraceIfRecordFallsBelowBudget() : void;
        WriteLogFile(CaptureDir: string, CaptureExtension: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomationPerformaceHelper;
        static Load(InName: string): AutomationPerformaceHelper;
    
        __tid_AutomationPerformaceHelper_0__: boolean;
    }
    
    class AutomationScreenshotMetadata {
        constructor();
        constructor(ScreenShotName: string, Context: string, TestName: string, Notes: string, Id: UE.Guid, Commit: string, Width: number, Height: number, Rhi: string, Platform: string, FeatureLevel: string, bIsStereo: boolean, Vendor: string, AdapterName: string, AdapterInternalDriverVersion: string, AdapterUserDriverVersion: string, UniqueDeviceId: string, ResolutionQuality: number, ViewDistanceQuality: number, AntiAliasingQuality: number, ShadowQuality: number, PostProcessQuality: number, TextureQuality: number, EffectsQuality: number, FoliageQuality: number, ShadingQuality: number, bHasComparisonRules: boolean, ToleranceRed: number, ToleranceGreen: number, ToleranceBlue: number, ToleranceAlpha: number, ToleranceMinBrightness: number, ToleranceMaxBrightness: number, MaximumLocalError: number, MaximumGlobalError: number, bIgnoreAntiAliasing: boolean, bIgnoreColors: boolean);
        ScreenShotName: string;
        Context: string;
        TestName: string;
        Notes: string;
        Id: UE.Guid;
        Commit: string;
        Width: number;
        Height: number;
        Rhi: string;
        Platform: string;
        FeatureLevel: string;
        bIsStereo: boolean;
        Vendor: string;
        AdapterName: string;
        AdapterInternalDriverVersion: string;
        AdapterUserDriverVersion: string;
        UniqueDeviceId: string;
        ResolutionQuality: number;
        ViewDistanceQuality: number;
        AntiAliasingQuality: number;
        ShadowQuality: number;
        PostProcessQuality: number;
        TextureQuality: number;
        EffectsQuality: number;
        FoliageQuality: number;
        ShadingQuality: number;
        bHasComparisonRules: boolean;
        ToleranceRed: number;
        ToleranceGreen: number;
        ToleranceBlue: number;
        ToleranceAlpha: number;
        ToleranceMinBrightness: number;
        ToleranceMaxBrightness: number;
        MaximumLocalError: number;
        MaximumGlobalError: number;
        bIgnoreAntiAliasing: boolean;
        bIgnoreColors: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationScreenshotMetadata_0__: boolean;
    }
    
    class AutomationTestPreset {
        constructor();
        constructor(Id: string, Name: string, EnabledTests: TArray<string>);
        Id: string;
        Name: string;
        EnabledTests: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationTestPreset_0__: boolean;
    }
    
    class EditorMapPerformanceTestDefinition {
        constructor();
        constructor(PerformanceTestmap: UE.SoftObjectPath, TestTimer: number);
        PerformanceTestmap: UE.SoftObjectPath;
        TestTimer: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorMapPerformanceTestDefinition_0__: boolean;
    }
    
    class FilePath {
        constructor();
        constructor(FilePath: string);
        FilePath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FilePath_0__: boolean;
    }
    
    class ImportFactorySettingValues {
        constructor();
        constructor(SettingName: string, Value: string);
        SettingName: string;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ImportFactorySettingValues_0__: boolean;
    }
    
    class EditorImportWorkflowDefinition {
        constructor();
        constructor(ImportFilePath: UE.FilePath, FactorySettings: TArray<UE.ImportFactorySettingValues>);
        ImportFilePath: UE.FilePath;
        FactorySettings: TArray<UE.ImportFactorySettingValues>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorImportWorkflowDefinition_0__: boolean;
    }
    
    class BuildPromotionImportWorkflowSettings {
        constructor();
        constructor(Diffuse: UE.EditorImportWorkflowDefinition, Normal: UE.EditorImportWorkflowDefinition, StaticMesh: UE.EditorImportWorkflowDefinition, ReimportStaticMesh: UE.EditorImportWorkflowDefinition, BlendShapeMesh: UE.EditorImportWorkflowDefinition, MorphMesh: UE.EditorImportWorkflowDefinition, SkeletalMesh: UE.EditorImportWorkflowDefinition, Animation: UE.EditorImportWorkflowDefinition, Sound: UE.EditorImportWorkflowDefinition, SurroundSound: UE.EditorImportWorkflowDefinition, OtherAssetsToImport: TArray<UE.EditorImportWorkflowDefinition>);
        Diffuse: UE.EditorImportWorkflowDefinition;
        Normal: UE.EditorImportWorkflowDefinition;
        StaticMesh: UE.EditorImportWorkflowDefinition;
        ReimportStaticMesh: UE.EditorImportWorkflowDefinition;
        BlendShapeMesh: UE.EditorImportWorkflowDefinition;
        MorphMesh: UE.EditorImportWorkflowDefinition;
        SkeletalMesh: UE.EditorImportWorkflowDefinition;
        Animation: UE.EditorImportWorkflowDefinition;
        Sound: UE.EditorImportWorkflowDefinition;
        SurroundSound: UE.EditorImportWorkflowDefinition;
        OtherAssetsToImport: TArray<UE.EditorImportWorkflowDefinition>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BuildPromotionImportWorkflowSettings_0__: boolean;
    }
    
    class BuildPromotionOpenAssetSettings {
        constructor();
        constructor(BlueprintAsset: UE.FilePath, MaterialAsset: UE.FilePath, ParticleSystemAsset: UE.FilePath, SkeletalMeshAsset: UE.FilePath, StaticMeshAsset: UE.FilePath, TextureAsset: UE.FilePath);
        BlueprintAsset: UE.FilePath;
        MaterialAsset: UE.FilePath;
        ParticleSystemAsset: UE.FilePath;
        SkeletalMeshAsset: UE.FilePath;
        StaticMeshAsset: UE.FilePath;
        TextureAsset: UE.FilePath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BuildPromotionOpenAssetSettings_0__: boolean;
    }
    
    class BuildPromotionNewProjectSettings {
        constructor();
        constructor(NewProjectFolderOverride: UE.DirectoryPath, NewProjectNameOverride: string);
        NewProjectFolderOverride: UE.DirectoryPath;
        NewProjectNameOverride: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BuildPromotionNewProjectSettings_0__: boolean;
    }
    
    class BuildPromotionTestSettings {
        constructor();
        constructor(DefaultStaticMeshAsset: UE.FilePath, ImportWorkflow: UE.BuildPromotionImportWorkflowSettings, OpenAssets: UE.BuildPromotionOpenAssetSettings, NewProjectSettings: UE.BuildPromotionNewProjectSettings, SourceControlMaterial: UE.FilePath);
        DefaultStaticMeshAsset: UE.FilePath;
        ImportWorkflow: UE.BuildPromotionImportWorkflowSettings;
        OpenAssets: UE.BuildPromotionOpenAssetSettings;
        NewProjectSettings: UE.BuildPromotionNewProjectSettings;
        SourceControlMaterial: UE.FilePath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BuildPromotionTestSettings_0__: boolean;
    }
    
    class MaterialEditorPromotionSettings {
        constructor();
        constructor(DefaultMaterialAsset: UE.FilePath, DefaultDiffuseTexture: UE.FilePath, DefaultNormalTexture: UE.FilePath);
        DefaultMaterialAsset: UE.FilePath;
        DefaultDiffuseTexture: UE.FilePath;
        DefaultNormalTexture: UE.FilePath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialEditorPromotionSettings_0__: boolean;
    }
    
    class ParticleEditorPromotionSettings {
        constructor();
        constructor(DefaultParticleAsset: UE.FilePath);
        DefaultParticleAsset: UE.FilePath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleEditorPromotionSettings_0__: boolean;
    }
    
    class BlueprintEditorPromotionSettings {
        constructor();
        constructor(FirstMeshPath: UE.FilePath, SecondMeshPath: UE.FilePath, DefaultParticleAsset: UE.FilePath);
        FirstMeshPath: UE.FilePath;
        SecondMeshPath: UE.FilePath;
        DefaultParticleAsset: UE.FilePath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintEditorPromotionSettings_0__: boolean;
    }
    
    class ExternalToolDefinition {
        constructor();
        constructor(ToolName: string, ExecutablePath: UE.FilePath, CommandLineOptions: string, WorkingDirectory: UE.DirectoryPath, ScriptExtension: string, ScriptDirectory: UE.DirectoryPath);
        ToolName: string;
        ExecutablePath: UE.FilePath;
        CommandLineOptions: string;
        WorkingDirectory: UE.DirectoryPath;
        ScriptExtension: string;
        ScriptDirectory: UE.DirectoryPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExternalToolDefinition_0__: boolean;
    }
    
    class EditorImportExportTestDefinition {
        constructor();
        constructor(ImportFilePath: UE.FilePath, ExportFileExtension: string, bSkipExport: boolean, FactorySettings: TArray<UE.ImportFactorySettingValues>);
        ImportFilePath: UE.FilePath;
        ExportFileExtension: string;
        bSkipExport: boolean;
        FactorySettings: TArray<UE.ImportFactorySettingValues>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorImportExportTestDefinition_0__: boolean;
    }
    
    class LaunchOnTestSettings {
        constructor();
        constructor(LaunchOnTestmap: UE.FilePath, DeviceID: string);
        LaunchOnTestmap: UE.FilePath;
        DeviceID: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LaunchOnTestSettings_0__: boolean;
    }
    
    class AutomationTestSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EngineTestModules: TArray<string>;
        EditorTestModules: TArray<string>;
        AutomationTestmap: UE.SoftObjectPath;
        EditorPerformanceTestMaps: TArray<UE.EditorMapPerformanceTestDefinition>;
        AssetsToOpen: TArray<UE.SoftObjectPath>;
        MapsToPIETest: TArray<string>;
        BuildPromotionTest: UE.BuildPromotionTestSettings;
        MaterialEditorPromotionTest: UE.MaterialEditorPromotionSettings;
        ParticleEditorPromotionTest: UE.ParticleEditorPromotionSettings;
        BlueprintEditorPromotionTest: UE.BlueprintEditorPromotionSettings;
        TestLevelFolders: TArray<string>;
        ExternalTools: TArray<UE.ExternalToolDefinition>;
        ImportExportTestDefinitions: TArray<UE.EditorImportExportTestDefinition>;
        LaunchOnSettings: TArray<UE.LaunchOnTestSettings>;
        DefaultScreenshotResolution: UE.IntPoint;
        PIETestDuration: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomationTestSettings;
        static Load(InName: string): AutomationTestSettings;
    
        __tid_AutomationTestSettings_0__: boolean;
    }
    
    class AutomationUtilsBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static TakeGameplayAutomationScreenshot(ScreenshotName: string, MaxGlobalError?: number /* = 0.020000 */, MaxLocalError?: number /* = 0.120000 */, MapNameOverride?: string /* = "" */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutomationUtilsBlueprintLibrary;
        static Load(InName: string): AutomationUtilsBlueprintLibrary;
    
        __tid_AutomationUtilsBlueprintLibrary_0__: boolean;
    }
    
    class AutomationWorkerFindWorkers {
        constructor();
        constructor(Changelist: number, GameName: string, ProcessName: string, SessionId: UE.Guid);
        Changelist: number;
        GameName: string;
        ProcessName: string;
        SessionId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerFindWorkers_0__: boolean;
    }
    
    class AutomationWorkerFindWorkersResponse {
        constructor();
        constructor(DeviceName: string, InstanceName: string, Platform: string, OSVersionName: string, ModelName: string, GPUName: string, CPUModelName: string, RAMInGB: number, RenderModeName: string, SessionId: UE.Guid);
        DeviceName: string;
        InstanceName: string;
        Platform: string;
        OSVersionName: string;
        ModelName: string;
        GPUName: string;
        CPUModelName: string;
        RAMInGB: number;
        RenderModeName: string;
        SessionId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerFindWorkersResponse_0__: boolean;
    }
    
    class AutomationWorkerImageComparisonResults {
        constructor();
        constructor(UniqueId: UE.Guid, bNew: boolean, bSimilar: boolean, MaxLocalDifference: number, GlobalDifference: number, ErrorMessage: string);
        UniqueId: UE.Guid;
        bNew: boolean;
        bSimilar: boolean;
        MaxLocalDifference: number;
        GlobalDifference: number;
        ErrorMessage: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerImageComparisonResults_0__: boolean;
    }
    
    class AutomationWorkerNextNetworkCommandReply {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerNextNetworkCommandReply_0__: boolean;
    }
    
    class AutomationWorkerPerformanceDataRequest {
        constructor();
        constructor(Platform: string, Hardware: string, TestName: string, DataPoints: TArray<number>);
        Platform: string;
        Hardware: string;
        TestName: string;
        DataPoints: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerPerformanceDataRequest_0__: boolean;
    }
    
    class AutomationWorkerPerformanceDataResponse {
        constructor();
        constructor(bSuccess: boolean, ErrorMessage: string);
        bSuccess: boolean;
        ErrorMessage: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerPerformanceDataResponse_0__: boolean;
    }
    
    class AutomationWorkerPing {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerPing_0__: boolean;
    }
    
    class AutomationWorkerPong {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerPong_0__: boolean;
    }
    
    class AutomationWorkerRequestNextNetworkCommand {
        constructor();
        constructor(ExecutionCount: number);
        ExecutionCount: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerRequestNextNetworkCommand_0__: boolean;
    }
    
    class AutomationWorkerRequestTests {
        constructor();
        constructor(DeveloperDirectoryIncluded: boolean, RequestedTestFlags: number);
        DeveloperDirectoryIncluded: boolean;
        RequestedTestFlags: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerRequestTests_0__: boolean;
    }
    
    class AutomationWorkerSingleTestReply {
        constructor();
        constructor(DisplayName: string, FullTestPath: string, TestName: string, TestParameter: string, SourceFile: string, SourceFileLine: number, AssetPath: string, OpenCommand: string, TestFlags: number, NumParticipantsRequired: number);
        DisplayName: string;
        FullTestPath: string;
        TestName: string;
        TestParameter: string;
        SourceFile: string;
        SourceFileLine: number;
        AssetPath: string;
        OpenCommand: string;
        TestFlags: number;
        NumParticipantsRequired: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerSingleTestReply_0__: boolean;
    }
    
    class AutomationWorkerRequestTestsReplyComplete {
        constructor();
        constructor(Tests: TArray<UE.AutomationWorkerSingleTestReply>);
        Tests: TArray<UE.AutomationWorkerSingleTestReply>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerRequestTestsReplyComplete_0__: boolean;
    }
    
    class AutomationWorkerResetTests {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerResetTests_0__: boolean;
    }
    
    class AutomationWorkerRunTests {
        constructor();
        constructor(ExecutionCount: number, RoleIndex: number, TestName: string, BeautifiedTestName: string, bSendAnalytics: boolean);
        ExecutionCount: number;
        RoleIndex: number;
        TestName: string;
        BeautifiedTestName: string;
        bSendAnalytics: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerRunTests_0__: boolean;
    }
    
    class AutomationWorkerRunTestsReply {
        constructor();
        constructor(TestName: string, Entries: TArray<UE.AutomationExecutionEntry>, WarningTotal: number, ErrorTotal: number, Duration: number, ExecutionCount: number, Success: boolean);
        TestName: string;
        Entries: TArray<UE.AutomationExecutionEntry>;
        WarningTotal: number;
        ErrorTotal: number;
        Duration: number;
        ExecutionCount: number;
        Success: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerRunTestsReply_0__: boolean;
    }
    
    class AutomationWorkerScreenImage {
        constructor();
        constructor(ScreenImage: TArray<number>, FrameTrace: TArray<number>, ScreenShotName: string, Metadata: UE.AutomationScreenshotMetadata);
        ScreenImage: TArray<number>;
        FrameTrace: TArray<number>;
        ScreenShotName: string;
        Metadata: UE.AutomationScreenshotMetadata;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerScreenImage_0__: boolean;
    }
    
    class AutomationWorkerStopTests {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerStopTests_0__: boolean;
    }
    
    class AutomationWorkerTestDataRequest {
        constructor();
        constructor(DataType: string, DataPlatform: string, DataTestName: string, DataName: string, JsonData: string);
        DataType: string;
        DataPlatform: string;
        DataTestName: string;
        DataName: string;
        JsonData: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerTestDataRequest_0__: boolean;
    }
    
    class AutomationWorkerTestDataResponse {
        constructor();
        constructor(JsonData: string, bIsNew: boolean);
        JsonData: string;
        bIsNew: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerTestDataResponse_0__: boolean;
    }
    
    class AutomationWorkerWorkerOffline {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutomationWorkerWorkerOffline_0__: boolean;
    }
    
    class AutoReimportWildcard {
        constructor();
        constructor(Wildcard: string, bInclude: boolean);
        Wildcard: string;
        bInclude: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutoReimportWildcard_0__: boolean;
    }
    
    class AutoReimportDirectoryConfig {
        constructor();
        constructor(SourceDirectory: string, MountPoint: string, Wildcards: TArray<UE.AutoReimportWildcard>);
        SourceDirectory: string;
        MountPoint: string;
        Wildcards: TArray<UE.AutoReimportWildcard>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_AutoReimportDirectoryConfig_0__: boolean;
    }
    
    class AutoReimportManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AutoReimportManager;
        static Load(InName: string): AutoReimportManager;
    
        __tid_AutoReimportManager_0__: boolean;
    }
    
    class AvfFileMediaSourceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AvfFileMediaSourceFactory;
        static Load(InName: string): AvfFileMediaSourceFactory;
    
        __tid_AvfFileMediaSourceFactory_0__: boolean;
    }
    
    class AvfMediaSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NativeAudioOut: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AvfMediaSettings;
        static Load(InName: string): AvfMediaSettings;
    
        __tid_AvfMediaSettings_0__: boolean;
    }
    
    class BehaviorInfo {
        constructor();
        constructor(Behavior: UE.InputBehavior);
        Behavior: UE.InputBehavior;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BehaviorInfo_0__: boolean;
    }
    
    class InputBehaviorSet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Behaviors: TArray<UE.BehaviorInfo>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputBehaviorSet;
        static Load(InName: string): InputBehaviorSet;
    
        __tid_InputBehaviorSet_0__: boolean;
    }
    
    class InteractiveGizmo extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputBehaviors: UE.InputBehaviorSet;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveGizmo;
        static Load(InName: string): InteractiveGizmo;
    
        __tid_InteractiveGizmo_0__: boolean;
    }
    
    class GizmoAxisSource extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetDirection() : UE.Vector;
        GetOrigin() : UE.Vector;
        GetTangentVectors(TangentXOut: $Ref<UE.Vector>, TangentYOut: $Ref<UE.Vector>) : void;
        HasTangentVectors() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoAxisSource;
        static Load(InName: string): GizmoAxisSource;
    
        __tid_GizmoAxisSource_0__: boolean;
    }
    
    class GizmoFloatParameterSource extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeginModify() : void;
        EndModify() : void;
        GetParameter() : number;
        SetParameter(NewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoFloatParameterSource;
        static Load(InName: string): GizmoFloatParameterSource;
    
        __tid_GizmoFloatParameterSource_0__: boolean;
    }
    
    class GizmoClickTarget extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UpdateHoverState(bHovering: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoClickTarget;
        static Load(InName: string): GizmoClickTarget;
    
        __tid_GizmoClickTarget_0__: boolean;
    }
    
    class GizmoStateTarget extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeginUpdate() : void;
        EndUpdate() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoStateTarget;
        static Load(InName: string): GizmoStateTarget;
    
        __tid_GizmoStateTarget_0__: boolean;
    }
    
    class AxisAngleGizmo extends UE.InteractiveGizmo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        AngleSource: GizmoFloatParameterSource;
        HitTarget: GizmoClickTarget;
        StateTarget: GizmoStateTarget;
        bInInteraction: boolean;
        RotationOrigin: UE.Vector;
        RotationAxis: UE.Vector;
        RotationPlaneX: UE.Vector;
        RotationPlaneY: UE.Vector;
        InteractionStartPoint: UE.Vector;
        InteractionCurPoint: UE.Vector;
        InteractionStartAngle: number;
        InteractionCurAngle: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AxisAngleGizmo;
        static Load(InName: string): AxisAngleGizmo;
    
        __tid_AxisAngleGizmo_0__: boolean;
    }
    
    class InteractiveGizmoBuilder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveGizmoBuilder;
        static Load(InName: string): InteractiveGizmoBuilder;
    
        __tid_InteractiveGizmoBuilder_0__: boolean;
    }
    
    class AxisAngleGizmoBuilder extends UE.InteractiveGizmoBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AxisAngleGizmoBuilder;
        static Load(InName: string): AxisAngleGizmoBuilder;
    
        __tid_AxisAngleGizmoBuilder_0__: boolean;
    }
    
    class AxisGizmoHandleGroup extends UE.GizmoHandleGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AxisGizmoHandleGroup;
        static Load(InName: string): AxisGizmoHandleGroup;
    
        __tid_AxisGizmoHandleGroup_0__: boolean;
    }
    
    class AxisPositionGizmo extends UE.InteractiveGizmo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        ParameterSource: GizmoFloatParameterSource;
        HitTarget: GizmoClickTarget;
        StateTarget: GizmoStateTarget;
        bEnableSignedAxis: boolean;
        bInInteraction: boolean;
        InteractionOrigin: UE.Vector;
        InteractionAxis: UE.Vector;
        InteractionStartPoint: UE.Vector;
        InteractionCurPoint: UE.Vector;
        InteractionStartParameter: number;
        InteractionCurParameter: number;
        ParameterSign: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AxisPositionGizmo;
        static Load(InName: string): AxisPositionGizmo;
    
        __tid_AxisPositionGizmo_0__: boolean;
    }
    
    class AxisPositionGizmoBuilder extends UE.InteractiveGizmoBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): AxisPositionGizmoBuilder;
        static Load(InName: string): AxisPositionGizmoBuilder;
    
        __tid_AxisPositionGizmoBuilder_0__: boolean;
    }
    
    class ContentWidget extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetContent() : UE.Widget;
        GetContentSlot() : UE.PanelSlot;
        SetContent(Content: $Nullable<UE.Widget>) : UE.PanelSlot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentWidget;
        static Load(InName: string): ContentWidget;
    
        __tid_ContentWidget_0__: boolean;
    }
    
    enum EHorizontalAlignment { HAlign_Fill, HAlign_Left, HAlign_Center, HAlign_Right, HAlign_MAX, __typeKeyDoNoAccess}
    enum EVerticalAlignment { VAlign_Fill, VAlign_Top, VAlign_Center, VAlign_Bottom, VAlign_MAX, __typeKeyDoNoAccess}
    class BackgroundBlur extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        bApplyAlphaToBlur: boolean;
        BlurStrength: number;
        bOverrideAutoRadiusCalculation: boolean;
        BlurRadius: number;
        LowQualityFallbackBrush: UE.SlateBrush;
        SetApplyAlphaToBlur(bInApplyAlphaToBlur: boolean) : void;
        SetBlurRadius(InBlurRadius: number) : void;
        SetBlurStrength(InStrength: number) : void;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetLowQualityFallbackBrush(InBrush: UE.SlateBrush) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BackgroundBlur;
        static Load(InName: string): BackgroundBlur;
    
        __tid_BackgroundBlur_0__: boolean;
    }
    
    class BackgroundBlurSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BackgroundBlurSlot;
        static Load(InName: string): BackgroundBlurSlot;
    
        __tid_BackgroundBlurSlot_0__: boolean;
    }
    
    class BandwidthTestItem {
        constructor();
        constructor(Kilobyte: TArray<number>);
        Kilobyte: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BandwidthTestItem_0__: boolean;
    }
    
    class BandwidthTestGenerator {
        constructor();
        constructor(ReplicatedBuffers: TArray<UE.BandwidthTestItem>);
        ReplicatedBuffers: TArray<UE.BandwidthTestItem>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BandwidthTestGenerator_0__: boolean;
    }
    
    class BandwidthTestActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BandwidthGenerator: UE.BandwidthTestGenerator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BandwidthTestActor;
        static Load(InName: string): BandwidthTestActor;
    
        __tid_BandwidthTestActor_0__: boolean;
    }
    
    class InteractiveTool extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputBehaviors: UE.InputBehaviorSet;
        ToolPropertyObjects: TArray<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveTool;
        static Load(InName: string): InteractiveTool;
    
        __tid_InteractiveTool_0__: boolean;
    }
    
    class SingleSelectionTool extends UE.InteractiveTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SingleSelectionTool;
        static Load(InName: string): SingleSelectionTool;
    
        __tid_SingleSelectionTool_0__: boolean;
    }
    
    class MeshSurfacePointTool extends UE.SingleSelectionTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshSurfacePointTool;
        static Load(InName: string): MeshSurfacePointTool;
    
        __tid_MeshSurfacePointTool_0__: boolean;
    }
    
    class InteractiveToolPropertySet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CachedProperties: UE.InteractiveToolPropertySet;
        bIsPropertySetEnabled: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveToolPropertySet;
        static Load(InName: string): InteractiveToolPropertySet;
    
        __tid_InteractiveToolPropertySet_0__: boolean;
    }
    
    class BrushBaseProperties extends UE.InteractiveToolPropertySet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrushSize: number;
        bSpecifyRadius: boolean;
        BrushRadius: number;
        BrushStrength: number;
        BrushFalloffAmount: number;
        bShowStrength: boolean;
        bShowFalloff: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushBaseProperties;
        static Load(InName: string): BrushBaseProperties;
    
        __tid_BrushBaseProperties_0__: boolean;
    }
    
    class BrushStampData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BrushStampData_0__: boolean;
    }
    
    class BrushStampIndicator extends UE.InteractiveGizmo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrushRadius: number;
        BrushFalloff: number;
        BrushPosition: UE.Vector;
        BrushNormal: UE.Vector;
        bDrawIndicatorLines: boolean;
        bDrawRadiusCircle: boolean;
        SampleStepCount: number;
        LineColor: UE.LinearColor;
        LineThickness: number;
        bDepthTested: boolean;
        bDrawSecondaryLines: boolean;
        SecondaryLineThickness: number;
        SecondaryLineColor: UE.LinearColor;
        AttachedComponent: UE.PrimitiveComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushStampIndicator;
        static Load(InName: string): BrushStampIndicator;
    
        __tid_BrushStampIndicator_0__: boolean;
    }
    
    class BaseBrushTool extends UE.MeshSurfacePointTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrushProperties: UE.BrushBaseProperties;
        bInBrushStroke: boolean;
        WorldToLocalScale: number;
        LastBrushStamp: UE.BrushStampData;
        PropertyClass: TSoftClassPtr<UE.BrushBaseProperties>;
        BrushStampIndicator: UE.BrushStampIndicator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BaseBrushTool;
        static Load(InName: string): BaseBrushTool;
    
        __tid_BaseBrushTool_0__: boolean;
    }
    
    class BasedPosition {
        constructor();
        constructor(Base: UE.Actor, Position: UE.Vector, CachedBaseLocation: UE.Vector, CachedBaseRotation: UE.Rotator, CachedTransPosition: UE.Vector);
        Base: UE.Actor;
        Position: UE.Vector;
        CachedBaseLocation: UE.Vector;
        CachedBaseRotation: UE.Rotator;
        CachedTransPosition: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BasedPosition_0__: boolean;
    }
    
    class MediaSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetUrl() : string;
        SetMediaOptionBool(Key: string, Value: boolean) : void;
        SetMediaOptionFloat(Key: string, Value: number) : void;
        SetMediaOptionInt64(Key: string, Value: bigint) : void;
        SetMediaOptionString(Key: string, Value: string) : void;
        Validate() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaSource;
        static Load(InName: string): MediaSource;
    
        __tid_MediaSource_0__: boolean;
    }
    
    class BaseMediaSource extends UE.MediaSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlatformPlayerNames: TMap<string, string>;
        PlayerName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BaseMediaSource;
        static Load(InName: string): BaseMediaSource;
    
        __tid_BaseMediaSource_0__: boolean;
    }
    
    class BaseWidgetBlueprint extends UE.Blueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetTree: UE.WidgetTree;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BaseWidgetBlueprint;
        static Load(InName: string): BaseWidgetBlueprint;
    
        __tid_BaseWidgetBlueprint_0__: boolean;
    }
    
    class Overlays extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Overlays;
        static Load(InName: string): Overlays;
    
        __tid_Overlays_0__: boolean;
    }
    
    class Timespan {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Timespan_0__: boolean;
    }
    
    class OverlayItem {
        constructor();
        constructor(StartTime: UE.Timespan, EndTime: UE.Timespan, Text: string, Position: UE.Vector2D);
        StartTime: UE.Timespan;
        EndTime: UE.Timespan;
        Text: string;
        Position: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OverlayItem_0__: boolean;
    }
    
    class BasicOverlays extends UE.Overlays {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Overlays: TArray<UE.OverlayItem>;
        AssetImportData: UE.AssetImportData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BasicOverlays;
        static Load(InName: string): BasicOverlays;
    
        __tid_BasicOverlays_0__: boolean;
    }
    
    class BasicOverlaysFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BasicOverlaysFactory;
        static Load(InName: string): BasicOverlaysFactory;
    
        __tid_BasicOverlaysFactory_0__: boolean;
    }
    
    class BasicOverlaysFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BasicOverlaysFactoryNew;
        static Load(InName: string): BasicOverlaysFactoryNew;
    
        __tid_BasicOverlaysFactoryNew_0__: boolean;
    }
    
    class BasicParticleData {
        constructor();
        constructor(Position: UE.Vector, Size: number, Velocity: UE.Vector);
        Position: UE.Vector;
        Size: number;
        Velocity: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BasicParticleData_0__: boolean;
    }
    
    class BatchedLine {
        constructor();
        constructor(Start: UE.Vector, End: UE.Vector, Color: UE.LinearColor, Thickness: number, RemainingLifeTime: number, DepthPriority: number);
        Start: UE.Vector;
        End: UE.Vector;
        Color: UE.LinearColor;
        Thickness: number;
        RemainingLifeTime: number;
        DepthPriority: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BatchedLine_0__: boolean;
    }
    
    class BatchedPoint {
        constructor();
        constructor(Position: UE.Vector, Color: UE.LinearColor, PointSize: number, RemainingLifeTime: number, DepthPriority: number);
        Position: UE.Vector;
        Color: UE.LinearColor;
        PointSize: number;
        RemainingLifeTime: number;
        DepthPriority: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BatchedPoint_0__: boolean;
    }
    
    enum Beam2SourceTargetMethod { PEB2STM_Default, PEB2STM_UserSet, PEB2STM_Emitter, PEB2STM_Particle, PEB2STM_Actor, PEB2STM_MAX, __typeKeyDoNoAccess}
    enum Beam2SourceTargetTangentMethod { PEB2STTM_Direct, PEB2STTM_UserSet, PEB2STTM_Distribution, PEB2STTM_Emitter, PEB2STTM_MAX, __typeKeyDoNoAccess}
    class BeamModifierOptions {
        constructor();
        constructor(bModify: boolean, bScale: boolean, bLock: boolean);
        bModify: boolean;
        bScale: boolean;
        bLock: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BeamModifierOptions_0__: boolean;
    }
    
    enum BeamModifierType { PEB2MT_Source, PEB2MT_Target, PEB2MT_MAX, __typeKeyDoNoAccess}
    class BeamTargetData {
        constructor();
        constructor(TargetName: string, TargetPercentage: number);
        TargetName: string;
        TargetPercentage: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BeamTargetData_0__: boolean;
    }
    
    class BehaviorTreeDecoratorGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeDecoratorGraph;
        static Load(InName: string): BehaviorTreeDecoratorGraph;
    
        __tid_BehaviorTreeDecoratorGraph_0__: boolean;
    }
    
    class BehaviorTreeDecoratorGraphNode extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeDecoratorGraphNode;
        static Load(InName: string): BehaviorTreeDecoratorGraphNode;
    
        __tid_BehaviorTreeDecoratorGraphNode_0__: boolean;
    }
    
    class BehaviorTreeDecoratorGraphNode_Decorator extends UE.BehaviorTreeDecoratorGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NodeInstance: UE.Object;
        ClassData: UE.GraphNodeClassData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeDecoratorGraphNode_Decorator;
        static Load(InName: string): BehaviorTreeDecoratorGraphNode_Decorator;
    
        __tid_BehaviorTreeDecoratorGraphNode_Decorator_0__: boolean;
    }
    
    enum EDecoratorLogicMode { Sink, And, Or, Not, EDecoratorLogicMode_MAX, __typeKeyDoNoAccess}
    class BehaviorTreeDecoratorGraphNode_Logic extends UE.BehaviorTreeDecoratorGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LogicMode: UE.EDecoratorLogicMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeDecoratorGraphNode_Logic;
        static Load(InName: string): BehaviorTreeDecoratorGraphNode_Logic;
    
        __tid_BehaviorTreeDecoratorGraphNode_Logic_0__: boolean;
    }
    
    class BehaviorTreeEditorTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeEditorTypes;
        static Load(InName: string): BehaviorTreeEditorTypes;
    
        __tid_BehaviorTreeEditorTypes_0__: boolean;
    }
    
    class BehaviorTreeFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeFactory;
        static Load(InName: string): BehaviorTreeFactory;
    
        __tid_BehaviorTreeFactory_0__: boolean;
    }
    
    class BehaviorTreeGraph extends UE.AIGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ModCounter: number;
        bIsUsingModCounter: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraph;
        static Load(InName: string): BehaviorTreeGraph;
    
        __tid_BehaviorTreeGraph_0__: boolean;
    }
    
    class BehaviorTreeGraphNode extends UE.AIGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Decorators: TArray<UE.BehaviorTreeGraphNode>;
        Services: TArray<UE.BehaviorTreeGraphNode>;
        bInjectedNode: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode;
        static Load(InName: string): BehaviorTreeGraphNode;
    
        __tid_BehaviorTreeGraphNode_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_Composite extends UE.BehaviorTreeGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_Composite;
        static Load(InName: string): BehaviorTreeGraphNode_Composite;
    
        __tid_BehaviorTreeGraphNode_Composite_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_CompositeDecorator extends UE.BehaviorTreeGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundGraph: UE.EdGraph;
        CompositeName: string;
        bShowOperations: boolean;
        bCanAbortFlow: boolean;
        ParentNodeInstance: UE.BTCompositeNode;
        CachedDescription: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_CompositeDecorator;
        static Load(InName: string): BehaviorTreeGraphNode_CompositeDecorator;
    
        __tid_BehaviorTreeGraphNode_CompositeDecorator_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_Decorator extends UE.BehaviorTreeGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_Decorator;
        static Load(InName: string): BehaviorTreeGraphNode_Decorator;
    
        __tid_BehaviorTreeGraphNode_Decorator_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_Root extends UE.BehaviorTreeGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlackboardAsset: UE.BlackboardData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_Root;
        static Load(InName: string): BehaviorTreeGraphNode_Root;
    
        __tid_BehaviorTreeGraphNode_Root_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_Service extends UE.BehaviorTreeGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_Service;
        static Load(InName: string): BehaviorTreeGraphNode_Service;
    
        __tid_BehaviorTreeGraphNode_Service_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_SimpleParallel extends UE.BehaviorTreeGraphNode_Composite {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_SimpleParallel;
        static Load(InName: string): BehaviorTreeGraphNode_SimpleParallel;
    
        __tid_BehaviorTreeGraphNode_SimpleParallel_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_Task extends UE.BehaviorTreeGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_Task;
        static Load(InName: string): BehaviorTreeGraphNode_Task;
    
        __tid_BehaviorTreeGraphNode_Task_0__: boolean;
    }
    
    class BehaviorTreeGraphNode_SubtreeTask extends UE.BehaviorTreeGraphNode_Task {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeGraphNode_SubtreeTask;
        static Load(InName: string): BehaviorTreeGraphNode_SubtreeTask;
    
        __tid_BehaviorTreeGraphNode_SubtreeTask_0__: boolean;
    }
    
    class BehaviorTreeSchemaAction_AutoArrange extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BehaviorTreeSchemaAction_AutoArrange_0__: boolean;
    }
    
    class BehaviorTreeTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BehaviorTreeTypes;
        static Load(InName: string): BehaviorTreeTypes;
    
        __tid_BehaviorTreeTypes_0__: boolean;
    }
    
    class BlackboardAssetProvider extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetBlackboardAsset() : UE.BlackboardData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardAssetProvider;
        static Load(InName: string): BlackboardAssetProvider;
    
        __tid_BlackboardAssetProvider_0__: boolean;
    }
    
    class BlackboardDataFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardDataFactory;
        static Load(InName: string): BlackboardDataFactory;
    
        __tid_BlackboardDataFactory_0__: boolean;
    }
    
    class BlackboardKeyType_Bool extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Bool;
        static Load(InName: string): BlackboardKeyType_Bool;
    
        __tid_BlackboardKeyType_Bool_0__: boolean;
    }
    
    class BlackboardKeyType_Class extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Class;
        static Load(InName: string): BlackboardKeyType_Class;
    
        __tid_BlackboardKeyType_Class_0__: boolean;
    }
    
    class BlackboardKeyType_Enum extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnumType: UE.Enum;
        EnumName: string;
        bIsEnumNameValid: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Enum;
        static Load(InName: string): BlackboardKeyType_Enum;
    
        __tid_BlackboardKeyType_Enum_0__: boolean;
    }
    
    class BlackboardKeyType_Float extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Float;
        static Load(InName: string): BlackboardKeyType_Float;
    
        __tid_BlackboardKeyType_Float_0__: boolean;
    }
    
    class BlackboardKeyType_Int extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Int;
        static Load(InName: string): BlackboardKeyType_Int;
    
        __tid_BlackboardKeyType_Int_0__: boolean;
    }
    
    class BlackboardKeyType_Name extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Name;
        static Load(InName: string): BlackboardKeyType_Name;
    
        __tid_BlackboardKeyType_Name_0__: boolean;
    }
    
    class BlackboardKeyType_NativeEnum extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnumName: string;
        EnumType: UE.Enum;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_NativeEnum;
        static Load(InName: string): BlackboardKeyType_NativeEnum;
    
        __tid_BlackboardKeyType_NativeEnum_0__: boolean;
    }
    
    class BlackboardKeyType_Object extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Object;
        static Load(InName: string): BlackboardKeyType_Object;
    
        __tid_BlackboardKeyType_Object_0__: boolean;
    }
    
    class BlackboardKeyType_Rotator extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Rotator;
        static Load(InName: string): BlackboardKeyType_Rotator;
    
        __tid_BlackboardKeyType_Rotator_0__: boolean;
    }
    
    class BlackboardKeyType_String extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StringValue: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_String;
        static Load(InName: string): BlackboardKeyType_String;
    
        __tid_BlackboardKeyType_String_0__: boolean;
    }
    
    class BlackboardKeyType_Vector extends UE.BlackboardKeyType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlackboardKeyType_Vector;
        static Load(InName: string): BlackboardKeyType_Vector;
    
        __tid_BlackboardKeyType_Vector_0__: boolean;
    }
    
    class BlendFilter {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlendFilter_0__: boolean;
    }
    
    class BlendSampleData {
        constructor();
        constructor(SampleDataIndex: number, Animation: UE.AnimSequence, TotalWeight: number, Time: number, PreviousTime: number, SamplePlayRate: number);
        SampleDataIndex: number;
        Animation: UE.AnimSequence;
        TotalWeight: number;
        Time: number;
        PreviousTime: number;
        SamplePlayRate: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlendSampleData_0__: boolean;
    }
    
    class BlendSpaceThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlendSpaceThumbnailRenderer;
        static Load(InName: string): BlendSpaceThumbnailRenderer;
    
        __tid_BlendSpaceThumbnailRenderer_0__: boolean;
    }
    
    class BlockingVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlockingVolume;
        static Load(InName: string): BlockingVolume;
    
        __tid_BlockingVolume_0__: boolean;
    }
    
    class BlueprintActionMenuItem extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintActionMenuItem_0__: boolean;
    }
    
    class BlueprintNodeSpawner extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NodeClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintNodeSpawner;
        static Load(InName: string): BlueprintNodeSpawner;
    
        __tid_BlueprintNodeSpawner_0__: boolean;
    }
    
    class BlueprintEventNodeSpawner extends UE.BlueprintNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventFunc: UE.Function;
        CustomEventName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintEventNodeSpawner;
        static Load(InName: string): BlueprintEventNodeSpawner;
    
        __tid_BlueprintEventNodeSpawner_0__: boolean;
    }
    
    class BlueprintBoundEventNodeSpawner extends UE.BlueprintEventNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintBoundEventNodeSpawner;
        static Load(InName: string): BlueprintBoundEventNodeSpawner;
    
        __tid_BlueprintBoundEventNodeSpawner_0__: boolean;
    }
    
    class BlueprintBoundNodeSpawner extends UE.BlueprintNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintBoundNodeSpawner;
        static Load(InName: string): BlueprintBoundNodeSpawner;
    
        __tid_BlueprintBoundNodeSpawner_0__: boolean;
    }
    
    class BlueprintCompiledData {
        constructor();
        constructor(IntermediateGraphs: TArray<UE.EdGraph>);
        IntermediateGraphs: TArray<UE.EdGraph>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintCompiledData_0__: boolean;
    }
    
    class BlueprintCompilerExtension extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintCompilerExtension;
        static Load(InName: string): BlueprintCompilerExtension;
    
        __tid_BlueprintCompilerExtension_0__: boolean;
    }
    
    class BlueprintComponentDelegateBinding {
        constructor();
        constructor(ComponentPropertyName: string, DelegatePropertyName: string, FunctionNameToBind: string);
        ComponentPropertyName: string;
        DelegatePropertyName: string;
        FunctionNameToBind: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintComponentDelegateBinding_0__: boolean;
    }
    
    class BlueprintComponentNodeSpawner extends UE.BlueprintNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComponentClass: UE.Class;
        ComponentName: string;
        ComponentAssetName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintComponentNodeSpawner;
        static Load(InName: string): BlueprintComponentNodeSpawner;
    
        __tid_BlueprintComponentNodeSpawner_0__: boolean;
    }
    
    class BlueprintDebugData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintDebugData_0__: boolean;
    }
    
    class BlueprintFieldNodeSpawner extends UE.BlueprintNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwnerClass: UE.Class;
        Field: UE.Field;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintFieldNodeSpawner;
        static Load(InName: string): BlueprintFieldNodeSpawner;
    
        __tid_BlueprintFieldNodeSpawner_0__: boolean;
    }
    
    class BlueprintDelegateNodeSpawner extends UE.BlueprintFieldNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintDelegateNodeSpawner;
        static Load(InName: string): BlueprintDelegateNodeSpawner;
    
        __tid_BlueprintDelegateNodeSpawner_0__: boolean;
    }
    
    class BlueprintDragDropMenuItem extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintDragDropMenuItem_0__: boolean;
    }
    
    class BlueprintEditorProjectSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bForceAllDependenciesToRecompile: boolean;
        bValidateUnloadedSoftActorReferences: boolean;
        bEnableChildActorExpansionInTreeView: boolean;
        DisabledCompilerMessagesExceptEditor: TArray<string>;
        DisabledCompilerMessages: TArray<string>;
        NamespacesToAlwaysInclude: TArray<string>;
        DefaultChildActorTreeViewMode: UE.EChildActorComponentTreeViewVisualizationMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintEditorProjectSettings;
        static Load(InName: string): BlueprintEditorProjectSettings;
    
        __tid_BlueprintEditorProjectSettings_0__: boolean;
    }
    
    enum ESaveOnCompile { SoC_Never, SoC_SuccessOnly, SoC_Always, SoC_MAX, __typeKeyDoNoAccess}
    class BlueprintEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDrawMidpointArrowsInBlueprints: boolean;
        bShowGraphInstructionText: boolean;
        bHideUnrelatedNodes: boolean;
        bShowShortTooltips: boolean;
        bSplitContextTargetSettings: boolean;
        bExposeAllMemberComponentFunctions: boolean;
        bShowContextualFavorites: boolean;
        bExposeDeprecatedFunctions: boolean;
        bCompactCallOnMemberNodes: boolean;
        bFlattenFavoritesMenus: boolean;
        bFavorPureCastNodes: boolean;
        bAutoCastObjectConnections: boolean;
        bShowViewportOnSimulate: boolean;
        bShowInheritedVariables: boolean;
        bAlwaysShowInterfacesInOverrides: boolean;
        bShowParentClassInOverrides: boolean;
        bShowEmptySections: boolean;
        bShowAccessSpecifier: boolean;
        bSpawnDefaultBlueprintNodes: boolean;
        bHideConstructionScriptComponentsInDetailsView: boolean;
        bHostFindInBlueprintsInGlobalTab: boolean;
        bNavigateToNativeFunctionsFromCallNodes: boolean;
        Bookmarks: TMap<UE.Guid, UE.EditedDocumentInfo>;
        BookmarkNodes: TArray<UE.BPEditorBookmarkNode>;
        bIncludeCommentNodesInBookmarksTab: boolean;
        bShowBookmarksForCurrentDocumentOnlyInTab: boolean;
        GraphEditorQuickJumps: TMap<number, UE.EditedDocumentInfo>;
        SaveOnCompile: UE.ESaveOnCompile;
        bJumpToNodeErrors: boolean;
        bAllowExplicitImpureNodeDisabling: boolean;
        bShowActionMenuItemSignatures: boolean;
        bBlueprintNodeUniqueNames: boolean;
        NamespacesToAlwaysInclude: TArray<string>;
        bShowDetailedCompileResults: boolean;
        CompileEventDisplayThresholdMs: number;
        NodeTemplateCacheCapMB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintEditorSettings;
        static Load(InName: string): BlueprintEditorSettings;
    
        __tid_BlueprintEditorSettings_0__: boolean;
    }
    
    class BlueprintEditorToolMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintEditorToolMenuContext;
        static Load(InName: string): BlueprintEditorToolMenuContext;
    
        __tid_BlueprintEditorToolMenuContext_0__: boolean;
    }
    
    enum ETutorialContent { None, Text, UDNExcerpt, RichText, ETutorialContent_MAX, __typeKeyDoNoAccess}
    class TutorialContent {
        constructor();
        constructor(Type: UE.ETutorialContent, Content: string, ExcerptName: string, Text: string);
        Type: UE.ETutorialContent;
        Content: string;
        ExcerptName: string;
        Text: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TutorialContent_0__: boolean;
    }
    
    enum ETutorialAnchorIdentifier { None, NamedWidget, Asset, ETutorialAnchorIdentifier_MAX, __typeKeyDoNoAccess}
    class TutorialContentAnchor {
        constructor();
        constructor(Type: UE.ETutorialAnchorIdentifier, WrapperIdentifier: string, Asset: UE.SoftObjectPath, bDrawHighlight: boolean, TabToFocusOrOpen: string, FriendlyName: string, GUIDString: string, OuterName: string);
        Type: UE.ETutorialAnchorIdentifier;
        WrapperIdentifier: string;
        Asset: UE.SoftObjectPath;
        bDrawHighlight: boolean;
        TabToFocusOrOpen: string;
        FriendlyName: string;
        GUIDString: string;
        OuterName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TutorialContentAnchor_0__: boolean;
    }
    
    class TutorialWidgetContent {
        constructor();
        constructor(Content: UE.TutorialContent, WidgetAnchor: UE.TutorialContentAnchor, HorizontalAlignment: UE.EHorizontalAlignment, VerticalAlignment: UE.EVerticalAlignment, Offset: UE.Vector2D, ContentWidth: number, bAutoFocus: boolean);
        Content: UE.TutorialContent;
        WidgetAnchor: UE.TutorialContentAnchor;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        Offset: UE.Vector2D;
        ContentWidth: number;
        bAutoFocus: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TutorialWidgetContent_0__: boolean;
    }
    
    class TutorialStage {
        constructor();
        constructor(Name: string, Content: UE.TutorialContent, WidgetContent: TArray<UE.TutorialWidgetContent>, NextButtonText: string, BackButtonText: string, PlatformsToTest: TArray<string>, bInvertPlatformTest: boolean);
        Name: string;
        Content: UE.TutorialContent;
        WidgetContent: TArray<UE.TutorialWidgetContent>;
        NextButtonText: string;
        BackButtonText: string;
        PlatformsToTest: TArray<string>;
        bInvertPlatformTest: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TutorialStage_0__: boolean;
    }
    
    class EditorTutorial extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Title: string;
        SortOrder: number;
        Icon: string;
        Texture: UE.Texture2D;
        Category: string;
        SummaryContent: UE.TutorialContent;
        Stages: TArray<UE.TutorialStage>;
        PreviousTutorial: UE.SoftClassPath;
        NextTutorial: UE.SoftClassPath;
        bIsStandalone: boolean;
        AssetToUse: UE.SoftObjectPath;
        ImportPath: string;
        bHideInBrowser: boolean;
        SearchTags: string;
        GetActorReference(PathToActor: string) : UE.Actor;
        OnTutorialClosed() : void;
        OnTutorialLaunched() : void;
        OnTutorialStageEnded(StageName: string) : void;
        OnTutorialStageStarted(StageName: string) : void;
        static BeginTutorial(TutorialToStart: $Nullable<UE.EditorTutorial>, bRestart: boolean) : void;
        static GetEngineFolderVisibilty() : boolean;
        static GoToNextTutorialStage() : void;
        static GoToPreviousTutorialStage() : void;
        static OpenAsset(Asset: $Nullable<UE.Object>) : void;
        static SetEngineFolderVisibilty(bNewVisibility: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorTutorial;
        static Load(InName: string): EditorTutorial;
    
        __tid_EditorTutorial_0__: boolean;
    }
    
    namespace Engine.Tutorial.BlueprintTutorials.BlueprintEditorTutorial {
        class BlueprintEditorTutorial_C extends UE.EditorTutorial {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): BlueprintEditorTutorial_C;
            static Load(InName: string): BlueprintEditorTutorial_C;
        
            __tid_BlueprintEditorTutorial_C_0__: boolean;
        }
        
    }

    class BlueprintFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintFactory;
        static Load(InName: string): BlueprintFactory;
    
        __tid_BlueprintFactory_0__: boolean;
    }
    
    class BlueprintFunctionLibraryFactory extends UE.BlueprintFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintFunctionLibraryFactory;
        static Load(InName: string): BlueprintFunctionLibraryFactory;
    
        __tid_BlueprintFunctionLibraryFactory_0__: boolean;
    }
    
    class BlueprintFunctionNodeSpawner extends UE.BlueprintFieldNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintFunctionNodeSpawner;
        static Load(InName: string): BlueprintFunctionNodeSpawner;
    
        __tid_BlueprintFunctionNodeSpawner_0__: boolean;
    }
    
    class GameplayTagContainer {
        constructor();
        constructor(GameplayTags: TArray<UE.GameplayTag>, ParentTags: TArray<UE.GameplayTag>);
        GameplayTags: TArray<UE.GameplayTag>;
        ParentTags: TArray<UE.GameplayTag>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagContainer_0__: boolean;
    }
    
    class GameplayTagQuery {
        constructor();
        constructor(TokenStreamVersion: number, TagDictionary: TArray<UE.GameplayTag>, QueryTokenStream: TArray<number>, UserDescription: string, AutoDescription: string);
        TokenStreamVersion: number;
        TagDictionary: TArray<UE.GameplayTag>;
        QueryTokenStream: TArray<number>;
        UserDescription: string;
        AutoDescription: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagQuery_0__: boolean;
    }
    
    class GameplayTagAssetInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetOwnedGameplayTags(TagContainer: $Ref<UE.GameplayTagContainer>) : void;
        HasAllMatchingGameplayTags(TagContainer: UE.GameplayTagContainer) : boolean;
        HasAnyMatchingGameplayTags(TagContainer: UE.GameplayTagContainer) : boolean;
        HasMatchingGameplayTag(TagToCheck: UE.GameplayTag) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagAssetInterface;
        static Load(InName: string): GameplayTagAssetInterface;
    
        __tid_GameplayTagAssetInterface_0__: boolean;
    }
    
    class BlueprintGameplayTagLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddGameplayTag(TagContainer: $Ref<UE.GameplayTagContainer>, Tag: UE.GameplayTag) : void;
        static AppendGameplayTagContainers(InOutTagContainer: $Ref<UE.GameplayTagContainer>, InTagContainer: UE.GameplayTagContainer) : void;
        static BreakGameplayTagContainer(GameplayTagContainer: UE.GameplayTagContainer, GameplayTags: $Ref<TArray<UE.GameplayTag>>) : void;
        static DoesContainerMatchTagQuery(TagContainer: UE.GameplayTagContainer, TagQuery: UE.GameplayTagQuery) : boolean;
        static DoesTagAssetInterfaceHaveTag(TagContainerInterface: GameplayTagAssetInterface, Tag: UE.GameplayTag) : boolean;
        static EqualEqual_GameplayTag(A: UE.GameplayTag, B: UE.GameplayTag) : boolean;
        static EqualEqual_GameplayTagContainer(A: UE.GameplayTagContainer, B: UE.GameplayTagContainer) : boolean;
        static GetAllActorsOfClassMatchingTagQuery(WorldContextObject: $Nullable<UE.Object>, ActorClass: $Nullable<UE.Class>, GameplayTagQuery: UE.GameplayTagQuery, OutActors: $Ref<TArray<UE.Actor>>) : void;
        static GetDebugStringFromGameplayTag(GameplayTag: UE.GameplayTag) : string;
        static GetDebugStringFromGameplayTagContainer(TagContainer: UE.GameplayTagContainer) : string;
        static GetNumGameplayTagsInContainer(TagContainer: UE.GameplayTagContainer) : number;
        static GetTagName(GameplayTag: UE.GameplayTag) : string;
        static HasAllMatchingGameplayTags(TagContainerInterface: GameplayTagAssetInterface, OtherContainer: UE.GameplayTagContainer) : boolean;
        static HasAllTags(TagContainer: UE.GameplayTagContainer, OtherContainer: UE.GameplayTagContainer, bExactMatch: boolean) : boolean;
        static HasAnyTags(TagContainer: UE.GameplayTagContainer, OtherContainer: UE.GameplayTagContainer, bExactMatch: boolean) : boolean;
        static HasTag(TagContainer: UE.GameplayTagContainer, Tag: UE.GameplayTag, bExactMatch: boolean) : boolean;
        static IsGameplayTagValid(GameplayTag: UE.GameplayTag) : boolean;
        static IsTagQueryEmpty(TagQuery: UE.GameplayTagQuery) : boolean;
        static MakeGameplayTagContainerFromArray(GameplayTags: TArray<UE.GameplayTag>) : UE.GameplayTagContainer;
        static MakeGameplayTagContainerFromTag(SingleTag: UE.GameplayTag) : UE.GameplayTagContainer;
        static MakeGameplayTagQuery(TagQuery: UE.GameplayTagQuery) : UE.GameplayTagQuery;
        static MakeLiteralGameplayTag(Value: UE.GameplayTag) : UE.GameplayTag;
        static MakeLiteralGameplayTagContainer(Value: UE.GameplayTagContainer) : UE.GameplayTagContainer;
        static MatchesAnyTags(TagOne: UE.GameplayTag, OtherContainer: UE.GameplayTagContainer, bExactMatch: boolean) : boolean;
        static MatchesTag(TagOne: UE.GameplayTag, TagTwo: UE.GameplayTag, bExactMatch: boolean) : boolean;
        static NotEqual_GameplayTag(A: UE.GameplayTag, B: UE.GameplayTag) : boolean;
        static NotEqual_GameplayTagContainer(A: UE.GameplayTagContainer, B: UE.GameplayTagContainer) : boolean;
        static NotEqual_TagContainerTagContainer(A: UE.GameplayTagContainer, B: string) : boolean;
        static NotEqual_TagTag(A: UE.GameplayTag, B: string) : boolean;
        static RemoveGameplayTag(TagContainer: $Ref<UE.GameplayTagContainer>, Tag: UE.GameplayTag) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintGameplayTagLibrary;
        static Load(InName: string): BlueprintGameplayTagLibrary;
    
        __tid_BlueprintGameplayTagLibrary_0__: boolean;
    }
    
    class BlueprintInputDelegateBinding {
        constructor();
        constructor(bConsumeInput: boolean, bExecuteWhenPaused: boolean, bOverrideParentBinding: boolean);
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintInputDelegateBinding_0__: boolean;
    }
    
    class BlueprintInputActionDelegateBinding extends UE.BlueprintInputDelegateBinding {
        constructor();
        constructor(InputActionName: string, InputKeyEvent: UE.EInputEvent, FunctionNameToBind: string);
        InputActionName: string;
        InputKeyEvent: UE.EInputEvent;
        FunctionNameToBind: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintInputActionDelegateBinding_0__: boolean;
    }
    
    class BlueprintInputAxisDelegateBinding extends UE.BlueprintInputDelegateBinding {
        constructor();
        constructor(InputAxisName: string, FunctionNameToBind: string);
        InputAxisName: string;
        FunctionNameToBind: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintInputAxisDelegateBinding_0__: boolean;
    }
    
    class BlueprintInputAxisKeyDelegateBinding extends UE.BlueprintInputDelegateBinding {
        constructor();
        constructor(AxisKey: UE.Key, FunctionNameToBind: string);
        AxisKey: UE.Key;
        FunctionNameToBind: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintInputAxisKeyDelegateBinding_0__: boolean;
    }
    
    class InputChord {
        constructor();
        constructor(Key: UE.Key, bShift: boolean, bCtrl: boolean, bAlt: boolean, bCmd: boolean);
        Key: UE.Key;
        bShift: boolean;
        bCtrl: boolean;
        bAlt: boolean;
        bCmd: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputChord_0__: boolean;
    }
    
    class BlueprintInputKeyDelegateBinding extends UE.BlueprintInputDelegateBinding {
        constructor();
        constructor(InputChord: UE.InputChord, InputKeyEvent: UE.EInputEvent, FunctionNameToBind: string);
        InputChord: UE.InputChord;
        InputKeyEvent: UE.EInputEvent;
        FunctionNameToBind: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintInputKeyDelegateBinding_0__: boolean;
    }
    
    class BlueprintInputTouchDelegateBinding extends UE.BlueprintInputDelegateBinding {
        constructor();
        constructor(InputKeyEvent: UE.EInputEvent, FunctionNameToBind: string);
        InputKeyEvent: UE.EInputEvent;
        FunctionNameToBind: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintInputTouchDelegateBinding_0__: boolean;
    }
    
    class BlueprintInterfaceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintInterfaceFactory;
        static Load(InName: string): BlueprintInterfaceFactory;
    
        __tid_BlueprintInterfaceFactory_0__: boolean;
    }
    
    class BlueprintMacroFactory extends UE.BlueprintFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintMacroFactory;
        static Load(InName: string): BlueprintMacroFactory;
    
        __tid_BlueprintMacroFactory_0__: boolean;
    }
    
    class BlueprintMapLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Map_Add(TargetMap: TMap<number, number>, Key: number, Value: number) : void;
        static Map_Clear(TargetMap: TMap<number, number>) : void;
        static Map_Contains(TargetMap: TMap<number, number>, Key: number) : boolean;
        static Map_Find(TargetMap: TMap<number, number>, Key: number, Value: $Ref<number>) : boolean;
        static Map_Keys(TargetMap: TMap<number, number>, Keys: $Ref<TArray<number>>) : void;
        static Map_Length(TargetMap: TMap<number, number>) : number;
        static Map_Remove(TargetMap: TMap<number, number>, Key: number) : boolean;
        static Map_Values(TargetMap: TMap<number, number>, Values: $Ref<TArray<number>>) : void;
        static SetMapPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: TMap<number, number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintMapLibrary;
        static Load(InName: string): BlueprintMapLibrary;
    
        __tid_BlueprintMapLibrary_0__: boolean;
    }
    
    class ConvertedAssetRecord {
        constructor();
        constructor(AssetType: UE.Class, TargetObjPath: string, GeneratedHeaderPath: string, GeneratedCppPath: string);
        AssetType: UE.Class;
        TargetObjPath: string;
        GeneratedHeaderPath: string;
        GeneratedCppPath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConvertedAssetRecord_0__: boolean;
    }
    
    class UnconvertedDependencyRecord {
        constructor();
        constructor(GeneratedWrapperPath: string);
        GeneratedWrapperPath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UnconvertedDependencyRecord_0__: boolean;
    }
    
    class CompilerNativizationOptions {
        constructor();
        constructor(PlatformName: string, ServerOnlyPlatform: boolean, ClientOnlyPlatform: boolean, bExcludeMonolithicHeaders: boolean, ExcludedModules: TArray<string>, ExcludedAssets: TSet<UE.SoftObjectPath>, ExcludedFolderPaths: TArray<string>);
        PlatformName: string;
        ServerOnlyPlatform: boolean;
        ClientOnlyPlatform: boolean;
        bExcludeMonolithicHeaders: boolean;
        ExcludedModules: TArray<string>;
        ExcludedAssets: TSet<UE.SoftObjectPath>;
        ExcludedFolderPaths: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompilerNativizationOptions_0__: boolean;
    }
    
    class BlueprintNativeCodeGenManifest {
        constructor();
        constructor(ManifestChunkId: number, PluginName: string, OutputDir: string, ModuleDependencies: TArray<UE.Package>, ConvertedAssets: TMap<string, UE.ConvertedAssetRecord>, UnconvertedDependencies: TMap<string, UE.UnconvertedDependencyRecord>, NativizationOptions: UE.CompilerNativizationOptions);
        ManifestChunkId: number;
        PluginName: string;
        OutputDir: string;
        ModuleDependencies: TArray<UE.Package>;
        ConvertedAssets: TMap<string, UE.ConvertedAssetRecord>;
        UnconvertedDependencies: TMap<string, UE.UnconvertedDependencyRecord>;
        NativizationOptions: UE.CompilerNativizationOptions;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintNativeCodeGenManifest_0__: boolean;
    }
    
    class FavoritedBlueprintPaletteItem {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FavoritedBlueprintPaletteItem_0__: boolean;
    }
    
    class BlueprintPaletteFavorites extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CustomFavorites: TArray<string>;
        CurrentFavorites: TArray<UE.FavoritedBlueprintPaletteItem>;
        CurrentProfile: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintPaletteFavorites;
        static Load(InName: string): BlueprintPaletteFavorites;
    
        __tid_BlueprintPaletteFavorites_0__: boolean;
    }
    
    class BlueprintPathsLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AutomationDir() : string;
        static AutomationLogDir() : string;
        static AutomationTransientDir() : string;
        static BugItDir() : string;
        static ChangeExtension(InPath: string, InNewExtension: string) : string;
        static CloudDir() : string;
        static CollapseRelativeDirectories(InPath: string, OutPath: $Ref<string>) : boolean;
        static Combine(InPaths: TArray<string>) : string;
        static ConvertFromSandboxPath(InPath: string, InSandboxName: string) : string;
        static ConvertRelativePathToFull(InPath: string, InBasePath?: string /* = "" */) : string;
        static ConvertToSandboxPath(InPath: string, InSandboxName: string) : string;
        static CreateTempFilename(Path: string, Prefix?: string /* = "" */, Extension?: string /* = ".tmp" */) : string;
        static DiffDir() : string;
        static DirectoryExists(InPath: string) : boolean;
        static EngineConfigDir() : string;
        static EngineContentDir() : string;
        static EngineDir() : string;
        static EngineIntermediateDir() : string;
        static EnginePluginsDir() : string;
        static EngineSavedDir() : string;
        static EngineSourceDir() : string;
        static EngineUserDir() : string;
        static EngineVersionAgnosticUserDir() : string;
        static EnterpriseDir() : string;
        static EnterpriseFeaturePackDir() : string;
        static EnterprisePluginsDir() : string;
        static FeaturePackDir() : string;
        static FileExists(InPath: string) : boolean;
        static GameAgnosticSavedDir() : string;
        static GameDevelopersDir() : string;
        static GameSourceDir() : string;
        static GameUserDeveloperDir() : string;
        static GeneratedConfigDir() : string;
        static GetBaseFilename(InPath: string, bRemovePath?: boolean /* = true */) : string;
        static GetCleanFilename(InPath: string) : string;
        static GetEditorLocalizationPaths() : TArray<string>;
        static GetEngineLocalizationPaths() : TArray<string>;
        static GetExtension(InPath: string, bIncludeDot?: boolean /* = false */) : string;
        static GetGameLocalizationPaths() : TArray<string>;
        static GetInvalidFileSystemChars() : string;
        static GetPath(InPath: string) : string;
        static GetProjectFilePath() : string;
        static GetPropertyNameLocalizationPaths() : TArray<string>;
        static GetRelativePathToRoot() : string;
        static GetRestrictedFolderNames() : TArray<string>;
        static GetToolTipLocalizationPaths() : TArray<string>;
        static HasProjectPersistentDownloadDir() : boolean;
        static IsDrive(InPath: string) : boolean;
        static IsProjectFilePathSet() : boolean;
        static IsRelative(InPath: string) : boolean;
        static IsRestrictedPath(InPath: string) : boolean;
        static IsSamePath(PathA: string, PathB: string) : boolean;
        static LaunchDir() : string;
        static MakePathRelativeTo(InPath: string, InRelativeTo: string, OutPath: $Ref<string>) : boolean;
        static MakePlatformFilename(InPath: string, OutPath: $Ref<string>) : void;
        static MakeStandardFilename(InPath: string, OutPath: $Ref<string>) : void;
        static MakeValidFileName(InString: string, InReplacementChar?: string /* = "" */) : string;
        static NormalizeDirectoryName(InPath: string, OutPath: $Ref<string>) : void;
        static NormalizeFilename(InPath: string, OutPath: $Ref<string>) : void;
        static ProfilingDir() : string;
        static ProjectConfigDir() : string;
        static ProjectContentDir() : string;
        static ProjectDir() : string;
        static ProjectIntermediateDir() : string;
        static ProjectLogDir() : string;
        static ProjectModsDir() : string;
        static ProjectPersistentDownloadDir() : string;
        static ProjectPluginsDir() : string;
        static ProjectSavedDir() : string;
        static ProjectUserDir() : string;
        static RemoveDuplicateSlashes(InPath: string, OutPath: $Ref<string>) : void;
        static RootDir() : string;
        static SandboxesDir() : string;
        static ScreenShotDir() : string;
        static SetExtension(InPath: string, InNewExtension: string) : string;
        static SetProjectFilePath(NewGameProjectFilePath: string) : void;
        static ShaderWorkingDir() : string;
        static ShouldSaveToUserDir() : boolean;
        static SourceConfigDir() : string;
        static Split(InPath: string, PathPart: $Ref<string>, FilenamePart: $Ref<string>, ExtensionPart: $Ref<string>) : void;
        static ValidatePath(InPath: string, bDidSucceed: $Ref<boolean>, OutReason: $Ref<string>) : void;
        static VideoCaptureDir() : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintPathsLibrary;
        static Load(InName: string): BlueprintPathsLibrary;
    
        __tid_BlueprintPathsLibrary_0__: boolean;
    }
    
    enum EScreenOrientation { Unknown, Portrait, PortraitUpsideDown, LandscapeLeft, LandscapeRight, FaceUp, FaceDown, EScreenOrientation_MAX, __typeKeyDoNoAccess}
    class BlueprintPlatformLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CancelLocalNotification(ActivationEvent: string) : void;
        static CancelLocalNotificationById(NotificationId: number) : void;
        static ClearAllLocalNotifications() : void;
        static GetDeviceOrientation() : UE.EScreenOrientation;
        static GetLaunchNotification(NotificationLaunchedApp: $Ref<boolean>, ActivationEvent: $Ref<string>, FireDate: $Ref<number>) : void;
        static ScheduleLocalNotificationAtTime(FireDateTime: UE.DateTime, LocalTime: boolean, Title: string, Body: string, Action: string, ActivationEvent: string) : number;
        static ScheduleLocalNotificationBadgeAtTime(FireDateTime: UE.DateTime, LocalTime: boolean, ActivationEvent: string) : number;
        static ScheduleLocalNotificationBadgeFromNow(inSecondsFromNow: number, ActivationEvent: string) : void;
        static ScheduleLocalNotificationFromNow(inSecondsFromNow: number, Title: string, Body: string, Action: string, ActivationEvent: string) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintPlatformLibrary;
        static Load(InName: string): BlueprintPlatformLibrary;
    
        __tid_BlueprintPlatformLibrary_0__: boolean;
    }
    
    class BlueprintPropertyTestObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShouldBeHidden: number;
        ShouldBeVisible: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintPropertyTestObject;
        static Load(InName: string): BlueprintPropertyTestObject;
    
        __tid_BlueprintPropertyTestObject_0__: boolean;
    }
    
    class BlueprintPropertyContainerTestObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Array: TArray<UE.BlueprintPropertyTestObject>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintPropertyContainerTestObject;
        static Load(InName: string): BlueprintPropertyContainerTestObject;
    
        __tid_BlueprintPropertyContainerTestObject_0__: boolean;
    }
    
    class BlueprintSessionResult {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintSessionResult_0__: boolean;
    }
    
    class BlueprintSetLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Set_Add(TargetSet: TSet<number>, NewItem: number) : void;
        static Set_AddItems(TargetSet: TSet<number>, NewItems: TArray<number>) : void;
        static Set_Clear(TargetSet: TSet<number>) : void;
        static Set_Contains(TargetSet: TSet<number>, ItemToFind: number) : boolean;
        static Set_Difference(A: TSet<number>, B: TSet<number>, Result: $Ref<TSet<number>>) : void;
        static Set_Intersection(A: TSet<number>, B: TSet<number>, Result: $Ref<TSet<number>>) : void;
        static Set_Length(TargetSet: TSet<number>) : number;
        static Set_Remove(TargetSet: TSet<number>, Item: number) : boolean;
        static Set_RemoveItems(TargetSet: TSet<number>, Items: TArray<number>) : void;
        static Set_ToArray(A: TSet<number>, Result: $Ref<TArray<number>>) : void;
        static Set_Union(A: TSet<number>, B: TSet<number>, Result: $Ref<TSet<number>>) : void;
        static SetSetPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: TSet<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintSetLibrary;
        static Load(InName: string): BlueprintSetLibrary;
    
        __tid_BlueprintSetLibrary_0__: boolean;
    }
    
    class BlueprintThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintThumbnailRenderer;
        static Load(InName: string): BlueprintThumbnailRenderer;
    
        __tid_BlueprintThumbnailRenderer_0__: boolean;
    }
    
    class BlueprintVariableNodeSpawner extends UE.BlueprintFieldNodeSpawner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LocalVarOuter: UE.EdGraph;
        LocalVarDesc: UE.BPVariableDescription;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BlueprintVariableNodeSpawner;
        static Load(InName: string): BlueprintVariableNodeSpawner;
    
        __tid_BlueprintVariableNodeSpawner_0__: boolean;
    }
    
    class BlueprintWidgetAnimationDelegateBinding {
        constructor();
        constructor(Action: UE.EWidgetAnimationEvent, AnimationToBind: string, FunctionNameToBind: string, UserTag: string);
        Action: UE.EWidgetAnimationEvent;
        AnimationToBind: string;
        FunctionNameToBind: string;
        UserTag: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BlueprintWidgetAnimationDelegateBinding_0__: boolean;
    }
    
    class BoneMaskFilter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlendPoses: TArray<UE.InputBlendPose>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoneMaskFilter;
        static Load(InName: string): BoneMaskFilter;
    
        __tid_BoneMaskFilter_0__: boolean;
    }
    
    class BoneMirrorExport {
        constructor();
        constructor(BoneName: string, SourceBoneName: string, BoneFlipAxis: UE.EAxis);
        BoneName: string;
        SourceBoneName: string;
        BoneFlipAxis: UE.EAxis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoneMirrorExport_0__: boolean;
    }
    
    class BoneReductionSetting {
        constructor();
        constructor(BonesToRemove: TArray<string>);
        BonesToRemove: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoneReductionSetting_0__: boolean;
    }
    
    class BoneReferenceSkeletonProvider extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoneReferenceSkeletonProvider;
        static Load(InName: string): BoneReferenceSkeletonProvider;
    
        __tid_BoneReferenceSkeletonProvider_0__: boolean;
    }
    
    class BookMark2D extends UE.BookmarkBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Zoom2D: number;
        Location: UE.IntPoint;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BookMark2D;
        static Load(InName: string): BookMark2D;
    
        __tid_BookMark2D_0__: boolean;
    }
    
    class Bookmark2DJumpToSettings {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Bookmark2DJumpToSettings_0__: boolean;
    }
    
    class BookmarkBaseJumpToSettings {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BookmarkBaseJumpToSettings_0__: boolean;
    }
    
    class BookmarkJumpToSettings extends UE.BookmarkBaseJumpToSettings {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BookmarkJumpToSettings_0__: boolean;
    }
    
    class BoolBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoolBinding;
        static Load(InName: string): BoolBinding;
    
        __tid_BoolBinding_0__: boolean;
    }
    
    class BoolChannelKeyProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Time: UE.FrameNumber;
        bValue: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoolChannelKeyProxy;
        static Load(InName: string): BoolChannelKeyProxy;
    
        __tid_BoolChannelKeyProxy_0__: boolean;
    }
    
    class MovieSceneChannel {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneChannel_0__: boolean;
    }
    
    class MovieSceneBoolChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(Times: TArray<UE.FrameNumber>, DefaultValue: boolean, bHasDefaultValue: boolean, Values: TArray<boolean>);
        Times: TArray<UE.FrameNumber>;
        DefaultValue: boolean;
        bHasDefaultValue: boolean;
        Values: TArray<boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneBoolChannel_0__: boolean;
    }
    
    class BoolParameterNameAndCurve {
        constructor();
        constructor(ParameterName: string, ParameterCurve: UE.MovieSceneBoolChannel);
        ParameterName: string;
        ParameterCurve: UE.MovieSceneBoolChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoolParameterNameAndCurve_0__: boolean;
    }
    
    class BoolProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoolProperty;
        static Load(InName: string): BoolProperty;
    
        __tid_BoolProperty_0__: boolean;
    }
    
    class BoolTrackKey {
        constructor();
        constructor(Time: number, Value: boolean);
        Time: number;
        Value: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoolTrackKey_0__: boolean;
    }
    
    class SlateBrushAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Brush: UE.SlateBrush;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateBrushAsset;
        static Load(InName: string): SlateBrushAsset;
    
        __tid_SlateBrushAsset_0__: boolean;
    }
    
    class Border extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        bShowEffectWhenDisabled: boolean;
        ContentColorAndOpacity: UE.LinearColor;
        ContentColorAndOpacityDelegate: $Delegate<() => UE.LinearColor>;
        Padding: UE.Margin;
        Background: UE.SlateBrush;
        BackgroundDelegate: $Delegate<() => UE.SlateBrush>;
        BrushColor: UE.LinearColor;
        BrushColorDelegate: $Delegate<() => UE.LinearColor>;
        DesiredSizeScale: UE.Vector2D;
        bFlipForRightToLeftFlowDirection: boolean;
        OnMouseButtonDownEvent: $Delegate<(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) => UE.EventReply>;
        OnMouseButtonUpEvent: $Delegate<(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) => UE.EventReply>;
        OnMouseMoveEvent: $Delegate<(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) => UE.EventReply>;
        OnMouseDoubleClickEvent: $Delegate<(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) => UE.EventReply>;
        Brush: UE.SlateBrushAsset;
        GetDynamicMaterial() : UE.MaterialInstanceDynamic;
        SetBrush(InBrush: UE.SlateBrush) : void;
        SetBrushColor(InBrushColor: UE.LinearColor) : void;
        SetBrushFromAsset(Asset: $Nullable<UE.SlateBrushAsset>) : void;
        SetBrushFromMaterial(Material: $Nullable<UE.MaterialInterface>) : void;
        SetBrushFromTexture(Texture: $Nullable<UE.Texture2D>) : void;
        SetContentColorAndOpacity(InContentColorAndOpacity: UE.LinearColor) : void;
        SetDesiredSizeScale(InScale: UE.Vector2D) : void;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Border;
        static Load(InName: string): Border;
    
        __tid_Border_0__: boolean;
    }
    
    class BorderSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BorderSlot;
        static Load(InName: string): BorderSlot;
    
        __tid_BorderSlot_0__: boolean;
    }
    
    class BoundActorProxy {
        constructor();
        constructor(BoundActor: UE.Actor);
        BoundActor: UE.Actor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BoundActorProxy_0__: boolean;
    }
    
    class BoundsCopyComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundsSourceActor: TSoftObjectPtr<UE.Actor>;
        bUseCollidingComponentsForSourceBounds: boolean;
        bKeepOwnBoundsScale: boolean;
        bUseCollidingComponentsForOwnBounds: boolean;
        PostTransform: UE.Transform;
        bCopyXBounds: boolean;
        bCopyYBounds: boolean;
        bCopyZBounds: boolean;
        SetRotation() : void;
        SetTransformToBounds() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoundsCopyComponent;
        static Load(InName: string): BoundsCopyComponent;
    
        __tid_BoundsCopyComponent_0__: boolean;
    }
    
    class BoxComponent extends UE.ShapeComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoxExtent: UE.Vector;
        LineThickness: number;
        GetScaledBoxExtent() : UE.Vector;
        GetUnscaledBoxExtent() : UE.Vector;
        SetBoxExtent(InBoxExtent: UE.Vector, bUpdateOverlaps?: boolean /* = true */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoxComponent;
        static Load(InName: string): BoxComponent;
    
        __tid_BoxComponent_0__: boolean;
    }
    
    class FieldNodeBase extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldNodeBase;
        static Load(InName: string): FieldNodeBase;
    
        __tid_FieldNodeBase_0__: boolean;
    }
    
    class FieldNodeFloat extends UE.FieldNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldNodeFloat;
        static Load(InName: string): FieldNodeFloat;
    
        __tid_FieldNodeFloat_0__: boolean;
    }
    
    enum EFieldFalloffType { Field_FallOff_None, Field_Falloff_Linear, Field_Falloff_Inverse, Field_Falloff_Squared, Field_Falloff_Logarithmic, Field_Falloff_Max, __typeKeyDoNoAccess}
    class BoxFalloff extends UE.FieldNodeFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        MinRange: number;
        MaxRange: number;
        Default: number;
        Transform: UE.Transform;
        Falloff: UE.EFieldFalloffType;
        SetBoxFalloff(Magnitude: number, MinRange: number, MaxRange: number, Default: number, Transform: UE.Transform, Falloff: UE.EFieldFalloffType) : UE.BoxFalloff;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoxFalloff;
        static Load(InName: string): BoxFalloff;
    
        __tid_BoxFalloff_0__: boolean;
    }
    
    enum EReflectionSourceType { CapturedScene, SpecifiedCubemap, EReflectionSourceType_MAX, __typeKeyDoNoAccess}
    enum EMobileReflectionCompression { Default, On, Off, EMobileReflectionCompression_MAX, __typeKeyDoNoAccess}
    class ReflectionCaptureComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CaptureOffsetComponent: UE.BillboardComponent;
        ReflectionSourceType: UE.EReflectionSourceType;
        MobileReflectionCompression: UE.EMobileReflectionCompression;
        Cubemap: UE.TextureCube;
        SourceCubemapAngle: number;
        Brightness: number;
        bModifyMaxValueRGBM: boolean;
        MaxValueRGBM: number;
        CaptureOffset: UE.Vector;
        MapBuildDataId: UE.Guid;
        CachedEncodedHDRCubemap: UE.TextureCube;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReflectionCaptureComponent;
        static Load(InName: string): ReflectionCaptureComponent;
    
        __tid_ReflectionCaptureComponent_0__: boolean;
    }
    
    class ReflectionCapture extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CaptureComponent: UE.ReflectionCaptureComponent;
        SpriteComponent: UE.BillboardComponent;
        CaptureOffsetComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReflectionCapture;
        static Load(InName: string): ReflectionCapture;
    
        __tid_ReflectionCapture_0__: boolean;
    }
    
    class BoxReflectionCapture extends UE.ReflectionCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoxReflectionCapture;
        static Load(InName: string): BoxReflectionCapture;
    
        __tid_BoxReflectionCapture_0__: boolean;
    }
    
    class BoxReflectionCaptureComponent extends UE.ReflectionCaptureComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoxTransitionDistance: number;
        PreviewInfluenceBox: UE.BoxComponent;
        PreviewCaptureBox: UE.BoxComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BoxReflectionCaptureComponent;
        static Load(InName: string): BoxReflectionCaptureComponent;
    
        __tid_BoxReflectionCaptureComponent_0__: boolean;
    }
    
    class TextureLightProfile extends UE.Texture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Brightness: number;
        TextureMultiplier: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureLightProfile;
        static Load(InName: string): TextureLightProfile;
    
        __tid_TextureLightProfile_0__: boolean;
    }
    
    class LightComponent extends UE.LightComponentBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Temperature: number;
        MaxDrawDistance: number;
        MaxDistanceFadeRange: number;
        bUseTemperature: boolean;
        ShadowMapChannel: number;
        MinRoughness: number;
        SpecularScale: number;
        ShadowResolutionScale: number;
        ShadowBias: number;
        ShadowSlopeBias: number;
        ShadowSharpen: number;
        ContactShadowLength: number;
        ContactShadowLengthInWS: boolean;
        InverseSquaredFalloff: boolean;
        CastTranslucentShadows: boolean;
        bCastShadowsFromCinematicObjectsOnly: boolean;
        bAffectDynamicIndirectLighting: boolean;
        bForceCachedShadowsForMovablePrimitives: boolean;
        LightingChannels: UE.LightingChannels;
        LightFunctionMaterial: UE.MaterialInterface;
        LightFunctionScale: UE.Vector;
        IESTexture: UE.TextureLightProfile;
        bUseIESBrightness: boolean;
        IESBrightnessScale: number;
        LightFunctionFadeDistance: number;
        DisabledBrightness: number;
        bEnableLightShaftBloom: boolean;
        BloomScale: number;
        BloomThreshold: number;
        BloomMaxBrightness: number;
        BloomTint: UE.Color;
        bUseRayTracedDistanceFieldShadows: boolean;
        RayStartOffsetDepthScale: number;
        SetAffectDynamicIndirectLighting(bNewValue: boolean) : void;
        SetAffectTranslucentLighting(bNewValue: boolean) : void;
        SetBloomMaxBrightness(NewValue: number) : void;
        SetBloomScale(NewValue: number) : void;
        SetBloomThreshold(NewValue: number) : void;
        SetBloomTint(NewValue: UE.Color) : void;
        SetEnableLightShaftBloom(bNewValue: boolean) : void;
        SetForceCachedShadowsForMovablePrimitives(bNewValue: boolean) : void;
        SetIESBrightnessScale(NewValue: number) : void;
        SetIESTexture(NewValue: $Nullable<UE.TextureLightProfile>) : void;
        SetIndirectLightingIntensity(NewIntensity: number) : void;
        SetIntensity(NewIntensity: number) : void;
        SetLightColor(NewLightColor: UE.LinearColor, bSRGB?: boolean /* = true */) : void;
        SetLightFunctionDisabledBrightness(NewValue: number) : void;
        SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: number) : void;
        SetLightFunctionMaterial(NewLightFunctionMaterial: $Nullable<UE.MaterialInterface>) : void;
        SetLightFunctionScale(NewLightFunctionScale: UE.Vector) : void;
        SetLightingChannels(bChannel0: boolean, bChannel1: boolean, bChannel2: boolean) : void;
        SetShadowBias(NewValue: number) : void;
        SetShadowSlopeBias(NewValue: number) : void;
        SetSpecularScale(NewValue: number) : void;
        SetTemperature(NewTemperature: number) : void;
        SetTransmission(bNewValue: boolean) : void;
        SetUseIESBrightness(bNewValue: boolean) : void;
        SetVolumetricScatteringIntensity(NewIntensity: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightComponent;
        static Load(InName: string): LightComponent;
    
        __tid_LightComponent_0__: boolean;
    }
    
    class Light extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightComponent: UE.LightComponent;
        bEnabled: boolean;
        GetBrightness() : number;
        GetLightColor() : UE.LinearColor;
        IsEnabled() : boolean;
        OnRep_bEnabled() : void;
        SetAffectTranslucentLighting(bNewValue: boolean) : void;
        SetBrightness(NewBrightness: number) : void;
        SetCastShadows(bNewValue: boolean) : void;
        SetEnabled(bSetEnabled: boolean) : void;
        SetLightColor(NewLightColor: UE.LinearColor) : void;
        SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: number) : void;
        SetLightFunctionMaterial(NewLightFunctionMaterial: $Nullable<UE.MaterialInterface>) : void;
        SetLightFunctionScale(NewLightFunctionScale: UE.Vector) : void;
        ToggleEnabled() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Light;
        static Load(InName: string): Light;
    
        __tid_Light_0__: boolean;
    }
    
    class LightmassLightSettings {
        constructor();
        constructor(IndirectLightingSaturation: number, ShadowExponent: number, bUseAreaShadowsForStationaryLight: boolean);
        IndirectLightingSaturation: number;
        ShadowExponent: number;
        bUseAreaShadowsForStationaryLight: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassLightSettings_0__: boolean;
    }
    
    class LightmassDirectionalLightSettings extends UE.LightmassLightSettings {
        constructor();
        constructor(LightSourceAngle: number);
        LightSourceAngle: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassDirectionalLightSettings_0__: boolean;
    }
    
    class DirectionalLightComponent extends UE.LightComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShadowCascadeBiasDistribution: number;
        bEnableLightShaftOcclusion: boolean;
        OcclusionMaskDarkness: number;
        OcclusionDepthRange: number;
        LightShaftOverrideDirection: UE.Vector;
        WholeSceneDynamicShadowRadius: number;
        DynamicShadowDistanceMovableLight: number;
        DynamicShadowDistanceStationaryLight: number;
        DynamicShadowCascades: number;
        CascadeDistributionExponent: number;
        CascadeTransitionFraction: number;
        ShadowDistanceFadeoutFraction: number;
        bUseInsetShadowsForMovableObjects: boolean;
        FarShadowCascadeCount: number;
        FarShadowDistance: number;
        DistanceFieldShadowDistance: number;
        LightSourceAngle: number;
        LightSourceSoftAngle: number;
        ShadowSourceAngleFactor: number;
        TraceDistance: number;
        bUsedAsAtmosphereSunLight: boolean;
        AtmosphereSunLightIndex: number;
        AtmosphereSunDiskColorScale: UE.LinearColor;
        bPerPixelAtmosphereTransmittance: boolean;
        bCastShadowsOnClouds: boolean;
        bCastShadowsOnAtmosphere: boolean;
        bCastCloudShadows: boolean;
        CloudShadowStrength: number;
        CloudShadowOnAtmosphereStrength: number;
        CloudShadowOnSurfaceStrength: number;
        CloudShadowDepthBias: number;
        CloudShadowExtent: number;
        CloudShadowMapResolutionScale: number;
        CloudShadowRaySampleCountScale: number;
        CloudScatteredLuminanceScale: UE.LinearColor;
        LightmassSettings: UE.LightmassDirectionalLightSettings;
        bCastModulatedShadows: boolean;
        ModulatedShadowColor: UE.Color;
        ShadowAmount: number;
        SetAtmosphereSunLight(bNewValue: boolean) : void;
        SetAtmosphereSunLightIndex(NewValue: number) : void;
        SetCascadeDistributionExponent(NewValue: number) : void;
        SetCascadeTransitionFraction(NewValue: number) : void;
        SetDynamicShadowCascades(NewValue: number) : void;
        SetDynamicShadowDistanceMovableLight(NewValue: number) : void;
        SetDynamicShadowDistanceStationaryLight(NewValue: number) : void;
        SetEnableLightShaftOcclusion(bNewValue: boolean) : void;
        SetLightShaftOverrideDirection(NewValue: UE.Vector) : void;
        SetOcclusionMaskDarkness(NewValue: number) : void;
        SetShadowAmount(NewValue: number) : void;
        SetShadowDistanceFadeoutFraction(NewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DirectionalLightComponent;
        static Load(InName: string): DirectionalLightComponent;
    
        __tid_DirectionalLightComponent_0__: boolean;
    }
    
    class DirectionalLight extends UE.Light {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ArrowComponent: UE.ArrowComponent;
        DirectionalLightComponent: UE.DirectionalLightComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DirectionalLight;
        static Load(InName: string): DirectionalLight;
    
        __tid_DirectionalLight_0__: boolean;
    }
    
    namespace Engine.EngineSky.BP_Sky_Sphere {
        class BP_Sky_Sphere_C extends UE.Actor {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            SkySphereMesh: UE.StaticMeshComponent;
            Base: UE.SceneComponent;
            ["Sky material"]: UE.MaterialInstanceDynamic;
            ["Refresh material"]: boolean;
            ["Directional light actor"]: UE.DirectionalLight;
            ["Colors determined by sun position"]: boolean;
            ["Sun height"]: number;
            ["Sun brightness"]: number;
            ["Horizon Falloff"]: number;
            ["Zenith Color"]: UE.LinearColor;
            ["Horizon color"]: UE.LinearColor;
            ["Cloud color"]: UE.LinearColor;
            ["Overall Color"]: UE.LinearColor;
            ["Cloud speed"]: number;
            ["Cloud opacity"]: number;
            ["Stars brightness"]: number;
            ["Horizon color curve"]: UE.CurveLinearColor;
            ["Zenith color curve"]: UE.CurveLinearColor;
            ["Cloud color curve"]: UE.CurveLinearColor;
            RefreshMaterial() : void;
            UpdateSunDirection() : void;
            UserConstructionScript() : void;
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): BP_Sky_Sphere_C;
            static Load(InName: string): BP_Sky_Sphere_C;
        
            __tid_BP_Sky_Sphere_C_0__: boolean;
        }
        
    }

    enum EGraphType { GT_Function, GT_Ubergraph, GT_Macro, GT_Animation, GT_StateMachine, GT_MAX, __typeKeyDoNoAccess}
    class BPGraphClipboardData {
        constructor();
        constructor(GraphName: string, GraphType: UE.EGraphType, OriginalBlueprint: TWeakObjectPtr<UE.Blueprint>, NodesString: string);
        GraphName: string;
        GraphType: UE.EGraphType;
        OriginalBlueprint: TWeakObjectPtr<UE.Blueprint>;
        NodesString: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BPGraphClipboardData_0__: boolean;
    }
    
    class BranchingPointNotifyPayload {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BranchingPointNotifyPayload_0__: boolean;
    }
    
    class BreakEventCallbackWrapper {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_BreakEventCallbackWrapper_0__: boolean;
    }
    
    class BrushBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : UE.SlateBrush;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushBinding;
        static Load(InName: string): BrushBinding;
    
        __tid_BrushBinding_0__: boolean;
    }
    
    class BrushEditingSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushEditingSubsystem;
        static Load(InName: string): BrushEditingSubsystem;
    
        __tid_BrushEditingSubsystem_0__: boolean;
    }
    
    class BrushEditingSubsystemImpl extends UE.BrushEditingSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushEditingSubsystemImpl;
        static Load(InName: string): BrushEditingSubsystemImpl;
    
        __tid_BrushEditingSubsystemImpl_0__: boolean;
    }
    
    class BrushShape extends UE.Brush {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushShape;
        static Load(InName: string): BrushShape;
    
        __tid_BrushShape_0__: boolean;
    }
    
    class BrushStampIndicatorBuilder extends UE.InteractiveGizmoBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BrushStampIndicatorBuilder;
        static Load(InName: string): BrushStampIndicatorBuilder;
    
        __tid_BrushStampIndicatorBuilder_0__: boolean;
    }
    
    class BTComposite_Selector extends UE.BTCompositeNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTComposite_Selector;
        static Load(InName: string): BTComposite_Selector;
    
        __tid_BTComposite_Selector_0__: boolean;
    }
    
    class BTComposite_Sequence extends UE.BTCompositeNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTComposite_Sequence;
        static Load(InName: string): BTComposite_Sequence;
    
        __tid_BTComposite_Sequence_0__: boolean;
    }
    
    enum EBTParallelMode { AbortBackground, WaitForBackground, EBTParallelMode_MAX, __typeKeyDoNoAccess}
    class BTComposite_SimpleParallel extends UE.BTCompositeNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FinishMode: UE.EBTParallelMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTComposite_SimpleParallel;
        static Load(InName: string): BTComposite_SimpleParallel;
    
        __tid_BTComposite_SimpleParallel_0__: boolean;
    }
    
    class BTDecorator_BlackboardBase extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlackboardKey: UE.BlackboardKeySelector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_BlackboardBase;
        static Load(InName: string): BTDecorator_BlackboardBase;
    
        __tid_BTDecorator_BlackboardBase_0__: boolean;
    }
    
    enum EBTBlackboardRestart { ValueChange, ResultChange, EBTBlackboardRestart_MAX, __typeKeyDoNoAccess}
    enum EBasicKeyOperation { Set, NotSet, EBasicKeyOperation_MAX, __typeKeyDoNoAccess}
    enum EArithmeticKeyOperation { Equal, NotEqual, Less, LessOrEqual, Greater, GreaterOrEqual, EArithmeticKeyOperation_MAX, __typeKeyDoNoAccess}
    enum ETextKeyOperation { Equal, NotEqual, Contain, NotContain, ETextKeyOperation_MAX, __typeKeyDoNoAccess}
    class BTDecorator_Blackboard extends UE.BTDecorator_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IntValue: number;
        FloatValue: number;
        StringValue: string;
        CachedDescription: string;
        OperationType: number;
        NotifyObserver: UE.EBTBlackboardRestart;
        BasicOperation: UE.EBasicKeyOperation;
        ArithmeticOperation: UE.EArithmeticKeyOperation;
        TextOperation: UE.ETextKeyOperation;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_Blackboard;
        static Load(InName: string): BTDecorator_Blackboard;
    
        __tid_BTDecorator_Blackboard_0__: boolean;
    }
    
    enum EBTNodeResult { Succeeded, Failed, Aborted, InProgress, EBTNodeResult_MAX, __typeKeyDoNoAccess}
    class BTDecorator_BlueprintBase extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AIOwner: UE.AIController;
        ActorOwner: UE.Actor;
        ObservedKeyNames: TArray<string>;
        CustomDescription: string;
        bShowPropertyDetails: boolean;
        bCheckConditionOnlyBlackBoardChanges: boolean;
        bIsObservingBB: boolean;
        IsDecoratorExecutionActive() : boolean;
        IsDecoratorObserverActive() : boolean;
        PerformConditionCheck(OwnerActor: $Nullable<UE.Actor>) : boolean;
        PerformConditionCheckAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : boolean;
        ReceiveExecutionFinish(OwnerActor: $Nullable<UE.Actor>, NodeResult: UE.EBTNodeResult) : void;
        ReceiveExecutionFinishAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>, NodeResult: UE.EBTNodeResult) : void;
        ReceiveExecutionStart(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveExecutionStartAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveObserverActivated(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveObserverActivatedAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveObserverDeactivated(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveObserverDeactivatedAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveTick(OwnerActor: $Nullable<UE.Actor>, DeltaSeconds: number) : void;
        ReceiveTickAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>, DeltaSeconds: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_BlueprintBase;
        static Load(InName: string): BTDecorator_BlueprintBase;
    
        __tid_BTDecorator_BlueprintBase_0__: boolean;
    }
    
    enum EGameplayContainerMatchType { Any, All, EGameplayContainerMatchType_MAX, __typeKeyDoNoAccess}
    class BTDecorator_CheckGameplayTagsOnActor extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActorToCheck: UE.BlackboardKeySelector;
        TagsToMatch: UE.EGameplayContainerMatchType;
        GameplayTags: UE.GameplayTagContainer;
        CachedDescription: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_CheckGameplayTagsOnActor;
        static Load(InName: string): BTDecorator_CheckGameplayTagsOnActor;
    
        __tid_BTDecorator_CheckGameplayTagsOnActor_0__: boolean;
    }
    
    enum EBlackBoardEntryComparison { Equal, NotEqual, EBlackBoardEntryComparison_MAX, __typeKeyDoNoAccess}
    class BTDecorator_CompareBBEntries extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Operator: UE.EBlackBoardEntryComparison;
        BlackboardKeyA: UE.BlackboardKeySelector;
        BlackboardKeyB: UE.BlackboardKeySelector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_CompareBBEntries;
        static Load(InName: string): BTDecorator_CompareBBEntries;
    
        __tid_BTDecorator_CompareBBEntries_0__: boolean;
    }
    
    class BTDecorator_ConditionalLoop extends UE.BTDecorator_Blackboard {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_ConditionalLoop;
        static Load(InName: string): BTDecorator_ConditionalLoop;
    
        __tid_BTDecorator_ConditionalLoop_0__: boolean;
    }
    
    class BTDecorator_ConeCheck extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConeHalfAngle: number;
        ConeOrigin: UE.BlackboardKeySelector;
        ConeDirection: UE.BlackboardKeySelector;
        Observed: UE.BlackboardKeySelector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_ConeCheck;
        static Load(InName: string): BTDecorator_ConeCheck;
    
        __tid_BTDecorator_ConeCheck_0__: boolean;
    }
    
    class BTDecorator_Cooldown extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CoolDownTime: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_Cooldown;
        static Load(InName: string): BTDecorator_Cooldown;
    
        __tid_BTDecorator_Cooldown_0__: boolean;
    }
    
    enum EPathExistanceQueryType { NavmeshRaycast2D, HierarchicalQuery, RegularPathFinding, EPathExistanceQueryType_MAX, __typeKeyDoNoAccess}
    class BTDecorator_DoesPathExist extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlackboardKeyA: UE.BlackboardKeySelector;
        BlackboardKeyB: UE.BlackboardKeySelector;
        bUseSelf: boolean;
        PathQueryType: UE.EPathExistanceQueryType;
        FilterClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_DoesPathExist;
        static Load(InName: string): BTDecorator_DoesPathExist;
    
        __tid_BTDecorator_DoesPathExist_0__: boolean;
    }
    
    class BTDecorator_ForceSuccess extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_ForceSuccess;
        static Load(InName: string): BTDecorator_ForceSuccess;
    
        __tid_BTDecorator_ForceSuccess_0__: boolean;
    }
    
    enum FAIDistanceType { Distance3D, Distance2D, DistanceZ, MAX, __typeKeyDoNoAccess}
    class BTDecorator_IsAtLocation extends UE.BTDecorator_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AcceptableRadius: number;
        ParametrizedAcceptableRadius: UE.AIDataProviderFloatValue;
        GeometricDistanceType: UE.FAIDistanceType;
        bUseParametrizedRadius: boolean;
        bUseNavAgentGoalLocation: boolean;
        bPathFindingBasedTest: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_IsAtLocation;
        static Load(InName: string): BTDecorator_IsAtLocation;
    
        __tid_BTDecorator_IsAtLocation_0__: boolean;
    }
    
    class BTDecorator_IsBBEntryOfClass extends UE.BTDecorator_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TestClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_IsBBEntryOfClass;
        static Load(InName: string): BTDecorator_IsBBEntryOfClass;
    
        __tid_BTDecorator_IsBBEntryOfClass_0__: boolean;
    }
    
    class BTDecorator_KeepInCone extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConeHalfAngle: number;
        ConeOrigin: UE.BlackboardKeySelector;
        Observed: UE.BlackboardKeySelector;
        bUseSelfAsOrigin: boolean;
        bUseSelfAsObserved: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_KeepInCone;
        static Load(InName: string): BTDecorator_KeepInCone;
    
        __tid_BTDecorator_KeepInCone_0__: boolean;
    }
    
    class BTDecorator_Loop extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumLoops: number;
        bInfiniteLoop: boolean;
        InfiniteLoopTimeoutTime: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_Loop;
        static Load(InName: string): BTDecorator_Loop;
    
        __tid_BTDecorator_Loop_0__: boolean;
    }
    
    class BTDecorator_ReachedMoveGoal extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_ReachedMoveGoal;
        static Load(InName: string): BTDecorator_ReachedMoveGoal;
    
        __tid_BTDecorator_ReachedMoveGoal_0__: boolean;
    }
    
    class BTDecorator_SetTagCooldown extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CooldownTag: UE.GameplayTag;
        CooldownDuration: number;
        bAddToExistingDuration: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_SetTagCooldown;
        static Load(InName: string): BTDecorator_SetTagCooldown;
    
        __tid_BTDecorator_SetTagCooldown_0__: boolean;
    }
    
    class BTDecorator_TagCooldown extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CooldownTag: UE.GameplayTag;
        CooldownDuration: number;
        bAddToExistingDuration: boolean;
        bActivatesCooldown: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_TagCooldown;
        static Load(InName: string): BTDecorator_TagCooldown;
    
        __tid_BTDecorator_TagCooldown_0__: boolean;
    }
    
    class BTDecorator_TimeLimit extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TimeLimit: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTDecorator_TimeLimit;
        static Load(InName: string): BTDecorator_TimeLimit;
    
        __tid_BTDecorator_TimeLimit_0__: boolean;
    }
    
    class BTFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ClearBlackboardValue(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : void;
        static ClearBlackboardValueAsVector(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : void;
        static GetBlackboardValueAsActor(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : UE.Actor;
        static GetBlackboardValueAsBool(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : boolean;
        static GetBlackboardValueAsClass(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : UE.Class;
        static GetBlackboardValueAsEnum(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : number;
        static GetBlackboardValueAsFloat(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : number;
        static GetBlackboardValueAsInt(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : number;
        static GetBlackboardValueAsName(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : string;
        static GetBlackboardValueAsObject(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : UE.Object;
        static GetBlackboardValueAsRotator(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : UE.Rotator;
        static GetBlackboardValueAsString(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : string;
        static GetBlackboardValueAsVector(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector) : UE.Vector;
        static GetOwnerComponent(NodeOwner: $Nullable<UE.BTNode>) : UE.BehaviorTreeComponent;
        static GetOwnersBlackboard(NodeOwner: $Nullable<UE.BTNode>) : UE.BlackboardComponent;
        static SetBlackboardValueAsBool(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: boolean) : void;
        static SetBlackboardValueAsClass(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: $Nullable<UE.Class>) : void;
        static SetBlackboardValueAsEnum(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: number) : void;
        static SetBlackboardValueAsFloat(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: number) : void;
        static SetBlackboardValueAsInt(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: number) : void;
        static SetBlackboardValueAsName(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: string) : void;
        static SetBlackboardValueAsObject(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: $Nullable<UE.Object>) : void;
        static SetBlackboardValueAsRotator(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: UE.Rotator) : void;
        static SetBlackboardValueAsString(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: string) : void;
        static SetBlackboardValueAsVector(NodeOwner: $Nullable<UE.BTNode>, Key: UE.BlackboardKeySelector, Value: UE.Vector) : void;
        static StartUsingExternalEvent(NodeOwner: $Nullable<UE.BTNode>, OwningActor: $Nullable<UE.Actor>) : void;
        static StopUsingExternalEvent(NodeOwner: $Nullable<UE.BTNode>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTFunctionLibrary;
        static Load(InName: string): BTFunctionLibrary;
    
        __tid_BTFunctionLibrary_0__: boolean;
    }
    
    class BTService_BlackboardBase extends UE.BTService {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlackboardKey: UE.BlackboardKeySelector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTService_BlackboardBase;
        static Load(InName: string): BTService_BlackboardBase;
    
        __tid_BTService_BlackboardBase_0__: boolean;
    }
    
    class BTService_BlueprintBase extends UE.BTService {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AIOwner: UE.AIController;
        ActorOwner: UE.Actor;
        CustomDescription: string;
        bShowPropertyDetails: boolean;
        bShowEventDetails: boolean;
        IsServiceActive() : boolean;
        ReceiveActivation(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveActivationAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveDeactivation(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveDeactivationAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveSearchStart(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveSearchStartAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveTick(OwnerActor: $Nullable<UE.Actor>, DeltaSeconds: number) : void;
        ReceiveTickAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>, DeltaSeconds: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTService_BlueprintBase;
        static Load(InName: string): BTService_BlueprintBase;
    
        __tid_BTService_BlueprintBase_0__: boolean;
    }
    
    class BTService_DefaultFocus extends UE.BTService_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FocusPriority: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTService_DefaultFocus;
        static Load(InName: string): BTService_DefaultFocus;
    
        __tid_BTService_DefaultFocus_0__: boolean;
    }
    
    class EQSParametrizedQueryExecutionRequest {
        constructor();
        constructor(QueryTemplate: UE.EnvQuery, QueryConfig: TArray<UE.AIDynamicParam>, EQSQueryBlackboardKey: UE.BlackboardKeySelector, RunMode: UE.EEnvQueryRunMode, bUseBBKeyForQueryTemplate: boolean);
        QueryTemplate: UE.EnvQuery;
        QueryConfig: TArray<UE.AIDynamicParam>;
        EQSQueryBlackboardKey: UE.BlackboardKeySelector;
        RunMode: UE.EEnvQueryRunMode;
        bUseBBKeyForQueryTemplate: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EQSParametrizedQueryExecutionRequest_0__: boolean;
    }
    
    class BTService_RunEQS extends UE.BTService_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EQSRequest: UE.EQSParametrizedQueryExecutionRequest;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTService_RunEQS;
        static Load(InName: string): BTService_RunEQS;
    
        __tid_BTService_RunEQS_0__: boolean;
    }
    
    class BTTask_BlackboardBase extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlackboardKey: UE.BlackboardKeySelector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_BlackboardBase;
        static Load(InName: string): BTTask_BlackboardBase;
    
        __tid_BTTask_BlackboardBase_0__: boolean;
    }
    
    class IntervalCountdown {
        constructor();
        constructor(Interval: number);
        Interval: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IntervalCountdown_0__: boolean;
    }
    
    class BTTask_BlueprintBase extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AIOwner: UE.AIController;
        ActorOwner: UE.Actor;
        TickInterval: UE.IntervalCountdown;
        CustomDescription: string;
        bShowPropertyDetails: boolean;
        FinishAbort() : void;
        FinishExecute(bSuccess: boolean) : void;
        IsTaskAborting() : boolean;
        IsTaskExecuting() : boolean;
        ReceiveAbort(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveAbortAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveExecute(OwnerActor: $Nullable<UE.Actor>) : void;
        ReceiveExecuteAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>) : void;
        ReceiveTick(OwnerActor: $Nullable<UE.Actor>, DeltaSeconds: number) : void;
        ReceiveTickAI(OwnerController: $Nullable<UE.AIController>, ControlledPawn: $Nullable<UE.Pawn>, DeltaSeconds: number) : void;
        SetFinishOnMessage(MessageName: string) : void;
        SetFinishOnMessageWithId(MessageName: string, RequestID?: number /* = -1 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_BlueprintBase;
        static Load(InName: string): BTTask_BlueprintBase;
    
        __tid_BTTask_BlueprintBase_0__: boolean;
    }
    
    class BTTask_FinishWithResult extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Result: UE.EBTNodeResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_FinishWithResult;
        static Load(InName: string): BTTask_FinishWithResult;
    
        __tid_BTTask_FinishWithResult_0__: boolean;
    }
    
    class BTTask_GameplayTaskBase extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bWaitForGameplayTask: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_GameplayTaskBase;
        static Load(InName: string): BTTask_GameplayTaskBase;
    
        __tid_BTTask_GameplayTaskBase_0__: boolean;
    }
    
    class BTTask_MakeNoise extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Loudnes: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_MakeNoise;
        static Load(InName: string): BTTask_MakeNoise;
    
        __tid_BTTask_MakeNoise_0__: boolean;
    }
    
    class BTTask_MoveTo extends UE.BTTask_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AcceptableRadius: number;
        FilterClass: UE.Class;
        ObservedBlackboardValueTolerance: number;
        bObserveBlackboardValue: boolean;
        bAllowStrafe: boolean;
        bAllowPartialPath: boolean;
        bTrackMovingGoal: boolean;
        bProjectGoalLocation: boolean;
        bReachTestIncludesAgentRadius: boolean;
        bReachTestIncludesGoalRadius: boolean;
        bStopOnOverlap: boolean;
        bStopOnOverlapNeedsUpdate: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_MoveTo;
        static Load(InName: string): BTTask_MoveTo;
    
        __tid_BTTask_MoveTo_0__: boolean;
    }
    
    class BTTask_MoveDirectlyToward extends UE.BTTask_MoveTo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDisablePathUpdateOnGoalLocationChange: boolean;
        bProjectVectorGoalToNavigation: boolean;
        bUpdatedDeprecatedProperties: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_MoveDirectlyToward;
        static Load(InName: string): BTTask_MoveDirectlyToward;
    
        __tid_BTTask_MoveDirectlyToward_0__: boolean;
    }
    
    class BTTask_PawnActionBase extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_PawnActionBase;
        static Load(InName: string): BTTask_PawnActionBase;
    
        __tid_BTTask_PawnActionBase_0__: boolean;
    }
    
    class BTTask_PlayAnimation extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationToPlay: UE.AnimationAsset;
        bLooping: boolean;
        bNonBlocking: boolean;
        MyOwnerComp: UE.BehaviorTreeComponent;
        CachedSkelMesh: UE.SkeletalMeshComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_PlayAnimation;
        static Load(InName: string): BTTask_PlayAnimation;
    
        __tid_BTTask_PlayAnimation_0__: boolean;
    }
    
    class BTTask_PlaySound extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundToPlay: UE.SoundCue;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_PlaySound;
        static Load(InName: string): BTTask_PlaySound;
    
        __tid_BTTask_PlaySound_0__: boolean;
    }
    
    class BTTask_PushPawnAction extends UE.BTTask_PawnActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Action: UE.PawnAction;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_PushPawnAction;
        static Load(InName: string): BTTask_PushPawnAction;
    
        __tid_BTTask_PushPawnAction_0__: boolean;
    }
    
    class BTTask_RotateToFaceBBEntry extends UE.BTTask_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Precision: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_RotateToFaceBBEntry;
        static Load(InName: string): BTTask_RotateToFaceBBEntry;
    
        __tid_BTTask_RotateToFaceBBEntry_0__: boolean;
    }
    
    class BTTask_RunBehavior extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BehaviorAsset: UE.BehaviorTree;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_RunBehavior;
        static Load(InName: string): BTTask_RunBehavior;
    
        __tid_BTTask_RunBehavior_0__: boolean;
    }
    
    class BTTask_RunBehaviorDynamic extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InjectionTag: UE.GameplayTag;
        DefaultBehaviorAsset: UE.BehaviorTree;
        BehaviorAsset: UE.BehaviorTree;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_RunBehaviorDynamic;
        static Load(InName: string): BTTask_RunBehaviorDynamic;
    
        __tid_BTTask_RunBehaviorDynamic_0__: boolean;
    }
    
    class EnvNamedValue {
        constructor();
        constructor(ParamName: string, ParamType: UE.EAIParamType, Value: number);
        ParamName: string;
        ParamType: UE.EAIParamType;
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EnvNamedValue_0__: boolean;
    }
    
    class BTTask_RunEQSQuery extends UE.BTTask_BlackboardBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QueryTemplate: UE.EnvQuery;
        QueryParams: TArray<UE.EnvNamedValue>;
        QueryConfig: TArray<UE.AIDynamicParam>;
        RunMode: UE.EEnvQueryRunMode;
        EQSQueryBlackboardKey: UE.BlackboardKeySelector;
        bUseBBKey: boolean;
        EQSRequest: UE.EQSParametrizedQueryExecutionRequest;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_RunEQSQuery;
        static Load(InName: string): BTTask_RunEQSQuery;
    
        __tid_BTTask_RunEQSQuery_0__: boolean;
    }
    
    class BTTask_SetTagCooldown extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CooldownTag: UE.GameplayTag;
        bAddToExistingDuration: boolean;
        CooldownDuration: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_SetTagCooldown;
        static Load(InName: string): BTTask_SetTagCooldown;
    
        __tid_BTTask_SetTagCooldown_0__: boolean;
    }
    
    class BTTask_Wait extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WaitTime: number;
        RandomDeviation: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_Wait;
        static Load(InName: string): BTTask_Wait;
    
        __tid_BTTask_Wait_0__: boolean;
    }
    
    class BTTask_WaitBlackboardTime extends UE.BTTask_Wait {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlackboardKey: UE.BlackboardKeySelector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BTTask_WaitBlackboardTime;
        static Load(InName: string): BTTask_WaitBlackboardTime;
    
        __tid_BTTask_WaitBlackboardTime_0__: boolean;
    }
    
    class SHAHashData {
        constructor();
        constructor(Hash: FixSizeArray<number>);
        Hash: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SHAHashData_0__: boolean;
    }
    
    class ChunkPartData {
        constructor();
        constructor(Guid: UE.Guid, Offset: number, Size: number);
        Guid: UE.Guid;
        Offset: number;
        Size: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChunkPartData_0__: boolean;
    }
    
    class FileManifestData {
        constructor();
        constructor(Filename: string, FileHash: UE.SHAHashData, FileChunkParts: TArray<UE.ChunkPartData>, InstallTags: TArray<string>, bIsUnixExecutable: boolean, SymlinkTarget: string, bIsReadOnly: boolean, bIsCompressed: boolean);
        Filename: string;
        FileHash: UE.SHAHashData;
        FileChunkParts: TArray<UE.ChunkPartData>;
        InstallTags: TArray<string>;
        bIsUnixExecutable: boolean;
        SymlinkTarget: string;
        bIsReadOnly: boolean;
        bIsCompressed: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FileManifestData_0__: boolean;
    }
    
    class ChunkInfoData {
        constructor();
        constructor(Guid: UE.Guid, Hash: bigint, ShaHash: UE.SHAHashData, FileSize: bigint, GroupNumber: number);
        Guid: UE.Guid;
        Hash: bigint;
        ShaHash: UE.SHAHashData;
        FileSize: bigint;
        GroupNumber: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChunkInfoData_0__: boolean;
    }
    
    class CustomFieldData {
        constructor();
        constructor(Key: string, Value: string);
        Key: string;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomFieldData_0__: boolean;
    }
    
    class BuildPatchManifest extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ManifestFileVersion: number;
        bIsFileData: boolean;
        AppID: number;
        AppName: string;
        BuildVersion: string;
        LaunchExe: string;
        LaunchCommand: string;
        PrereqIds: TSet<string>;
        PrereqName: string;
        PrereqPath: string;
        PrereqArgs: string;
        FileManifestList: TArray<UE.FileManifestData>;
        ChunkList: TArray<UE.ChunkInfoData>;
        CustomFields: TArray<UE.CustomFieldData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): BuildPatchManifest;
        static Load(InName: string): BuildPatchManifest;
    
        __tid_BuildPatchManifest_0__: boolean;
    }
    
    class SlateWidgetStyleContainerBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateWidgetStyleContainerBase;
        static Load(InName: string): SlateWidgetStyleContainerBase;
    
        __tid_SlateWidgetStyleContainerBase_0__: boolean;
    }
    
    class SlateWidgetStyleAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CustomStyle: UE.SlateWidgetStyleContainerBase;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateWidgetStyleAsset;
        static Load(InName: string): SlateWidgetStyleAsset;
    
        __tid_SlateWidgetStyleAsset_0__: boolean;
    }
    
    class SlateWidgetStyle {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlateWidgetStyle_0__: boolean;
    }
    
    class SlateSound {
        constructor();
        constructor(ResourceObject: UE.Object);
        ResourceObject: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlateSound_0__: boolean;
    }
    
    class ButtonStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(Normal: UE.SlateBrush, Hovered: UE.SlateBrush, Pressed: UE.SlateBrush, Disabled: UE.SlateBrush, NormalPadding: UE.Margin, PressedPadding: UE.Margin, PressedSlateSound: UE.SlateSound, HoveredSlateSound: UE.SlateSound, PressedSound: string, HoveredSound: string);
        Normal: UE.SlateBrush;
        Hovered: UE.SlateBrush;
        Pressed: UE.SlateBrush;
        Disabled: UE.SlateBrush;
        NormalPadding: UE.Margin;
        PressedPadding: UE.Margin;
        PressedSlateSound: UE.SlateSound;
        HoveredSlateSound: UE.SlateSound;
        PressedSound: string;
        HoveredSound: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ButtonStyle_0__: boolean;
    }
    
    enum EButtonClickMethod { DownAndUp, MouseDown, MouseUp, PreciseClick, EButtonClickMethod_MAX, __typeKeyDoNoAccess}
    enum EButtonTouchMethod { DownAndUp, Down, PreciseTap, EButtonTouchMethod_MAX, __typeKeyDoNoAccess}
    enum EButtonPressMethod { DownAndUp, ButtonPress, ButtonRelease, EButtonPressMethod_MAX, __typeKeyDoNoAccess}
    class Button extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Style: UE.SlateWidgetStyleAsset;
        WidgetStyle: UE.ButtonStyle;
        ColorAndOpacity: UE.LinearColor;
        BackgroundColor: UE.LinearColor;
        ClickMethod: UE.EButtonClickMethod;
        TouchMethod: UE.EButtonTouchMethod;
        PressMethod: UE.EButtonPressMethod;
        IsFocusable: boolean;
        OnClicked: $MulticastDelegate<() => void>;
        OnPressed: $MulticastDelegate<() => void>;
        OnReleased: $MulticastDelegate<() => void>;
        OnHovered: $MulticastDelegate<() => void>;
        OnUnhovered: $MulticastDelegate<() => void>;
        IsPressed() : boolean;
        SetBackgroundColor(InBackgroundColor: UE.LinearColor) : void;
        SetClickMethod(InClickMethod: UE.EButtonClickMethod) : void;
        SetColorAndOpacity(InColorAndOpacity: UE.LinearColor) : void;
        SetPressMethod(InPressMethod: UE.EButtonPressMethod) : void;
        SetStyle(InStyle: UE.ButtonStyle) : void;
        SetTouchMethod(InTouchMethod: UE.EButtonTouchMethod) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Button;
        static Load(InName: string): Button;
    
        __tid_Button_0__: boolean;
    }
    
    class ButtonSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ButtonSlot;
        static Load(InName: string): ButtonSlot;
    
        __tid_ButtonSlot_0__: boolean;
    }
    
    class ButtonStyleAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ButtonStyle: UE.ButtonStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ButtonStyleAsset;
        static Load(InName: string): ButtonStyleAsset;
    
        __tid_ButtonStyleAsset_0__: boolean;
    }
    
    class ButtonWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ButtonStyle: UE.ButtonStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ButtonWidgetStyle;
        static Load(InName: string): ButtonWidgetStyle;
    
        __tid_ButtonWidgetStyle_0__: boolean;
    }
    
    class NumericProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NumericProperty;
        static Load(InName: string): NumericProperty;
    
        __tid_NumericProperty_0__: boolean;
    }
    
    class ByteProperty extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ByteProperty;
        static Load(InName: string): ByteProperty;
    
        __tid_ByteProperty_0__: boolean;
    }
    
    class ComponentReference {
        constructor();
        constructor(OtherActor: UE.Actor, ComponentProperty: string, PathToComponent: string);
        OtherActor: UE.Actor;
        ComponentProperty: string;
        PathToComponent: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentReference_0__: boolean;
    }
    
    class CableComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAttachStart: boolean;
        bAttachEnd: boolean;
        AttachEndTo: UE.ComponentReference;
        AttachEndToSocketName: string;
        EndLocation: UE.Vector;
        CableLength: number;
        NumSegments: number;
        SubstepTime: number;
        SolverIterations: number;
        bEnableStiffness: boolean;
        bUseSubstepping: boolean;
        bSkipCableUpdateWhenNotVisible: boolean;
        bSkipCableUpdateWhenNotOwnerRecentlyRendered: boolean;
        bEnableCollision: boolean;
        CollisionFriction: number;
        CableForce: UE.Vector;
        CableGravityScale: number;
        CableWidth: number;
        NumSides: number;
        TileMaterial: number;
        GetAttachedActor() : UE.Actor;
        GetAttachedComponent() : UE.SceneComponent;
        GetCableParticleLocations(Locations: $Ref<TArray<UE.Vector>>) : void;
        SetAttachEndTo(Actor: $Nullable<UE.Actor>, ComponentProperty: string, SocketName?: string /* = "None" */) : void;
        SetAttachEndToComponent(Component: $Nullable<UE.SceneComponent>, SocketName?: string /* = "None" */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CableComponent;
        static Load(InName: string): CableComponent;
    
        __tid_CableComponent_0__: boolean;
    }
    
    class CableActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CableComponent: UE.CableComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CableActor;
        static Load(InName: string): CableActor;
    
        __tid_CableActor_0__: boolean;
    }
    
    class CachedAnimAssetPlayerData {
        constructor();
        constructor(StateMachineName: string, StateName: string);
        StateMachineName: string;
        StateName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedAnimAssetPlayerData_0__: boolean;
    }
    
    class CachedAnimRelevancyData {
        constructor();
        constructor(StateMachineName: string, StateName: string);
        StateMachineName: string;
        StateName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedAnimRelevancyData_0__: boolean;
    }
    
    class CachedAnimStateData {
        constructor();
        constructor(StateMachineName: string, StateName: string);
        StateMachineName: string;
        StateName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedAnimStateData_0__: boolean;
    }
    
    class CachedAnimStateArray {
        constructor();
        constructor(States: TArray<UE.CachedAnimStateData>);
        States: TArray<UE.CachedAnimStateData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedAnimStateArray_0__: boolean;
    }
    
    class CachedAnimTransitionData {
        constructor();
        constructor(StateMachineName: string, FromStateName: string, ToStateName: string);
        StateMachineName: string;
        FromStateName: string;
        ToStateName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedAnimTransitionData_0__: boolean;
    }
    
    class CachedSubjectFrame {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CachedSubjectFrame_0__: boolean;
    }
    
    class TemplateSequence extends UE.MovieSceneSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MovieScene: UE.MovieScene;
        BoundActorClass: TSoftClassPtr<UE.Actor>;
        BoundPreviewActor: TSoftObjectPtr<UE.Actor>;
        BoundActorComponents: TMap<UE.Guid, string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequence;
        static Load(InName: string): TemplateSequence;
    
        __tid_TemplateSequence_0__: boolean;
    }
    
    class CameraAnimationSequence extends UE.TemplateSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraAnimationSequence;
        static Load(InName: string): CameraAnimationSequence;
    
        __tid_CameraAnimationSequence_0__: boolean;
    }
    
    class CameraAnimationSequenceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraAnimationSequenceFactoryNew;
        static Load(InName: string): CameraAnimationSequenceFactoryNew;
    
        __tid_CameraAnimationSequenceFactoryNew_0__: boolean;
    }
    
    class CameraAnimFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraAnimFactory;
        static Load(InName: string): CameraAnimFactory;
    
        __tid_CameraAnimFactory_0__: boolean;
    }
    
    class CameraBlockingVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraBlockingVolume;
        static Load(InName: string): CameraBlockingVolume;
    
        __tid_CameraBlockingVolume_0__: boolean;
    }
    
    class CameraExposureSettings {
        constructor();
        constructor(Method: UE.EAutoExposureMethod, LowPercent: number, HighPercent: number, MinBrightness: number, MaxBrightness: number, SpeedUp: number, SpeedDown: number, Bias: number, BiasCurve: UE.CurveFloat, MeterMask: UE.Texture, HistogramLogMin: number, HistogramLogMax: number, CalibrationConstant: number, ApplyPhysicalCameraExposure: boolean);
        Method: UE.EAutoExposureMethod;
        LowPercent: number;
        HighPercent: number;
        MinBrightness: number;
        MaxBrightness: number;
        SpeedUp: number;
        SpeedDown: number;
        Bias: number;
        BiasCurve: UE.CurveFloat;
        MeterMask: UE.Texture;
        HistogramLogMin: number;
        HistogramLogMax: number;
        CalibrationConstant: number;
        ApplyPhysicalCameraExposure: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraExposureSettings_0__: boolean;
    }
    
    class CameraFilmbackSettings {
        constructor();
        constructor(SensorWidth: number, SensorHeight: number, SensorAspectRatio: number);
        SensorWidth: number;
        SensorHeight: number;
        SensorAspectRatio: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraFilmbackSettings_0__: boolean;
    }
    
    enum ECameraFocusMethod { DoNotOverride, Manual, Tracking, Disable, MAX, __typeKeyDoNoAccess}
    class CameraTrackingFocusSettings {
        constructor();
        constructor(ActorToTrack: TSoftObjectPtr<UE.Actor>, RelativeOffset: UE.Vector, bDrawDebugTrackingFocusPoint: boolean);
        ActorToTrack: TSoftObjectPtr<UE.Actor>;
        RelativeOffset: UE.Vector;
        bDrawDebugTrackingFocusPoint: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraTrackingFocusSettings_0__: boolean;
    }
    
    class CameraFocusSettings {
        constructor();
        constructor(FocusMethod: UE.ECameraFocusMethod, ManualFocusDistance: number, TrackingFocusSettings: UE.CameraTrackingFocusSettings, bDrawDebugFocusPlane: boolean, DebugFocusPlaneColor: UE.Color, bSmoothFocusChanges: boolean, FocusSmoothingInterpSpeed: number, FocusOffset: number);
        FocusMethod: UE.ECameraFocusMethod;
        ManualFocusDistance: number;
        TrackingFocusSettings: UE.CameraTrackingFocusSettings;
        bDrawDebugFocusPlane: boolean;
        DebugFocusPlaneColor: UE.Color;
        bSmoothFocusChanges: boolean;
        FocusSmoothingInterpSpeed: number;
        FocusOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraFocusSettings_0__: boolean;
    }
    
    class CameraLensSettings {
        constructor();
        constructor(MinFocalLength: number, MaxFocalLength: number, MinFStop: number, MaxFStop: number, MinimumFocusDistance: number, DiaphragmBladeCount: number);
        MinFocalLength: number;
        MaxFocalLength: number;
        MinFStop: number;
        MaxFStop: number;
        MinimumFocusDistance: number;
        DiaphragmBladeCount: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraLensSettings_0__: boolean;
    }
    
    class CameraLookatTrackingSettings {
        constructor();
        constructor(bEnableLookAtTracking: boolean, bDrawDebugLookAtTrackingPosition: boolean, LookAtTrackingInterpSpeed: number, ActorToTrack: TSoftObjectPtr<UE.Actor>, RelativeOffset: UE.Vector, bAllowRoll: boolean);
        bEnableLookAtTracking: boolean;
        bDrawDebugLookAtTrackingPosition: boolean;
        LookAtTrackingInterpSpeed: number;
        ActorToTrack: TSoftObjectPtr<UE.Actor>;
        RelativeOffset: UE.Vector;
        bAllowRoll: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraLookatTrackingSettings_0__: boolean;
    }
    
    class CameraPreviewInfo {
        constructor();
        constructor(PawnClass: UE.Class, AnimSeq: UE.AnimSequence, Location: UE.Vector, Rotation: UE.Rotator, PawnInst: UE.Pawn);
        PawnClass: UE.Class;
        AnimSeq: UE.AnimSequence;
        Location: UE.Vector;
        Rotation: UE.Rotator;
        PawnInst: UE.Pawn;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraPreviewInfo_0__: boolean;
    }
    
    class CameraRig_Crane extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CranePitch: number;
        CraneYaw: number;
        CraneArmLength: number;
        bLockMountPitch: boolean;
        bLockMountYaw: boolean;
        TransformComponent: UE.SceneComponent;
        CraneYawControl: UE.SceneComponent;
        CranePitchControl: UE.SceneComponent;
        CraneCameraMount: UE.SceneComponent;
        PreviewMesh_CraneArm: UE.StaticMeshComponent;
        PreviewMesh_CraneBase: UE.StaticMeshComponent;
        PreviewMesh_CraneMount: UE.StaticMeshComponent;
        PreviewMesh_CraneCounterWeight: UE.StaticMeshComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraRig_Crane;
        static Load(InName: string): CameraRig_Crane;
    
        __tid_CameraRig_Crane_0__: boolean;
    }
    
    class InterpCurvePointQuat {
        constructor();
        constructor(InVal: number, OutVal: UE.Quat, ArriveTangent: UE.Quat, LeaveTangent: UE.Quat, InterpMode: UE.EInterpCurveMode);
        InVal: number;
        OutVal: UE.Quat;
        ArriveTangent: UE.Quat;
        LeaveTangent: UE.Quat;
        InterpMode: UE.EInterpCurveMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurvePointQuat_0__: boolean;
    }
    
    class InterpCurveQuat {
        constructor();
        constructor(Points: TArray<UE.InterpCurvePointQuat>, bIsLooped: boolean, LoopKeyOffset: number);
        Points: TArray<UE.InterpCurvePointQuat>;
        bIsLooped: boolean;
        LoopKeyOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurveQuat_0__: boolean;
    }
    
    class InterpCurvePointFloat {
        constructor();
        constructor(InVal: number, OutVal: number, ArriveTangent: number, LeaveTangent: number, InterpMode: UE.EInterpCurveMode);
        InVal: number;
        OutVal: number;
        ArriveTangent: number;
        LeaveTangent: number;
        InterpMode: UE.EInterpCurveMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurvePointFloat_0__: boolean;
    }
    
    class InterpCurveFloat {
        constructor();
        constructor(Points: TArray<UE.InterpCurvePointFloat>, bIsLooped: boolean, LoopKeyOffset: number);
        Points: TArray<UE.InterpCurvePointFloat>;
        bIsLooped: boolean;
        LoopKeyOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurveFloat_0__: boolean;
    }
    
    class SplineMetadata extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SplineMetadata;
        static Load(InName: string): SplineMetadata;
    
        __tid_SplineMetadata_0__: boolean;
    }
    
    class SplineCurves {
        constructor();
        constructor(Position: UE.InterpCurveVector, Rotation: UE.InterpCurveQuat, Scale: UE.InterpCurveVector, ReparamTable: UE.InterpCurveFloat, Metadata: UE.SplineMetadata, Version: number);
        Position: UE.InterpCurveVector;
        Rotation: UE.InterpCurveQuat;
        Scale: UE.InterpCurveVector;
        ReparamTable: UE.InterpCurveFloat;
        Metadata: UE.SplineMetadata;
        Version: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SplineCurves_0__: boolean;
    }
    
    enum ESplineCoordinateSpace { Local, World, ESplineCoordinateSpace_MAX, __typeKeyDoNoAccess}
    enum ESplinePointType { Linear, Curve, Constant, CurveClamped, CurveCustomTangent, ESplinePointType_MAX, __typeKeyDoNoAccess}
    class SplinePoint {
        constructor();
        constructor(InputKey: number, Position: UE.Vector, ArriveTangent: UE.Vector, LeaveTangent: UE.Vector, Rotation: UE.Rotator, Scale: UE.Vector, Type: UE.ESplinePointType);
        InputKey: number;
        Position: UE.Vector;
        ArriveTangent: UE.Vector;
        LeaveTangent: UE.Vector;
        Rotation: UE.Rotator;
        Scale: UE.Vector;
        Type: UE.ESplinePointType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SplinePoint_0__: boolean;
    }
    
    class SplineComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SplineCurves: UE.SplineCurves;
        SplineInfo: UE.InterpCurveVector;
        SplineRotInfo: UE.InterpCurveQuat;
        SplineScaleInfo: UE.InterpCurveVector;
        SplineReparamTable: UE.InterpCurveFloat;
        bAllowSplineEditingPerInstance: boolean;
        ReparamStepsPerSegment: number;
        Duration: number;
        bStationaryEndpoints: boolean;
        bSplineHasBeenEdited: boolean;
        bModifiedByConstructionScript: boolean;
        bInputSplinePointsToConstructionScript: boolean;
        bDrawDebug: boolean;
        bClosedLoop: boolean;
        bLoopPositionOverride: boolean;
        LoopPosition: number;
        DefaultUpVector: UE.Vector;
        EditorUnselectedSplineSegmentColor: UE.LinearColor;
        EditorSelectedSplineSegmentColor: UE.LinearColor;
        EditorTangentColor: UE.LinearColor;
        bAllowDiscontinuousSpline: boolean;
        bShouldVisualizeScale: boolean;
        ScaleVisualizationWidth: number;
        AddPoint(Point: UE.SplinePoint, bUpdateSpline?: boolean /* = true */) : void;
        AddPoints(Points: TArray<UE.SplinePoint>, bUpdateSpline?: boolean /* = true */) : void;
        AddSplineLocalPoint(Position: UE.Vector) : void;
        AddSplinePoint(Position: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        AddSplinePointAtIndex(Position: UE.Vector, Index: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        AddSplineWorldPoint(Position: UE.Vector) : void;
        ClearSplinePoints(bUpdateSpline?: boolean /* = true */) : void;
        FindDirectionClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        FindInputKeyClosestToWorldLocation(WorldLocation: UE.Vector) : number;
        FindLocationClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        FindRightVectorClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        FindRollClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : number;
        FindRotationClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Rotator;
        FindScaleClosestToWorldLocation(WorldLocation: UE.Vector) : UE.Vector;
        FindTangentClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        FindTransformClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace, bUseScale?: boolean /* = false */) : UE.Transform;
        FindUpVectorClosestToWorldLocation(WorldLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetArriveTangentAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetDefaultUpVector(CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetDirectionAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetDirectionAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetDirectionAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetDirectionAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetDistanceAlongSplineAtSplineInputKey(InKey: number) : number;
        GetDistanceAlongSplineAtSplinePoint(PointIndex: number) : number;
        GetFloatPropertyAtSplineInputKey(InKey: number, PropertyName: string) : number;
        GetFloatPropertyAtSplinePoint(Index: number, PropertyName: string) : number;
        GetInputKeyAtDistanceAlongSpline(Distance: number) : number;
        GetLeaveTangentAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetLocalLocationAndTangentAtSplinePoint(PointIndex: number, LocalLocation: $Ref<UE.Vector>, LocalTangent: $Ref<UE.Vector>) : void;
        GetLocationAndTangentAtSplinePoint(PointIndex: number, Location: $Ref<UE.Vector>, Tangent: $Ref<UE.Vector>, CoordinateSpace: UE.ESplineCoordinateSpace) : void;
        GetLocationAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetLocationAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetLocationAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetLocationAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetNumberOfSplinePoints() : number;
        GetNumberOfSplineSegments() : number;
        GetRightVectorAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetRightVectorAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetRightVectorAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetRightVectorAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetRollAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace) : number;
        GetRollAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace) : number;
        GetRollAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : number;
        GetRollAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */) : number;
        GetRotationAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Rotator;
        GetRotationAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Rotator;
        GetRotationAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Rotator;
        GetRotationAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */) : UE.Rotator;
        GetScaleAtDistanceAlongSpline(Distance: number) : UE.Vector;
        GetScaleAtSplineInputKey(InKey: number) : UE.Vector;
        GetScaleAtSplinePoint(PointIndex: number) : UE.Vector;
        GetScaleAtTime(Time: number, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetSplineLength() : number;
        GetSplinePointType(PointIndex: number) : UE.ESplinePointType;
        GetTangentAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetTangentAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetTangentAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetTangentAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetTransformAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseScale?: boolean /* = false */) : UE.Transform;
        GetTransformAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseScale?: boolean /* = false */) : UE.Transform;
        GetTransformAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseScale?: boolean /* = false */) : UE.Transform;
        GetTransformAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */, bUseScale?: boolean /* = false */) : UE.Transform;
        GetUpVectorAtDistanceAlongSpline(Distance: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetUpVectorAtSplineInputKey(InKey: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetUpVectorAtSplinePoint(PointIndex: number, CoordinateSpace: UE.ESplineCoordinateSpace) : UE.Vector;
        GetUpVectorAtTime(Time: number, CoordinateSpace: UE.ESplineCoordinateSpace, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetVectorPropertyAtSplineInputKey(InKey: number, PropertyName: string) : UE.Vector;
        GetVectorPropertyAtSplinePoint(Index: number, PropertyName: string) : UE.Vector;
        GetWorldDirectionAtDistanceAlongSpline(Distance: number) : UE.Vector;
        GetWorldDirectionAtTime(Time: number, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetWorldLocationAtDistanceAlongSpline(Distance: number) : UE.Vector;
        GetWorldLocationAtSplinePoint(PointIndex: number) : UE.Vector;
        GetWorldLocationAtTime(Time: number, bUseConstantVelocity?: boolean /* = false */) : UE.Vector;
        GetWorldRotationAtDistanceAlongSpline(Distance: number) : UE.Rotator;
        GetWorldRotationAtTime(Time: number, bUseConstantVelocity?: boolean /* = false */) : UE.Rotator;
        GetWorldTangentAtDistanceAlongSpline(Distance: number) : UE.Vector;
        IsClosedLoop() : boolean;
        RemoveSplinePoint(Index: number, bUpdateSpline?: boolean /* = true */) : void;
        SetClosedLoop(bInClosedLoop: boolean, bUpdateSpline?: boolean /* = true */) : void;
        SetClosedLoopAtPosition(bInClosedLoop: boolean, Key: number, bUpdateSpline?: boolean /* = true */) : void;
        SetDefaultUpVector(UpVector: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace) : void;
        SetDrawDebug(bShow: boolean) : void;
        SetLocationAtSplinePoint(PointIndex: number, InLocation: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        SetRotationAtSplinePoint(PointIndex: number, InRotation: UE.Rotator, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        SetScaleAtSplinePoint(PointIndex: number, InScaleVector: UE.Vector, bUpdateSpline?: boolean /* = true */) : void;
        SetSelectedSplineSegmentColor(SegmentColor: UE.LinearColor) : void;
        SetSplineLocalPoints(Points: TArray<UE.Vector>) : void;
        SetSplinePoints(Points: TArray<UE.Vector>, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        SetSplinePointType(PointIndex: number, Type: UE.ESplinePointType, bUpdateSpline?: boolean /* = true */) : void;
        SetSplineWorldPoints(Points: TArray<UE.Vector>) : void;
        SetTangentAtSplinePoint(PointIndex: number, InTangent: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        SetTangentColor(TangentColor: UE.LinearColor) : void;
        SetTangentsAtSplinePoint(PointIndex: number, InArriveTangent: UE.Vector, InLeaveTangent: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        SetUnselectedSplineSegmentColor(SegmentColor: UE.LinearColor) : void;
        SetUpVectorAtSplinePoint(PointIndex: number, InUpVector: UE.Vector, CoordinateSpace: UE.ESplineCoordinateSpace, bUpdateSpline?: boolean /* = true */) : void;
        SetWorldLocationAtSplinePoint(PointIndex: number, InLocation: UE.Vector) : void;
        UpdateSpline() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SplineComponent;
        static Load(InName: string): SplineComponent;
    
        __tid_SplineComponent_0__: boolean;
    }
    
    class SplineMeshParams {
        constructor();
        constructor(StartPos: UE.Vector, StartTangent: UE.Vector, StartScale: UE.Vector2D, StartRoll: number, StartOffset: UE.Vector2D, EndPos: UE.Vector, EndScale: UE.Vector2D, EndTangent: UE.Vector, EndRoll: number, EndOffset: UE.Vector2D);
        StartPos: UE.Vector;
        StartTangent: UE.Vector;
        StartScale: UE.Vector2D;
        StartRoll: number;
        StartOffset: UE.Vector2D;
        EndPos: UE.Vector;
        EndScale: UE.Vector2D;
        EndTangent: UE.Vector;
        EndRoll: number;
        EndOffset: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SplineMeshParams_0__: boolean;
    }
    
    enum ESplineMeshAxis { X, Y, Z, ESplineMeshAxis_MAX, __typeKeyDoNoAccess}
    class SplineMeshComponent extends UE.StaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SplineParams: UE.SplineMeshParams;
        SplineUpDir: UE.Vector;
        SplineBoundaryMin: number;
        CachedMeshBodySetupGuid: UE.Guid;
        BodySetup: UE.BodySetup;
        SplineBoundaryMax: number;
        bAllowSplineEditingPerInstance: boolean;
        bSmoothInterpRollScale: boolean;
        bMeshDirty: boolean;
        ForwardAxis: UE.ESplineMeshAxis;
        VirtualTextureMainPassMaxDrawDistance: number;
        bSelected: boolean;
        GetBoundaryMax() : number;
        GetBoundaryMin() : number;
        GetEndOffset() : UE.Vector2D;
        GetEndPosition() : UE.Vector;
        GetEndRoll() : number;
        GetEndScale() : UE.Vector2D;
        GetEndTangent() : UE.Vector;
        GetForwardAxis() : UE.ESplineMeshAxis;
        GetSplineUpDir() : UE.Vector;
        GetStartOffset() : UE.Vector2D;
        GetStartPosition() : UE.Vector;
        GetStartRoll() : number;
        GetStartScale() : UE.Vector2D;
        GetStartTangent() : UE.Vector;
        SetBoundaryMax(InBoundaryMax: number, bUpdateMesh?: boolean /* = true */) : void;
        SetBoundaryMin(InBoundaryMin: number, bUpdateMesh?: boolean /* = true */) : void;
        SetEndOffset(EndOffset: UE.Vector2D, bUpdateMesh?: boolean /* = true */) : void;
        SetEndPosition(EndPos: UE.Vector, bUpdateMesh?: boolean /* = true */) : void;
        SetEndRoll(EndRoll: number, bUpdateMesh?: boolean /* = true */) : void;
        SetEndScale(EndScale?: UE.Vector2D /* = (X=1.000,Y=1.000) */, bUpdateMesh?: boolean /* = true */) : void;
        SetEndTangent(EndTangent: UE.Vector, bUpdateMesh?: boolean /* = true */) : void;
        SetForwardAxis(InForwardAxis: UE.ESplineMeshAxis, bUpdateMesh?: boolean /* = true */) : void;
        SetSplineUpDir(InSplineUpDir: UE.Vector, bUpdateMesh?: boolean /* = true */) : void;
        SetStartAndEnd(StartPos: UE.Vector, StartTangent: UE.Vector, EndPos: UE.Vector, EndTangent: UE.Vector, bUpdateMesh?: boolean /* = true */) : void;
        SetStartOffset(StartOffset: UE.Vector2D, bUpdateMesh?: boolean /* = true */) : void;
        SetStartPosition(StartPos: UE.Vector, bUpdateMesh?: boolean /* = true */) : void;
        SetStartRoll(StartRoll: number, bUpdateMesh?: boolean /* = true */) : void;
        SetStartScale(StartScale?: UE.Vector2D /* = (X=1.000,Y=1.000) */, bUpdateMesh?: boolean /* = true */) : void;
        SetStartTangent(StartTangent: UE.Vector, bUpdateMesh?: boolean /* = true */) : void;
        UpdateMesh() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SplineMeshComponent;
        static Load(InName: string): SplineMeshComponent;
    
        __tid_SplineMeshComponent_0__: boolean;
    }
    
    class CameraRig_Rail extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurrentPositionOnRail: number;
        bLockOrientationToRail: boolean;
        bShowRailVisualization: boolean;
        PreviewMeshScale: number;
        TransformComponent: UE.SceneComponent;
        RailSplineComponent: UE.SplineComponent;
        RailCameraMount: UE.SceneComponent;
        PreviewMesh_Rail: UE.SplineMeshComponent;
        PreviewRailMeshSegments: TArray<UE.SplineMeshComponent>;
        PreviewRailStaticMesh: UE.StaticMesh;
        PreviewMesh_Mount: UE.StaticMeshComponent;
        GetRailSplineComponent() : UE.SplineComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraRig_Rail;
        static Load(InName: string): CameraRig_Rail;
    
        __tid_CameraRig_Rail_0__: boolean;
    }
    
    enum ECameraShakeDurationType { Fixed, Infinite, Custom, ECameraShakeDurationType_MAX, __typeKeyDoNoAccess}
    class CameraShakeDuration {
        constructor();
        constructor(Duration: number, Type: UE.ECameraShakeDurationType);
        Duration: number;
        Type: UE.ECameraShakeDurationType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraShakeDuration_0__: boolean;
    }
    
    class CameraShakeInfo {
        constructor();
        constructor(Duration: UE.CameraShakeDuration, BlendIn: number, BlendOut: number);
        Duration: UE.CameraShakeDuration;
        BlendIn: number;
        BlendOut: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraShakeInfo_0__: boolean;
    }
    
    class CameraShakeSourceActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraShakeSourceComponent: UE.CameraShakeSourceComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CameraShakeSourceActor;
        static Load(InName: string): CameraShakeSourceActor;
    
        __tid_CameraShakeSourceActor_0__: boolean;
    }
    
    class CameraShakeUpdateParams {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraShakeUpdateParams_0__: boolean;
    }
    
    class CameraShakeUpdateResult {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CameraShakeUpdateResult_0__: boolean;
    }
    
    class CanvasIcon {
        constructor();
        constructor(Texture: UE.Texture, U: number, V: number, UL: number, VL: number);
        Texture: UE.Texture;
        U: number;
        V: number;
        UL: number;
        VL: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CanvasIcon_0__: boolean;
    }
    
    class CanvasPanelSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LayoutData: UE.AnchorData;
        bAutoSize: boolean;
        ZOrder: number;
        GetAlignment() : UE.Vector2D;
        GetAnchors() : UE.Anchors;
        GetAutoSize() : boolean;
        GetLayout() : UE.AnchorData;
        GetOffsets() : UE.Margin;
        GetPosition() : UE.Vector2D;
        GetSize() : UE.Vector2D;
        GetZOrder() : number;
        SetAlignment(InAlignment: UE.Vector2D) : void;
        SetAnchors(InAnchors: UE.Anchors) : void;
        SetAutoSize(InbAutoSize: boolean) : void;
        SetLayout(InLayoutData: UE.AnchorData) : void;
        SetMaximum(InMaximumAnchors: UE.Vector2D) : void;
        SetMinimum(InMinimumAnchors: UE.Vector2D) : void;
        SetOffsets(InOffset: UE.Margin) : void;
        SetPosition(InPosition: UE.Vector2D) : void;
        SetSize(InSize: UE.Vector2D) : void;
        SetZOrder(InZOrder: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CanvasPanelSlot;
        static Load(InName: string): CanvasPanelSlot;
    
        __tid_CanvasPanelSlot_0__: boolean;
    }
    
    class CanvasPanel extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddChildToCanvas(Content: $Nullable<UE.Widget>) : UE.CanvasPanelSlot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CanvasPanel;
        static Load(InName: string): CanvasPanel;
    
        __tid_CanvasPanel_0__: boolean;
    }
    
    enum ETextureRenderTargetFormat { RTF_R8, RTF_RG8, RTF_RGBA8, RTF_RGBA8_SRGB, RTF_R16f, RTF_RG16f, RTF_RGBA16f, RTF_R32f, RTF_RG32f, RTF_RGBA32f, RTF_RGB10A2, RTF_MAX, __typeKeyDoNoAccess}
    class TextureRenderTarget2D extends UE.TextureRenderTarget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SizeX: number;
        SizeY: number;
        ClearColor: UE.LinearColor;
        AddressX: UE.TextureAddress;
        AddressY: UE.TextureAddress;
        bForceLinearGamma: boolean;
        bHDR: boolean;
        bGPUSharedFlag: boolean;
        RenderTargetFormat: UE.ETextureRenderTargetFormat;
        bAutoGenerateMips: boolean;
        MipsSamplerFilter: UE.TextureFilter;
        MipsAddressU: UE.TextureAddress;
        MipsAddressV: UE.TextureAddress;
        OverrideFormat: UE.EPixelFormat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTarget2D;
        static Load(InName: string): TextureRenderTarget2D;
    
        __tid_TextureRenderTarget2D_0__: boolean;
    }
    
    class CanvasRenderTarget2D extends UE.TextureRenderTarget2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnCanvasRenderTargetUpdate: $MulticastDelegate<(Canvas: $Nullable<UE.Canvas>, Width: number, Height: number) => void>;
        World: TWeakObjectPtr<UE.World>;
        bShouldClearRenderTargetOnReceiveUpdate: boolean;
        GetSize(Width: $Ref<number>, Height: $Ref<number>) : void;
        ReceiveUpdate(Canvas: $Nullable<UE.Canvas>, Width: number, Height: number) : void;
        UpdateResource() : void;
        static CreateCanvasRenderTarget2D(WorldContextObject: $Nullable<UE.Object>, CanvasRenderTarget2DClass: $Nullable<UE.Class>, Width?: number /* = 1024 */, Height?: number /* = 1024 */) : UE.CanvasRenderTarget2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CanvasRenderTarget2D;
        static Load(InName: string): CanvasRenderTarget2D;
    
        __tid_CanvasRenderTarget2D_0__: boolean;
    }
    
    class CanvasRenderTarget2DFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Height: number;
        Format: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CanvasRenderTarget2DFactoryNew;
        static Load(InName: string): CanvasRenderTarget2DFactoryNew;
    
        __tid_CanvasRenderTarget2DFactoryNew_0__: boolean;
    }
    
    class CapturedPixels {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CapturedPixels_0__: boolean;
    }
    
    class CapturedPixelsID {
        constructor();
        constructor(Identifiers: TMap<string, string>);
        Identifiers: TMap<string, string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CapturedPixelsID_0__: boolean;
    }
    
    class CapturedPropSegment {
        constructor();
        constructor(PropertyName: string, PropertyIndex: number, ComponentName: string);
        PropertyName: string;
        PropertyIndex: number;
        ComponentName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CapturedPropSegment_0__: boolean;
    }
    
    class CaptureLostEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CaptureLostEvent_0__: boolean;
    }
    
    class CascadeOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShowModuleDump: boolean;
        BackgroundColor: UE.Color;
        bUseSubMenus: boolean;
        bUseSpaceBarReset: boolean;
        bUseSpaceBarResetInLevel: boolean;
        Empty_Background: UE.Color;
        Emitter_Background: UE.Color;
        Emitter_Unselected: UE.Color;
        Emitter_Selected: UE.Color;
        ModuleColor_General_Unselected: UE.Color;
        ModuleColor_General_Selected: UE.Color;
        ModuleColor_TypeData_Unselected: UE.Color;
        ModuleColor_TypeData_Selected: UE.Color;
        ModuleColor_Beam_Unselected: UE.Color;
        ModuleColor_Beam_Selected: UE.Color;
        ModuleColor_Trail_Unselected: UE.Color;
        ModuleColor_Trail_Selected: UE.Color;
        ModuleColor_Spawn_Unselected: UE.Color;
        ModuleColor_Spawn_Selected: UE.Color;
        ModuleColor_Light_Unselected: UE.Color;
        ModuleColor_Light_Selected: UE.Color;
        ModuleColor_SubUV_Unselected: UE.Color;
        ModuleColor_SubUV_Selected: UE.Color;
        ModuleColor_Required_Unselected: UE.Color;
        ModuleColor_Required_Selected: UE.Color;
        ModuleColor_Event_Unselected: UE.Color;
        ModuleColor_Event_Selected: UE.Color;
        bShowGrid: boolean;
        GridColor_Hi: UE.Color;
        GridColor_Low: UE.Color;
        GridPerspectiveSize: number;
        bShowParticleCounts: boolean;
        bShowParticleEvents: boolean;
        bShowParticleTimes: boolean;
        bShowParticleDistance: boolean;
        bShowParticleMemory: boolean;
        ParticleMemoryUpdateTime: number;
        bShowFloor: boolean;
        FloorMesh: string;
        FloorPosition: UE.Vector;
        FloorRotation: UE.Rotator;
        FloorScale: number;
        FloorScale3D: UE.Vector;
        ShowPPFlags: number;
        bUseSlimCascadeDraw: boolean;
        SlimCascadeDrawHeight: number;
        bCenterCascadeModuleText: boolean;
        Cascade_MouseMoveThreshold: number;
        MotionModeRadius: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CascadeOptions;
        static Load(InName: string): CascadeOptions;
    
        __tid_CascadeOptions_0__: boolean;
    }
    
    class CategoryFilter {
        constructor();
        constructor(CategoryName: string, LogVerbosity: number, Enabled: boolean);
        CategoryName: string;
        LogVerbosity: number;
        Enabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CategoryFilter_0__: boolean;
    }
    
    class CCDIKChainLink {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CCDIKChainLink_0__: boolean;
    }
    
    class VertexIndexAndInstanceID {
        constructor();
        constructor(ContourIndex: number, VertexInstanceID: UE.VertexInstanceID);
        ContourIndex: number;
        VertexInstanceID: UE.VertexInstanceID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexIndexAndInstanceID_0__: boolean;
    }
    
    class VertexInstancesForPolygonHole {
        constructor();
        constructor(VertexIndicesAndInstanceIDs: TArray<UE.VertexIndexAndInstanceID>);
        VertexIndicesAndInstanceIDs: TArray<UE.VertexIndexAndInstanceID>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexInstancesForPolygonHole_0__: boolean;
    }
    
    class ChangeVertexInstancesForPolygon {
        constructor();
        constructor(PolygonID: UE.PolygonID, PerimeterVertexIndicesAndInstanceIDs: TArray<UE.VertexIndexAndInstanceID>, VertexIndicesAndInstanceIDsForEachHole: TArray<UE.VertexInstancesForPolygonHole>);
        PolygonID: UE.PolygonID;
        PerimeterVertexIndicesAndInstanceIDs: TArray<UE.VertexIndexAndInstanceID>;
        VertexIndicesAndInstanceIDsForEachHole: TArray<UE.VertexInstancesForPolygonHole>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChangeVertexInstancesForPolygon_0__: boolean;
    }
    
    class ChaosBreakEvent {
        constructor();
        constructor(Component: UE.PrimitiveComponent, Location: UE.Vector, Velocity: UE.Vector, AngularVelocity: UE.Vector, Mass: number);
        Component: UE.PrimitiveComponent;
        Location: UE.Vector;
        Velocity: UE.Vector;
        AngularVelocity: UE.Vector;
        Mass: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosBreakEvent_0__: boolean;
    }
    
    class ChaosBreakingEventData {
        constructor();
        constructor(Location: UE.Vector, Velocity: UE.Vector, Mass: number);
        Location: UE.Vector;
        Velocity: UE.Vector;
        Mass: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosBreakingEventData_0__: boolean;
    }
    
    enum EChaosBreakingSortMethod { SortNone, SortByHighestMass, SortByHighestSpeed, SortByNearestFirst, Count, EChaosBreakingSortMethod_MAX, __typeKeyDoNoAccess}
    class ChaosBreakingEventRequestSettings {
        constructor();
        constructor(MaxNumberOfResults: number, MinRadius: number, MinSpeed: number, MinMass: number, MaxDistance: number, SortMethod: UE.EChaosBreakingSortMethod);
        MaxNumberOfResults: number;
        MinRadius: number;
        MinSpeed: number;
        MinMass: number;
        MaxDistance: number;
        SortMethod: UE.EChaosBreakingSortMethod;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosBreakingEventRequestSettings_0__: boolean;
    }
    
    class ClothConfigBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothConfigBase;
        static Load(InName: string): ClothConfigBase;
    
        __tid_ClothConfigBase_0__: boolean;
    }
    
    class ClothConfigCommon extends UE.ClothConfigBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothConfigCommon;
        static Load(InName: string): ClothConfigCommon;
    
        __tid_ClothConfigCommon_0__: boolean;
    }
    
    enum EChaosClothTetherMode { FastTetherFastLength, AccurateTetherFastLength, AccurateTetherAccurateLength, MaxChaosClothTetherMode, EChaosClothTetherMode_MAX, __typeKeyDoNoAccess}
    class ChaosClothConfig extends UE.ClothConfigCommon {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MassMode: UE.EClothMassMode;
        UniformMass: number;
        TotalMass: number;
        Density: number;
        MinPerParticleMass: number;
        EdgeStiffness: number;
        BendingStiffness: number;
        bUseBendingElements: boolean;
        AreaStiffness: number;
        VolumeStiffness: number;
        StrainLimitingStiffness: number;
        LimitScale: number;
        TetherMode: UE.EChaosClothTetherMode;
        bUseGeodesicDistance: boolean;
        ShapeTargetStiffness: number;
        CollisionThickness: number;
        FrictionCoefficient: number;
        bUseSelfCollisions: boolean;
        SelfCollisionThickness: number;
        bUseLegacyBackstop: boolean;
        DampingCoefficient: number;
        bUsePointBasedWindModel: boolean;
        DragCoefficient: number;
        LiftCoefficient: number;
        bUseGravityOverride: boolean;
        GravityScale: number;
        Gravity: UE.Vector;
        AnimDriveSpringStiffness: number;
        LinearVelocityScale: UE.Vector;
        AngularVelocityScale: number;
        bUseTetrahedralConstraints: boolean;
        bUseThinShellVolumeConstraints: boolean;
        bUseContinuousCollisionDetection: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosClothConfig;
        static Load(InName: string): ChaosClothConfig;
    
        __tid_ChaosClothConfig_0__: boolean;
    }
    
    class ClothingSimulationFactory extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingSimulationFactory;
        static Load(InName: string): ClothingSimulationFactory;
    
        __tid_ClothingSimulationFactory_0__: boolean;
    }
    
    class ChaosClothingSimulationFactory extends UE.ClothingSimulationFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosClothingSimulationFactory;
        static Load(InName: string): ChaosClothingSimulationFactory;
    
        __tid_ChaosClothingSimulationFactory_0__: boolean;
    }
    
    class ChaosClothingSimulationInteractor extends UE.ClothingSimulationInteractor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosClothingSimulationInteractor;
        static Load(InName: string): ChaosClothingSimulationInteractor;
    
        __tid_ChaosClothingSimulationInteractor_0__: boolean;
    }
    
    class ClothSharedConfigCommon extends UE.ClothConfigCommon {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothSharedConfigCommon;
        static Load(InName: string): ClothSharedConfigCommon;
    
        __tid_ClothSharedConfigCommon_0__: boolean;
    }
    
    class ChaosClothSharedSimConfig extends UE.ClothSharedConfigCommon {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IterationCount: number;
        SubdivisionCount: number;
        SelfCollisionThickness: number;
        CollisionThickness: number;
        bUseDampingOverride: boolean;
        Damping: number;
        bUseGravityOverride: boolean;
        GravityScale: number;
        Gravity: UE.Vector;
        bUseLocalSpaceSimulation: boolean;
        bUseXPBDConstraints: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosClothSharedSimConfig;
        static Load(InName: string): ChaosClothSharedSimConfig;
    
        __tid_ChaosClothSharedSimConfig_0__: boolean;
    }
    
    class ChaosCollisionEventData {
        constructor();
        constructor(Location: UE.Vector, Normal: UE.Vector, Velocity1: UE.Vector, Velocity2: UE.Vector, Mass1: number, Mass2: number, Impulse: UE.Vector);
        Location: UE.Vector;
        Normal: UE.Vector;
        Velocity1: UE.Vector;
        Velocity2: UE.Vector;
        Mass1: number;
        Mass2: number;
        Impulse: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosCollisionEventData_0__: boolean;
    }
    
    enum EChaosCollisionSortMethod { SortNone, SortByHighestMass, SortByHighestSpeed, SortByHighestImpulse, SortByNearestFirst, Count, EChaosCollisionSortMethod_MAX, __typeKeyDoNoAccess}
    class ChaosCollisionEventRequestSettings {
        constructor();
        constructor(MaxNumberResults: number, MinMass: number, MinSpeed: number, MinImpulse: number, MaxDistance: number, SortMethod: UE.EChaosCollisionSortMethod);
        MaxNumberResults: number;
        MinMass: number;
        MinSpeed: number;
        MinImpulse: number;
        MaxDistance: number;
        SortMethod: UE.EChaosCollisionSortMethod;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosCollisionEventRequestSettings_0__: boolean;
    }
    
    class ChaosDebugDrawComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosDebugDrawComponent;
        static Load(InName: string): ChaosDebugDrawComponent;
    
        __tid_ChaosDebugDrawComponent_0__: boolean;
    }
    
    class ChaosDebugSubstepControl {
        constructor();
        constructor(bPause: boolean, bSubstep: boolean, bStep: boolean);
        bPause: boolean;
        bSubstep: boolean;
        bStep: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosDebugSubstepControl_0__: boolean;
    }
    
    class ChaosDestructionEvent {
        constructor();
        constructor(Position: UE.Vector, Normal: UE.Vector, Velocity: UE.Vector, AngularVelocity: UE.Vector, ExtentMin: number, ExtentMax: number, ParticleID: number, Time: number, Type: number);
        Position: UE.Vector;
        Normal: UE.Vector;
        Velocity: UE.Vector;
        AngularVelocity: UE.Vector;
        ExtentMin: number;
        ExtentMax: number;
        ParticleID: number;
        Time: number;
        Type: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosDestructionEvent_0__: boolean;
    }
    
    enum EChaosTrailingSortMethod { SortNone, SortByHighestMass, SortByHighestSpeed, SortByNearestFirst, Count, EChaosTrailingSortMethod_MAX, __typeKeyDoNoAccess}
    class ChaosTrailingEventRequestSettings {
        constructor();
        constructor(MaxNumberOfResults: number, MinMass: number, MinSpeed: number, MinAngularSpeed: number, MaxDistance: number, SortMethod: UE.EChaosTrailingSortMethod);
        MaxNumberOfResults: number;
        MinMass: number;
        MinSpeed: number;
        MinAngularSpeed: number;
        MaxDistance: number;
        SortMethod: UE.EChaosTrailingSortMethod;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosTrailingEventRequestSettings_0__: boolean;
    }
    
    enum EClusterUnionMethod { PointImplicit, DelaunayTriangulation, MinimalSpanningSubsetDelaunayTriangulation, PointImplicitAugmentedWithMinimalDelaunay, None, EClusterUnionMethod_MAX, __typeKeyDoNoAccess}
    class SolverCollisionFilterSettings {
        constructor();
        constructor(FilterEnabled: boolean, MinMass: number, MinSpeed: number, MinImpulse: number);
        FilterEnabled: boolean;
        MinMass: number;
        MinSpeed: number;
        MinImpulse: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SolverCollisionFilterSettings_0__: boolean;
    }
    
    class SolverBreakingFilterSettings {
        constructor();
        constructor(FilterEnabled: boolean, MinMass: number, MinSpeed: number, MinVolume: number);
        FilterEnabled: boolean;
        MinMass: number;
        MinSpeed: number;
        MinVolume: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SolverBreakingFilterSettings_0__: boolean;
    }
    
    class SolverTrailingFilterSettings {
        constructor();
        constructor(FilterEnabled: boolean, MinMass: number, MinSpeed: number, MinVolume: number);
        FilterEnabled: boolean;
        MinMass: number;
        MinSpeed: number;
        MinVolume: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SolverTrailingFilterSettings_0__: boolean;
    }
    
    class ChaosSolverConfiguration {
        constructor();
        constructor(Iterations: number, CollisionPairIterations: number, PushOutIterations: number, CollisionPushOutPairIterations: number, CollisionMarginFraction: number, CollisionMarginMax: number, CollisionCullDistance: number, JointPairIterations: number, JointPushOutPairIterations: number, ClusterConnectionFactor: number, ClusterUnionConnectionType: UE.EClusterUnionMethod, bGenerateCollisionData: boolean, CollisionFilterSettings: UE.SolverCollisionFilterSettings, bGenerateBreakData: boolean, BreakingFilterSettings: UE.SolverBreakingFilterSettings, bGenerateTrailingData: boolean, TrailingFilterSettings: UE.SolverTrailingFilterSettings, bGenerateContactGraph: boolean);
        Iterations: number;
        CollisionPairIterations: number;
        PushOutIterations: number;
        CollisionPushOutPairIterations: number;
        CollisionMarginFraction: number;
        CollisionMarginMax: number;
        CollisionCullDistance: number;
        JointPairIterations: number;
        JointPushOutPairIterations: number;
        ClusterConnectionFactor: number;
        ClusterUnionConnectionType: UE.EClusterUnionMethod;
        bGenerateCollisionData: boolean;
        CollisionFilterSettings: UE.SolverCollisionFilterSettings;
        bGenerateBreakData: boolean;
        BreakingFilterSettings: UE.SolverBreakingFilterSettings;
        bGenerateTrailingData: boolean;
        TrailingFilterSettings: UE.SolverTrailingFilterSettings;
        bGenerateContactGraph: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosSolverConfiguration_0__: boolean;
    }
    
    enum EClusterConnectionTypeEnum { Chaos_PointImplicit, Chaos_DelaunayTriangulation, Chaos_MinimalSpanningSubsetDelaunayTriangulation, Chaos_PointImplicitAugmentedWithMinimalDelaunay, Chaos_None, Chaos_EClsuterCreationParameters_Max, Chaos_MAX, __typeKeyDoNoAccess}
    class ChaosEventListenerComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosEventListenerComponent;
        static Load(InName: string): ChaosEventListenerComponent;
    
        __tid_ChaosEventListenerComponent_0__: boolean;
    }
    
    class ChaosHandlerSet {
        constructor();
        constructor(ChaosHandlers: TSet<UE.Object>);
        ChaosHandlers: TSet<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosHandlerSet_0__: boolean;
    }
    
    class ChaosGameplayEventDispatcher extends UE.ChaosEventListenerComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CollisionEventRegistrations: TMap<UE.PrimitiveComponent, UE.ChaosHandlerSet>;
        BreakEventRegistrations: TMap<UE.PrimitiveComponent, UE.BreakEventCallbackWrapper>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosGameplayEventDispatcher;
        static Load(InName: string): ChaosGameplayEventDispatcher;
    
        __tid_ChaosGameplayEventDispatcher_0__: boolean;
    }
    
    class ChaosSolverActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Properties: UE.ChaosSolverConfiguration;
        TimeStepMultiplier: number;
        CollisionIterations: number;
        PushOutIterations: number;
        PushOutPairIterations: number;
        ClusterConnectionFactor: number;
        ClusterUnionConnectionType: UE.EClusterConnectionTypeEnum;
        DoGenerateCollisionData: boolean;
        CollisionFilterSettings: UE.SolverCollisionFilterSettings;
        DoGenerateBreakingData: boolean;
        BreakingFilterSettings: UE.SolverBreakingFilterSettings;
        DoGenerateTrailingData: boolean;
        TrailingFilterSettings: UE.SolverTrailingFilterSettings;
        MassScale: number;
        bGenerateContactGraph: boolean;
        bHasFloor: boolean;
        FloorHeight: number;
        ChaosDebugSubstepControl: UE.ChaosDebugSubstepControl;
        SpriteComponent: UE.BillboardComponent;
        GameplayEventDispatcherComponent: UE.ChaosGameplayEventDispatcher;
        SetAsCurrentWorldSolver() : void;
        SetSolverActive(bActive: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosSolverActor;
        static Load(InName: string): ChaosSolverActor;
    
        __tid_ChaosSolverActor_0__: boolean;
    }
    
    class GeometryCollectionSource {
        constructor();
        constructor(SourceGeometryObject: UE.SoftObjectPath, LocalTransform: UE.Transform, SourceMaterial: TArray<UE.MaterialInterface>);
        SourceGeometryObject: UE.SoftObjectPath;
        LocalTransform: UE.Transform;
        SourceMaterial: TArray<UE.MaterialInterface>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCollectionSource_0__: boolean;
    }
    
    enum ECollisionTypeEnum { Chaos_Volumetric, Chaos_Surface_Volumetric, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    enum EImplicitTypeEnum { Chaos_Implicit_Box, Chaos_Implicit_Sphere, Chaos_Implicit_Capsule, Chaos_Implicit_LevelSet, Chaos_Implicit_None, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    class GeometryCollectionSizeSpecificData {
        constructor();
        constructor(MaxSize: number, CollisionType: UE.ECollisionTypeEnum, ImplicitType: UE.EImplicitTypeEnum, MinLevelSetResolution: number, MaxLevelSetResolution: number, MinClusterLevelSetResolution: number, MaxClusterLevelSetResolution: number, CollisionObjectReductionPercentage: number, CollisionParticlesFraction: number, MaximumCollisionParticles: number);
        MaxSize: number;
        CollisionType: UE.ECollisionTypeEnum;
        ImplicitType: UE.EImplicitTypeEnum;
        MinLevelSetResolution: number;
        MaxLevelSetResolution: number;
        MinClusterLevelSetResolution: number;
        MaxClusterLevelSetResolution: number;
        CollisionObjectReductionPercentage: number;
        CollisionParticlesFraction: number;
        MaximumCollisionParticles: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCollectionSizeSpecificData_0__: boolean;
    }
    
    class GeometryCollection extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeometrySource: TArray<UE.GeometryCollectionSource>;
        Materials: TArray<UE.MaterialInterface>;
        CollisionType: UE.ECollisionTypeEnum;
        ImplicitType: UE.EImplicitTypeEnum;
        MinLevelSetResolution: number;
        MaxLevelSetResolution: number;
        MinClusterLevelSetResolution: number;
        MaxClusterLevelSetResolution: number;
        CollisionObjectReductionPercentage: number;
        bMassAsDensity: boolean;
        Mass: number;
        MinimumMassClamp: number;
        CollisionParticlesFraction: number;
        MaximumCollisionParticles: number;
        SizeSpecificData: TArray<UE.GeometryCollectionSizeSpecificData>;
        EnableRemovePiecesOnFracture: boolean;
        RemoveOnFractureMaterials: TArray<UE.MaterialInterface>;
        ThumbnailInfo: UE.ThumbnailInfo;
        PersistentGuid: UE.Guid;
        StateGuid: UE.Guid;
        BoneSelectedMaterialIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollection;
        static Load(InName: string): GeometryCollection;
    
        __tid_GeometryCollection_0__: boolean;
    }
    
    class FieldSystem extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldSystem;
        static Load(InName: string): FieldSystem;
    
        __tid_FieldSystem_0__: boolean;
    }
    
    enum EFieldPhysicsType { Field_None, Field_DynamicState, Field_LinearForce, Field_ExternalClusterStrain, Field_Kill, Field_LinearVelocity, Field_AngularVelociy, Field_AngularTorque, Field_InternalClusterStrain, Field_DisableThreshold, Field_SleepingThreshold, Field_PositionStatic, Field_PositionAnimated, Field_PositionTarget, Field_DynamicConstraint, Field_CollisionGroup, Field_ActivateDisabled, Field_PhysicsType_Max, __typeKeyDoNoAccess}
    class FieldSystemMetaData extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldSystemMetaData;
        static Load(InName: string): FieldSystemMetaData;
    
        __tid_FieldSystemMetaData_0__: boolean;
    }
    
    class FieldSystemComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FieldSystem: UE.FieldSystem;
        SupportedSolvers: TArray<TSoftObjectPtr<UE.ChaosSolverActor>>;
        AddFieldCommand(Enabled: boolean, Target: UE.EFieldPhysicsType, MetaData: $Nullable<UE.FieldSystemMetaData>, Field: $Nullable<UE.FieldNodeBase>) : void;
        ApplyLinearForce(Enabled: boolean, Direction: UE.Vector, Magnitude: number) : void;
        ApplyPhysicsField(Enabled: boolean, Target: UE.EFieldPhysicsType, MetaData: $Nullable<UE.FieldSystemMetaData>, Field: $Nullable<UE.FieldNodeBase>) : void;
        ApplyRadialForce(Enabled: boolean, Position: UE.Vector, Magnitude: number) : void;
        ApplyRadialVectorFalloffForce(Enabled: boolean, Position: UE.Vector, Radius: number, Magnitude: number) : void;
        ApplyStayDynamicField(Enabled: boolean, Position: UE.Vector, Radius: number) : void;
        ApplyStrainField(Enabled: boolean, Position: UE.Vector, Radius: number, Magnitude: number, Iterations: number) : void;
        ApplyUniformVectorFalloffForce(Enabled: boolean, Position: UE.Vector, Direction: UE.Vector, Radius: number, Magnitude: number) : void;
        ResetFieldSystem() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldSystemComponent;
        static Load(InName: string): FieldSystemComponent;
    
        __tid_FieldSystemComponent_0__: boolean;
    }
    
    class FieldSystemActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FieldSystemComponent: UE.FieldSystemComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldSystemActor;
        static Load(InName: string): FieldSystemActor;
    
        __tid_FieldSystemActor_0__: boolean;
    }
    
    enum EObjectStateTypeEnum { Chaos_NONE, Chaos_Object_Sleeping, Chaos_Object_Kinematic, Chaos_Object_Static, Chaos_Object_Dynamic, Chaos_Object_UserDefined, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    class ChaosPhysicalMaterial extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Friction: number;
        StaticFriction: number;
        Restitution: number;
        LinearEtherDrag: number;
        AngularEtherDrag: number;
        SleepingLinearVelocityThreshold: number;
        SleepingAngularVelocityThreshold: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosPhysicalMaterial;
        static Load(InName: string): ChaosPhysicalMaterial;
    
        __tid_ChaosPhysicalMaterial_0__: boolean;
    }
    
    enum EInitialVelocityTypeEnum { Chaos_Initial_Velocity_User_Defined, Chaos_Initial_Velocity_None, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    enum EGeometryCollectionCacheType { None, Record, Play, RecordAndPlay, EGeometryCollectionCacheType_MAX, __typeKeyDoNoAccess}
    class SolverCollisionData {
        constructor();
        constructor(Location: UE.Vector, AccumulatedImpulse: UE.Vector, Normal: UE.Vector, Velocity1: UE.Vector, Velocity2: UE.Vector, AngularVelocity1: UE.Vector, AngularVelocity2: UE.Vector, Mass1: number, Mass2: number, ParticleIndex: number, LevelsetIndex: number, ParticleIndexMesh: number, LevelsetIndexMesh: number);
        Location: UE.Vector;
        AccumulatedImpulse: UE.Vector;
        Normal: UE.Vector;
        Velocity1: UE.Vector;
        Velocity2: UE.Vector;
        AngularVelocity1: UE.Vector;
        AngularVelocity2: UE.Vector;
        Mass1: number;
        Mass2: number;
        ParticleIndex: number;
        LevelsetIndex: number;
        ParticleIndexMesh: number;
        LevelsetIndexMesh: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SolverCollisionData_0__: boolean;
    }
    
    class SolverBreakingData {
        constructor();
        constructor(Location: UE.Vector, Velocity: UE.Vector, AngularVelocity: UE.Vector, Mass: number, ParticleIndex: number, ParticleIndexMesh: number);
        Location: UE.Vector;
        Velocity: UE.Vector;
        AngularVelocity: UE.Vector;
        Mass: number;
        ParticleIndex: number;
        ParticleIndexMesh: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SolverBreakingData_0__: boolean;
    }
    
    class SolverTrailingData {
        constructor();
        constructor(Location: UE.Vector, Velocity: UE.Vector, AngularVelocity: UE.Vector, Mass: number, ParticleIndex: number, ParticleIndexMesh: number);
        Location: UE.Vector;
        Velocity: UE.Vector;
        AngularVelocity: UE.Vector;
        Mass: number;
        ParticleIndex: number;
        ParticleIndexMesh: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SolverTrailingData_0__: boolean;
    }
    
    class RecordedFrame {
        constructor();
        constructor(Transforms: TArray<UE.Transform>, TransformIndices: TArray<number>, PreviousTransformIndices: TArray<number>, DisabledFlags: TArray<boolean>, Collisions: TArray<UE.SolverCollisionData>, Breakings: TArray<UE.SolverBreakingData>, Trailings: TSet<UE.SolverTrailingData>, Timestamp: number);
        Transforms: TArray<UE.Transform>;
        TransformIndices: TArray<number>;
        PreviousTransformIndices: TArray<number>;
        DisabledFlags: TArray<boolean>;
        Collisions: TArray<UE.SolverCollisionData>;
        Breakings: TArray<UE.SolverBreakingData>;
        Trailings: TSet<UE.SolverTrailingData>;
        Timestamp: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RecordedFrame_0__: boolean;
    }
    
    class RecordedTransformTrack {
        constructor();
        constructor(Records: TArray<UE.RecordedFrame>);
        Records: TArray<UE.RecordedFrame>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RecordedTransformTrack_0__: boolean;
    }
    
    class GeometryCollectionCache extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RecordedData: UE.RecordedTransformTrack;
        SupportedCollection: UE.GeometryCollection;
        CompatibleCollectionState: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionCache;
        static Load(InName: string): GeometryCollectionCache;
    
        __tid_GeometryCollectionCache_0__: boolean;
    }
    
    class GeomComponentCacheParameters {
        constructor();
        constructor(CacheMode: UE.EGeometryCollectionCacheType, TargetCache: UE.GeometryCollectionCache, ReverseCacheBeginTime: number, SaveCollisionData: boolean, DoGenerateCollisionData: boolean, CollisionDataSizeMax: number, DoCollisionDataSpatialHash: boolean, CollisionDataSpatialHashRadius: number, MaxCollisionPerCell: number, SaveBreakingData: boolean, DoGenerateBreakingData: boolean, BreakingDataSizeMax: number, DoBreakingDataSpatialHash: boolean, BreakingDataSpatialHashRadius: number, MaxBreakingPerCell: number, SaveTrailingData: boolean, DoGenerateTrailingData: boolean, TrailingDataSizeMax: number, TrailingMinSpeedThreshold: number, TrailingMinVolumeThreshold: number);
        CacheMode: UE.EGeometryCollectionCacheType;
        TargetCache: UE.GeometryCollectionCache;
        ReverseCacheBeginTime: number;
        SaveCollisionData: boolean;
        DoGenerateCollisionData: boolean;
        CollisionDataSizeMax: number;
        DoCollisionDataSpatialHash: boolean;
        CollisionDataSpatialHashRadius: number;
        MaxCollisionPerCell: number;
        SaveBreakingData: boolean;
        DoGenerateBreakingData: boolean;
        BreakingDataSizeMax: number;
        DoBreakingDataSpatialHash: boolean;
        BreakingDataSpatialHashRadius: number;
        MaxBreakingPerCell: number;
        SaveTrailingData: boolean;
        DoGenerateTrailingData: boolean;
        TrailingDataSizeMax: number;
        TrailingMinSpeedThreshold: number;
        TrailingMinVolumeThreshold: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeomComponentCacheParameters_0__: boolean;
    }
    
    class ChaosPhysicsCollisionInfo {
        constructor();
        constructor(Component: UE.PrimitiveComponent, OtherComponent: UE.PrimitiveComponent, Location: UE.Vector, Normal: UE.Vector, AccumulatedImpulse: UE.Vector, Velocity: UE.Vector, OtherVelocity: UE.Vector, AngularVelocity: UE.Vector, OtherAngularVelocity: UE.Vector, Mass: number, OtherMass: number);
        Component: UE.PrimitiveComponent;
        OtherComponent: UE.PrimitiveComponent;
        Location: UE.Vector;
        Normal: UE.Vector;
        AccumulatedImpulse: UE.Vector;
        Velocity: UE.Vector;
        OtherVelocity: UE.Vector;
        AngularVelocity: UE.Vector;
        OtherAngularVelocity: UE.Vector;
        Mass: number;
        OtherMass: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosPhysicsCollisionInfo_0__: boolean;
    }
    
    class GeometryCollectionRepData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCollectionRepData_0__: boolean;
    }
    
    enum EGeometryCollectionPhysicsTypeEnum { Chaos_AngularVelocity, Chaos_DynamicState, Chaos_LinearVelocity, Chaos_InitialAngularVelocity, Chaos_InitialLinearVelocity, Chaos_CollisionGroup, Chaos_LinearForce, Chaos_AngularTorque, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    class GeometryCollectionComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChaosSolverActor: UE.ChaosSolverActor;
        RestCollection: UE.GeometryCollection;
        InitializationFields: TArray<UE.FieldSystemActor>;
        Simulating: boolean;
        ObjectType: UE.EObjectStateTypeEnum;
        EnableClustering: boolean;
        ClusterGroupIndex: number;
        MaxClusterLevel: number;
        DamageThreshold: TArray<number>;
        ClusterConnectionType: UE.EClusterConnectionTypeEnum;
        CollisionGroup: number;
        CollisionSampleFraction: number;
        LinearEtherDrag: number;
        AngularEtherDrag: number;
        PhysicalMaterial: UE.ChaosPhysicalMaterial;
        InitialVelocityType: UE.EInitialVelocityTypeEnum;
        InitialLinearVelocity: UE.Vector;
        InitialAngularVelocity: UE.Vector;
        PhysicalMaterialOverride: UE.PhysicalMaterial;
        CacheParameters: UE.GeomComponentCacheParameters;
        NotifyGeometryCollectionPhysicsStateChange: $MulticastDelegate<(FracturedComponent: $Nullable<UE.GeometryCollectionComponent>) => void>;
        NotifyGeometryCollectionPhysicsLoadingStateChange: $MulticastDelegate<(FracturedComponent: $Nullable<UE.GeometryCollectionComponent>) => void>;
        OnChaosBreakEvent: $MulticastDelegate<(BreakEvent: UE.ChaosBreakEvent) => void>;
        DesiredCacheTime: number;
        CachePlayback: boolean;
        OnChaosPhysicsCollision: $MulticastDelegate<(CollisionInfo: UE.ChaosPhysicsCollisionInfo) => void>;
        bNotifyBreaks: boolean;
        bNotifyCollisions: boolean;
        bEnableReplication: boolean;
        bEnableAbandonAfterLevel: boolean;
        ReplicationAbandonClusterLevel: number;
        RepData: UE.GeometryCollectionRepData;
        SelectedBones: TArray<number>;
        HighlightedBones: TArray<number>;
        DummyBodySetup: UE.BodySetup;
        EditorActor: UE.Actor;
        ApplyKinematicField(Radius: number, Position: UE.Vector) : void;
        ApplyPhysicsField(Enabled: boolean, Target: UE.EGeometryCollectionPhysicsTypeEnum, MetaData: $Nullable<UE.FieldSystemMetaData>, Field: $Nullable<UE.FieldNodeBase>) : void;
        NetAbandonCluster(TransformIndex: number) : void;
        NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature(FracturedComponent: $Nullable<UE.GeometryCollectionComponent>) : void;
        NotifyGeometryCollectionPhysicsStateChange__DelegateSignature(FracturedComponent: $Nullable<UE.GeometryCollectionComponent>) : void;
        OnRep_RepData(OldData: UE.GeometryCollectionRepData) : void;
        ReceivePhysicsCollision(CollisionInfo: UE.ChaosPhysicsCollisionInfo) : void;
        SetNotifyBreaks(bNewNotifyBreaks: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionComponent;
        static Load(InName: string): GeometryCollectionComponent;
    
        __tid_GeometryCollectionComponent_0__: boolean;
    }
    
    class GeometryCollectionDebugDrawWarningMessage {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCollectionDebugDrawWarningMessage_0__: boolean;
    }
    
    class GeometryCollectionDebugDrawActorSelectedRigidBody {
        constructor();
        constructor(Id: number, Solver: UE.ChaosSolverActor, GeometryCollection: UE.GeometryCollectionActor);
        Id: number;
        Solver: UE.ChaosSolverActor;
        GeometryCollection: UE.GeometryCollectionActor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCollectionDebugDrawActorSelectedRigidBody_0__: boolean;
    }
    
    enum EGeometryCollectionDebugDrawActorHideGeometry { HideNone, HideWithCollision, HideSelected, HideWholeCollection, HideAll, EGeometryCollectionDebugDrawActorHideGeometry_MAX, __typeKeyDoNoAccess}
    class GeometryCollectionDebugDrawActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WarningMessage: UE.GeometryCollectionDebugDrawWarningMessage;
        SelectedRigidBody: UE.GeometryCollectionDebugDrawActorSelectedRigidBody;
        bDebugDrawWholeCollection: boolean;
        bDebugDrawHierarchy: boolean;
        bDebugDrawClustering: boolean;
        HideGeometry: UE.EGeometryCollectionDebugDrawActorHideGeometry;
        bShowRigidBodyId: boolean;
        bShowRigidBodyCollision: boolean;
        bCollisionAtOrigin: boolean;
        bShowRigidBodyTransform: boolean;
        bShowRigidBodyInertia: boolean;
        bShowRigidBodyVelocity: boolean;
        bShowRigidBodyForce: boolean;
        bShowRigidBodyInfos: boolean;
        bShowTransformIndex: boolean;
        bShowTransform: boolean;
        bShowParent: boolean;
        bShowLevel: boolean;
        bShowConnectivityEdges: boolean;
        bShowGeometryIndex: boolean;
        bShowGeometryTransform: boolean;
        bShowBoundingBox: boolean;
        bShowFaces: boolean;
        bShowFaceIndices: boolean;
        bShowFaceNormals: boolean;
        bShowSingleFace: boolean;
        SingleFaceIndex: number;
        bShowVertices: boolean;
        bShowVertexIndices: boolean;
        bShowVertexNormals: boolean;
        bUseActiveVisualization: boolean;
        PointThickness: number;
        LineThickness: number;
        bTextShadow: boolean;
        TextScale: number;
        NormalScale: number;
        AxisScale: number;
        ArrowScale: number;
        RigidBodyIdColor: UE.Color;
        RigidBodyTransformScale: number;
        RigidBodyCollisionColor: UE.Color;
        RigidBodyInertiaColor: UE.Color;
        RigidBodyVelocityColor: UE.Color;
        RigidBodyForceColor: UE.Color;
        RigidBodyInfoColor: UE.Color;
        TransformIndexColor: UE.Color;
        TransformScale: number;
        LevelColor: UE.Color;
        ParentColor: UE.Color;
        ConnectivityEdgeThickness: number;
        GeometryIndexColor: UE.Color;
        GeometryTransformScale: number;
        BoundingBoxColor: UE.Color;
        FaceColor: UE.Color;
        FaceIndexColor: UE.Color;
        FaceNormalColor: UE.Color;
        SingleFaceColor: UE.Color;
        VertexColor: UE.Color;
        VertexIndexColor: UE.Color;
        VertexNormalColor: UE.Color;
        SpriteComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionDebugDrawActor;
        static Load(InName: string): GeometryCollectionDebugDrawActor;
    
        __tid_GeometryCollectionDebugDrawActor_0__: boolean;
    }
    
    class VolumeTexture extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Source2DTexture: UE.Texture2D;
        SourceLightingGuid: UE.Guid;
        Source2DTileSizeX: number;
        Source2DTileSizeY: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VolumeTexture;
        static Load(InName: string): VolumeTexture;
    
        __tid_VolumeTexture_0__: boolean;
    }
    
    class GeometryCollectionRenderLevelSetActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetVolumeTexture: UE.VolumeTexture;
        RayMarchMaterial: UE.Material;
        SurfaceTolerance: number;
        Isovalue: number;
        Enabled: boolean;
        RenderVolumeBoundingBox: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionRenderLevelSetActor;
        static Load(InName: string): GeometryCollectionRenderLevelSetActor;
    
        __tid_GeometryCollectionRenderLevelSetActor_0__: boolean;
    }
    
    class GeometryCollectionDebugDrawComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeometryCollectionDebugDrawActor: UE.GeometryCollectionDebugDrawActor;
        GeometryCollectionRenderLevelSetActor: UE.GeometryCollectionRenderLevelSetActor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionDebugDrawComponent;
        static Load(InName: string): GeometryCollectionDebugDrawComponent;
    
        __tid_GeometryCollectionDebugDrawComponent_0__: boolean;
    }
    
    class GeometryCollectionActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeometryCollectionComponent: UE.GeometryCollectionComponent;
        GeometryCollectionDebugDrawComponent: UE.GeometryCollectionDebugDrawComponent;
        RaycastSingle(Start: UE.Vector, End: UE.Vector, OutHit: $Ref<UE.HitResult>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionActor;
        static Load(InName: string): GeometryCollectionActor;
    
        __tid_GeometryCollectionActor_0__: boolean;
    }
    
    class ChaosTrailingEventData {
        constructor();
        constructor(Location: UE.Vector, Velocity: UE.Vector, AngularVelocity: UE.Vector, Mass: number, ParticleIndex: number);
        Location: UE.Vector;
        Velocity: UE.Vector;
        AngularVelocity: UE.Vector;
        Mass: number;
        ParticleIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosTrailingEventData_0__: boolean;
    }
    
    class ChaosDestructionListener extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsCollisionEventListeningEnabled: boolean;
        bIsBreakingEventListeningEnabled: boolean;
        bIsTrailingEventListeningEnabled: boolean;
        CollisionEventRequestSettings: UE.ChaosCollisionEventRequestSettings;
        BreakingEventRequestSettings: UE.ChaosBreakingEventRequestSettings;
        TrailingEventRequestSettings: UE.ChaosTrailingEventRequestSettings;
        ChaosSolverActors: TSet<UE.ChaosSolverActor>;
        GeometryCollectionActors: TSet<UE.GeometryCollectionActor>;
        OnCollisionEvents: $MulticastDelegate<(CollisionEvents: TArray<UE.ChaosCollisionEventData>) => void>;
        OnBreakingEvents: $MulticastDelegate<(BreakingEvents: TArray<UE.ChaosBreakingEventData>) => void>;
        OnTrailingEvents: $MulticastDelegate<(TrailingEvents: TArray<UE.ChaosTrailingEventData>) => void>;
        AddChaosSolverActor(ChaosSolverActor: $Nullable<UE.ChaosSolverActor>) : void;
        AddGeometryCollectionActor(GeometryCollectionActor: $Nullable<UE.GeometryCollectionActor>) : void;
        IsEventListening() : boolean;
        RemoveChaosSolverActor(ChaosSolverActor: $Nullable<UE.ChaosSolverActor>) : void;
        RemoveGeometryCollectionActor(GeometryCollectionActor: $Nullable<UE.GeometryCollectionActor>) : void;
        SetBreakingEventEnabled(bIsEnabled: boolean) : void;
        SetBreakingEventRequestSettings(InSettings: UE.ChaosBreakingEventRequestSettings) : void;
        SetCollisionEventEnabled(bIsEnabled: boolean) : void;
        SetCollisionEventRequestSettings(InSettings: UE.ChaosCollisionEventRequestSettings) : void;
        SetTrailingEventEnabled(bIsEnabled: boolean) : void;
        SetTrailingEventRequestSettings(InSettings: UE.ChaosTrailingEventRequestSettings) : void;
        SortBreakingEvents(BreakingEvents: $Ref<TArray<UE.ChaosBreakingEventData>>, SortMethod: UE.EChaosBreakingSortMethod) : void;
        SortCollisionEvents(CollisionEvents: $Ref<TArray<UE.ChaosCollisionEventData>>, SortMethod: UE.EChaosCollisionSortMethod) : void;
        SortTrailingEvents(TrailingEvents: $Ref<TArray<UE.ChaosTrailingEventData>>, SortMethod: UE.EChaosTrailingSortMethod) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosDestructionListener;
        static Load(InName: string): ChaosDestructionListener;
    
        __tid_ChaosDestructionListener_0__: boolean;
    }
    
    class ChaosNotifyHandlerInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosNotifyHandlerInterface;
        static Load(InName: string): ChaosNotifyHandlerInterface;
    
        __tid_ChaosNotifyHandlerInterface_0__: boolean;
    }
    
    class ChaosPhysicalMaterialFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosPhysicalMaterialFactory;
        static Load(InName: string): ChaosPhysicalMaterialFactory;
    
        __tid_ChaosPhysicalMaterialFactory_0__: boolean;
    }
    
    enum EChaosThreadingMode { DedicatedThread, TaskGraph, SingleThread, Num, Invalid, EChaosThreadingMode_MAX, __typeKeyDoNoAccess}
    enum EChaosSolverTickMode { Fixed, Variable, VariableCapped, VariableCappedWithTarget, EChaosSolverTickMode_MAX, __typeKeyDoNoAccess}
    enum EChaosBufferMode { Double, Triple, Num, Invalid, EChaosBufferMode_MAX, __typeKeyDoNoAccess}
    class ChaosPhysicsSettings {
        constructor();
        constructor(DefaultThreadingModel: UE.EChaosThreadingMode, DedicatedThreadTickMode: UE.EChaosSolverTickMode, DedicatedThreadBufferMode: UE.EChaosBufferMode);
        DefaultThreadingModel: UE.EChaosThreadingMode;
        DedicatedThreadTickMode: UE.EChaosSolverTickMode;
        DedicatedThreadBufferMode: UE.EChaosBufferMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChaosPhysicsSettings_0__: boolean;
    }
    
    class ChaosSolver extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosSolver;
        static Load(InName: string): ChaosSolver;
    
        __tid_ChaosSolver_0__: boolean;
    }
    
    class ChaosSolverEngineBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ConvertPhysicsCollisionToHitResult(PhysicsCollision: UE.ChaosPhysicsCollisionInfo) : UE.HitResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosSolverEngineBlueprintLibrary;
        static Load(InName: string): ChaosSolverEngineBlueprintLibrary;
    
        __tid_ChaosSolverEngineBlueprintLibrary_0__: boolean;
    }
    
    class ChaosSolverFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosSolverFactory;
        static Load(InName: string): ChaosSolverFactory;
    
        __tid_ChaosSolverFactory_0__: boolean;
    }
    
    class ChaosSolverSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultChaosSolverActorClass: UE.SoftClassPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChaosSolverSettings;
        static Load(InName: string): ChaosSolverSettings;
    
        __tid_ChaosSolverSettings_0__: boolean;
    }
    
    enum ESlateCheckBoxType { CheckBox, ToggleButton, ESlateCheckBoxType_MAX, __typeKeyDoNoAccess}
    class CheckBoxStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(CheckBoxType: UE.ESlateCheckBoxType, UncheckedImage: UE.SlateBrush, UncheckedHoveredImage: UE.SlateBrush, UncheckedPressedImage: UE.SlateBrush, CheckedImage: UE.SlateBrush, CheckedHoveredImage: UE.SlateBrush, CheckedPressedImage: UE.SlateBrush, UndeterminedImage: UE.SlateBrush, UndeterminedHoveredImage: UE.SlateBrush, UndeterminedPressedImage: UE.SlateBrush, Padding: UE.Margin, ForegroundColor: UE.SlateColor, BorderBackgroundColor: UE.SlateColor, CheckedSlateSound: UE.SlateSound, UncheckedSlateSound: UE.SlateSound, HoveredSlateSound: UE.SlateSound, CheckedSound: string, UncheckedSound: string, HoveredSound: string);
        CheckBoxType: UE.ESlateCheckBoxType;
        UncheckedImage: UE.SlateBrush;
        UncheckedHoveredImage: UE.SlateBrush;
        UncheckedPressedImage: UE.SlateBrush;
        CheckedImage: UE.SlateBrush;
        CheckedHoveredImage: UE.SlateBrush;
        CheckedPressedImage: UE.SlateBrush;
        UndeterminedImage: UE.SlateBrush;
        UndeterminedHoveredImage: UE.SlateBrush;
        UndeterminedPressedImage: UE.SlateBrush;
        Padding: UE.Margin;
        ForegroundColor: UE.SlateColor;
        BorderBackgroundColor: UE.SlateColor;
        CheckedSlateSound: UE.SlateSound;
        UncheckedSlateSound: UE.SlateSound;
        HoveredSlateSound: UE.SlateSound;
        CheckedSound: string;
        UncheckedSound: string;
        HoveredSound: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CheckBoxStyle_0__: boolean;
    }
    
    class CheckBox extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CheckedState: UE.ECheckBoxState;
        CheckedStateDelegate: $Delegate<() => UE.ECheckBoxState>;
        WidgetStyle: UE.CheckBoxStyle;
        Style: UE.SlateWidgetStyleAsset;
        UncheckedImage: UE.SlateBrushAsset;
        UncheckedHoveredImage: UE.SlateBrushAsset;
        UncheckedPressedImage: UE.SlateBrushAsset;
        CheckedImage: UE.SlateBrushAsset;
        CheckedHoveredImage: UE.SlateBrushAsset;
        CheckedPressedImage: UE.SlateBrushAsset;
        UndeterminedImage: UE.SlateBrushAsset;
        UndeterminedHoveredImage: UE.SlateBrushAsset;
        UndeterminedPressedImage: UE.SlateBrushAsset;
        HorizontalAlignment: UE.EHorizontalAlignment;
        Padding: UE.Margin;
        BorderBackgroundColor: UE.SlateColor;
        ClickMethod: UE.EButtonClickMethod;
        TouchMethod: UE.EButtonTouchMethod;
        PressMethod: UE.EButtonPressMethod;
        IsFocusable: boolean;
        OnCheckStateChanged: $MulticastDelegate<(bIsChecked: boolean) => void>;
        GetCheckedState() : UE.ECheckBoxState;
        IsChecked() : boolean;
        IsPressed() : boolean;
        SetCheckedState(InCheckedState: UE.ECheckBoxState) : void;
        SetClickMethod(InClickMethod: UE.EButtonClickMethod) : void;
        SetIsChecked(InIsChecked: boolean) : void;
        SetPressMethod(InPressMethod: UE.EButtonPressMethod) : void;
        SetTouchMethod(InTouchMethod: UE.EButtonTouchMethod) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CheckBox;
        static Load(InName: string): CheckBox;
    
        __tid_CheckBox_0__: boolean;
    }
    
    class CheckBoxStyleAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CheckBoxStyle: UE.CheckBoxStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CheckBoxStyleAsset;
        static Load(InName: string): CheckBoxStyleAsset;
    
        __tid_CheckBoxStyleAsset_0__: boolean;
    }
    
    class CheckBoxWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CheckBoxStyle: UE.CheckBoxStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CheckBoxWidgetStyle;
        static Load(InName: string): CheckBoxWidgetStyle;
    
        __tid_CheckBoxWidgetStyle_0__: boolean;
    }
    
    class CheckedStateBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : UE.ECheckBoxState;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CheckedStateBinding;
        static Load(InName: string): CheckedStateBinding;
    
        __tid_CheckedStateBinding_0__: boolean;
    }
    
    class CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy extends UE.ARBaseAsyncTaskBlueprintProxy {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(bIsAvailable: boolean, Error: string) => void>;
        OnFailed: $MulticastDelegate<(bIsAvailable: boolean, Error: string) => void>;
        GeoTrackingAvailabilityDelegate__DelegateSignature(bIsAvailable: boolean, Error: string) : void;
        static CheckGeoTrackingAvailability(WorldContextObject: $Nullable<UE.Object>) : UE.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy;
        static CheckGeoTrackingAvailabilityAtLocation(WorldContextObject: $Nullable<UE.Object>, Longitude: number, Latitude: number) : UE.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy;
        static Load(InName: string): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy;
    
        __tid_CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy_0__: boolean;
    }
    
    class ChildActorAttachedActorInfo {
        constructor();
        constructor(Actor: TWeakObjectPtr<UE.Actor>, SocketName: string, RelativeTransform: UE.Transform);
        Actor: TWeakObjectPtr<UE.Actor>;
        SocketName: string;
        RelativeTransform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChildActorAttachedActorInfo_0__: boolean;
    }
    
    class ChildActorComponentInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        constructor(ChildActorClass: UE.Class, ChildActorName: string, AttachedActors: TArray<UE.ChildActorAttachedActorInfo>);
        ChildActorClass: UE.Class;
        ChildActorName: string;
        AttachedActors: TArray<UE.ChildActorAttachedActorInfo>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChildActorComponentInstanceData_0__: boolean;
    }
    
    class ChunkDependency {
        constructor();
        constructor(ChunkID: number, ParentChunkID: number);
        ChunkID: number;
        ParentChunkID: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ChunkDependency_0__: boolean;
    }
    
    class ChunkDependencyInfo extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DependencyArray: TArray<UE.ChunkDependency>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ChunkDependencyInfo;
        static Load(InName: string): ChunkDependencyInfo;
    
        __tid_ChunkDependencyInfo_0__: boolean;
    }
    
    class NamedFilmbackPreset {
        constructor();
        constructor(Name: string, FilmbackSettings: UE.CameraFilmbackSettings);
        Name: string;
        FilmbackSettings: UE.CameraFilmbackSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedFilmbackPreset_0__: boolean;
    }
    
    class NamedLensPreset {
        constructor();
        constructor(Name: string, LensSettings: UE.CameraLensSettings);
        Name: string;
        LensSettings: UE.CameraLensSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedLensPreset_0__: boolean;
    }
    
    class CineCameraComponent extends UE.CameraComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FilmbackSettings: UE.CameraFilmbackSettings;
        Filmback: UE.CameraFilmbackSettings;
        LensSettings: UE.CameraLensSettings;
        FocusSettings: UE.CameraFocusSettings;
        CurrentFocalLength: number;
        CurrentAperture: number;
        CurrentFocusDistance: number;
        CurrentHorizontalFOV: number;
        FocusPlaneVisualizationMesh: UE.StaticMesh;
        FocusPlaneVisualizationMaterial: UE.Material;
        DebugFocusPlaneComponent: UE.StaticMeshComponent;
        DebugFocusPlaneMID: UE.MaterialInstanceDynamic;
        FilmbackPresets: TArray<UE.NamedFilmbackPreset>;
        LensPresets: TArray<UE.NamedLensPreset>;
        DefaultFilmbackPresetName: string;
        DefaultFilmbackPreset: string;
        DefaultLensPresetName: string;
        DefaultLensFocalLength: number;
        DefaultLensFStop: number;
        GetDefaultFilmbackPresetName() : string;
        GetFilmbackPresetName() : string;
        GetHorizontalFieldOfView() : number;
        GetLensPresetName() : string;
        GetVerticalFieldOfView() : number;
        SetCurrentFocalLength(InFocalLength: number) : void;
        SetFilmbackPresetByName(InPresetName: string) : void;
        SetLensPresetByName(InPresetName: string) : void;
        static GetFilmbackPresetsCopy() : TArray<UE.NamedFilmbackPreset>;
        static GetLensPresetsCopy() : TArray<UE.NamedLensPreset>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CineCameraComponent;
        static Load(InName: string): CineCameraComponent;
    
        __tid_CineCameraComponent_0__: boolean;
    }
    
    class CineCameraActor extends UE.CameraActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LookatTrackingSettings: UE.CameraLookatTrackingSettings;
        GetCineCameraComponent() : UE.CineCameraComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CineCameraActor;
        static Load(InName: string): CineCameraActor;
    
        __tid_CineCameraActor_0__: boolean;
    }
    
    class CircleSplineGenerator extends UE.SplineGeneratorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberOfPoints: number;
        Radius: number;
        bReverseDir: boolean;
        bKeepFirstKeyTangent: boolean;
        bBranchRight: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CircleSplineGenerator;
        static Load(InName: string): CircleSplineGenerator;
    
        __tid_CircleSplineGenerator_0__: boolean;
    }
    
    class CircularThrobber extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberOfPieces: number;
        Period: number;
        Radius: number;
        PieceImage: UE.SlateBrushAsset;
        Image: UE.SlateBrush;
        bEnableRadius: boolean;
        SetNumberOfPieces(InNumberOfPieces: number) : void;
        SetPeriod(InPeriod: number) : void;
        SetRadius(InRadius: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CircularThrobber;
        static Load(InName: string): CircularThrobber;
    
        __tid_CircularThrobber_0__: boolean;
    }
    
    class ClassMoveInfo {
        constructor();
        constructor(ClassName: string, PackageName: string, GroupName: string, bActive: boolean);
        ClassName: string;
        PackageName: string;
        GroupName: string;
        bActive: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClassMoveInfo_0__: boolean;
    }
    
    class ClassPickerDefaults {
        constructor();
        constructor(ClassName: string, AssetClass: string);
        ClassName: string;
        AssetClass: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClassPickerDefaults_0__: boolean;
    }
    
    class ObjectPropertyBase extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectPropertyBase;
        static Load(InName: string): ObjectPropertyBase;
    
        __tid_ObjectPropertyBase_0__: boolean;
    }
    
    class ObjectProperty extends UE.ObjectPropertyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectProperty;
        static Load(InName: string): ObjectProperty;
    
        __tid_ObjectProperty_0__: boolean;
    }
    
    class ClassProperty extends UE.ObjectProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClassProperty;
        static Load(InName: string): ClassProperty;
    
        __tid_ClassProperty_0__: boolean;
    }
    
    class ClassRedirect {
        constructor();
        constructor(ObjectName: string, OldClassName: string, NewClassName: string, OldSubobjName: string, NewSubobjName: string, NewClassClass: string, NewClassPackage: string, InstanceOnly: boolean);
        ObjectName: string;
        OldClassName: string;
        NewClassName: string;
        OldSubobjName: string;
        NewSubobjName: string;
        NewClassClass: string;
        NewClassPackage: string;
        InstanceOnly: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClassRedirect_0__: boolean;
    }
    
    class ClassTemplate extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeneratedBaseClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClassTemplate;
        static Load(InName: string): ClassTemplate;
    
        __tid_ClassTemplate_0__: boolean;
    }
    
    class ClassTemplateEditorSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClassTemplateEditorSubsystem;
        static Load(InName: string): ClassTemplateEditorSubsystem;
    
        __tid_ClassTemplateEditorSubsystem_0__: boolean;
    }
    
    class ClassThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClassThumbnailRenderer;
        static Load(InName: string): ClassThumbnailRenderer;
    
        __tid_ClassThumbnailRenderer_0__: boolean;
    }
    
    class ClassVariableCreator extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClassVariableCreator;
        static Load(InName: string): ClassVariableCreator;
    
        __tid_ClassVariableCreator_0__: boolean;
    }
    
    class ClassViewerProjectSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InternalOnlyPaths: TArray<UE.DirectoryPath>;
        InternalOnlyClasses: TArray<UE.SoftClassPath>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClassViewerProjectSettings;
        static Load(InName: string): ClassViewerProjectSettings;
    
        __tid_ClassViewerProjectSettings_0__: boolean;
    }
    
    enum EClassViewerDeveloperType { CVDT_None, CVDT_CurrentUser, CVDT_All, CVDT_Max, CVDT_MAX, __typeKeyDoNoAccess}
    class ClassViewerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AllowedClasses: TArray<string>;
        DisplayInternalClasses: boolean;
        DeveloperFolderType: UE.EClassViewerDeveloperType;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClassViewerSettings;
        static Load(InName: string): ClassViewerSettings;
    
        __tid_ClassViewerSettings_0__: boolean;
    }
    
    class ClickDragInputBehavior extends UE.AnyButtonInputBehavior {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUpdateModifiersDuringDrag: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClickDragInputBehavior;
        static Load(InName: string): ClickDragInputBehavior;
    
        __tid_ClickDragInputBehavior_0__: boolean;
    }
    
    class ClickDragTool extends UE.InteractiveTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClickDragTool;
        static Load(InName: string): ClickDragTool;
    
        __tid_ClickDragTool_0__: boolean;
    }
    
    class InteractiveToolBuilder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveToolBuilder;
        static Load(InName: string): InteractiveToolBuilder;
    
        __tid_InteractiveToolBuilder_0__: boolean;
    }
    
    class ClickDragToolBuilder extends UE.InteractiveToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClickDragToolBuilder;
        static Load(InName: string): ClickDragToolBuilder;
    
        __tid_ClickDragToolBuilder_0__: boolean;
    }
    
    class ClientReceiveData {
        constructor();
        constructor(LocalPC: UE.PlayerController, MessageType: string, MessageIndex: number, MessageString: string, RelatedPlayerState_1: UE.PlayerState, RelatedPlayerState_2: UE.PlayerState, OptionalObject: UE.Object);
        LocalPC: UE.PlayerController;
        MessageType: string;
        MessageIndex: number;
        MessageString: string;
        RelatedPlayerState_1: UE.PlayerState;
        RelatedPlayerState_2: UE.PlayerState;
        OptionalObject: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClientReceiveData_0__: boolean;
    }
    
    class ClothCollisionPrim_Sphere {
        constructor();
        constructor(BoneIndex: number, Radius: number, LocalPosition: UE.Vector);
        BoneIndex: number;
        Radius: number;
        LocalPosition: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothCollisionPrim_Sphere_0__: boolean;
    }
    
    class ClothCollisionPrim_SphereConnection {
        constructor();
        constructor(SphereIndices: FixSizeArray<number>);
        SphereIndices: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothCollisionPrim_SphereConnection_0__: boolean;
    }
    
    class ClothCollisionPrim_Convex {
        constructor();
        constructor(Planes: TArray<UE.Plane>, SurfacePoints: TArray<UE.Vector>, BoneIndex: number);
        Planes: TArray<UE.Plane>;
        SurfacePoints: TArray<UE.Vector>;
        BoneIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothCollisionPrim_Convex_0__: boolean;
    }
    
    class ClothCollisionPrim_Box {
        constructor();
        constructor(LocalPosition: UE.Vector, LocalRotation: UE.Quat, HalfExtents: UE.Vector, BoneIndex: number);
        LocalPosition: UE.Vector;
        LocalRotation: UE.Quat;
        HalfExtents: UE.Vector;
        BoneIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothCollisionPrim_Box_0__: boolean;
    }
    
    class ClothCollisionData {
        constructor();
        constructor(Spheres: TArray<UE.ClothCollisionPrim_Sphere>, SphereConnections: TArray<UE.ClothCollisionPrim_SphereConnection>, Convexes: TArray<UE.ClothCollisionPrim_Convex>, Boxes: TArray<UE.ClothCollisionPrim_Box>);
        Spheres: TArray<UE.ClothCollisionPrim_Sphere>;
        SphereConnections: TArray<UE.ClothCollisionPrim_SphereConnection>;
        Convexes: TArray<UE.ClothCollisionPrim_Convex>;
        Boxes: TArray<UE.ClothCollisionPrim_Box>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothCollisionData_0__: boolean;
    }
    
    enum EClothingWindMethod_Legacy { Legacy, Accurate, EClothingWindMethod_MAX, __typeKeyDoNoAccess}
    class ClothConstraintSetup_Legacy {
        constructor();
        constructor(Stiffness: number, StiffnessMultiplier: number, StretchLimit: number, CompressionLimit: number);
        Stiffness: number;
        StiffnessMultiplier: number;
        StretchLimit: number;
        CompressionLimit: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothConstraintSetup_Legacy_0__: boolean;
    }
    
    class ClothConfig_Legacy {
        constructor();
        constructor(WindMethod: UE.EClothingWindMethod_Legacy, VerticalConstraintConfig: UE.ClothConstraintSetup_Legacy, HorizontalConstraintConfig: UE.ClothConstraintSetup_Legacy, BendConstraintConfig: UE.ClothConstraintSetup_Legacy, ShearConstraintConfig: UE.ClothConstraintSetup_Legacy, SelfCollisionRadius: number, SelfCollisionStiffness: number, SelfCollisionCullScale: number, Damping: UE.Vector, Friction: number, WindDragCoefficient: number, WindLiftCoefficient: number, LinearDrag: UE.Vector, AngularDrag: UE.Vector, LinearInertiaScale: UE.Vector, AngularInertiaScale: UE.Vector, CentrifugalInertiaScale: UE.Vector, SolverFrequency: number, StiffnessFrequency: number, GravityScale: number, GravityOverride: UE.Vector, bUseGravityOverride: boolean, TetherStiffness: number, TetherLimit: number, CollisionThickness: number, AnimDriveSpringStiffness: number, AnimDriveDamperStiffness: number);
        WindMethod: UE.EClothingWindMethod_Legacy;
        VerticalConstraintConfig: UE.ClothConstraintSetup_Legacy;
        HorizontalConstraintConfig: UE.ClothConstraintSetup_Legacy;
        BendConstraintConfig: UE.ClothConstraintSetup_Legacy;
        ShearConstraintConfig: UE.ClothConstraintSetup_Legacy;
        SelfCollisionRadius: number;
        SelfCollisionStiffness: number;
        SelfCollisionCullScale: number;
        Damping: UE.Vector;
        Friction: number;
        WindDragCoefficient: number;
        WindLiftCoefficient: number;
        LinearDrag: UE.Vector;
        AngularDrag: UE.Vector;
        LinearInertiaScale: UE.Vector;
        AngularInertiaScale: UE.Vector;
        CentrifugalInertiaScale: UE.Vector;
        SolverFrequency: number;
        StiffnessFrequency: number;
        GravityScale: number;
        GravityOverride: UE.Vector;
        bUseGravityOverride: boolean;
        TetherStiffness: number;
        TetherLimit: number;
        CollisionThickness: number;
        AnimDriveSpringStiffness: number;
        AnimDriveDamperStiffness: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothConfig_Legacy_0__: boolean;
    }
    
    enum EClothingWindMethodNv { Legacy, Accurate, EClothingWindMethodNv_MAX, __typeKeyDoNoAccess}
    class ClothConstraintSetupNv {
        constructor();
        constructor(Stiffness: number, StiffnessMultiplier: number, StretchLimit: number, CompressionLimit: number);
        Stiffness: number;
        StiffnessMultiplier: number;
        StretchLimit: number;
        CompressionLimit: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothConstraintSetupNv_0__: boolean;
    }
    
    class ClothConfigNv extends UE.ClothConfigCommon {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClothingWindMethod: UE.EClothingWindMethodNv;
        VerticalConstraint: UE.ClothConstraintSetupNv;
        HorizontalConstraint: UE.ClothConstraintSetupNv;
        BendConstraint: UE.ClothConstraintSetupNv;
        ShearConstraint: UE.ClothConstraintSetupNv;
        SelfCollisionRadius: number;
        SelfCollisionStiffness: number;
        SelfCollisionCullScale: number;
        Damping: UE.Vector;
        Friction: number;
        WindDragCoefficient: number;
        WindLiftCoefficient: number;
        LinearDrag: UE.Vector;
        AngularDrag: UE.Vector;
        LinearInertiaScale: UE.Vector;
        AngularInertiaScale: UE.Vector;
        CentrifugalInertiaScale: UE.Vector;
        SolverFrequency: number;
        StiffnessFrequency: number;
        GravityScale: number;
        GravityOverride: UE.Vector;
        bUseGravityOverride: boolean;
        TetherStiffness: number;
        TetherLimit: number;
        CollisionThickness: number;
        AnimDriveSpringStiffness: number;
        AnimDriveDamperStiffness: number;
        WindMethod: UE.EClothingWindMethod_Legacy;
        VerticalConstraintConfig: UE.ClothConstraintSetup_Legacy;
        HorizontalConstraintConfig: UE.ClothConstraintSetup_Legacy;
        BendConstraintConfig: UE.ClothConstraintSetup_Legacy;
        ShearConstraintConfig: UE.ClothConstraintSetup_Legacy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothConfigNv;
        static Load(InName: string): ClothConfigNv;
    
        __tid_ClothConfigNv_0__: boolean;
    }
    
    class ClothVertBoneData {
        constructor();
        constructor(NumInfluences: number, BoneIndices: FixSizeArray<number>, BoneWeights: FixSizeArray<number>);
        NumInfluences: number;
        BoneIndices: FixSizeArray<number>;
        BoneWeights: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothVertBoneData_0__: boolean;
    }
    
    class ClothPhysicalMeshDataBase_Legacy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Vertices: TArray<UE.Vector>;
        Normals: TArray<UE.Vector>;
        VertexColors: TArray<UE.Color>;
        Indices: TArray<number>;
        InverseMasses: TArray<number>;
        BoneData: TArray<UE.ClothVertBoneData>;
        NumFixedVerts: number;
        MaxBoneWeights: number;
        SelfCollisionIndices: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothPhysicalMeshDataBase_Legacy;
        static Load(InName: string): ClothPhysicalMeshDataBase_Legacy;
    
        __tid_ClothPhysicalMeshDataBase_Legacy_0__: boolean;
    }
    
    class PointWeightMap {
        constructor();
        constructor(Values: TArray<number>, Name: string, CurrentTarget: number, bEnabled: boolean);
        Values: TArray<number>;
        Name: string;
        CurrentTarget: number;
        bEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PointWeightMap_0__: boolean;
    }
    
    class ClothPhysicalMeshData {
        constructor();
        constructor(Vertices: TArray<UE.Vector>, Normals: TArray<UE.Vector>, VertexColors: TArray<UE.Color>, Indices: TArray<number>, WeightMaps: TMap<number, UE.PointWeightMap>, InverseMasses: TArray<number>, BoneData: TArray<UE.ClothVertBoneData>, MaxBoneWeights: number, NumFixedVerts: number, SelfCollisionIndices: TArray<number>, MaxDistances: TArray<number>, BackstopDistances: TArray<number>, BackstopRadiuses: TArray<number>, AnimDriveMultipliers: TArray<number>);
        Vertices: TArray<UE.Vector>;
        Normals: TArray<UE.Vector>;
        VertexColors: TArray<UE.Color>;
        Indices: TArray<number>;
        WeightMaps: TMap<number, UE.PointWeightMap>;
        InverseMasses: TArray<number>;
        BoneData: TArray<UE.ClothVertBoneData>;
        MaxBoneWeights: number;
        NumFixedVerts: number;
        SelfCollisionIndices: TArray<number>;
        MaxDistances: TArray<number>;
        BackstopDistances: TArray<number>;
        BackstopRadiuses: TArray<number>;
        AnimDriveMultipliers: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothPhysicalMeshData_0__: boolean;
    }
    
    class ClothLODDataCommon_Legacy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicalMeshData: UE.ClothPhysicalMeshDataBase_Legacy;
        ClothPhysicalMeshData: UE.ClothPhysicalMeshData;
        CollisionData: UE.ClothCollisionData;
        ParameterMasks: TArray<UE.PointWeightMap>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothLODDataCommon_Legacy;
        static Load(InName: string): ClothLODDataCommon_Legacy;
    
        __tid_ClothLODDataCommon_Legacy_0__: boolean;
    }
    
    enum EWeightMapTargetCommon { None, MaxDistance, BackstopDistance, BackstopRadius, AnimDriveMultiplier, EWeightMapTargetCommon_MAX, __typeKeyDoNoAccess}
    class ClothParameterMask_Legacy {
        constructor();
        constructor(MaskName: string, CurrentTarget: UE.EWeightMapTargetCommon, MaxValue: number, MinValue: number, Values: TArray<number>, bEnabled: boolean);
        MaskName: string;
        CurrentTarget: UE.EWeightMapTargetCommon;
        MaxValue: number;
        MinValue: number;
        Values: TArray<number>;
        bEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothParameterMask_Legacy_0__: boolean;
    }
    
    class ClothLODDataCommon {
        constructor();
        constructor(PhysicalMeshData: UE.ClothPhysicalMeshData, CollisionData: UE.ClothCollisionData, bUseMultipleInfluences: boolean, SkinningKernelRadius: number, ParameterMasks: TArray<UE.ClothParameterMask_Legacy>, PointWeightMaps: TArray<UE.PointWeightMap>);
        PhysicalMeshData: UE.ClothPhysicalMeshData;
        CollisionData: UE.ClothCollisionData;
        bUseMultipleInfluences: boolean;
        SkinningKernelRadius: number;
        ParameterMasks: TArray<UE.ClothParameterMask_Legacy>;
        PointWeightMaps: TArray<UE.PointWeightMap>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClothLODDataCommon_0__: boolean;
    }
    
    class ClothingAssetCustomData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingAssetCustomData;
        static Load(InName: string): ClothingAssetCustomData;
    
        __tid_ClothingAssetCustomData_0__: boolean;
    }
    
    class ClothingAssetCommon extends UE.ClothingAssetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicsAsset: UE.PhysicsAsset;
        ClothConfigs: TMap<string, UE.ClothConfigBase>;
        ClothSharedSimConfig: UE.ClothConfigBase;
        ClothSimConfig: UE.ClothConfigBase;
        ChaosClothSimConfig: UE.ClothConfigBase;
        ClothLodData: TArray<UE.ClothLODDataCommon_Legacy>;
        LodData: TArray<UE.ClothLODDataCommon>;
        LodMap: TArray<number>;
        UsedBoneNames: TArray<string>;
        UsedBoneIndices: TArray<number>;
        ReferenceBoneIndex: number;
        CustomData: UE.ClothingAssetCustomData;
        ClothConfig: UE.ClothConfig_Legacy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingAssetCommon;
        static Load(InName: string): ClothingAssetCommon;
    
        __tid_ClothingAssetCommon_0__: boolean;
    }
    
    class ClothingAssetFactoryBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingAssetFactoryBase;
        static Load(InName: string): ClothingAssetFactoryBase;
    
        __tid_ClothingAssetFactoryBase_0__: boolean;
    }
    
    class ClothingAssetFactory extends UE.ClothingAssetFactoryBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingAssetFactory;
        static Load(InName: string): ClothingAssetFactory;
    
        __tid_ClothingAssetFactory_0__: boolean;
    }
    
    class ClothingSimulationFactoryNv extends UE.ClothingSimulationFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingSimulationFactoryNv;
        static Load(InName: string): ClothingSimulationFactoryNv;
    
        __tid_ClothingSimulationFactoryNv_0__: boolean;
    }
    
    class ClothingSimulationInteractorNv extends UE.ClothingSimulationInteractor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetAnimDriveDamperStiffness(InStiffness: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothingSimulationInteractorNv;
        static Load(InName: string): ClothingSimulationInteractorNv;
    
        __tid_ClothingSimulationInteractorNv_0__: boolean;
    }
    
    class MeshPaintSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VertexPreviewSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshPaintSettings;
        static Load(InName: string): MeshPaintSettings;
    
        __tid_MeshPaintSettings_0__: boolean;
    }
    
    class ClothPainterSettings extends UE.MeshPaintSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ViewMin: number;
        ViewMax: number;
        bAutoViewRange: boolean;
        AutoCalculatedViewMin: number;
        AutoCalculatedViewMax: number;
        ClothingAssets: TArray<UE.ClothingAssetCommon>;
        bFlipNormal: boolean;
        bCullBackface: boolean;
        Opacity: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothPainterSettings;
        static Load(InName: string): ClothPainterSettings;
    
        __tid_ClothPainterSettings_0__: boolean;
    }
    
    class ClothPaintTool_BrushSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PaintValue: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothPaintTool_BrushSettings;
        static Load(InName: string): ClothPaintTool_BrushSettings;
    
        __tid_ClothPaintTool_BrushSettings_0__: boolean;
    }
    
    class ClothPaintTool_FillSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Threshold: number;
        FillValue: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothPaintTool_FillSettings;
        static Load(InName: string): ClothPaintTool_FillSettings;
    
        __tid_ClothPaintTool_FillSettings_0__: boolean;
    }
    
    class ClothPaintTool_GradientSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GradientStartValue: number;
        GradientEndValue: number;
        bUseRegularBrush: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothPaintTool_GradientSettings;
        static Load(InName: string): ClothPaintTool_GradientSettings;
    
        __tid_ClothPaintTool_GradientSettings_0__: boolean;
    }
    
    class ClothPaintTool_SmoothSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Strength: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothPaintTool_SmoothSettings;
        static Load(InName: string): ClothPaintTool_SmoothSettings;
    
        __tid_ClothPaintTool_SmoothSettings_0__: boolean;
    }
    
    class ClothPhysicalMeshDataNv_Legacy extends UE.ClothPhysicalMeshDataBase_Legacy {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxDistances: TArray<number>;
        BackstopDistances: TArray<number>;
        BackstopRadiuses: TArray<number>;
        AnimDriveMultipliers: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothPhysicalMeshDataNv_Legacy;
        static Load(InName: string): ClothPhysicalMeshDataNv_Legacy;
    
        __tid_ClothPhysicalMeshDataNv_Legacy_0__: boolean;
    }
    
    class ClothSharedSimConfigBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ClothSharedSimConfigBase;
        static Load(InName: string): ClothSharedSimConfigBase;
    
        __tid_ClothSharedSimConfigBase_0__: boolean;
    }
    
    enum CloudStatus { CloudStatus_NotDone, CloudStatus_Done, CloudStatus_MAX, __typeKeyDoNoAccess}
    enum EPlatformInterfaceDataType { PIDT_None, PIDT_Int, PIDT_Float, PIDT_String, PIDT_Object, PIDT_Custom, PIDT_MAX, __typeKeyDoNoAccess}
    class PlatformInterfaceData {
        constructor();
        constructor(DataName: string, Type: UE.EPlatformInterfaceDataType, IntValue: number, FloatValue: number, StringValue: string, ObjectValue: UE.Object);
        DataName: string;
        Type: UE.EPlatformInterfaceDataType;
        IntValue: number;
        FloatValue: number;
        StringValue: string;
        ObjectValue: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PlatformInterfaceData_0__: boolean;
    }
    
    class PlatformInterfaceDelegateResult {
        constructor();
        constructor(bSuccessful: boolean, Data: UE.PlatformInterfaceData);
        bSuccessful: boolean;
        Data: UE.PlatformInterfaceData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PlatformInterfaceDelegateResult_0__: boolean;
    }
    
    class DelegateArray {
        constructor();
        constructor(Delegates: TArray<$Delegate<(Result: UE.PlatformInterfaceDelegateResult) => void>>);
        Delegates: TArray<$Delegate<(Result: UE.PlatformInterfaceDelegateResult) => void>>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DelegateArray_0__: boolean;
    }
    
    class PlatformInterfaceBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AllDelegates: TArray<UE.DelegateArray>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlatformInterfaceBase;
        static Load(InName: string): PlatformInterfaceBase;
    
        __tid_PlatformInterfaceBase_0__: boolean;
    }
    
    class CloudStorageBase extends UE.PlatformInterfaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LocalCloudFiles: TArray<string>;
        bSuppressDelegateCalls: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CloudStorageBase;
        static Load(InName: string): CloudStorageBase;
    
        __tid_CloudStorageBase_0__: boolean;
    }
    
    class ClusterNode {
        constructor();
        constructor(BoundMin: UE.Vector, FirstChild: number, BoundMax: UE.Vector, LastChild: number, FirstInstance: number, LastInstance: number, MinInstanceScale: UE.Vector, MaxInstanceScale: UE.Vector);
        BoundMin: UE.Vector;
        FirstChild: number;
        BoundMax: UE.Vector;
        LastChild: number;
        FirstInstance: number;
        LastInstance: number;
        MinInstanceScale: UE.Vector;
        MaxInstanceScale: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClusterNode_0__: boolean;
    }
    
    class ClusterNode_DEPRECATED {
        constructor();
        constructor(BoundMin: UE.Vector, FirstChild: number, BoundMax: UE.Vector, LastChild: number, FirstInstance: number, LastInstance: number);
        BoundMin: UE.Vector;
        FirstChild: number;
        BoundMax: UE.Vector;
        LastChild: number;
        FirstInstance: number;
        LastInstance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ClusterNode_DEPRECATED_0__: boolean;
    }
    
    class CodeGenerator extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Gen() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CodeGenerator;
        static Load(InName: string): CodeGenerator;
    
        __tid_CodeGenerator_0__: boolean;
    }
    
    class CollectionReference {
        constructor();
        constructor(CollectionName: string);
        CollectionName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollectionReference_0__: boolean;
    }
    
    class RigidBodyContactInfo {
        constructor();
        constructor(ContactPosition: UE.Vector, ContactNormal: UE.Vector, ContactPenetration: number, PhysMaterial: FixSizeArray<UE.PhysicalMaterial>);
        ContactPosition: UE.Vector;
        ContactNormal: UE.Vector;
        ContactPenetration: number;
        PhysMaterial: FixSizeArray<UE.PhysicalMaterial>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RigidBodyContactInfo_0__: boolean;
    }
    
    class CollisionImpactData {
        constructor();
        constructor(ContactInfos: TArray<UE.RigidBodyContactInfo>, TotalNormalImpulse: UE.Vector, TotalFrictionImpulse: UE.Vector, bIsVelocityDeltaUnderThreshold: boolean);
        ContactInfos: TArray<UE.RigidBodyContactInfo>;
        TotalNormalImpulse: UE.Vector;
        TotalFrictionImpulse: UE.Vector;
        bIsVelocityDeltaUnderThreshold: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollisionImpactData_0__: boolean;
    }
    
    class CollisionResponseTemplate {
        constructor();
        constructor(Name: string, CollisionEnabled: UE.ECollisionEnabled, bCanModify: boolean, ObjectTypeName: string, CustomResponses: TArray<UE.ResponseChannel>, HelpMessage: string);
        Name: string;
        CollisionEnabled: UE.ECollisionEnabled;
        bCanModify: boolean;
        ObjectTypeName: string;
        CustomResponses: TArray<UE.ResponseChannel>;
        HelpMessage: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollisionResponseTemplate_0__: boolean;
    }
    
    class CustomChannelSetup {
        constructor();
        constructor(Channel: UE.ECollisionChannel, DefaultResponse: UE.ECollisionResponse, bTraceType: boolean, bStaticObject: boolean, Name: string);
        Channel: UE.ECollisionChannel;
        DefaultResponse: UE.ECollisionResponse;
        bTraceType: boolean;
        bStaticObject: boolean;
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomChannelSetup_0__: boolean;
    }
    
    class CustomProfile {
        constructor();
        constructor(Name: string, CustomResponses: TArray<UE.ResponseChannel>);
        Name: string;
        CustomResponses: TArray<UE.ResponseChannel>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomProfile_0__: boolean;
    }
    
    class Redirector {
        constructor();
        constructor(OldName: string, NewName: string);
        OldName: string;
        NewName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Redirector_0__: boolean;
    }
    
    class CollisionProfile extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Profiles: TArray<UE.CollisionResponseTemplate>;
        DefaultChannelResponses: TArray<UE.CustomChannelSetup>;
        EditProfiles: TArray<UE.CustomProfile>;
        ProfileRedirects: TArray<UE.Redirector>;
        CollisionChannelRedirects: TArray<UE.Redirector>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CollisionProfile;
        static Load(InName: string): CollisionProfile;
    
        __tid_CollisionProfile_0__: boolean;
    }
    
    class CollisionProfileName {
        constructor();
        constructor(Name: string);
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CollisionProfileName_0__: boolean;
    }
    
    class ColorBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetLinearValue() : UE.LinearColor;
        GetSlateValue() : UE.SlateColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ColorBinding;
        static Load(InName: string): ColorBinding;
    
        __tid_ColorBinding_0__: boolean;
    }
    
    class ColorGradePerRangeSettings {
        constructor();
        constructor(Saturation: UE.Vector4, Contrast: UE.Vector4, Gamma: UE.Vector4, Gain: UE.Vector4, Offset: UE.Vector4);
        Saturation: UE.Vector4;
        Contrast: UE.Vector4;
        Gamma: UE.Vector4;
        Gain: UE.Vector4;
        Offset: UE.Vector4;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ColorGradePerRangeSettings_0__: boolean;
    }
    
    class ColorGradingSettings {
        constructor();
        constructor(Global: UE.ColorGradePerRangeSettings, Shadows: UE.ColorGradePerRangeSettings, Midtones: UE.ColorGradePerRangeSettings, Highlights: UE.ColorGradePerRangeSettings, ShadowsMax: number, HighlightsMin: number);
        Global: UE.ColorGradePerRangeSettings;
        Shadows: UE.ColorGradePerRangeSettings;
        Midtones: UE.ColorGradePerRangeSettings;
        Highlights: UE.ColorGradePerRangeSettings;
        ShadowsMax: number;
        HighlightsMin: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ColorGradingSettings_0__: boolean;
    }
    
    class MovieSceneTangentData {
        constructor();
        constructor(ArriveTangent: number, LeaveTangent: number, ArriveTangentWeight: number, LeaveTangentWeight: number, TangentWeightMode: UE.ERichCurveTangentWeightMode);
        ArriveTangent: number;
        LeaveTangent: number;
        ArriveTangentWeight: number;
        LeaveTangentWeight: number;
        TangentWeightMode: UE.ERichCurveTangentWeightMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTangentData_0__: boolean;
    }
    
    class MovieSceneFloatValue {
        constructor();
        constructor(Value: number, Tangent: UE.MovieSceneTangentData, InterpMode: UE.ERichCurveInterpMode, TangentMode: UE.ERichCurveTangentMode, PaddingByte: number);
        Value: number;
        Tangent: UE.MovieSceneTangentData;
        InterpMode: UE.ERichCurveInterpMode;
        TangentMode: UE.ERichCurveTangentMode;
        PaddingByte: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneFloatValue_0__: boolean;
    }
    
    class KeyHandleLookupTable {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KeyHandleLookupTable_0__: boolean;
    }
    
    class MovieSceneKeyHandleMap extends UE.KeyHandleLookupTable {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneKeyHandleMap_0__: boolean;
    }
    
    class MovieSceneFloatChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(PreInfinityExtrap: UE.ERichCurveExtrapolation, PostInfinityExtrap: UE.ERichCurveExtrapolation, Times: TArray<UE.FrameNumber>, Values: TArray<UE.MovieSceneFloatValue>, DefaultValue: number, bHasDefaultValue: boolean, KeyHandles: UE.MovieSceneKeyHandleMap, TickResolution: UE.FrameRate);
        PreInfinityExtrap: UE.ERichCurveExtrapolation;
        PostInfinityExtrap: UE.ERichCurveExtrapolation;
        Times: TArray<UE.FrameNumber>;
        Values: TArray<UE.MovieSceneFloatValue>;
        DefaultValue: number;
        bHasDefaultValue: boolean;
        KeyHandles: UE.MovieSceneKeyHandleMap;
        TickResolution: UE.FrameRate;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneFloatChannel_0__: boolean;
    }
    
    class ColorParameterNameAndCurves {
        constructor();
        constructor(ParameterName: string, RedCurve: UE.MovieSceneFloatChannel, GreenCurve: UE.MovieSceneFloatChannel, BlueCurve: UE.MovieSceneFloatChannel, AlphaCurve: UE.MovieSceneFloatChannel);
        ParameterName: string;
        RedCurve: UE.MovieSceneFloatChannel;
        GreenCurve: UE.MovieSceneFloatChannel;
        BlueCurve: UE.MovieSceneFloatChannel;
        AlphaCurve: UE.MovieSceneFloatChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ColorParameterNameAndCurves_0__: boolean;
    }
    
    class ComboBox extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Items: TArray<UE.Object>;
        OnGenerateWidgetEvent: $Delegate<(Item: $Nullable<UE.Object>) => UE.Widget>;
        bIsFocusable: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ComboBox;
        static Load(InName: string): ComboBox;
    
        __tid_ComboBox_0__: boolean;
    }
    
    class ComboButtonStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(ButtonStyle: UE.ButtonStyle, DownArrowImage: UE.SlateBrush, ShadowOffset: UE.Vector2D, ShadowColorAndOpacity: UE.LinearColor, MenuBorderBrush: UE.SlateBrush, MenuBorderPadding: UE.Margin);
        ButtonStyle: UE.ButtonStyle;
        DownArrowImage: UE.SlateBrush;
        ShadowOffset: UE.Vector2D;
        ShadowColorAndOpacity: UE.LinearColor;
        MenuBorderBrush: UE.SlateBrush;
        MenuBorderPadding: UE.Margin;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComboButtonStyle_0__: boolean;
    }
    
    class ComboBoxStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(ComboButtonStyle: UE.ComboButtonStyle, PressedSlateSound: UE.SlateSound, SelectionChangeSlateSound: UE.SlateSound, PressedSound: string, SelectionChangeSound: string);
        ComboButtonStyle: UE.ComboButtonStyle;
        PressedSlateSound: UE.SlateSound;
        SelectionChangeSlateSound: UE.SlateSound;
        PressedSound: string;
        SelectionChangeSound: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComboBoxStyle_0__: boolean;
    }
    
    class TableRowStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(SelectorFocusedBrush: UE.SlateBrush, ActiveHoveredBrush: UE.SlateBrush, ActiveBrush: UE.SlateBrush, InactiveHoveredBrush: UE.SlateBrush, InactiveBrush: UE.SlateBrush, EvenRowBackgroundHoveredBrush: UE.SlateBrush, EvenRowBackgroundBrush: UE.SlateBrush, OddRowBackgroundHoveredBrush: UE.SlateBrush, OddRowBackgroundBrush: UE.SlateBrush, TextColor: UE.SlateColor, SelectedTextColor: UE.SlateColor, DropIndicator_Above: UE.SlateBrush, DropIndicator_Onto: UE.SlateBrush, DropIndicator_Below: UE.SlateBrush, ActiveHighlightedBrush: UE.SlateBrush, InactiveHighlightedBrush: UE.SlateBrush);
        SelectorFocusedBrush: UE.SlateBrush;
        ActiveHoveredBrush: UE.SlateBrush;
        ActiveBrush: UE.SlateBrush;
        InactiveHoveredBrush: UE.SlateBrush;
        InactiveBrush: UE.SlateBrush;
        EvenRowBackgroundHoveredBrush: UE.SlateBrush;
        EvenRowBackgroundBrush: UE.SlateBrush;
        OddRowBackgroundHoveredBrush: UE.SlateBrush;
        OddRowBackgroundBrush: UE.SlateBrush;
        TextColor: UE.SlateColor;
        SelectedTextColor: UE.SlateColor;
        DropIndicator_Above: UE.SlateBrush;
        DropIndicator_Onto: UE.SlateBrush;
        DropIndicator_Below: UE.SlateBrush;
        ActiveHighlightedBrush: UE.SlateBrush;
        InactiveHighlightedBrush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TableRowStyle_0__: boolean;
    }
    
    class FontOutlineSettings {
        constructor();
        constructor(OutlineSize: number, bSeparateFillAlpha: boolean, bApplyOutlineToDropShadows: boolean, OutlineMaterial: UE.Object, OutlineColor: UE.LinearColor);
        OutlineSize: number;
        bSeparateFillAlpha: boolean;
        bApplyOutlineToDropShadows: boolean;
        OutlineMaterial: UE.Object;
        OutlineColor: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FontOutlineSettings_0__: boolean;
    }
    
    class SlateFontInfo {
        constructor();
        constructor(FontObject: UE.Object, FontMaterial: UE.Object, OutlineSettings: UE.FontOutlineSettings, TypefaceFontName: string, Size: number, LetterSpacing: number, FontName: string, Hinting: UE.EFontHinting);
        FontObject: UE.Object;
        FontMaterial: UE.Object;
        OutlineSettings: UE.FontOutlineSettings;
        TypefaceFontName: string;
        Size: number;
        LetterSpacing: number;
        FontName: string;
        Hinting: UE.EFontHinting;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlateFontInfo_0__: boolean;
    }
    
    enum ESelectInfo { OnKeyPress, OnNavigation, OnMouseClick, Direct, ESelectInfo_MAX, __typeKeyDoNoAccess}
    class ComboBoxString extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultOptions: TArray<string>;
        SelectedOption: string;
        WidgetStyle: UE.ComboBoxStyle;
        ItemStyle: UE.TableRowStyle;
        ContentPadding: UE.Margin;
        MaxListHeight: number;
        HasDownArrow: boolean;
        EnableGamepadNavigationMode: boolean;
        Font: UE.SlateFontInfo;
        ForegroundColor: UE.SlateColor;
        bIsFocusable: boolean;
        OnGenerateWidgetEvent: $Delegate<(Item: string) => UE.Widget>;
        OnSelectionChanged: $MulticastDelegate<(SelectedItem: string, SelectionType: UE.ESelectInfo) => void>;
        OnOpening: $MulticastDelegate<() => void>;
        AddOption(Option: string) : void;
        ClearOptions() : void;
        ClearSelection() : void;
        FindOptionIndex(Option: string) : number;
        GetOptionAtIndex(Index: number) : string;
        GetOptionCount() : number;
        GetSelectedIndex() : number;
        GetSelectedOption() : string;
        IsOpen() : boolean;
        OnOpeningEvent__DelegateSignature() : void;
        OnSelectionChangedEvent__DelegateSignature(SelectedItem: string, SelectionType: UE.ESelectInfo) : void;
        RefreshOptions() : void;
        RemoveOption(Option: string) : boolean;
        SetSelectedIndex(Index: number) : void;
        SetSelectedOption(Option: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ComboBoxString;
        static Load(InName: string): ComboBoxString;
    
        __tid_ComboBoxString_0__: boolean;
    }
    
    class ComboBoxWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComboBoxStyle: UE.ComboBoxStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ComboBoxWidgetStyle;
        static Load(InName: string): ComboBoxWidgetStyle;
    
        __tid_ComboBoxWidgetStyle_0__: boolean;
    }
    
    class ComboButtonWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComboButtonStyle: UE.ComboButtonStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ComboButtonWidgetStyle;
        static Load(InName: string): ComboButtonWidgetStyle;
    
        __tid_ComboButtonWidgetStyle_0__: boolean;
    }
    
    class ToolMenuContextBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenuContextBase;
        static Load(InName: string): ToolMenuContextBase;
    
        __tid_ToolMenuContextBase_0__: boolean;
    }
    
    class CommonResolutionMenuContext extends UE.ToolMenuContextBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CommonResolutionMenuContext;
        static Load(InName: string): CommonResolutionMenuContext;
    
        __tid_CommonResolutionMenuContext_0__: boolean;
    }
    
    class CompileAllBlueprintsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompileAllBlueprintsCommandlet;
        static Load(InName: string): CompileAllBlueprintsCommandlet;
    
        __tid_CompileAllBlueprintsCommandlet_0__: boolean;
    }
    
    class ComponentDelegateBinding extends UE.DynamicBlueprintBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComponentDelegateBindings: TArray<UE.BlueprintComponentDelegateBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ComponentDelegateBinding;
        static Load(InName: string): ComponentDelegateBinding;
    
        __tid_ComponentDelegateBinding_0__: boolean;
    }
    
    class ComponentMaskParameter {
        constructor();
        constructor(R: boolean, G: boolean, B: boolean, A: boolean);
        R: boolean;
        G: boolean;
        B: boolean;
        A: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentMaskParameter_0__: boolean;
    }
    
    class PropertyNameAndIndex {
        constructor();
        constructor(Name: string, Index: number);
        Name: string;
        Index: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyNameAndIndex_0__: boolean;
    }
    
    class ComponentPropertyPath {
        constructor();
        constructor(ParentOwningActor: TWeakObjectPtr<UE.Actor>, LastResortComponentPtr: TWeakObjectPtr<UE.ActorComponent>, PropertyChain: TArray<UE.PropertyNameAndIndex>);
        ParentOwningActor: TWeakObjectPtr<UE.Actor>;
        LastResortComponentPtr: TWeakObjectPtr<UE.ActorComponent>;
        PropertyChain: TArray<UE.PropertyNameAndIndex>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentPropertyPath_0__: boolean;
    }
    
    class ComponentSpacePose {
        constructor();
        constructor(Transforms: TArray<UE.Transform>, Names: TArray<string>);
        Transforms: TArray<UE.Transform>;
        Names: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentSpacePose_0__: boolean;
    }
    
    enum ESyncOption { Drive, Passive, Disabled, ESyncOption_MAX, __typeKeyDoNoAccess}
    class ComponentSync {
        constructor();
        constructor(Name: string, SyncOption: UE.ESyncOption);
        Name: string;
        SyncOption: UE.ESyncOption;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ComponentSync_0__: boolean;
    }
    
    class CompositeCurveTable extends UE.CurveTable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentTables: TArray<UE.CurveTable>;
        OldParentTables: TArray<UE.CurveTable>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompositeCurveTable;
        static Load(InName: string): CompositeCurveTable;
    
        __tid_CompositeCurveTable_0__: boolean;
    }
    
    class CompositeCurveTableFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompositeCurveTableFactory;
        static Load(InName: string): CompositeCurveTableFactory;
    
        __tid_CompositeCurveTableFactory_0__: boolean;
    }
    
    class DataTable extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RowStruct: UE.ScriptStruct;
        bStripFromClientBuilds: boolean;
        bIgnoreExtraFields: boolean;
        bIgnoreMissingFields: boolean;
        ImportKeyField: string;
        AssetImportData: UE.AssetImportData;
        ImportPath: string;
        RowStructName: string;
        RowsSerializedWithTags: TArray<number>;
        TemporarilyReferencedObjects: TSet<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataTable;
        static Load(InName: string): DataTable;
    
        __tid_DataTable_0__: boolean;
    }
    
    class CompositeDataTable extends UE.DataTable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentTables: TArray<UE.DataTable>;
        OldParentTables: TArray<UE.DataTable>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompositeDataTable;
        static Load(InName: string): CompositeDataTable;
    
        __tid_CompositeDataTable_0__: boolean;
    }
    
    class DataTableFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Struct: UE.ScriptStruct;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataTableFactory;
        static Load(InName: string): DataTableFactory;
    
        __tid_DataTableFactory_0__: boolean;
    }
    
    class CompositeDataTableFactory extends UE.DataTableFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompositeDataTableFactory;
        static Load(InName: string): CompositeDataTableFactory;
    
        __tid_CompositeDataTableFactory_0__: boolean;
    }
    
    class CompositionGraphCapturePasses {
        constructor();
        constructor(Value: TArray<string>);
        Value: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompositionGraphCapturePasses_0__: boolean;
    }
    
    enum EHDRCaptureGamut { HCGM_Rec709, HCGM_P3DCI, HCGM_Rec2020, HCGM_ACES, HCGM_ACEScg, HCGM_Linear, HCGM_MAX, __typeKeyDoNoAccess}
    class CompositionGraphCaptureProtocol extends UE.MovieSceneImageCaptureProtocolBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IncludeRenderPasses: UE.CompositionGraphCapturePasses;
        bCaptureFramesInHDR: boolean;
        HDRCompressionQuality: number;
        CaptureGamut: UE.EHDRCaptureGamut;
        PostProcessingMaterial: UE.SoftObjectPath;
        bDisableScreenPercentage: boolean;
        PostProcessingMaterialPtr: UE.MaterialInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompositionGraphCaptureProtocol;
        static Load(InName: string): CompositionGraphCaptureProtocol;
    
        __tid_CompositionGraphCaptureProtocol_0__: boolean;
    }
    
    class CompressAnimationsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompressAnimationsCommandlet;
        static Load(InName: string): CompressAnimationsCommandlet;
    
        __tid_CompressAnimationsCommandlet_0__: boolean;
    }
    
    class FrameGrabberProtocol extends UE.MovieSceneImageCaptureProtocolBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FrameGrabberProtocol;
        static Load(InName: string): FrameGrabberProtocol;
    
        __tid_FrameGrabberProtocol_0__: boolean;
    }
    
    class ImageSequenceProtocol extends UE.FrameGrabberProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImageSequenceProtocol;
        static Load(InName: string): ImageSequenceProtocol;
    
        __tid_ImageSequenceProtocol_0__: boolean;
    }
    
    class CompressedImageSequenceProtocol extends UE.ImageSequenceProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CompressionQuality: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CompressedImageSequenceProtocol;
        static Load(InName: string): CompressedImageSequenceProtocol;
    
        __tid_CompressedImageSequenceProtocol_0__: boolean;
    }
    
    class CompressedRichCurve {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompressedRichCurve_0__: boolean;
    }
    
    class CompressedTrack {
        constructor();
        constructor(ByteStream: TArray<number>, Times: TArray<number>, Mins: FixSizeArray<number>, Ranges: FixSizeArray<number>);
        ByteStream: TArray<number>;
        Times: TArray<number>;
        Mins: FixSizeArray<number>;
        Ranges: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CompressedTrack_0__: boolean;
    }
    
    class EditorBrushBuilder extends UE.BrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorBrushBuilder;
        static Load(InName: string): EditorBrushBuilder;
    
        __tid_EditorBrushBuilder_0__: boolean;
    }
    
    class ConeBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Z: number;
        CapZ: number;
        OuterRadius: number;
        InnerRadius: number;
        Sides: number;
        GroupName: string;
        AlignToSide: boolean;
        Hollow: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ConeBuilder;
        static Load(InName: string): ConeBuilder;
    
        __tid_ConeBuilder_0__: boolean;
    }
    
    class PropertyConfigFileDisplayRow extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConfigFileName: string;
        bIsFileWritable: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyConfigFileDisplayRow;
        static Load(InName: string): PropertyConfigFileDisplayRow;
    
        __tid_PropertyConfigFileDisplayRow_0__: boolean;
    }
    
    class ConfigHierarchyPropertyView extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConfigFilePropertyObjects: TArray<UE.PropertyConfigFileDisplayRow>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ConfigHierarchyPropertyView;
        static Load(InName: string): ConfigHierarchyPropertyView;
    
        __tid_ConfigHierarchyPropertyView_0__: boolean;
    }
    
    class ConnectionCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(ErrorCode: number) => void>;
        OnFailure: $MulticastDelegate<(ErrorCode: number) => void>;
        static ConnectToService(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>) : UE.ConnectionCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ConnectionCallbackProxy;
        static Load(InName: string): ConnectionCallbackProxy;
    
        __tid_ConnectionCallbackProxy_0__: boolean;
    }
    
    class ConsoleSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxScrollbackSize: number;
        ManualAutoCompleteList: TArray<UE.AutoCompleteCommand>;
        AutoCompleteMapPaths: TArray<string>;
        BackgroundOpacityPercentage: number;
        bOrderTopToBottom: boolean;
        bDisplayHelpInAutoComplete: boolean;
        InputColor: UE.Color;
        HistoryColor: UE.Color;
        AutoCompleteCommandColor: UE.Color;
        AutoCompleteCVarColor: UE.Color;
        AutoCompleteFadedColor: UE.Color;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ConsoleSettings;
        static Load(InName: string): ConsoleSettings;
    
        __tid_ConsoleSettings_0__: boolean;
    }
    
    enum EConstantQFFTSizeEnum { Min, XXSmall, XSmall, Small, Medium, Large, XLarge, XXLarge, Max, EConstantQFFTSizeEnum_MAX, __typeKeyDoNoAccess}
    enum EConstantQNormalizationEnum { EqualEuclideanNorm, EqualEnergy, EqualAmplitude, EConstantQNormalizationEnum_MAX, __typeKeyDoNoAccess}
    class ConstantQNRTSettings extends UE.AudioSynesthesiaNRTSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartingFrequency: number;
        NumBands: number;
        NumBandsPerOctave: number;
        AnalysisPeriod: number;
        bDownmixToMono: boolean;
        FFTSize: UE.EConstantQFFTSizeEnum;
        WindowType: UE.EFFTWindowType;
        SpectrumType: UE.EAudioSpectrumType;
        BandWidthStretch: number;
        CQTNormalization: UE.EConstantQNormalizationEnum;
        NoiseFloorDb: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ConstantQNRTSettings;
        static Load(InName: string): ConstantQNRTSettings;
    
        __tid_ConstantQNRTSettings_0__: boolean;
    }
    
    class ConstantQNRT extends UE.AudioSynesthesiaNRT {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.ConstantQNRTSettings;
        GetChannelConstantQAtTime(InSeconds: number, InChannel: number, OutConstantQ: $Ref<TArray<number>>) : void;
        GetNormalizedChannelConstantQAtTime(InSeconds: number, InChannel: number, OutConstantQ: $Ref<TArray<number>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ConstantQNRT;
        static Load(InName: string): ConstantQNRT;
    
        __tid_ConstantQNRT_0__: boolean;
    }
    
    class ConstrainComponentPropName {
        constructor();
        constructor(ComponentName: string);
        ComponentName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstrainComponentPropName_0__: boolean;
    }
    
    enum EConstraintType { Transform, Aim, MAX, __typeKeyDoNoAccess}
    class ConstraintDescriptor {
        constructor();
        constructor(Type: UE.EConstraintType);
        Type: UE.EConstraintType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintDescriptor_0__: boolean;
    }
    
    class ConstraintData {
        constructor();
        constructor(Constraint: UE.ConstraintDescriptor, Weight: number, bMaintainOffset: boolean, Offset: UE.Transform, CurrentTransform: UE.Transform);
        Constraint: UE.ConstraintDescriptor;
        Weight: number;
        bMaintainOffset: boolean;
        Offset: UE.Transform;
        CurrentTransform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintData_0__: boolean;
    }
    
    class ConstraintDescription {
        constructor();
        constructor(bTranslation: boolean, bRotation: boolean, bScale: boolean, bParent: boolean, TranslationAxes: UE.FilterOptionPerAxis, RotationAxes: UE.FilterOptionPerAxis, ScaleAxes: UE.FilterOptionPerAxis);
        bTranslation: boolean;
        bRotation: boolean;
        bScale: boolean;
        bParent: boolean;
        TranslationAxes: UE.FilterOptionPerAxis;
        RotationAxes: UE.FilterOptionPerAxis;
        ScaleAxes: UE.FilterOptionPerAxis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintDescription_0__: boolean;
    }
    
    class ConstraintOffset {
        constructor();
        constructor(Translation: UE.Vector, Rotation: UE.Quat, Scale: UE.Vector, Parent: UE.Transform);
        Translation: UE.Vector;
        Rotation: UE.Quat;
        Scale: UE.Vector;
        Parent: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConstraintOffset_0__: boolean;
    }
    
    enum EnumInt32 { VM1, V0, V1, V2, V3, EnumInt32_MAX, __typeKeyDoNoAccess}
    enum EnumInt8Min { VINT8_MIN, VINT8_MAX, __typeKeyDoNoAccess}
    enum EnumInt8Max { VINT8_MAX, __typeKeyDoNoAccess}
    class ContainersTest extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Int32Array: TArray<number>;
        Int32ArrayWithInit: TArray<number>;
        UInt32Array: TArray<number>;
        Int64Array: TArray<bigint>;
        UInt64Array: TArray<bigint>;
        FloatArray: TArray<number>;
        DoubleArray: TArray<number>;
        BoolArray: TArray<boolean>;
        EnumInt32Array: TArray<UE.EnumInt32>;
        EnumInt8MinArray: TArray<UE.EnumInt8Min>;
        EnumInt8MaxArray: TArray<UE.EnumInt8Max>;
        FStringArray: TArray<string>;
        FNameArray: TArray<string>;
        FTextArray: TArray<string>;
        Int32FixSizeArray: FixSizeArray<number>;
        Int32Set: TSet<number>;
        FStringSet: TSet<string>;
        Int32ToStrMap: TMap<number, string>;
        StrToStrMap: TMap<string, string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContainersTest;
        static Load(InName: string): ContainersTest;
    
        __tid_ContainersTest_0__: boolean;
    }
    
    class ContentBrowserAddNewContextMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserAddNewContextMenuContext;
        static Load(InName: string): ContentBrowserAddNewContextMenuContext;
    
        __tid_ContentBrowserAddNewContextMenuContext_0__: boolean;
    }
    
    class ContentBrowserAssetContextMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectedObjects: TArray<TWeakObjectPtr<UE.Object>>;
        CommonClass: UE.Class;
        bCanBeModified: boolean;
        GetSelectedObjects() : TArray<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserAssetContextMenuContext;
        static Load(InName: string): ContentBrowserAssetContextMenuContext;
    
        __tid_ContentBrowserAssetContextMenuContext_0__: boolean;
    }
    
    class ContentBrowserDataSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserDataSource;
        static Load(InName: string): ContentBrowserDataSource;
    
        __tid_ContentBrowserDataSource_0__: boolean;
    }
    
    class ContentBrowserAssetDataSource extends UE.ContentBrowserDataSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserAssetDataSource;
        static Load(InName: string): ContentBrowserAssetDataSource;
    
        __tid_ContentBrowserAssetDataSource_0__: boolean;
    }
    
    class ContentBrowserAssetViewContextMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserAssetViewContextMenuContext;
        static Load(InName: string): ContentBrowserAssetViewContextMenuContext;
    
        __tid_ContentBrowserAssetViewContextMenuContext_0__: boolean;
    }
    
    class ContentBrowserClassDataSource extends UE.ContentBrowserDataSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserClassDataSource;
        static Load(InName: string): ContentBrowserClassDataSource;
    
        __tid_ContentBrowserClassDataSource_0__: boolean;
    }
    
    class ContentBrowserCompiledAssetDataFilter {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserCompiledAssetDataFilter_0__: boolean;
    }
    
    class ContentBrowserCompiledClassDataFilter {
        constructor();
        constructor(ValidClasses: TSet<UE.Class>, ValidFolders: TSet<string>);
        ValidClasses: TSet<UE.Class>;
        ValidFolders: TSet<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserCompiledClassDataFilter_0__: boolean;
    }
    
    class ContentBrowserCompiledSubsystemFilter {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserCompiledSubsystemFilter_0__: boolean;
    }
    
    class ContentBrowserDataClassFilter {
        constructor();
        constructor(ClassNamesToInclude: TArray<string>, ClassNamesToExclude: TArray<string>, bRecursiveClassNamesToInclude: boolean, bRecursiveClassNamesToExclude: boolean);
        ClassNamesToInclude: TArray<string>;
        ClassNamesToExclude: TArray<string>;
        bRecursiveClassNamesToInclude: boolean;
        bRecursiveClassNamesToExclude: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserDataClassFilter_0__: boolean;
    }
    
    class ContentBrowserDataCollectionFilter {
        constructor();
        constructor(bIncludeChildCollections: boolean);
        bIncludeChildCollections: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserDataCollectionFilter_0__: boolean;
    }
    
    enum EContentBrowserItemTypeFilter { IncludeNone, IncludeFolders, IncludeFiles, IncludeAll, EContentBrowserItemTypeFilter_MAX, __typeKeyDoNoAccess}
    enum EContentBrowserItemCategoryFilter { IncludeNone, IncludeAssets, IncludeClasses, IncludeCollections, IncludeMisc, IncludeAll, EContentBrowserItemCategoryFilter_MAX, __typeKeyDoNoAccess}
    enum EContentBrowserItemAttributeFilter { IncludeNone, IncludeProject, IncludeEngine, IncludePlugins, IncludeDeveloper, IncludeLocalized, IncludeAll, EContentBrowserItemAttributeFilter_MAX, __typeKeyDoNoAccess}
    class ContentBrowserDataFilter {
        constructor();
        constructor(bRecursivePaths: boolean, ItemTypeFilter: UE.EContentBrowserItemTypeFilter, ItemCategoryFilter: UE.EContentBrowserItemCategoryFilter, ItemAttributeFilter: UE.EContentBrowserItemAttributeFilter);
        bRecursivePaths: boolean;
        ItemTypeFilter: UE.EContentBrowserItemTypeFilter;
        ItemCategoryFilter: UE.EContentBrowserItemCategoryFilter;
        ItemAttributeFilter: UE.EContentBrowserItemAttributeFilter;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserDataFilter_0__: boolean;
    }
    
    class ContentBrowserDataLegacyFilter {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserDataLegacyFilter_0__: boolean;
    }
    
    enum EContentBrowserDataMenuContext_AddNewMenuDomain { Toolbar, AssetView, PathView, EContentBrowserDataMenuContext_MAX, __typeKeyDoNoAccess}
    class ContentBrowserDataMenuContext_AddNewMenu extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectedPaths: TArray<string>;
        OwnerDomain: UE.EContentBrowserDataMenuContext_AddNewMenuDomain;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserDataMenuContext_AddNewMenu;
        static Load(InName: string): ContentBrowserDataMenuContext_AddNewMenu;
    
        __tid_ContentBrowserDataMenuContext_AddNewMenu_0__: boolean;
    }
    
    class ContentBrowserItem {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserItem_0__: boolean;
    }
    
    class ContentBrowserDataMenuContext_DragDropMenu extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DropTargetItem: UE.ContentBrowserItem;
        DraggedItems: TArray<UE.ContentBrowserItem>;
        bCanMove: boolean;
        bCanCopy: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserDataMenuContext_DragDropMenu;
        static Load(InName: string): ContentBrowserDataMenuContext_DragDropMenu;
    
        __tid_ContentBrowserDataMenuContext_DragDropMenu_0__: boolean;
    }
    
    class ContentBrowserDataMenuContext_FileMenu extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectedItems: TArray<UE.ContentBrowserItem>;
        bCanBeModified: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserDataMenuContext_FileMenu;
        static Load(InName: string): ContentBrowserDataMenuContext_FileMenu;
    
        __tid_ContentBrowserDataMenuContext_FileMenu_0__: boolean;
    }
    
    class ContentBrowserDataMenuContext_FolderMenu extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectedItems: TArray<UE.ContentBrowserItem>;
        bCanBeModified: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserDataMenuContext_FolderMenu;
        static Load(InName: string): ContentBrowserDataMenuContext_FolderMenu;
    
        __tid_ContentBrowserDataMenuContext_FolderMenu_0__: boolean;
    }
    
    class ContentBrowserDataObjectFilter {
        constructor();
        constructor(ObjectNamesToInclude: TArray<string>, ObjectNamesToExclude: TArray<string>, bOnDiskObjectsOnly: boolean);
        ObjectNamesToInclude: TArray<string>;
        ObjectNamesToExclude: TArray<string>;
        bOnDiskObjectsOnly: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserDataObjectFilter_0__: boolean;
    }
    
    class ContentBrowserDataPackageFilter {
        constructor();
        constructor(PackageNamesToInclude: TArray<string>, PackageNamesToExclude: TArray<string>, PackagePathsToInclude: TArray<string>, PackagePathsToExclude: TArray<string>, bRecursivePackagePathsToInclude: boolean, bRecursivePackagePathsToExclude: boolean);
        PackageNamesToInclude: TArray<string>;
        PackageNamesToExclude: TArray<string>;
        PackagePathsToInclude: TArray<string>;
        PackagePathsToExclude: TArray<string>;
        bRecursivePackagePathsToInclude: boolean;
        bRecursivePackagePathsToExclude: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserDataPackageFilter_0__: boolean;
    }
    
    class ContentBrowserDataSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnabledDataSources: TArray<string>;
        ActivateAllDataSources() : void;
        ActivateDataSource(Name: string) : boolean;
        DeactivateAllDataSources() : void;
        DeactivateDataSource(Name: string) : boolean;
        GetActiveDataSources() : TArray<string>;
        GetAvailableDataSources() : TArray<string>;
        GetItemAtPath(InPath: string, InItemTypeFilter: UE.EContentBrowserItemTypeFilter) : UE.ContentBrowserItem;
        GetItemsAtPath(InPath: string, InItemTypeFilter: UE.EContentBrowserItemTypeFilter) : TArray<UE.ContentBrowserItem>;
        GetItemsUnderPath(InPath: string, InFilter: UE.ContentBrowserDataFilter) : TArray<UE.ContentBrowserItem>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserDataSubsystem;
        static Load(InName: string): ContentBrowserDataSubsystem;
    
        __tid_ContentBrowserDataSubsystem_0__: boolean;
    }
    
    class ContentBrowserFolderContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCanBeModified: boolean;
        NumAssetPaths: number;
        NumClassPaths: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserFolderContext;
        static Load(InName: string): ContentBrowserFolderContext;
    
        __tid_ContentBrowserFolderContext_0__: boolean;
    }
    
    class ContentBrowserFrontEndFilterExtension extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserFrontEndFilterExtension;
        static Load(InName: string): ContentBrowserFrontEndFilterExtension;
    
        __tid_ContentBrowserFrontEndFilterExtension_0__: boolean;
    }
    
    class ContentBrowserItemLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetDisplayName(Item: UE.ContentBrowserItem) : string;
        static GetVirtualPath(Item: UE.ContentBrowserItem) : string;
        static IsFile(Item: UE.ContentBrowserItem) : boolean;
        static IsFolder(Item: UE.ContentBrowserItem) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserItemLibrary;
        static Load(InName: string): ContentBrowserItemLibrary;
    
        __tid_ContentBrowserItemLibrary_0__: boolean;
    }
    
    class ContentBrowserPluginSettings {
        constructor();
        constructor(PluginName: string, RootFolderSortPriority: number);
        PluginName: string;
        RootFolderSortPriority: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ContentBrowserPluginSettings_0__: boolean;
    }
    
    class ContentBrowserSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumObjectsToLoadBeforeWarning: number;
        bOpenSourcesPanelByDefault: boolean;
        RealTimeThumbnails: boolean;
        DisplayFolders: boolean;
        DisplayEmptyFolders: boolean;
        FilterRecursively: boolean;
        NumObjectsInRecentList: number;
        bShowFullCollectionNameInToolTip: boolean;
        bEnableRealtimeMaterialInstanceThumbnails: boolean;
        DisplayEngineFolder: boolean;
        DisplayDevelopersFolder: boolean;
        DisplayL10NFolder: boolean;
        DisplayPluginFolders: boolean;
        DisplayFavorites: boolean;
        DockCollections: boolean;
        DisplayCppFolders: boolean;
        IncludeClassNames: boolean;
        IncludeAssetPaths: boolean;
        IncludeCollectionNames: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ContentBrowserSettings;
        static Load(InName: string): ContentBrowserSettings;
    
        __tid_ContentBrowserSettings_0__: boolean;
    }
    
    class ControlChannel extends UE.Channel {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ControlChannel;
        static Load(InName: string): ControlChannel;
    
        __tid_ControlChannel_0__: boolean;
    }
    
    class ControlFindReplaceString {
        constructor();
        constructor(Find: string, Replace: string);
        Find: string;
        Replace: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ControlFindReplaceString_0__: boolean;
    }
    
    class ControlPointMeshComponent extends UE.StaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSelected: boolean;
        VirtualTextureMainPassMaxDrawDistance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ControlPointMeshComponent;
        static Load(InName: string): ControlPointMeshComponent;
    
        __tid_ControlPointMeshComponent_0__: boolean;
    }
    
    class ControlPointMeshActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ControlPointMeshComponent: UE.ControlPointMeshComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ControlPointMeshActor;
        static Load(InName: string): ControlPointMeshActor;
    
        __tid_ControlPointMeshActor_0__: boolean;
    }
    
    enum FControlRigChannelEnum { Bool, Enum, Integer, Float, Vector2DX, Vector2DY, PositionX, PositionY, PositionZ, RotatorX, RotatorY, RotatorZ, ScaleX, ScaleY, ScaleZ, FControlRigChannelEnum_MAX, __typeKeyDoNoAccess}
    enum FTransformChannelEnum { TranslateX, TranslateY, TranslateZ, RotateX, RotateY, RotateZ, ScaleX, ScaleY, ScaleZ, FTransformChannelEnum_MAX, __typeKeyDoNoAccess}
    class ControlToTransformMappings {
        constructor();
        constructor(ControlChannel: UE.FControlRigChannelEnum, FBXChannel: UE.FTransformChannelEnum, bNegate: boolean);
        ControlChannel: UE.FControlRigChannelEnum;
        FBXChannel: UE.FTransformChannelEnum;
        bNegate: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ControlToTransformMappings_0__: boolean;
    }
    
    class ConvertLevelsToExternalActorsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ConvertLevelsToExternalActorsCommandlet;
        static Load(InName: string): ConvertLevelsToExternalActorsCommandlet;
    
        __tid_ConvertLevelsToExternalActorsCommandlet_0__: boolean;
    }
    
    class ConvolutionBloomSettings {
        constructor();
        constructor(Texture: UE.Texture2D, Size: number, CenterUV: UE.Vector2D, PreFilterMin: number, PreFilterMax: number, PreFilterMult: number, BufferScale: number);
        Texture: UE.Texture2D;
        Size: number;
        CenterUV: UE.Vector2D;
        PreFilterMin: number;
        PreFilterMax: number;
        PreFilterMult: number;
        BufferScale: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ConvolutionBloomSettings_0__: boolean;
    }
    
    class CookCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FullGCAssetClassNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CookCommandlet;
        static Load(InName: string): CookCommandlet;
    
        __tid_CookCommandlet_0__: boolean;
    }
    
    enum ECookProgressDisplayMode { Nothing, RemainingPackages, PackageNames, NamesAndRemainingPackages, Max, ECookProgressDisplayMode_MAX, __typeKeyDoNoAccess}
    enum EBlueprintComponentDataCookingMethod { Disabled, AllBlueprints, EnabledBlueprintsOnly, EBlueprintComponentDataCookingMethod_MAX, __typeKeyDoNoAccess}
    class CookerSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnableCookOnTheSide: boolean;
        bEnableBuildDDCInBackground: boolean;
        bIterativeCookingForLaunchOn: boolean;
        bIterativeCookingForFileCookContent: boolean;
        bCookOnTheFlyForLaunchOn: boolean;
        CookProgressDisplayMode: UE.ECookProgressDisplayMode;
        bIgnoreIniSettingsOutOfDateForIteration: boolean;
        bIgnoreScriptPackagesOutOfDateForIteration: boolean;
        bCompileBlueprintsInDevelopmentMode: boolean;
        BlueprintComponentDataCookingMethod: UE.EBlueprintComponentDataCookingMethod;
        ClassesExcludedOnDedicatedServer: TArray<string>;
        ModulesExcludedOnDedicatedServer: TArray<string>;
        ClassesExcludedOnDedicatedClient: TArray<string>;
        ModulesExcludedOnDedicatedClient: TArray<string>;
        VersionedIntRValues: TArray<string>;
        DefaultPVRTCQuality: number;
        DefaultASTCQualityBySpeed: number;
        DefaultASTCQualityBySize: number;
        bAllowCookedDataInEditorBuilds: boolean;
        bCookBlueprintComponentTemplateData: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CookerSettings;
        static Load(InName: string): CookerSettings;
    
        __tid_CookerSettings_0__: boolean;
    }
    
    class CookerStats extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Assets: TArray<TWeakObjectPtr<UE.Object>>;
        SizeBefore: number;
        SizeAfter: number;
        Path: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CookerStats;
        static Load(InName: string): CookerStats;
    
        __tid_CookerStats_0__: boolean;
    }
    
    class CookGlobalShadersCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CookGlobalShadersCommandlet;
        static Load(InName: string): CookGlobalShadersCommandlet;
    
        __tid_CookGlobalShadersCommandlet_0__: boolean;
    }
    
    class CookGlobalShadersDeviceHelperBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CookGlobalShadersDeviceHelperBase;
        static Load(InName: string): CookGlobalShadersDeviceHelperBase;
    
        __tid_CookGlobalShadersDeviceHelperBase_0__: boolean;
    }
    
    class CookGlobalShadersDeviceHelperStaged extends UE.CookGlobalShadersDeviceHelperBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CookGlobalShadersDeviceHelperStaged;
        static Load(InName: string): CookGlobalShadersDeviceHelperStaged;
    
        __tid_CookGlobalShadersDeviceHelperStaged_0__: boolean;
    }
    
    class CookOnTheFlyServer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CookOnTheFlyServer;
        static Load(InName: string): CookOnTheFlyServer;
    
        __tid_CookOnTheFlyServer_0__: boolean;
    }
    
    class CopySelectedInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CopySelectedInfo_0__: boolean;
    }
    
    enum ESourceColorChannel { Red, Green, Blue, Alpha, ESourceColorChannel_MAX, __typeKeyDoNoAccess}
    class CopyVertexColorToClothParams {
        constructor();
        constructor(ColorChannel: UE.ESourceColorChannel, ScalingFactor: number);
        ColorChannel: UE.ESourceColorChannel;
        ScalingFactor: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CopyVertexColorToClothParams_0__: boolean;
    }
    
    class CrashReporterSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UploadSymbolsPath: string;
        DownstreamStorage: string;
        RemoteStorage: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CrashReporterSettings;
        static Load(InName: string): CrashReporterSettings;
    
        __tid_CrashReporterSettings_0__: boolean;
    }
    
    class CrashReportsPrivacySettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSendUnattendedBugReports: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CrashReportsPrivacySettings;
        static Load(InName: string): CrashReportsPrivacySettings;
    
        __tid_CrashReportsPrivacySettings_0__: boolean;
    }
    
    class CreateSessionCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<() => void>;
        OnFailure: $MulticastDelegate<() => void>;
        static CreateSession(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, PublicConnections: number, bUseLAN: boolean) : UE.CreateSessionCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CreateSessionCallbackProxy;
        static Load(InName: string): CreateSessionCallbackProxy;
    
        __tid_CreateSessionCallbackProxy_0__: boolean;
    }
    
    class CrowdAgentInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CrowdAgentInterface;
        static Load(InName: string): CrowdAgentInterface;
    
        __tid_CrowdAgentInterface_0__: boolean;
    }
    
    class CrowdAvoidanceConfig {
        constructor();
        constructor(VelocityBias: number, DesiredVelocityWeight: number, CurrentVelocityWeight: number, SideBiasWeight: number, ImpactTimeWeight: number, ImpactTimeRange: number, CustomPatternIdx: number, AdaptiveDivisions: number, AdaptiveRings: number, AdaptiveDepth: number);
        VelocityBias: number;
        DesiredVelocityWeight: number;
        CurrentVelocityWeight: number;
        SideBiasWeight: number;
        ImpactTimeWeight: number;
        ImpactTimeRange: number;
        CustomPatternIdx: number;
        AdaptiveDivisions: number;
        AdaptiveRings: number;
        AdaptiveDepth: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CrowdAvoidanceConfig_0__: boolean;
    }
    
    class CrowdAvoidanceSamplingPattern {
        constructor();
        constructor(Angles: TArray<number>, Radii: TArray<number>);
        Angles: TArray<number>;
        Radii: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CrowdAvoidanceSamplingPattern_0__: boolean;
    }
    
    class CrowdFollowingComponent extends UE.PathFollowingComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CrowdAgentMoveDirection: UE.Vector;
        CharacterMovement: UE.CharacterMovementComponent;
        AvoidanceGroup: UE.NavAvoidanceMask;
        GroupsToAvoid: UE.NavAvoidanceMask;
        GroupsToIgnore: UE.NavAvoidanceMask;
        SuspendCrowdSteering(bSuspend: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CrowdFollowingComponent;
        static Load(InName: string): CrowdFollowingComponent;
    
        __tid_CrowdFollowingComponent_0__: boolean;
    }
    
    class CrowdManagerBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CrowdManagerBase;
        static Load(InName: string): CrowdManagerBase;
    
        __tid_CrowdManagerBase_0__: boolean;
    }
    
    class CrowdManager extends UE.CrowdManagerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MyNavData: UE.NavigationData;
        AvoidanceConfig: TArray<UE.CrowdAvoidanceConfig>;
        SamplingPatterns: TArray<UE.CrowdAvoidanceSamplingPattern>;
        MaxAgents: number;
        MaxAgentRadius: number;
        MaxAvoidedAgents: number;
        MaxAvoidedWalls: number;
        NavmeshCheckInterval: number;
        PathOptimizationInterval: number;
        SeparationDirClamp: number;
        PathOffsetRadiusMultiplier: number;
        bResolveCollisions: boolean;
        DebugDrawingWorld: UE.World;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CrowdManager;
        static Load(InName: string): CrowdManager;
    
        __tid_CrowdManager_0__: boolean;
    }
    
    class CryptoEncryptionKey {
        constructor();
        constructor(Guid: UE.Guid, Name: string, Key: string);
        Guid: UE.Guid;
        Name: string;
        Key: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CryptoEncryptionKey_0__: boolean;
    }
    
    class CryptoKeysCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CryptoKeysCommandlet;
        static Load(InName: string): CryptoKeysCommandlet;
    
        __tid_CryptoKeysCommandlet_0__: boolean;
    }
    
    class CryptoKeysSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EncryptionKey: string;
        SecondaryEncryptionKeys: TArray<UE.CryptoEncryptionKey>;
        bEncryptPakIniFiles: boolean;
        bEncryptPakIndex: boolean;
        bEncryptUAssetFiles: boolean;
        bEncryptAllAssetFiles: boolean;
        SigningPublicExponent: string;
        SigningModulus: string;
        SigningPrivateExponent: string;
        bEnablePakSigning: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CryptoKeysSettings;
        static Load(InName: string): CryptoKeysSettings;
    
        __tid_CryptoKeysSettings_0__: boolean;
    }
    
    enum ECSVImportType { ECSV_DataTable, ECSV_CurveTable, ECSV_CurveFloat, ECSV_CurveVector, ECSV_CurveLinearColor, ECSV_MAX, __typeKeyDoNoAccess}
    class CSVImportSettings {
        constructor();
        constructor(ImportRowStruct: UE.ScriptStruct, ImportType: UE.ECSVImportType, ImportCurveInterpMode: UE.ERichCurveInterpMode);
        ImportRowStruct: UE.ScriptStruct;
        ImportType: UE.ECSVImportType;
        ImportCurveInterpMode: UE.ERichCurveInterpMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CSVImportSettings_0__: boolean;
    }
    
    class CSVImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AutomatedImportSettings: UE.CSVImportSettings;
        DataTableImportOptions: UE.DataTable;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CSVImportFactory;
        static Load(InName: string): CSVImportFactory;
    
        __tid_CSVImportFactory_0__: boolean;
    }
    
    class CubeBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        X: number;
        Y: number;
        Z: number;
        WallThickness: number;
        GroupName: string;
        Hollow: boolean;
        Tessellated: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CubeBuilder;
        static Load(InName: string): CubeBuilder;
    
        __tid_CubeBuilder_0__: boolean;
    }
    
    class CullDistanceSizePair {
        constructor();
        constructor(Size: number, CullDistance: number);
        Size: number;
        CullDistance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CullDistanceSizePair_0__: boolean;
    }
    
    class CullDistanceVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CullDistances: TArray<UE.CullDistanceSizePair>;
        bEnabled: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CullDistanceVolume;
        static Load(InName: string): CullDistanceVolume;
    
        __tid_CullDistanceVolume_0__: boolean;
    }
    
    enum EFieldCullingOperationType { Field_Culling_Inside, Field_Culling_Outside, Field_Culling_Operation_Max, Field_Culling_MAX, __typeKeyDoNoAccess}
    class CullingField extends UE.FieldNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Culling: UE.FieldNodeBase;
        Field: UE.FieldNodeBase;
        Operation: UE.EFieldCullingOperationType;
        SetCullingField(Culling: $Nullable<UE.FieldNodeBase>, Field: $Nullable<UE.FieldNodeBase>, Operation: UE.EFieldCullingOperationType) : UE.CullingField;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CullingField;
        static Load(InName: string): CullingField;
    
        __tid_CullingField_0__: boolean;
    }
    
    class CultureStatistics {
        constructor();
        constructor(CultureName: string, WordCount: number);
        CultureName: string;
        WordCount: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CultureStatistics_0__: boolean;
    }
    
    class CurvedStairBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InnerRadius: number;
        StepHeight: number;
        StepWidth: number;
        AngleOfCurve: number;
        NumSteps: number;
        AddToFirstStep: number;
        GroupName: string;
        CounterClockwise: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurvedStairBuilder;
        static Load(InName: string): CurvedStairBuilder;
    
        __tid_CurvedStairBuilder_0__: boolean;
    }
    
    class CurveEditorFilterBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorFilterBase;
        static Load(InName: string): CurveEditorFilterBase;
    
        __tid_CurveEditorFilterBase_0__: boolean;
    }
    
    class CurveEditorBakeFilter extends UE.CurveEditorFilterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseSnapRateForInterval: boolean;
        BakeInterval: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorBakeFilter;
        static Load(InName: string): CurveEditorBakeFilter;
    
        __tid_CurveEditorBakeFilter_0__: boolean;
    }
    
    class KeyPosition {
        constructor();
        constructor(InputValue: number, OutputValue: number);
        InputValue: number;
        OutputValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KeyPosition_0__: boolean;
    }
    
    class KeyAttributes {
        constructor();
        constructor(bHasArriveTangent: boolean, bHasLeaveTangent: boolean, bHasInterpMode: boolean, bHasTangentMode: boolean, bHasTangentWeightMode: boolean, bHasArriveTangentWeight: boolean, bHasLeaveTangentWeight: boolean, ArriveTangent: number, LeaveTangent: number, InterpMode: UE.ERichCurveInterpMode, TangentMode: UE.ERichCurveTangentMode, TangentWeightMode: UE.ERichCurveTangentWeightMode, ArriveTangentWeight: number, LeaveTangentWeight: number);
        bHasArriveTangent: boolean;
        bHasLeaveTangent: boolean;
        bHasInterpMode: boolean;
        bHasTangentMode: boolean;
        bHasTangentWeightMode: boolean;
        bHasArriveTangentWeight: boolean;
        bHasLeaveTangentWeight: boolean;
        ArriveTangent: number;
        LeaveTangent: number;
        InterpMode: UE.ERichCurveInterpMode;
        TangentMode: UE.ERichCurveTangentMode;
        TangentWeightMode: UE.ERichCurveTangentWeightMode;
        ArriveTangentWeight: number;
        LeaveTangentWeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KeyAttributes_0__: boolean;
    }
    
    class CurveEditorCopyableCurveKeys extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        KeyPositions: TArray<UE.KeyPosition>;
        KeyAttributes: TArray<UE.KeyAttributes>;
        ShortDisplayName: string;
        LongDisplayName: string;
        IntentionName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorCopyableCurveKeys;
        static Load(InName: string): CurveEditorCopyableCurveKeys;
    
        __tid_CurveEditorCopyableCurveKeys_0__: boolean;
    }
    
    class CurveEditorCopyBuffer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Curves: TArray<UE.CurveEditorCopyableCurveKeys>;
        TimeOffset: number;
        bAbsolutePosition: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorCopyBuffer;
        static Load(InName: string): CurveEditorCopyBuffer;
    
        __tid_CurveEditorCopyBuffer_0__: boolean;
    }
    
    class CurveEditorEulerFilter extends UE.CurveEditorFilterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorEulerFilter;
        static Load(InName: string): CurveEditorEulerFilter;
    
        __tid_CurveEditorEulerFilter_0__: boolean;
    }
    
    enum ECurveEditorFFTFilterType { Lowpass, Highpass, ECurveEditorFFTFilterType_MAX, __typeKeyDoNoAccess}
    enum ECurveEditorFFTFilterClass { Butterworth, Chebyshev, ECurveEditorFFTFilterClass_MAX, __typeKeyDoNoAccess}
    class CurveEditorFFTFilter extends UE.CurveEditorFilterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CutoffFrequency: number;
        Type: UE.ECurveEditorFFTFilterType;
        Response: UE.ECurveEditorFFTFilterClass;
        Order: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorFFTFilter;
        static Load(InName: string): CurveEditorFFTFilter;
    
        __tid_CurveEditorFFTFilter_0__: boolean;
    }
    
    class CurveEditorKeyProxy extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorKeyProxy;
        static Load(InName: string): CurveEditorKeyProxy;
    
        __tid_CurveEditorKeyProxy_0__: boolean;
    }
    
    class CurveEditorReduceFilter extends UE.CurveEditorFilterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Tolerance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorReduceFilter;
        static Load(InName: string): CurveEditorReduceFilter;
    
        __tid_CurveEditorReduceFilter_0__: boolean;
    }
    
    class CurveEditorRetimeAnchor {
        constructor();
        constructor(ValueInSeconds: number, bIsSelected: boolean);
        ValueInSeconds: number;
        bIsSelected: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CurveEditorRetimeAnchor_0__: boolean;
    }
    
    class CurveEditorRetimeToolData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RetimingAnchors: TArray<UE.CurveEditorRetimeAnchor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorRetimeToolData;
        static Load(InName: string): CurveEditorRetimeToolData;
    
        __tid_CurveEditorRetimeToolData_0__: boolean;
    }
    
    enum ECurveEditorTangentVisibility { AllTangents, SelectedKeys, NoTangents, ECurveEditorTangentVisibility_MAX, __typeKeyDoNoAccess}
    enum ECurveEditorZoomPosition { CurrentTime, MousePosition, ECurveEditorZoomPosition_MAX, __typeKeyDoNoAccess}
    class CurveEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoFrameCurveEditor: boolean;
        bShowCurveEditorCurveToolTips: boolean;
        TangentVisibility: UE.ECurveEditorTangentVisibility;
        ZoomPosition: UE.ECurveEditorZoomPosition;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEditorSettings;
        static Load(InName: string): CurveEditorSettings;
    
        __tid_CurveEditorSettings_0__: boolean;
    }
    
    class CurveEdOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MinViewRange: number;
        MaxViewRange: number;
        BackgroundColor: UE.LinearColor;
        LabelColor: UE.LinearColor;
        SelectedLabelColor: UE.LinearColor;
        GridColor: UE.LinearColor;
        GridTextColor: UE.LinearColor;
        LabelBlockBkgColor: UE.LinearColor;
        SelectedKeyColor: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEdOptions;
        static Load(InName: string): CurveEdOptions;
    
        __tid_CurveEdOptions_0__: boolean;
    }
    
    class CurveEdPresetCurve extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveEdPresetCurve;
        static Load(InName: string): CurveEdPresetCurve;
    
        __tid_CurveEdPresetCurve_0__: boolean;
    }
    
    class CurveFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurveClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveFactory;
        static Load(InName: string): CurveFactory;
    
        __tid_CurveFactory_0__: boolean;
    }
    
    class CurveFloatFactory extends UE.CurveFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveFloatFactory;
        static Load(InName: string): CurveFloatFactory;
    
        __tid_CurveFloatFactory_0__: boolean;
    }
    
    class CurveImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveImportFactory;
        static Load(InName: string): CurveImportFactory;
    
        __tid_CurveImportFactory_0__: boolean;
    }
    
    enum CurveInterpolationType { AUTOINTERP, LINEAR, CONSTANT, CurveInterpolationType_MAX, __typeKeyDoNoAccess}
    class CurveLinearColorAtlasFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Height: number;
        Format: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveLinearColorAtlasFactory;
        static Load(InName: string): CurveLinearColorAtlasFactory;
    
        __tid_CurveLinearColorAtlasFactory_0__: boolean;
    }
    
    class CurveLinearColorFactory extends UE.CurveFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveLinearColorFactory;
        static Load(InName: string): CurveLinearColorFactory;
    
        __tid_CurveLinearColorFactory_0__: boolean;
    }
    
    class CurveLinearColorThumbnailRenderer extends UE.ThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveLinearColorThumbnailRenderer;
        static Load(InName: string): CurveLinearColorThumbnailRenderer;
    
        __tid_CurveLinearColorThumbnailRenderer_0__: boolean;
    }
    
    class CurveMetaData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CurveMetaData_0__: boolean;
    }
    
    class CurveTableRowHandle {
        constructor();
        constructor(CurveTable: UE.CurveTable, RowName: string);
        CurveTable: UE.CurveTable;
        RowName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CurveTableRowHandle_0__: boolean;
    }
    
    class CurveTrack {
        constructor();
        constructor(CurveName: string, CurveWeights: TArray<number>);
        CurveName: string;
        CurveWeights: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CurveTrack_0__: boolean;
    }
    
    class CurveVectorFactory extends UE.CurveFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CurveVectorFactory;
        static Load(InName: string): CurveVectorFactory;
    
        __tid_CurveVectorFactory_0__: boolean;
    }
    
    class CustomDefine {
        constructor();
        constructor(DefineName: string, DefineValue: string);
        DefineName: string;
        DefineValue: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomDefine_0__: boolean;
    }
    
    class CustomInput {
        constructor();
        constructor(InputName: string, Input: UE.ExpressionInput);
        InputName: string;
        Input: UE.ExpressionInput;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomInput_0__: boolean;
    }
    
    enum ECustomizedToolMenuVisibility { None, Visible, Hidden, ECustomizedToolMenuVisibility_MAX, __typeKeyDoNoAccess}
    class CustomizedToolMenuEntry {
        constructor();
        constructor(Visibility: UE.ECustomizedToolMenuVisibility);
        Visibility: UE.ECustomizedToolMenuVisibility;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomizedToolMenuEntry_0__: boolean;
    }
    
    class CustomizedToolMenuSection {
        constructor();
        constructor(Visibility: UE.ECustomizedToolMenuVisibility);
        Visibility: UE.ECustomizedToolMenuVisibility;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomizedToolMenuSection_0__: boolean;
    }
    
    class CustomizedToolMenuNameArray {
        constructor();
        constructor(Names: TArray<string>);
        Names: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomizedToolMenuNameArray_0__: boolean;
    }
    
    class CustomizedToolMenu {
        constructor();
        constructor(Name: string, Entries: TMap<string, UE.CustomizedToolMenuEntry>, Sections: TMap<string, UE.CustomizedToolMenuSection>, EntryOrder: TMap<string, UE.CustomizedToolMenuNameArray>, SectionOrder: TArray<string>);
        Name: string;
        Entries: TMap<string, UE.CustomizedToolMenuEntry>;
        Sections: TMap<string, UE.CustomizedToolMenuSection>;
        EntryOrder: TMap<string, UE.CustomizedToolMenuNameArray>;
        SectionOrder: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomizedToolMenu_0__: boolean;
    }
    
    class CustomMeshTriangle {
        constructor();
        constructor(Vertex0: UE.Vector, Vertex1: UE.Vector, Vertex2: UE.Vector);
        Vertex0: UE.Vector;
        Vertex1: UE.Vector;
        Vertex2: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomMeshTriangle_0__: boolean;
    }
    
    class CustomMeshComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddCustomMeshTriangles(Triangles: TArray<UE.CustomMeshTriangle>) : void;
        ClearCustomMeshTriangles() : void;
        SetCustomMeshTriangles(Triangles: TArray<UE.CustomMeshTriangle>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CustomMeshComponent;
        static Load(InName: string): CustomMeshComponent;
    
        __tid_CustomMeshComponent_0__: boolean;
    }
    
    enum ECustomMaterialOutputType { CMOT_Float1, CMOT_Float2, CMOT_Float3, CMOT_Float4, CMOT_MaterialAttributes, CMOT_MAX, __typeKeyDoNoAccess}
    class CustomOutput {
        constructor();
        constructor(OutputName: string, OutputType: UE.ECustomMaterialOutputType);
        OutputName: string;
        OutputType: UE.ECustomMaterialOutputType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomOutput_0__: boolean;
    }
    
    class CustomPin {
        constructor();
        constructor(PinName: string, CallFuncPinName: string, bValuePin: boolean);
        PinName: string;
        CallFuncPinName: string;
        bValuePin: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomPin_0__: boolean;
    }
    
    class CustomStruct {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_CustomStruct_0__: boolean;
    }
    
    class CylinderBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Z: number;
        OuterRadius: number;
        InnerRadius: number;
        Sides: number;
        GroupName: string;
        AlignToSide: boolean;
        Hollow: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): CylinderBuilder;
        static Load(InName: string): CylinderBuilder;
    
        __tid_CylinderBuilder_0__: boolean;
    }
    
    enum CylinderHeightAxis { PMLPC_HEIGHTAXIS_X, PMLPC_HEIGHTAXIS_Y, PMLPC_HEIGHTAXIS_Z, PMLPC_HEIGHTAXIS_MAX, __typeKeyDoNoAccess}
    class DamageEvent {
        constructor();
        constructor(DamageTypeClass: UE.Class);
        DamageTypeClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DamageEvent_0__: boolean;
    }
    
    class DataAssetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DataAssetClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataAssetFactory;
        static Load(InName: string): DataAssetFactory;
    
        __tid_DataAssetFactory_0__: boolean;
    }
    
    class DatasmithObjectTemplate extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithObjectTemplate;
        static Load(InName: string): DatasmithObjectTemplate;
    
        __tid_DatasmithObjectTemplate_0__: boolean;
    }
    
    class DatasmithActorTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Layers: TSet<string>;
        Tags: TSet<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithActorTemplate;
        static Load(InName: string): DatasmithActorTemplate;
    
        __tid_DatasmithActorTemplate_0__: boolean;
    }
    
    class DatasmithAdditionalData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithAdditionalData;
        static Load(InName: string): DatasmithAdditionalData;
    
        __tid_DatasmithAdditionalData_0__: boolean;
    }
    
    enum EDatasmithAreaLightActorType { Point, Spot, Rect, EDatasmithAreaLightActorType_MAX, __typeKeyDoNoAccess}
    enum EDatasmithAreaLightActorShape { Rectangle, Disc, Sphere, Cylinder, None, EDatasmithAreaLightActorShape_MAX, __typeKeyDoNoAccess}
    enum ELightUnits { Unitless, Candelas, Lumens, ELightUnits_MAX, __typeKeyDoNoAccess}
    class DatasmithAreaLightActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightType: UE.EDatasmithAreaLightActorType;
        LightShape: UE.EDatasmithAreaLightActorShape;
        Dimensions: UE.Vector2D;
        Intensity: number;
        IntensityUnits: UE.ELightUnits;
        Color: UE.LinearColor;
        Temperature: number;
        IESTexture: UE.TextureLightProfile;
        bUseIESBrightness: boolean;
        IESBrightnessScale: number;
        Rotation: UE.Rotator;
        SourceRadius: number;
        SourceLength: number;
        AttenuationRadius: number;
        SpotlightInnerAngle: number;
        SpotlightOuterAngle: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithAreaLightActor;
        static Load(InName: string): DatasmithAreaLightActor;
    
        __tid_DatasmithAreaLightActor_0__: boolean;
    }
    
    class DatasmithAreaLightActorTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightType: UE.EDatasmithAreaLightActorType;
        LightShape: UE.EDatasmithAreaLightActorShape;
        Dimensions: UE.Vector2D;
        Color: UE.LinearColor;
        Intensity: number;
        IntensityUnits: UE.ELightUnits;
        Temperature: number;
        IESTexture: TSoftObjectPtr<UE.TextureLightProfile>;
        bUseIESBrightness: boolean;
        IESBrightnessScale: number;
        Rotation: UE.Rotator;
        SourceRadius: number;
        SourceLength: number;
        AttenuationRadius: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithAreaLightActorTemplate;
        static Load(InName: string): DatasmithAreaLightActorTemplate;
    
        __tid_DatasmithAreaLightActorTemplate_0__: boolean;
    }
    
    class DatasmithAssetImportOptions {
        constructor();
        constructor(PackagePath: string);
        PackagePath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithAssetImportOptions_0__: boolean;
    }
    
    class DatasmithAssetImportData extends UE.AssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetImportOptions: UE.DatasmithAssetImportOptions;
        AdditionalData: TArray<UE.DatasmithAdditionalData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithAssetImportData;
        static Load(InName: string): DatasmithAssetImportData;
    
        __tid_DatasmithAssetImportData_0__: boolean;
    }
    
    class DatasmithAssetUserData extends UE.AssetUserData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MetaData: TMap<string, string>;
        ObjectTemplates: TMap<UE.Class, UE.DatasmithObjectTemplate>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithAssetUserData;
        static Load(InName: string): DatasmithAssetUserData;
    
        __tid_DatasmithAssetUserData_0__: boolean;
    }
    
    enum EDatasmithImportScene { NewLevel, CurrentLevel, AssetsOnly, EDatasmithImportScene_MAX, __typeKeyDoNoAccess}
    enum EDatasmithImportLightmapMin { LIGHTMAP_16, LIGHTMAP_32, LIGHTMAP_64, LIGHTMAP_128, LIGHTMAP_256, LIGHTMAP_512, LIGHTMAP_MAX, __typeKeyDoNoAccess}
    enum EDatasmithImportLightmapMax { LIGHTMAP_64, LIGHTMAP_128, LIGHTMAP_256, LIGHTMAP_512, LIGHTMAP_1024, LIGHTMAP_2048, LIGHTMAP_4096, LIGHTMAP_MAX, __typeKeyDoNoAccess}
    class DatasmithStaticMeshImportOptions {
        constructor();
        constructor(MinLightmapResolution: UE.EDatasmithImportLightmapMin, MaxLightmapResolution: UE.EDatasmithImportLightmapMax, bGenerateLightmapUVs: boolean, bRemoveDegenerates: boolean);
        MinLightmapResolution: UE.EDatasmithImportLightmapMin;
        MaxLightmapResolution: UE.EDatasmithImportLightmapMax;
        bGenerateLightmapUVs: boolean;
        bRemoveDegenerates: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithStaticMeshImportOptions_0__: boolean;
    }
    
    class DatasmithImportBaseOptions {
        constructor();
        constructor(SceneHandling: UE.EDatasmithImportScene, bIncludeGeometry: boolean, bIncludeMaterial: boolean, bIncludeLight: boolean, bIncludeCamera: boolean, bIncludeAnimation: boolean, AssetOptions: UE.DatasmithAssetImportOptions, StaticMeshOptions: UE.DatasmithStaticMeshImportOptions);
        SceneHandling: UE.EDatasmithImportScene;
        bIncludeGeometry: boolean;
        bIncludeMaterial: boolean;
        bIncludeLight: boolean;
        bIncludeCamera: boolean;
        bIncludeAnimation: boolean;
        AssetOptions: UE.DatasmithAssetImportOptions;
        StaticMeshOptions: UE.DatasmithStaticMeshImportOptions;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithImportBaseOptions_0__: boolean;
    }
    
    class DatasmithSceneImportData extends UE.AssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseOptions: UE.DatasmithImportBaseOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithSceneImportData;
        static Load(InName: string): DatasmithSceneImportData;
    
        __tid_DatasmithSceneImportData_0__: boolean;
    }
    
    enum EDatasmithCADStitchingTechnique { StitchingNone, StitchingHeal, StitchingSew, EDatasmithCADStitchingTechnique_MAX, __typeKeyDoNoAccess}
    class DatasmithTessellationOptions {
        constructor();
        constructor(ChordTolerance: number, MaxEdgeLength: number, NormalTolerance: number, StitchingTechnique: UE.EDatasmithCADStitchingTechnique);
        ChordTolerance: number;
        MaxEdgeLength: number;
        NormalTolerance: number;
        StitchingTechnique: UE.EDatasmithCADStitchingTechnique;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithTessellationOptions_0__: boolean;
    }
    
    class DatasmithCADImportSceneData extends UE.DatasmithSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TessellationOptions: UE.DatasmithTessellationOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithCADImportSceneData;
        static Load(InName: string): DatasmithCADImportSceneData;
    
        __tid_DatasmithCADImportSceneData_0__: boolean;
    }
    
    class DatasmithCameraFilmbackSettingsTemplate {
        constructor();
        constructor(SensorWidth: number, SensorHeight: number);
        SensorWidth: number;
        SensorHeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithCameraFilmbackSettingsTemplate_0__: boolean;
    }
    
    class DatasmithCameraFocusSettingsTemplate {
        constructor();
        constructor(FocusMethod: UE.ECameraFocusMethod, ManualFocusDistance: number);
        FocusMethod: UE.ECameraFocusMethod;
        ManualFocusDistance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithCameraFocusSettingsTemplate_0__: boolean;
    }
    
    class DatasmithCameraLensSettingsTemplate {
        constructor();
        constructor(MaxFStop: number);
        MaxFStop: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithCameraLensSettingsTemplate_0__: boolean;
    }
    
    class DatasmithCameraLookatTrackingSettingsTemplate {
        constructor();
        constructor(bEnableLookAtTracking: boolean, bAllowRoll: boolean, ActorToTrack: TSoftObjectPtr<UE.Actor>);
        bEnableLookAtTracking: boolean;
        bAllowRoll: boolean;
        ActorToTrack: TSoftObjectPtr<UE.Actor>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithCameraLookatTrackingSettingsTemplate_0__: boolean;
    }
    
    class DatasmithCineCameraActorTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LookatTrackingSettings: UE.DatasmithCameraLookatTrackingSettingsTemplate;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithCineCameraActorTemplate;
        static Load(InName: string): DatasmithCineCameraActorTemplate;
    
        __tid_DatasmithCineCameraActorTemplate_0__: boolean;
    }
    
    class DatasmithPostProcessSettingsTemplate {
        constructor();
        constructor(bOverride_WhiteTemp: boolean, bOverride_ColorSaturation: boolean, bOverride_VignetteIntensity: boolean, bOverride_FilmWhitePoint: boolean, bOverride_AutoExposureMethod: boolean, bOverride_CameraISO: boolean, bOverride_CameraShutterSpeed: boolean, bOverride_DepthOfFieldFstop: boolean, WhiteTemp: number, VignetteIntensity: number, FilmWhitePoint: UE.LinearColor, ColorSaturation: UE.Vector4, AutoExposureMethod: UE.EAutoExposureMethod, CameraISO: number, CameraShutterSpeed: number, DepthOfFieldFstop: number);
        bOverride_WhiteTemp: boolean;
        bOverride_ColorSaturation: boolean;
        bOverride_VignetteIntensity: boolean;
        bOverride_FilmWhitePoint: boolean;
        bOverride_AutoExposureMethod: boolean;
        bOverride_CameraISO: boolean;
        bOverride_CameraShutterSpeed: boolean;
        bOverride_DepthOfFieldFstop: boolean;
        WhiteTemp: number;
        VignetteIntensity: number;
        FilmWhitePoint: UE.LinearColor;
        ColorSaturation: UE.Vector4;
        AutoExposureMethod: UE.EAutoExposureMethod;
        CameraISO: number;
        CameraShutterSpeed: number;
        DepthOfFieldFstop: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithPostProcessSettingsTemplate_0__: boolean;
    }
    
    class DatasmithCineCameraComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FilmbackSettings: UE.DatasmithCameraFilmbackSettingsTemplate;
        LensSettings: UE.DatasmithCameraLensSettingsTemplate;
        FocusSettings: UE.DatasmithCameraFocusSettingsTemplate;
        CurrentFocalLength: number;
        CurrentAperture: number;
        PostProcessSettings: UE.DatasmithPostProcessSettingsTemplate;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithCineCameraComponentTemplate;
        static Load(InName: string): DatasmithCineCameraComponentTemplate;
    
        __tid_DatasmithCineCameraComponentTemplate_0__: boolean;
    }
    
    class DatasmithOptionsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithOptionsBase;
        static Load(InName: string): DatasmithOptionsBase;
    
        __tid_DatasmithOptionsBase_0__: boolean;
    }
    
    class DatasmithCommonTessellationOptions extends UE.DatasmithOptionsBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Options: UE.DatasmithTessellationOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithCommonTessellationOptions;
        static Load(InName: string): DatasmithCommonTessellationOptions;
    
        __tid_DatasmithCommonTessellationOptions_0__: boolean;
    }
    
    class DatasmithContentBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetAllDatasmithUserData(ObjectClass: $Nullable<UE.Class>, OutUserData: $Ref<TArray<UE.DatasmithAssetUserData>>) : void;
        static GetAllObjectsAndValuesForKey(Key: string, ObjectClass: $Nullable<UE.Class>, OutObjects: $Ref<TArray<UE.Object>>, OutValues: $Ref<TArray<string>>) : void;
        static GetDatasmithUserData(Object: $Nullable<UE.Object>) : UE.DatasmithAssetUserData;
        static GetDatasmithUserDataKeysAndValuesForValue(Object: $Nullable<UE.Object>, StringToMatch: string, OutKeys: $Ref<TArray<string>>, OutValues: $Ref<TArray<string>>) : void;
        static GetDatasmithUserDataValueForKey(Object: $Nullable<UE.Object>, Key: string) : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithContentBlueprintLibrary;
        static Load(InName: string): DatasmithContentBlueprintLibrary;
    
        __tid_DatasmithContentBlueprintLibrary_0__: boolean;
    }
    
    class DatasmithCustomActionBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithCustomActionBase;
        static Load(InName: string): DatasmithCustomActionBase;
    
        __tid_DatasmithCustomActionBase_0__: boolean;
    }
    
    class DatasmithDecalComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SortOrder: number;
        DecalSize: UE.Vector;
        Material: UE.MaterialInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithDecalComponentTemplate;
        static Load(InName: string): DatasmithDecalComponentTemplate;
    
        __tid_DatasmithDecalComponentTemplate_0__: boolean;
    }
    
    class DatasmithDeltaGenAssetImportData extends UE.DatasmithAssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithDeltaGenAssetImportData;
        static Load(InName: string): DatasmithDeltaGenAssetImportData;
    
        __tid_DatasmithDeltaGenAssetImportData_0__: boolean;
    }
    
    class DatasmithFBXSceneImportData extends UE.DatasmithSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bGenerateLightmapUVs: boolean;
        TexturesDir: string;
        IntermediateSerialization: number;
        bColorizeMaterials: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithFBXSceneImportData;
        static Load(InName: string): DatasmithFBXSceneImportData;
    
        __tid_DatasmithFBXSceneImportData_0__: boolean;
    }
    
    class DatasmithDeltaGenSceneImportData extends UE.DatasmithFBXSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMergeNodes: boolean;
        bOptimizeDuplicatedNodes: boolean;
        bRemoveInvisibleNodes: boolean;
        bSimplifyNodeHierarchy: boolean;
        bImportVar: boolean;
        VarPath: string;
        bImportPos: boolean;
        PosPath: string;
        bImportTml: boolean;
        TmlPath: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithDeltaGenSceneImportData;
        static Load(InName: string): DatasmithDeltaGenSceneImportData;
    
        __tid_DatasmithDeltaGenSceneImportData_0__: boolean;
    }
    
    class DatasmithGLTFSceneImportData extends UE.DatasmithSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Generator: string;
        Version: number;
        Author: string;
        License: string;
        Source: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithGLTFSceneImportData;
        static Load(InName: string): DatasmithGLTFSceneImportData;
    
        __tid_DatasmithGLTFSceneImportData_0__: boolean;
    }
    
    class DatasmithIFCSceneImportData extends UE.DatasmithSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithIFCSceneImportData;
        static Load(InName: string): DatasmithIFCSceneImportData;
    
        __tid_DatasmithIFCSceneImportData_0__: boolean;
    }
    
    class DatasmithImportedSequencesActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportedSequences: TArray<UE.LevelSequence>;
        PlayLevelSequence(SequenceToPlay: $Nullable<UE.LevelSequence>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithImportedSequencesActor;
        static Load(InName: string): DatasmithImportedSequencesActor;
    
        __tid_DatasmithImportedSequencesActor_0__: boolean;
    }
    
    enum EDatasmithImportSearchPackagePolicy { Current, All, EDatasmithImportSearchPackagePolicy_MAX, __typeKeyDoNoAccess}
    enum EDatasmithImportAssetConflictPolicy { Replace, Update, Use, Ignore, EDatasmithImportAssetConflictPolicy_MAX, __typeKeyDoNoAccess}
    enum EDatasmithImportActorPolicy { Update, Full, Ignore, EDatasmithImportActorPolicy_MAX, __typeKeyDoNoAccess}
    enum EDatasmithImportMaterialQuality { UseNoFresnelCurves, UseSimplifierFresnelCurves, UseRealFresnelCurves, EDatasmithImportMaterialQuality_MAX, __typeKeyDoNoAccess}
    class DatasmithReimportOptions {
        constructor();
        constructor(bUpdateActors: boolean, bRespawnDeletedActors: boolean);
        bUpdateActors: boolean;
        bRespawnDeletedActors: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithReimportOptions_0__: boolean;
    }
    
    class DatasmithImportOptions extends UE.DatasmithOptionsBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SearchPackagePolicy: UE.EDatasmithImportSearchPackagePolicy;
        MaterialConflictPolicy: UE.EDatasmithImportAssetConflictPolicy;
        TextureConflictPolicy: UE.EDatasmithImportAssetConflictPolicy;
        StaticMeshActorImportPolicy: UE.EDatasmithImportActorPolicy;
        LightImportPolicy: UE.EDatasmithImportActorPolicy;
        CameraImportPolicy: UE.EDatasmithImportActorPolicy;
        OtherActorImportPolicy: UE.EDatasmithImportActorPolicy;
        MaterialQuality: UE.EDatasmithImportMaterialQuality;
        BaseOptions: UE.DatasmithImportBaseOptions;
        ReimportOptions: UE.DatasmithReimportOptions;
        FileName: string;
        FilePath: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithImportOptions;
        static Load(InName: string): DatasmithImportOptions;
    
        __tid_DatasmithImportOptions_0__: boolean;
    }
    
    class DatasmithLandscapeTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LandscapeMaterial: UE.MaterialInterface;
        StaticLightingLOD: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithLandscapeTemplate;
        static Load(InName: string): DatasmithLandscapeTemplate;
    
        __tid_DatasmithLandscapeTemplate_0__: boolean;
    }
    
    class DatasmithLightComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bVisible: boolean;
        CastShadows: boolean;
        bUseTemperature: boolean;
        bUseIESBrightness: boolean;
        Intensity: number;
        Temperature: number;
        IESBrightnessScale: number;
        LightColor: UE.LinearColor;
        LightFunctionMaterial: UE.MaterialInterface;
        IESTexture: UE.TextureLightProfile;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithLightComponentTemplate;
        static Load(InName: string): DatasmithLightComponentTemplate;
    
        __tid_DatasmithLightComponentTemplate_0__: boolean;
    }
    
    class DatasmithStaticParameterSetTemplate {
        constructor();
        constructor(StaticSwitchParameters: TMap<string, boolean>);
        StaticSwitchParameters: TMap<string, boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithStaticParameterSetTemplate_0__: boolean;
    }
    
    class DatasmithMaterialInstanceTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentMaterial: TSoftObjectPtr<UE.MaterialInterface>;
        ScalarParameterValues: TMap<string, number>;
        VectorParameterValues: TMap<string, UE.LinearColor>;
        TextureParameterValues: TMap<string, TSoftObjectPtr<UE.Texture>>;
        StaticParameters: UE.DatasmithStaticParameterSetTemplate;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithMaterialInstanceTemplate;
        static Load(InName: string): DatasmithMaterialInstanceTemplate;
    
        __tid_DatasmithMaterialInstanceTemplate_0__: boolean;
    }
    
    class DatasmithMDLSceneImportData extends UE.DatasmithSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithMDLSceneImportData;
        static Load(InName: string): DatasmithMDLSceneImportData;
    
        __tid_DatasmithMDLSceneImportData_0__: boolean;
    }
    
    class DatasmithMeshBuildSettingsTemplate {
        constructor();
        constructor(bUseMikkTSpace: boolean, bRecomputeNormals: boolean, bRecomputeTangents: boolean, bRemoveDegenerates: boolean, bBuildAdjacencyBuffer: boolean, bUseHighPrecisionTangentBasis: boolean, bUseFullPrecisionUVs: boolean, bGenerateLightmapUVs: boolean, MinLightmapResolution: number, SrcLightmapIndex: number, DstLightmapIndex: number);
        bUseMikkTSpace: boolean;
        bRecomputeNormals: boolean;
        bRecomputeTangents: boolean;
        bRemoveDegenerates: boolean;
        bBuildAdjacencyBuffer: boolean;
        bUseHighPrecisionTangentBasis: boolean;
        bUseFullPrecisionUVs: boolean;
        bGenerateLightmapUVs: boolean;
        MinLightmapResolution: number;
        SrcLightmapIndex: number;
        DstLightmapIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithMeshBuildSettingsTemplate_0__: boolean;
    }
    
    class DatasmithMeshSectionInfoTemplate {
        constructor();
        constructor(MaterialIndex: number);
        MaterialIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithMeshSectionInfoTemplate_0__: boolean;
    }
    
    class DatasmithMeshSectionInfoMapTemplate {
        constructor();
        constructor(Map: TMap<number, UE.DatasmithMeshSectionInfoTemplate>);
        Map: TMap<number, UE.DatasmithMeshSectionInfoTemplate>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithMeshSectionInfoMapTemplate_0__: boolean;
    }
    
    class DatasmithPointLightComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IntensityUnits: UE.ELightUnits;
        SourceRadius: number;
        SourceLength: number;
        AttenuationRadius: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithPointLightComponentTemplate;
        static Load(InName: string): DatasmithPointLightComponentTemplate;
    
        __tid_DatasmithPointLightComponentTemplate_0__: boolean;
    }
    
    class DatasmithPostProcessVolumeTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.DatasmithPostProcessSettingsTemplate;
        bEnabled: boolean;
        bUnbound: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithPostProcessVolumeTemplate;
        static Load(InName: string): DatasmithPostProcessVolumeTemplate;
    
        __tid_DatasmithPostProcessVolumeTemplate_0__: boolean;
    }
    
    enum EDatasmithCADRetessellationRule { All, SkipDeletedSurfaces, EDatasmithCADRetessellationRule_MAX, __typeKeyDoNoAccess}
    class DatasmithRetessellationOptions extends UE.DatasmithTessellationOptions {
        constructor();
        constructor(RetessellationRule: UE.EDatasmithCADRetessellationRule);
        RetessellationRule: UE.EDatasmithCADRetessellationRule;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithRetessellationOptions_0__: boolean;
    }
    
    class VariantDependency {
        constructor();
        constructor(VariantSet: TSoftObjectPtr<UE.VariantSet>, Variant: TSoftObjectPtr<UE.Variant>, bEnabled: boolean);
        VariantSet: TSoftObjectPtr<UE.VariantSet>;
        Variant: TSoftObjectPtr<UE.Variant>;
        bEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VariantDependency_0__: boolean;
    }
    
    enum EPropertyValueCategory { Undefined, Generic, RelativeLocation, RelativeRotation, RelativeScale3D, Visibility, Material, Color, Option, EPropertyValueCategory_MAX, __typeKeyDoNoAccess}
    class PropertyValue extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyIndices: TArray<number>;
        CapturedPropSegments: TArray<UE.CapturedPropSegment>;
        FullDisplayString: string;
        PropertySetterName: string;
        PropertySetterParameterDefaults: TMap<string, string>;
        bHasRecordedData: boolean;
        LeafPropertyClass: UE.Class;
        ValueBytes: TArray<number>;
        PropCategory: UE.EPropertyValueCategory;
        DisplayOrder: number;
        GetFullDisplayString() : string;
        GetPropertyTooltip() : string;
        HasRecordedData() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyValue;
        static Load(InName: string): PropertyValue;
    
        __tid_PropertyValue_0__: boolean;
    }
    
    class FunctionCaller {
        constructor();
        constructor(FunctionName: string, FunctionEntry: TWeakObjectPtr<UE.Object>, DisplayOrder: number);
        FunctionName: string;
        FunctionEntry: TWeakObjectPtr<UE.Object>;
        DisplayOrder: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FunctionCaller_0__: boolean;
    }
    
    class VariantObjectBinding extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CachedActorLabel: string;
        ObjectPtr: UE.SoftObjectPath;
        LazyObjectPtr: TLazyObjectPtr<UE.Object>;
        CapturedProperties: TArray<UE.PropertyValue>;
        FunctionCallers: TArray<UE.FunctionCaller>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VariantObjectBinding;
        static Load(InName: string): VariantObjectBinding;
    
        __tid_VariantObjectBinding_0__: boolean;
    }
    
    class Variant extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Dependencies: TArray<UE.VariantDependency>;
        DisplayText: string;
        ObjectBindings: TArray<UE.VariantObjectBinding>;
        Thumbnail: UE.Texture2D;
        AddDependency(Dependency: $Ref<UE.VariantDependency>) : number;
        DeleteDependency(Index: number) : void;
        GetActor(ActorIndex: number) : UE.Actor;
        GetDependency(Index: number) : UE.VariantDependency;
        GetDependents(LevelVariantSets: $Nullable<UE.LevelVariantSets>, bOnlyEnabledDependencies: boolean) : TArray<UE.Variant>;
        GetDisplayText() : string;
        GetNumActors() : number;
        GetNumDependencies() : number;
        GetParent() : UE.VariantSet;
        GetThumbnail() : UE.Texture2D;
        IsActive() : boolean;
        SetDependency(Index: number, Dependency: $Ref<UE.VariantDependency>) : void;
        SetDisplayText(NewDisplayText: string) : void;
        SetThumbnailFromCamera(WorldContextObject: $Nullable<UE.Object>, CameraTransform: UE.Transform, FOVDegrees?: number /* = 50.000000 */, MinZ?: number /* = 50.000000 */, Gamma?: number /* = 2.200000 */) : void;
        SetThumbnailFromEditorViewport() : void;
        SetThumbnailFromFile(FilePath: string) : void;
        SetThumbnailFromTexture(NewThumbnail: $Nullable<UE.Texture2D>) : void;
        SwitchOn() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Variant;
        static Load(InName: string): Variant;
    
        __tid_Variant_0__: boolean;
    }
    
    class VariantSet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DisplayText: string;
        bExpanded: boolean;
        Variants: TArray<UE.Variant>;
        Thumbnail: UE.Texture2D;
        GetDisplayText() : string;
        GetNumVariants() : number;
        GetParent() : UE.LevelVariantSets;
        GetThumbnail() : UE.Texture2D;
        GetVariant(VariantIndex: number) : UE.Variant;
        GetVariantByName(VariantName: string) : UE.Variant;
        SetDisplayText(NewDisplayText: string) : void;
        SetThumbnailFromCamera(WorldContextObject: $Nullable<UE.Object>, CameraTransform: UE.Transform, FOVDegrees?: number /* = 50.000000 */, MinZ?: number /* = 50.000000 */, Gamma?: number /* = 2.200000 */) : void;
        SetThumbnailFromEditorViewport() : void;
        SetThumbnailFromFile(FilePath: string) : void;
        SetThumbnailFromTexture(NewThumbnail: $Nullable<UE.Texture2D>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VariantSet;
        static Load(InName: string): VariantSet;
    
        __tid_VariantSet_0__: boolean;
    }
    
    class LevelVariantSets extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DirectorBlueprint: UE.Object;
        DirectorClass: UE.BlueprintGeneratedClass;
        VariantSets: TArray<UE.VariantSet>;
        GetNumVariantSets() : number;
        GetVariantSet(VariantSetIndex: number) : UE.VariantSet;
        GetVariantSetByName(VariantSetName: string) : UE.VariantSet;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelVariantSets;
        static Load(InName: string): LevelVariantSets;
    
        __tid_LevelVariantSets_0__: boolean;
    }
    
    class DatasmithScene extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetImportData: UE.DatasmithSceneImportData;
        BulkDataVersion: number;
        StaticMeshes: TMap<string, TSoftObjectPtr<UE.StaticMesh>>;
        Textures: TMap<string, TSoftObjectPtr<UE.Texture>>;
        MaterialFunctions: TMap<string, TSoftObjectPtr<UE.MaterialFunction>>;
        Materials: TMap<string, TSoftObjectPtr<UE.MaterialInterface>>;
        LevelSequences: TMap<string, TSoftObjectPtr<UE.LevelSequence>>;
        LevelVariantSets: TMap<string, TSoftObjectPtr<UE.LevelVariantSets>>;
        AssetUserData: TArray<UE.AssetUserData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithScene;
        static Load(InName: string): DatasmithScene;
    
        __tid_DatasmithScene_0__: boolean;
    }
    
    class DatasmithSceneActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Scene: UE.DatasmithScene;
        RelatedActors: TMap<string, TSoftObjectPtr<UE.Actor>>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithSceneActor;
        static Load(InName: string): DatasmithSceneActor;
    
        __tid_DatasmithSceneActor_0__: boolean;
    }
    
    class DatasmithSceneComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RelativeTransform: UE.Transform;
        Mobility: UE.EComponentMobility;
        AttachParent: TSoftObjectPtr<UE.SceneComponent>;
        bVisible: boolean;
        Tags: TSet<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithSceneComponentTemplate;
        static Load(InName: string): DatasmithSceneComponentTemplate;
    
        __tid_DatasmithSceneComponentTemplate_0__: boolean;
    }
    
    class DatasmithSkyLightComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceType: UE.ESkyLightSourceType;
        CubemapResolution: number;
        Cubemap: UE.TextureCube;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithSkyLightComponentTemplate;
        static Load(InName: string): DatasmithSkyLightComponentTemplate;
    
        __tid_DatasmithSkyLightComponentTemplate_0__: boolean;
    }
    
    class DatasmithSpotLightComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InnerConeAngle: number;
        OuterConeAngle: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithSpotLightComponentTemplate;
        static Load(InName: string): DatasmithSpotLightComponentTemplate;
    
        __tid_DatasmithSpotLightComponentTemplate_0__: boolean;
    }
    
    class DatasmithStaticMaterialTemplate {
        constructor();
        constructor(MaterialSlotName: string, MaterialInterface: UE.MaterialInterface);
        MaterialSlotName: string;
        MaterialInterface: UE.MaterialInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DatasmithStaticMaterialTemplate_0__: boolean;
    }
    
    class DatasmithStaticMeshImportData extends UE.DatasmithAssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportOptions: UE.DatasmithStaticMeshImportOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithStaticMeshImportData;
        static Load(InName: string): DatasmithStaticMeshImportData;
    
        __tid_DatasmithStaticMeshImportData_0__: boolean;
    }
    
    class DatasmithStaticMeshCADImportData extends UE.DatasmithStaticMeshImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TessellationOptions: UE.DatasmithTessellationOptions;
        ModelUnit: number;
        ModelTolerance: number;
        ResourcePath: string;
        ResourceFilename: string;
        AuxiliaryFilenames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithStaticMeshCADImportData;
        static Load(InName: string): DatasmithStaticMeshCADImportData;
    
        __tid_DatasmithStaticMeshCADImportData_0__: boolean;
    }
    
    class DatasmithStaticMeshComponentTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StaticMesh: UE.StaticMesh;
        OverrideMaterials: TArray<UE.MaterialInterface>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithStaticMeshComponentTemplate;
        static Load(InName: string): DatasmithStaticMeshComponentTemplate;
    
        __tid_DatasmithStaticMeshComponentTemplate_0__: boolean;
    }
    
    class DatasmithStaticMeshGLTFImportData extends UE.DatasmithStaticMeshImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceMeshName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithStaticMeshGLTFImportData;
        static Load(InName: string): DatasmithStaticMeshGLTFImportData;
    
        __tid_DatasmithStaticMeshGLTFImportData_0__: boolean;
    }
    
    class DatasmithStaticMeshIFCImportData extends UE.DatasmithStaticMeshImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceGlobalId: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithStaticMeshIFCImportData;
        static Load(InName: string): DatasmithStaticMeshIFCImportData;
    
        __tid_DatasmithStaticMeshIFCImportData_0__: boolean;
    }
    
    class DatasmithStaticMeshTemplate extends UE.DatasmithObjectTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SectionInfoMap: UE.DatasmithMeshSectionInfoMapTemplate;
        LightMapCoordinateIndex: number;
        LightMapResolution: number;
        BuildSettings: TArray<UE.DatasmithMeshBuildSettingsTemplate>;
        StaticMaterials: TArray<UE.DatasmithStaticMaterialTemplate>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithStaticMeshTemplate;
        static Load(InName: string): DatasmithStaticMeshTemplate;
    
        __tid_DatasmithStaticMeshTemplate_0__: boolean;
    }
    
    class DatasmithTranslatedSceneImportData extends UE.DatasmithSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AdditionalOptions: TArray<UE.DatasmithOptionsBase>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithTranslatedSceneImportData;
        static Load(InName: string): DatasmithTranslatedSceneImportData;
    
        __tid_DatasmithTranslatedSceneImportData_0__: boolean;
    }
    
    class DatasmithVREDAssetImportData extends UE.DatasmithAssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithVREDAssetImportData;
        static Load(InName: string): DatasmithVREDAssetImportData;
    
        __tid_DatasmithVREDAssetImportData_0__: boolean;
    }
    
    class DatasmithVREDSceneImportData extends UE.DatasmithFBXSceneImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMergeNodes: boolean;
        bOptimizeDuplicatedNodes: boolean;
        bImportMats: boolean;
        MatsPath: string;
        bImportVar: boolean;
        bCleanVar: boolean;
        VarPath: string;
        bImportLightInfo: boolean;
        LightInfoPath: string;
        bImportClipInfo: boolean;
        ClipInfoPath: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DatasmithVREDSceneImportData;
        static Load(InName: string): DatasmithVREDSceneImportData;
    
        __tid_DatasmithVREDSceneImportData_0__: boolean;
    }
    
    class DataTableCategoryHandle {
        constructor();
        constructor(DataTable: UE.DataTable, ColumnName: string, RowContents: string);
        DataTable: UE.DataTable;
        ColumnName: string;
        RowContents: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DataTableCategoryHandle_0__: boolean;
    }
    
    class TableRowBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TableRowBase_0__: boolean;
    }
    
    enum EEvaluateCurveTableResult { RowFound, RowNotFound, EEvaluateCurveTableResult_MAX, __typeKeyDoNoAccess}
    class DataTableFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static DoesDataTableRowExist(Table: $Nullable<UE.DataTable>, RowName: string) : boolean;
        static EvaluateCurveTableRow(CurveTable: $Nullable<UE.CurveTable>, RowName: string, InXY: number, OutResult: $Ref<UE.EEvaluateCurveTableResult>, OutXY: $Ref<number>, ContextString: string) : void;
        static FillDataTableFromCSVFile(DataTable: $Nullable<UE.DataTable>, CSVFilePath: string) : boolean;
        static FillDataTableFromCSVString(DataTable: $Nullable<UE.DataTable>, CSVString: string) : boolean;
        static FillDataTableFromJSONFile(DataTable: $Nullable<UE.DataTable>, JSONFilePath: string, ImportRowStruct?: UE.ScriptStruct /* = None */) : boolean;
        static FillDataTableFromJSONString(DataTable: $Nullable<UE.DataTable>, JSONString: string) : boolean;
        static Generic_GetDataTableRowFromName(p0: DataTable, p1: string, p2: any) : boolean;
        static GetDataTableColumnAsString(DataTable: $Nullable<UE.DataTable>, PropertyName: string) : TArray<string>;
        static GetDataTableRowFromName(Table: $Nullable<UE.DataTable>, RowName: string, OutRow: $Ref<UE.TableRowBase>) : boolean;
        static GetDataTableRowNames(Table: $Nullable<UE.DataTable>, OutRowNames: $Ref<TArray<string>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataTableFunctionLibrary;
        static Load(InName: string): DataTableFunctionLibrary;
    
        __tid_DataTableFunctionLibrary_0__: boolean;
    }
    
    class DataTableRowHandle {
        constructor();
        constructor(DataTable: UE.DataTable, RowName: string);
        DataTable: UE.DataTable;
        RowName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DataTableRowHandle_0__: boolean;
    }
    
    class DataValidationCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataValidationCommandlet;
        static Load(InName: string): DataValidationCommandlet;
    
        __tid_DataValidationCommandlet_0__: boolean;
    }
    
    class DataValidationManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ExcludedDirectories: TArray<UE.DirectoryPath>;
        bValidateOnSave: boolean;
        DataValidationManagerClassName: UE.SoftClassPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataValidationManager;
        static Load(InName: string): DataValidationManager;
    
        __tid_DataValidationManager_0__: boolean;
    }
    
    class DataValidationSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bValidateOnSave: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DataValidationSettings;
        static Load(InName: string): DataValidationSettings;
    
        __tid_DataValidationSettings_0__: boolean;
    }
    
    class DComponentMaskParameter {
        constructor();
        constructor(R: boolean, G: boolean, B: boolean, A: boolean);
        R: boolean;
        G: boolean;
        B: boolean;
        A: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DComponentMaskParameter_0__: boolean;
    }
    
    class DDCCleanupCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DDCCleanupCommandlet;
        static Load(InName: string): DDCCleanupCommandlet;
    
        __tid_DDCCleanupCommandlet_0__: boolean;
    }
    
    class DebugCameraControllerSettingsViewModeIndex {
        constructor();
        constructor(ViewModeIndex: UE.EViewModeIndex);
        ViewModeIndex: UE.EViewModeIndex;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DebugCameraControllerSettingsViewModeIndex_0__: boolean;
    }
    
    class DebugCameraControllerSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CycleViewModes: TArray<UE.DebugCameraControllerSettingsViewModeIndex>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DebugCameraControllerSettings;
        static Load(InName: string): DebugCameraControllerSettings;
    
        __tid_DebugCameraControllerSettings_0__: boolean;
    }
    
    class DebugCameraHUD extends UE.HUD {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DebugCameraHUD;
        static Load(InName: string): DebugCameraHUD;
    
        __tid_DebugCameraHUD_0__: boolean;
    }
    
    class DebugDrawService extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DebugDrawService;
        static Load(InName: string): DebugDrawService;
    
        __tid_DebugDrawService_0__: boolean;
    }
    
    class DebugFloatHistory {
        constructor();
        constructor(Samples: TArray<number>, MaxSamples: number, MinValue: number, MaxValue: number, bAutoAdjustMinMax: boolean);
        Samples: TArray<number>;
        MaxSamples: number;
        MinValue: number;
        MaxValue: number;
        bAutoAdjustMinMax: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DebugFloatHistory_0__: boolean;
    }
    
    class DebuggingInfoForSingleFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DebuggingInfoForSingleFunction_0__: boolean;
    }
    
    class DebugResolution {
        constructor();
        constructor(Width: number, Height: number, Description: string, Color: UE.LinearColor);
        Width: number;
        Height: number;
        Description: string;
        Color: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DebugResolution_0__: boolean;
    }
    
    class DebugSkelMeshComponent extends UE.SkeletalMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRenderRawSkeleton: boolean;
        bDrawMesh: boolean;
        bShowBoneNames: boolean;
        bDrawBoneInfluences: boolean;
        bDrawMorphTargetVerts: boolean;
        bDrawNormals: boolean;
        bDrawTangents: boolean;
        bDrawBinormals: boolean;
        bDrawSockets: boolean;
        bSkeletonSocketsVisible: boolean;
        bMeshSocketsVisible: boolean;
        bDisplayRawAnimation: boolean;
        bDisplayNonRetargetedPose: boolean;
        bDisplayAdditiveBasePose: boolean;
        bDisplayBakedAnimation: boolean;
        bDisplaySourceAnimation: boolean;
        bDisplayBound: boolean;
        bDisplayVertexColors: boolean;
        bPreviewRootMotion: boolean;
        bShowClothData: boolean;
        MinClothPropertyView: number;
        MaxClothPropertyView: number;
        ClothMeshOpacity: number;
        bClothFlipNormal: boolean;
        bClothCullBackface: boolean;
        bRequiredBonesUpToDateDuringTick: boolean;
        BonesOfInterest: TArray<number>;
        MorphTargetOfInterests: TArray<UE.MorphTarget>;
        SkelMaterials: TArray<UE.MaterialInterface>;
        PreviewInstance: UE.AnimPreviewInstance;
        SavedAnimScriptInstance: UE.AnimInstance;
        bIsUsingInGameBounds: boolean;
        bIsUsingPreSkinnedBounds: boolean;
        bPerformSingleClothingTick: boolean;
        bPauseClothingSimulationWithAnim: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DebugSkelMeshComponent;
        static Load(InName: string): DebugSkelMeshComponent;
    
        __tid_DebugSkelMeshComponent_0__: boolean;
    }
    
    class DecalComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DecalMaterial: UE.MaterialInterface;
        SortOrder: number;
        FadeScreenSize: number;
        FadeStartDelay: number;
        FadeDuration: number;
        FadeInDuration: number;
        FadeInStartDelay: number;
        bDestroyOwnerAfterFade: boolean;
        DecalSize: UE.Vector;
        CreateDynamicMaterialInstance() : UE.MaterialInstanceDynamic;
        GetDecalMaterial() : UE.MaterialInterface;
        GetFadeDuration() : number;
        GetFadeInDuration() : number;
        GetFadeInStartDelay() : number;
        GetFadeStartDelay() : number;
        SetDecalMaterial(NewDecalMaterial: $Nullable<UE.MaterialInterface>) : void;
        SetFadeIn(StartDelay: number, Duaration: number) : void;
        SetFadeOut(StartDelay: number, Duration: number, DestroyOwnerAfterFade?: boolean /* = true */) : void;
        SetFadeScreenSize(NewFadeScreenSize: number) : void;
        SetSortOrder(Value: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DecalComponent;
        static Load(InName: string): DecalComponent;
    
        __tid_DecalComponent_0__: boolean;
    }
    
    class DecalActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Decal: UE.DecalComponent;
        ArrowComponent: UE.ArrowComponent;
        SpriteComponent: UE.BillboardComponent;
        BoxComponent: UE.BoxComponent;
        CreateDynamicMaterialInstance() : UE.MaterialInstanceDynamic;
        GetDecalMaterial() : UE.MaterialInterface;
        SetDecalMaterial(NewDecalMaterial: $Nullable<UE.MaterialInterface>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DecalActor;
        static Load(InName: string): DecalActor;
    
        __tid_DecalActor_0__: boolean;
    }
    
    class DecoratorSchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(NodeTemplate: UE.BehaviorTreeDecoratorGraphNode);
        NodeTemplate: UE.BehaviorTreeDecoratorGraphNode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DecoratorSchemaAction_NewNode_0__: boolean;
    }
    
    class DEditorParameterValue extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bOverride: boolean;
        ParameterInfo: UE.MaterialParameterInfo;
        ExpressionId: UE.Guid;
        SortPriority: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorParameterValue;
        static Load(InName: string): DEditorParameterValue;
    
        __tid_DEditorParameterValue_0__: boolean;
    }
    
    class DFontParameters {
        constructor();
        constructor(FontValue: UE.Font, FontPage: number);
        FontValue: UE.Font;
        FontPage: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DFontParameters_0__: boolean;
    }
    
    class DEditorFontParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: UE.DFontParameters;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorFontParameterValue;
        static Load(InName: string): DEditorFontParameterValue;
    
        __tid_DEditorFontParameterValue_0__: boolean;
    }
    
    class DEditorMaterialLayersParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: UE.MaterialLayersFunctions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorMaterialLayersParameterValue;
        static Load(InName: string): DEditorMaterialLayersParameterValue;
    
        __tid_DEditorMaterialLayersParameterValue_0__: boolean;
    }
    
    class DEditorRuntimeVirtualTextureParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: UE.RuntimeVirtualTexture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorRuntimeVirtualTextureParameterValue;
        static Load(InName: string): DEditorRuntimeVirtualTextureParameterValue;
    
        __tid_DEditorRuntimeVirtualTextureParameterValue_0__: boolean;
    }
    
    class ScalarParameterAtlasData {
        constructor();
        constructor(bIsUsedAsAtlasPosition: boolean, Curve: TSoftObjectPtr<UE.CurveLinearColor>, Atlas: TSoftObjectPtr<UE.CurveLinearColorAtlas>);
        bIsUsedAsAtlasPosition: boolean;
        Curve: TSoftObjectPtr<UE.CurveLinearColor>;
        Atlas: TSoftObjectPtr<UE.CurveLinearColorAtlas>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScalarParameterAtlasData_0__: boolean;
    }
    
    class DEditorScalarParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: number;
        AtlasData: UE.ScalarParameterAtlasData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorScalarParameterValue;
        static Load(InName: string): DEditorScalarParameterValue;
    
        __tid_DEditorScalarParameterValue_0__: boolean;
    }
    
    class DEditorStaticComponentMaskParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: UE.DComponentMaskParameter;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorStaticComponentMaskParameterValue;
        static Load(InName: string): DEditorStaticComponentMaskParameterValue;
    
        __tid_DEditorStaticComponentMaskParameterValue_0__: boolean;
    }
    
    class DEditorStaticSwitchParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorStaticSwitchParameterValue;
        static Load(InName: string): DEditorStaticSwitchParameterValue;
    
        __tid_DEditorStaticSwitchParameterValue_0__: boolean;
    }
    
    class DEditorTextureParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: UE.Texture;
        ChannelNames: UE.ParameterChannelNames;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorTextureParameterValue;
        static Load(InName: string): DEditorTextureParameterValue;
    
        __tid_DEditorTextureParameterValue_0__: boolean;
    }
    
    class DEditorVectorParameterValue extends UE.DEditorParameterValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterValue: UE.LinearColor;
        bIsUsedAsChannelMask: boolean;
        ChannelNames: UE.ParameterChannelNames;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DEditorVectorParameterValue;
        static Load(InName: string): DEditorVectorParameterValue;
    
        __tid_DEditorVectorParameterValue_0__: boolean;
    }
    
    class DefaultLevelSequenceInstanceData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransformOriginActor: UE.Actor;
        TransformOrigin: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DefaultLevelSequenceInstanceData;
        static Load(InName: string): DefaultLevelSequenceInstanceData;
    
        __tid_DefaultLevelSequenceInstanceData_0__: boolean;
    }
    
    class DefaultPhysicsVolume extends UE.PhysicsVolume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DefaultPhysicsVolume;
        static Load(InName: string): DefaultPhysicsVolume;
    
        __tid_DefaultPhysicsVolume_0__: boolean;
    }
    
    class LocalizedTemplateString {
        constructor();
        constructor(Language: string, Text: string);
        Language: string;
        Text: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizedTemplateString_0__: boolean;
    }
    
    class TemplateFolderRename {
        constructor();
        constructor(From: string, To: string);
        From: string;
        To: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TemplateFolderRename_0__: boolean;
    }
    
    class TemplateReplacement {
        constructor();
        constructor(Extensions: TArray<string>, From: string, To: string, bCaseSensitive: boolean);
        Extensions: TArray<string>;
        From: string;
        To: string;
        bCaseSensitive: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TemplateReplacement_0__: boolean;
    }
    
    enum ETemplateSetting { Languages, HardwareTarget, GraphicsPreset, StarterContent, XR, Raytracing, All, ETemplateSetting_MAX, __typeKeyDoNoAccess}
    enum EFeaturePackDetailLevel { Standard, High, EFeaturePackDetailLevel_MAX, __typeKeyDoNoAccess}
    class FeaturePackLevelSet {
        constructor();
        constructor(DetailLevels: TArray<UE.EFeaturePackDetailLevel>, MountName: string);
        DetailLevels: TArray<UE.EFeaturePackDetailLevel>;
        MountName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FeaturePackLevelSet_0__: boolean;
    }
    
    class TemplateProjectDefs extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LocalizedDisplayNames: TArray<UE.LocalizedTemplateString>;
        LocalizedDescriptions: TArray<UE.LocalizedTemplateString>;
        FoldersToIgnore: TArray<string>;
        FilesToIgnore: TArray<string>;
        FolderRenames: TArray<UE.TemplateFolderRename>;
        FilenameReplacements: TArray<UE.TemplateReplacement>;
        ReplacementsInFiles: TArray<UE.TemplateReplacement>;
        SortKey: string;
        Categories: TArray<string>;
        ClassTypes: string;
        AssetTypes: string;
        bAllowProjectCreation: boolean;
        bIsEnterprise: boolean;
        bIsBlank: boolean;
        HiddenSettings: TArray<UE.ETemplateSetting>;
        PacksToInclude: TArray<string>;
        EditDetailLevelPreference: UE.EFeaturePackDetailLevel;
        SharedContentPacks: TArray<UE.FeaturePackLevelSet>;
        StarterContent: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateProjectDefs;
        static Load(InName: string): TemplateProjectDefs;
    
        __tid_TemplateProjectDefs_0__: boolean;
    }
    
    class DefaultTemplateProjectDefs extends UE.TemplateProjectDefs {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DefaultTemplateProjectDefs;
        static Load(InName: string): DefaultTemplateProjectDefs;
    
        __tid_DefaultTemplateProjectDefs_0__: boolean;
    }
    
    class EditorPropertyPathSegment {
        constructor();
        constructor(Struct: UE.Struct, MemberName: string, MemberGuid: UE.Guid, IsProperty: boolean);
        Struct: UE.Struct;
        MemberName: string;
        MemberGuid: UE.Guid;
        IsProperty: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorPropertyPathSegment_0__: boolean;
    }
    
    class EditorPropertyPath {
        constructor();
        constructor(Segments: TArray<UE.EditorPropertyPathSegment>);
        Segments: TArray<UE.EditorPropertyPathSegment>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorPropertyPath_0__: boolean;
    }
    
    enum EBindingKind { Function, Property, EBindingKind_MAX, __typeKeyDoNoAccess}
    class DelegateEditorBinding {
        constructor();
        constructor(ObjectName: string, PropertyName: string, FunctionName: string, SourceProperty: string, SourcePath: UE.EditorPropertyPath, MemberGuid: UE.Guid, Kind: UE.EBindingKind);
        ObjectName: string;
        PropertyName: string;
        FunctionName: string;
        SourceProperty: string;
        SourcePath: UE.EditorPropertyPath;
        MemberGuid: UE.Guid;
        Kind: UE.EBindingKind;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DelegateEditorBinding_0__: boolean;
    }
    
    class DelegateFunction extends UE.Function {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DelegateFunction;
        static Load(InName: string): DelegateFunction;
    
        __tid_DelegateFunction_0__: boolean;
    }
    
    class DelegateProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DelegateProperty;
        static Load(InName: string): DelegateProperty;
    
        __tid_DelegateProperty_0__: boolean;
    }
    
    class DelegateRuntimeBinding {
        constructor();
        constructor(ObjectName: string, PropertyName: string, FunctionName: string, SourcePath: UE.DynamicPropertyPath, Kind: UE.EBindingKind);
        ObjectName: string;
        PropertyName: string;
        FunctionName: string;
        SourcePath: UE.DynamicPropertyPath;
        Kind: UE.EBindingKind;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DelegateRuntimeBinding_0__: boolean;
    }
    
    class DemoNetConnection extends UE.NetConnection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DemoNetConnection;
        static Load(InName: string): DemoNetConnection;
    
        __tid_DemoNetConnection_0__: boolean;
    }
    
    class PendingNetGame extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NetDriver: UE.NetDriver;
        DemoNetDriver: UE.DemoNetDriver;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PendingNetGame;
        static Load(InName: string): PendingNetGame;
    
        __tid_PendingNetGame_0__: boolean;
    }
    
    class DemoPendingNetGame extends UE.PendingNetGame {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DemoPendingNetGame;
        static Load(InName: string): DemoPendingNetGame;
    
        __tid_DemoPendingNetGame_0__: boolean;
    }
    
    class DepthFieldGlowInfo {
        constructor();
        constructor(bEnableGlow: boolean, GlowColor: UE.LinearColor, GlowOuterRadius: UE.Vector2D, GlowInnerRadius: UE.Vector2D);
        bEnableGlow: boolean;
        GlowColor: UE.LinearColor;
        GlowOuterRadius: UE.Vector2D;
        GlowInnerRadius: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DepthFieldGlowInfo_0__: boolean;
    }
    
    class DerivedDataCacheCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DerivedDataCacheCommandlet;
        static Load(InName: string): DerivedDataCacheCommandlet;
    
        __tid_DerivedDataCacheCommandlet_0__: boolean;
    }
    
    class DestroySessionCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<() => void>;
        OnFailure: $MulticastDelegate<() => void>;
        static DestroySession(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>) : UE.DestroySessionCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DestroySessionCallbackProxy;
        static Load(InName: string): DestroySessionCallbackProxy;
    
        __tid_DestroySessionCallbackProxy_0__: boolean;
    }
    
    class DestructibleInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DestructibleInterface;
        static Load(InName: string): DestructibleInterface;
    
        __tid_DestructibleInterface_0__: boolean;
    }
    
    class PropertyViewBase extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LazyObject: TLazyObjectPtr<UE.Object>;
        SoftObjectPath: UE.SoftObjectPath;
        bAutoLoadAsset: boolean;
        OnPropertyChanged: $MulticastDelegate<(PropertyName: string) => void>;
        GetObject() : UE.Object;
        SetObject(NewObject: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyViewBase;
        static Load(InName: string): PropertyViewBase;
    
        __tid_PropertyViewBase_0__: boolean;
    }
    
    class DetailsView extends UE.PropertyViewBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAllowFiltering: boolean;
        bAllowFavoriteSystem: boolean;
        bShowModifiedPropertiesOption: boolean;
        bShowKeyablePropertiesOption: boolean;
        bShowAnimatedPropertiesOption: boolean;
        ColumnWidth: number;
        bShowScrollBar: boolean;
        bForceHiddenPropertyVisibility: boolean;
        ViewIdentifier: string;
        CategoriesToShow: TArray<string>;
        PropertiesToShow: TArray<string>;
        bShowOnlyWhitelisted: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DetailsView;
        static Load(InName: string): DetailsView;
    
        __tid_DetailsView_0__: boolean;
    }
    
    class DetourCrowdAIController extends UE.AIController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DetourCrowdAIController;
        static Load(InName: string): DetourCrowdAIController;
    
        __tid_DetourCrowdAIController_0__: boolean;
    }
    
    class TextureLODGroup {
        constructor();
        constructor(Group: UE.TextureGroup, LODBias: number, LODBias_Smaller: number, LODBias_Smallest: number, NumStreamedMips: number, MipGenSettings: UE.TextureMipGenSettings, MinLODSize: number, MaxLODSize: number, MaxLODSize_Smaller: number, MaxLODSize_Smallest: number, OptionalLODBias: number, OptionalMaxLODSize: number, MinMagFilter: string, MipFilter: string, MipLoadOptions: UE.ETextureMipLoadOptions, DuplicateNonOptionalMips: boolean, Downscale: number, DownscaleOptions: UE.ETextureDownscaleOptions, VirtualTextureTileCountBias: number, VirtualTextureTileSizeBias: number);
        Group: UE.TextureGroup;
        LODBias: number;
        LODBias_Smaller: number;
        LODBias_Smallest: number;
        NumStreamedMips: number;
        MipGenSettings: UE.TextureMipGenSettings;
        MinLODSize: number;
        MaxLODSize: number;
        MaxLODSize_Smaller: number;
        MaxLODSize_Smallest: number;
        OptionalLODBias: number;
        OptionalMaxLODSize: number;
        MinMagFilter: string;
        MipFilter: string;
        MipLoadOptions: UE.ETextureMipLoadOptions;
        DuplicateNonOptionalMips: boolean;
        Downscale: number;
        DownscaleOptions: UE.ETextureDownscaleOptions;
        VirtualTextureTileCountBias: number;
        VirtualTextureTileSizeBias: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TextureLODGroup_0__: boolean;
    }
    
    class TextureLODSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureLODGroups: TArray<UE.TextureLODGroup>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureLODSettings;
        static Load(InName: string): TextureLODSettings;
    
        __tid_TextureLODSettings_0__: boolean;
    }
    
    class DeviceProfile extends UE.TextureLODSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DeviceType: string;
        BaseProfileName: string;
        Parent: UE.Object;
        CVars: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DeviceProfile;
        static Load(InName: string): DeviceProfile;
    
        __tid_DeviceProfile_0__: boolean;
    }
    
    class DeviceProfileFragment extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DeviceProfileFragment;
        static Load(InName: string): DeviceProfileFragment;
    
        __tid_DeviceProfileFragment_0__: boolean;
    }
    
    class DeviceProfileManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Profiles: TArray<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DeviceProfileManager;
        static Load(InName: string): DeviceProfileManager;
    
        __tid_DeviceProfileManager_0__: boolean;
    }
    
    enum EGrammaticalGender { Neuter, Masculine, Feminine, Mixed, EGrammaticalGender_MAX, __typeKeyDoNoAccess}
    enum EGrammaticalNumber { Singular, Plural, EGrammaticalNumber_MAX, __typeKeyDoNoAccess}
    class DialogueVoice extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Gender: UE.EGrammaticalGender;
        Plurality: UE.EGrammaticalNumber;
        LocalizationGUID: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DialogueVoice;
        static Load(InName: string): DialogueVoice;
    
        __tid_DialogueVoice_0__: boolean;
    }
    
    class DialogueContext {
        constructor();
        constructor(Speaker: UE.DialogueVoice, Targets: TArray<UE.DialogueVoice>);
        Speaker: UE.DialogueVoice;
        Targets: TArray<UE.DialogueVoice>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DialogueContext_0__: boolean;
    }
    
    class DialogueSoundWaveProxy extends UE.SoundBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DialogueSoundWaveProxy;
        static Load(InName: string): DialogueSoundWaveProxy;
    
        __tid_DialogueSoundWaveProxy_0__: boolean;
    }
    
    class DialogueContextMapping {
        constructor();
        constructor(Context: UE.DialogueContext, SoundWave: UE.SoundWave, LocalizationKeyFormat: string, Proxy: UE.DialogueSoundWaveProxy);
        Context: UE.DialogueContext;
        SoundWave: UE.SoundWave;
        LocalizationKeyFormat: string;
        Proxy: UE.DialogueSoundWaveProxy;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DialogueContextMapping_0__: boolean;
    }
    
    class DialogueScriptEntry {
        constructor();
        constructor(SpeakingVoice: string, TargetVoices: TArray<string>, SpokenDialogue: string, VoiceActorDirection: string, AudioFileName: string, DialogueAsset: string, IsRecorded: boolean, LocalizationKeys: TArray<string>, SpeakingVoiceGUID: string, TargetVoiceGUIDs: TArray<string>, DialogueAssetGUID: string);
        SpeakingVoice: string;
        TargetVoices: TArray<string>;
        SpokenDialogue: string;
        VoiceActorDirection: string;
        AudioFileName: string;
        DialogueAsset: string;
        IsRecorded: boolean;
        LocalizationKeys: TArray<string>;
        SpeakingVoiceGUID: string;
        TargetVoiceGUIDs: TArray<string>;
        DialogueAssetGUID: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DialogueScriptEntry_0__: boolean;
    }
    
    class DialogueVoiceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DialogueVoiceFactory;
        static Load(InName: string): DialogueVoiceFactory;
    
        __tid_DialogueVoiceFactory_0__: boolean;
    }
    
    class DialogueWave extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMature: boolean;
        bOverride_SubtitleOverride: boolean;
        SpokenText: string;
        SubtitleOverride: string;
        VoiceActorDirection: string;
        ContextMappings: TArray<UE.DialogueContextMapping>;
        LocalizationGUID: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DialogueWave;
        static Load(InName: string): DialogueWave;
    
        __tid_DialogueWave_0__: boolean;
    }
    
    class DialogueWaveFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialSoundWave: UE.SoundWave;
        InitialSpeakerVoice: UE.DialogueVoice;
        HasSetInitialTargetVoice: boolean;
        InitialTargetVoices: TArray<UE.DialogueVoice>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DialogueWaveFactory;
        static Load(InName: string): DialogueWaveFactory;
    
        __tid_DialogueWaveFactory_0__: boolean;
    }
    
    class DialogueWaveParameter {
        constructor();
        constructor(DialogueWave: UE.DialogueWave, Context: UE.DialogueContext);
        DialogueWave: UE.DialogueWave;
        Context: UE.DialogueContext;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DialogueWaveParameter_0__: boolean;
    }
    
    class DiffAssetRegistriesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetRegistrySearchPath: TArray<string>;
        P4Repository: string;
        P4EngineBasePath: string;
        P4EngineAssetPath: string;
        P4GameBasePath: string;
        P4GameAssetPath: string;
        RegexBranchCL: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DiffAssetRegistriesCommandlet;
        static Load(InName: string): DiffAssetRegistriesCommandlet;
    
        __tid_DiffAssetRegistriesCommandlet_0__: boolean;
    }
    
    class DiffAssetsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DiffAssetsCommandlet;
        static Load(InName: string): DiffAssetsCommandlet;
    
        __tid_DiffAssetsCommandlet_0__: boolean;
    }
    
    class DiffFilesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DiffFilesCommandlet;
        static Load(InName: string): DiffFilesCommandlet;
    
        __tid_DiffFilesCommandlet_0__: boolean;
    }
    
    class DiffPackagesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Packages: FixSizeArray<UE.Package>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DiffPackagesCommandlet;
        static Load(InName: string): DiffPackagesCommandlet;
    
        __tid_DiffPackagesCommandlet_0__: boolean;
    }
    
    class DirectorTrackCut {
        constructor();
        constructor(Time: number, TransitionTime: number, TargetCamGroup: string, ShotNumber: number);
        Time: number;
        TransitionTime: number;
        TargetCamGroup: string;
        ShotNumber: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DirectorTrackCut_0__: boolean;
    }
    
    class WidgetAnimation_DEPRECATED {
        constructor();
        constructor(MovieScene: UE.MovieScene, AnimationBindings: TArray<UE.WidgetAnimationBinding>);
        MovieScene: UE.MovieScene;
        AnimationBindings: TArray<UE.WidgetAnimationBinding>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetAnimation_DEPRECATED_0__: boolean;
    }
    
    enum EWidgetCompileTimeTickPrediction { WontTick, OnDemand, WillTick, EWidgetCompileTimeTickPrediction_MAX, __typeKeyDoNoAccess}
    class WidgetBlueprint extends UE.BaseWidgetBlueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Bindings: TArray<UE.DelegateEditorBinding>;
        AnimationData: TArray<UE.WidgetAnimation_DEPRECATED>;
        Animations: TArray<UE.WidgetAnimation>;
        PaletteCategory: string;
        TickFrequency: UE.EWidgetTickFrequency;
        TickPrediction: UE.EWidgetCompileTimeTickPrediction;
        TickPredictionReason: string;
        PropertyBindings: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetBlueprint;
        static Load(InName: string): WidgetBlueprint;
    
        __tid_WidgetBlueprint_0__: boolean;
    }
    
    enum EPropertyBindingPermissionLevel { Allow, Prevent, PreventAndWarn, PreventAndError, EPropertyBindingPermissionLevel_MAX, __typeKeyDoNoAccess}
    class WidgetCompilerOptions {
        constructor();
        constructor(bAllowBlueprintTick: boolean, bAllowBlueprintPaint: boolean, PropertyBindingRule: UE.EPropertyBindingPermissionLevel, Rules: TArray<TSoftClassPtr<UE.WidgetCompilerRule>>);
        bAllowBlueprintTick: boolean;
        bAllowBlueprintPaint: boolean;
        PropertyBindingRule: UE.EPropertyBindingPermissionLevel;
        Rules: TArray<TSoftClassPtr<UE.WidgetCompilerRule>>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetCompilerOptions_0__: boolean;
    }
    
    class DirectoryWidgetCompilerOptions {
        constructor();
        constructor(Directory: UE.DirectoryPath, IgnoredWidgets: TArray<TSoftObjectPtr<UE.WidgetBlueprint>>, Options: UE.WidgetCompilerOptions);
        Directory: UE.DirectoryPath;
        IgnoredWidgets: TArray<TSoftObjectPtr<UE.WidgetBlueprint>>;
        Options: UE.WidgetCompilerOptions;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DirectoryWidgetCompilerOptions_0__: boolean;
    }
    
    class DistanceDatum {
        constructor();
        constructor(FadeInDistanceStart: number, FadeInDistanceEnd: number, FadeOutDistanceStart: number, FadeOutDistanceEnd: number, Volume: number);
        FadeInDistanceStart: number;
        FadeInDistanceEnd: number;
        FadeOutDistanceStart: number;
        FadeOutDistanceEnd: number;
        Volume: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DistanceDatum_0__: boolean;
    }
    
    class DistributionFloatConstant extends UE.DistributionFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Constant: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionFloatConstant;
        static Load(InName: string): DistributionFloatConstant;
    
        __tid_DistributionFloatConstant_0__: boolean;
    }
    
    class DistributionFloatConstantCurve extends UE.DistributionFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstantCurve: UE.InterpCurveFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionFloatConstantCurve;
        static Load(InName: string): DistributionFloatConstantCurve;
    
        __tid_DistributionFloatConstantCurve_0__: boolean;
    }
    
    enum DistributionParamMode { DPM_Normal, DPM_Abs, DPM_Direct, DPM_MAX, __typeKeyDoNoAccess}
    class DistributionFloatParameterBase extends UE.DistributionFloatConstant {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        MinInput: number;
        MaxInput: number;
        MinOutput: number;
        MaxOutput: number;
        ParamMode: UE.DistributionParamMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionFloatParameterBase;
        static Load(InName: string): DistributionFloatParameterBase;
    
        __tid_DistributionFloatParameterBase_0__: boolean;
    }
    
    class DistributionFloatParticleParameter extends UE.DistributionFloatParameterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionFloatParticleParameter;
        static Load(InName: string): DistributionFloatParticleParameter;
    
        __tid_DistributionFloatParticleParameter_0__: boolean;
    }
    
    class DistributionFloatUniform extends UE.DistributionFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: number;
        Max: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionFloatUniform;
        static Load(InName: string): DistributionFloatUniform;
    
        __tid_DistributionFloatUniform_0__: boolean;
    }
    
    class InterpCurvePointVector2D {
        constructor();
        constructor(InVal: number, OutVal: UE.Vector2D, ArriveTangent: UE.Vector2D, LeaveTangent: UE.Vector2D, InterpMode: UE.EInterpCurveMode);
        InVal: number;
        OutVal: UE.Vector2D;
        ArriveTangent: UE.Vector2D;
        LeaveTangent: UE.Vector2D;
        InterpMode: UE.EInterpCurveMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurvePointVector2D_0__: boolean;
    }
    
    class InterpCurveVector2D {
        constructor();
        constructor(Points: TArray<UE.InterpCurvePointVector2D>, bIsLooped: boolean, LoopKeyOffset: number);
        Points: TArray<UE.InterpCurvePointVector2D>;
        bIsLooped: boolean;
        LoopKeyOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurveVector2D_0__: boolean;
    }
    
    class DistributionFloatUniformCurve extends UE.DistributionFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstantCurve: UE.InterpCurveVector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionFloatUniformCurve;
        static Load(InName: string): DistributionFloatUniformCurve;
    
        __tid_DistributionFloatUniformCurve_0__: boolean;
    }
    
    enum EDistributionVectorLockFlags { EDVLF_None, EDVLF_XY, EDVLF_XZ, EDVLF_YZ, EDVLF_XYZ, EDVLF_MAX, __typeKeyDoNoAccess}
    class DistributionVectorConstant extends UE.DistributionVector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Constant: UE.Vector;
        bLockAxes: boolean;
        LockedAxes: UE.EDistributionVectorLockFlags;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionVectorConstant;
        static Load(InName: string): DistributionVectorConstant;
    
        __tid_DistributionVectorConstant_0__: boolean;
    }
    
    class DistributionVectorConstantCurve extends UE.DistributionVector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstantCurve: UE.InterpCurveVector;
        bLockAxes: boolean;
        LockedAxes: UE.EDistributionVectorLockFlags;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionVectorConstantCurve;
        static Load(InName: string): DistributionVectorConstantCurve;
    
        __tid_DistributionVectorConstantCurve_0__: boolean;
    }
    
    class DistributionVectorParameterBase extends UE.DistributionVectorConstant {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        MinInput: UE.Vector;
        MaxInput: UE.Vector;
        MinOutput: UE.Vector;
        MaxOutput: UE.Vector;
        ParamModes: FixSizeArray<UE.DistributionParamMode>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionVectorParameterBase;
        static Load(InName: string): DistributionVectorParameterBase;
    
        __tid_DistributionVectorParameterBase_0__: boolean;
    }
    
    class DistributionVectorParticleParameter extends UE.DistributionVectorParameterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionVectorParticleParameter;
        static Load(InName: string): DistributionVectorParticleParameter;
    
        __tid_DistributionVectorParticleParameter_0__: boolean;
    }
    
    enum EDistributionVectorMirrorFlags { EDVMF_Same, EDVMF_Different, EDVMF_Mirror, EDVMF_MAX, __typeKeyDoNoAccess}
    class DistributionVectorUniform extends UE.DistributionVector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Max: UE.Vector;
        Min: UE.Vector;
        bLockAxes: boolean;
        LockedAxes: UE.EDistributionVectorLockFlags;
        MirrorFlags: FixSizeArray<UE.EDistributionVectorMirrorFlags>;
        bUseExtremes: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionVectorUniform;
        static Load(InName: string): DistributionVectorUniform;
    
        __tid_DistributionVectorUniform_0__: boolean;
    }
    
    class TwoVectors {
        constructor();
        constructor(v1: UE.Vector, v2: UE.Vector);
        v1: UE.Vector;
        v2: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TwoVectors_0__: boolean;
    }
    
    class InterpCurvePointTwoVectors {
        constructor();
        constructor(InVal: number, OutVal: UE.TwoVectors, ArriveTangent: UE.TwoVectors, LeaveTangent: UE.TwoVectors, InterpMode: UE.EInterpCurveMode);
        InVal: number;
        OutVal: UE.TwoVectors;
        ArriveTangent: UE.TwoVectors;
        LeaveTangent: UE.TwoVectors;
        InterpMode: UE.EInterpCurveMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurvePointTwoVectors_0__: boolean;
    }
    
    class InterpCurveTwoVectors {
        constructor();
        constructor(Points: TArray<UE.InterpCurvePointTwoVectors>, bIsLooped: boolean, LoopKeyOffset: number);
        Points: TArray<UE.InterpCurvePointTwoVectors>;
        bIsLooped: boolean;
        LoopKeyOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurveTwoVectors_0__: boolean;
    }
    
    class DistributionVectorUniformCurve extends UE.DistributionVector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstantCurve: UE.InterpCurveTwoVectors;
        bLockAxes1: boolean;
        bLockAxes2: boolean;
        LockedAxes: FixSizeArray<UE.EDistributionVectorLockFlags>;
        MirrorFlags: FixSizeArray<UE.EDistributionVectorMirrorFlags>;
        bUseExtremes: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DistributionVectorUniformCurve;
        static Load(InName: string): DistributionVectorUniformCurve;
    
        __tid_DistributionVectorUniformCurve_0__: boolean;
    }
    
    namespace Engine.EngineDamageTypes.DmgTypeBP_Environmental {
        class DmgTypeBP_Environmental_C extends UE.DamageType {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): DmgTypeBP_Environmental_C;
            static Load(InName: string): DmgTypeBP_Environmental_C;
        
            __tid_DmgTypeBP_Environmental_C_0__: boolean;
        }
        
    }

    class DockableWindowDragOperation extends UE.ViewportDragOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DockableWindowDragOperation;
        static Load(InName: string): DockableWindowDragOperation;
    
        __tid_DockableWindowDragOperation_0__: boolean;
    }
    
    class DockTabStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(CloseButtonStyle: UE.ButtonStyle, NormalBrush: UE.SlateBrush, ActiveBrush: UE.SlateBrush, ColorOverlayTabBrush: UE.SlateBrush, ColorOverlayIconBrush: UE.SlateBrush, ForegroundBrush: UE.SlateBrush, HoveredBrush: UE.SlateBrush, ContentAreaBrush: UE.SlateBrush, TabWellBrush: UE.SlateBrush, TabPadding: UE.Margin, OverlapWidth: number, FlashColor: UE.SlateColor);
        CloseButtonStyle: UE.ButtonStyle;
        NormalBrush: UE.SlateBrush;
        ActiveBrush: UE.SlateBrush;
        ColorOverlayTabBrush: UE.SlateBrush;
        ColorOverlayIconBrush: UE.SlateBrush;
        ForegroundBrush: UE.SlateBrush;
        HoveredBrush: UE.SlateBrush;
        ContentAreaBrush: UE.SlateBrush;
        TabWellBrush: UE.SlateBrush;
        TabPadding: UE.Margin;
        OverlapWidth: number;
        FlashColor: UE.SlateColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DockTabStyle_0__: boolean;
    }
    
    class MaterialSpriteElement {
        constructor();
        constructor(Material: UE.MaterialInterface, DistanceToOpacityCurve: UE.CurveFloat, bSizeIsInScreenSpace: boolean, BaseSizeX: number, BaseSizeY: number, DistanceToSizeCurve: UE.CurveFloat);
        Material: UE.MaterialInterface;
        DistanceToOpacityCurve: UE.CurveFloat;
        bSizeIsInScreenSpace: boolean;
        BaseSizeX: number;
        BaseSizeY: number;
        DistanceToSizeCurve: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialSpriteElement_0__: boolean;
    }
    
    class MaterialBillboardComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Elements: TArray<UE.MaterialSpriteElement>;
        AddElement(Material: $Nullable<UE.MaterialInterface>, DistanceToOpacityCurve: $Nullable<UE.CurveFloat>, bSizeIsInScreenSpace: boolean, BaseSizeX: number, BaseSizeY: number, DistanceToSizeCurve: $Nullable<UE.CurveFloat>) : void;
        SetElements(NewElements: TArray<UE.MaterialSpriteElement>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialBillboardComponent;
        static Load(InName: string): MaterialBillboardComponent;
    
        __tid_MaterialBillboardComponent_0__: boolean;
    }
    
    class DocumentationActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DocumentLink: string;
        Billboard: UE.MaterialBillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DocumentationActor;
        static Load(InName: string): DocumentationActor;
    
        __tid_DocumentationActor_0__: boolean;
    }
    
    class DoubleProperty extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DoubleProperty;
        static Load(InName: string): DoubleProperty;
    
        __tid_DoubleProperty_0__: boolean;
    }
    
    class DPICustomScalingRule extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DPICustomScalingRule;
        static Load(InName: string): DPICustomScalingRule;
    
        __tid_DPICustomScalingRule_0__: boolean;
    }
    
    class DraggingTransformableData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DraggingTransformableData_0__: boolean;
    }
    
    class DrawSphereComponent extends UE.SphereComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DrawSphereComponent;
        static Load(InName: string): DrawSphereComponent;
    
        __tid_DrawSphereComponent_0__: boolean;
    }
    
    class DrawToRenderTargetContext {
        constructor();
        constructor(RenderTarget: UE.TextureRenderTarget2D);
        RenderTarget: UE.TextureRenderTarget2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DrawToRenderTargetContext_0__: boolean;
    }
    
    class DropNoteInfo {
        constructor();
        constructor(Location: UE.Vector, Rotation: UE.Rotator, Comment: string);
        Location: UE.Vector;
        Rotation: UE.Rotator;
        Comment: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DropNoteInfo_0__: boolean;
    }
    
    class DummySpacerCameraTypes {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DummySpacerCameraTypes_0__: boolean;
    }
    
    class DumpBlueprintsInfoCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DumpBlueprintsInfoCommandlet;
        static Load(InName: string): DumpBlueprintsInfoCommandlet;
    
        __tid_DumpBlueprintsInfoCommandlet_0__: boolean;
    }
    
    class DumpHiddenCategoriesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DumpHiddenCategoriesCommandlet;
        static Load(InName: string): DumpHiddenCategoriesCommandlet;
    
        __tid_DumpHiddenCategoriesCommandlet_0__: boolean;
    }
    
    class DynamicClass extends UE.Class {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DynamicClass;
        static Load(InName: string): DynamicClass;
    
        __tid_DynamicClass_0__: boolean;
    }
    
    class DynamicDelegateProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Fire() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DynamicDelegateProxy;
        static Load(InName: string): DynamicDelegateProxy;
    
        __tid_DynamicDelegateProxy_0__: boolean;
    }
    
    enum EDynamicBoxType { Horizontal, Vertical, Wrap, VerticalWrap, Radial, Overlay, EDynamicBoxType_MAX, __typeKeyDoNoAccess}
    enum ESlateSizeRule { Automatic, Fill, ESlateSizeRule_MAX, __typeKeyDoNoAccess}
    class SlateChildSize {
        constructor();
        constructor(Value: number, SizeRule: UE.ESlateSizeRule);
        Value: number;
        SizeRule: UE.ESlateSizeRule;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlateChildSize_0__: boolean;
    }
    
    class RadialBoxSettings {
        constructor();
        constructor(bDistributeItemsEvenly: boolean, AngleBetweenItems: number, StartingAngle: number);
        bDistributeItemsEvenly: boolean;
        AngleBetweenItems: number;
        StartingAngle: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RadialBoxSettings_0__: boolean;
    }
    
    class UserWidgetPool {
        constructor();
        constructor(ActiveWidgets: TArray<UE.UserWidget>, InactiveWidgets: TArray<UE.UserWidget>);
        ActiveWidgets: TArray<UE.UserWidget>;
        InactiveWidgets: TArray<UE.UserWidget>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UserWidgetPool_0__: boolean;
    }
    
    class DynamicEntryBoxBase extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EntryBoxType: UE.EDynamicBoxType;
        EntrySpacing: UE.Vector2D;
        SpacingPattern: TArray<UE.Vector2D>;
        EntrySizeRule: UE.SlateChildSize;
        EntryHorizontalAlignment: UE.EHorizontalAlignment;
        EntryVerticalAlignment: UE.EVerticalAlignment;
        MaxElementSize: number;
        RadialBoxSettings: UE.RadialBoxSettings;
        EntryWidgetPool: UE.UserWidgetPool;
        GetAllEntries() : TArray<UE.UserWidget>;
        GetNumEntries() : number;
        SetEntrySpacing(InEntrySpacing: UE.Vector2D) : void;
        SetRadialSettings(InSettings: UE.RadialBoxSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DynamicEntryBoxBase;
        static Load(InName: string): DynamicEntryBoxBase;
    
        __tid_DynamicEntryBoxBase_0__: boolean;
    }
    
    class DynamicEntryBox extends UE.DynamicEntryBoxBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumDesignerPreviewEntries: number;
        EntryWidgetClass: UE.Class;
        BP_CreateEntry() : UE.UserWidget;
        BP_CreateEntryOfClass(EntryClass: $Nullable<UE.Class>) : UE.UserWidget;
        RemoveEntry(EntryWidget: $Nullable<UE.UserWidget>) : void;
        Reset(bDeleteWidgets?: boolean /* = false */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): DynamicEntryBox;
        static Load(InName: string): DynamicEntryBox;
    
        __tid_DynamicEntryBox_0__: boolean;
    }
    
    class DynamicsBandSettings {
        constructor();
        constructor(CrossoverTopFrequency: number, AttackTimeMsec: number, ReleaseTimeMsec: number, ThresholdDb: number, Ratio: number, KneeBandwidthDb: number, InputGainDb: number, OutputGainDb: number);
        CrossoverTopFrequency: number;
        AttackTimeMsec: number;
        ReleaseTimeMsec: number;
        ThresholdDb: number;
        Ratio: number;
        KneeBandwidthDb: number;
        InputGainDb: number;
        OutputGainDb: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DynamicsBandSettings_0__: boolean;
    }
    
    class StreamableTextureInstance {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StreamableTextureInstance_0__: boolean;
    }
    
    class DynamicTextureInstance extends UE.StreamableTextureInstance {
        constructor();
        constructor(Texture: UE.Texture2D, bAttached: boolean, OriginalRadius: number);
        Texture: UE.Texture2D;
        bAttached: boolean;
        OriginalRadius: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_DynamicTextureInstance_0__: boolean;
    }
    
    enum EAdManagerDelegate { AMD_ClickedBanner, AMD_UserClosedAd, AMD_MAX, __typeKeyDoNoAccess}
    enum EAILockSource { Animation, Logic, Script, Gameplay, MAX, __typeKeyDoNoAccess}
    enum EAITaskPriority { Lowest, Low, AutonomousAI, High, Ultimate, EAITaskPriority_MAX, __typeKeyDoNoAccess}
    enum EAllowEditsMode { AllEdits, AllowSequencerEditsOnly, AllowLevelEditsOnly, EAllowEditsMode_MAX, __typeKeyDoNoAccess}
    enum EAlphaChannelMode { Disabled, LinearColorSpaceOnly, AllowThroughTonemapper, EAlphaChannelMode_MAX, __typeKeyDoNoAccess}
    enum EAnimAssetCurveFlags { AACF_NONE, AACF_DriveMorphTarget_DEPRECATED, AACF_DriveAttribute_DEPRECATED, AACF_Editable, AACF_DriveMaterial_DEPRECATED, AACF_Metadata, AACF_DriveTrack, AACF_Disabled, AACF_MAX, __typeKeyDoNoAccess}
    enum EAntiAliasingMethod { AAM_None, AAM_FXAA, AAM_TemporalAA, AAM_MSAA, AAM_MAX, __typeKeyDoNoAccess}
    enum EAppleTextureType { Unknown, Image, PixelBuffer, Surface, MetalTexture, EAppleTextureType_MAX, __typeKeyDoNoAccess}
    enum EApplicationState { Unknown, Inactive, Background, Active, EApplicationState_MAX, __typeKeyDoNoAccess}
    enum EAppMsgType { Ok, YesNo, OkCancel, YesNoCancel, CancelRetryContinue, YesNoYesAllNoAll, YesNoYesAllNoAllCancel, YesNoYesAll, EAppMsgType_MAX, __typeKeyDoNoAccess}
    enum EAppReturnType { No, Yes, YesAll, NoAll, Cancel, Ok, Retry, Continue, EAppReturnType_MAX, __typeKeyDoNoAccess}
    enum EARSessionConfigFlags { None, GenerateMeshData, RenderMeshDataInWireframe, GenerateCollisionForMeshData, GenerateNavMeshForMeshData, UseMeshDataForOcclusion, EARSessionConfigFlags_MAX, __typeKeyDoNoAccess}
    class EasingComponentData {
        constructor();
        constructor(Section: UE.MovieSceneSection);
        Section: UE.MovieSceneSection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EasingComponentData_0__: boolean;
    }
    
    enum EAssetEditorOpenLocation { Default, NewWindow, MainWindow, ContentBrowser, LastDockedWindowOrNewWindow, LastDockedWindowOrMainWindow, LastDockedWindowOrContentBrowser, EAssetEditorOpenLocation_MAX, __typeKeyDoNoAccess}
    enum EAttractorParticleSelectionMethod { EAPSM_Random, EAPSM_Sequential, EAPSM_MAX, __typeKeyDoNoAccess}
    enum EAudioRecordingMode { None, AudioTrack, EAudioRecordingMode_MAX, __typeKeyDoNoAccess}
    enum EAutoChangeMode { AutoKey, AutoTrack, All, None, EAutoChangeMode_MAX, __typeKeyDoNoAccess}
    enum EAutoExposureMethodUI { AEM_Histogram, AEM_Basic, AEM_Manual, AEM_MAX, __typeKeyDoNoAccess}
    enum EBeaconConnectionState { Invalid, Closed, Pending, Open, EBeaconConnectionState_MAX, __typeKeyDoNoAccess}
    enum EBeam2Method { PEB2M_Distance, PEB2M_Target, PEB2M_Branch, PEB2M_MAX, __typeKeyDoNoAccess}
    enum EBeamTaperMethod { PEBTM_None, PEBTM_Full, PEBTM_Partial, PEBTM_MAX, __typeKeyDoNoAccess}
    enum EBitmapCSType { BCST_BLCS_CALIBRATED_RGB, BCST_LCS_sRGB, BCST_LCS_WINDOWS_COLOR_SPACE, BCST_PROFILE_LINKED, BCST_PROFILE_EMBEDDED, BCST_MAX, __typeKeyDoNoAccess}
    enum EBitmapHeaderVersion { BHV_BITMAPINFOHEADER, BHV_BITMAPV2INFOHEADER, BHV_BITMAPV3INFOHEADER, BHV_BITMAPV4HEADER, BHV_BITMAPV5HEADER, BHV_MAX, __typeKeyDoNoAccess}
    enum EBlueprintPinStyleType { BPST_Original, BPST_VariantA, BPST_MAX, __typeKeyDoNoAccess}
    enum EBone { Wrist_Root, Hand_Start, Forearm_Stub, Thumb_0, Thumb_1, Thumb_2, Thumb_3, Index_1, Index_2, Index_3, Middle_1, Middle_2, Middle_3, Ring_1, Ring_2, Ring_3, Pinky_0, Pinky_1, Pinky_2, Pinky_3, Thumb_Tip, Max_Skinnable, Index_Tip, Middle_Tip, Ring_Tip, Pinky_Tip, Hand_End, Bone_Max, Invalid, EBone_MAX, __typeKeyDoNoAccess}
    enum EBoneSpaces { WorldSpace, ComponentSpace, EBoneSpaces_MAX, __typeKeyDoNoAccess}
    enum EBoneVisibilityStatus { BVS_HiddenByParent, BVS_Visible, BVS_ExplicitlyHidden, BVS_MAX, __typeKeyDoNoAccess}
    enum EBoundaryType { Boundary_Outer, Boundary_PlayArea, Boundary_MAX, __typeKeyDoNoAccess}
    enum EBTChildIndex { FirstNode, TaskNode, EBTChildIndex_MAX, __typeKeyDoNoAccess}
    enum ECameraAlphaBlendMode { CABM_Linear, CABM_Cubic, CABM_MAX, __typeKeyDoNoAccess}
    enum ECameraShakeUpdateResultFlags { ApplyAsAbsolute, SkipAutoScale, SkipAutoPlaySpace, Default, ECameraShakeUpdateResultFlags_MAX, __typeKeyDoNoAccess}
    enum ECanCreateConnectionResponse { CONNECT_RESPONSE_MAKE, CONNECT_RESPONSE_DISALLOW, CONNECT_RESPONSE_BREAK_OTHERS_A, CONNECT_RESPONSE_BREAK_OTHERS_B, CONNECT_RESPONSE_BREAK_OTHERS_AB, CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE, CONNECT_RESPONSE_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.CascadeConversion.ECascadeNiagaraOrbitChainMode {
        enum ECascadeNiagaraOrbitChainMode { Add, Scale, Link, NONE, ECascadeNiagaraOrbitChainMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.CascadeConversion.ECascadeNiagaraTwoVectorChannels {
        enum ECascadeNiagaraTwoVectorChannels { XY, YZ, XZ, ECascadeNiagaraTwoVectorChannels_MAX, __typeKeyDoNoAccess}
    }

    enum EChannelMaskParameterColor { Red, Green, Blue, Alpha, EChannelMaskParameterColor_MAX, __typeKeyDoNoAccess}
    enum EChaosWeightMapTarget { None, MaxDistance, BackstopDistance, BackstopRadius, AnimDriveMultiplier, EChaosWeightMapTarget_MAX, __typeKeyDoNoAccess}
    enum EClampMode { CMODE_Clamp, CMODE_ClampMin, CMODE_ClampMax, CMODE_MAX, __typeKeyDoNoAccess}
    enum EClearSceneOptions { NoClear, HardwareClear, QuadAtMaxZ, EClearSceneOptions_MAX, __typeKeyDoNoAccess}
    enum EClientRequestType { NonePending, ExistingSessionReservation, ReservationUpdate, EmptyServerReservation, Reconnect, Abandon, ReservationRemoveMembers, EClientRequestType_MAX, __typeKeyDoNoAccess}
    enum ECloudStorageDelegate { CSD_KeyValueReadComplete, CSD_KeyValueWriteComplete, CSD_ValueChanged, CSD_DocumentQueryComplete, CSD_DocumentReadComplete, CSD_DocumentWriteComplete, CSD_DocumentConflictDetected, CSD_MAX, __typeKeyDoNoAccess}
    enum ECollectionAttributeEnum { Chaos_Active, Chaos_DynamicState, Chaos_CollisionGroup, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    enum ECollectionGroupEnum { Chaos_Traansform, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    enum EColorChannel { Red, Green, Blue, Alpha, EColorChannel_MAX, __typeKeyDoNoAccess}
    enum EColorSpace { Unknown, Unmanaged, Rec_2020, Rec_709, Rift_CV1, Rift_S, Quest, P3, Adobe_RGB, EColorSpace_MAX, __typeKeyDoNoAccess}
    enum EColorVisionDeficiency { NormalVision, Deuteranope, Protanope, Tritanope, EColorVisionDeficiency_MAX, __typeKeyDoNoAccess}
    enum ECommentBoxMode { GroupMovement, NoGroupMovement, ECommentBoxMode_MAX, __typeKeyDoNoAccess}
    enum EComparisonMethod { Equal_To, Not_Equal_To, Greater_Than_Or_Equal_To, Less_Than_Or_Equal_To, Greater_Than, Less_Than, EComparisonMethod_MAX, __typeKeyDoNoAccess}
    enum ECompilerVersion { Default, VisualStudio2015, VisualStudio2017, VisualStudio2019, ECompilerVersion_MAX, __typeKeyDoNoAccess}
    enum EComponentSocketType { Invalid, Bone, Socket, EComponentSocketType_MAX, __typeKeyDoNoAccess}
    enum ECompositingSampleCount { One, Two, Four, Eight, ECompositingSampleCount_MAX, __typeKeyDoNoAccess}
    enum EComputeNTBsOptions { None, Normals, Tangents, WeightedNTBs, EComputeNTBsOptions_MAX, __typeKeyDoNoAccess}
    enum EConfidenceBehavior { None, HideActor, EConfidenceBehavior_MAX, __typeKeyDoNoAccess}
    enum EConfigFileSourceControlStatus { CFSCS_Unknown, CFSCS_Writable, CFSCS_Locked, CFSCS_MAX, __typeKeyDoNoAccess}
    enum EConsoleForGamepadLabels { None, XBoxOne, PS4, EConsoleForGamepadLabels_MAX, __typeKeyDoNoAccess}
    enum EConstraintFrame { Frame1, Frame2, EConstraintFrame_MAX, __typeKeyDoNoAccess}
    enum EConsumeMouseWheel { WhenScrollingPossible, Always, Never, EConsumeMouseWheel_MAX, __typeKeyDoNoAccess}
    enum EContentSourceCategory { BlueprintFeature, CodeFeature, EnterpriseFeature, Content, EnterpriseContent, SharedPack, Unknown, EContentSourceCategory_MAX, __typeKeyDoNoAccess}
    enum EContextTargetFlags { TARGET_Blueprint, TARGET_SubComponents, TARGET_NodeTarget, TARGET_PinObject, TARGET_SiblingPinObjects, TARGET_BlueprintLibraries, ContextTargetFlagsEnd, EContextTargetFlags_MAX, __typeKeyDoNoAccess}
    enum EControlConstraint { Orientation, Translation, MAX, __typeKeyDoNoAccess}
    enum EControllerFidelity { VR_ControllerFidelity_Estimated, VR_ControllerFidelity_Full, VR_ControllerFidelity_Partial, VR_ControllerFidelity_MAX, __typeKeyDoNoAccess}
    enum EControllerType { Laser, AssistingLaser, UI, Navigation, Unknown, EControllerType_MAX, __typeKeyDoNoAccess}
    enum ECookerStatsObjectSets { CookerStatsObjectSets_Default, CookerStatsObjectSets_MAX, __typeKeyDoNoAccess}
    enum ECookMode { CookOnTheFly, CookOnTheFlyFromTheEditor, CookByTheBookFromTheEditor, CookByTheBook, ECookMode_MAX, __typeKeyDoNoAccess}
    enum ECookTickFlags { None, MarkupInUsePackages, HideProgressDisplay, ECookTickFlags_MAX, __typeKeyDoNoAccess}
    enum ECsgOper { CSG_Active, CSG_Add, CSG_Subtract, CSG_Intersect, CSG_Deintersect, CSG_None, CSG_MAX, __typeKeyDoNoAccess}
    enum ECurveTableMode { Empty, SimpleCurves, RichCurves, ECurveTableMode_MAX, __typeKeyDoNoAccess}
    enum ECustomDepthStencil { Disabled, Enabled, EnabledOnDemand, EnabledWithStencil, ECustomDepthStencil_MAX, __typeKeyDoNoAccess}
    enum ECustomTimeStepSynchronizationState { Closed, Error, Synchronized, Synchronizing, ECustomTimeStepSynchronizationState_MAX, __typeKeyDoNoAccess}
    enum EDatasmithImportHierarchy { UseMultipleActors, UseSingleActor, UseOneBlueprint, EDatasmithImportHierarchy_MAX, __typeKeyDoNoAccess}
    enum EDataSortTypeEnum { ChaosNiagara_DataSortType_NoSorting, ChaosNiagara_DataSortType_RandomShuffle, ChaosNiagara_DataSortType_SortByMassMaxToMin, ChaosNiagara_DataSortType_SortByMassMinToMax, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum EDataSourceTypeEnum { ChaosNiagara_DataSourceType_Collision, ChaosNiagara_DataSourceType_Breaking, ChaosNiagara_DataSourceType_Trailing, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum EDataValidationResult { Invalid, Valid, NotValidated, EDataValidationResult_MAX, __typeKeyDoNoAccess}
    enum EDebugTypeEnum { ChaosNiagara_DebugType_NoDebug, ChaosNiagara_DebugType_ColorBySolver, ChaosNiagara_DebugType_ColorByParticleIndex, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum EDecompressionType { DTYPE_Setup, DTYPE_Invalid, DTYPE_Preview, DTYPE_Native, DTYPE_RealTime, DTYPE_Procedural, DTYPE_Xenon, DTYPE_Streaming, DTYPE_MAX, __typeKeyDoNoAccess}
    enum EDefaultBackBufferPixelFormat { DBBPF_B8G8R8A8, DBBPF_A16B16G16R16_DEPRECATED, DBBPF_FloatRGB_DEPRECATED, DBBPF_FloatRGBA, DBBPF_A2B10G10R10, DBBPF_MAX, __typeKeyDoNoAccess}
    enum EDefaultGraphicsRHI { DefaultGraphicsRHI_Default, DefaultGraphicsRHI_DX11, DefaultGraphicsRHI_DX12, DefaultGraphicsRHI_Vulkan, DefaultGraphicsRHI_MAX, __typeKeyDoNoAccess}
    enum EDefaultLocationUnit { Micrometers, Millimeters, Centimeters, Meters, Kilometers, Inches, Feet, Yards, Miles, Invalid, EDefaultLocationUnit_MAX, __typeKeyDoNoAccess}
    enum EDemoPlayFailure { Generic, DemoNotFound, Corrupt, InvalidVersion, InitBase, GameSpecificHeader, ReplayStreamerInternal, LoadMap, Serialization, EDemoPlayFailure_MAX, __typeKeyDoNoAccess}
    enum EDepthOfFieldFunctionValue { TDOF_NearAndFarMask, TDOF_NearMask, TDOF_FarMask, TDOF_CircleOfConfusionRadius, TDOF_MAX, __typeKeyDoNoAccess}
    enum EDescendantScrollDestination { IntoView, TopOrLeft, Center, EDescendantScrollDestination_MAX, __typeKeyDoNoAccess}
    enum EDesiredImageFormat { PNG, JPG, BMP, EXR, EDesiredImageFormat_MAX, __typeKeyDoNoAccess}
    class EdgeToCreate {
        constructor();
        constructor(VertexID0: UE.VertexID, VertexID1: UE.VertexID, EdgeAttributes: UE.MeshElementAttributeList, OriginalEdgeID: UE.EdgeID);
        VertexID0: UE.VertexID;
        VertexID1: UE.VertexID;
        EdgeAttributes: UE.MeshElementAttributeList;
        OriginalEdgeID: UE.EdgeID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdgeToCreate_0__: boolean;
    }
    
    class EdGraph_ReferenceViewer extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraph_ReferenceViewer;
        static Load(InName: string): EdGraph_ReferenceViewer;
    
        __tid_EdGraph_ReferenceViewer_0__: boolean;
    }
    
    class EdGraphNode_Comment extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CommentColor: UE.LinearColor;
        FontSize: number;
        bCommentBubbleVisible_InDetailsPanel: boolean;
        bColorCommentBubble: boolean;
        MoveMode: UE.ECommentBoxMode;
        CommentDepth: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphNode_Comment;
        static Load(InName: string): EdGraphNode_Comment;
    
        __tid_EdGraphNode_Comment_0__: boolean;
    }
    
    class EdGraphNode_Documentation extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Link: string;
        Excerpt: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphNode_Documentation;
        static Load(InName: string): EdGraphNode_Documentation;
    
        __tid_EdGraphNode_Documentation_0__: boolean;
    }
    
    class EdGraphNode_Reference extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphNode_Reference;
        static Load(InName: string): EdGraphNode_Reference;
    
        __tid_EdGraphNode_Reference_0__: boolean;
    }
    
    class EdGraphSchema_BehaviorTree extends UE.AIGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphSchema_BehaviorTree;
        static Load(InName: string): EdGraphSchema_BehaviorTree;
    
        __tid_EdGraphSchema_BehaviorTree_0__: boolean;
    }
    
    class EdGraphSchema_BehaviorTreeDecorator extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PC_Boolean: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphSchema_BehaviorTreeDecorator;
        static Load(InName: string): EdGraphSchema_BehaviorTreeDecorator;
    
        __tid_EdGraphSchema_BehaviorTreeDecorator_0__: boolean;
    }
    
    class EdGraphSchema_EnvironmentQuery extends UE.AIGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphSchema_EnvironmentQuery;
        static Load(InName: string): EdGraphSchema_EnvironmentQuery;
    
        __tid_EdGraphSchema_EnvironmentQuery_0__: boolean;
    }
    
    class EdGraphSchema_Niagara extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphSchema_Niagara;
        static Load(InName: string): EdGraphSchema_Niagara;
    
        __tid_EdGraphSchema_Niagara_0__: boolean;
    }
    
    class EdGraphSchema_NiagaraSystemOverview extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdGraphSchema_NiagaraSystemOverview;
        static Load(InName: string): EdGraphSchema_NiagaraSystemOverview;
    
        __tid_EdGraphSchema_NiagaraSystemOverview_0__: boolean;
    }
    
    class EdGraphSchemaAction_BlueprintVariableBase extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_BlueprintVariableBase_0__: boolean;
    }
    
    class EdGraphSchemaAction_EventFromFunction extends UE.EdGraphSchemaAction {
        constructor();
        constructor(SignatureFunction: UE.Function);
        SignatureFunction: UE.Function;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_EventFromFunction_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2NewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(NodeTemplate: UE.K2Node, bGotoNode: boolean);
        NodeTemplate: UE.K2Node;
        bGotoNode: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2NewNode_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2AddCallOnActor extends UE.EdGraphSchemaAction_K2NewNode {
        constructor();
        constructor(LevelActors: TArray<UE.Actor>);
        LevelActors: TArray<UE.Actor>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2AddCallOnActor_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2AddComment extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2AddComment_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2AddComponent extends UE.EdGraphSchemaAction_K2NewNode {
        constructor();
        constructor(ComponentClass: UE.Class, ComponentAsset: UE.Object);
        ComponentClass: UE.Class;
        ComponentAsset: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2AddComponent_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2AddCustomEvent extends UE.EdGraphSchemaAction_K2NewNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2AddCustomEvent_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2AddEvent extends UE.EdGraphSchemaAction_K2NewNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2AddEvent_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2AssignDelegate extends UE.EdGraphSchemaAction_K2NewNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2AssignDelegate_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2Delegate extends UE.EdGraphSchemaAction_BlueprintVariableBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2Delegate_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2Enum extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2Enum_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2TargetNode extends UE.EdGraphSchemaAction_K2NewNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2TargetNode_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2Event extends UE.EdGraphSchemaAction_K2TargetNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2Event_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2Graph extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2Graph_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2InputAction extends UE.EdGraphSchemaAction_K2TargetNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2InputAction_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2LocalVar extends UE.EdGraphSchemaAction_BlueprintVariableBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2LocalVar_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2PasteHere extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2PasteHere_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2Struct extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2Struct_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2Var extends UE.EdGraphSchemaAction_BlueprintVariableBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2Var_0__: boolean;
    }
    
    class EdGraphSchemaAction_K2ViewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(NodePtr: UE.K2Node);
        NodePtr: UE.K2Node;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_K2ViewNode_0__: boolean;
    }
    
    class EdGraphSchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(NodeTemplate: UE.EdGraphNode);
        NodeTemplate: UE.EdGraphNode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_NewNode_0__: boolean;
    }
    
    class EdGraphSchemaAction_NewStateComment extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_NewStateComment_0__: boolean;
    }
    
    class EdGraphSchemaAction_NewStateNode extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EdGraphSchemaAction_NewStateNode_0__: boolean;
    }
    
    class EditableGameplayTagQueryExpression extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQueryExpression;
        static Load(InName: string): EditableGameplayTagQueryExpression;
    
        __tid_EditableGameplayTagQueryExpression_0__: boolean;
    }
    
    class EditableGameplayTagQuery extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UserDescription: string;
        RootExpression: UE.EditableGameplayTagQueryExpression;
        TagQueryExportText_Helper: UE.GameplayTagQuery;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQuery;
        static Load(InName: string): EditableGameplayTagQuery;
    
        __tid_EditableGameplayTagQuery_0__: boolean;
    }
    
    class EditableGameplayTagQueryExpression_AllExprMatch extends UE.EditableGameplayTagQueryExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Expressions: TArray<UE.EditableGameplayTagQueryExpression>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQueryExpression_AllExprMatch;
        static Load(InName: string): EditableGameplayTagQueryExpression_AllExprMatch;
    
        __tid_EditableGameplayTagQueryExpression_AllExprMatch_0__: boolean;
    }
    
    class EditableGameplayTagQueryExpression_AllTagsMatch extends UE.EditableGameplayTagQueryExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Tags: UE.GameplayTagContainer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQueryExpression_AllTagsMatch;
        static Load(InName: string): EditableGameplayTagQueryExpression_AllTagsMatch;
    
        __tid_EditableGameplayTagQueryExpression_AllTagsMatch_0__: boolean;
    }
    
    class EditableGameplayTagQueryExpression_AnyExprMatch extends UE.EditableGameplayTagQueryExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Expressions: TArray<UE.EditableGameplayTagQueryExpression>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQueryExpression_AnyExprMatch;
        static Load(InName: string): EditableGameplayTagQueryExpression_AnyExprMatch;
    
        __tid_EditableGameplayTagQueryExpression_AnyExprMatch_0__: boolean;
    }
    
    class EditableGameplayTagQueryExpression_AnyTagsMatch extends UE.EditableGameplayTagQueryExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Tags: UE.GameplayTagContainer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQueryExpression_AnyTagsMatch;
        static Load(InName: string): EditableGameplayTagQueryExpression_AnyTagsMatch;
    
        __tid_EditableGameplayTagQueryExpression_AnyTagsMatch_0__: boolean;
    }
    
    class EditableGameplayTagQueryExpression_NoExprMatch extends UE.EditableGameplayTagQueryExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Expressions: TArray<UE.EditableGameplayTagQueryExpression>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQueryExpression_NoExprMatch;
        static Load(InName: string): EditableGameplayTagQueryExpression_NoExprMatch;
    
        __tid_EditableGameplayTagQueryExpression_NoExprMatch_0__: boolean;
    }
    
    class EditableGameplayTagQueryExpression_NoTagsMatch extends UE.EditableGameplayTagQueryExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Tags: UE.GameplayTagContainer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGameplayTagQueryExpression_NoTagsMatch;
        static Load(InName: string): EditableGameplayTagQueryExpression_NoTagsMatch;
    
        __tid_EditableGameplayTagQueryExpression_NoTagsMatch_0__: boolean;
    }
    
    class EditableMeshAdapter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableMeshAdapter;
        static Load(InName: string): EditableMeshAdapter;
    
        __tid_EditableMeshAdapter_0__: boolean;
    }
    
    class EditableGeometryCollectionAdapter extends UE.EditableMeshAdapter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeometryCollection: UE.GeometryCollection;
        OriginalGeometryCollection: UE.GeometryCollection;
        GeometryCollectionLODIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableGeometryCollectionAdapter;
        static Load(InName: string): EditableGeometryCollectionAdapter;
    
        __tid_EditableGeometryCollectionAdapter_0__: boolean;
    }
    
    enum ETriangleTessellationMode { ThreeTriangles, FourTriangles, ETriangleTessellationMode_MAX, __typeKeyDoNoAccess}
    enum EMeshModificationType { FirstInterim, Interim, Final, EMeshModificationType_MAX, __typeKeyDoNoAccess}
    enum EMeshTopologyChange { NoTopologyChange, TopologyChange, EMeshTopologyChange_MAX, __typeKeyDoNoAccess}
    class VertexPair {
        constructor();
        constructor(VertexID0: UE.VertexID, VertexID1: UE.VertexID);
        VertexID0: UE.VertexID;
        VertexID1: UE.VertexID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexPair_0__: boolean;
    }
    
    class PolygonToSplit {
        constructor();
        constructor(PolygonID: UE.PolygonID, VertexPairsToSplitAt: TArray<UE.VertexPair>);
        PolygonID: UE.PolygonID;
        VertexPairsToSplitAt: TArray<UE.VertexPair>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PolygonToSplit_0__: boolean;
    }
    
    class VertexAttributesForPolygonHole {
        constructor();
        constructor(VertexAttributeList: TArray<UE.MeshElementAttributeList>);
        VertexAttributeList: TArray<UE.MeshElementAttributeList>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexAttributesForPolygonHole_0__: boolean;
    }
    
    class VertexAttributesForPolygon {
        constructor();
        constructor(PolygonID: UE.PolygonID, PerimeterVertexAttributeLists: TArray<UE.MeshElementAttributeList>, VertexAttributeListsForEachHole: TArray<UE.VertexAttributesForPolygonHole>);
        PolygonID: UE.PolygonID;
        PerimeterVertexAttributeLists: TArray<UE.MeshElementAttributeList>;
        VertexAttributeListsForEachHole: TArray<UE.VertexAttributesForPolygonHole>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexAttributesForPolygon_0__: boolean;
    }
    
    class VertexToMove {
        constructor();
        constructor(VertexID: UE.VertexID, NewVertexPosition: UE.Vector);
        VertexID: UE.VertexID;
        NewVertexPosition: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexToMove_0__: boolean;
    }
    
    enum EInsetPolygonsMode { All, CenterPolygonOnly, SidePolygonsOnly, EInsetPolygonsMode_MAX, __typeKeyDoNoAccess}
    class SubdividedQuadVertex {
        constructor();
        constructor(VertexPositionIndex: number, TextureCoordinate0: UE.Vector2D, TextureCoordinate1: UE.Vector2D, VertexColor: UE.Color, VertexNormal: UE.Vector, VertexTangent: UE.Vector, VertexBinormalSign: number);
        VertexPositionIndex: number;
        TextureCoordinate0: UE.Vector2D;
        TextureCoordinate1: UE.Vector2D;
        VertexColor: UE.Color;
        VertexNormal: UE.Vector;
        VertexTangent: UE.Vector;
        VertexBinormalSign: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubdividedQuadVertex_0__: boolean;
    }
    
    class SubdividedQuad {
        constructor();
        constructor(QuadVertex0: UE.SubdividedQuadVertex, QuadVertex1: UE.SubdividedQuadVertex, QuadVertex2: UE.SubdividedQuadVertex, QuadVertex3: UE.SubdividedQuadVertex);
        QuadVertex0: UE.SubdividedQuadVertex;
        QuadVertex1: UE.SubdividedQuadVertex;
        QuadVertex2: UE.SubdividedQuadVertex;
        QuadVertex3: UE.SubdividedQuadVertex;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubdividedQuad_0__: boolean;
    }
    
    class SubdivisionLimitSection {
        constructor();
        constructor(SubdividedQuads: TArray<UE.SubdividedQuad>);
        SubdividedQuads: TArray<UE.SubdividedQuad>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubdivisionLimitSection_0__: boolean;
    }
    
    class SubdividedWireEdge {
        constructor();
        constructor(EdgeVertex0PositionIndex: number, EdgeVertex1PositionIndex: number);
        EdgeVertex0PositionIndex: number;
        EdgeVertex1PositionIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubdividedWireEdge_0__: boolean;
    }
    
    class SubdivisionLimitData {
        constructor();
        constructor(VertexPositions: TArray<UE.Vector>, Sections: TArray<UE.SubdivisionLimitSection>, SubdividedWireEdges: TArray<UE.SubdividedWireEdge>);
        VertexPositions: TArray<UE.Vector>;
        Sections: TArray<UE.SubdivisionLimitSection>;
        SubdividedWireEdges: TArray<UE.SubdividedWireEdge>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubdivisionLimitData_0__: boolean;
    }
    
    class VertexToCreate {
        constructor();
        constructor(VertexAttributes: UE.MeshElementAttributeList, OriginalVertexID: UE.VertexID);
        VertexAttributes: UE.MeshElementAttributeList;
        OriginalVertexID: UE.VertexID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexToCreate_0__: boolean;
    }
    
    class VertexInstanceToCreate {
        constructor();
        constructor(VertexID: UE.VertexID, VertexInstanceAttributes: UE.MeshElementAttributeList, OriginalVertexInstanceID: UE.VertexInstanceID);
        VertexID: UE.VertexID;
        VertexInstanceAttributes: UE.MeshElementAttributeList;
        OriginalVertexInstanceID: UE.VertexInstanceID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexInstanceToCreate_0__: boolean;
    }
    
    class VertexAndAttributes {
        constructor();
        constructor(VertexInstanceID: UE.VertexInstanceID, VertexID: UE.VertexID, PolygonVertexAttributes: UE.MeshElementAttributeList);
        VertexInstanceID: UE.VertexInstanceID;
        VertexID: UE.VertexID;
        PolygonVertexAttributes: UE.MeshElementAttributeList;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexAndAttributes_0__: boolean;
    }
    
    enum EPolygonEdgeHardness { NewEdgesSoft, NewEdgesHard, AllEdgesSoft, AllEdgesHard, EPolygonEdgeHardness_MAX, __typeKeyDoNoAccess}
    class PolygonToCreate {
        constructor();
        constructor(PolygonGroupID: UE.PolygonGroupID, PerimeterVertices: TArray<UE.VertexAndAttributes>, OriginalPolygonID: UE.PolygonID, PolygonEdgeHardness: UE.EPolygonEdgeHardness);
        PolygonGroupID: UE.PolygonGroupID;
        PerimeterVertices: TArray<UE.VertexAndAttributes>;
        OriginalPolygonID: UE.PolygonID;
        PolygonEdgeHardness: UE.EPolygonEdgeHardness;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PolygonToCreate_0__: boolean;
    }
    
    class PolygonGroupToCreate {
        constructor();
        constructor(PolygonGroupAttributes: UE.MeshElementAttributeList, OriginalPolygonGroupID: UE.PolygonGroupID);
        PolygonGroupAttributes: UE.MeshElementAttributeList;
        OriginalPolygonGroupID: UE.PolygonGroupID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PolygonGroupToCreate_0__: boolean;
    }
    
    class PolygonGroupForPolygon {
        constructor();
        constructor(PolygonID: UE.PolygonID, PolygonGroupID: UE.PolygonGroupID);
        PolygonID: UE.PolygonID;
        PolygonGroupID: UE.PolygonGroupID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PolygonGroupForPolygon_0__: boolean;
    }
    
    class EditableMesh extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Adapters: TArray<UE.EditableMeshAdapter>;
        TextureCoordinateCount: number;
        PendingCompactCounter: number;
        SubdivisionCount: number;
        AnyChangesToUndo() : boolean;
        AssignPolygonsToPolygonGroups(PolygonGroupForPolygons: TArray<UE.PolygonGroupForPolygon>, bDeleteOrphanedPolygonGroups: boolean) : void;
        BevelPolygons(PolygonIDs: TArray<UE.PolygonID>, BevelFixedDistance: number, BevelProgressTowardCenter: number, OutNewCenterPolygonIDs: $Ref<TArray<UE.PolygonID>>, OutNewSidePolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        ChangePolygonsVertexInstances(VertexInstancesForPolygons: TArray<UE.ChangeVertexInstancesForPolygon>) : void;
        Commit() : void;
        CommitInstance(ComponentToInstanceTo: $Nullable<UE.PrimitiveComponent>) : UE.EditableMesh;
        ComputeBoundingBox() : UE.Box;
        ComputeBoundingBoxAndSphere() : UE.BoxSphereBounds;
        ComputePolygonCenter(PolygonID: UE.PolygonID) : UE.Vector;
        ComputePolygonNormal(PolygonID: UE.PolygonID) : UE.Vector;
        ComputePolygonPlane(PolygonID: UE.PolygonID) : UE.Plane;
        ComputePolygonsSharedEdges(PolygonIDs: TArray<UE.PolygonID>, OutSharedEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        CreateEdges(EdgesToCreate: TArray<UE.EdgeToCreate>, OutNewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        CreateEmptyVertexRange(NumVerticesToCreate: number, OutNewVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        CreateMissingPolygonPerimeterEdges(PolygonID: UE.PolygonID, OutNewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        CreatePolygonGroups(PolygonGroupsToCreate: TArray<UE.PolygonGroupToCreate>, OutNewPolygonGroupIDs: $Ref<TArray<UE.PolygonGroupID>>) : void;
        CreatePolygons(PolygonsToCreate: TArray<UE.PolygonToCreate>, OutNewPolygonIDs: $Ref<TArray<UE.PolygonID>>, OutNewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        CreateVertexInstances(VertexInstancesToCreate: TArray<UE.VertexInstanceToCreate>, OutNewVertexInstanceIDs: $Ref<TArray<UE.VertexInstanceID>>) : void;
        CreateVertices(VerticesToCreate: TArray<UE.VertexToCreate>, OutNewVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        DeleteEdgeAndConnectedPolygons(EdgeID: UE.EdgeID, bDeleteOrphanedEdges: boolean, bDeleteOrphanedVertices: boolean, bDeleteOrphanedVertexInstances: boolean, bDeleteEmptyPolygonGroups: boolean) : void;
        DeleteEdges(EdgeIDsToDelete: TArray<UE.EdgeID>, bDeleteOrphanedVertices: boolean) : void;
        DeleteOrphanVertices(VertexIDsToDelete: TArray<UE.VertexID>) : void;
        DeletePolygonGroups(PolygonGroupIDs: TArray<UE.PolygonGroupID>) : void;
        DeletePolygons(PolygonIDsToDelete: TArray<UE.PolygonID>, bDeleteOrphanedEdges: boolean, bDeleteOrphanedVertices: boolean, bDeleteOrphanedVertexInstances: boolean, bDeleteEmptyPolygonGroups: boolean) : void;
        DeleteVertexAndConnectedEdgesAndPolygons(VertexID: UE.VertexID, bDeleteOrphanedEdges: boolean, bDeleteOrphanedVertices: boolean, bDeleteOrphanedVertexInstances: boolean, bDeleteEmptyPolygonGroups: boolean) : void;
        DeleteVertexInstances(VertexInstanceIDsToDelete: TArray<UE.VertexInstanceID>, bDeleteOrphanedVertices: boolean) : void;
        EndModification(bFromUndo?: boolean /* = false */) : void;
        ExtendEdges(EdgeIDs: TArray<UE.EdgeID>, bWeldNeighbors: boolean, OutNewExtendedEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        ExtendVertices(VertexIDs: TArray<UE.VertexID>, bOnlyExtendClosestEdge: boolean, ReferencePosition: UE.Vector, OutNewExtendedVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        ExtrudePolygons(Polygons: TArray<UE.PolygonID>, ExtrudeDistance: number, bKeepNeighborsTogether: boolean, OutNewExtrudedFrontPolygons: $Ref<TArray<UE.PolygonID>>) : void;
        FindPolygonLoop(EdgeID: UE.EdgeID, OutEdgeLoopEdgeIDs: $Ref<TArray<UE.EdgeID>>, OutFlippedEdgeIDs: $Ref<TArray<UE.EdgeID>>, OutReversedEdgeIDPathToTake: $Ref<TArray<UE.EdgeID>>, OutPolygonIDsToSplit: $Ref<TArray<UE.PolygonID>>) : void;
        FindPolygonPerimeterEdgeNumberForVertices(PolygonID: UE.PolygonID, EdgeVertexID0: UE.VertexID, EdgeVertexID1: UE.VertexID) : number;
        FindPolygonPerimeterVertexNumberForVertex(PolygonID: UE.PolygonID, VertexID: UE.VertexID) : number;
        FlipPolygons(PolygonIDs: TArray<UE.PolygonID>) : void;
        GeneratePolygonTangentsAndNormals(PolygonIDs: TArray<UE.PolygonID>) : void;
        GetEdgeConnectedPolygon(EdgeID: UE.EdgeID, ConnectedPolygonNumber: number) : UE.PolygonID;
        GetEdgeConnectedPolygonCount(EdgeID: UE.EdgeID) : number;
        GetEdgeConnectedPolygons(EdgeID: UE.EdgeID, OutConnectedPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetEdgeCount() : number;
        GetEdgeLoopElements(EdgeID: UE.EdgeID, EdgeLoopIDs: $Ref<TArray<UE.EdgeID>>) : void;
        GetEdgeThatConnectsVertices(VertexID0: UE.VertexID, VertexID1: UE.VertexID) : UE.EdgeID;
        GetEdgeVertex(EdgeID: UE.EdgeID, EdgeVertexNumber: number) : UE.VertexID;
        GetEdgeVertices(EdgeID: UE.EdgeID, OutEdgeVertexID0: $Ref<UE.VertexID>, OutEdgeVertexID1: $Ref<UE.VertexID>) : void;
        GetFirstValidPolygonGroup() : UE.PolygonGroupID;
        GetGroupForPolygon(PolygonID: UE.PolygonID) : UE.PolygonGroupID;
        GetPolygonAdjacentPolygons(PolygonID: UE.PolygonID, OutAdjacentPolygons: $Ref<TArray<UE.PolygonID>>) : void;
        GetPolygonCount() : number;
        GetPolygonCountInGroup(PolygonGroupID: UE.PolygonGroupID) : number;
        GetPolygonGroupCount() : number;
        GetPolygonInGroup(PolygonGroupID: UE.PolygonGroupID, PolygonNumber: number) : UE.PolygonID;
        GetPolygonPerimeterEdge(PolygonID: UE.PolygonID, PerimeterEdgeNumber: number, bOutEdgeWindingIsReversedForPolygon: $Ref<boolean>) : UE.EdgeID;
        GetPolygonPerimeterEdgeCount(PolygonID: UE.PolygonID) : number;
        GetPolygonPerimeterEdges(PolygonID: UE.PolygonID, OutPolygonPerimeterEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        GetPolygonPerimeterVertex(PolygonID: UE.PolygonID, PolygonVertexNumber: number) : UE.VertexID;
        GetPolygonPerimeterVertexCount(PolygonID: UE.PolygonID) : number;
        GetPolygonPerimeterVertexInstance(PolygonID: UE.PolygonID, PolygonVertexNumber: number) : UE.VertexInstanceID;
        GetPolygonPerimeterVertexInstances(PolygonID: UE.PolygonID, OutPolygonPerimeterVertexInstanceIDs: $Ref<TArray<UE.VertexInstanceID>>) : void;
        GetPolygonPerimeterVertices(PolygonID: UE.PolygonID, OutPolygonPerimeterVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        GetPolygonTriangulatedTriangle(PolygonID: UE.PolygonID, PolygonTriangleNumber: number) : UE.TriangleID;
        GetPolygonTriangulatedTriangleCount(PolygonID: UE.PolygonID) : number;
        GetSubdivisionCount() : number;
        GetSubdivisionLimitData() : UE.SubdivisionLimitData;
        GetTextureCoordinateCount() : number;
        GetVertexAdjacentVertices(VertexID: UE.VertexID, OutAdjacentVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        GetVertexConnectedEdge(VertexID: UE.VertexID, ConnectedEdgeNumber: number) : UE.EdgeID;
        GetVertexConnectedEdgeCount(VertexID: UE.VertexID) : number;
        GetVertexConnectedEdges(VertexID: UE.VertexID, OutConnectedEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        GetVertexConnectedPolygons(VertexID: UE.VertexID, OutConnectedPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetVertexCount() : number;
        GetVertexInstanceConnectedPolygon(VertexInstanceID: UE.VertexInstanceID, ConnectedPolygonNumber: number) : UE.PolygonID;
        GetVertexInstanceConnectedPolygonCount(VertexInstanceID: UE.VertexInstanceID) : number;
        GetVertexInstanceConnectedPolygons(VertexInstanceID: UE.VertexInstanceID, OutConnectedPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        GetVertexInstanceCount() : number;
        GetVertexInstanceVertex(VertexInstanceID: UE.VertexInstanceID) : UE.VertexID;
        GetVertexPairEdge(VertexID: UE.VertexID, NextVertexID: UE.VertexID, bOutEdgeWindingIsReversed: $Ref<boolean>) : UE.EdgeID;
        InitializeAdapters() : void;
        InsertEdgeLoop(EdgeID: UE.EdgeID, Splits: TArray<number>, OutNewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        InsetPolygons(PolygonIDs: TArray<UE.PolygonID>, InsetFixedDistance: number, InsetProgressTowardCenter: number, Mode: UE.EInsetPolygonsMode, OutNewCenterPolygonIDs: $Ref<TArray<UE.PolygonID>>, OutNewSidePolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        IsBeingModified() : boolean;
        IsCommitted() : boolean;
        IsCommittedAsInstance() : boolean;
        IsCompactAllowed() : boolean;
        IsOrphanedVertex(VertexID: UE.VertexID) : boolean;
        IsPreviewingSubdivisions() : boolean;
        IsSpatialDatabaseAllowed() : boolean;
        IsUndoAllowed() : boolean;
        IsValidEdge(EdgeID: UE.EdgeID) : boolean;
        IsValidPolygon(PolygonID: UE.PolygonID) : boolean;
        IsValidPolygonGroup(PolygonGroupID: UE.PolygonGroupID) : boolean;
        IsValidVertex(VertexID: UE.VertexID) : boolean;
        MoveVertices(VerticesToMove: TArray<UE.VertexToMove>) : void;
        PropagateInstanceChanges() : void;
        QuadrangulateMesh(OutNewPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        RebuildRenderMesh() : void;
        Revert() : void;
        RevertInstance() : UE.EditableMesh;
        SearchSpatialDatabaseForPolygonsInVolume(Planes: TArray<UE.Plane>, OutPolygons: $Ref<TArray<UE.PolygonID>>) : void;
        SearchSpatialDatabaseForPolygonsPotentiallyIntersectingLineSegment(LineSegmentStart: UE.Vector, LineSegmentEnd: UE.Vector, OutPolygons: $Ref<TArray<UE.PolygonID>>) : void;
        SearchSpatialDatabaseForPolygonsPotentiallyIntersectingPlane(InPlane: UE.Plane, OutPolygons: $Ref<TArray<UE.PolygonID>>) : void;
        SetAllowCompact(bInAllowCompact: boolean) : void;
        SetAllowSpatialDatabase(bInAllowSpatialDatabase: boolean) : void;
        SetAllowUndo(bInAllowUndo: boolean) : void;
        SetEdgesAttributes(AttributesForEdges: TArray<UE.AttributesForEdge>) : void;
        SetEdgesCreaseSharpness(EdgeIDs: TArray<UE.EdgeID>, EdgesNewCreaseSharpness: TArray<number>) : void;
        SetEdgesHardness(EdgeIDs: TArray<UE.EdgeID>, EdgesNewIsHard: TArray<boolean>) : void;
        SetEdgesHardnessAutomatically(EdgeIDs: TArray<UE.EdgeID>, MaxDotProductForSoftEdge: number) : void;
        SetPolygonsVertexAttributes(VertexAttributesForPolygons: TArray<UE.VertexAttributesForPolygon>) : void;
        SetSubdivisionCount(NewSubdivisionCount: number) : void;
        SetTextureCoordinateCount(NumTexCoords: number) : void;
        SetVertexInstancesAttributes(AttributesForVertexInstances: TArray<UE.AttributesForVertexInstance>) : void;
        SetVerticesAttributes(AttributesForVertices: TArray<UE.AttributesForVertex>) : void;
        SetVerticesCornerSharpness(VertexIDs: TArray<UE.VertexID>, VerticesNewCornerSharpness: TArray<number>) : void;
        SplitEdge(EdgeID: UE.EdgeID, Splits: TArray<number>, OutNewVertexIDs: $Ref<TArray<UE.VertexID>>) : void;
        SplitPolygonalMesh(InPlane: UE.Plane, PolygonIDs1: $Ref<TArray<UE.PolygonID>>, PolygonIDs2: $Ref<TArray<UE.PolygonID>>, BoundaryIDs: $Ref<TArray<UE.EdgeID>>) : void;
        SplitPolygons(PolygonsToSplit: TArray<UE.PolygonToSplit>, OutNewEdgeIDs: $Ref<TArray<UE.EdgeID>>) : void;
        StartModification(MeshModificationType: UE.EMeshModificationType, MeshTopologyChange: UE.EMeshTopologyChange) : void;
        TessellatePolygons(PolygonIDs: TArray<UE.PolygonID>, TriangleTessellationMode: UE.ETriangleTessellationMode, OutNewPolygonIDs: $Ref<TArray<UE.PolygonID>>) : void;
        TriangulatePolygons(PolygonIDs: TArray<UE.PolygonID>, OutNewTrianglePolygons: $Ref<TArray<UE.PolygonID>>) : void;
        TryToRemovePolygonEdge(EdgeID: UE.EdgeID, bOutWasEdgeRemoved: $Ref<boolean>, OutNewPolygonID: $Ref<UE.PolygonID>) : void;
        TryToRemoveVertex(VertexID: UE.VertexID, bOutWasVertexRemoved: $Ref<boolean>, OutNewEdgeID: $Ref<UE.EdgeID>) : void;
        WeldVertices(VertexIDs: TArray<UE.VertexID>, OutNewVertexID: $Ref<UE.VertexID>) : void;
        static InvalidEdgeID() : UE.EdgeID;
        static InvalidPolygonGroupID() : UE.PolygonGroupID;
        static InvalidPolygonID() : UE.PolygonID;
        static InvalidVertexID() : UE.VertexID;
        static MakeEdgeID(EdgeIndex: number) : UE.EdgeID;
        static MakePolygonGroupID(PolygonGroupIndex: number) : UE.PolygonGroupID;
        static MakePolygonID(PolygonIndex: number) : UE.PolygonID;
        static MakeVertexID(VertexIndex: number) : UE.VertexID;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableMesh;
        static Load(InName: string): EditableMesh;
    
        __tid_EditableMesh_0__: boolean;
    }
    
    class EditableMeshFactory extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static MakeEditableMesh(PrimitiveComponent: $Nullable<UE.PrimitiveComponent>, LODIndex: number) : UE.EditableMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableMeshFactory;
        static Load(InName: string): EditableMeshFactory;
    
        __tid_EditableMeshFactory_0__: boolean;
    }
    
    class EditableStaticMeshAdapter extends UE.EditableMeshAdapter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StaticMesh: UE.StaticMesh;
        OriginalStaticMesh: UE.StaticMesh;
        StaticMeshLODIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableStaticMeshAdapter;
        static Load(InName: string): EditableStaticMeshAdapter;
    
        __tid_EditableStaticMeshAdapter_0__: boolean;
    }
    
    class EditableTextStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(Font: UE.SlateFontInfo, ColorAndOpacity: UE.SlateColor, BackgroundImageSelected: UE.SlateBrush, BackgroundImageComposing: UE.SlateBrush, CaretImage: UE.SlateBrush);
        Font: UE.SlateFontInfo;
        ColorAndOpacity: UE.SlateColor;
        BackgroundImageSelected: UE.SlateBrush;
        BackgroundImageComposing: UE.SlateBrush;
        CaretImage: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditableTextStyle_0__: boolean;
    }
    
    enum EVirtualKeyboardType { Default, Number, Web, Email, Password, AlphaNumeric, EVirtualKeyboardType_MAX, __typeKeyDoNoAccess}
    class VirtualKeyboardOptions {
        constructor();
        constructor(bEnableAutocorrect: boolean);
        bEnableAutocorrect: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VirtualKeyboardOptions_0__: boolean;
    }
    
    enum EVirtualKeyboardTrigger { OnFocusByPointer, OnAllFocusEvents, EVirtualKeyboardTrigger_MAX, __typeKeyDoNoAccess}
    enum EVirtualKeyboardDismissAction { TextChangeOnDismiss, TextCommitOnAccept, TextCommitOnDismiss, EVirtualKeyboardDismissAction_MAX, __typeKeyDoNoAccess}
    enum ETextJustify { Left, Center, Right, ETextJustify_MAX, __typeKeyDoNoAccess}
    enum ETextShapingMethod { Auto, KerningOnly, FullShaping, ETextShapingMethod_MAX, __typeKeyDoNoAccess}
    enum ETextFlowDirection { Auto, LeftToRight, RightToLeft, ETextFlowDirection_MAX, __typeKeyDoNoAccess}
    class ShapedTextOptions {
        constructor();
        constructor(bOverride_TextShapingMethod: boolean, bOverride_TextFlowDirection: boolean, TextShapingMethod: UE.ETextShapingMethod, TextFlowDirection: UE.ETextFlowDirection);
        bOverride_TextShapingMethod: boolean;
        bOverride_TextFlowDirection: boolean;
        TextShapingMethod: UE.ETextShapingMethod;
        TextFlowDirection: UE.ETextFlowDirection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ShapedTextOptions_0__: boolean;
    }
    
    enum ETextCommit { Default, OnEnter, OnUserMovedFocus, OnCleared, ETextCommit_MAX, __typeKeyDoNoAccess}
    class EditableText extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        TextDelegate: $Delegate<() => string>;
        HintText: string;
        HintTextDelegate: $Delegate<() => string>;
        WidgetStyle: UE.EditableTextStyle;
        Style: UE.SlateWidgetStyleAsset;
        BackgroundImageSelected: UE.SlateBrushAsset;
        BackgroundImageComposing: UE.SlateBrushAsset;
        CaretImage: UE.SlateBrushAsset;
        Font: UE.SlateFontInfo;
        ColorAndOpacity: UE.SlateColor;
        IsReadOnly: boolean;
        IsPassword: boolean;
        MinimumDesiredWidth: number;
        IsCaretMovedWhenGainFocus: boolean;
        SelectAllTextWhenFocused: boolean;
        RevertTextOnEscape: boolean;
        ClearKeyboardFocusOnCommit: boolean;
        SelectAllTextOnCommit: boolean;
        AllowContextMenu: boolean;
        KeyboardType: UE.EVirtualKeyboardType;
        VirtualKeyboardOptions: UE.VirtualKeyboardOptions;
        VirtualKeyboardTrigger: UE.EVirtualKeyboardTrigger;
        VirtualKeyboardDismissAction: UE.EVirtualKeyboardDismissAction;
        Justification: UE.ETextJustify;
        ShapedTextOptions: UE.ShapedTextOptions;
        OnTextChanged: $MulticastDelegate<(Text: string) => void>;
        OnTextCommitted: $MulticastDelegate<(Text: string, CommitMethod: UE.ETextCommit) => void>;
        GetText() : string;
        OnEditableTextChangedEvent__DelegateSignature(Text: string) : void;
        OnEditableTextCommittedEvent__DelegateSignature(Text: string, CommitMethod: UE.ETextCommit) : void;
        SetHintText(InHintText: string) : void;
        SetIsPassword(InbIsPassword: boolean) : void;
        SetIsReadOnly(InbIsReadyOnly: boolean) : void;
        SetJustification(InJustification: UE.ETextJustify) : void;
        SetText(InText: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableText;
        static Load(InName: string): EditableText;
    
        __tid_EditableText_0__: boolean;
    }
    
    class ScrollBarStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(HorizontalBackgroundImage: UE.SlateBrush, VerticalBackgroundImage: UE.SlateBrush, VerticalTopSlotImage: UE.SlateBrush, HorizontalTopSlotImage: UE.SlateBrush, VerticalBottomSlotImage: UE.SlateBrush, HorizontalBottomSlotImage: UE.SlateBrush, NormalThumbImage: UE.SlateBrush, HoveredThumbImage: UE.SlateBrush, DraggedThumbImage: UE.SlateBrush);
        HorizontalBackgroundImage: UE.SlateBrush;
        VerticalBackgroundImage: UE.SlateBrush;
        VerticalTopSlotImage: UE.SlateBrush;
        HorizontalTopSlotImage: UE.SlateBrush;
        VerticalBottomSlotImage: UE.SlateBrush;
        HorizontalBottomSlotImage: UE.SlateBrush;
        NormalThumbImage: UE.SlateBrush;
        HoveredThumbImage: UE.SlateBrush;
        DraggedThumbImage: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScrollBarStyle_0__: boolean;
    }
    
    class EditableTextBoxStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(BackgroundImageNormal: UE.SlateBrush, BackgroundImageHovered: UE.SlateBrush, BackgroundImageFocused: UE.SlateBrush, BackgroundImageReadOnly: UE.SlateBrush, Padding: UE.Margin, Font: UE.SlateFontInfo, ForegroundColor: UE.SlateColor, BackgroundColor: UE.SlateColor, ReadOnlyForegroundColor: UE.SlateColor, HScrollBarPadding: UE.Margin, VScrollBarPadding: UE.Margin, ScrollBarStyle: UE.ScrollBarStyle);
        BackgroundImageNormal: UE.SlateBrush;
        BackgroundImageHovered: UE.SlateBrush;
        BackgroundImageFocused: UE.SlateBrush;
        BackgroundImageReadOnly: UE.SlateBrush;
        Padding: UE.Margin;
        Font: UE.SlateFontInfo;
        ForegroundColor: UE.SlateColor;
        BackgroundColor: UE.SlateColor;
        ReadOnlyForegroundColor: UE.SlateColor;
        HScrollBarPadding: UE.Margin;
        VScrollBarPadding: UE.Margin;
        ScrollBarStyle: UE.ScrollBarStyle;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditableTextBoxStyle_0__: boolean;
    }
    
    class EditableTextBox extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        TextDelegate: $Delegate<() => string>;
        WidgetStyle: UE.EditableTextBoxStyle;
        Style: UE.SlateWidgetStyleAsset;
        HintText: string;
        HintTextDelegate: $Delegate<() => string>;
        Font: UE.SlateFontInfo;
        ForegroundColor: UE.LinearColor;
        BackgroundColor: UE.LinearColor;
        ReadOnlyForegroundColor: UE.LinearColor;
        IsReadOnly: boolean;
        IsPassword: boolean;
        MinimumDesiredWidth: number;
        Padding: UE.Margin;
        IsCaretMovedWhenGainFocus: boolean;
        SelectAllTextWhenFocused: boolean;
        RevertTextOnEscape: boolean;
        ClearKeyboardFocusOnCommit: boolean;
        SelectAllTextOnCommit: boolean;
        AllowContextMenu: boolean;
        KeyboardType: UE.EVirtualKeyboardType;
        VirtualKeyboardOptions: UE.VirtualKeyboardOptions;
        VirtualKeyboardTrigger: UE.EVirtualKeyboardTrigger;
        VirtualKeyboardDismissAction: UE.EVirtualKeyboardDismissAction;
        Justification: UE.ETextJustify;
        ShapedTextOptions: UE.ShapedTextOptions;
        OnTextChanged: $MulticastDelegate<(Text: string) => void>;
        OnTextCommitted: $MulticastDelegate<(Text: string, CommitMethod: UE.ETextCommit) => void>;
        ClearError() : void;
        GetText() : string;
        HasError() : boolean;
        OnEditableTextBoxChangedEvent__DelegateSignature(Text: string) : void;
        OnEditableTextBoxCommittedEvent__DelegateSignature(Text: string, CommitMethod: UE.ETextCommit) : void;
        SetError(InError: string) : void;
        SetHintText(InText: string) : void;
        SetIsPassword(bIsPassword: boolean) : void;
        SetIsReadOnly(bReadOnly: boolean) : void;
        SetJustification(InJustification: UE.ETextJustify) : void;
        SetText(InText: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableTextBox;
        static Load(InName: string): EditableTextBox;
    
        __tid_EditableTextBox_0__: boolean;
    }
    
    class EditableTextBoxWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditableTextBoxStyle: UE.EditableTextBoxStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableTextBoxWidgetStyle;
        static Load(InName: string): EditableTextBoxWidgetStyle;
    
        __tid_EditableTextBoxWidgetStyle_0__: boolean;
    }
    
    class EditableTextWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditableTextStyle: UE.EditableTextStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditableTextWidgetStyle;
        static Load(InName: string): EditableTextWidgetStyle;
    
        __tid_EditableTextWidgetStyle_0__: boolean;
    }
    
    enum EditColor { Red, Orange, Yellow, Green, Blue, Indigo, Violet, Pink, Magenta, Cyan, EditColor_MAX, __typeKeyDoNoAccess}
    enum EditConditionByteEnum { First, Second, EditConditionByteEnum_MAX, __typeKeyDoNoAccess}
    enum EditConditionTestEnum { First, Second, EditConditionTestEnum_MAX, __typeKeyDoNoAccess}
    class EditConditionTestObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoolProperty: boolean;
        EnumProperty: UE.EditConditionTestEnum;
        ByteEnumProperty: UE.EditConditionByteEnum;
        DoubleProperty: number;
        IntegerProperty: number;
        UintBitfieldProperty: boolean;
        UObjectPtr: UE.Object;
        SoftClassPtr: TSoftClassPtr<UE.Object>;
        WeakObjectPtr: TWeakObjectPtr<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditConditionTestObject;
        static Load(InName: string): EditConditionTestObject;
    
        __tid_EditConditionTestObject_0__: boolean;
    }
    
    class EditorActorFolders extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorActorFolders;
        static Load(InName: string): EditorActorFolders;
    
        __tid_EditorActorFolders_0__: boolean;
    }
    
    class EditorAnimBaseObj extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorAnimBaseObj;
        static Load(InName: string): EditorAnimBaseObj;
    
        __tid_EditorAnimBaseObj_0__: boolean;
    }
    
    class EditorAnimCompositeSegment extends UE.EditorAnimBaseObj {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimSegment: UE.AnimSegment;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorAnimCompositeSegment;
        static Load(InName: string): EditorAnimCompositeSegment;
    
        __tid_EditorAnimCompositeSegment_0__: boolean;
    }
    
    class EditorAnimCurveBoneLinks extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurveName: UE.SmartName;
        ConnectedBones: TArray<UE.BoneReference>;
        MaxLOD: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorAnimCurveBoneLinks;
        static Load(InName: string): EditorAnimCurveBoneLinks;
    
        __tid_EditorAnimCurveBoneLinks_0__: boolean;
    }
    
    class EditorAnimSegment extends UE.EditorAnimBaseObj {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimSegment: UE.AnimSegment;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorAnimSegment;
        static Load(InName: string): EditorAnimSegment;
    
        __tid_EditorAnimSegment_0__: boolean;
    }
    
    class EditorCommand {
        constructor();
        constructor(Parent: string, CommandName: string, ExecCommand: string, Description: string);
        Parent: string;
        CommandName: string;
        ExecCommand: string;
        Description: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorCommand_0__: boolean;
    }
    
    class EditorCommandCategory {
        constructor();
        constructor(Parent: string, Name: string);
        Parent: string;
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorCommandCategory_0__: boolean;
    }
    
    class EditorCompositeSection extends UE.EditorAnimBaseObj {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CompositeSection: UE.CompositeSection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorCompositeSection;
        static Load(InName: string): EditorCompositeSection;
    
        __tid_EditorCompositeSection_0__: boolean;
    }
    
    enum EWindowMode { Fullscreen, WindowedFullscreen, Windowed, EWindowMode_MAX, __typeKeyDoNoAccess}
    class GameUserSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseVSync: boolean;
        bUseDynamicResolution: boolean;
        ResolutionSizeX: number;
        ResolutionSizeY: number;
        LastUserConfirmedResolutionSizeX: number;
        LastUserConfirmedResolutionSizeY: number;
        WindowPosX: number;
        WindowPosY: number;
        FullscreenMode: number;
        LastConfirmedFullscreenMode: number;
        PreferredFullscreenMode: number;
        Version: number;
        AudioQualityLevel: number;
        LastConfirmedAudioQualityLevel: number;
        FrameRateLimit: number;
        DesiredScreenWidth: number;
        bUseDesiredScreenHeight: boolean;
        DesiredScreenHeight: number;
        LastUserConfirmedDesiredScreenWidth: number;
        LastUserConfirmedDesiredScreenHeight: number;
        LastRecommendedScreenWidth: number;
        LastRecommendedScreenHeight: number;
        LastCPUBenchmarkResult: number;
        LastGPUBenchmarkResult: number;
        LastCPUBenchmarkSteps: TArray<number>;
        LastGPUBenchmarkSteps: TArray<number>;
        LastGPUBenchmarkMultiplier: number;
        bUseHDRDisplayOutput: boolean;
        HDRDisplayOutputNits: number;
        OnGameUserSettingsUINeedsUpdate: $MulticastDelegate<() => void>;
        ApplyHardwareBenchmarkResults() : void;
        ApplyNonResolutionSettings() : void;
        ApplyResolutionSettings(bCheckForCommandLineOverrides: boolean) : void;
        ApplySettings(bCheckForCommandLineOverrides: boolean) : void;
        ConfirmVideoMode() : void;
        EnableHDRDisplayOutput(bEnable: boolean, DisplayNits?: number /* = 1000 */) : void;
        GetAntiAliasingQuality() : number;
        GetAudioQualityLevel() : number;
        GetCurrentHDRDisplayNits() : number;
        GetDefaultResolutionScale() : number;
        GetDesktopResolution() : UE.IntPoint;
        GetFoliageQuality() : number;
        GetFrameRateLimit() : number;
        GetFullscreenMode() : UE.EWindowMode;
        GetLastConfirmedFullscreenMode() : UE.EWindowMode;
        GetLastConfirmedScreenResolution() : UE.IntPoint;
        GetOverallScalabilityLevel() : number;
        GetPostProcessingQuality() : number;
        GetPreferredFullscreenMode() : UE.EWindowMode;
        GetRecommendedResolutionScale() : number;
        GetResolutionScaleInformation(CurrentScaleNormalized: $Ref<number>, CurrentScaleValue: $Ref<number>, MinScaleValue: $Ref<number>, MaxScaleValue: $Ref<number>) : void;
        GetResolutionScaleInformationEx(CurrentScaleNormalized: $Ref<number>, CurrentScaleValue: $Ref<number>, MinScaleValue: $Ref<number>, MaxScaleValue: $Ref<number>) : void;
        GetResolutionScaleNormalized() : number;
        GetScreenResolution() : UE.IntPoint;
        GetShadingQuality() : number;
        GetShadowQuality() : number;
        GetTextureQuality() : number;
        GetViewDistanceQuality() : number;
        GetVisualEffectQuality() : number;
        IsDirty() : boolean;
        IsDynamicResolutionDirty() : boolean;
        IsDynamicResolutionEnabled() : boolean;
        IsFullscreenModeDirty() : boolean;
        IsHDREnabled() : boolean;
        IsScreenResolutionDirty() : boolean;
        IsVSyncDirty() : boolean;
        IsVSyncEnabled() : boolean;
        LoadSettings(bForceReload?: boolean /* = false */) : void;
        ResetToCurrentSettings() : void;
        RevertVideoMode() : void;
        RunHardwareBenchmark(WorkScale?: number /* = 10 */, CPUMultiplier?: number /* = 1.000000 */, GPUMultiplier?: number /* = 1.000000 */) : void;
        SaveSettings() : void;
        SetAntiAliasingQuality(Value: number) : void;
        SetAudioQualityLevel(QualityLevel: number) : void;
        SetBenchmarkFallbackValues() : void;
        SetDynamicResolutionEnabled(bEnable: boolean) : void;
        SetFoliageQuality(Value: number) : void;
        SetFrameRateLimit(NewLimit: number) : void;
        SetFullscreenMode(InFullscreenMode: UE.EWindowMode) : void;
        SetOverallScalabilityLevel(Value: number) : void;
        SetPostProcessingQuality(Value: number) : void;
        SetResolutionScaleNormalized(NewScaleNormalized: number) : void;
        SetResolutionScaleValue(NewScaleValue: number) : void;
        SetResolutionScaleValueEx(NewScaleValue: number) : void;
        SetScreenResolution(Resolution: UE.IntPoint) : void;
        SetShadingQuality(Value: number) : void;
        SetShadowQuality(Value: number) : void;
        SetTextureQuality(Value: number) : void;
        SetToDefaults() : void;
        SetViewDistanceQuality(Value: number) : void;
        SetVisualEffectQuality(Value: number) : void;
        SetVSyncEnabled(bEnable: boolean) : void;
        SupportsHDRDisplayOutput() : boolean;
        ValidateSettings() : void;
        static GetDefaultResolution() : UE.IntPoint;
        static GetDefaultWindowMode() : UE.EWindowMode;
        static GetDefaultWindowPosition() : UE.IntPoint;
        static GetFramePace() : number;
        static GetGameUserSettings() : UE.GameUserSettings;
        static GetSyncInterval() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameUserSettings;
        static Load(InName: string): GameUserSettings;
    
        __tid_GameUserSettings_0__: boolean;
    }
    
    class StatColorMapEntry {
        constructor();
        constructor(In: number, Out: UE.Color);
        In: number;
        Out: UE.Color;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StatColorMapEntry_0__: boolean;
    }
    
    class StatColorMapping {
        constructor();
        constructor(StatName: string, ColorMap: TArray<UE.StatColorMapEntry>, DisableBlend: boolean);
        StatName: string;
        ColorMap: TArray<UE.StatColorMapEntry>;
        DisableBlend: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StatColorMapping_0__: boolean;
    }
    
    class GameNameRedirect {
        constructor();
        constructor(OldGameName: string, NewGameName: string);
        OldGameName: string;
        NewGameName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameNameRedirect_0__: boolean;
    }
    
    class PluginRedirect {
        constructor();
        constructor(OldPluginName: string, NewPluginName: string);
        OldPluginName: string;
        NewPluginName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PluginRedirect_0__: boolean;
    }
    
    class StructRedirect {
        constructor();
        constructor(OldStructName: string, NewStructName: string);
        OldStructName: string;
        NewStructName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructRedirect_0__: boolean;
    }
    
    class EngineCustomTimeStep extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EngineCustomTimeStep;
        static Load(InName: string): EngineCustomTimeStep;
    
        __tid_EngineCustomTimeStep_0__: boolean;
    }
    
    enum ETimecodeProviderSynchronizationState { Closed, Error, Synchronized, Synchronizing, ETimecodeProviderSynchronizationState_MAX, __typeKeyDoNoAccess}
    class TimecodeProvider extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FrameDelay: number;
        FetchAndUpdate() : void;
        FetchTimecode(OutFrameTime: $Ref<UE.QualifiedFrameTime>) : boolean;
        GetDelayedQualifiedFrameTime() : UE.QualifiedFrameTime;
        GetDelayedTimecode() : UE.Timecode;
        GetFrameRate() : UE.FrameRate;
        GetQualifiedFrameTime() : UE.QualifiedFrameTime;
        GetSynchronizationState() : UE.ETimecodeProviderSynchronizationState;
        GetTimecode() : UE.Timecode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TimecodeProvider;
        static Load(InName: string): TimecodeProvider;
    
        __tid_TimecodeProvider_0__: boolean;
    }
    
    enum ETransitionType { None, Paused, Loading, Saving, Connecting, Precaching, WaitingToConnect, MAX, __typeKeyDoNoAccess}
    class NetDriverDefinition {
        constructor();
        constructor(DefName: string, DriverClassName: string, DriverClassNameFallback: string);
        DefName: string;
        DriverClassName: string;
        DriverClassNameFallback: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NetDriverDefinition_0__: boolean;
    }
    
    class Engine extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TinyFont: UE.Font;
        TinyFontName: UE.SoftObjectPath;
        SmallFont: UE.Font;
        SmallFontName: UE.SoftObjectPath;
        MediumFont: UE.Font;
        MediumFontName: UE.SoftObjectPath;
        LargeFont: UE.Font;
        LargeFontName: UE.SoftObjectPath;
        SubtitleFont: UE.Font;
        SubtitleFontName: UE.SoftObjectPath;
        AdditionalFonts: TArray<UE.Font>;
        AdditionalFontNames: TArray<string>;
        ConsoleClass: UE.Class;
        ConsoleClassName: UE.SoftClassPath;
        GameViewportClientClass: UE.Class;
        GameViewportClientClassName: UE.SoftClassPath;
        LocalPlayerClass: UE.Class;
        LocalPlayerClassName: UE.SoftClassPath;
        WorldSettingsClass: UE.Class;
        WorldSettingsClassName: UE.SoftClassPath;
        NavigationSystemClassName: UE.SoftClassPath;
        NavigationSystemClass: UE.Class;
        NavigationSystemConfigClassName: UE.SoftClassPath;
        NavigationSystemConfigClass: UE.Class;
        AvoidanceManagerClassName: UE.SoftClassPath;
        AvoidanceManagerClass: UE.Class;
        AIControllerClassName: UE.SoftClassPath;
        PhysicsCollisionHandlerClass: UE.Class;
        PhysicsCollisionHandlerClassName: UE.SoftClassPath;
        GameUserSettingsClassName: UE.SoftClassPath;
        GameUserSettingsClass: UE.Class;
        GameUserSettings: UE.GameUserSettings;
        LevelScriptActorClass: UE.Class;
        LevelScriptActorClassName: UE.SoftClassPath;
        DefaultBlueprintBaseClassName: UE.SoftClassPath;
        GameSingletonClassName: UE.SoftClassPath;
        GameSingleton: UE.Object;
        AssetManagerClassName: UE.SoftClassPath;
        AssetManager: UE.AssetManager;
        DefaultTexture: UE.Texture2D;
        DefaultTextureName: UE.SoftObjectPath;
        DefaultDiffuseTexture: UE.Texture;
        DefaultDiffuseTextureName: UE.SoftObjectPath;
        DefaultBSPVertexTexture: UE.Texture2D;
        DefaultBSPVertexTextureName: UE.SoftObjectPath;
        HighFrequencyNoiseTexture: UE.Texture2D;
        HighFrequencyNoiseTextureName: UE.SoftObjectPath;
        DefaultBokehTexture: UE.Texture2D;
        DefaultBokehTextureName: UE.SoftObjectPath;
        DefaultBloomKernelTexture: UE.Texture2D;
        DefaultBloomKernelTextureName: UE.SoftObjectPath;
        WireframeMaterial: UE.Material;
        WireframeMaterialName: string;
        GeomMaterial: UE.Material;
        GeomMaterialName: UE.SoftObjectPath;
        DebugMeshMaterial: UE.Material;
        DebugMeshMaterialName: UE.SoftObjectPath;
        EmissiveMeshMaterial: UE.Material;
        EmissiveMeshMaterialName: UE.SoftObjectPath;
        LevelColorationLitMaterial: UE.Material;
        LevelColorationLitMaterialName: string;
        LevelColorationUnlitMaterial: UE.Material;
        LevelColorationUnlitMaterialName: string;
        LightingTexelDensityMaterial: UE.Material;
        LightingTexelDensityName: string;
        ShadedLevelColorationLitMaterial: UE.Material;
        ShadedLevelColorationLitMaterialName: string;
        ShadedLevelColorationUnlitMaterial: UE.Material;
        ShadedLevelColorationUnlitMaterialName: string;
        RemoveSurfaceMaterial: UE.Material;
        RemoveSurfaceMaterialName: UE.SoftObjectPath;
        VertexColorMaterial: UE.Material;
        VertexColorMaterialName: string;
        VertexColorViewModeMaterial_ColorOnly: UE.Material;
        VertexColorViewModeMaterialName_ColorOnly: string;
        VertexColorViewModeMaterial_AlphaAsColor: UE.Material;
        VertexColorViewModeMaterialName_AlphaAsColor: string;
        VertexColorViewModeMaterial_RedOnly: UE.Material;
        VertexColorViewModeMaterialName_RedOnly: string;
        VertexColorViewModeMaterial_GreenOnly: UE.Material;
        VertexColorViewModeMaterialName_GreenOnly: string;
        VertexColorViewModeMaterial_BlueOnly: UE.Material;
        VertexColorViewModeMaterialName_BlueOnly: string;
        BoneWeightMaterial: UE.Material;
        BoneWeightMaterialName: UE.SoftObjectPath;
        ClothPaintMaterial: UE.Material;
        ClothPaintMaterialWireframe: UE.Material;
        ClothPaintMaterialInstance: UE.MaterialInstanceDynamic;
        ClothPaintMaterialWireframeInstance: UE.MaterialInstanceDynamic;
        ClothPaintMaterialName: UE.SoftObjectPath;
        ClothPaintMaterialWireframeName: UE.SoftObjectPath;
        PhysicalMaterialMaskMaterial: UE.Material;
        PhysicalMaterialMaskMaterialName: UE.SoftObjectPath;
        DebugEditorMaterial: UE.Material;
        DebugEditorMaterialName: UE.SoftObjectPath;
        ConstraintLimitMaterial: UE.Material;
        ConstraintLimitMaterialX: UE.MaterialInstanceDynamic;
        ConstraintLimitMaterialXAxis: UE.MaterialInstanceDynamic;
        ConstraintLimitMaterialY: UE.MaterialInstanceDynamic;
        ConstraintLimitMaterialYAxis: UE.MaterialInstanceDynamic;
        ConstraintLimitMaterialZ: UE.MaterialInstanceDynamic;
        ConstraintLimitMaterialZAxis: UE.MaterialInstanceDynamic;
        ConstraintLimitMaterialPrismatic: UE.MaterialInstanceDynamic;
        InvalidLightmapSettingsMaterial: UE.Material;
        InvalidLightmapSettingsMaterialName: UE.SoftObjectPath;
        PreviewShadowsIndicatorMaterial: UE.Material;
        PreviewShadowsIndicatorMaterialName: UE.SoftObjectPath;
        ArrowMaterial: UE.Material;
        ArrowMaterialYellow: UE.MaterialInstanceDynamic;
        ArrowMaterialName: UE.SoftObjectPath;
        LightingOnlyBrightness: UE.LinearColor;
        ShaderComplexityColors: TArray<UE.LinearColor>;
        QuadComplexityColors: TArray<UE.LinearColor>;
        LightComplexityColors: TArray<UE.LinearColor>;
        StationaryLightOverlapColors: TArray<UE.LinearColor>;
        LODColorationColors: TArray<UE.LinearColor>;
        HLODColorationColors: TArray<UE.LinearColor>;
        StreamingAccuracyColors: TArray<UE.LinearColor>;
        MaxPixelShaderAdditiveComplexityCount: number;
        MaxES3PixelShaderAdditiveComplexityCount: number;
        MinLightMapDensity: number;
        IdealLightMapDensity: number;
        MaxLightMapDensity: number;
        bRenderLightMapDensityGrayscale: boolean;
        RenderLightMapDensityGrayscaleScale: number;
        RenderLightMapDensityColorScale: number;
        LightMapDensityVertexMappedColor: UE.LinearColor;
        LightMapDensitySelectedColor: UE.LinearColor;
        StatColorMappings: TArray<UE.StatColorMapping>;
        EditorBrushMaterial: UE.Material;
        EditorBrushMaterialName: UE.SoftObjectPath;
        DefaultPhysMaterial: UE.PhysicalMaterial;
        DefaultPhysMaterialName: UE.SoftObjectPath;
        ActiveGameNameRedirects: TArray<UE.GameNameRedirect>;
        ActiveClassRedirects: TArray<UE.ClassRedirect>;
        ActivePluginRedirects: TArray<UE.PluginRedirect>;
        ActiveStructRedirects: TArray<UE.StructRedirect>;
        PreIntegratedSkinBRDFTexture: UE.Texture2D;
        PreIntegratedSkinBRDFTextureName: UE.SoftObjectPath;
        BlueNoiseTexture: UE.Texture2D;
        BlueNoiseTextureName: UE.SoftObjectPath;
        MiniFontTexture: UE.Texture2D;
        MiniFontTextureName: UE.SoftObjectPath;
        WeightMapPlaceholderTexture: UE.Texture;
        WeightMapPlaceholderTextureName: UE.SoftObjectPath;
        LightMapDensityTexture: UE.Texture2D;
        LightMapDensityTextureName: UE.SoftObjectPath;
        GameViewport: UE.GameViewportClient;
        DeferredCommands: TArray<string>;
        NearClipPlane: number;
        bSubtitlesEnabled: boolean;
        bSubtitlesForcedOff: boolean;
        MaximumLoopIterationCount: number;
        bCanBlueprintsTickByDefault: boolean;
        bOptimizeAnimBlueprintMemberVariableAccess: boolean;
        bAllowMultiThreadedAnimationUpdate: boolean;
        bEnableEditorPSysRealtimeLOD: boolean;
        bSmoothFrameRate: boolean;
        bUseFixedFrameRate: boolean;
        FixedFrameRate: number;
        SmoothedFrameRateRange: UE.FloatRange;
        CustomTimeStep: UE.EngineCustomTimeStep;
        CustomTimeStepClassName: UE.SoftClassPath;
        TimecodeProvider: UE.TimecodeProvider;
        TimecodeProviderClassName: UE.SoftClassPath;
        bGenerateDefaultTimecode: boolean;
        GenerateDefaultTimecodeFrameRate: UE.FrameRate;
        GenerateDefaultTimecodeFrameDelay: number;
        bCheckForMultiplePawnsSpawnedInAFrame: boolean;
        NumPawnsAllowedToBeSpawnedInAFrame: number;
        bShouldGenerateLowQualityLightmaps: boolean;
        C_WorldBox: UE.Color;
        C_BrushWire: UE.Color;
        C_AddWire: UE.Color;
        C_SubtractWire: UE.Color;
        C_SemiSolidWire: UE.Color;
        C_NonSolidWire: UE.Color;
        C_WireBackground: UE.Color;
        C_ScaleBoxHi: UE.Color;
        C_VolumeCollision: UE.Color;
        C_BSPCollision: UE.Color;
        C_OrthoBackground: UE.Color;
        C_Volume: UE.Color;
        C_BrushShape: UE.Color;
        StreamingDistanceFactor: number;
        GameScreenshotSaveDirectory: UE.DirectoryPath;
        TransitionType: UE.ETransitionType;
        TransitionDescription: string;
        TransitionGameMode: string;
        bAllowMatureLanguage: boolean;
        CameraRotationThreshold: number;
        CameraTranslationThreshold: number;
        PrimitiveProbablyVisibleTime: number;
        MaxOcclusionPixelsFraction: number;
        bPauseOnLossOfFocus: boolean;
        MaxParticleResize: number;
        MaxParticleResizeWarn: number;
        PendingDroppedNotes: TArray<UE.DropNoteInfo>;
        NetClientTicksPerSecond: number;
        DisplayGamma: number;
        MinDesiredFrameRate: number;
        DefaultSelectedMaterialColor: UE.LinearColor;
        SelectedMaterialColor: UE.LinearColor;
        SelectionOutlineColor: UE.LinearColor;
        SubduedSelectionOutlineColor: UE.LinearColor;
        SelectedMaterialColorOverride: UE.LinearColor;
        bIsOverridingSelectedColor: boolean;
        bEnableOnScreenDebugMessages: boolean;
        bEnableOnScreenDebugMessagesDisplay: boolean;
        bSuppressMapWarnings: boolean;
        bDisableAILogging: boolean;
        bEnableVisualLogRecordingOnStart: number;
        ScreenSaverInhibitorSemaphore: number;
        bLockReadOnlyLevels: boolean;
        ParticleEventManagerClassPath: string;
        SelectionHighlightIntensity: number;
        BSPSelectionHighlightIntensity: number;
        SelectionHighlightIntensityBillboards: number;
        NetDriverDefinitions: TArray<UE.NetDriverDefinition>;
        ServerActors: TArray<string>;
        RuntimeServerActors: TArray<string>;
        NetErrorLogInterval: number;
        bStartedLoadMapMovie: boolean;
        NextWorldContextHandle: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Engine;
        static Load(InName: string): Engine;
    
        __tid_Engine_0__: boolean;
    }
    
    class Transactor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Transactor;
        static Load(InName: string): Transactor;
    
        __tid_Transactor_0__: boolean;
    }
    
    class EditorWorldExtensionCollection extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorWorldExtensionCollection;
        static Load(InName: string): EditorWorldExtensionCollection;
    
        __tid_EditorWorldExtensionCollection_0__: boolean;
    }
    
    class EditorWorldExtensionManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditorWorldExtensionCollection: TArray<UE.EditorWorldExtensionCollection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorWorldExtensionManager;
        static Load(InName: string): EditorWorldExtensionManager;
    
        __tid_EditorWorldExtensionManager_0__: boolean;
    }
    
    class EditorEngine extends UE.Engine {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TempModel: UE.Model;
        ConversionTempModel: UE.Model;
        Trans: UE.Transactor;
        Bad: UE.Texture2D;
        EditorFont: UE.Font;
        PreviewSoundCue: UE.SoundCue;
        PreviewAudioComponent: UE.AudioComponent;
        EditorCube: UE.StaticMesh;
        EditorSphere: UE.StaticMesh;
        EditorPlane: UE.StaticMesh;
        EditorCylinder: UE.StaticMesh;
        bFastRebuild: boolean;
        IsImportingT3D: boolean;
        ClickFlags: number;
        ParentContext: UE.Package;
        UnsnappedClickLocation: UE.Vector;
        ClickLocation: UE.Vector;
        ClickPlane: UE.Plane;
        MouseMovement: UE.Vector;
        DetailMode: UE.EDetailMode;
        UseSizingBox: boolean;
        UseAxisIndicator: boolean;
        GodMode: boolean;
        GameCommandLine: string;
        bShowBrushMarkerPolys: boolean;
        bEnableSocketSnapping: boolean;
        bEnableLODLocking: boolean;
        HeightMapExportClassName: string;
        ActorFactories: TArray<UE.ActorFactory>;
        UserOpenedFile: string;
        InEditorGameURLOptions: string;
        PlayWorld: UE.World;
        bIsToggleBetweenPIEandSIEQueued: boolean;
        bAllowMultiplePIEWorlds: boolean;
        bRequestEndPlayMapQueued: boolean;
        bSquelchTransactionNotification: boolean;
        bNotifyUndoRedoSelectionChange: boolean;
        PlayFromHerePlayerStartClass: UE.Class;
        EditorWorld: UE.World;
        ActorsThatWereSelected: TArray<TWeakObjectPtr<UE.Actor>>;
        PlayWorldDestination: number;
        CurrentPlayWorldDestination: number;
        bMobilePreviewPortrait: boolean;
        BuildPlayDevice: number;
        UserEditedPlayWorldURL: string;
        ScratchRenderTarget2048: UE.TextureRenderTarget2D;
        ScratchRenderTarget1024: UE.TextureRenderTarget2D;
        ScratchRenderTarget512: UE.TextureRenderTarget2D;
        ScratchRenderTarget256: UE.TextureRenderTarget2D;
        PreviewMeshComp: UE.StaticMeshComponent;
        PreviewMeshIndex: number;
        bShowPreviewMesh: boolean;
        bCustomCameraAlignEmitter: boolean;
        CustomCameraAlignEmitterDistance: number;
        bDrawSocketsInGMode: boolean;
        bDrawParticleHelpers: boolean;
        BrushBuilders: TArray<UE.BrushBuilder>;
        EditorWorldExtensionsManager: UE.EditorWorldExtensionManager;
        ActorGroupingUtilsClassName: UE.SoftClassPath;
        ActorGroupingUtils: UE.ActorGroupingUtils;
        PlayWorldLocation: UE.Vector;
        PlayWorldRotation: UE.Rotator;
        bIsPlayWorldQueued: boolean;
        bIsSimulateInEditorQueued: boolean;
        bHasPlayWorldPlacement: boolean;
        bUseMobilePreviewForPlayWorld: boolean;
        bUseVRPreviewForPlayWorld: boolean;
        bIsSimulatingInEditor: boolean;
        PlayInEditorViewportIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorEngine;
        static Load(InName: string): EditorEngine;
    
        __tid_EditorEngine_0__: boolean;
    }
    
    class EditorExperimentalSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bHDREditor: boolean;
        HDREditorNITLevel: number;
        bProceduralFoliage: boolean;
        bEnableLocalizationDashboard: boolean;
        bEnableTranslationPicker: boolean;
        bEnableFavoriteSystem: boolean;
        ConsoleForGamepadLabels: UE.EConsoleForGamepadLabels;
        bToolbarCustomization: boolean;
        bBreakOnExceptions: boolean;
        BaseClassesToAllowRecompilingDuringPlayInEditor: TArray<TSoftClassPtr<UE.Object>>;
        ResolvedBaseClassesToAllowRecompilingDuringPlayInEditor: TArray<UE.Class>;
        bDrawMidpointArrowsInBlueprints: boolean;
        bContextMenuChunkAssignments: boolean;
        bDisableCookInEditor: boolean;
        bSharedCookedBuilds: boolean;
        MultiProcessCooking: number;
        bAllowLateJoinInPIE: boolean;
        bAllowVulkanPreview: boolean;
        bEnableMultithreadedLightmapEncoding: boolean;
        bEnableMultithreadedShadowmapEncoding: boolean;
        bUseOpenCLForConvexHullDecomp: boolean;
        bAllowPotentiallyUnsafePropertyEditing: boolean;
        bFacialAnimationImporter: boolean;
        bMobilePIEPreviewDeviceLaunch: boolean;
        bTextAssetFormatSupport: boolean;
        bExampleLayersAndBlends: boolean;
        bEnableLongPathsSupport: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorExperimentalSettings;
        static Load(InName: string): EditorExperimentalSettings;
    
        __tid_EditorExperimentalSettings_0__: boolean;
    }
    
    class EditorParameterValue {
        constructor();
        constructor(bOverride: boolean, ParameterInfo: UE.MaterialParameterInfo, ExpressionId: UE.Guid);
        bOverride: boolean;
        ParameterInfo: UE.MaterialParameterInfo;
        ExpressionId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorParameterValue_0__: boolean;
    }
    
    class EditorFontParameterValue extends UE.EditorParameterValue {
        constructor();
        constructor(FontValue: UE.Font, FontPage: number);
        FontValue: UE.Font;
        FontPage: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorFontParameterValue_0__: boolean;
    }
    
    class EditorKeyBinding {
        constructor();
        constructor(bCtrlDown: boolean, bAltDown: boolean, bShiftDown: boolean, Key: UE.Key, CommandName: string);
        bCtrlDown: boolean;
        bAltDown: boolean;
        bShiftDown: boolean;
        Key: UE.Key;
        CommandName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorKeyBinding_0__: boolean;
    }
    
    class EditorKeyboardShortcutSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorKeyboardShortcutSettings;
        static Load(InName: string): EditorKeyboardShortcutSettings;
    
        __tid_EditorKeyboardShortcutSettings_0__: boolean;
    }
    
    enum ELevelVisibilityDirtyMode { ModifyOnChange, DontModify, ELevelVisibilityDirtyMode_MAX, __typeKeyDoNoAccess}
    class EditorLevelUtils extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateNewStreamingLevel(LevelStreamingClass: $Nullable<UE.Class>, NewLevelPath?: string /* = "" */, bMoveSelectedActorsIntoNewLevel?: boolean /* = false */) : UE.LevelStreaming;
        static K2_AddLevelToWorld(World: $Nullable<UE.World>, LevelPackageName: string, LevelStreamingClass: $Nullable<UE.Class>) : UE.LevelStreaming;
        static K2_AddLevelToWorldWithTransform(World: $Nullable<UE.World>, LevelPackageName: string, LevelStreamingClass: $Nullable<UE.Class>, LevelTransform: UE.Transform) : UE.LevelStreaming;
        static MakeLevelCurrent(InStreamingLevel: $Nullable<UE.LevelStreaming>) : void;
        static MoveActorsToLevel(ActorsToMove: TArray<UE.Actor>, DestStreamingLevel: $Nullable<UE.LevelStreaming>, bWarnAboutReferences?: boolean /* = true */, bWarnAboutRenaming?: boolean /* = true */) : number;
        static MoveSelectedActorsToLevel(DestLevel: $Nullable<UE.LevelStreaming>, bWarnAboutReferences?: boolean /* = true */) : number;
        static SetLevelsVisibility(Levels: TArray<UE.Level>, bShouldBeVisible: TArray<boolean>, bForceLayersVisible: boolean, ModifyMode?: UE.ELevelVisibilityDirtyMode /* = ModifyOnChange */) : void;
        static SetLevelVisibility(Level: $Nullable<UE.Level>, bShouldBeVisible: boolean, bForceLayersVisible: boolean, ModifyMode?: UE.ELevelVisibilityDirtyMode /* = ModifyOnChange */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorLevelUtils;
        static Load(InName: string): EditorLevelUtils;
    
        __tid_EditorLevelUtils_0__: boolean;
    }
    
    enum EReloadPackagesInteractionMode { Interactive, AssumePositive, AssumeNegative, EReloadPackagesInteractionMode_MAX, __typeKeyDoNoAccess}
    class EditorLoadingAndSavingUtils extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ExportScene(bExportSelectedActorsOnly: boolean) : void;
        static GetDirtyContentPackages(OutDirtyPackages: $Ref<TArray<UE.Package>>) : void;
        static GetDirtyMapPackages(OutDirtyPackages: $Ref<TArray<UE.Package>>) : void;
        static ImportScene(Filename: string) : void;
        static LoadMap(Filename: string) : UE.World;
        static LoadMapWithDialog() : UE.World;
        static NewBlankMap(bSaveExistingMap: boolean) : UE.World;
        static NewMapFromTemplate(PathToTemplateLevel: string, bSaveExistingMap: boolean) : UE.World;
        static ReloadPackages(PackagesToReload: TArray<UE.Package>, bOutAnyPackagesReloaded: $Ref<boolean>, OutErrorMessage: $Ref<string>, InteractionMode?: UE.EReloadPackagesInteractionMode /* = Interactive */) : void;
        static SaveCurrentLevel() : boolean;
        static SaveDirtyPackages(bSaveMapPackages: boolean, bSaveContentPackages: boolean) : boolean;
        static SaveDirtyPackagesWithDialog(bSaveMapPackages: boolean, bSaveContentPackages: boolean) : boolean;
        static SaveMap(World: $Nullable<UE.World>, AssetPath: string) : boolean;
        static SavePackages(PackagesToSave: TArray<UE.Package>, bOnlyDirty: boolean) : boolean;
        static SavePackagesWithDialog(PackagesToSave: TArray<UE.Package>, bOnlyDirty: boolean) : boolean;
        static UnloadPackages(PackagesToUnload: TArray<UE.Package>, bOutAnyPackagesUnloaded: $Ref<boolean>, OutErrorMessage: $Ref<string>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorLoadingAndSavingUtils;
        static Load(InName: string): EditorLoadingAndSavingUtils;
    
        __tid_EditorLoadingAndSavingUtils_0__: boolean;
    }
    
    enum ELoadLevelAtStartup { None, ProjectDefault, LastOpened, ELoadLevelAtStartup_MAX, __typeKeyDoNoAccess}
    class EditorLoadingSavingSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LoadLevelAtStartup: UE.ELoadLevelAtStartup;
        bForceCompilationAtStartup: boolean;
        bRestoreOpenAssetTabsOnRestart: boolean;
        bEnableSourceControlCompatabilityCheck: boolean;
        bMonitorContentDirectories: boolean;
        AutoReimportDirectories: TArray<string>;
        AutoReimportDirectorySettings: TArray<UE.AutoReimportDirectoryConfig>;
        AutoReimportThreshold: number;
        bAutoCreateAssets: boolean;
        bAutoDeleteAssets: boolean;
        bDetectChangesOnStartup: boolean;
        bPromptBeforeAutoImporting: boolean;
        bDeleteSourceFilesWithAssets: boolean;
        bAutoReimportTextures: boolean;
        bAutoReimportCSV: boolean;
        bDirtyMigratedBlueprints: boolean;
        bAutoSaveEnable: boolean;
        bAutoSaveMaps: boolean;
        bAutoSaveContent: boolean;
        AutoSaveTimeMinutes: number;
        AutoSaveInteractionDelayInSeconds: number;
        AutoSaveWarningInSeconds: number;
        bAutomaticallyCheckoutOnAssetModification: boolean;
        bPromptForCheckoutOnAssetModification: boolean;
        bSCCAutoAddNewFiles: boolean;
        bSCCUseGlobalSettings: boolean;
        TextDiffToolPath: UE.FilePath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorLoadingSavingSettings;
        static Load(InName: string): EditorLoadingSavingSettings;
    
        __tid_EditorLoadingSavingSettings_0__: boolean;
    }
    
    class EditorMaterialLayersParameterValue extends UE.EditorParameterValue {
        constructor();
        constructor(FunctionValue: UE.MaterialFunctionInterface);
        FunctionValue: UE.MaterialFunctionInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorMaterialLayersParameterValue_0__: boolean;
    }
    
    class EditorMiscSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorMiscSettings;
        static Load(InName: string): EditorMiscSettings;
    
        __tid_EditorMiscSettings_0__: boolean;
    }
    
    class EditorNotifyObject extends UE.EditorAnimBaseObj {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Event: UE.AnimNotifyEvent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorNotifyObject;
        static Load(InName: string): EditorNotifyObject;
    
        __tid_EditorNotifyObject_0__: boolean;
    }
    
    class EditorParameterGroup {
        constructor();
        constructor(GroupName: string, GroupAssociation: UE.EMaterialParameterAssociation, Parameters: TArray<UE.DEditorParameterValue>, GroupSortPriority: number);
        GroupName: string;
        GroupAssociation: UE.EMaterialParameterAssociation;
        Parameters: TArray<UE.DEditorParameterValue>;
        GroupSortPriority: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorParameterGroup_0__: boolean;
    }
    
    class EditorParentPlayerListObj extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Overrides: TArray<UE.AnimParentNodeAssetOverride>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorParentPlayerListObj;
        static Load(InName: string): EditorParentPlayerListObj;
    
        __tid_EditorParentPlayerListObj_0__: boolean;
    }
    
    class EditorPerformanceSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShowFrameRateAndMemory: boolean;
        bThrottleCPUWhenNotForeground: boolean;
        bDisableRealtimeViewportsInRemoteSessions: boolean;
        bMonitorEditorPerformance: boolean;
        bOverrideDPIBasedEditorViewportScaling: boolean;
        bEnableSharedDDCPerformanceNotifications: boolean;
        bEnableScalabilityWarningIndicator: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorPerformanceSettings;
        static Load(InName: string): EditorPerformanceSettings;
    
        __tid_EditorPerformanceSettings_0__: boolean;
    }
    
    class EditorPerProjectUserSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDisplayUIExtensionPoints: boolean;
        bDisplayDocumentationLink: boolean;
        bDisplayActionListItemRefIds: boolean;
        bAlwaysGatherBehaviorTreeDebuggerData: boolean;
        bDisplayBlackboardKeysInAlphabeticalOrder: boolean;
        bDisplayEngineVersionInBadge: boolean;
        bUseSimplygonSwarm: boolean;
        SimplygonServerIP: string;
        bEnableSwarmDebugging: boolean;
        SimplygonSwarmDelay: number;
        SwarmNumOfConcurrentJobs: number;
        SwarmMaxUploadChunkSizeInMB: number;
        SwarmIntermediateFolder: string;
        bAutomaticallyHotReloadNewClasses: boolean;
        bShowCompilerLogOnCompileError: boolean;
        bKeepFbxNamespace: boolean;
        bShowImportDialogAtReimport: boolean;
        DataSourceFolder: UE.DirectoryPath;
        bKeepAttachHierarchy: boolean;
        bAnimationReimportWarnings: boolean;
        bUseCurvesForDistributions: boolean;
        PropertyMatrix_NumberOfPasteOperationsBeforeWarning: number;
        bSCSEditorShowGrid: boolean;
        bSCSEditorShowFloor: boolean;
        bGetAttentionOnUATCompletion: boolean;
        SCSViewportCameraSpeed: number;
        bAutoloadCheckedOutPackages: boolean;
        bSuppressFullyLoadPrompt: boolean;
        bAllowSelectTranslucent: boolean;
        BlueprintFavorites: UE.BlueprintPaletteFavorites;
        AssetViewerProfileIndex: number;
        AssetViewerProfileName: string;
        MaterialQualityLevel: number;
        PreviewFeatureLevel: number;
        PreviewPlatformName: string;
        PreviewShaderFormatName: string;
        bPreviewFeatureLevelActive: boolean;
        PreviewDeviceProfileName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorPerProjectUserSettings;
        static Load(InName: string): EditorPerProjectUserSettings;
    
        __tid_EditorPerProjectUserSettings_0__: boolean;
    }
    
    enum EUnit { Micrometers, Millimeters, Centimeters, Meters, Kilometers, Inches, Feet, Yards, Miles, Lightyears, Degrees, Radians, MetersPerSecond, KilometersPerHour, MilesPerHour, Celsius, Farenheit, Kelvin, Micrograms, Milligrams, Grams, Kilograms, MetricTons, Ounces, Pounds, Stones, Newtons, PoundsForce, KilogramsForce, Hertz, Kilohertz, Megahertz, Gigahertz, RevolutionsPerMinute, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Lumens, Milliseconds, Seconds, Minutes, Hours, Days, Months, Years, Multiplier, Percentage, Unspecified, EUnit_MAX, __typeKeyDoNoAccess}
    enum EUnitDisplay { None, Metric, Imperial, Invalid, EUnitDisplay_MAX, __typeKeyDoNoAccess}
    class EditorProjectAppearanceSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDisplayUnits: boolean;
        bDisplayUnitsOnComponentTransforms: boolean;
        DistanceUnits: TArray<UE.EUnit>;
        MassUnits: TArray<UE.EUnit>;
        TimeUnits: TArray<UE.EUnit>;
        AngleUnits: UE.EUnit;
        SpeedUnits: UE.EUnit;
        TemperatureUnits: UE.EUnit;
        ForceUnits: UE.EUnit;
        UnitDisplay: UE.EUnitDisplay;
        DefaultInputUnits: UE.EDefaultLocationUnit;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorProjectAppearanceSettings;
        static Load(InName: string): EditorProjectAppearanceSettings;
    
        __tid_EditorProjectAppearanceSettings_0__: boolean;
    }
    
    class EditorScalarParameterValue extends UE.EditorParameterValue {
        constructor();
        constructor(ParameterValue: number);
        ParameterValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorScalarParameterValue_0__: boolean;
    }
    
    class EditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bLoadTheMostRecentlyLoadedProjectAtStartup: boolean;
        bEditorAnalyticsEnabled: boolean;
        LocalDerivedDataCache: UE.DirectoryPath;
        SharedDerivedDataCache: UE.DirectoryPath;
        bEnableS3DDC: boolean;
        RecentlyOpenedProjectFiles: TArray<string>;
        CreatedProjectPaths: TArray<string>;
        bCopyStarterContentPreference: boolean;
        CompletedSurveys: TArray<UE.Guid>;
        InProgressSurveys: TArray<UE.Guid>;
        AutoScalabilityWorkScaleAmount: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorSettings;
        static Load(InName: string): EditorSettings;
    
        __tid_EditorSettings_0__: boolean;
    }
    
    class EditorSkeletonNotifyObj extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Name: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorSkeletonNotifyObj;
        static Load(InName: string): EditorSkeletonNotifyObj;
    
        __tid_EditorSkeletonNotifyObj_0__: boolean;
    }
    
    class EditorStaticComponentMaskParameterValue extends UE.EditorParameterValue {
        constructor();
        constructor(ParameterValue: UE.ComponentMaskParameter);
        ParameterValue: UE.ComponentMaskParameter;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorStaticComponentMaskParameterValue_0__: boolean;
    }
    
    class EditorStaticSwitchParameterValue extends UE.EditorParameterValue {
        constructor();
        constructor(ParameterValue: boolean);
        ParameterValue: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorStaticSwitchParameterValue_0__: boolean;
    }
    
    enum ELogTimes { None, UTC, SinceGStartTime, Local, ELogTimes_MAX, __typeKeyDoNoAccess}
    class EditorStyleSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnableHighDPIAwareness: boolean;
        bEnableUserEditorLayoutManagement: boolean;
        ColorVisionDeficiencyPreviewType: UE.EColorVisionDeficiency;
        ColorVisionDeficiencySeverity: number;
        bColorVisionDeficiencyCorrection: boolean;
        bColorVisionDeficiencyCorrectionPreviewWithDeficiency: boolean;
        SelectionColor: UE.LinearColor;
        PressedSelectionColor: UE.LinearColor;
        InactiveSelectionColor: UE.LinearColor;
        KeyboardFocusColor: UE.LinearColor;
        EditorWindowBackgroundColor: UE.LinearColor;
        EditorMainWindowBackgroundOverride: UE.SlateBrush;
        EditorChildWindowBackgroundOverride: UE.SlateBrush;
        bResetEditorWindowBackgroundSettings: boolean;
        bUseSmallToolBarIcons: boolean;
        bUseGrid: boolean;
        RegularColor: UE.LinearColor;
        RuleColor: UE.LinearColor;
        CenterColor: UE.LinearColor;
        GridSnapSize: number;
        GraphBackgroundBrush: UE.SlateBrush;
        bEnableWindowAnimations: boolean;
        bShowFriendlyNames: boolean;
        bShowNativeComponentNames: boolean;
        bExpandConfigurationMenus: boolean;
        bShowProjectMenus: boolean;
        bShowLaunchMenus: boolean;
        LogBackgroundColor: UE.LinearColor;
        LogSelectionBackgroundColor: UE.LinearColor;
        LogNormalColor: UE.LinearColor;
        LogCommandColor: UE.LinearColor;
        LogWarningColor: UE.LinearColor;
        LogErrorColor: UE.LinearColor;
        bShowAllAdvancedDetails: boolean;
        bShowHiddenPropertiesWhilePlaying: boolean;
        LogFontSize: number;
        LogTimestampMode: UE.ELogTimes;
        bPromoteOutputLogWarningsDuringPIE: boolean;
        AssetEditorOpenLocation: UE.EAssetEditorOpenLocation;
        bEnableColorizedEditorTabs: boolean;
        bEnableLegacyEditorModeUI: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorStyleSettings;
        static Load(InName: string): EditorStyleSettings;
    
        __tid_EditorStyleSettings_0__: boolean;
    }
    
    class EditorSubsystemBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetEditorSubsystem(Class: $Nullable<UE.Class>) : UE.EditorSubsystem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorSubsystemBlueprintLibrary;
        static Load(InName: string): EditorSubsystemBlueprintLibrary;
    
        __tid_EditorSubsystemBlueprintLibrary_0__: boolean;
    }
    
    class EditorTextureParameterValue extends UE.EditorParameterValue {
        constructor();
        constructor(ParameterValue: UE.Texture);
        ParameterValue: UE.Texture;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorTextureParameterValue_0__: boolean;
    }
    
    class EditorTutorialFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorTutorialFactory;
        static Load(InName: string): EditorTutorialFactory;
    
        __tid_EditorTutorialFactory_0__: boolean;
    }
    
    class EditorTutorialImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorTutorialImportFactory;
        static Load(InName: string): EditorTutorialImportFactory;
    
        __tid_EditorTutorialImportFactory_0__: boolean;
    }
    
    class TutorialCategory {
        constructor();
        constructor(Identifier: string, Title: string, SortOrder: number, Description: string, Icon: string, Texture: UE.SoftObjectPath);
        Identifier: string;
        Title: string;
        SortOrder: number;
        Description: string;
        Icon: string;
        Texture: UE.SoftObjectPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TutorialCategory_0__: boolean;
    }
    
    class TutorialContext {
        constructor();
        constructor(Context: string, BrowserFilter: string, AttractTutorial: UE.SoftClassPath, LaunchTutorial: UE.SoftClassPath);
        Context: string;
        BrowserFilter: string;
        AttractTutorial: UE.SoftClassPath;
        LaunchTutorial: UE.SoftClassPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TutorialContext_0__: boolean;
    }
    
    class EditorTutorialSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDisableAllTutorialAlerts: boolean;
        Categories: TArray<UE.TutorialCategory>;
        StartupTutorial: UE.SoftClassPath;
        TutorialContexts: TArray<UE.TutorialContext>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorTutorialSettings;
        static Load(InName: string): EditorTutorialSettings;
    
        __tid_EditorTutorialSettings_0__: boolean;
    }
    
    class EditorUtilityActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Run() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityActor;
        static Load(InName: string): EditorUtilityActor;
    
        __tid_EditorUtilityActor_0__: boolean;
    }
    
    class EditorUtilityActorComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityActorComponent;
        static Load(InName: string): EditorUtilityActorComponent;
    
        __tid_EditorUtilityActorComponent_0__: boolean;
    }
    
    class EditorUtilityBlueprint extends UE.Blueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityBlueprint;
        static Load(InName: string): EditorUtilityBlueprint;
    
        __tid_EditorUtilityBlueprint_0__: boolean;
    }
    
    class EditorUtilityBlueprintFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParentClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityBlueprintFactory;
        static Load(InName: string): EditorUtilityBlueprintFactory;
    
        __tid_EditorUtilityBlueprintFactory_0__: boolean;
    }
    
    class EditorUtilityCamera extends UE.CameraActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityCamera;
        static Load(InName: string): EditorUtilityCamera;
    
        __tid_EditorUtilityCamera_0__: boolean;
    }
    
    class EditorUtilityExtension extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityExtension;
        static Load(InName: string): EditorUtilityExtension;
    
        __tid_EditorUtilityExtension_0__: boolean;
    }
    
    class EditorUtilityLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetActorReference(PathToActor: string) : UE.Actor;
        static GetSelectedAssetData() : TArray<UE.AssetData>;
        static GetSelectedAssets() : TArray<UE.Object>;
        static GetSelectedBlueprintClasses() : TArray<UE.Class>;
        static GetSelectionBounds(Origin: $Ref<UE.Vector>, BoxExtent: $Ref<UE.Vector>, SphereRadius: $Ref<number>) : void;
        static GetSelectionSet() : TArray<UE.Actor>;
        static RenameAsset(Asset: $Nullable<UE.Object>, NewName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityLibrary;
        static Load(InName: string): EditorUtilityLibrary;
    
        __tid_EditorUtilityLibrary_0__: boolean;
    }
    
    class EditorUtilityTask extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MyTaskManager: UE.EditorUtilitySubsystem;
        FinishExecutingTask() : void;
        ReceiveBeginExecution() : void;
        Run() : void;
        SetTaskNotificationText(Text: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityTask;
        static Load(InName: string): EditorUtilityTask;
    
        __tid_EditorUtilityTask_0__: boolean;
    }
    
    class EditorUtilityWidget extends UE.UserWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HelpText: string;
        bAlwaysReregisterWithWindowsMenu: boolean;
        bAutoRunDefaultAction: boolean;
        Run() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityWidget;
        static Load(InName: string): EditorUtilityWidget;
    
        __tid_EditorUtilityWidget_0__: boolean;
    }
    
    class EditorUtilityWidgetBlueprint extends UE.WidgetBlueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreatedUMGWidget: UE.EditorUtilityWidget;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityWidgetBlueprint;
        static Load(InName: string): EditorUtilityWidgetBlueprint;
    
        __tid_EditorUtilityWidgetBlueprint_0__: boolean;
    }
    
    class EditorUtilitySubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LoadedUIs: TArray<UE.SoftObjectPath>;
        StartupObjects: TArray<UE.SoftObjectPath>;
        ObjectInstances: TMap<UE.Object, UE.Object>;
        PendingTasks: TArray<UE.EditorUtilityTask>;
        ActiveTask: UE.EditorUtilityTask;
        CloseTabByID(NewTabID: string) : boolean;
        DoesTabExist(NewTabID: string) : boolean;
        FindUtilityWidgetFromBlueprint(InBlueprint: $Nullable<UE.EditorUtilityWidgetBlueprint>) : UE.EditorUtilityWidget;
        RegisterAndExecuteTask(NewTask: $Nullable<UE.EditorUtilityTask>) : void;
        RegisterTabAndGetID(InBlueprint: $Nullable<UE.EditorUtilityWidgetBlueprint>, NewTabID: $Ref<string>) : void;
        ReleaseInstanceOfAsset(Asset: $Nullable<UE.Object>) : void;
        SpawnAndRegisterTab(InBlueprint: $Nullable<UE.EditorUtilityWidgetBlueprint>) : UE.EditorUtilityWidget;
        SpawnAndRegisterTabAndGetID(InBlueprint: $Nullable<UE.EditorUtilityWidgetBlueprint>, NewTabID: $Ref<string>) : UE.EditorUtilityWidget;
        SpawnRegisteredTabByID(NewTabID: string) : boolean;
        TryRun(Asset: $Nullable<UE.Object>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilitySubsystem;
        static Load(InName: string): EditorUtilitySubsystem;
    
        __tid_EditorUtilitySubsystem_0__: boolean;
    }
    
    class ScriptSlateIcon {
        constructor();
        constructor(StyleSetName: string, StyleName: string, SmallStyleName: string);
        StyleSetName: string;
        StyleName: string;
        SmallStyleName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScriptSlateIcon_0__: boolean;
    }
    
    enum EToolMenuInsertType { Default, Before, After, First, EToolMenuInsertType_MAX, __typeKeyDoNoAccess}
    class ToolMenuInsert {
        constructor();
        constructor(Name: string, Position: UE.EToolMenuInsertType);
        Name: string;
        Position: UE.EToolMenuInsertType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuInsert_0__: boolean;
    }
    
    enum EMultiBlockType { None, ButtonRow, EditableText, Heading, MenuEntry, Separator, ToolBarButton, ToolBarComboButton, Widget, EMultiBlockType_MAX, __typeKeyDoNoAccess}
    enum EUserInterfaceActionType { None, Button, ToggleButton, RadioButton, Check, CollapsedButton, EUserInterfaceActionType_MAX, __typeKeyDoNoAccess}
    class ToolMenuEntryScriptDataAdvanced {
        constructor();
        constructor(TutorialHighlight: string, EntryType: UE.EMultiBlockType, UserInterfaceActionType: UE.EUserInterfaceActionType, bIsSubMenu: boolean, bOpenSubMenuOnClick: boolean, bShouldCloseWindowAfterMenuSelection: boolean, bSimpleComboBox: boolean);
        TutorialHighlight: string;
        EntryType: UE.EMultiBlockType;
        UserInterfaceActionType: UE.EUserInterfaceActionType;
        bIsSubMenu: boolean;
        bOpenSubMenuOnClick: boolean;
        bShouldCloseWindowAfterMenuSelection: boolean;
        bSimpleComboBox: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuEntryScriptDataAdvanced_0__: boolean;
    }
    
    class ToolMenuEntryScriptData {
        constructor();
        constructor(Menu: string, Section: string, Name: string, Label: string, ToolTip: string, Icon: UE.ScriptSlateIcon, OwnerName: string, InsertPosition: UE.ToolMenuInsert, Advanced: UE.ToolMenuEntryScriptDataAdvanced);
        Menu: string;
        Section: string;
        Name: string;
        Label: string;
        ToolTip: string;
        Icon: UE.ScriptSlateIcon;
        OwnerName: string;
        InsertPosition: UE.ToolMenuInsert;
        Advanced: UE.ToolMenuEntryScriptDataAdvanced;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuEntryScriptData_0__: boolean;
    }
    
    class ToolMenuContext {
        constructor();
        constructor(ContextObjects: TArray<UE.Object>);
        ContextObjects: TArray<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuContext_0__: boolean;
    }
    
    class ToolMenuBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenuBase;
        static Load(InName: string): ToolMenuBase;
    
        __tid_ToolMenuBase_0__: boolean;
    }
    
    enum EMultiBoxType { MenuBar, ToolBar, VerticalToolBar, UniformToolBar, Menu, ButtonRow, EMultiBoxType_MAX, __typeKeyDoNoAccess}
    class ToolMenuOwner {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuOwner_0__: boolean;
    }
    
    class ToolMenuEntry {
        constructor();
        constructor(Name: string, Owner: UE.ToolMenuOwner, Type: UE.EMultiBlockType, UserInterfaceActionType: UE.EUserInterfaceActionType, TutorialHighlightName: string, InsertPosition: UE.ToolMenuInsert, bShouldCloseWindowAfterMenuSelection: boolean, ScriptObject: UE.ToolMenuEntryScript);
        Name: string;
        Owner: UE.ToolMenuOwner;
        Type: UE.EMultiBlockType;
        UserInterfaceActionType: UE.EUserInterfaceActionType;
        TutorialHighlightName: string;
        InsertPosition: UE.ToolMenuInsert;
        bShouldCloseWindowAfterMenuSelection: boolean;
        ScriptObject: UE.ToolMenuEntryScript;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuEntry_0__: boolean;
    }
    
    class ToolMenuSectionDynamic extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstructSections(Menu: $Nullable<UE.ToolMenu>, Context: UE.ToolMenuContext) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenuSectionDynamic;
        static Load(InName: string): ToolMenuSectionDynamic;
    
        __tid_ToolMenuSectionDynamic_0__: boolean;
    }
    
    class ToolMenuSection {
        constructor();
        constructor(Name: string, Owner: UE.ToolMenuOwner, Blocks: TArray<UE.ToolMenuEntry>, InsertPosition: UE.ToolMenuInsert, Context: UE.ToolMenuContext, ToolMenuSectionDynamic: UE.ToolMenuSectionDynamic);
        Name: string;
        Owner: UE.ToolMenuOwner;
        Blocks: TArray<UE.ToolMenuEntry>;
        InsertPosition: UE.ToolMenuInsert;
        Context: UE.ToolMenuContext;
        ToolMenuSectionDynamic: UE.ToolMenuSectionDynamic;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuSection_0__: boolean;
    }
    
    class ToolMenu extends UE.ToolMenuBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MenuName: string;
        MenuParent: string;
        StyleName: string;
        TutorialHighlightName: string;
        MenuType: UE.EMultiBoxType;
        bShouldCloseWindowAfterMenuSelection: boolean;
        bCloseSelfOnly: boolean;
        bSearchable: boolean;
        bToolBarIsFocusable: boolean;
        bToolBarForceSmallIcons: boolean;
        bPreventCustomization: boolean;
        MenuOwner: UE.ToolMenuOwner;
        Context: UE.ToolMenuContext;
        Sections: TArray<UE.ToolMenuSection>;
        SubMenuParent: UE.ToolMenu;
        SubMenuSourceEntryName: string;
        AddDynamicSectionScript(SectionName: string, Object: $Nullable<UE.ToolMenuSectionDynamic>) : void;
        AddMenuEntry(SectionName: string, Args: UE.ToolMenuEntry) : void;
        AddMenuEntryObject(InObject: $Nullable<UE.ToolMenuEntryScript>) : void;
        AddSectionScript(SectionName: string, Label?: string /* = "" */, InsertName?: string /* = "None" */, InsertType?: UE.EToolMenuInsertType /* = Default */) : void;
        AddSubMenuScript(Owner: string, SectionName: string, Name: string, Label: string, ToolTip?: string /* = "" */) : UE.ToolMenu;
        InitMenu(Owner: UE.ToolMenuOwner, Name: string, Parent?: string /* = "None" */, Type?: UE.EMultiBoxType /* = Menu */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenu;
        static Load(InName: string): ToolMenu;
    
        __tid_ToolMenu_0__: boolean;
    }
    
    class ToolMenuEntryScript extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Data: UE.ToolMenuEntryScriptData;
        CanExecute(Context: UE.ToolMenuContext) : boolean;
        ConstructMenuEntry(Menu: $Nullable<UE.ToolMenu>, SectionName: string, Context: UE.ToolMenuContext) : void;
        Execute(Context: UE.ToolMenuContext) : void;
        GetCheckState(Context: UE.ToolMenuContext) : UE.ECheckBoxState;
        GetIcon(Context: UE.ToolMenuContext) : UE.ScriptSlateIcon;
        GetLabel(Context: UE.ToolMenuContext) : string;
        GetToolTip(Context: UE.ToolMenuContext) : string;
        InitEntry(OwnerName: string, Menu: string, Section: string, Name: string, Label?: string /* = "" */, ToolTip?: string /* = "" */) : void;
        IsVisible(Context: UE.ToolMenuContext) : boolean;
        RegisterMenuEntry() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenuEntryScript;
        static Load(InName: string): ToolMenuEntryScript;
    
        __tid_ToolMenuEntryScript_0__: boolean;
    }
    
    class EditorUtilityToolMenuEntry extends UE.ToolMenuEntryScript {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityToolMenuEntry;
        static Load(InName: string): EditorUtilityToolMenuEntry;
    
        __tid_EditorUtilityToolMenuEntry_0__: boolean;
    }
    
    class EditorUtilityToolMenuSection extends UE.ToolMenuSectionDynamic {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityToolMenuSection;
        static Load(InName: string): EditorUtilityToolMenuSection;
    
        __tid_EditorUtilityToolMenuSection_0__: boolean;
    }
    
    class EditorUtilityWidgetBlueprintFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlueprintType: UE.EBlueprintType;
        ParentClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorUtilityWidgetBlueprintFactory;
        static Load(InName: string): EditorUtilityWidgetBlueprintFactory;
    
        __tid_EditorUtilityWidgetBlueprintFactory_0__: boolean;
    }
    
    class EditorValidatorBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsEnabled: boolean;
        AssetFails(InAsset: $Nullable<UE.Object>, InMessage: string, ValidationErrors: $Ref<TArray<string>>) : void;
        AssetPasses(InAsset: $Nullable<UE.Object>) : void;
        AssetWarning(InAsset: $Nullable<UE.Object>, InMessage: string) : void;
        CanValidateAsset(InAsset: $Nullable<UE.Object>) : boolean;
        GetValidationResult() : UE.EDataValidationResult;
        ValidateLoadedAsset(InAsset: $Nullable<UE.Object>, ValidationErrors: $Ref<TArray<string>>) : UE.EDataValidationResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorValidatorBase;
        static Load(InName: string): EditorValidatorBase;
    
        __tid_EditorValidatorBase_0__: boolean;
    }
    
    class EditorValidator_Localization extends UE.EditorValidatorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorValidator_Localization;
        static Load(InName: string): EditorValidator_Localization;
    
        __tid_EditorValidator_Localization_0__: boolean;
    }
    
    class EditorValidatorSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ExcludedDirectories: TArray<UE.DirectoryPath>;
        bValidateOnSave: boolean;
        Validators: TMap<UE.Class, UE.EditorValidatorBase>;
        bValidateAssetsWhileSavingForCook: boolean;
        bAllowBlueprintValidators: boolean;
        AddValidator(InValidator: $Nullable<UE.EditorValidatorBase>) : void;
        IsAssetValid(AssetData: $Ref<UE.AssetData>, ValidationErrors: $Ref<TArray<string>>, ValidationWarnings: $Ref<TArray<string>>) : UE.EDataValidationResult;
        IsObjectValid(InObject: $Nullable<UE.Object>, ValidationErrors: $Ref<TArray<string>>, ValidationWarnings: $Ref<TArray<string>>) : UE.EDataValidationResult;
        ValidateAssets(AssetDataList: TArray<UE.AssetData>, bSkipExcludedDirectories?: boolean /* = true */, bShowIfNoFailures?: boolean /* = true */) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorValidatorSubsystem;
        static Load(InName: string): EditorValidatorSubsystem;
    
        __tid_EditorValidatorSubsystem_0__: boolean;
    }
    
    class EditorVectorParameterValue extends UE.EditorParameterValue {
        constructor();
        constructor(ParameterValue: UE.LinearColor);
        ParameterValue: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EditorVectorParameterValue_0__: boolean;
    }
    
    class EditorViewportViewMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EditorViewportViewMenuContext;
        static Load(InName: string): EditorViewportViewMenuContext;
    
        __tid_EditorViewportViewMenuContext_0__: boolean;
    }
    
    class InputRouter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoInvalidateOnHover: boolean;
        bAutoInvalidateOnCapture: boolean;
        ActiveInputBehaviors: UE.InputBehaviorSet;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputRouter;
        static Load(InName: string): InputRouter;
    
        __tid_InputRouter_0__: boolean;
    }
    
    class InteractiveToolManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActiveLeftTool: UE.InteractiveTool;
        ActiveRightTool: UE.InteractiveTool;
        ToolBuilders: TMap<string, UE.InteractiveToolBuilder>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveToolManager;
        static Load(InName: string): InteractiveToolManager;
    
        __tid_InteractiveToolManager_0__: boolean;
    }
    
    class InteractiveGizmoManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActiveGizmos: TArray<UE.ActiveGizmo>;
        GizmoBuilders: TMap<string, UE.InteractiveGizmoBuilder>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveGizmoManager;
        static Load(InName: string): InteractiveGizmoManager;
    
        __tid_InteractiveGizmoManager_0__: boolean;
    }
    
    class InteractiveToolsContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputRouter: UE.InputRouter;
        ToolManager: UE.InteractiveToolManager;
        GizmoManager: UE.InteractiveGizmoManager;
        ToolManagerClass: TSoftClassPtr<UE.InteractiveToolManager>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveToolsContext;
        static Load(InName: string): InteractiveToolsContext;
    
        __tid_InteractiveToolsContext_0__: boolean;
    }
    
    class EdModeInteractiveToolsContext extends UE.InteractiveToolsContext {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StandardVertexColorMaterial: UE.MaterialInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdModeInteractiveToolsContext;
        static Load(InName: string): EdModeInteractiveToolsContext;
    
        __tid_EdModeInteractiveToolsContext_0__: boolean;
    }
    
    class EdMode extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ToolsContext: UE.EdModeInteractiveToolsContext;
        SettingsClass: TSoftClassPtr<UE.Object>;
        SettingsObject: UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EdMode;
        static Load(InName: string): EdMode;
    
        __tid_EdMode_0__: boolean;
    }
    
    enum EDrawDebugItemType { DirectionalArrow, Sphere, Line, OnScreenMessage, CoordinateSystem, EDrawDebugItemType_MAX, __typeKeyDoNoAccess}
    enum EDrawDebugTrace { None, ForOneFrame, ForDuration, Persistent, EDrawDebugTrace_MAX, __typeKeyDoNoAccess}
    enum EEarlyZPass { None, OpaqueOnly, OpaqueAndMasked, Auto, EEarlyZPass_MAX, __typeKeyDoNoAccess}
    enum EEasingFunc { Linear, Step, SinusoidalIn, SinusoidalOut, SinusoidalInOut, EaseIn, EaseOut, EaseInOut, ExpoIn, ExpoOut, ExpoInOut, CircularIn, CircularOut, CircularInOut, EEasingFunc_MAX, __typeKeyDoNoAccess}
    enum EEdGraphSchemaAction_K2Graph { Graph, Subgraph, Function, Interface, Macro, MAX, __typeKeyDoNoAccess}
    enum EEmissionPatternTypeEnum { Chaos_Emission_Pattern_First_Frame, Chaos_Emission_Pattern_On_Demand, Chaos_Max, Chaos_MAX, __typeKeyDoNoAccess}
    enum EEmitterDynamicParameterValue { EDPV_UserSet, EDPV_AutoSet, EDPV_VelocityX, EDPV_VelocityY, EDPV_VelocityZ, EDPV_VelocityMag, EDPV_MAX, __typeKeyDoNoAccess}
    enum EEntitlementCacheLevelRequest { Memory, Disk, EEntitlementCacheLevelRequest_MAX, __typeKeyDoNoAccess}
    enum EEntitlementCacheLevelRetrieved { None, Memory, Disk, EEntitlementCacheLevelRetrieved_MAX, __typeKeyDoNoAccess}
    enum EEnvDirection { TwoPoints, Rotation, EEnvDirection_MAX, __typeKeyDoNoAccess}
    enum EEnvelopeFollowerPeakMode { MeanSquared, RootMeanSquared, Peak, Count, EEnvelopeFollowerPeakMode_MAX, __typeKeyDoNoAccess}
    enum EEnvOverlapShape { Box, Sphere, Capsule, EEnvOverlapShape_MAX, __typeKeyDoNoAccess}
    enum EEnvQueryHightlightMode { All, Best5Pct, Best25Pct, EEnvQueryHightlightMode_MAX, __typeKeyDoNoAccess}
    enum EEnvQueryParam { Float, Int, Bool, EEnvQueryParam_MAX, __typeKeyDoNoAccess}
    enum EEnvQueryTrace { None, Navigation, Geometry, NavigationOverLedges, EEnvQueryTrace_MAX, __typeKeyDoNoAccess}
    enum EEnvTestCost { Low, Medium, High, EEnvTestCost_MAX, __typeKeyDoNoAccess}
    enum EEnvTestDistance { Distance3D, Distance2D, DistanceZ, DistanceAbsoluteZ, EEnvTestDistance_MAX, __typeKeyDoNoAccess}
    enum EEnvTestDot { Dot3D, Dot2D, EEnvTestDot_MAX, __typeKeyDoNoAccess}
    enum EEnvTestPathfinding { PathExist, PathCost, PathLength, EEnvTestPathfinding_MAX, __typeKeyDoNoAccess}
    enum EEnvTestWeight { None, Square, Inverse, Unused, Constant, Skip, EEnvTestWeight_MAX, __typeKeyDoNoAccess}
    enum EEnvTraceShape { Line, Box, Sphere, Capsule, EEnvTraceShape_MAX, __typeKeyDoNoAccess}
    enum EEyeTrackerStatus { NotConnected, NotTracking, Tracking, EEyeTrackerStatus_MAX, __typeKeyDoNoAccess}
    enum EFastArraySerializerDeltaFlags { None, HasBeenSerialized, HasDeltaBeenRequested, IsUsingDeltaSerialization, EFastArraySerializerDeltaFlags_MAX, __typeKeyDoNoAccess}
    enum EFBXAnimationLengthImportType { FBXALIT_ExportedTime, FBXALIT_AnimatedKey, FBXALIT_SetRange, FBXALIT_MAX, __typeKeyDoNoAccess}
    enum EFBXExpectedResultPreset { Error_Number, Warning_Number, Created_Staticmesh_Number, Created_Skeletalmesh_Number, Materials_Created_Number, Material_Slot_Imported_Name, Vertex_Number, Lod_Number, Vertex_Number_Lod, Mesh_Materials_Number, Mesh_LOD_Section_Number, Mesh_LOD_Section_Vertex_Number, Mesh_LOD_Section_Triangle_Number, Mesh_LOD_Section_Material_Name, Mesh_LOD_Section_Material_Index, Mesh_LOD_Section_Material_Imported_Name, Mesh_LOD_Vertex_Position, Mesh_LOD_Vertex_Normal, LOD_UV_Channel_Number, Bone_Number, Bone_Position, Animation_Frame_Number, Animation_Length, EFBXExpectedResultPreset_MAX, __typeKeyDoNoAccess}
    enum EFbxExportCompatibility { FBX_2011, FBX_2012, FBX_2013, FBX_2014, FBX_2016, FBX_2018, FBX_2019, FBX_2020, FBX_MAX, __typeKeyDoNoAccess}
    enum EFBXImportContentType { FBXICT_All, FBXICT_Geometry, FBXICT_SkinningWeights, FBXICT_MAX, __typeKeyDoNoAccess}
    enum EFBXImportType { FBXIT_StaticMesh, FBXIT_SkeletalMesh, FBXIT_Animation, FBXIT_MAX, __typeKeyDoNoAccess}
    enum EFBXNormalGenerationMethod { BuiltIn, MikkTSpace, EFBXNormalGenerationMethod_MAX, __typeKeyDoNoAccess}
    enum EFBXNormalImportMethod { FBXNIM_ComputeNormals, FBXNIM_ImportNormals, FBXNIM_ImportNormalsAndTangents, FBXNIM_MAX, __typeKeyDoNoAccess}
    enum EFBXSceneNormalGenerationMethod { BuiltIn, MikkTSpace, EFBXSceneNormalGenerationMethod_MAX, __typeKeyDoNoAccess}
    enum EFBXSceneNormalImportMethod { FBXSceneNIM_ComputeNormals, FBXSceneNIM_ImportNormals, FBXSceneNIM_ImportNormalsAndTangents, FBXSceneNIM_MAX, __typeKeyDoNoAccess}
    enum EFBXSceneOptionsCreateHierarchyType { FBXSOCHT_CreateLevelActors, FBXSOCHT_CreateActorComponents, FBXSOCHT_CreateBlueprint, FBXSOCHT_MAX, __typeKeyDoNoAccess}
    enum EFbxSceneReimportStatusFlags { None, Added, Removed, Same, FoundContentBrowserAsset, ReimportAsset, EFbxSceneReimportStatusFlags_MAX, __typeKeyDoNoAccess}
    enum EFbxSceneVertexColorImportOption { Replace, Ignore, Override, EFbxSceneVertexColorImportOption_MAX, __typeKeyDoNoAccess}
    enum EFBXTestPlanActionType { Import, Reimport, AddLOD, ReimportLOD, ImportReload, EFBXTestPlanActionType_MAX, __typeKeyDoNoAccess}
    enum EFiBVersion { FIB_VER_NONE, FIB_VER_BASE, FIB_VER_VARIABLE_REFERENCE, FIB_VER_INTERFACE_GRAPHS, FIB_VER_PLUS_ONE, FIB_VER_LATEST, FIB_VER_MAX, __typeKeyDoNoAccess}
    enum EFieldOperationType { Field_Multiply, Field_Divide, Field_Add, Field_Substract, Field_Operation_Max, __typeKeyDoNoAccess}
    enum EFieldPhysicsDefaultFields { Field_RadialIntMask, Field_RadialFalloff, Field_UniformVector, Field_RadialVector, Field_RadialVectorFalloff, Field_EFieldPhysicsDefaultFields_Max, Field_MAX, __typeKeyDoNoAccess}
    enum EFieldResolutionType { Field_Resolution_Minimal, Field_Resolution_DisabledParents, Field_Resolution_Maximum, Field_Resolution_Max, Field_Resolution_MAX, __typeKeyDoNoAccess}
    enum EFireEventsAtPosition { AtStartOfEvaluation, AtEndOfEvaluation, AfterSpawn, EFireEventsAtPosition_MAX, __typeKeyDoNoAccess}
    enum EFixedFoveatedRenderingLevel { FFR_Off, FFR_Low, FFR_Medium, FFR_High, FFR_HighTop, FFR_MAX, __typeKeyDoNoAccess}
    enum EFlattenMaterialProperties { Diffuse, Metallic, Specular, Roughness, Anisotropy, Normal, Tangent, Opacity, Emissive, SubSurface, OpacityMask, AmbientOcclusion, NumFlattenMaterialProperties, EFlattenMaterialProperties_MAX, __typeKeyDoNoAccess}
    enum EFlipbookCollisionMode { NoCollision, FirstFrameCollision, EachFrameCollision, EFlipbookCollisionMode_MAX, __typeKeyDoNoAccess}
    namespace Engine.ArtTools.RenderToTexture.Enums.EFloatTypes {
        enum EFloatTypes { Float, Float2, Float3, Float4, EFloatTypes_MAX, __typeKeyDoNoAccess}
    }

    enum EFocusCause { Mouse, Navigation, SetDirectly, Cleared, OtherWidgetLostFocus, WindowActivate, EFocusCause_MAX, __typeKeyDoNoAccess}
    enum EFocusLostReason { EFocusLostReason_Invalid, EFocusLostReason_System, EFocusLostReason_MAX, __typeKeyDoNoAccess}
    enum EFoliageScaling { Uniform, Free, LockXY, LockXZ, LockYZ, EFoliageScaling_MAX, __typeKeyDoNoAccess}
    enum EFontLayoutMethod { Metrics, BoundingBox, EFontLayoutMethod_MAX, __typeKeyDoNoAccess}
    enum EFormatArgumentType { Int, UInt, Float, Double, Text, Gender, EFormatArgumentType_MAX, __typeKeyDoNoAccess}
    enum EFourPlayerSplitScreenType { Grid, Vertical, Horizontal, EFourPlayerSplitScreenType_MAX, __typeKeyDoNoAccess}
    enum EFractureAutoClusterMode { BoundingBox, Proximity, Distance, EFractureAutoClusterMode_MAX, __typeKeyDoNoAccess}
    enum EFractureBrickBond { Stretcher, Stack, English, Header, Flemish, EFractureBrickBond_MAX, __typeKeyDoNoAccess}
    enum EFractureBrickProjection { X, Y, Z, EFractureBrickProjection_MAX, __typeKeyDoNoAccess}
    enum EFrameNumberDisplayFormats { NonDropFrameTimecode, DropFrameTimecode, Seconds, Frames, MAX_Count, EFrameNumberDisplayFormats_MAX, __typeKeyDoNoAccess}
    enum EFullyLoadPackageType { FULLYLOAD_Map, FULLYLOAD_Game_PreLoadClass, FULLYLOAD_Game_PostLoadClass, FULLYLOAD_Always, FULLYLOAD_Mutator, FULLYLOAD_MAX, __typeKeyDoNoAccess}
    enum EFunctionalTestLogHandling { ProjectDefault, OutputIsError, OutputIgnored, EFunctionalTestLogHandling_MAX, __typeKeyDoNoAccess}
    enum EFunctionalTestResult { Default, Invalid, Error, Running, Failed, Succeeded, EFunctionalTestResult_MAX, __typeKeyDoNoAccess}
    enum EGameplayDebuggerOverrideMode { Enable, Disable, UseDefault, EGameplayDebuggerOverrideMode_MAX, __typeKeyDoNoAccess}
    enum EGameplayTagMatchType { Explicit, IncludeParentTags, EGameplayTagMatchType_MAX, __typeKeyDoNoAccess}
    enum EGameplayTagQueryExprType { Undefined, AnyTagsMatch, AllTagsMatch, NoTagsMatch, AnyExprMatch, AllExprMatch, NoExprMatch, EGameplayTagQueryExprType_MAX, __typeKeyDoNoAccess}
    enum EGameplayTagSelectionType { None, NonRestrictedOnly, RestrictedOnly, All, EGameplayTagSelectionType_MAX, __typeKeyDoNoAccess}
    enum EGameplayTagSourceType { Native, DefaultTagList, TagList, RestrictedTagList, DataTable, Invalid, EGameplayTagSourceType_MAX, __typeKeyDoNoAccess}
    enum EGameplayTaskState { Uninitialized, AwaitingActivation, Paused, Active, Finished, EGameplayTaskState_MAX, __typeKeyDoNoAccess}
    enum EGBufferFormat { Force8BitsPerChannel, Default, HighPrecisionNormals, Force16BitsPerChannel, EGBufferFormat_MAX, __typeKeyDoNoAccess}
    enum EGenericAICheck { Less, LessOrEqual, Equal, NotEqual, GreaterOrEqual, Greater, IsTrue, MAX, __typeKeyDoNoAccess}
    enum EGizmoHandleTypes { All, Translate, Rotate, Scale, EGizmoHandleTypes_MAX, __typeKeyDoNoAccess}
    enum EGooglePADCellularDataConfirmStatus { AssetPack_CONFIRM_UNKNOWN, AssetPack_CONFIRM_PENDING, AssetPack_CONFIRM_USER_APPROVED, AssetPack_CONFIRM_USER_CANCELED, AssetPack_CONFIRM_MAX, __typeKeyDoNoAccess}
    enum EGooglePADDownloadStatus { AssetPack_UNKNOWN, AssetPack_DOWNLOAD_PENDING, AssetPack_DOWNLOADING, AssetPack_TRANSFERRING, AssetPack_DOWNLOAD_COMPLETED, AssetPack_DOWNLOAD_FAILED, AssetPack_DOWNLOAD_CANCELED, AssetPack_WAITING_FOR_WIFI, AssetPack_NOT_INSTALLED, AssetPack_INFO_PENDING, AssetPack_INFO_FAILED, AssetPack_REMOVAL_PENDING, AssetPack_REMOVAL_FAILED, AssetPack_MAX, __typeKeyDoNoAccess}
    enum EGooglePADErrorCode { AssetPack_NO_ERROR, AssetPack_APP_UNAVAILABLE, AssetPack_UNAVAILABLE, AssetPack_INVALID_REQUEST, AssetPack_DOWNLOAD_NOT_FOUND, AssetPack_API_NOT_AVAILABLE, AssetPack_NETWORK_ERROR, AssetPack_ACCESS_DENIED, AssetPack_INSUFFICIENT_STORAGE, AssetPack_PLAY_STORE_NOT_FOUND, AssetPack_NETWORK_UNRESTRICTED, AssetPack_INTERNAL_ERROR, AssetPack_INITIALIZATION_NEEDED, AssetPack_INITIALIZATION_FAILED, AssetPack_MAX, __typeKeyDoNoAccess}
    enum EGooglePADStorageMethod { AssetPack_STORAGE_FILES, AssetPack_STORAGE_APK, AssetPack_STORAGE_UNKNOWN, AssetPack_STORAGE_NOT_INSTALLED, AssetPack_STORAGE_MAX, __typeKeyDoNoAccess}
    enum EGoogleVRMode { Cardboard, Daydream, DaydreamAndCardboard, EGoogleVRMode_MAX, __typeKeyDoNoAccess}
    enum EGranularSynthEnvelopeType { Rectangular, Triangle, DownwardTriangle, UpwardTriangle, ExponentialDecay, ExponentialIncrease, Gaussian, Hanning, Lanczos, Cosine, CosineSquared, Welch, Blackman, BlackmanHarris, Count, EGranularSynthEnvelopeType_MAX, __typeKeyDoNoAccess}
    enum EGranularSynthSeekType { FromBeginning, FromCurrentPosition, Count, EGranularSynthSeekType_MAX, __typeKeyDoNoAccess}
    enum EGraphAxisStyle { Lines, Notches, Grid, EGraphAxisStyle_MAX, __typeKeyDoNoAccess}
    enum EGraphDataStyle { Lines, Filled, EGraphDataStyle_MAX, __typeKeyDoNoAccess}
    enum EGraphicsPreset { Unspecified, Maximum, Scalable, EGraphicsPreset_MAX, __typeKeyDoNoAccess}
    enum EGraphPanningMouseButton { Right, Middle, Both, EGraphPanningMouseButton_MAX, __typeKeyDoNoAccess}
    enum EHandKeypoint { Palm, Wrist, ThumbMetacarpal, ThumbProximal, ThumbDistal, ThumbTip, IndexMetacarpal, IndexProximal, IndexIntermediate, IndexDistal, IndexTip, MiddleMetacarpal, MiddleProximal, MiddleIntermediate, MiddleDistal, MiddleTip, RingMetacarpal, RingProximal, RingIntermediate, RingDistal, RingTip, LittleMetacarpal, LittleProximal, LittleIntermediate, LittleDistal, LittleTip, EHandKeypoint_MAX, __typeKeyDoNoAccess}
    enum EHandTrackingSupport { ControllersOnly, ControllersAndHands, HandsOnly, EHandTrackingSupport_MAX, __typeKeyDoNoAccess}
    enum EHardwareClass { Unspecified, Desktop, Mobile, EHardwareClass_MAX, __typeKeyDoNoAccess}
    enum EHierarchicalLODActionType { InvalidAction, CreateCluster, AddActorToCluster, MoveActorToCluster, RemoveActorFromCluster, MergeClusters, ChildCluster, MAX, __typeKeyDoNoAccess}
    enum EHMDTrackingOrigin { Floor, Eye, Stage, Unbounded, EHMDTrackingOrigin_MAX, __typeKeyDoNoAccess}
    enum EHMDWornState { Unknown, Worn, NotWorn, EHMDWornState_MAX, __typeKeyDoNoAccess}
    enum EHorizTextAligment { EHTA_Left, EHTA_Center, EHTA_Right, EHTA_MAX, __typeKeyDoNoAccess}
    enum EImportanceLevel { IL_Off, IL_Lowest, IL_Low, IL_Normal, IL_High, IL_Highest, TEMP_BROKEN2, EImportanceLevel_MAX, __typeKeyDoNoAccess}
    enum EImportanceWeight { Luminance, Red, Green, Blue, Alpha, EImportanceWeight_MAX, __typeKeyDoNoAccess}
    enum EImportGeometryType { IGT_3D, IGT_Billboards, IGT_Both, IGT_MAX, __typeKeyDoNoAccess}
    enum EImportLODType { ILT_PaintedFoliage, ILT_IndividualActors, ILT_MAX, __typeKeyDoNoAccess}
    enum EInAppPurchaseState { Unknown, Success, Failed, Cancelled, Invalid, NotAllowed, Restored, AlreadyOwned, EInAppPurchaseState_MAX, __typeKeyDoNoAccess}
    enum EInAppPurchaseStatus { Invalid, Failed, Deferred, Canceled, Purchased, Restored, EInAppPurchaseStatus_MAX, __typeKeyDoNoAccess}
    enum EInertializationBoneState { Invalid, Valid, Excluded, EInertializationBoneState_MAX, __typeKeyDoNoAccess}
    enum EInertializationSpace { Default, WorldSpace, WorldRotation, EInertializationSpace_MAX, __typeKeyDoNoAccess}
    enum EInertializationState { Inactive, Pending, Active, EInertializationState_MAX, __typeKeyDoNoAccess}
    enum EInputCaptureRequestType { Begin, Ignore, EInputCaptureRequestType_MAX, __typeKeyDoNoAccess}
    enum EInputCaptureSide { None, Left, Right, Both, Any, EInputCaptureSide_MAX, __typeKeyDoNoAccess}
    enum EInputCaptureState { Begin, Continue, End, Ignore, EInputCaptureState_MAX, __typeKeyDoNoAccess}
    enum EInputDevices { None, Keyboard, Mouse, Gamepad, OculusTouch, HTCViveWands, AnySpatialDevice, TabletFingers, EInputDevices_MAX, __typeKeyDoNoAccess}
    enum EInteractorHand { Right, Left, EInteractorHand_MAX, __typeKeyDoNoAccess}
    enum EInterpMoveAxis { AXIS_TranslationX, AXIS_TranslationY, AXIS_TranslationZ, AXIS_RotationX, AXIS_RotationY, AXIS_RotationZ, AXIS_MAX, __typeKeyDoNoAccess}
    enum EInterpToBehaviourType { OneShot, OneShot_Reverse, Loop_Reset, PingPong, EInterpToBehaviourType_MAX, __typeKeyDoNoAccess}
    namespace Engine.ArtTools.RenderToTexture.Enums.EIntTypes {
        enum EIntTypes { int, int2, int3, int4, EIntTypes_MAX, __typeKeyDoNoAccess}
    }

    enum EIOSCloudKitSyncStrategy { None, OnlyAtGameStart, Always, EIOSCloudKitSyncStrategy_MAX, __typeKeyDoNoAccess}
    enum EIOSLandscapeOrientation { LandscapeLeft, LandscapeRight, EIOSLandscapeOrientation_MAX, __typeKeyDoNoAccess}
    enum EIOSMetalShaderStandard { IOSMetalSLStandard_1_2, IOSMetalSLStandard_2_0, IOSMetalSLStandard_2_1, IOSMetalSLStandard_MAX, __typeKeyDoNoAccess}
    enum EIOSVersion { IOS_12, IOS_13, IOS_14, IOS_MAX, __typeKeyDoNoAccess}
    enum EKeyGroupMode { KeyChanged, KeyGroup, KeyAll, EKeyGroupMode_MAX, __typeKeyDoNoAccess}
    enum ELabelAnchorMode { LabelAnchorMode_TopLeft, LabelAnchorMode_TopCenter, LabelAnchorMode_TopRight, LabelAnchorMode_CenterLeft, LabelAnchorMode_Centered, LabelAnchorMode_CenterRight, LabelAnchorMode_BottomLeft, LabelAnchorMode_BottomCenter, LabelAnchorMode_BottomRight, LabelAnchorMode_MAX, __typeKeyDoNoAccess}
    enum ELandscapeBlendMode { LSBM_AdditiveBlend, LSBM_AlphaBlend, LSBM_MAX, __typeKeyDoNoAccess}
    enum ELandscapeClearMode { Clear_Weightmap, Clear_Heightmap, Clear_All, Clear_MAX, __typeKeyDoNoAccess}
    enum ELandscapeConvertMode { Invalid, Expand, Clip, Resample, ELandscapeConvertMode_MAX, __typeKeyDoNoAccess}
    enum ELandscapeCustomizedCoordType { LCCT_None, LCCT_CustomUV0, LCCT_CustomUV1, LCCT_CustomUV2, LCCT_WeightMapUV, LCCT_MAX, __typeKeyDoNoAccess}
    enum ELandscapeFoliageEditorControlType { IgnoreCtrl, RequireCtrl, RequireNoCtrl, ELandscapeFoliageEditorControlType_MAX, __typeKeyDoNoAccess}
    enum ELandscapeGizmoType { LGT_None, LGT_Height, LGT_Weight, LGT_MAX, __typeKeyDoNoAccess}
    enum ELandscapeImportAlphamapType { Additive, Layered, ELandscapeImportAlphamapType_MAX, __typeKeyDoNoAccess}
    enum ELandscapeImportHeightmapError { None, FileNotFound, InvalidSize, CorruptFile, ColorPng, LowBitDepth, ELandscapeImportHeightmapError_MAX, __typeKeyDoNoAccess}
    enum ELandscapeImportLayerError { None, MissingLayerInfo, FileNotFound, FileSizeMismatch, CorruptFile, ColorPng, ELandscapeImportLayerError_MAX, __typeKeyDoNoAccess}
    enum ELandscapeImportResult { Success, Warning, Error, ELandscapeImportResult_MAX, __typeKeyDoNoAccess}
    enum ELandscapeLayerBlendType { LB_WeightBlend, LB_AlphaBlend, LB_HeightBlend, LB_MAX, __typeKeyDoNoAccess}
    enum ELandscapeLayerDisplayMode { Default, Alphabetical, UserSpecific, ELandscapeLayerDisplayMode_MAX, __typeKeyDoNoAccess}
    enum ELandscapeLayerPaintingRestriction { None, UseMaxLayers, ExistingOnly, UseComponentWhitelist, ELandscapeLayerPaintingRestriction_MAX, __typeKeyDoNoAccess}
    enum ELandscapeLODFalloff { Linear, SquareRoot, ELandscapeLODFalloff_MAX, __typeKeyDoNoAccess}
    enum ELandscapeMirrorOperation { MinusXToPlusX, PlusXToMinusX, MinusYToPlusY, PlusYToMinusY, RotateMinusXToPlusX, RotatePlusXToMinusX, RotateMinusYToPlusY, RotatePlusYToMinusY, ELandscapeMirrorOperation_MAX, __typeKeyDoNoAccess}
    enum ELandscapeSetupErrors { LSE_None, LSE_NoLandscapeInfo, LSE_CollsionXY, LSE_NoLayerInfo, LSE_MAX, __typeKeyDoNoAccess}
    enum ELandscapeToolErosionMode { Invalid, Both, Raise, Lower, ELandscapeToolErosionMode_MAX, __typeKeyDoNoAccess}
    enum ELandscapeToolFlattenMode { Invalid, Both, Raise, Lower, Interval, Terrace, ELandscapeToolFlattenMode_MAX, __typeKeyDoNoAccess}
    enum ELandscapeToolHydroErosionMode { Invalid, Both, Positive, ELandscapeToolHydroErosionMode_MAX, __typeKeyDoNoAccess}
    enum ELandscapeToolNoiseMode { Invalid, Both, Add, Sub, ELandscapeToolNoiseMode_MAX, __typeKeyDoNoAccess}
    enum ELandscapeToolPasteMode { Invalid, Both, Raise, Lower, ELandscapeToolPasteMode_MAX, __typeKeyDoNoAccess}
    enum ELaunchModeType { LaunchMode_OnDevice, LaunchMode_MAX, __typeKeyDoNoAccess}
    enum ELegendPosition { Outside, Inside, ELegendPosition_MAX, __typeKeyDoNoAccess}
    enum ELerpInterpolationMode { QuatInterp, EulerInterp, DualQuatInterp, ELerpInterpolationMode_MAX, __typeKeyDoNoAccess}
    enum ELevelEditor2DAxis { X, Y, Z, ELevelEditor2DAxis_MAX, __typeKeyDoNoAccess}
    enum ELevelViewportType { LVT_OrthoXY, LVT_OrthoXZ, LVT_OrthoYZ, LVT_Perspective, LVT_OrthoFreelook, LVT_OrthoNegativeXY, LVT_OrthoNegativeXZ, LVT_OrthoNegativeYZ, LVT_MAX, LVT_None, __typeKeyDoNoAccess}
    enum ELevelVisibility { Visible, Hidden, ELevelVisibility_MAX, __typeKeyDoNoAccess}
    enum ELightingBuildInfoObjectSets { LightingBuildInfoObjectSets_Default, LightingBuildInfoObjectSets_MAX, __typeKeyDoNoAccess}
    enum ELightMapPaddingType { LMPT_NormalPadding, LMPT_PrePadding, LMPT_NoPadding, LMPT_MAX, __typeKeyDoNoAccess}
    enum EListItemAlignment { EvenlyDistributed, EvenlySize, EvenlyWide, LeftAligned, RightAligned, CenterAligned, Fill, EListItemAlignment_MAX, __typeKeyDoNoAccess}
    enum ELiveCodingStartupMode { Automatic, AutomaticButHidden, Manual, ELiveCodingStartupMode_MAX, __typeKeyDoNoAccess}
    enum ELiveLinkCameraProjectionMode { Perspective, Orthographic, ELiveLinkCameraProjectionMode_MAX, __typeKeyDoNoAccess}
    enum ELiveLinkSourceMode { Latest, EngineTime, Timecode, ELiveLinkSourceMode_MAX, __typeKeyDoNoAccess}
    class EllipseSplineGenerator extends UE.SplineGeneratorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberOfPoints: number;
        Length: number;
        Width: number;
        bReverseDir: boolean;
        bKeepFirstKeyTangent: boolean;
        bBranchRight: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EllipseSplineGenerator;
        static Load(InName: string): EllipseSplineGenerator;
    
        __tid_EllipseSplineGenerator_0__: boolean;
    }
    
    enum ELocalizationGatherPathRoot { Auto, Engine, Project, ELocalizationGatherPathRoot_MAX, __typeKeyDoNoAccess}
    enum ELocalizationTargetConflictStatus { Unknown, ConflictsPresent, Clear, ELocalizationTargetConflictStatus_MAX, __typeKeyDoNoAccess}
    enum ELocalizationTargetLoadingPolicy { Never, Always, Editor, Game, PropertyNames, ToolTips, ELocalizationTargetLoadingPolicy_MAX, __typeKeyDoNoAccess}
    enum ELocalizedTextCollapseMode { IdenticalTextIdAndSource, IdenticalPackageIdTextIdAndSource, IdenticalNamespaceAndSource, ELocalizedTextCollapseMode_MAX, __typeKeyDoNoAccess}
    enum ELocalizedTextSourceCategory { Game, Engine, Editor, ELocalizedTextSourceCategory_MAX, __typeKeyDoNoAccess}
    enum ELocationAccuracy { LA_ThreeKilometers, LA_OneKilometer, LA_HundredMeters, LA_TenMeters, LA_Best, LA_Navigation, LA_MAX, __typeKeyDoNoAccess}
    enum ELocationBoneSocketSelectionMethod { BONESOCKETSEL_Sequential, BONESOCKETSEL_Random, BONESOCKETSEL_MAX, __typeKeyDoNoAccess}
    enum ELocationBoneSocketSource { BONESOCKETSOURCE_Bones, BONESOCKETSOURCE_Sockets, BONESOCKETSOURCE_MAX, __typeKeyDoNoAccess}
    enum ELocationEmitterSelectionMethod { ELESM_Random, ELESM_Sequential, ELESM_MAX, __typeKeyDoNoAccess}
    enum ELocationFilteringModeEnum { ChaosNiagara_LocationFilteringMode_Inclusive, ChaosNiagara_LocationFilteringMode_Exclusive, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum ELocationSkelVertSurfaceSource { VERTSURFACESOURCE_Vert, VERTSURFACESOURCE_Surface, VERTSURFACESOURCE_MAX, __typeKeyDoNoAccess}
    enum ELocationXToSpawnEnum { ChaosNiagara_LocationXToSpawn_None, ChaosNiagara_LocationXToSpawn_Min, ChaosNiagara_LocationXToSpawn_Max, ChaosNiagara_LocationXToSpawn_MinMax, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum ELocationYToSpawnEnum { ChaosNiagara_LocationYToSpawn_None, ChaosNiagara_LocationYToSpawn_Min, ChaosNiagara_LocationYToSpawn_Max, ChaosNiagara_LocationYToSpawn_MinMax, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum ELocationZToSpawnEnum { ChaosNiagara_LocationZToSpawn_None, ChaosNiagara_LocationZToSpawn_Min, ChaosNiagara_LocationZToSpawn_Max, ChaosNiagara_LocationZToSpawn_MinMax, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum ELocTextPlatformSplitMode { None, Confidential, All, ELocTextPlatformSplitMode_MAX, __typeKeyDoNoAccess}
    enum ELoudnessNRTCurveTypeEnum { A, B, C, D, None, ELoudnessNRTCurveTypeEnum_MAX, __typeKeyDoNoAccess}
    enum ELuminARLineTraceChannel { None, FeaturePoint, InfinitePlane, PlaneUsingExtent, PlaneUsingBoundaryPolygon, FeaturePointWithSurfaceNormal, ELuminARLineTraceChannel_MAX, __typeKeyDoNoAccess}
    enum ELuminARTrackingState { Tracking, NotTracking, StoppedTracking, ELuminARTrackingState_MAX, __typeKeyDoNoAccess}
    enum ELuminComponentSubElementType { FileExtension, MimeType, Mode, MusicAttribute, Schema, ELuminComponentSubElementType_MAX, __typeKeyDoNoAccess}
    enum ELuminComponentType { Universe, Fullscreen, SearchProvider, MusicService, Console, SystemUI, ELuminComponentType_MAX, __typeKeyDoNoAccess}
    enum ELuminFrameTimingHint { Unspecified, Maximum, FPS_60, FPS_120, ELuminFrameTimingHint_MAX, __typeKeyDoNoAccess}
    enum ELuminPrivilege { Invalid, BatteryInfo, CameraCapture, ComputerVision, WorldReconstruction, InAppPurchase, AudioCaptureMic, DrmCertificates, Occlusion, LowLatencyLightwear, Internet, IdentityRead, BackgroundDownload, BackgroundUpload, MediaDrm, Media, MediaMetadata, PowerInfo, LocalAreaNetwork, VoiceInput, Documents, ConnectBackgroundMusicService, RegisterBackgroundMusicService, PcfRead, PwFoundObjRead, NormalNotificationsUsage, MusicService, ControllerPose, GesturesSubscribe, GesturesConfig, AddressBookRead, AddressBookWrite, AddressBookBasicAccess, CoarseLocation, FineLocation, HandMesh, WifiStatusRead, SocialConnectionsInvitesAccess, SocialConnectionsSelectAccess, SecureBrowserWindow, BluetoothAdapterExternalApp, BluetoothAdapterUser, BluetoothGattWrite, ELuminPrivilege_MAX, __typeKeyDoNoAccess}
    enum EMacMetalShaderStandard { MacMetalSLStandard_2_0, MacMetalSLStandard_2_1, MacMetalSLStandard_2_MAX, __typeKeyDoNoAccess}
    enum EMacTargetArchitecture { MacTargetArchitectureIntel, MacTargetArchitectureUniversal, MacTargetArchitectureAppleSil, EMacTargetArchitecture_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapARPinType { SingleUserSingleSession, SingleUserMultiSession, MultiUserMultiSession, EMagicLeapARPinType_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapAutoPinType { OnlyOnDataRestoration, Always, Never, EMagicLeapAutoPinType_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerHapticIntensity { Low, Medium, High, EMagicLeapControllerHapticIntensity_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerHapticPattern { None, Click, Bump, DoubleClick, Buzz, Tick, ForceDown, ForceUp, ForceDwell, SecondForceDown, EMagicLeapControllerHapticPattern_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerLEDColor { BrightMissionRed, PastelMissionRed, BrightFloridaOrange, PastelFloridaOrange, BrightLunaYellow, PastelLunaYellow, BrightNebulaPink, PastelNebulaPink, BrightCosmicPurple, PastelCosmicPurple, BrightMysticBlue, PastelMysticBlue, BrightCelestialBlue, PastelCelestialBlue, BrightShaggleGreen, PastelShaggleGreen, EMagicLeapControllerLEDColor_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerLEDEffect { RotateCW, RotateCCW, Pulse, PaintCW, PaintCCW, Blink, EMagicLeapControllerLEDEffect_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerLEDPattern { None, Clock01, Clock02, Clock03, Clock04, Clock05, Clock06, Clock07, Clock08, Clock09, Clock10, Clock11, Clock12, Clock01_07, Clock02_08, Clock03_09, Clock04_10, Clock05_11, Clock06_12, EMagicLeapControllerLEDPattern_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerLEDSpeed { Slow, Medium, Fast, EMagicLeapControllerLEDSpeed_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerTrackingMode { InputService, CoordinateFrameUID, EMagicLeapControllerTrackingMode_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapControllerType { None, Device, MobileApp, EMagicLeapControllerType_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapEyeTrackingCalibrationStatus { None, Bad, Good, EMagicLeapEyeTrackingCalibrationStatus_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapEyeTrackingStatus { NotConnected, Disabled, UserNotPresent, UserPresent, UserPresentAndWatchingWindow, EMagicLeapEyeTrackingStatus_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapGestureTransformSpace { World, Hand, Tracking, EMagicLeapGestureTransformSpace_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapHandTrackingGesture { Finger, Fist, Pinch, Thumb, L, OpenHand, OpenHandBack, Ok, C, NoPose, NoHand, EMagicLeapHandTrackingGesture_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapHandTrackingGestureFilterLevel { NoFilter, SlightRobustnessToFlicker, MoreRobustnessToFlicker, EMagicLeapHandTrackingGestureFilterLevel_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapHandTrackingKeypoint { Thumb_Tip, Thumb_IP, Thumb_MCP, Thumb_CMC, Index_Tip, Index_DIP, Index_PIP, Index_MCP, Middle_Tip, Middle_DIP, Middle_PIP, Middle_MCP, Ring_Tip, Ring_DIP, Ring_PIP, Ring_MCP, Pinky_Tip, Pinky_DIP, Pinky_PIP, Pinky_MCP, Wrist_Center, Wrist_Ulnar, Wrist_Radial, Hand_Center, EMagicLeapHandTrackingKeypoint_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapHandTrackingKeypointFilterLevel { NoFilter, SimpleSmoothing, PredictiveSmoothing, EMagicLeapHandTrackingKeypointFilterLevel_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapHeadTrackingError { None, NotEnoughFeatures, LowLight, Unknown, EMagicLeapHeadTrackingError_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapHeadTrackingMapEvent { Lost, Recovered, RecoveryFailed, NewSession, EMagicLeapHeadTrackingMapEvent_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapHeadTrackingMode { PositionAndOrientation, Unavailable, Unknown, EMagicLeapHeadTrackingMode_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapIdentityError { Ok, InvalidParam, AllocFailed, PrivilegeDenied, FailedToConnectToLocalService, FailedToConnectToCloudService, CloudAuthentication, InvalidInformationFromCloud, NotLoggedIn, ExpiredCredentials, FailedToGetUserProfile, Unauthorized, CertificateError, RejectedByCloud, AlreadyLoggedIn, ModifyIsNotSupported, NetworkError, UnspecifiedFailure, EMagicLeapIdentityError_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapIdentityKey { GivenName, FamilyName, Email, Bio, PhoneNumber, Avatar2D, Avatar3D, Unknown, EMagicLeapIdentityKey_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapImageTargetOrientation { ForwardAxisAsNormal, UpAxisAsNormal, EMagicLeapImageTargetOrientation_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapImageTargetStatus { Tracked, Unreliable, NotTracked, EMagicLeapImageTargetStatus_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapLightEstimationCamera { Left, Right, FarLeft, FarRight, EMagicLeapLightEstimationCamera_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapMeshLOD { Minimum, Medium, Maximum, EMagicLeapMeshLOD_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapMeshState { New, Updated, Deleted, Unchanged, EMagicLeapMeshState_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapMeshType { Triangles, PointCloud, EMagicLeapMeshType_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapMeshVertexColorMode { None, Confidence, Block, LOD, EMagicLeapMeshVertexColorMode_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapPassableWorldError { None, LowMapQuality, UnableToLocalize, Unavailable, PrivilegeDenied, InvalidParam, UnspecifiedFailure, PrivilegeRequestPending, StartupPending, SharedWorldNotEnabled, NotImplemented, PinNotFound, EMagicLeapPassableWorldError_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapPlaneQueryFlags { Vertical, Horizontal, Arbitrary, OrientToGravity, PreferInner, Ceiling, Floor, Wall, Polygons, EMagicLeapPlaneQueryFlags_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapPlaneQueryType { Bulk, Delta, EMagicLeapPlaneQueryType_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapPrivilege { Invalid, BatteryInfo, CameraCapture, ComputerVision, WorldReconstruction, InAppPurchase, AudioCaptureMic, DrmCertificates, Occlusion, LowLatencyLightwear, Internet, IdentityRead, BackgroundDownload, BackgroundUpload, MediaDrm, Media, MediaMetadata, PowerInfo, LocalAreaNetwork, VoiceInput, Documents, ConnectBackgroundMusicService, RegisterBackgroundMusicService, PcfRead, PwFoundObjRead, NormalNotificationsUsage, MusicService, ControllerPose, GesturesSubscribe, GesturesConfig, AddressBookRead, AddressBookWrite, AddressBookBasicAccess, CoarseLocation, FineLocation, HandMesh, WifiStatusRead, SocialConnectionsInvitesAccess, SecureBrowserWindow, EMagicLeapPrivilege_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapRaycastResultState { RequestFailed, NoCollision, HitUnobserved, HitObserved, EMagicLeapRaycastResultState_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapTouchpadGestureDirection { None, Up, Down, Left, Right, In, Out, Clockwise, CounterClockwise, EMagicLeapTouchpadGestureDirection_MAX, __typeKeyDoNoAccess}
    enum EMagicLeapTouchpadGestureType { None, Tap, ForceTapDown, ForceTapUp, ForceDwell, SecondForceDown, LongHold, RadialScroll, Swipe, Scroll, Pinch, EMagicLeapTouchpadGestureType_MAX, __typeKeyDoNoAccess}
    enum EMapSetBrushFlags { MSB_BrushColor, MSB_Group, MSB_PolyFlags, MSB_BrushType, MSB_MAX, __typeKeyDoNoAccess}
    enum EMaterialAttributeBlend { Blend, UseA, UseB, EMaterialAttributeBlend_MAX, __typeKeyDoNoAccess}
    enum EMaterialBakeMethod { IndividualMaterial, AtlasMaterial, BinnedMaterial, EMaterialBakeMethod_MAX, __typeKeyDoNoAccess}
    enum EMaterialExposedTextureProperty { TMTM_TextureSize, TMTM_TexelSize, TMTM_MAX, __typeKeyDoNoAccess}
    enum EMaterialExposedViewProperty { MEVP_BufferSize, MEVP_FieldOfView, MEVP_TanHalfFieldOfView, MEVP_ViewSize, MEVP_WorldSpaceViewPosition, MEVP_WorldSpaceCameraPosition, MEVP_ViewportOffset, MEVP_TemporalSampleCount, MEVP_TemporalSampleIndex, MEVP_TemporalSampleOffset, MEVP_RuntimeVirtualTextureOutputLevel, MEVP_RuntimeVirtualTextureOutputDerivative, MEVP_PreExposure, MEVP_RuntimeVirtualTextureMaxLevel, MEVP_MAX, __typeKeyDoNoAccess}
    enum EMaterialImportMethod { CreateNewMaterials, CreateNewInstancedMaterials, DoNotCreateMaterialString, EMaterialImportMethod_MAX, __typeKeyDoNoAccess}
    enum EMaterialPositionTransformSource { TRANSFORMPOSSOURCE_Local, TRANSFORMPOSSOURCE_World, TRANSFORMPOSSOURCE_TranslatedWorld, TRANSFORMPOSSOURCE_View, TRANSFORMPOSSOURCE_Camera, TRANSFORMPOSSOURCE_Particle, TRANSFORMPOSSOURCE_MAX, __typeKeyDoNoAccess}
    enum EMaterialProperty { MP_EmissiveColor, MP_Opacity, MP_OpacityMask, MP_DiffuseColor, MP_SpecularColor, MP_BaseColor, MP_Metallic, MP_Specular, MP_Roughness, MP_Anisotropy, MP_Normal, MP_Tangent, MP_WorldPositionOffset, MP_WorldDisplacement, MP_TessellationMultiplier, MP_SubsurfaceColor, MP_CustomData0, MP_CustomData1, MP_AmbientOcclusion, MP_Refraction, MP_CustomizedUVs0, MP_CustomizedUVs1, MP_CustomizedUVs2, MP_CustomizedUVs3, MP_CustomizedUVs4, MP_CustomizedUVs5, MP_CustomizedUVs6, MP_CustomizedUVs7, MP_PixelDepthOffset, MP_ShadingModel, MP_MaterialAttributes, MP_CustomOutput, MP_MAX, __typeKeyDoNoAccess}
    enum EMaterialSamplerType { SAMPLERTYPE_Color, SAMPLERTYPE_Grayscale, SAMPLERTYPE_Alpha, SAMPLERTYPE_Normal, SAMPLERTYPE_Masks, SAMPLERTYPE_DistanceFieldFont, SAMPLERTYPE_LinearColor, SAMPLERTYPE_LinearGrayscale, SAMPLERTYPE_Data, SAMPLERTYPE_External, SAMPLERTYPE_VirtualColor, SAMPLERTYPE_VirtualGrayscale, SAMPLERTYPE_VirtualAlpha, SAMPLERTYPE_VirtualNormal, SAMPLERTYPE_VirtualMasks, SAMPLERTYPE_VirtualLinearColor, SAMPLERTYPE_VirtualLinearGrayscale, SAMPLERTYPE_MAX, __typeKeyDoNoAccess}
    enum EMaterialSceneAttributeInputMode { Coordinates, OffsetFraction, EMaterialSceneAttributeInputMode_MAX, __typeKeyDoNoAccess}
    enum EMaterialSearchLocation { Local, UnderParent, UnderRoot, AllAssets, DoNotSearch, EMaterialSearchLocation_MAX, __typeKeyDoNoAccess}
    enum EMaterialUsage { MATUSAGE_SkeletalMesh, MATUSAGE_ParticleSprites, MATUSAGE_BeamTrails, MATUSAGE_MeshParticles, MATUSAGE_StaticLighting, MATUSAGE_MorphTargets, MATUSAGE_SplineMesh, MATUSAGE_InstancedStaticMeshes, MATUSAGE_GeometryCollections, MATUSAGE_Clothing, MATUSAGE_NiagaraSprites, MATUSAGE_NiagaraRibbons, MATUSAGE_NiagaraMeshParticles, MATUSAGE_GeometryCache, MATUSAGE_Water, MATUSAGE_HairStrands, MATUSAGE_LidarPointCloud, MATUSAGE_VirtualHeightfieldMesh, MATUSAGE_MAX, __typeKeyDoNoAccess}
    enum EMaterialVectorCoordTransform { TRANSFORM_Tangent, TRANSFORM_Local, TRANSFORM_World, TRANSFORM_View, TRANSFORM_Camera, TRANSFORM_ParticleWorld, TRANSFORM_MAX, __typeKeyDoNoAccess}
    enum EMaterialVectorCoordTransformSource { TRANSFORMSOURCE_Tangent, TRANSFORMSOURCE_Local, TRANSFORMSOURCE_World, TRANSFORMSOURCE_View, TRANSFORMSOURCE_Camera, TRANSFORMSOURCE_ParticleWorld, TRANSFORMSOURCE_MAX, __typeKeyDoNoAccess}
    enum EMatrixColumns { First, Second, Third, Fourth, EMatrixColumns_MAX, __typeKeyDoNoAccess}
    enum EMeasuringToolUnits { MeasureUnits_Centimeters, MeasureUnits_Meters, MeasureUnits_Kilometers, MeasureUnits_MAX, __typeKeyDoNoAccess}
    enum EMediaAudioCaptureDeviceFilter { None, Card, Microphone, Software, Unknown, EMediaAudioCaptureDeviceFilter_MAX, __typeKeyDoNoAccess}
    enum EMediaPlayerEditorScale { Fill, Fit, Original, EMediaPlayerEditorScale_MAX, __typeKeyDoNoAccess}
    enum EMediaPlayerOptionBooleanOverride { UseMediaPlayerSetting, Enabled, Disabled, EMediaPlayerOptionBooleanOverride_MAX, __typeKeyDoNoAccess}
    enum EMediaPlayerRecordingImageFormat { PNG, JPEG, BMP, EXR, EMediaPlayerRecordingImageFormat_MAX, __typeKeyDoNoAccess}
    enum EMediaPlayerRecordingNumerationStyle { AppendFrameNumber, AppendSampleTime, EMediaPlayerRecordingNumerationStyle_MAX, __typeKeyDoNoAccess}
    enum EMediaPlayerTrack { Audio, Caption, Metadata, Script, Subtitle, Text, Video, EMediaPlayerTrack_MAX, __typeKeyDoNoAccess}
    enum EMediaSoundChannels { Mono, Stereo, Surround, EMediaSoundChannels_MAX, __typeKeyDoNoAccess}
    enum EMediaSoundComponentFFTSize { Min_64, Small_256, Medium_512, Large_1024, EMediaSoundComponentFFTSize_MAX, __typeKeyDoNoAccess}
    enum EMediaVideoCaptureDeviceFilter { None, Card, Software, Unknown, Webcam, EMediaVideoCaptureDeviceFilter_MAX, __typeKeyDoNoAccess}
    enum EMediaWebcamCaptureDeviceFilter { None, DepthSensor, Front, Rear, Unknown, EMediaWebcamCaptureDeviceFilter_MAX, __typeKeyDoNoAccess}
    enum EMenuPlacement { MenuPlacement_BelowAnchor, MenuPlacement_CenteredBelowAnchor, MenuPlacement_BelowRightAnchor, MenuPlacement_ComboBox, MenuPlacement_ComboBoxRight, MenuPlacement_MenuRight, MenuPlacement_AboveAnchor, MenuPlacement_CenteredAboveAnchor, MenuPlacement_AboveRightAnchor, MenuPlacement_MenuLeft, MenuPlacement_Center, MenuPlacement_RightLeftCenter, MenuPlacement_MatchBottomLeft, MenuPlacement_MAX, __typeKeyDoNoAccess}
    enum EMeshBufferAccess { Default, ForceCPUAndGPU, EMeshBufferAccess_MAX, __typeKeyDoNoAccess}
    enum EMeshCameraFacingOptions { XAxisFacing_NoUp, XAxisFacing_ZUp, XAxisFacing_NegativeZUp, XAxisFacing_YUp, XAxisFacing_NegativeYUp, LockedAxis_ZAxisFacing, LockedAxis_NegativeZAxisFacing, LockedAxis_YAxisFacing, LockedAxis_NegativeYAxisFacing, VelocityAligned_ZAxisFacing, VelocityAligned_NegativeZAxisFacing, VelocityAligned_YAxisFacing, VelocityAligned_NegativeYAxisFacing, EMeshCameraFacingOptions_MAX, __typeKeyDoNoAccess}
    enum EMeshCameraFacingUpAxis { CameraFacing_NoneUP, CameraFacing_ZUp, CameraFacing_NegativeZUp, CameraFacing_YUp, CameraFacing_NegativeYUp, CameraFacing_MAX, __typeKeyDoNoAccess}
    enum EMeshElementAttributeType { None, FVector4, FVector, FVector2D, Float, Int, Bool, FName, EMeshElementAttributeType_MAX, __typeKeyDoNoAccess}
    enum EMeshInstancingReplacementMethod { RemoveOriginalActors, KeepOriginalActorsAsEditorOnly, EMeshInstancingReplacementMethod_MAX, __typeKeyDoNoAccess}
    enum EMeshMergeType { MeshMergeType_Default, MeshMergeType_MergeActor, MeshMergeType_MAX, __typeKeyDoNoAccess}
    enum EMeshPaintColorView { Normal, RGB, Alpha, Red, Green, Blue, EMeshPaintColorView_MAX, __typeKeyDoNoAccess}
    enum EMeshPaintColorViewMode { Normal, RGB, Alpha, Red, Green, Blue, EMeshPaintColorViewMode_MAX, __typeKeyDoNoAccess}
    enum EMeshPaintDataColorViewMode { Normal, RGB, Alpha, Red, Green, Blue, EMeshPaintDataColorViewMode_MAX, __typeKeyDoNoAccess}
    enum EMeshPaintMode { PaintColors, PaintWeights, EMeshPaintMode_MAX, __typeKeyDoNoAccess}
    enum EMeshPaintTextureIndex { TextureOne, TextureTwo, TextureThree, TextureFour, TextureFive, EMeshPaintTextureIndex_MAX, __typeKeyDoNoAccess}
    enum EMeshPaintWeightTypes { AlphaLerp, RGB, ARGB, OneMinusARGB, EMeshPaintWeightTypes_MAX, __typeKeyDoNoAccess}
    enum EMeshScreenAlignment { PSMA_MeshFaceCameraWithRoll, PSMA_MeshFaceCameraWithSpin, PSMA_MeshFaceCameraWithLockedAxis, PSMA_MAX, __typeKeyDoNoAccess}
    enum EMeshTrackerVertexColorMode { None, Confidence, Block, EMeshTrackerVertexColorMode_MAX, __typeKeyDoNoAccess}
    enum EMeshVertexPaintModeTarget { ComponentInstance, Mesh, EMeshVertexPaintModeTarget_MAX, __typeKeyDoNoAccess}
    enum EMeshVertexPaintTarget { ComponentInstance, Mesh, EMeshVertexPaintTarget_MAX, __typeKeyDoNoAccess}
    enum EMicroTransactionDelegate { MTD_PurchaseQueryComplete, MTD_PurchaseComplete, MTD_MAX, __typeKeyDoNoAccess}
    enum EMicroTransactionResult { MTR_Succeeded, MTR_Failed, MTR_Canceled, MTR_RestoredFromServer, MTR_MAX, __typeKeyDoNoAccess}
    enum EMIDCreationFlags { None, Transient, EMIDCreationFlags_MAX, __typeKeyDoNoAccess}
    enum EMinimumSupportedOS { MSOS_Vista, MSOS_MAX, __typeKeyDoNoAccess}
    class EmitterCompiledScriptPair {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EmitterCompiledScriptPair_0__: boolean;
    }
    
    class EmitterDynamicParameter {
        constructor();
        constructor(ParamName: string, bUseEmitterTime: boolean, bSpawnTimeOnly: boolean, ValueMethod: UE.EEmitterDynamicParameterValue, bScaleVelocityByParamValue: boolean, ParamValue: UE.RawDistributionFloat);
        ParamName: string;
        bUseEmitterTime: boolean;
        bSpawnTimeOnly: boolean;
        ValueMethod: UE.EEmitterDynamicParameterValue;
        bScaleVelocityByParamValue: boolean;
        ParamValue: UE.RawDistributionFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EmitterDynamicParameter_0__: boolean;
    }
    
    enum EMobileMSAASampleCount { One, Two, Four, Eight, EMobileMSAASampleCount_MAX, __typeKeyDoNoAccess}
    enum EMobilePixelProjectedReflectionQuality { Disabled, BestPerformance, BetterQuality, BestQuality, EMobilePixelProjectedReflectionQuality_MAX, __typeKeyDoNoAccess}
    enum EMobilePlanarReflectionMode { Usual, MobilePPRExclusive, MobilePPR, EMobilePlanarReflectionMode_MAX, __typeKeyDoNoAccess}
    enum EMobileShadowQuality { NoFiltering, PCF_1x1, PCF_2x2, PCF_3x3, EMobileShadowQuality_MAX, __typeKeyDoNoAccess}
    enum EModuleType { EPMT_General, EPMT_TypeData, EPMT_Beam, EPMT_Trail, EPMT_Spawn, EPMT_Required, EPMT_Event, EPMT_Light, EPMT_SubUV, EPMT_MAX, __typeKeyDoNoAccess}
    enum EMontageSubStepResult { Moved, NotMoved, InvalidSection, InvalidMontage, EMontageSubStepResult_MAX, __typeKeyDoNoAccess}
    enum EMouseCaptureMode { NoCapture, CapturePermanently, CapturePermanently_IncludingInitialMouseDown, CaptureDuringMouseDown, CaptureDuringRightMouseDown, EMouseCaptureMode_MAX, __typeKeyDoNoAccess}
    enum EMouseLockMode { DoNotLock, LockOnCapture, LockAlways, LockInFullscreen, EMouseLockMode_MAX, __typeKeyDoNoAccess}
    enum EMoveComponentAction { Move, Stop, Return, EMoveComponentAction_MAX, __typeKeyDoNoAccess}
    enum EMoviePlaybackType { MT_Normal, MT_Looped, MT_LoadingLoop, MT_MAX, __typeKeyDoNoAccess}
    enum EMovieSceneBuiltInEasing { Linear, SinIn, SinOut, SinInOut, QuadIn, QuadOut, QuadInOut, CubicIn, CubicOut, CubicInOut, QuartIn, QuartOut, QuartInOut, QuintIn, QuintOut, QuintInOut, ExpoIn, ExpoOut, ExpoInOut, CircIn, CircOut, CircInOut, EMovieSceneBuiltInEasing_MAX, __typeKeyDoNoAccess}
    enum EMovieSceneKeyInterpolation { Auto, User, Break, Linear, Constant, EMovieSceneKeyInterpolation_MAX, __typeKeyDoNoAccess}
    enum EMPMatchOutcome { None, Quit, Won, Lost, Tied, TimeExpired, First, Second, Third, Fourth, EMPMatchOutcome_MAX, __typeKeyDoNoAccess}
    enum EMultipleKeyBindingIndex { Primary, Secondary, NumChords, EMultipleKeyBindingIndex_MAX, __typeKeyDoNoAccess}
    enum EMultiScalePivotType { Average, BoundCenter, FirstKey, LastKey, EMultiScalePivotType_MAX, __typeKeyDoNoAccess}
    enum ENavCostDisplay { TotalCost, HeuristicOnly, RealCostOnly, ENavCostDisplay_MAX, __typeKeyDoNoAccess}
    enum ENavDataGatheringMode { Default, Instant, Lazy, ENavDataGatheringMode_MAX, __typeKeyDoNoAccess}
    enum ENavDataGatheringModeConfig { Invalid, Instant, Lazy, ENavDataGatheringModeConfig_MAX, __typeKeyDoNoAccess}
    enum ENavigationGenesis { Keyboard, Controller, User, ENavigationGenesis_MAX, __typeKeyDoNoAccess}
    enum ENavigationQueryResult { Invalid, Error, Fail, Success, ENavigationQueryResult_MAX, __typeKeyDoNoAccess}
    enum ENavigationSource { FocusedWidget, WidgetUnderCursor, ENavigationSource_MAX, __typeKeyDoNoAccess}
    enum ENavLinkDirection { BothWays, LeftToRight, RightToLeft, ENavLinkDirection_MAX, __typeKeyDoNoAccess}
    enum ENavSystemOverridePolicy { Override, Append, Skip, ENavSystemOverridePolicy_MAX, __typeKeyDoNoAccess}
    enum ENCPoolMethod { None, AutoRelease, ManualRelease, ManualRelease_OnComplete, FreeInPool, ENCPoolMethod_MAX, __typeKeyDoNoAccess}
    enum ENDIExport_GPUAllocationMode { FixedSize, PerParticle, ENDIExport_MAX, __typeKeyDoNoAccess}
    enum ENDISkeletalMesh_SkinningMode { Invalid, None, SkinOnTheFly, PreSkin, ENDISkeletalMesh_MAX, __typeKeyDoNoAccess}
    enum ENDISkeletalMesh_SourceMode { Default, Source, AttachParent, ENDISkeletalMesh_MAX, __typeKeyDoNoAccess}
    enum ENDIStaticMesh_SourceMode { Default, Source, AttachParent, DefaultMeshOnly, ENDIStaticMesh_MAX, __typeKeyDoNoAccess}
    class TurnBasedMatchInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnMatchEnded(Match: string) : void;
        OnMatchReceivedTurn(Match: string, bDidBecomeActive: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TurnBasedMatchInterface;
        static Load(InName: string): TurnBasedMatchInterface;
    
        __tid_TurnBasedMatchInterface_0__: boolean;
    }
    
    class EndMatchCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<() => void>;
        OnFailure: $MulticastDelegate<() => void>;
        static EndMatch(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MatchActor: TurnBasedMatchInterface, MatchID: string, LocalPlayerOutcome: UE.EMPMatchOutcome, OtherPlayersOutcome: UE.EMPMatchOutcome) : UE.EndMatchCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EndMatchCallbackProxy;
        static Load(InName: string): EndMatchCallbackProxy;
    
        __tid_EndMatchCallbackProxy_0__: boolean;
    }
    
    class EndPhysicsTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EndPhysicsTickFunction_0__: boolean;
    }
    
    class EndpointSubmix extends UE.SoundSubmixBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EndpointType: string;
        EndpointSettingsClass: UE.Class;
        EndpointSettings: UE.AudioEndpointSettingsBase;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EndpointSubmix;
        static Load(InName: string): EndpointSubmix;
    
        __tid_EndpointSubmix_0__: boolean;
    }
    
    class EndpointSubmixFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EndpointSubmixFactory;
        static Load(InName: string): EndpointSubmixFactory;
    
        __tid_EndpointSubmixFactory_0__: boolean;
    }
    
    class EndTurnCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<() => void>;
        OnFailure: $MulticastDelegate<() => void>;
        static EndTurn(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MatchID: string, TurnBasedMatchInterface: TurnBasedMatchInterface) : UE.EndTurnCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EndTurnCallbackProxy;
        static Load(InName: string): EndTurnCallbackProxy;
    
        __tid_EndTurnCallbackProxy_0__: boolean;
    }
    
    enum ENetworkLagState { NotLagging, Lagging, ENetworkLagState_MAX, __typeKeyDoNoAccess}
    class EngineBaseTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EngineBaseTypes;
        static Load(InName: string): EngineBaseTypes;
    
        __tid_EngineBaseTypes_0__: boolean;
    }
    
    class HandlerComponentFactory extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HandlerComponentFactory;
        static Load(InName: string): HandlerComponentFactory;
    
        __tid_HandlerComponentFactory_0__: boolean;
    }
    
    class EngineHandlerComponentFactory extends UE.HandlerComponentFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EngineHandlerComponentFactory;
        static Load(InName: string): EngineHandlerComponentFactory;
    
        __tid_EngineHandlerComponentFactory_0__: boolean;
    }
    
    class LocalMessage extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalMessage;
        static Load(InName: string): LocalMessage;
    
        __tid_LocalMessage_0__: boolean;
    }
    
    class EngineMessage extends UE.LocalMessage {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FailedPlaceMessage: string;
        MaxedOutMessage: string;
        EnteredMessage: string;
        LeftMessage: string;
        GlobalNameChange: string;
        SpecEnteredMessage: string;
        NewPlayerMessage: string;
        NewSpecMessage: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EngineMessage;
        static Load(InName: string): EngineMessage;
    
        __tid_EngineMessage_0__: boolean;
    }
    
    class EngineServiceAuthDeny {
        constructor();
        constructor(UserName: string, UserToDeny: string);
        UserName: string;
        UserToDeny: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineServiceAuthDeny_0__: boolean;
    }
    
    class EngineServiceAuthGrant {
        constructor();
        constructor(UserName: string, UserToGrant: string);
        UserName: string;
        UserToGrant: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineServiceAuthGrant_0__: boolean;
    }
    
    class EngineServiceExecuteCommand {
        constructor();
        constructor(Command: string, UserName: string);
        Command: string;
        UserName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineServiceExecuteCommand_0__: boolean;
    }
    
    class EngineServiceNotification {
        constructor();
        constructor(Text: string, TimeSeconds: number);
        Text: string;
        TimeSeconds: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineServiceNotification_0__: boolean;
    }
    
    class EngineServicePing {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineServicePing_0__: boolean;
    }
    
    class EngineServicePong {
        constructor();
        constructor(CurrentLevel: string, EngineVersion: number, HasBegunPlay: boolean, InstanceId: UE.Guid, InstanceType: string, SessionId: UE.Guid, WorldTimeSeconds: number);
        CurrentLevel: string;
        EngineVersion: number;
        HasBegunPlay: boolean;
        InstanceId: UE.Guid;
        InstanceType: string;
        SessionId: UE.Guid;
        WorldTimeSeconds: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineServicePong_0__: boolean;
    }
    
    class EngineServiceTerminate {
        constructor();
        constructor(UserName: string);
        UserName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineServiceTerminate_0__: boolean;
    }
    
    class EngineShowFlagsSetting {
        constructor();
        constructor(ShowFlagName: string, Enabled: boolean);
        ShowFlagName: string;
        Enabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EngineShowFlagsSetting_0__: boolean;
    }
    
    class EngineTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EngineTypes;
        static Load(InName: string): EngineTypes;
    
        __tid_EngineTypes_0__: boolean;
    }
    
    namespace Niagara.Enums.ENiagara_AudioParamType {
        enum ENiagara_AudioParamType { Volume, Pitch, Location, Rotation, "Boolean Parameter", "Float Parameter", "Integer Parameter", "Paused State", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_BankOnTurns {
        enum ENiagara_BankOnTurns { "Add Local Banking Rotation", "Full Orientation Update", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_CameraMeshOrientation {
        enum ENiagara_CameraMeshOrientation { "Camera Position", "Camera Plane", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_CameraProperties {
        enum ENiagara_CameraProperties { "Camera Position", "Camera Forward Vector", "Camera Up Vector", "Camera Right Vector", "Vector To Camera", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_CollisionType {
        enum ENiagara_CollisionType { "GPU Depth Buffer", "GPU Distance Fields", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_ColorInitializationMode {
        enum ENiagara_ColorInitializationMode { Unset, "Direct Set", "Random Range", "Random Hue/Saturation/Value", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_CPUCollisionType {
        enum ENiagara_CPUCollisionType { "Ray Traced", "Analytical Planes", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_DirectReadApplicationMode {
        enum ENiagara_DirectReadApplicationMode { Overwrite, Add, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_DirectReadParticleIDSampling {
        enum ENiagara_DirectReadParticleIDSampling { Disabled, "Apply Sampled ID as Ribbon ID", "Output Only", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_DirectReadSamplingMode {
        enum ENiagara_DirectReadSamplingMode { Disabled, "Apply to Attribute", "Output Only", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_EmitterLocSamplingMode {
        enum ENiagara_EmitterLocSamplingMode { Random, Sequential, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_EmitterStateOptions {
        enum ENiagara_EmitterStateOptions { Infinite, Once, Multiple, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_FadeOperationType {
        enum ENiagara_FadeOperationType { Linear, Percentage, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_Float4Channel {
        enum ENiagara_Float4Channel { R, G, B, A, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_GPUCollisionType {
        enum ENiagara_GPUCollisionType { "GPU Depth Buffer", "GPU Distance Fields", "Analytical Planes", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_IDAttributes {
        enum ENiagara_IDAttributes { "Particles.UniqueID", "Particles.ID Index", "Particles.ID Acquire Tag", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_InfiniteLoopDuration {
        enum ENiagara_InfiniteLoopDuration { Fixed, Infinite, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_LifetimeInheritanceOptions {
        enum ENiagara_LifetimeInheritanceOptions { Min, Max, Overwrite, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_LifetimeMode {
        enum ENiagara_LifetimeMode { "Direct Set", Random, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_MassInitializationMode {
        enum ENiagara_MassInitializationMode { "Unset / (Mass of 1)", "Direct Set", Random, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_MultipleLerpCount {
        enum ENiagara_MultipleLerpCount { ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_PositionInitializationMode {
        enum ENiagara_PositionInitializationMode { Unset, "Direct Set", "Simulation Position", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_RotationDefinitionApproach {
        enum ENiagara_RotationDefinitionApproach { Euler, Quaternion, "Axis Angle ", "Basis Vectors", Matrix, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_SizeScaleMode {
        enum ENiagara_SizeScaleMode { Unset, Uniform, "Random Uniform", "Non-Uniform", "Random Non-Uniform", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_SpawnBurstMode {
        enum ENiagara_SpawnBurstMode { Timed, Manual, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_SpriteRotationMode {
        enum ENiagara_SpriteRotationMode { Unset, Random, "Direct Angle (Degrees)", "Direct Normalized Angle (0-1)", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_SubUVLookupMode {
        enum ENiagara_SubUVLookupMode { Linear, Curve, Random, Infinite, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_TransformBaseOptions {
        enum ENiagara_TransformBaseOptions { "Transform Vector", "Transform Position", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_TransformMode {
        enum ENiagara_TransformMode { Manual, Matrix, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_TransformOrientationMode {
        enum ENiagara_TransformOrientationMode { "Yaw/Pitch/Roll", Quaternion, Matrix, "Basis Vectors", ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagara_UVFlippingMode {
        enum ENiagara_UVFlippingMode { Unset, "Random X", "Random Y", "Random X / Y", Custom, ENiagara_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraAnimTrailWidthMode {
        enum ENiagaraAnimTrailWidthMode { Auto, Manual, ENiagaraAnimTrailWidthMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraArraySamplingMode {
        enum ENiagaraArraySamplingMode { Random, Direct, Interpolate, ENiagaraArraySamplingMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraBindingSource { ImplicitFromSource, ExplicitParticles, ExplicitEmitter, ExplicitSystem, ExplicitUser, MaxBindingSource, ENiagaraBindingSource_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraBoneSamplingMode {
        enum ENiagaraBoneSamplingMode { "Random (Filtered Bones)", "Random (Unfiltered Bones)", "Random (All Bones)", "Direct (Filtered Bones)", "Direct (Unfiltered Bones)", "Direct (All Bones)", ENiagaraBoneSamplingMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraBoneSocketSamplingMode {
        enum ENiagaraBoneSocketSamplingMode { "Random (Filtered Bone or Sockets)", "Direct (Filtered Bone or Sockets)", ENiagaraBoneSocketSamplingMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraBooleanLogicOps {
        enum ENiagaraBooleanLogicOps { "Greater Than", "Greater Than Or Equal To", "Equal To", "Not Equal To", ENiagaraBooleanLogicOps_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraBooleanLogicOps_v2 {
        enum ENiagaraBooleanLogicOps_v2 { "A Greater Than B", "A Greater Than Or Equal To B", "A Equal To B", "A Not Equal To B", "A Less Than B", "A Less Than Or Equal To B", ENiagaraBooleanLogicOps_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraCalculateRadiusOptions {
        enum ENiagaraCalculateRadiusOptions { Bounds, "Minimum Axis", "Maximum Axis", ENiagaraCalculateRadiusOptions_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraChannelCorrelation {
        enum ENiagaraChannelCorrelation { "Link RGBA", "Link RGB / Link A", "Random Individual Channels", ENiagaraChannelCorrelation_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraClipboardFunctionInputValueMode { Local, Linked, Data, Expression, Dynamic, ENiagaraClipboardFunctionInputValueMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraClipboardFunctionScriptMode { ScriptAsset, Assignment, ENiagaraClipboardFunctionScriptMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraCollisionMode { None, SceneGeometry, DepthBuffer, DistanceField, ENiagaraCollisionMode_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraCollisionRadiusOptions {
        enum ENiagaraCollisionRadiusOptions { Sprite, Mesh, Custom, ENiagaraCollisionRadiusOptions_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraCompileUsageStaticSwitch { Spawn, Update, Event, SimulationStage, Default, ENiagaraCompileUsageStaticSwitch_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraCoordinateSpace {
        enum ENiagaraCoordinateSpace { Simulation, World, Local, ENiagaraCoordinateSpace_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraCurlNoiseQuality {
        enum ENiagaraCurlNoiseQuality { "Baked (Low)", "Baked (Medium)", "Baked (High)", "Evaluated (Ultra)", ENiagaraCurlNoiseQuality_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraDataSetAccessMode { AppendConsume, Direct, Num, ENiagaraDataSetAccessMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraDefaultMode { Value, Binding, Custom, ENiagaraDefaultMode_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraEmitterLifeCycleMode {
        enum ENiagaraEmitterLifeCycleMode { System, Self, ENiagaraEmitterLifeCycleMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraEmitterScalabilityMode {
        enum ENiagaraEmitterScalabilityMode { System, Self, None, ENiagaraEmitterScalabilityMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraEmitterScalabilityMode_Limited {
        enum ENiagaraEmitterScalabilityMode_Limited { System, Self, ENiagaraEmitterScalabilityMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraExecutionState { Active, Inactive, InactiveClear, Complete, Disabled, Num, ENiagaraExecutionState_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraExecutionStateManagement {
        enum ENiagaraExecutionStateManagement { Awaken, "Sleep and Let Particles Finish", "Sleep and Clear Particles", "Kill Immediately", "Kill After Particles Finish", ENiagaraExecutionStateManagement_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraExecutionStateSource { Scalability, Internal, Owner, InternalCompletion, ENiagaraExecutionStateSource_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraExpansionMode {
        enum ENiagaraExpansionMode { Inside, Centered, Outside, ENiagaraExpansionMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraFrictionMergeType {
        enum ENiagaraFrictionMergeType { Ignore, Average, Min, Max, ENiagaraFrictionMergeType_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraGpuBufferFormat { Float, HalfFloat, UnsignedNormalizedByte, Max, ENiagaraGpuBufferFormat_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraGPUDepthResponseType {
        enum ENiagaraGPUDepthResponseType { Kill, Bounce, ENiagaraGPUDepthResponseType_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraGridPlacementType {
        enum ENiagaraGridPlacementType { "Padding Per Cell ", "Bounding Box Size", ENiagaraGridPlacementType_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraInactiveMode {
        enum ENiagaraInactiveMode { "Complete (Let Particles Finish then Kill Emitter)", "Kill (Emitter and Particles Die Immediately)", "Continue (Emitter Deactivates But Doesn't Die Until System Does)", ENiagaraInactiveMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraInputNodeUsage { Undefined, Parameter, Attribute, SystemConstant, TranslatorConstant, RapidIterationParameter, ENiagaraInputNodeUsage_MAX, __typeKeyDoNoAccess}
    enum ENiagaraIterationSource { Particles, DataInterface, ENiagaraIterationSource_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraKillVolumeOptions {
        enum ENiagaraKillVolumeOptions { Sphere, Box, Plane, Slab, Cone, ENiagaraKillVolumeOptions_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraLegacyTrailWidthMode { FromCentre, FromFirst, FromSecond, ENiagaraLegacyTrailWidthMode_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraLinearColor_Channels {
        enum ENiagaraLinearColor_Channels { R, G, B, A, ENiagaraLinearColor_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraMassByVolume {
        enum ENiagaraMassByVolume { Rock, Steel, Wood, Water, Paper, Styrofoam, ENiagaraMassByVolume_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraMassCalculationForRendererTypes {
        enum ENiagaraMassCalculationForRendererTypes { Sprite, Mesh, Ribbon, ENiagaraMassCalculationForRendererTypes_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraMeshFacingMode { Default, Velocity, CameraPosition, CameraPlane, ENiagaraMeshFacingMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraMeshLockedAxisSpace { Simulation, World, Local, ENiagaraMeshLockedAxisSpace_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraMeshOrSprite {
        enum ENiagaraMeshOrSprite { Sprite, Mesh, ENiagaraMeshOrSprite_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraMeshPivotOffsetSpace { Mesh, Simulation, World, Local, ENiagaraMeshPivotOffsetSpace_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraMeshSamplingMode {
        enum ENiagaraMeshSamplingMode { Random, Direct, ENiagaraMeshSamplingMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraMeshSurfaceSamplingMode {
        enum ENiagaraMeshSurfaceSamplingMode { Triangles, Vertices, ENiagaraMeshSurfaceSamplingMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraMeshTransforms {
        enum ENiagaraMeshTransforms { Simulation, World, Local, Mesh, ENiagaraMeshTransforms_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraMessageSeverity { CriticalError, Error, PerformanceWarning, Warning, Info, ENiagaraMessageSeverity_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraMinOrMax {
        enum ENiagaraMinOrMax { Min, Max, ENiagaraMinOrMax_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraNamespaceMetadataOptions { HideInScript, HideInSystem, AdvancedInScript, AdvancedInSystem, PreventEditingNamespace, PreventEditingNamespaceModifier, PreventEditingName, PreventCreatingInSystemEditor, ENiagaraNamespaceMetadataOptions_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraNumericVariableTypes {
        enum ENiagaraNumericVariableTypes { Float, "Vector 2D", "Vector 3D", "Vector 4D", "Linear Color", Quaternion, ENiagaraNumericVariableTypes_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraOrientationAxis {
        enum ENiagaraOrientationAxis { "X Axis", "Y Axis", "Z Axis", ENiagaraOrientationAxis_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraParameterPanelCategory { Input, Attributes, Output, Local, User, Engine, Owner, System, Emitter, Particles, ScriptTransient, StaticSwitch, None, Num, ENiagaraParameterPanelCategory_MAX, __typeKeyDoNoAccess}
    enum ENiagaraParameterScope { Input, User, Engine, Owner, System, Emitter, Particles, ScriptPersistent, ScriptTransient, Local, Custom, DISPLAY_ONLY_StaticSwitch, Output, None, Num, ENiagaraParameterScope_MAX, __typeKeyDoNoAccess}
    enum ENiagaraPlatformSelectionState { Default, Enabled, Disabled, ENiagaraPlatformSelectionState_MAX, __typeKeyDoNoAccess}
    enum ENiagaraPlatformSetState { Disabled, Enabled, Active, Unknown, ENiagaraPlatformSetState_MAX, __typeKeyDoNoAccess}
    enum ENiagaraPreviewGridResetMode { Never, Individual, All, ENiagaraPreviewGridResetMode_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraQuaternionDerivationTechnique {
        enum ENiagaraQuaternionDerivationTechnique { "X Vector", "X And Y Vectors", "X And Z Vectors", ENiagaraQuaternionDerivationTechnique_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraRandomnessEvaluation {
        enum ENiagaraRandomnessEvaluation { "Spawn Only", "Every Frame", ENiagaraRandomnessEvaluation_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraRandomnessMode {
        enum ENiagaraRandomnessMode { "Simulation Defaults", Determinisitic, "Non-Deterministic", ENiagaraRandomnessMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraRendererSourceDataMode { Particles, Emitter, ENiagaraRendererSourceDataMode_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraRestitutionMergeType {
        enum ENiagaraRestitutionMergeType { Ignore, Min, Max, Average, ENiagaraRestitutionMergeType_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraRibbonAgeOffsetMode { Scale, Clip, ENiagaraRibbonAgeOffsetMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraRibbonDrawDirection { FrontToBack, BackToFront, ENiagaraRibbonDrawDirection_MAX, __typeKeyDoNoAccess}
    enum ENiagaraRibbonFacingMode { Screen, Custom, CustomSideVector, ENiagaraRibbonFacingMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraRibbonTessellationMode { Automatic, Custom, Disabled, ENiagaraRibbonTessellationMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraRibbonUVDistributionMode { ScaledUniformly, ScaledUsingRibbonSegmentLength, TiledOverRibbonLength, ENiagaraRibbonUVDistributionMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraRibbonUVEdgeMode { SmoothTransition, Locked, ENiagaraRibbonUVEdgeMode_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraScaleColorMode {
        enum ENiagaraScaleColorMode { "RGB and Alpha Separately", "RGBA Together", ENiagaraScaleColorMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraScriptContextStaticSwitch { System, Emitter, Particle, ENiagaraScriptContextStaticSwitch_MAX, __typeKeyDoNoAccess}
    enum ENiagaraScriptGroup { Particle, Emitter, System, Max, ENiagaraScriptGroup_MAX, __typeKeyDoNoAccess}
    enum ENiagaraScriptParameterUsage { Input, Output, Local, InputOutput, InitialValueInput, None, Num, ENiagaraScriptParameterUsage_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraSimulationTarget {
        enum ENiagaraSimulationTarget { "CPU Sim", "GPUCompute Sim", ENiagaraSimulationTarget_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraSkeletalSpawning {
        enum ENiagaraSkeletalSpawning { Bones, Sockets, "Bones and Sockets", ENiagaraSkeletalSpawning_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraSkelSamplingFilteringMode {
        enum ENiagaraSkelSamplingFilteringMode { All, Filtered, Unfiltered, ENiagaraSkelSamplingFilteringMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraSkelSamplingModeFull {
        enum ENiagaraSkelSamplingModeFull { "Skeleton (Bones)", "Skeleton (Sockets)", "Skeleton (Bones and Sockets)", "Surface (Triangles)", "Surface (Vertices)", ENiagaraSkelSamplingModeFull_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraSocketSamplingMode {
        enum ENiagaraSocketSamplingMode { "Random (Filtered Sockets)", "Direct (Filtered Sockets)", ENiagaraSocketSamplingMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraSortMode { None, ViewDepth, ViewDistance, CustomAscending, CustomDecending, ENiagaraSortMode_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraSphereDistributionMode {
        enum ENiagaraSphereDistributionMode { Random, Direct, Uniform, ENiagaraSphereDistributionMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraSpriteAlignment { Unaligned, VelocityAligned, CustomAlignment, ENiagaraSpriteAlignment_MAX, __typeKeyDoNoAccess}
    enum ENiagaraSpriteFacingMode { FaceCamera, FaceCameraPlane, CustomFacingVector, FaceCameraPosition, FaceCameraDistanceBlend, ENiagaraSpriteFacingMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraStatDisplayMode { Percent, Absolute, ENiagaraStatDisplayMode_MAX, __typeKeyDoNoAccess}
    enum ENiagaraStatEvaluationType { Average, Maximum, ENiagaraStatEvaluationType_MAX, __typeKeyDoNoAccess}
    enum ENiagaraStaticSwitchType { Bool, Integer, Enum, ENiagaraStaticSwitchType_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraSUbUVAnimationMode {
        enum ENiagaraSUbUVAnimationMode { Linear, Random, ENiagaraSUbUVAnimationMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraSystemInactiveMode {
        enum ENiagaraSystemInactiveMode { "Complete (Let Emitters Finish then Kill The System)", "Kill (System and Emitters Die Immediately)", ENiagaraSystemInactiveMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENiagaraSystemSpawnSectionEndBehavior { SetSystemInactive, Deactivate, None, ENiagaraSystemSpawnSectionEndBehavior_MAX, __typeKeyDoNoAccess}
    enum ENiagaraSystemSpawnSectionEvaluateBehavior { ActivateIfInactive, None, ENiagaraSystemSpawnSectionEvaluateBehavior_MAX, __typeKeyDoNoAccess}
    enum ENiagaraSystemSpawnSectionStartBehavior { Activate, ENiagaraSystemSpawnSectionStartBehavior_MAX, __typeKeyDoNoAccess}
    namespace Niagara.Enums.ENiagaraTorusDistributionMode {
        enum ENiagaraTorusDistributionMode { Random, Direct, ENiagaraTorusDistributionMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraTorusMode {
        enum ENiagaraTorusMode { Torus, TorusKnot, Ring, ENiagaraTorusMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraTriangleSamplingMode {
        enum ENiagaraTriangleSamplingMode { "Random (All Triangles)", "Random (Sampling Regions)", "Direct (All Triangles)", "Direct (Sampling Regions)", ENiagaraTriangleSamplingMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraVector2_Channels {
        enum ENiagaraVector2_Channels { X, Y, ENiagaraVector2_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraVector3_Channels {
        enum ENiagaraVector3_Channels { X, Y, Z, ENiagaraVector3_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraVector4_Channels {
        enum ENiagaraVector4_Channels { X, Y, Z, W, ENiagaraVector4_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraVertexFilteringMode {
        enum ENiagaraVertexFilteringMode { All, Filtered, ENiagaraVertexFilteringMode_MAX, __typeKeyDoNoAccess}
    }

    namespace Niagara.Enums.ENiagaraVertexSamplingMode {
        enum ENiagaraVertexSamplingMode { "Random (All Vertices)", "Random (Sampling Regions)", "Direct (All Vertices)", "Direct (Sampling Regions)", ENiagaraVertexSamplingMode_MAX, __typeKeyDoNoAccess}
    }

    enum ENodeTitleType { FullTitle, ListView, EditableTitle, MenuTitle, MAX_TitleTypes, ENodeTitleType_MAX, __typeKeyDoNoAccess}
    enum ENoiseFunction { NOISEFUNCTION_SimplexTex, NOISEFUNCTION_GradientTex, NOISEFUNCTION_GradientTex3D, NOISEFUNCTION_GradientALU, NOISEFUNCTION_ValueALU, NOISEFUNCTION_VoronoiALU, NOISEFUNCTION_MAX, __typeKeyDoNoAccess}
    enum ENormalMode { NM_PreserveSmoothingGroups, NM_RecalculateNormals, NM_RecalculateNormalsSmooth, NM_RecalculateNormalsHard, TEMP_BROKEN, ENormalMode_MAX, __typeKeyDoNoAccess}
    class EnumFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnumFactory;
        static Load(InName: string): EnumFactory;
    
        __tid_EnumFactory_0__: boolean;
    }
    
    class EnumProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnumProperty;
        static Load(InName: string): EnumProperty;
    
        __tid_EnumProperty_0__: boolean;
    }
    
    class EnvDirection {
        constructor();
        constructor(LineFrom: UE.Class, LineTo: UE.Class, Rotation: UE.Class, DirMode: UE.EEnvDirection);
        LineFrom: UE.Class;
        LineTo: UE.Class;
        Rotation: UE.Class;
        DirMode: UE.EEnvDirection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EnvDirection_0__: boolean;
    }
    
    class EnvelopeFollowerListener extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnEnvelopeFollowerUpdate: $MulticastDelegate<(EnvelopeValue: number) => void>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvelopeFollowerListener;
        static Load(InName: string): EnvelopeFollowerListener;
    
        __tid_EnvelopeFollowerListener_0__: boolean;
    }
    
    class EnvironmentQueryFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvironmentQueryFactory;
        static Load(InName: string): EnvironmentQueryFactory;
    
        __tid_EnvironmentQueryFactory_0__: boolean;
    }
    
    class EnvironmentQueryGraph extends UE.AIGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvironmentQueryGraph;
        static Load(InName: string): EnvironmentQueryGraph;
    
        __tid_EnvironmentQueryGraph_0__: boolean;
    }
    
    class EnvironmentQueryGraphNode extends UE.AIGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvironmentQueryGraphNode;
        static Load(InName: string): EnvironmentQueryGraphNode;
    
        __tid_EnvironmentQueryGraphNode_0__: boolean;
    }
    
    class EnvironmentQueryGraphNode_Option extends UE.EnvironmentQueryGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvironmentQueryGraphNode_Option;
        static Load(InName: string): EnvironmentQueryGraphNode_Option;
    
        __tid_EnvironmentQueryGraphNode_Option_0__: boolean;
    }
    
    class EnvironmentQueryGraphNode_Root extends UE.EnvironmentQueryGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DebugMessages: TArray<string>;
        bHasDebugError: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvironmentQueryGraphNode_Root;
        static Load(InName: string): EnvironmentQueryGraphNode_Root;
    
        __tid_EnvironmentQueryGraphNode_Root_0__: boolean;
    }
    
    class EnvironmentQueryGraphNode_Test extends UE.EnvironmentQueryGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TestWeightPct: number;
        bHasNamedWeight: boolean;
        bTestEnabled: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvironmentQueryGraphNode_Test;
        static Load(InName: string): EnvironmentQueryGraphNode_Test;
    
        __tid_EnvironmentQueryGraphNode_Test_0__: boolean;
    }
    
    class EnvOverlapData {
        constructor();
        constructor(ExtentX: number, ExtentY: number, ExtentZ: number, ShapeOffset: UE.Vector, OverlapChannel: UE.ECollisionChannel, OverlapShape: UE.EEnvOverlapShape, bOnlyBlockingHits: boolean, bOverlapComplex: boolean, bSkipOverlapQuerier: boolean);
        ExtentX: number;
        ExtentY: number;
        ExtentZ: number;
        ShapeOffset: UE.Vector;
        OverlapChannel: UE.ECollisionChannel;
        OverlapShape: UE.EEnvOverlapShape;
        bOnlyBlockingHits: boolean;
        bOverlapComplex: boolean;
        bSkipOverlapQuerier: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EnvOverlapData_0__: boolean;
    }
    
    class EnvQueryContext_BlueprintBase extends UE.EnvQueryContext {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProvideActorsSet(QuerierObject: $Nullable<UE.Object>, QuerierActor: $Nullable<UE.Actor>, ResultingActorsSet: $Ref<TArray<UE.Actor>>) : void;
        ProvideLocationsSet(QuerierObject: $Nullable<UE.Object>, QuerierActor: $Nullable<UE.Actor>, ResultingLocationSet: $Ref<TArray<UE.Vector>>) : void;
        ProvideSingleActor(QuerierObject: $Nullable<UE.Object>, QuerierActor: $Nullable<UE.Actor>, ResultingActor: $Ref<UE.Actor>) : void;
        ProvideSingleLocation(QuerierObject: $Nullable<UE.Object>, QuerierActor: $Nullable<UE.Actor>, ResultingLocation: $Ref<UE.Vector>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryContext_BlueprintBase;
        static Load(InName: string): EnvQueryContext_BlueprintBase;
    
        __tid_EnvQueryContext_BlueprintBase_0__: boolean;
    }
    
    class EnvQueryContext_Item extends UE.EnvQueryContext {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryContext_Item;
        static Load(InName: string): EnvQueryContext_Item;
    
        __tid_EnvQueryContext_Item_0__: boolean;
    }
    
    class EnvQueryContext_Querier extends UE.EnvQueryContext {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryContext_Querier;
        static Load(InName: string): EnvQueryContext_Querier;
    
        __tid_EnvQueryContext_Querier_0__: boolean;
    }
    
    class EnvQueryDebugHelpers extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryDebugHelpers;
        static Load(InName: string): EnvQueryDebugHelpers;
    
        __tid_EnvQueryDebugHelpers_0__: boolean;
    }
    
    class EnvQueryGenerator_ActorsOfClass extends UE.EnvQueryGenerator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SearchedActorClass: UE.Class;
        GenerateOnlyActorsInRadius: UE.AIDataProviderBoolValue;
        SearchRadius: UE.AIDataProviderFloatValue;
        SearchCenter: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_ActorsOfClass;
        static Load(InName: string): EnvQueryGenerator_ActorsOfClass;
    
        __tid_EnvQueryGenerator_ActorsOfClass_0__: boolean;
    }
    
    class EnvQueryGenerator_BlueprintBase extends UE.EnvQueryGenerator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeneratorsActionDescription: string;
        Context: UE.Class;
        GeneratedItemType: UE.Class;
        AddGeneratedActor(GeneratedActor: $Nullable<UE.Actor>) : void;
        AddGeneratedVector(GeneratedVector: UE.Vector) : void;
        DoItemGeneration(ContextLocations: TArray<UE.Vector>) : void;
        GetQuerier() : UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_BlueprintBase;
        static Load(InName: string): EnvQueryGenerator_BlueprintBase;
    
        __tid_EnvQueryGenerator_BlueprintBase_0__: boolean;
    }
    
    class EnvQueryGenerator_Composite extends UE.EnvQueryGenerator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Generators: TArray<UE.EnvQueryGenerator>;
        bAllowDifferentItemTypes: boolean;
        bHasMatchingItemType: boolean;
        ForcedItemType: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_Composite;
        static Load(InName: string): EnvQueryGenerator_Composite;
    
        __tid_EnvQueryGenerator_Composite_0__: boolean;
    }
    
    class EnvTraceData {
        constructor();
        constructor(VersionNum: number, NavigationFilter: UE.Class, ProjectDown: number, ProjectUp: number, ExtentX: number, ExtentY: number, ExtentZ: number, PostProjectionVerticalOffset: number, TraceChannel: UE.ETraceTypeQuery, SerializedChannel: UE.ECollisionChannel, TraceShape: UE.EEnvTraceShape, TraceMode: UE.EEnvQueryTrace, bTraceComplex: boolean, bOnlyBlockingHits: boolean, bCanTraceOnNavMesh: boolean, bCanTraceOnGeometry: boolean, bCanDisableTrace: boolean, bCanProjectDown: boolean);
        VersionNum: number;
        NavigationFilter: UE.Class;
        ProjectDown: number;
        ProjectUp: number;
        ExtentX: number;
        ExtentY: number;
        ExtentZ: number;
        PostProjectionVerticalOffset: number;
        TraceChannel: UE.ETraceTypeQuery;
        SerializedChannel: UE.ECollisionChannel;
        TraceShape: UE.EEnvTraceShape;
        TraceMode: UE.EEnvQueryTrace;
        bTraceComplex: boolean;
        bOnlyBlockingHits: boolean;
        bCanTraceOnNavMesh: boolean;
        bCanTraceOnGeometry: boolean;
        bCanDisableTrace: boolean;
        bCanProjectDown: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EnvTraceData_0__: boolean;
    }
    
    class EnvQueryGenerator_ProjectedPoints extends UE.EnvQueryGenerator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProjectionData: UE.EnvTraceData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_ProjectedPoints;
        static Load(InName: string): EnvQueryGenerator_ProjectedPoints;
    
        __tid_EnvQueryGenerator_ProjectedPoints_0__: boolean;
    }
    
    class EnvQueryGenerator_Cone extends UE.EnvQueryGenerator_ProjectedPoints {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AlignedPointsDistance: UE.AIDataProviderFloatValue;
        ConeDegrees: UE.AIDataProviderFloatValue;
        AngleStep: UE.AIDataProviderFloatValue;
        Range: UE.AIDataProviderFloatValue;
        CenterActor: UE.Class;
        bIncludeContextLocation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_Cone;
        static Load(InName: string): EnvQueryGenerator_Cone;
    
        __tid_EnvQueryGenerator_Cone_0__: boolean;
    }
    
    class EnvQueryGenerator_CurrentLocation extends UE.EnvQueryGenerator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QueryContext: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_CurrentLocation;
        static Load(InName: string): EnvQueryGenerator_CurrentLocation;
    
        __tid_EnvQueryGenerator_CurrentLocation_0__: boolean;
    }
    
    class EnvQueryGenerator_Donut extends UE.EnvQueryGenerator_ProjectedPoints {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InnerRadius: UE.AIDataProviderFloatValue;
        OuterRadius: UE.AIDataProviderFloatValue;
        NumberOfRings: UE.AIDataProviderIntValue;
        PointsPerRing: UE.AIDataProviderIntValue;
        ArcDirection: UE.EnvDirection;
        ArcAngle: UE.AIDataProviderFloatValue;
        bUseSpiralPattern: boolean;
        Center: UE.Class;
        bDefineArc: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_Donut;
        static Load(InName: string): EnvQueryGenerator_Donut;
    
        __tid_EnvQueryGenerator_Donut_0__: boolean;
    }
    
    enum EPointOnCircleSpacingMethod { BySpaceBetween, ByNumberOfPoints, EPointOnCircleSpacingMethod_MAX, __typeKeyDoNoAccess}
    class EnvQueryGenerator_OnCircle extends UE.EnvQueryGenerator_ProjectedPoints {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CircleRadius: UE.AIDataProviderFloatValue;
        SpaceBetween: UE.AIDataProviderFloatValue;
        NumberOfPoints: UE.AIDataProviderIntValue;
        PointOnCircleSpacingMethod: UE.EPointOnCircleSpacingMethod;
        ArcDirection: UE.EnvDirection;
        ArcAngle: UE.AIDataProviderFloatValue;
        AngleRadians: number;
        CircleCenter: UE.Class;
        bIgnoreAnyContextActorsWhenGeneratingCircle: boolean;
        CircleCenterZOffset: UE.AIDataProviderFloatValue;
        TraceData: UE.EnvTraceData;
        bDefineArc: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_OnCircle;
        static Load(InName: string): EnvQueryGenerator_OnCircle;
    
        __tid_EnvQueryGenerator_OnCircle_0__: boolean;
    }
    
    class EnvQueryGenerator_SimpleGrid extends UE.EnvQueryGenerator_ProjectedPoints {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GridSize: UE.AIDataProviderFloatValue;
        SpaceBetween: UE.AIDataProviderFloatValue;
        GenerateAround: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_SimpleGrid;
        static Load(InName: string): EnvQueryGenerator_SimpleGrid;
    
        __tid_EnvQueryGenerator_SimpleGrid_0__: boolean;
    }
    
    class EnvQueryGenerator_PathingGrid extends UE.EnvQueryGenerator_SimpleGrid {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PathToItem: UE.AIDataProviderBoolValue;
        NavigationFilter: UE.Class;
        ScanRangeMultiplier: UE.AIDataProviderFloatValue;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryGenerator_PathingGrid;
        static Load(InName: string): EnvQueryGenerator_PathingGrid;
    
        __tid_EnvQueryGenerator_PathingGrid_0__: boolean;
    }
    
    class EnvQueryItemType extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryItemType;
        static Load(InName: string): EnvQueryItemType;
    
        __tid_EnvQueryItemType_0__: boolean;
    }
    
    class EnvQueryItemType_VectorBase extends UE.EnvQueryItemType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryItemType_VectorBase;
        static Load(InName: string): EnvQueryItemType_VectorBase;
    
        __tid_EnvQueryItemType_VectorBase_0__: boolean;
    }
    
    class EnvQueryItemType_ActorBase extends UE.EnvQueryItemType_VectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryItemType_ActorBase;
        static Load(InName: string): EnvQueryItemType_ActorBase;
    
        __tid_EnvQueryItemType_ActorBase_0__: boolean;
    }
    
    class EnvQueryItemType_Actor extends UE.EnvQueryItemType_ActorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryItemType_Actor;
        static Load(InName: string): EnvQueryItemType_Actor;
    
        __tid_EnvQueryItemType_Actor_0__: boolean;
    }
    
    class EnvQueryItemType_Direction extends UE.EnvQueryItemType_VectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryItemType_Direction;
        static Load(InName: string): EnvQueryItemType_Direction;
    
        __tid_EnvQueryItemType_Direction_0__: boolean;
    }
    
    class EnvQueryItemType_Point extends UE.EnvQueryItemType_VectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryItemType_Point;
        static Load(InName: string): EnvQueryItemType_Point;
    
        __tid_EnvQueryItemType_Point_0__: boolean;
    }
    
    class EnvQueryRequest {
        constructor();
        constructor(QueryTemplate: UE.EnvQuery, Owner: UE.Object, World: UE.World);
        QueryTemplate: UE.EnvQuery;
        Owner: UE.Object;
        World: UE.World;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EnvQueryRequest_0__: boolean;
    }
    
    class EnvQueryResult {
        constructor();
        constructor(ItemType: UE.Class, OptionIndex: number, QueryID: number);
        ItemType: UE.Class;
        OptionIndex: number;
        QueryID: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EnvQueryResult_0__: boolean;
    }
    
    class EnvQueryTest_Distance extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TestMode: UE.EEnvTestDistance;
        DistanceTo: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Distance;
        static Load(InName: string): EnvQueryTest_Distance;
    
        __tid_EnvQueryTest_Distance_0__: boolean;
    }
    
    class EnvQueryTest_Dot extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LineA: UE.EnvDirection;
        LineB: UE.EnvDirection;
        TestMode: UE.EEnvTestDot;
        bAbsoluteValue: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Dot;
        static Load(InName: string): EnvQueryTest_Dot;
    
        __tid_EnvQueryTest_Dot_0__: boolean;
    }
    
    class EnvQueryTest_GameplayTags extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TagQueryToMatch: UE.GameplayTagQuery;
        bUpdatedToUseQuery: boolean;
        TagsToMatch: UE.EGameplayContainerMatchType;
        GameplayTags: UE.GameplayTagContainer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_GameplayTags;
        static Load(InName: string): EnvQueryTest_GameplayTags;
    
        __tid_EnvQueryTest_GameplayTags_0__: boolean;
    }
    
    class EnvQueryTest_Overlap extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OverlapData: UE.EnvOverlapData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Overlap;
        static Load(InName: string): EnvQueryTest_Overlap;
    
        __tid_EnvQueryTest_Overlap_0__: boolean;
    }
    
    class EnvQueryTest_Pathfinding extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TestMode: UE.EEnvTestPathfinding;
        Context: UE.Class;
        PathFromContext: UE.AIDataProviderBoolValue;
        SkipUnreachable: UE.AIDataProviderBoolValue;
        FilterClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Pathfinding;
        static Load(InName: string): EnvQueryTest_Pathfinding;
    
        __tid_EnvQueryTest_Pathfinding_0__: boolean;
    }
    
    class EnvQueryTest_PathfindingBatch extends UE.EnvQueryTest_Pathfinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ScanRangeMultiplier: UE.AIDataProviderFloatValue;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_PathfindingBatch;
        static Load(InName: string): EnvQueryTest_PathfindingBatch;
    
        __tid_EnvQueryTest_PathfindingBatch_0__: boolean;
    }
    
    class EnvQueryTest_Project extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProjectionData: UE.EnvTraceData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Project;
        static Load(InName: string): EnvQueryTest_Project;
    
        __tid_EnvQueryTest_Project_0__: boolean;
    }
    
    class EnvQueryTest_Random extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Random;
        static Load(InName: string): EnvQueryTest_Random;
    
        __tid_EnvQueryTest_Random_0__: boolean;
    }
    
    class EnvQueryTest_Trace extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TraceData: UE.EnvTraceData;
        TraceFromContext: UE.AIDataProviderBoolValue;
        ItemHeightOffset: UE.AIDataProviderFloatValue;
        ContextHeightOffset: UE.AIDataProviderFloatValue;
        Context: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Trace;
        static Load(InName: string): EnvQueryTest_Trace;
    
        __tid_EnvQueryTest_Trace_0__: boolean;
    }
    
    class EnvQueryTest_Volume extends UE.EnvQueryTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VolumeContext: UE.Class;
        VolumeClass: UE.Class;
        bDoComplexVolumeTest: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTest_Volume;
        static Load(InName: string): EnvQueryTest_Volume;
    
        __tid_EnvQueryTest_Volume_0__: boolean;
    }
    
    class EnvQueryTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EnvQueryTypes;
        static Load(InName: string): EnvQueryTypes;
    
        __tid_EnvQueryTypes_0__: boolean;
    }
    
    enum EOculusDeviceType { OculusMobile_Deprecated0, OculusQuest, OculusQuest2, Rift, Rift_S, Quest_Link, OculusUnknown, EOculusDeviceType_MAX, __typeKeyDoNoAccess}
    enum EOculusGamepadEmulation { Off, Twinstick, RightDPad, LeftDPad, Length, EOculusGamepadEmulation_MAX, __typeKeyDoNoAccess}
    enum EOculusHandType { None, HandLeft, HandRight, EOculusHandType_MAX, __typeKeyDoNoAccess}
    enum EOculusMR_CameraDeviceEnum { CD_None, CD_WebCamera0, CD_WebCamera1, CD_MAX, __typeKeyDoNoAccess}
    enum EOculusMR_ClippingReference { CR_TrackingReference, CR_Head, CR_MAX, __typeKeyDoNoAccess}
    enum EOculusMR_CompositionMethod { ExternalComposition, DirectComposition, EOculusMR_MAX, __typeKeyDoNoAccess}
    enum EOculusMR_PostProcessEffects { PPE_Off, PPE_On, PPE_MAX, __typeKeyDoNoAccess}
    enum EOculusPlatform { PC, Mobile, Length, EOculusPlatform_MAX, __typeKeyDoNoAccess}
    enum EOculusPlatformTarget { Rift, Quest, Length, EOculusPlatformTarget_MAX, __typeKeyDoNoAccess}
    enum EOnlineProxyStoreOfferDiscountType { NotOnSale, Percentage, DiscountAmount, PayAmount, EOnlineProxyStoreOfferDiscountType_MAX, __typeKeyDoNoAccess}
    enum EOptimizationType { OT_NumOfTriangles, OT_MaxDeviation, OT_MAX, __typeKeyDoNoAccess}
    enum EOrientation { Orient_Horizontal, Orient_Vertical, Orient_MAX, __typeKeyDoNoAccess}
    enum EOrientPositionSelector { Orientation, Position, OrientationAndPosition, EOrientPositionSelector_MAX, __typeKeyDoNoAccess}
    enum EOrthoThumbnailDirection { Top, Bottom, Left, Right, Front, Back, EOrthoThumbnailDirection_MAX, __typeKeyDoNoAccess}
    enum EOverlapFilterOption { OverlapFilter_All, OverlapFilter_DynamicOnly, OverlapFilter_StaticOnly, OverlapFilter_MAX, __typeKeyDoNoAccess}
    enum EPackageNotifyState { NS_Updating, NS_BalloonPrompted, NS_DialogPrompted, NS_PendingPrompt, NS_PendingWarning, NS_MAX, __typeKeyDoNoAccess}
    enum EPaintableClothProperty { MaxDistances, BackstopDistances, BackstopRadius, EPaintableClothProperty_MAX, __typeKeyDoNoAccess}
    enum EPaintMode { Vertices, Textures, EPaintMode_MAX, __typeKeyDoNoAccess}
    enum EPaperSpriteAtlasPadding { DilateBorder, PadWithZero, EPaperSpriteAtlasPadding_MAX, __typeKeyDoNoAccess}
    enum EParticleAxisLock { EPAL_NONE, EPAL_X, EPAL_Y, EPAL_Z, EPAL_NEGATIVE_X, EPAL_NEGATIVE_Y, EPAL_NEGATIVE_Z, EPAL_ROTATE_X, EPAL_ROTATE_Y, EPAL_ROTATE_Z, EPAL_MAX, __typeKeyDoNoAccess}
    enum EParticleCameraOffsetUpdateMethod { EPCOUM_DirectSet, EPCOUM_Additive, EPCOUM_Scalar, EPCOUM_MAX, __typeKeyDoNoAccess}
    enum EParticleCollisionComplete { EPCC_Kill, EPCC_Freeze, EPCC_HaltCollisions, EPCC_FreezeTranslation, EPCC_FreezeRotation, EPCC_FreezeMovement, EPCC_MAX, __typeKeyDoNoAccess}
    enum EParticleCollisionMode { SceneDepth, DistanceField, EParticleCollisionMode_MAX, __typeKeyDoNoAccess}
    enum EParticleCollisionResponse { Bounce, Stop, Kill, EParticleCollisionResponse_MAX, __typeKeyDoNoAccess}
    enum EParticleDetailMode { PDM_Low, PDM_Medium, PDM_High, PDM_MAX, __typeKeyDoNoAccess}
    enum EParticleKey { Activate, Deactivate, Trigger, EParticleKey_MAX, __typeKeyDoNoAccess}
    enum EParticleSourceSelectionMethod { EPSSM_Random, EPSSM_Sequential, EPSSM_MAX, __typeKeyDoNoAccess}
    enum EPartyReservationResult { NoResult, RequestPending, GeneralError, PartyLimitReached, IncorrectPlayerCount, RequestTimedOut, ReservationDuplicate, ReservationNotFound, ReservationAccepted, ReservationDenied, ReservationDenied_CrossPlayRestriction, ReservationDenied_Banned, ReservationRequestCanceled, ReservationInvalid, BadSessionId, ReservationDenied_ContainsExistingPlayers, EPartyReservationResult_MAX, __typeKeyDoNoAccess}
    enum EPasteTo { PT_OriginalLocation, PT_Here, PT_WorldOrigin, PT_MAX, __typeKeyDoNoAccess}
    enum EPawnActionEventType { Invalid, FailedToStart, InstantAbort, FinishedAborting, FinishedExecution, Push, EPawnActionEventType_MAX, __typeKeyDoNoAccess}
    enum EPawnActionFailHandling { RequireSuccess, IgnoreFailure, EPawnActionFailHandling_MAX, __typeKeyDoNoAccess}
    enum EPawnActionMoveMode { UsePathfinding, StraightLine, EPawnActionMoveMode_MAX, __typeKeyDoNoAccess}
    enum EPawnSubActionTriggeringPolicy { CopyBeforeTriggering, ReuseInstances, EPawnSubActionTriggeringPolicy_MAX, __typeKeyDoNoAccess}
    enum EPhaserLFOType { Sine, UpSaw, DownSaw, Square, Triangle, Exponential, RandomSampleHold, Count, EPhaserLFOType_MAX, __typeKeyDoNoAccess}
    enum EPhysAssetFitGeomType { EFG_Box, EFG_Sphyl, EFG_Sphere, EFG_TaperedCapsule, EFG_SingleConvexHull, EFG_MultiConvexHull, EFG_MAX, __typeKeyDoNoAccess}
    enum EPhysAssetFitVertWeight { EVW_AnyWeight, EVW_DominantWeight, EVW_MAX, __typeKeyDoNoAccess}
    enum EPhysicalMaterialMaskColor { Red, Green, Blue, Cyan, Magenta, Yellow, White, Black, MAX, __typeKeyDoNoAccess}
    enum EPhysicsAssetEditorConstraintViewMode { None, AllPositions, AllLimits, EPhysicsAssetEditorConstraintViewMode_MAX, __typeKeyDoNoAccess}
    enum EPhysicsAssetEditorRenderMode { Solid, Wireframe, None, EPhysicsAssetEditorRenderMode_MAX, __typeKeyDoNoAccess}
    enum ESynth1PatchSource { LFO1, LFO2, Envelope, BiasEnvelope, Count, ESynth1PatchSource_MAX, __typeKeyDoNoAccess}
    enum ESynth1PatchDestination { Osc1Gain, Osc1Frequency, Osc1Pulsewidth, Osc2Gain, Osc2Frequency, Osc2Pulsewidth, FilterFrequency, FilterQ, Gain, Pan, LFO1Frequency, LFO1Gain, LFO2Frequency, LFO2Gain, Count, ESynth1PatchDestination_MAX, __typeKeyDoNoAccess}
    class Synth1PatchCable {
        constructor();
        constructor(Depth: number, Destination: UE.ESynth1PatchDestination);
        Depth: number;
        Destination: UE.ESynth1PatchDestination;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Synth1PatchCable_0__: boolean;
    }
    
    class EpicSynth1Patch {
        constructor();
        constructor(PatchSource: UE.ESynth1PatchSource, PatchCables: TArray<UE.Synth1PatchCable>);
        PatchSource: UE.ESynth1PatchSource;
        PatchCables: TArray<UE.Synth1PatchCable>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EpicSynth1Patch_0__: boolean;
    }
    
    enum EPIEPreviewDeviceType { Unset, Android, IOS, TVOS, Switch, MAX, __typeKeyDoNoAccess}
    enum EPinHidingMode { NeverAsPin, PinHiddenByDefault, PinShownByDefault, AlwaysAsPin, EPinHidingMode_MAX, __typeKeyDoNoAccess}
    enum EPinnedCommandListType { Command, CustomWidget, EPinnedCommandListType_MAX, __typeKeyDoNoAccess}
    enum EPlayModeLocations { PlayLocation_CurrentCameraLocation, PlayLocation_DefaultPlayerStart, PlayLocation_MAX, __typeKeyDoNoAccess}
    enum EPlayModeType { PlayMode_InViewPort, PlayMode_InEditorFloating, PlayMode_InMobilePreview, PlayMode_InTargetedMobilePreview, PlayMode_InVulkanPreview, PlayMode_InNewProcess, PlayMode_InVR, PlayMode_Simulate, PlayMode_Count, PlayMode_MAX, __typeKeyDoNoAccess}
    enum EPlayNetMode { PIE_Standalone, PIE_ListenServer, PIE_Client, PIE_MAX, __typeKeyDoNoAccess}
    enum EPlayOnBuildMode { PlayOnBuild_Always, PlayOnBuild_Never, PlayOnBuild_Default, PlayOnBuild_IfEditorBuiltLocally, PlayOnBuild_MAX, __typeKeyDoNoAccess}
    enum EPlayOnLaunchConfiguration { LaunchConfig_Default, LaunchConfig_Debug, LaunchConfig_Development, LaunchConfig_Test, LaunchConfig_Shipping, LaunchConfig_MAX, __typeKeyDoNoAccess}
    enum EPortableObjectFormat { Unreal, Crowdin, EPortableObjectFormat_MAX, __typeKeyDoNoAccess}
    enum EPowerUsageFrameRateLock { PUFRL_None, PUFRL_20, PUFRL_30, PUFRL_60, PUFRL_MAX, __typeKeyDoNoAccess}
    enum EPrimitiveObjectSets { PrimitiveObjectSets_AllObjects, PrimitiveObjectSets_CurrentLevel, PrimitiveObjectSets_SelectedObjects, PrimitiveObjectSets_MAX, __typeKeyDoNoAccess}
    enum EProcMeshSliceCapOption { NoCap, CreateNewSectionForCap, UseLastSectionForCap, EProcMeshSliceCapOption_MAX, __typeKeyDoNoAccess}
    enum EProgressBarFillType { LeftToRight, RightToLeft, FillFromCenter, TopToBottom, BottomToTop, EProgressBarFillType_MAX, __typeKeyDoNoAccess}
    enum EProjectPackagingBlueprintNativizationMethod { Disabled, Inclusive, Exclusive, EProjectPackagingBlueprintNativizationMethod_MAX, __typeKeyDoNoAccess}
    enum EProjectPackagingBuild { Always, Never, IfProjectHasCode, IfEditorWasBuiltLocally, EProjectPackagingBuild_MAX, __typeKeyDoNoAccess}
    enum EProjectPackagingBuildConfigurations { PPBC_Debug, PPBC_DebugGame, PPBC_Development, PPBC_Test, PPBC_Shipping, PPBC_MAX, __typeKeyDoNoAccess}
    enum EProjectPackagingInternationalizationPresets { English, EFIGS, EFIGSCJK, CJK, All, EProjectPackagingInternationalizationPresets_MAX, __typeKeyDoNoAccess}
    enum EPropertyAccessBatchType { Unbatched, Batched, EPropertyAccessBatchType_MAX, __typeKeyDoNoAccess}
    enum EPropertyAccessChangeNotifyMode { Default, Never, Always, EPropertyAccessChangeNotifyMode_MAX, __typeKeyDoNoAccess}
    enum EPropertyAccessCopyBatch { InternalUnbatched, ExternalUnbatched, InternalBatched, ExternalBatched, Count, EPropertyAccessCopyBatch_MAX, __typeKeyDoNoAccess}
    enum EPSCPoolMethod { None, AutoRelease, ManualRelease, ManualRelease_OnComplete, FreeInPool, EPSCPoolMethod_MAX, __typeKeyDoNoAccess}
    class EQSQueryResultSourceInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EQSQueryResultSourceInterface;
        static Load(InName: string): EQSQueryResultSourceInterface;
    
        __tid_EQSQueryResultSourceInterface_0__: boolean;
    }
    
    class EQSRenderingComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EQSRenderingComponent;
        static Load(InName: string): EQSRenderingComponent;
    
        __tid_EQSRenderingComponent_0__: boolean;
    }
    
    class EQSTestingPawn extends UE.Character {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QueryTemplate: UE.EnvQuery;
        QueryParams: TArray<UE.EnvNamedValue>;
        QueryConfig: TArray<UE.AIDynamicParam>;
        TimeLimitPerStep: number;
        StepToDebugDraw: number;
        HighlightMode: UE.EEnvQueryHightlightMode;
        bDrawLabels: boolean;
        bDrawFailedItems: boolean;
        bReRunQueryOnlyOnFinishedMove: boolean;
        bShouldBeVisibleInGame: boolean;
        bTickDuringGame: boolean;
        QueryingMode: UE.EEnvQueryRunMode;
        NavAgentProperties: UE.NavAgentProperties;
        EdRenderComp: UE.EQSRenderingComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EQSTestingPawn;
        static Load(InName: string): EQSTestingPawn;
    
        __tid_EQSTestingPawn_0__: boolean;
    }
    
    enum EQuartzDelegateType { MetronomeTick, CommandEvent, Count, EQuartzDelegateType_MAX, __typeKeyDoNoAccess}
    enum EQuartzTimeSignatureQuantization { HalfNote, QuarterNote, EighthNote, SixteenthNote, ThirtySecondNote, Count, EQuartzTimeSignatureQuantization_MAX, __typeKeyDoNoAccess}
    class EquirectProps {
        constructor();
        constructor(LeftUVRect: UE.Box2D, RightUVRect: UE.Box2D, LeftScale: UE.Vector2D, RightScale: UE.Vector2D, LeftBias: UE.Vector2D, RightBias: UE.Vector2D);
        LeftUVRect: UE.Box2D;
        RightUVRect: UE.Box2D;
        LeftScale: UE.Vector2D;
        RightScale: UE.Vector2D;
        LeftBias: UE.Vector2D;
        RightBias: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EquirectProps_0__: boolean;
    }
    
    enum EQuitPreference { Quit, Background, EQuitPreference_MAX, __typeKeyDoNoAccess}
    enum ERandomVelocityGenerationTypeEnum { ChaosNiagara_RandomVelocityGenerationType_RandomDistribution, ChaosNiagara_RandomVelocityGenerationType_RandomDistributionWithStreamers, ChaosNiagara_RandomVelocityGenerationType_CollisionNormalBased, ChaosNiagara_Max, ChaosNiagara_MAX, __typeKeyDoNoAccess}
    enum ERecastPartitioning { Monotone, Watershed, ChunkyMonotone, ERecastPartitioning_MAX, __typeKeyDoNoAccess}
    enum ERenderFocusRule { Always, NonPointer, NavigationOnly, Never, ERenderFocusRule_MAX, __typeKeyDoNoAccess}
    enum EReporterLineStyle { Line, Dash, EReporterLineStyle_MAX, __typeKeyDoNoAccess}
    enum ERichCurveCompressionFormat { RCCF_Empty, RCCF_Constant, RCCF_Linear, RCCF_Cubic, RCCF_Mixed, RCCF_Weighted, RCCF_MAX, __typeKeyDoNoAccess}
    enum ERichCurveKeyTimeCompressionFormat { RCKTCF_uint16, RCKTCF_float32, RCKTCF_MAX, __typeKeyDoNoAccess}
    enum ERingModulatorTypeSourceEffect { Sine, Saw, Triangle, Square, Count, ERingModulatorTypeSourceEffect_MAX, __typeKeyDoNoAccess}
    enum ERootMotionAccumulateMode { Override, Additive, ERootMotionAccumulateMode_MAX, __typeKeyDoNoAccess}
    enum ERootMotionFinishVelocityMode { MaintainLastRootMotionVelocity, SetVelocity, ClampVelocity, ERootMotionFinishVelocityMode_MAX, __typeKeyDoNoAccess}
    enum ERootMotionSourceSettingsFlags { UseSensitiveLiftoffCheck, DisablePartialEndTick, IgnoreZAccumulate, ERootMotionSourceSettingsFlags_MAX, __typeKeyDoNoAccess}
    enum ERootMotionSourceStatusFlags { Prepared, Finished, MarkedForRemoval, ERootMotionSourceStatusFlags_MAX, __typeKeyDoNoAccess}
    enum ERotationGridMode { GridMode_DivisionsOf360, GridMode_Common, GridMode_MAX, __typeKeyDoNoAccess}
    enum ERoundingMode { HalfToEven, HalfFromZero, HalfToZero, FromZero, ToZero, ToNegativeInfinity, ToPositiveInfinity, ERoundingMode_MAX, __typeKeyDoNoAccess}
    enum ERuntimeVirtualTextureMipValueMode { RVTMVM_None, RVTMVM_MipLevel, RVTMVM_MipBias, RVTMVM_MAX, __typeKeyDoNoAccess}
    enum ERuntimeVirtualTextureTextureAddressMode { RVTTA_Clamp, RVTTA_Wrap, RVTTA_MAX, __typeKeyDoNoAccess}
    enum ESamplePlayerSeekType { FromBeginning, FromCurrentPosition, FromEnd, Count, ESamplePlayerSeekType_MAX, __typeKeyDoNoAccess}
    enum ESamplerSourceMode { SSM_FromTextureAsset, SSM_Wrap_WorldGroupSettings, SSM_Clamp_WorldGroupSettings, SSM_MAX, __typeKeyDoNoAccess}
    enum ESceneCaptureCompositeMode { SCCM_Overwrite, SCCM_Additive, SCCM_Composite, SCCM_MAX, __typeKeyDoNoAccess}
    enum ESceneCapturePrimitiveRenderMode { PRM_LegacySceneCapture, PRM_RenderScenePrimitives, PRM_UseShowOnlyList, PRM_MAX, __typeKeyDoNoAccess}
    enum ESceneCaptureSource { SCS_SceneColorHDR, SCS_SceneColorHDRNoAlpha, SCS_FinalColorLDR, SCS_SceneColorSceneDepth, SCS_SceneDepth, SCS_DeviceDepth, SCS_Normal, SCS_BaseColor, SCS_FinalColorHDR, SCS_FinalToneCurveHDR, SCS_MAX, __typeKeyDoNoAccess}
    enum ESceneSnapQueryTargetType { None, MeshVertex, MeshEdge, Grid, All, ESceneSnapQueryTargetType_MAX, __typeKeyDoNoAccess}
    enum ESceneSnapQueryType { Position, Rotation, ESceneSnapQueryType_MAX, __typeKeyDoNoAccess}
    enum ESceneTextureId { PPI_SceneColor, PPI_SceneDepth, PPI_DiffuseColor, PPI_SpecularColor, PPI_SubsurfaceColor, PPI_BaseColor, PPI_Specular, PPI_Metallic, PPI_WorldNormal, PPI_SeparateTranslucency, PPI_Opacity, PPI_Roughness, PPI_MaterialAO, PPI_CustomDepth, PPI_PostProcessInput0, PPI_PostProcessInput1, PPI_PostProcessInput2, PPI_PostProcessInput3, PPI_PostProcessInput4, PPI_PostProcessInput5, PPI_PostProcessInput6, PPI_DecalMask, PPI_ShadingModelColor, PPI_ShadingModelID, PPI_AmbientOcclusion, PPI_CustomStencil, PPI_StoredBaseColor, PPI_StoredSpecular, PPI_Velocity, PPI_WorldTangent, PPI_Anisotropy, PPI_MAX, __typeKeyDoNoAccess}
    enum EScrollDirection { Scroll_Down, Scroll_Up, Scroll_MAX, __typeKeyDoNoAccess}
    enum EScrollGestureDirection { UseSystemSetting, Standard, Natural, EScrollGestureDirection_MAX, __typeKeyDoNoAccess}
    enum EScrollWhenFocusChanges { NoScroll, InstantScroll, AnimatedScroll, EScrollWhenFocusChanges_MAX, __typeKeyDoNoAccess}
    enum ESearchCase { CaseSensitive, IgnoreCase, ESearchCase_MAX, __typeKeyDoNoAccess}
    enum ESearchDir { FromStart, FromEnd, ESearchDir_MAX, __typeKeyDoNoAccess}
    enum ESelectedObjectsModificationType { Replace, Add, Remove, Clear, ESelectedObjectsModificationType_MAX, __typeKeyDoNoAccess}
    enum ESelectedTangentHandle { None, Leave, Arrive, ESelectedTangentHandle_MAX, __typeKeyDoNoAccess}
    enum ESelectionMode { None, Single, SingleToggle, Multi, ESelectionMode_MAX, __typeKeyDoNoAccess}
    enum ESelfContextInfo { Unspecified, NotSelfContext, ESelfContextInfo_MAX, __typeKeyDoNoAccess}
    enum ESequencerLoopMode { SLM_NoLoop, SLM_Loop, SLM_LoopSelectionRange, SLM_MAX, __typeKeyDoNoAccess}
    enum ESequencerSectionResizeMode { SSRM_LeadingEdge, SSRM_TrailingEdge, SSRM_MAX, __typeKeyDoNoAccess}
    enum ESequencerSpawnPosition { SSP_Origin, SSP_PlaceInFrontOfCamera, SSP_MAX, __typeKeyDoNoAccess}
    enum ESequencerZoomPosition { SZP_CurrentTime, SZP_MousePosition, SZP_MAX, __typeKeyDoNoAccess}
    enum ESetMaskConditionType { Field_Set_Always, Field_Set_IFF_NOT_Interior, Field_Set_IFF_NOT_Exterior, Field_MaskCondition_Max, __typeKeyDoNoAccess}
    enum ESetResolutionMethod { Independent, MaxAxis, CellSize, ESetResolutionMethod_MAX, __typeKeyDoNoAccess}
    enum ESettingsDOF { Full3D, YZPlane, XZPlane, XYPlane, ESettingsDOF_MAX, __typeKeyDoNoAccess}
    enum ESettingsLockedAxis { None, X, Y, Z, Invalid, ESettingsLockedAxis_MAX, __typeKeyDoNoAccess}
    enum EShaderCookerStatsSets { EShaderCookerStatsSets_Default, EShaderCookerStatsSets_MAX, __typeKeyDoNoAccess}
    enum EShadowMapFlags { SMF_None, SMF_Streamed, SMF_MAX, __typeKeyDoNoAccess}
    enum ESheetAxis { AX_Horizontal, AX_XAxis, AX_YAxis, AX_MAX, __typeKeyDoNoAccess}
    enum EShow3DTrajectory { EST_OnlyWhenSelected, EST_Always, EST_Never, EST_MAX, __typeKeyDoNoAccess}
    enum ESimulationOverlap { CollisionOverlap, ShadeOverlap, None, ESimulationOverlap_MAX, __typeKeyDoNoAccess}
    enum ESimulationQuery { None, CollisionOverlap, ShadeOverlap, AnyOverlap, ESimulationQuery_MAX, __typeKeyDoNoAccess}
    enum ESkeletalMeshGeoImportVersions { Before_Versionning, SkeletalMeshBuildRefactor, VersionPlusOne, LatestVersion, ESkeletalMeshGeoImportVersions_MAX, __typeKeyDoNoAccess}
    enum ESkeletalMeshSkinningImportVersions { Before_Versionning, SkeletalMeshBuildRefactor, VersionPlusOne, LatestVersion, ESkeletalMeshSkinningImportVersions_MAX, __typeKeyDoNoAccess}
    enum ESkeletalSummaryDataType { VR_SummaryType_FromAnimation, VR_SummaryType_FromDevice, VR_SummaryType_MAX, __typeKeyDoNoAccess}
    enum ESkinCacheDefaultBehavior { Exclusive, Inclusive, ESkinCacheDefaultBehavior_MAX, __typeKeyDoNoAccess}
    enum ESkyAtmosphereTransformMode { PlanetTopAtAbsoluteWorldOrigin, PlanetTopAtComponentTransform, PlanetCenterAtComponentTransform, ESkyAtmosphereTransformMode_MAX, __typeKeyDoNoAccess}
    enum ESlateDebuggingFocusEvent { FocusChanging, FocusLost, FocusReceived, MAX, __typeKeyDoNoAccess}
    enum ESlateDebuggingInputEvent { MouseMove, MouseEnter, MouseLeave, PreviewMouseButtonDown, MouseButtonDown, MouseButtonUp, MouseButtonDoubleClick, MouseWheel, TouchStart, TouchEnd, TouchForceChanged, TouchFirstMove, TouchMoved, DragDetected, DragEnter, DragLeave, DragOver, DragDrop, DropMessage, PreviewKeyDown, KeyDown, KeyUp, KeyChar, AnalogInput, TouchGesture, MotionDetected, MAX, __typeKeyDoNoAccess}
    enum ESlateDebuggingNavigationMethod { Unknown, Explicit, CustomDelegateBound, CustomDelegateUnbound, NextOrPrevious, HitTestGrid, ESlateDebuggingNavigationMethod_MAX, __typeKeyDoNoAccess}
    enum ESlateDebuggingStateChangeEvent { MouseCaptureGained, MouseCaptureLost, ESlateDebuggingStateChangeEvent_MAX, __typeKeyDoNoAccess}
    enum ESlateGesture { None, Scroll, Magnify, Swipe, Rotate, LongPress, ESlateGesture_MAX, __typeKeyDoNoAccess}
    enum ESlateParentWindowSearchMethod { ActiveWindow, MainWindow, ESlateParentWindowSearchMethod_MAX, __typeKeyDoNoAccess}
    enum ESmartNameContainerType { SNCT_CurveMapping, SNCT_TrackCurveMapping, SNCT_MAX, __typeKeyDoNoAccess}
    enum ESourceEffectDynamicsPeakMode { MeanSquared, RootMeanSquared, Peak, Count, ESourceEffectDynamicsPeakMode_MAX, __typeKeyDoNoAccess}
    enum ESourceEffectDynamicsProcessorType { Compressor, Limiter, Expander, Gate, Count, ESourceEffectDynamicsProcessorType_MAX, __typeKeyDoNoAccess}
    enum ESourceEffectFilterCircuit { OnePole, StateVariable, Ladder, Count, ESourceEffectFilterCircuit_MAX, __typeKeyDoNoAccess}
    enum ESourceEffectFilterParam { FilterFrequency, FilterResonance, Count, ESourceEffectFilterParam_MAX, __typeKeyDoNoAccess}
    enum ESourceEffectFilterType { LowPass, HighPass, BandPass, BandStop, Count, ESourceEffectFilterType_MAX, __typeKeyDoNoAccess}
    enum ESpatialInputGestureAxis { None, Manipulation, Navigation, NavigationRails, ESpatialInputGestureAxis_MAX, __typeKeyDoNoAccess}
    enum ESpectatorClientRequestType { NonePending, ExistingSessionReservation, ReservationUpdate, EmptyServerReservation, Reconnect, Abandon, ESpectatorClientRequestType_MAX, __typeKeyDoNoAccess}
    enum ESpectatorReservationResult { NoResult, RequestPending, GeneralError, SpectatorLimitReached, IncorrectPlayerCount, RequestTimedOut, ReservationDuplicate, ReservationNotFound, ReservationAccepted, ReservationDenied, ReservationDenied_CrossPlayRestriction, ReservationDenied_Banned, ReservationRequestCanceled, ReservationInvalid, BadSessionId, ReservationDenied_ContainsExistingPlayers, ESpectatorReservationResult_MAX, __typeKeyDoNoAccess}
    enum ESpectatorScreenMode { Disabled, SingleEyeLetterboxed, Undistorted, Distorted, SingleEye, SingleEyeCroppedToFill, Texture, TexturePlusEye, ESpectatorScreenMode_MAX, __typeKeyDoNoAccess}
    enum ESpeedTreeGeometryType { STG_Branch, STG_Frond, STG_Leaf, STG_FacingLeaf, STG_Billboard, STG_MAX, __typeKeyDoNoAccess}
    enum ESpeedTreeLODType { STLOD_Pop, STLOD_Smooth, STLOD_MAX, __typeKeyDoNoAccess}
    enum ESpeedTreeWindType { STW_None, STW_Fastest, STW_Fast, STW_Better, STW_Best, STW_Palm, STW_BestPlus, STW_MAX, __typeKeyDoNoAccess}
    enum ESplineModulationColorMask { Red, Green, Blue, Alpha, ESplineModulationColorMask_MAX, __typeKeyDoNoAccess}
    enum ESpriteCollisionMode { None, Use2DPhysics, Use3DPhysics, ESpriteCollisionMode_MAX, __typeKeyDoNoAccess}
    enum ESpriteExtractMode { Auto, Grid, ESpriteExtractMode_MAX, __typeKeyDoNoAccess}
    enum ESpritePivotMode { Top_Left, Top_Center, Top_Right, Center_Left, Center_Center, Center_Right, Bottom_Left, Bottom_Center, Bottom_Right, Custom, ESpritePivotMode_MAX, __typeKeyDoNoAccess}
    enum ESpritePolygonMode { SourceBoundingBox, TightBoundingBox, ShrinkWrapped, FullyCustom, Diced, ESpritePolygonMode_MAX, __typeKeyDoNoAccess}
    enum ESpriteShapeType { Box, Circle, Polygon, ESpriteShapeType_MAX, __typeKeyDoNoAccess}
    enum EStackIssueSeverity { Error, Warning, Info, None, EStackIssueSeverity_MAX, __typeKeyDoNoAccess}
    enum EStackParameterBehavior { Dynamic, Static, EStackParameterBehavior_MAX, __typeKeyDoNoAccess}
    enum EStandardToolContextMaterials { VertexColorMaterial, EStandardToolContextMaterials_MAX, __typeKeyDoNoAccess}
    enum EStandbyType { STDBY_Rx, STDBY_Tx, STDBY_BadPing, STDBY_MAX, __typeKeyDoNoAccess}
    enum EStaticMeshLightingInfoObjectSets { StaticMeshLightingInfoObjectSets_CurrentLevel, StaticMeshLightingInfoObjectSets_SelectedLevels, StaticMeshLightingInfoObjectSets_AllLevels, StaticMeshLightingInfoObjectSets_MAX, __typeKeyDoNoAccess}
    enum ESteamVRHand { VR_Left, VR_Right, VR_MAX, __typeKeyDoNoAccess}
    enum ESteamVRInputStringBits { VR_InputString_Hand, VR_InputString_ControllerType, VR_InputString_InputSource, VR_InputString_All, VR_InputString_MAX, __typeKeyDoNoAccess}
    enum ESteamVRTrackedDeviceType { Controller, TrackingReference, Other, Invalid, ESteamVRTrackedDeviceType_MAX, __typeKeyDoNoAccess}
    enum EStereoChannelMode { MidSide, LeftRight, count, EStereoChannelMode_MAX, __typeKeyDoNoAccess}
    enum EStereoDelayFiltertype { Lowpass, Highpass, Bandpass, Notch, Count, EStereoDelayFiltertype_MAX, __typeKeyDoNoAccess}
    enum EStereoDelaySourceEffect { Normal, Cross, PingPong, Count, EStereoDelaySourceEffect_MAX, __typeKeyDoNoAccess}
    enum EStereoLayerShape { SLSH_QuadLayer, SLSH_CylinderLayer, SLSH_CubemapLayer, SLSH_EquirectLayer, SLSH_MAX, __typeKeyDoNoAccess}
    enum EStereoLayerType { SLT_WorldLocked, SLT_TrackerLocked, SLT_FaceLocked, SLT_MAX, __typeKeyDoNoAccess}
    enum EStretch { None, Fill, ScaleToFit, ScaleToFitX, ScaleToFitY, ScaleToFill, ScaleBySafeZone, UserSpecified, EStretch_MAX, __typeKeyDoNoAccess}
    enum EStretchDirection { Both, DownOnly, UpOnly, EStretchDirection_MAX, __typeKeyDoNoAccess}
    enum EStructViewerDeveloperType { SVDT_None, SVDT_CurrentUser, SVDT_All, SVDT_Max, SVDT_MAX, __typeKeyDoNoAccess}
    enum ESubLevelStripMode { ExactClass, IsChildOf, ESubLevelStripMode_MAX, __typeKeyDoNoAccess}
    enum ESubmixEffectConvolutionReverbBlockSize { BlockSize256, BlockSize512, BlockSize1024, ESubmixEffectConvolutionReverbBlockSize_MAX, __typeKeyDoNoAccess}
    enum ESubmixEffectDynamicsChannelLinkMode { Disabled, Average, Peak, Count, ESubmixEffectDynamicsChannelLinkMode_MAX, __typeKeyDoNoAccess}
    enum ESubmixEffectDynamicsPeakMode { MeanSquared, RootMeanSquared, Peak, Count, ESubmixEffectDynamicsPeakMode_MAX, __typeKeyDoNoAccess}
    enum ESubmixEffectDynamicsProcessorType { Compressor, Limiter, Expander, Gate, Count, ESubmixEffectDynamicsProcessorType_MAX, __typeKeyDoNoAccess}
    enum ESubmixFilterAlgorithm { OnePole, StateVariable, Ladder, Count, ESubmixFilterAlgorithm_MAX, __typeKeyDoNoAccess}
    enum ESubmixFilterType { LowPass, HighPass, BandPass, BandStop, Count, ESubmixFilterType_MAX, __typeKeyDoNoAccess}
    enum ESuggestProjVelocityTraceOption { DoNotTrace, TraceFullPath, OnlyTraceWhileAscending, ESuggestProjVelocityTraceOption_MAX, __typeKeyDoNoAccess}
    enum ESynth1OscType { Sine, Saw, Triangle, Square, Noise, Count, ESynth1OscType_MAX, __typeKeyDoNoAccess}
    enum ESynthFilterAlgorithm { OnePole, StateVariable, Ladder, Count, ESynthFilterAlgorithm_MAX, __typeKeyDoNoAccess}
    enum ESynthFilterType { LowPass, HighPass, BandPass, BandStop, Count, ESynthFilterType_MAX, __typeKeyDoNoAccess}
    enum ESynthKnobSize { Medium, Large, Count, ESynthKnobSize_MAX, __typeKeyDoNoAccess}
    enum ESynthLFOMode { Sync, OneShot, Free, Count, ESynthLFOMode_MAX, __typeKeyDoNoAccess}
    enum ESynthLFOPatchType { PatchToNone, PatchToGain, PatchToOscFreq, PatchToFilterFreq, PatchToFilterQ, PatchToOscPulseWidth, PatchToOscPan, PatchLFO1ToLFO2Frequency, PatchLFO1ToLFO2Gain, Count, ESynthLFOPatchType_MAX, __typeKeyDoNoAccess}
    enum ESynthLFOType { Sine, UpSaw, DownSaw, Square, Triangle, Exponential, RandomSampleHold, Count, ESynthLFOType_MAX, __typeKeyDoNoAccess}
    enum ESynthModEnvBiasPatch { PatchToNone, PatchToOscFreq, PatchToFilterFreq, PatchToFilterQ, PatchToLFO1Gain, PatchToLFO2Gain, PatchToLFO1Freq, PatchToLFO2Freq, Count, ESynthModEnvBiasPatch_MAX, __typeKeyDoNoAccess}
    enum ESynthModEnvPatch { PatchToNone, PatchToOscFreq, PatchToFilterFreq, PatchToFilterQ, PatchToLFO1Gain, PatchToLFO2Gain, PatchToLFO1Freq, PatchToLFO2Freq, Count, ESynthModEnvPatch_MAX, __typeKeyDoNoAccess}
    enum ESynthSlateColorStyle { Light, Dark, Count, ESynthSlateColorStyle_MAX, __typeKeyDoNoAccess}
    enum ESynthSlateSizeType { Small, Medium, Large, Count, ESynthSlateSizeType_MAX, __typeKeyDoNoAccess}
    enum ESynthStereoDelayMode { Normal, Cross, PingPong, Count, ESynthStereoDelayMode_MAX, __typeKeyDoNoAccess}
    enum ESystemGestureBehavior { None, SwapMaterial, ESystemGestureBehavior_MAX, __typeKeyDoNoAccess}
    enum ETableViewMode { List, Tile, Tree, ETableViewMode_MAX, __typeKeyDoNoAccess}
    enum ETapLineMode { SendToChannel, Panning, Disabled, ETapLineMode_MAX, __typeKeyDoNoAccess}
    enum ETeamAttitude { Friendly, Neutral, Hostile, ETeamAttitude_MAX, __typeKeyDoNoAccess}
    enum ETerrainCoordMappingType { TCMT_Auto, TCMT_XY, TCMT_XZ, TCMT_YZ, TCMT_MAX, __typeKeyDoNoAccess}
    enum ETestEnumFlags { None, One, Two, Four, ETestEnumFlags_MAX, __typeKeyDoNoAccess}
    enum ETexAlign { TEXALIGN_None, TEXALIGN_Default, TEXALIGN_Box, TEXALIGN_Planar, TEXALIGN_Fit, TEXALIGN_PlanarAuto, TEXALIGN_PlanarWall, TEXALIGN_PlanarFloor, TEXALIGN_MAX, __typeKeyDoNoAccess}
    enum ETextAssetCommandletMode { ResaveText, ResaveBinary, RoundTrip, LoadBinary, LoadText, FindMismatchedSerializers, GenerateSchema, ETextAssetCommandletMode_MAX, __typeKeyDoNoAccess}
    enum ETextGender { Masculine, Feminine, Neuter, ETextGender_MAX, __typeKeyDoNoAccess}
    enum ETextTransformPolicy { None, ToLower, ToUpper, ETextTransformPolicy_MAX, __typeKeyDoNoAccess}
    enum ETextureColorChannel { TCC_Red, TCC_Green, TCC_Blue, TCC_Alpha, TCC_MAX, __typeKeyDoNoAccess}
    enum ETextureMipCount { TMC_ResidentMips, TMC_AllMips, TMC_AllMipsBiased, TMC_MAX, __typeKeyDoNoAccess}
    enum ETextureMipValueMode { TMVM_None, TMVM_MipLevel, TMVM_MipBias, TMVM_Derivative, TMVM_MAX, __typeKeyDoNoAccess}
    enum ETextureObjectSets { TextureObjectSet_CurrentStreamingLevel, TextureObjectSet_AllStreamingLevels, TextureObjectSet_SelectedActors, TextureObjectSet_SelectedMaterials, TextureObjectSet_MAX, __typeKeyDoNoAccess}
    enum ETexturePaintIndex { TextureOne, TextureTwo, TextureThree, TextureFour, TextureFive, ETexturePaintIndex_MAX, __typeKeyDoNoAccess}
    enum ETexturePaintWeightIndex { TextureOne, TextureTwo, TextureThree, TextureFour, TextureFive, ETexturePaintWeightIndex_MAX, __typeKeyDoNoAccess}
    enum ETexturePaintWeightTypes { AlphaLerp, RGB, ARGB, OneMinusARGB, ETexturePaintWeightTypes_MAX, __typeKeyDoNoAccess}
    enum ETextureSamplerFilter { Point, Bilinear, Trilinear, AnisotropicPoint, AnisotropicLinear, ETextureSamplerFilter_MAX, __typeKeyDoNoAccess}
    enum ETextureSourceArtType { TSAT_Uncompressed, TSAT_PNGCompressed, TSAT_DDSFile, TSAT_MAX, __typeKeyDoNoAccess}
    enum ETextureWeightTypes { AlphaLerp, RGB, ARGB, OneMinusARGB, ETextureWeightTypes_MAX, __typeKeyDoNoAccess}
    enum ETextWrappingPolicy { DefaultWrapping, AllowPerCharacterWrapping, ETextWrappingPolicy_MAX, __typeKeyDoNoAccess}
    enum EThreePlayerSplitScreenType { FavorTop, FavorBottom, Vertical, Horizontal, EThreePlayerSplitScreenType_MAX, __typeKeyDoNoAccess}
    enum EThumbnailPrimType { TPT_None, TPT_Sphere, TPT_Cube, TPT_Plane, TPT_Cylinder, TPT_MAX, __typeKeyDoNoAccess}
    enum EThumbnailQuality { Draft, Normal, Best, EThumbnailQuality_MAX, __typeKeyDoNoAccess}
    enum ETickMode { Disabled, Enabled, Automatic, ETickMode_MAX, __typeKeyDoNoAccess}
    enum ETileMapProjectionMode { Orthogonal, IsometricDiamond, IsometricStaggered, HexagonalStaggered, ETileMapProjectionMode_MAX, __typeKeyDoNoAccess}
    enum ETimedDataInputEvaluationType { None, Timecode, PlatformTime, ETimedDataInputEvaluationType_MAX, __typeKeyDoNoAccess}
    enum ETimedDataInputState { Connected, Unresponsive, Disconnected, ETimedDataInputState_MAX, __typeKeyDoNoAccess}
    enum ETimelineDirection { Forward, Backward, ETimelineDirection_MAX, __typeKeyDoNoAccess}
    enum ETimelineSigType { ETS_EventSignature, ETS_FloatSignature, ETS_VectorSignature, ETS_LinearColorSignature, ETS_InvalidSignature, ETS_MAX, __typeKeyDoNoAccess}
    enum ETimeStretchCurveMapping { T_Original, T_TargetMin, T_TargetMax, MAX, __typeKeyDoNoAccess}
    enum ETimezoneSetting { InternationalDateLineWest, CoordinatedUniversalTimeNeg11, Samoa, Hawaii, Alaska, PacificTime_USCAN, BajaCalifornia, MountainTime_USCAN, Chihuahua_LaPaz_Mazatlan, Arizona, Saskatchewan, CentralAmerica, CentralTime_USCAN, Guadalajara_MexicoCity_Monterrey, EasternTime_USCAN, Bogota_Lima_Quito, Indiana_US, Caracas, AtlanticTime_Canada, Cuiaba, Santiago, Georgetown_LaPaz_Manaus_SanJuan, Asuncion, Newfoundland, Brasilia, Greenland, Montevideo, Cayenne_Fortaleza, BuenosAires, MidAtlantic, CoordinatedUniversalTimeNeg02, Azores, CaboVerdeIs, Dublin_Edinburgh_Lisbon_London, Monrovia_Reykjavik, Casablanca, UTC, Belgrade_Bratislava_Budapest_Ljubljana_Prague, Sarajevo_Skopje_Warsaw_Zagreb, Brussels_Copenhagen_Madrid_Paris, WestCentralAfrica, Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna, Windhoek, Minsk, Cairo, Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius, Athens_Bucharest, Jerusalem, Amman, Beirut, Harare_Pretoria, Damascus, Istanbul, Kuwait_Riyadh, Baghdad, Nairobi, Kaliningrad, Tehran, Moscow_StPetersburg_Volgograd, AbuDhabi_Muscat, Baku, Yerevan, Tbilisi, PortLouis, Kabul, Tashkent, Islamabad_Karachi, Chennai_Kolkata_Mumbai_NewDelhi, SriJayawardenepura, Kathmandu, Ekaterinburg, Astana, Dhaka, Yangon_Rangoon, Novosibirsk, Bangkok_Hanoi_Jakarta, Krasnoyarsk, Beijing_Chongqing_HongKong_Urumqi, KualaLumpur_Singapore, Taipei, Perth, Ulaanbaatar, Irkutsk, Seoul, Osaka_Sapporo_Tokyo, Darwin, Adelaide, Yakutsk, Canberra_Melbourne_Sydney, Brisbane, Hobart, Guam_PortMoresby, Vladivostok, SolomonIs_NewCaledonia, Magadan, Fiji, Auckland_Wellington, CoordinatedUniversalTime12, Nukualofa, LocalTime, ETimezoneSetting_MAX, __typeKeyDoNoAccess}
    enum EToolChangeTrackingMode { NoChangeTracking, UndoToExit, FullUndoRedo, EToolChangeTrackingMode_MAX, __typeKeyDoNoAccess}
    enum EToolContextCoordinateSystem { World, Local, EToolContextCoordinateSystem_MAX, __typeKeyDoNoAccess}
    enum EToolMenuStringCommandType { Command, Python, Custom, EToolMenuStringCommandType_MAX, __typeKeyDoNoAccess}
    enum EToolMessageLevel { Internal, UserMessage, UserNotification, UserWarning, UserError, EToolMessageLevel_MAX, __typeKeyDoNoAccess}
    enum EToolSide { Left, Mouse, Right, EToolSide_MAX, __typeKeyDoNoAccess}
    enum EToolTransformInterpType { Linear, Sinusoidal, Cubic, CircularIn, CircularOut, ExpIn, ExpOut, EToolTransformInterpType_MAX, __typeKeyDoNoAccess}
    enum EToTest { V0, V1, V13, EToTest_MAX, __typeKeyDoNoAccess}
    enum ETouchSwipeDirection { None, Left, Right, Up, Down, ETouchSwipeDirection_MAX, __typeKeyDoNoAccess}
    enum ETouchType { Began, Moved, Stationary, ForceChanged, FirstMove, Ended, NumTypes, ETouchType_MAX, __typeKeyDoNoAccess}
    enum ETrackedDeviceType { None, HMD, LTouch, RTouch, Touch, DeviceObjectZero, All, ETrackedDeviceType_MAX, __typeKeyDoNoAccess}
    enum ETrackingConfidence { Low, High, ETrackingConfidence_MAX, __typeKeyDoNoAccess}
    enum ETrackingStatus { NotTracked, InertialOnly, Tracked, ETrackingStatus_MAX, __typeKeyDoNoAccess}
    enum ETrackToggleAction { ETTA_Off, ETTA_On, ETTA_Toggle, ETTA_Trigger, ETTA_MAX, __typeKeyDoNoAccess}
    enum ETrail2SourceMethod { PET2SRCM_Default, PET2SRCM_Particle, PET2SRCM_Actor, PET2SRCM_MAX, __typeKeyDoNoAccess}
    enum ETrailsRenderAxisOption { Trails_CameraUp, Trails_SourceUp, Trails_WorldUp, Trails_MAX, __typeKeyDoNoAccess}
    enum ETransformGizmoSubElements { None, TranslateAxisX, TranslateAxisY, TranslateAxisZ, TranslateAllAxes, TranslatePlaneXY, TranslatePlaneXZ, TranslatePlaneYZ, TranslateAllPlanes, RotateAxisX, RotateAxisY, RotateAxisZ, RotateAllAxes, ScaleAxisX, ScaleAxisY, ScaleAxisZ, ScaleAllAxes, ScalePlaneYZ, ScalePlaneXZ, ScalePlaneXY, ScaleAllPlanes, ScaleUniform, StandardTranslateRotate, TranslateRotateUniformScale, FullTranslateRotateScale, ETransformGizmoSubElements_MAX, __typeKeyDoNoAccess}
    enum ETransitionGetter { AnimationAsset_GetCurrentTime, AnimationAsset_GetLength, AnimationAsset_GetCurrentTimeFraction, AnimationAsset_GetTimeFromEnd, AnimationAsset_GetTimeFromEndFraction, CurrentState_ElapsedTime, CurrentState_GetBlendWeight, CurrentTransitionDuration, ArbitraryState_GetBlendWeight, ETransitionGetter_MAX, __typeKeyDoNoAccess}
    enum ETranslucentSortPolicy { SortByDistance, SortByProjectedZ, SortAlongAxis, ETranslucentSortPolicy_MAX, __typeKeyDoNoAccess}
    enum ETunnelBoundaryType { Unknown, EntrySite, InputSite, OutputSite, ETunnelBoundaryType_MAX, __typeKeyDoNoAccess}
    enum ETwitterIntegrationDelegate { TID_AuthorizeComplete, TID_TweetUIComplete, TID_RequestComplete, TID_MAX, __typeKeyDoNoAccess}
    enum ETwitterRequestMethod { TRM_Get, TRM_Post, TRM_Delete, TRM_MAX, __typeKeyDoNoAccess}
    enum ETwoPlayerSplitScreenType { Horizontal, Vertical, ETwoPlayerSplitScreenType_MAX, __typeKeyDoNoAccess}
    enum ETypeAdvanceAnim { ETAA_Default, ETAA_Finished, ETAA_Looped, ETAA_MAX, __typeKeyDoNoAccess}
    enum EUdpMessageFormat { None, Json, TaggedProperty, CborPlatformEndianness, CborStandardEndianness, EUdpMessageFormat_MAX, __typeKeyDoNoAccess}
    enum EUINavigationAction { Accept, Back, Num, Invalid, EUINavigationAction_MAX, __typeKeyDoNoAccess}
    enum EUIScalingRule { ShortestSide, LongestSide, Horizontal, Vertical, ScaleToFit, Custom, EUIScalingRule_MAX, __typeKeyDoNoAccess}
    class EulerTransform {
        constructor();
        constructor(Location: UE.Vector, Rotation: UE.Rotator, Scale: UE.Vector);
        Location: UE.Vector;
        Rotation: UE.Rotator;
        Scale: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EulerTransform_0__: boolean;
    }
    
    enum EUnusedAttributeBehaviour { Copy, Zero, None, MarkInvalid, PassThrough, EUnusedAttributeBehaviour_MAX, __typeKeyDoNoAccess}
    enum EVariantManagerTestEnum { None, FirstOption, SecondOption, ThirdOption, EVariantManagerTestEnum_MAX, __typeKeyDoNoAccess}
    enum EVectorFieldConstructionOp { VFCO_Extrude, VFCO_Revolve, VFCO_MAX, __typeKeyDoNoAccess}
    enum EVectorNoiseFunction { VNF_CellnoiseALU, VNF_VectorALU, VNF_GradientALU, VNF_CurlALU, VNF_VoronoiALU, VNF_MAX, __typeKeyDoNoAccess}
    enum EVectorVMBaseTypes { Float, Int, Bool, Num, EVectorVMBaseTypes_MAX, __typeKeyDoNoAccess}
    enum EVectorVMOp { done, add, sub, mul, div, mad, lerp, rcp, rsq, sqrt, neg, abs, exp, exp2, log, log2, sin, cos, tan, asin, acos, atan, atan2, ceil, floor, fmod, frac, trunc, clamp, min, max, pow, round, sign, step, random, noise, cmplt, cmple, cmpgt, cmpge, cmpeq, cmpneq, select, addi, subi, muli, divi, clampi, mini, maxi, absi, negi, signi, randomi, cmplti, cmplei, cmpgti, cmpgei, cmpeqi, cmpneqi, bit_and, bit_or, bit_xor, bit_not, bit_lshift, bit_rshift, logic_and, logic_or, logic_xor, logic_not, f2i, i2f, f2b, b2f, i2b, b2i, inputdata_float, inputdata_int32, inputdata_half, inputdata_noadvance_float, inputdata_noadvance_int32, inputdata_noadvance_half, outputdata_float, outputdata_int32, outputdata_half, acquireindex, external_func_call, exec_index, noise2D, noise3D, enter_stat_scope, exit_stat_scope, update_id, acquire_id, NumOpcodes, EVectorVMOp_MAX, __typeKeyDoNoAccess}
    enum EVectorVMOperandLocation { Register, Constant, Num, EVectorVMOperandLocation_MAX, __typeKeyDoNoAccess}
    enum EVehicleDifferential4W { LimitedSlip_4W, LimitedSlip_FrontDrive, LimitedSlip_RearDrive, Open_4W, Open_FrontDrive, Open_RearDrive, EVehicleDifferential4W_MAX, __typeKeyDoNoAccess}
    class MovieSceneEventParameters {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEventParameters_0__: boolean;
    }
    
    class EventPayload {
        constructor();
        constructor(EventName: string, Parameters: UE.MovieSceneEventParameters);
        EventName: string;
        Parameters: UE.MovieSceneEventParameters;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EventPayload_0__: boolean;
    }
    
    class EventTrackKey {
        constructor();
        constructor(Time: number, EventName: string);
        Time: number;
        EventName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EventTrackKey_0__: boolean;
    }
    
    enum EVertexColorImportOption { Replace, Ignore, Override, EVertexColorImportOption_MAX, __typeKeyDoNoAccess}
    enum EVertexColorMaskChannel { Red, Green, Blue, Alpha, MAX_None, EVertexColorMaskChannel_MAX, __typeKeyDoNoAccess}
    enum EVertexOffsetUsageType { None, PreSkinningOffset, PostSkinningOffset, EVertexOffsetUsageType_MAX, __typeKeyDoNoAccess}
    enum EVertexPaintAxis { X, Y, Z, EVertexPaintAxis_MAX, __typeKeyDoNoAccess}
    enum EVerticalTextAligment { EVRTA_TextTop, EVRTA_TextCenter, EVRTA_TextBottom, EVRTA_QuadTop, EVRTA_MAX, __typeKeyDoNoAccess}
    enum EViewInteractionState { None, Hovered, Focused, EViewInteractionState_MAX, __typeKeyDoNoAccess}
    enum EViewportWorldInteractionType { VR, Legacy, EViewportWorldInteractionType_MAX, __typeKeyDoNoAccess}
    enum EVisibilityTrackAction { EVTA_Hide, EVTA_Show, EVTA_Toggle, EVTA_MAX, __typeKeyDoNoAccess}
    enum EVisibilityTrackCondition { EVTC_Always, EVTC_GoreEnabled, EVTC_GoreDisabled, EVTC_MAX, __typeKeyDoNoAccess}
    enum EVREditorWidgetDrawingPolicy { Always, Hovering, EVREditorWidgetDrawingPolicy_MAX, __typeKeyDoNoAccess}
    enum EWASDType { WASD_Always, WASD_RMBOnly, WASD_Never, WASD_MAX, __typeKeyDoNoAccess}
    enum EWheelSweepType { SimpleAndComplex, Simple, Complex, EWheelSweepType_MAX, __typeKeyDoNoAccess}
    enum EWidgetBlendMode { Opaque, Masked, Transparent, EWidgetBlendMode_MAX, __typeKeyDoNoAccess}
    enum EWidgetDesignFlags { None, Designing, ShowOutline, ExecutePreConstruct, EWidgetDesignFlags_MAX, __typeKeyDoNoAccess}
    enum EWidgetGeometryMode { Plane, Cylinder, EWidgetGeometryMode_MAX, __typeKeyDoNoAccess}
    enum EWidgetInteractionSource { World, Mouse, CenterScreen, Custom, EWidgetInteractionSource_MAX, __typeKeyDoNoAccess}
    enum EWidgetSpace { World, Screen, EWidgetSpace_MAX, __typeKeyDoNoAccess}
    enum EWidgetSupportsDynamicCreation { Default, Yes, No, EWidgetSupportsDynamicCreation_MAX, __typeKeyDoNoAccess}
    enum EWidgetTestAppearLocation { Viewport, PlayerScreen, EWidgetTestAppearLocation_MAX, __typeKeyDoNoAccess}
    enum EWidgetTimingPolicy { RealTime, GameTime, EWidgetTimingPolicy_MAX, __typeKeyDoNoAccess}
    enum EWindowTitleBarMode { Overlay, VerticalBox, EWindowTitleBarMode_MAX, __typeKeyDoNoAccess}
    enum EWindowVisibility { Visible, SelfHitTestInvisible, EWindowVisibility_MAX, __typeKeyDoNoAccess}
    enum EWindSourceType { Directional, Point, EWindSourceType_MAX, __typeKeyDoNoAccess}
    enum EWorldPositionIncludedOffsets { WPT_Default, WPT_ExcludeAllShaderOffsets, WPT_CameraRelative, WPT_CameraRelativeNoOffsets, WPT_MAX, __typeKeyDoNoAccess}
    class ExpandableAreaStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(CollapsedImage: UE.SlateBrush, ExpandedImage: UE.SlateBrush, RolloutAnimationSeconds: number);
        CollapsedImage: UE.SlateBrush;
        ExpandedImage: UE.SlateBrush;
        RolloutAnimationSeconds: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExpandableAreaStyle_0__: boolean;
    }
    
    class ExpandableArea extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Style: UE.ExpandableAreaStyle;
        BorderBrush: UE.SlateBrush;
        BorderColor: UE.SlateColor;
        bIsExpanded: boolean;
        MaxHeight: number;
        HeaderPadding: UE.Margin;
        AreaPadding: UE.Margin;
        OnExpansionChanged: $MulticastDelegate<(Area: $Nullable<UE.ExpandableArea>, bIsExpanded: boolean) => void>;
        HeaderContent: UE.Widget;
        BodyContent: UE.Widget;
        GetIsExpanded() : boolean;
        SetIsExpanded(IsExpanded: boolean) : void;
        SetIsExpanded_Animated(IsExpanded: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExpandableArea;
        static Load(InName: string): ExpandableArea;
    
        __tid_ExpandableArea_0__: boolean;
    }
    
    class ExponentialHeightFogData {
        constructor();
        constructor(FogDensity: number, FogHeightFalloff: number, FogHeightOffset: number);
        FogDensity: number;
        FogHeightFalloff: number;
        FogHeightOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExponentialHeightFogData_0__: boolean;
    }
    
    class ExponentialHeightFogComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FogDensity: number;
        FogHeightFalloff: number;
        SecondFogData: UE.ExponentialHeightFogData;
        FogInscatteringColor: UE.LinearColor;
        InscatteringColorCubemap: UE.TextureCube;
        InscatteringColorCubemapAngle: number;
        InscatteringTextureTint: UE.LinearColor;
        FullyDirectionalInscatteringColorDistance: number;
        NonDirectionalInscatteringColorDistance: number;
        DirectionalInscatteringExponent: number;
        DirectionalInscatteringStartDistance: number;
        DirectionalInscatteringColor: UE.LinearColor;
        FogMaxOpacity: number;
        StartDistance: number;
        FogCutoffDistance: number;
        bEnableVolumetricFog: boolean;
        VolumetricFogScatteringDistribution: number;
        VolumetricFogAlbedo: UE.Color;
        VolumetricFogEmissive: UE.LinearColor;
        VolumetricFogExtinctionScale: number;
        VolumetricFogDistance: number;
        VolumetricFogStaticLightingScatteringIntensity: number;
        bOverrideLightColorsWithFogInscatteringColors: boolean;
        SetDirectionalInscatteringColor(Value: UE.LinearColor) : void;
        SetDirectionalInscatteringExponent(Value: number) : void;
        SetDirectionalInscatteringStartDistance(Value: number) : void;
        SetFogCutoffDistance(Value: number) : void;
        SetFogDensity(Value: number) : void;
        SetFogHeightFalloff(Value: number) : void;
        SetFogInscatteringColor(Value: UE.LinearColor) : void;
        SetFogMaxOpacity(Value: number) : void;
        SetFullyDirectionalInscatteringColorDistance(Value: number) : void;
        SetInscatteringColorCubemap(Value: $Nullable<UE.TextureCube>) : void;
        SetInscatteringColorCubemapAngle(Value: number) : void;
        SetInscatteringTextureTint(Value: UE.LinearColor) : void;
        SetNonDirectionalInscatteringColorDistance(Value: number) : void;
        SetStartDistance(Value: number) : void;
        SetVolumetricFog(bNewValue: boolean) : void;
        SetVolumetricFogAlbedo(NewValue: UE.Color) : void;
        SetVolumetricFogDistance(NewValue: number) : void;
        SetVolumetricFogEmissive(NewValue: UE.LinearColor) : void;
        SetVolumetricFogExtinctionScale(NewValue: number) : void;
        SetVolumetricFogScatteringDistribution(NewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExponentialHeightFogComponent;
        static Load(InName: string): ExponentialHeightFogComponent;
    
        __tid_ExponentialHeightFogComponent_0__: boolean;
    }
    
    class ExponentialHeightFog extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Component: UE.ExponentialHeightFogComponent;
        bEnabled: boolean;
        OnRep_bEnabled() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExponentialHeightFog;
        static Load(InName: string): ExponentialHeightFog;
    
        __tid_ExponentialHeightFog_0__: boolean;
    }
    
    class GatherTextCommandletBase extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GatherTextCommandletBase;
        static Load(InName: string): GatherTextCommandletBase;
    
        __tid_GatherTextCommandletBase_0__: boolean;
    }
    
    class ExportDialogueScriptCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExportDialogueScriptCommandlet;
        static Load(InName: string): ExportDialogueScriptCommandlet;
    
        __tid_ExportDialogueScriptCommandlet_0__: boolean;
    }
    
    class ExportPakDependenciesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExportPakDependenciesCommandlet;
        static Load(InName: string): ExportPakDependenciesCommandlet;
    
        __tid_ExportPakDependenciesCommandlet_0__: boolean;
    }
    
    class ExportTextContainer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ExportText: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExportTextContainer;
        static Load(InName: string): ExportTextContainer;
    
        __tid_ExportTextContainer_0__: boolean;
    }
    
    class ExposureSettings {
        constructor();
        constructor(FixedEV100: number, bFixed: boolean);
        FixedEV100: number;
        bFixed: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ExposureSettings_0__: boolean;
    }
    
    enum EXRDeviceConnectionResult { NoTrackingSystem, FeatureNotSupported, NoValidViewport, MiscFailure, Success, EXRDeviceConnectionResult_MAX, __typeKeyDoNoAccess}
    enum EXRSystemFlags { NoFlags, IsAR, IsTablet, IsHeadMounted, SupportsHandTracking, EXRSystemFlags_MAX, __typeKeyDoNoAccess}
    enum EXRTrackedDeviceType { HeadMountedDisplay, Controller, TrackingReference, Other, Invalid, Any, EXRTrackedDeviceType_MAX, __typeKeyDoNoAccess}
    enum EXRVisualType { Controller, Hand, EXRVisualType_MAX, __typeKeyDoNoAccess}
    class ExtensionMethods extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ExtensionMethods;
        static Load(InName: string): ExtensionMethods;
    
        __tid_ExtensionMethods_0__: boolean;
    }
    
    class EyeTrackerStereoGazeData {
        constructor();
        constructor(LeftEyeOrigin: UE.Vector, LeftEyeDirection: UE.Vector, RightEyeOrigin: UE.Vector, RightEyeDirection: UE.Vector, FixationPoint: UE.Vector, ConfidenceValue: number);
        LeftEyeOrigin: UE.Vector;
        LeftEyeDirection: UE.Vector;
        RightEyeOrigin: UE.Vector;
        RightEyeDirection: UE.Vector;
        FixationPoint: UE.Vector;
        ConfidenceValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EyeTrackerStereoGazeData_0__: boolean;
    }
    
    class EyeTrackerGazeData {
        constructor();
        constructor(GazeOrigin: UE.Vector, GazeDirection: UE.Vector, FixationPoint: UE.Vector, ConfidenceValue: number);
        GazeOrigin: UE.Vector;
        GazeDirection: UE.Vector;
        FixationPoint: UE.Vector;
        ConfidenceValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_EyeTrackerGazeData_0__: boolean;
    }
    
    class EyeTrackerFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetGazeData(OutGazeData: $Ref<UE.EyeTrackerGazeData>) : boolean;
        static GetStereoGazeData(OutGazeData: $Ref<UE.EyeTrackerStereoGazeData>) : boolean;
        static IsEyeTrackerConnected() : boolean;
        static IsStereoGazeDataAvailable() : boolean;
        static SetEyeTrackedPlayer(PlayerController: $Nullable<UE.PlayerController>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): EyeTrackerFunctionLibrary;
        static Load(InName: string): EyeTrackerFunctionLibrary;
    
        __tid_EyeTrackerFunctionLibrary_0__: boolean;
    }
    
    class FABRIKChainLink {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FABRIKChainLink_0__: boolean;
    }
    
    class FacialAnimationBulkImporterSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceImportPath: UE.DirectoryPath;
        TargetImportPath: UE.DirectoryPath;
        CurveNodeName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FacialAnimationBulkImporterSettings;
        static Load(InName: string): FacialAnimationBulkImporterSettings;
    
        __tid_FacialAnimationBulkImporterSettings_0__: boolean;
    }
    
    class FallbackStruct {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FallbackStruct_0__: boolean;
    }
    
    class FastArraySerializer {
        constructor();
        constructor(ArrayReplicationKey: number, DeltaFlags: UE.EFastArraySerializerDeltaFlags);
        ArrayReplicationKey: number;
        DeltaFlags: UE.EFastArraySerializerDeltaFlags;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FastArraySerializer_0__: boolean;
    }
    
    class FastArraySerializerItem {
        constructor();
        constructor(ReplicationID: number, ReplicationKey: number, MostRecentArrayReplicationKey: number);
        ReplicationID: number;
        ReplicationKey: number;
        MostRecentArrayReplicationKey: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FastArraySerializerItem_0__: boolean;
    }
    
    class FbxSceneImportData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceFbxFile: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxSceneImportData;
        static Load(InName: string): FbxSceneImportData;
    
        __tid_FbxSceneImportData_0__: boolean;
    }
    
    class FbxAssetImportData extends UE.AssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportTranslation: UE.Vector;
        ImportRotation: UE.Rotator;
        ImportUniformScale: number;
        bConvertScene: boolean;
        bForceFrontXAxis: boolean;
        bConvertSceneUnit: boolean;
        bImportAsScene: boolean;
        FbxSceneImportDataReference: UE.FbxSceneImportData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxAssetImportData;
        static Load(InName: string): FbxAssetImportData;
    
        __tid_FbxAssetImportData_0__: boolean;
    }
    
    class Int32Interval {
        constructor();
        constructor(Min: number, Max: number);
        Min: number;
        Max: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Int32Interval_0__: boolean;
    }
    
    class FbxAnimSequenceImportData extends UE.FbxAssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bImportMeshesInBoneHierarchy: boolean;
        AnimationLength: UE.EFBXAnimationLengthImportType;
        StartFrame: number;
        EndFrame: number;
        FrameImportRange: UE.Int32Interval;
        bUseDefaultSampleRate: boolean;
        CustomSampleRate: number;
        SourceAnimationName: string;
        bImportCustomAttribute: boolean;
        bDeleteExistingCustomAttributeCurves: boolean;
        bDeleteExistingNonCurveCustomAttributes: boolean;
        bImportBoneTracks: boolean;
        bSetMaterialDriveParameterOnCustomAttribute: boolean;
        MaterialCurveSuffixes: TArray<string>;
        bRemoveRedundantKeys: boolean;
        bDeleteExistingMorphTargetCurves: boolean;
        bDoNotImportCurveWithZero: boolean;
        bPreserveLocalTransform: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxAnimSequenceImportData;
        static Load(InName: string): FbxAnimSequenceImportData;
    
        __tid_FbxAnimSequenceImportData_0__: boolean;
    }
    
    class FbxExportOption extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FbxExportCompatibility: UE.EFbxExportCompatibility;
        bASCII: boolean;
        bForceFrontXAxis: boolean;
        VertexColor: boolean;
        LevelOfDetail: boolean;
        Collision: boolean;
        bExportMorphTargets: boolean;
        bExportPreviewMesh: boolean;
        MapSkeletalMotionToRoot: boolean;
        bExportLocalTime: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxExportOption;
        static Load(InName: string): FbxExportOption;
    
        __tid_FbxExportOption_0__: boolean;
    }
    
    class ImportMeshLodSectionsData {
        constructor();
        constructor(SectionOriginalMaterialName: TArray<string>);
        SectionOriginalMaterialName: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ImportMeshLodSectionsData_0__: boolean;
    }
    
    class FbxMeshImportData extends UE.FbxAssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bTransformVertexToAbsolute: boolean;
        bBakePivotInVertex: boolean;
        bImportMeshLODs: boolean;
        NormalImportMethod: UE.EFBXNormalImportMethod;
        NormalGenerationMethod: UE.EFBXNormalGenerationMethod;
        bComputeWeightedNormals: boolean;
        bReorderMaterialToFbxOrder: boolean;
        ImportMaterialOriginalNameData: TArray<string>;
        ImportMeshLodData: TArray<UE.ImportMeshLodSectionsData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxMeshImportData;
        static Load(InName: string): FbxMeshImportData;
    
        __tid_FbxMeshImportData_0__: boolean;
    }
    
    class FbxStaticMeshImportData extends UE.FbxMeshImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StaticMeshLODGroup: string;
        VertexColorImportOption: UE.EVertexColorImportOption;
        VertexOverrideColor: UE.Color;
        bRemoveDegenerates: boolean;
        bBuildAdjacencyBuffer: boolean;
        bBuildReversedIndexBuffer: boolean;
        bGenerateLightmapUVs: boolean;
        bOneConvexHullPerUCX: boolean;
        bAutoGenerateCollision: boolean;
        bCombineMeshes: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxStaticMeshImportData;
        static Load(InName: string): FbxStaticMeshImportData;
    
        __tid_FbxStaticMeshImportData_0__: boolean;
    }
    
    class FbxSkeletalMeshImportData extends UE.FbxMeshImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportContentType: UE.EFBXImportContentType;
        LastImportContentType: UE.EFBXImportContentType;
        VertexColorImportOption: UE.EVertexColorImportOption;
        VertexOverrideColor: UE.Color;
        bUpdateSkeletonReferencePose: boolean;
        bUseT0AsRefPose: boolean;
        bPreserveSmoothingGroups: boolean;
        bImportMeshesInBoneHierarchy: boolean;
        bImportMorphTargets: boolean;
        ThresholdPosition: number;
        ThresholdTangentNormal: number;
        ThresholdUV: number;
        MorphThresholdPosition: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxSkeletalMeshImportData;
        static Load(InName: string): FbxSkeletalMeshImportData;
    
        __tid_FbxSkeletalMeshImportData_0__: boolean;
    }
    
    class FbxTextureImportData extends UE.FbxAssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bInvertNormalMaps: boolean;
        MaterialSearchLocation: UE.EMaterialSearchLocation;
        BaseMaterialName: UE.SoftObjectPath;
        BaseColorName: string;
        BaseDiffuseTextureName: string;
        BaseNormalTextureName: string;
        BaseEmissiveColorName: string;
        BaseEmmisiveTextureName: string;
        BaseSpecularTextureName: string;
        BaseOpacityTextureName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxTextureImportData;
        static Load(InName: string): FbxTextureImportData;
    
        __tid_FbxTextureImportData_0__: boolean;
    }
    
    class FbxImportUI extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsObjImport: boolean;
        OriginalImportType: UE.EFBXImportType;
        MeshTypeToImport: UE.EFBXImportType;
        bOverrideFullName: boolean;
        bImportAsSkeletal: boolean;
        bImportMesh: boolean;
        Skeleton: UE.Skeleton;
        bCreatePhysicsAsset: boolean;
        PhysicsAsset: UE.PhysicsAsset;
        bAutoComputeLodDistances: boolean;
        LodDistance0: number;
        LodDistance1: number;
        LodDistance2: number;
        LodDistance3: number;
        LodDistance4: number;
        LodDistance5: number;
        LodDistance6: number;
        LodDistance7: number;
        MinimumLodNumber: number;
        LodNumber: number;
        bImportAnimations: boolean;
        OverrideAnimationName: string;
        bImportRigidMesh: boolean;
        bImportMaterials: boolean;
        bImportTextures: boolean;
        bResetToFbxOnMaterialConflict: boolean;
        StaticMeshImportData: UE.FbxStaticMeshImportData;
        SkeletalMeshImportData: UE.FbxSkeletalMeshImportData;
        AnimSequenceImportData: UE.FbxAnimSequenceImportData;
        TextureImportData: UE.FbxTextureImportData;
        bAutomatedImportShouldDetectType: boolean;
        FileVersion: string;
        FileCreator: string;
        FileCreatorApplication: string;
        FileUnits: string;
        FileAxisDirection: string;
        FileSampleRate: string;
        AnimStartFrame: string;
        AnimEndFrame: string;
        ResetToDefault() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxImportUI;
        static Load(InName: string): FbxImportUI;
    
        __tid_FbxImportUI_0__: boolean;
    }
    
    class FbxFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportUI: UE.FbxImportUI;
        OriginalImportUI: UE.FbxImportUI;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxFactory;
        static Load(InName: string): FbxFactory;
    
        __tid_FbxFactory_0__: boolean;
    }
    
    class SceneImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneImportFactory;
        static Load(InName: string): SceneImportFactory;
    
        __tid_SceneImportFactory_0__: boolean;
    }
    
    class FbxSceneImportOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCreateContentFolderHierarchy: boolean;
        bImportAsDynamic: boolean;
        HierarchyType: UE.EFBXSceneOptionsCreateHierarchyType;
        bForceFrontXAxis: boolean;
        ImportTranslation: UE.Vector;
        ImportRotation: UE.Rotator;
        ImportUniformScale: number;
        bTransformVertexToAbsolute: boolean;
        bBakePivotInVertex: boolean;
        bImportStaticMeshLODs: boolean;
        bImportSkeletalMeshLODs: boolean;
        bInvertNormalMaps: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxSceneImportOptions;
        static Load(InName: string): FbxSceneImportOptions;
    
        __tid_FbxSceneImportOptions_0__: boolean;
    }
    
    class FbxSceneImportOptionsStaticMesh extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StaticMeshLODGroup: string;
        bAutoGenerateCollision: boolean;
        VertexColorImportOption: UE.EFbxSceneVertexColorImportOption;
        VertexOverrideColor: UE.Color;
        bRemoveDegenerates: boolean;
        bBuildAdjacencyBuffer: boolean;
        bBuildReversedIndexBuffer: boolean;
        bGenerateLightmapUVs: boolean;
        bOneConvexHullPerUCX: boolean;
        NormalImportMethod: UE.EFBXSceneNormalImportMethod;
        NormalGenerationMethod: UE.EFBXSceneNormalGenerationMethod;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxSceneImportOptionsStaticMesh;
        static Load(InName: string): FbxSceneImportOptionsStaticMesh;
    
        __tid_FbxSceneImportOptionsStaticMesh_0__: boolean;
    }
    
    class FbxSceneImportOptionsSkeletalMesh extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUpdateSkeletonReferencePose: boolean;
        bCreatePhysicsAsset: boolean;
        bUseT0AsRefPose: boolean;
        bPreserveSmoothingGroups: boolean;
        bImportMeshesInBoneHierarchy: boolean;
        bImportMorphTargets: boolean;
        ThresholdPosition: number;
        ThresholdTangentNormal: number;
        ThresholdUV: number;
        MorphThresholdPosition: number;
        bImportAnimations: boolean;
        AnimationLength: UE.EFBXAnimationLengthImportType;
        FrameImportRange: UE.Int32Interval;
        bUseDefaultSampleRate: boolean;
        CustomSampleRate: number;
        bImportCustomAttribute: boolean;
        bDeleteExistingCustomAttributeCurves: boolean;
        bDeleteExistingNonCurveCustomAttributes: boolean;
        bPreserveLocalTransform: boolean;
        bDeleteExistingMorphTargetCurves: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxSceneImportOptionsSkeletalMesh;
        static Load(InName: string): FbxSceneImportOptionsSkeletalMesh;
    
        __tid_FbxSceneImportOptionsSkeletalMesh_0__: boolean;
    }
    
    class FbxSceneImportFactory extends UE.SceneImportFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SceneImportOptions: UE.FbxSceneImportOptions;
        SceneImportOptionsStaticMesh: UE.FbxSceneImportOptionsStaticMesh;
        SceneImportOptionsSkeletalMesh: UE.FbxSceneImportOptionsSkeletalMesh;
        StaticMeshImportData: UE.FbxStaticMeshImportData;
        SkeletalMeshImportData: UE.FbxSkeletalMeshImportData;
        AnimSequenceImportData: UE.FbxAnimSequenceImportData;
        TextureImportData: UE.FbxTextureImportData;
        ReimportData: UE.FbxSceneImportData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxSceneImportFactory;
        static Load(InName: string): FbxSceneImportFactory;
    
        __tid_FbxSceneImportFactory_0__: boolean;
    }
    
    class FbxTestPlanExpectedResult {
        constructor();
        constructor(ExpectedPresetsType: UE.EFBXExpectedResultPreset, ExpectedPresetsDataInteger: TArray<number>, ExpectedPresetsDataFloat: TArray<number>, ExpectedPresetsDataDouble: TArray<number>, ExpectedPresetsDataString: TArray<string>);
        ExpectedPresetsType: UE.EFBXExpectedResultPreset;
        ExpectedPresetsDataInteger: TArray<number>;
        ExpectedPresetsDataFloat: TArray<number>;
        ExpectedPresetsDataDouble: TArray<number>;
        ExpectedPresetsDataString: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FbxTestPlanExpectedResult_0__: boolean;
    }
    
    class FbxTestPlan extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TestPlanName: string;
        Action: UE.EFBXTestPlanActionType;
        LodIndex: number;
        bDeleteFolderAssets: boolean;
        ExpectedResult: TArray<UE.FbxTestPlanExpectedResult>;
        ImportUI: UE.FbxImportUI;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FbxTestPlan;
        static Load(InName: string): FbxTestPlan;
    
        __tid_FbxTestPlan_0__: boolean;
    }
    
    class FeatureAdditionalFiles {
        constructor();
        constructor(DestinationFilesFolder: string, AdditionalFilesList: TArray<string>);
        DestinationFilesFolder: string;
        AdditionalFilesList: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FeatureAdditionalFiles_0__: boolean;
    }
    
    class FFITestGameInstance extends UE.GameInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FFITestGameInstance;
        static Load(InName: string): FFITestGameInstance;
    
        __tid_FFITestGameInstance_0__: boolean;
    }
    
    class FieldNodeInt extends UE.FieldNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldNodeInt;
        static Load(InName: string): FieldNodeInt;
    
        __tid_FieldNodeInt_0__: boolean;
    }
    
    class FieldNodeVector extends UE.FieldNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldNodeVector;
        static Load(InName: string): FieldNodeVector;
    
        __tid_FieldNodeVector_0__: boolean;
    }
    
    class FieldSystemMetaDataIteration extends UE.FieldSystemMetaData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Iterations: number;
        SetMetaDataIteration(Iterations: number) : UE.FieldSystemMetaDataIteration;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldSystemMetaDataIteration;
        static Load(InName: string): FieldSystemMetaDataIteration;
    
        __tid_FieldSystemMetaDataIteration_0__: boolean;
    }
    
    class FieldSystemMetaDataProcessingResolution extends UE.FieldSystemMetaData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResolutionType: UE.EFieldResolutionType;
        SetMetaDataaProcessingResolutionType(ResolutionType: UE.EFieldResolutionType) : UE.FieldSystemMetaDataProcessingResolution;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FieldSystemMetaDataProcessingResolution;
        static Load(InName: string): FieldSystemMetaDataProcessingResolution;
    
        __tid_FieldSystemMetaDataProcessingResolution_0__: boolean;
    }
    
    class FileMediaSource extends UE.BaseMediaSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FilePath: string;
        PrecacheFile: boolean;
        SetFilePath(Path: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FileMediaSource;
        static Load(InName: string): FileMediaSource;
    
        __tid_FileMediaSource_0__: boolean;
    }
    
    class FileMediaSourceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FileMediaSourceFactoryNew;
        static Load(InName: string): FileMediaSourceFactoryNew;
    
        __tid_FileMediaSourceFactoryNew_0__: boolean;
    }
    
    class FileServerCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FileServerCommandlet;
        static Load(InName: string): FileServerCommandlet;
    
        __tid_FileServerCommandlet_0__: boolean;
    }
    
    class FileServerReady {
        constructor();
        constructor(AddressList: TArray<string>, InstanceId: UE.Guid);
        AddressList: TArray<string>;
        InstanceId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FileServerReady_0__: boolean;
    }
    
    class FileSystemOperation extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateDirectory(Path: string) : void;
        static DirectoryExists(Path: string) : boolean;
        static FileExists(Path: string) : boolean;
        static FileMD5Hash(Path: string) : string;
        static GetCurrentDirectory() : string;
        static GetDirectories(Path: string) : TArray<string>;
        static GetFiles(Path: string) : TArray<string>;
        static PuertsNotifyChange(Path: string, Source: string) : void;
        static ReadFile(Path: string, Data: $Ref<string>) : boolean;
        static ResolvePath(Path: string) : string;
        static WriteFile(Path: string, Data: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FileSystemOperation;
        static Load(InName: string): FileSystemOperation;
    
        __tid_FileSystemOperation_0__: boolean;
    }
    
    class FilmStockSettings {
        constructor();
        constructor(Slope: number, Toe: number, Shoulder: number, BlackClip: number, WhiteClip: number);
        Slope: number;
        Toe: number;
        Shoulder: number;
        BlackClip: number;
        WhiteClip: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FilmStockSettings_0__: boolean;
    }
    
    class FindSessionsCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(Results: TArray<UE.BlueprintSessionResult>) => void>;
        OnFailure: $MulticastDelegate<(Results: TArray<UE.BlueprintSessionResult>) => void>;
        static FindSessions(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MaxResults: number, bUseLAN: boolean) : UE.FindSessionsCallbackProxy;
        static GetCurrentPlayers(Result: UE.BlueprintSessionResult) : number;
        static GetMaxPlayers(Result: UE.BlueprintSessionResult) : number;
        static GetPingInMs(Result: UE.BlueprintSessionResult) : number;
        static GetServerName(Result: UE.BlueprintSessionResult) : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FindSessionsCallbackProxy;
        static Load(InName: string): FindSessionsCallbackProxy;
    
        __tid_FindSessionsCallbackProxy_0__: boolean;
    }
    
    class FindTurnBasedMatchCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(MatchID: string) => void>;
        OnFailure: $MulticastDelegate<(MatchID: string) => void>;
        static FindTurnBasedMatch(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MatchActor: TurnBasedMatchInterface, MinPlayers: number, MaxPlayers: number, PlayerGroup: number, ShowExistingMatches: boolean) : UE.FindTurnBasedMatchCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FindTurnBasedMatchCallbackProxy;
        static Load(InName: string): FindTurnBasedMatchCallbackProxy;
    
        __tid_FindTurnBasedMatchCallbackProxy_0__: boolean;
    }
    
    class FixConflictingLocalizationKeysCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FixConflictingLocalizationKeysCommandlet;
        static Load(InName: string): FixConflictingLocalizationKeysCommandlet;
    
        __tid_FixConflictingLocalizationKeysCommandlet_0__: boolean;
    }
    
    class FixedFrameRateCustomTimeStep extends UE.EngineCustomTimeStep {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FixedFrameRate: UE.FrameRate;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FixedFrameRateCustomTimeStep;
        static Load(InName: string): FixedFrameRateCustomTimeStep;
    
        __tid_FixedFrameRateCustomTimeStep_0__: boolean;
    }
    
    class ResavePackagesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ResavePackagesCommandlet;
        static Load(InName: string): ResavePackagesCommandlet;
    
        __tid_ResavePackagesCommandlet_0__: boolean;
    }
    
    class FixupNeedsLoadForEditorGameCommandlet extends UE.ResavePackagesCommandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FixupNeedsLoadForEditorGameCommandlet;
        static Load(InName: string): FixupNeedsLoadForEditorGameCommandlet;
    
        __tid_FixupNeedsLoadForEditorGameCommandlet_0__: boolean;
    }
    
    class FlipbookEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BackgroundColor: UE.Color;
        bShowGridByDefault: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FlipbookEditorSettings;
        static Load(InName: string): FlipbookEditorSettings;
    
        __tid_FlipbookEditorSettings_0__: boolean;
    }
    
    class FloatBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FloatBinding;
        static Load(InName: string): FloatBinding;
    
        __tid_FloatBinding_0__: boolean;
    }
    
    class MovieSceneEntitySystem extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Linker: UE.MovieSceneEntitySystemLinker;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEntitySystem;
        static Load(InName: string): MovieSceneEntitySystem;
    
        __tid_MovieSceneEntitySystem_0__: boolean;
    }
    
    class FloatChannelEvaluatorSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FloatChannelEvaluatorSystem;
        static Load(InName: string): FloatChannelEvaluatorSystem;
    
        __tid_FloatChannelEvaluatorSystem_0__: boolean;
    }
    
    class FloatChannelKeyProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Time: UE.FrameNumber;
        Value: UE.MovieSceneFloatValue;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FloatChannelKeyProxy;
        static Load(InName: string): FloatChannelKeyProxy;
    
        __tid_FloatChannelKeyProxy_0__: boolean;
    }
    
    class FloatDistribution {
        constructor();
        constructor(Table: UE.DistributionLookupTable);
        Table: UE.DistributionLookupTable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FloatDistribution_0__: boolean;
    }
    
    class FloatingPawnMovement extends UE.PawnMovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxSpeed: number;
        Acceleration: number;
        Deceleration: number;
        TurningBoost: number;
        bPositionCorrected: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FloatingPawnMovement;
        static Load(InName: string): FloatingPawnMovement;
    
        __tid_FloatingPawnMovement_0__: boolean;
    }
    
    class TextRenderComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        TextMaterial: UE.MaterialInterface;
        Font: UE.Font;
        HorizontalAlignment: UE.EHorizTextAligment;
        VerticalAlignment: UE.EVerticalTextAligment;
        TextRenderColor: UE.Color;
        XScale: number;
        YScale: number;
        WorldSize: number;
        InvDefaultSize: number;
        HorizSpacingAdjust: number;
        VertSpacingAdjust: number;
        bAlwaysRenderAsText: boolean;
        GetTextLocalSize() : UE.Vector;
        GetTextWorldSize() : UE.Vector;
        K2_SetText(Value: string) : void;
        SetFont(Value: $Nullable<UE.Font>) : void;
        SetHorizontalAlignment(Value: UE.EHorizTextAligment) : void;
        SetHorizSpacingAdjust(Value: number) : void;
        SetText(Value: string) : void;
        SetTextMaterial(Material: $Nullable<UE.MaterialInterface>) : void;
        SetTextRenderColor(Value: UE.Color) : void;
        SetVerticalAlignment(Value: UE.EVerticalTextAligment) : void;
        SetVertSpacingAdjust(Value: number) : void;
        SetWorldSize(Value: number) : void;
        SetXScale(Value: number) : void;
        SetYScale(Value: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextRenderComponent;
        static Load(InName: string): TextRenderComponent;
    
        __tid_TextRenderComponent_0__: boolean;
    }
    
    class FloatingText extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SceneComponent: UE.SceneComponent;
        FirstLineComponent: UE.StaticMeshComponent;
        JointSphereComponent: UE.StaticMeshComponent;
        SecondLineComponent: UE.StaticMeshComponent;
        TextComponent: UE.TextRenderComponent;
        MaskedTextMaterial: UE.MaterialInterface;
        TranslucentTextMaterial: UE.MaterialInterface;
        LineMaterial: UE.MaterialInterface;
        LineMaterialMID: UE.MaterialInstanceDynamic;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FloatingText;
        static Load(InName: string): FloatingText;
    
        __tid_FloatingText_0__: boolean;
    }
    
    class FloatProperty extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FloatProperty;
        static Load(InName: string): FloatProperty;
    
        __tid_FloatProperty_0__: boolean;
    }
    
    class FloatRK4SpringInterpolator {
        constructor();
        constructor(StiffnessConstant: number, DampeningRatio: number);
        StiffnessConstant: number;
        DampeningRatio: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FloatRK4SpringInterpolator_0__: boolean;
    }
    
    class FloatSpringState {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FloatSpringState_0__: boolean;
    }
    
    enum FNavigationSystemRunMode { InvalidMode, GameMode, EditorMode, SimulationMode, PIEMode, InferFromWorldMode, FNavigationSystemRunMode_MAX, __typeKeyDoNoAccess}
    class InstancedStaticMeshInstanceData {
        constructor();
        constructor(Transform: UE.Matrix);
        Transform: UE.Matrix;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InstancedStaticMeshInstanceData_0__: boolean;
    }
    
    class InstancedStaticMeshMappingInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InstancedStaticMeshMappingInfo_0__: boolean;
    }
    
    class InstancedStaticMeshComponent extends UE.StaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PerInstanceSMData: TArray<UE.InstancedStaticMeshInstanceData>;
        NumCustomDataFloats: number;
        PerInstanceSMCustomData: TArray<number>;
        InstancingRandomSeed: number;
        InstanceStartCullDistance: number;
        InstanceEndCullDistance: number;
        InstanceReorderTable: TArray<number>;
        NumPendingLightmaps: number;
        CachedMappings: TArray<UE.InstancedStaticMeshMappingInfo>;
        AddInstance(InstanceTransform: UE.Transform) : number;
        AddInstances(InstanceTransforms: TArray<UE.Transform>, bShouldReturnIndices: boolean) : TArray<number>;
        AddInstanceWorldSpace(WorldTransform: UE.Transform) : number;
        BatchUpdateInstancesTransform(StartInstanceIndex: number, NumInstances: number, NewInstancesTransform: UE.Transform, bWorldSpace?: boolean /* = false */, bMarkRenderStateDirty?: boolean /* = false */, bTeleport?: boolean /* = false */) : boolean;
        BatchUpdateInstancesTransforms(StartInstanceIndex: number, NewInstancesTransforms: TArray<UE.Transform>, bWorldSpace?: boolean /* = false */, bMarkRenderStateDirty?: boolean /* = false */, bTeleport?: boolean /* = false */) : boolean;
        ClearInstances() : void;
        GetInstanceCount() : number;
        GetInstancesOverlappingBox(Box: UE.Box, bBoxInWorldSpace?: boolean /* = true */) : TArray<number>;
        GetInstancesOverlappingSphere(Center: UE.Vector, Radius: number, bSphereInWorldSpace?: boolean /* = true */) : TArray<number>;
        GetInstanceTransform(InstanceIndex: number, OutInstanceTransform: $Ref<UE.Transform>, bWorldSpace?: boolean /* = false */) : boolean;
        RemoveInstance(InstanceIndex: number) : boolean;
        SetCullDistances(StartCullDistance: number, EndCullDistance: number) : void;
        SetCustomDataValue(InstanceIndex: number, CustomDataIndex: number, CustomDataValue: number, bMarkRenderStateDirty?: boolean /* = false */) : boolean;
        UpdateInstanceTransform(InstanceIndex: number, NewInstanceTransform: UE.Transform, bWorldSpace?: boolean /* = false */, bMarkRenderStateDirty?: boolean /* = false */, bTeleport?: boolean /* = false */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InstancedStaticMeshComponent;
        static Load(InName: string): InstancedStaticMeshComponent;
    
        __tid_InstancedStaticMeshComponent_0__: boolean;
    }
    
    class HierarchicalInstancedStaticMeshComponent extends UE.InstancedStaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SortedInstances: TArray<number>;
        NumBuiltInstances: number;
        BuiltInstanceBounds: UE.Box;
        UnbuiltInstanceBounds: UE.Box;
        UnbuiltInstanceBoundsList: TArray<UE.Box>;
        bEnableDensityScaling: boolean;
        OcclusionLayerNumNodes: number;
        CacheMeshExtendedBounds: UE.BoxSphereBounds;
        bDisableCollision: boolean;
        InstanceCountToRender: number;
        RemoveInstances(InstancesToRemove: TArray<number>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HierarchicalInstancedStaticMeshComponent;
        static Load(InName: string): HierarchicalInstancedStaticMeshComponent;
    
        __tid_HierarchicalInstancedStaticMeshComponent_0__: boolean;
    }
    
    class FoliageInstancedStaticMeshComponent extends UE.HierarchicalInstancedStaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnInstanceTakePointDamage: $MulticastDelegate<(InstanceIndex: number, Damage: number, InstigatedBy: $Nullable<UE.Controller>, HitLocation: UE.Vector, ShotFromDirection: UE.Vector, DamageType: $Nullable<UE.DamageType>, DamageCauser: $Nullable<UE.Actor>) => void>;
        OnInstanceTakeRadialDamage: $MulticastDelegate<(Instances: TArray<number>, Damages: TArray<number>, InstigatedBy: $Nullable<UE.Controller>, Origin: UE.Vector, MaxRadius: number, DamageType: $Nullable<UE.DamageType>, DamageCauser: $Nullable<UE.Actor>) => void>;
        FoliageHiddenEditorViews: bigint;
        GenerationGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageInstancedStaticMeshComponent;
        static Load(InName: string): FoliageInstancedStaticMeshComponent;
    
        __tid_FoliageInstancedStaticMeshComponent_0__: boolean;
    }
    
    class FoliageStatistics extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static FoliageOverlappingBoxCount(WorldContextObject: $Nullable<UE.Object>, StaticMesh: $Nullable<UE.StaticMesh>, Box: UE.Box) : number;
        static FoliageOverlappingSphereCount(WorldContextObject: $Nullable<UE.Object>, StaticMesh: $Nullable<UE.StaticMesh>, CenterPosition: UE.Vector, Radius: number) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageStatistics;
        static Load(InName: string): FoliageStatistics;
    
        __tid_FoliageStatistics_0__: boolean;
    }
    
    class FoliageVertexColorChannelMask {
        constructor();
        constructor(UseMask: boolean, MaskThreshold: number, InvertMask: boolean);
        UseMask: boolean;
        MaskThreshold: number;
        InvertMask: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FoliageVertexColorChannelMask_0__: boolean;
    }
    
    enum FoliageVertexColorMask { FOLIAGEVERTEXCOLORMASK_Disabled, FOLIAGEVERTEXCOLORMASK_Red, FOLIAGEVERTEXCOLORMASK_Green, FOLIAGEVERTEXCOLORMASK_Blue, FOLIAGEVERTEXCOLORMASK_Alpha, FOLIAGEVERTEXCOLORMASK_MAX, __typeKeyDoNoAccess}
    class FoliageType extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UpdateGuid: UE.Guid;
        Density: number;
        DensityAdjustmentFactor: number;
        Radius: number;
        bSingleInstanceModeOverrideRadius: boolean;
        SingleInstanceModeRadius: number;
        Scaling: UE.EFoliageScaling;
        ScaleX: UE.FloatInterval;
        ScaleY: UE.FloatInterval;
        ScaleZ: UE.FloatInterval;
        VertexColorMaskByChannel: FixSizeArray<UE.FoliageVertexColorChannelMask>;
        VertexColorMask: UE.FoliageVertexColorMask;
        VertexColorMaskThreshold: number;
        VertexColorMaskInvert: boolean;
        ZOffset: UE.FloatInterval;
        AlignToNormal: boolean;
        AlignMaxAngle: number;
        RandomYaw: boolean;
        RandomPitchAngle: number;
        GroundSlopeAngle: UE.FloatInterval;
        Height: UE.FloatInterval;
        LandscapeLayers: TArray<string>;
        MinimumLayerWeight: number;
        ExclusionLandscapeLayers: TArray<string>;
        MinimumExclusionLayerWeight: number;
        LandscapeLayer: string;
        CollisionWithWorld: boolean;
        CollisionScale: UE.Vector;
        MeshBounds: UE.BoxSphereBounds;
        LowBoundOriginRadius: UE.Vector;
        Mobility: UE.EComponentMobility;
        CullDistance: UE.Int32Interval;
        bEnableStaticLighting: boolean;
        CastShadow: boolean;
        bAffectDynamicIndirectLighting: boolean;
        bAffectDistanceFieldLighting: boolean;
        bCastDynamicShadow: boolean;
        bCastStaticShadow: boolean;
        bCastShadowAsTwoSided: boolean;
        bReceivesDecals: boolean;
        bOverrideLightMapRes: boolean;
        OverriddenLightMapRes: number;
        LightmapType: UE.ELightmapType;
        bUseAsOccluder: boolean;
        BodyInstance: UE.BodyInstance;
        CustomNavigableGeometry: UE.EHasCustomNavigableGeometry;
        LightingChannels: UE.LightingChannels;
        bRenderCustomDepth: boolean;
        CustomDepthStencilWriteMask: UE.ERendererStencilMask;
        CustomDepthStencilValue: number;
        TranslucencySortPriority: number;
        HiddenEditorViews: bigint;
        IsSelected: boolean;
        CollisionRadius: number;
        ShadeRadius: number;
        NumSteps: number;
        InitialSeedDensity: number;
        AverageSpreadDistance: number;
        SpreadVariance: number;
        SeedsPerStep: number;
        DistributionSeed: number;
        MaxInitialSeedOffset: number;
        bCanGrowInShade: boolean;
        bSpawnsInShade: boolean;
        MaxInitialAge: number;
        MaxAge: number;
        OverlapPriority: number;
        ProceduralScale: UE.FloatInterval;
        ScaleCurve: UE.RuntimeFloatCurve;
        ChangeCount: number;
        ReapplyDensity: boolean;
        ReapplyRadius: boolean;
        ReapplyAlignToNormal: boolean;
        ReapplyRandomYaw: boolean;
        ReapplyScaling: boolean;
        ReapplyScaleX: boolean;
        ReapplyScaleY: boolean;
        ReapplyScaleZ: boolean;
        ReapplyRandomPitchAngle: boolean;
        ReapplyGroundSlope: boolean;
        ReapplyHeight: boolean;
        ReapplyLandscapeLayers: boolean;
        ReapplyZOffset: boolean;
        ReapplyCollisionWithWorld: boolean;
        ReapplyVertexColorMask: boolean;
        bEnableDensityScaling: boolean;
        bEnableDiscardOnLoad: boolean;
        RuntimeVirtualTextures: TArray<UE.RuntimeVirtualTexture>;
        VirtualTextureCullMips: number;
        VirtualTextureRenderPassType: UE.ERuntimeVirtualTextureMainPassType;
        ScaleMinX: number;
        ScaleMinY: number;
        ScaleMinZ: number;
        ScaleMaxX: number;
        ScaleMaxY: number;
        ScaleMaxZ: number;
        HeightMin: number;
        HeightMax: number;
        ZOffsetMin: number;
        ZOffsetMax: number;
        StartCullDistance: number;
        EndCullDistance: number;
        UniformScale: boolean;
        LockScaleX: boolean;
        LockScaleY: boolean;
        LockScaleZ: boolean;
        GroundSlope: number;
        MinGroundSlope: number;
        MinScale: number;
        MaxScale: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageType;
        static Load(InName: string): FoliageType;
    
        __tid_FoliageType_0__: boolean;
    }
    
    class FoliageType_Actor extends UE.FoliageType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActorClass: UE.Class;
        bShouldAttachToBaseComponent: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageType_Actor;
        static Load(InName: string): FoliageType_Actor;
    
        __tid_FoliageType_Actor_0__: boolean;
    }
    
    class FoliageType_ActorFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageType_ActorFactory;
        static Load(InName: string): FoliageType_ActorFactory;
    
        __tid_FoliageType_ActorFactory_0__: boolean;
    }
    
    class FoliageType_ActorThumbnailRenderer extends UE.BlueprintThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageType_ActorThumbnailRenderer;
        static Load(InName: string): FoliageType_ActorThumbnailRenderer;
    
        __tid_FoliageType_ActorThumbnailRenderer_0__: boolean;
    }
    
    class FoliageType_InstancedStaticMesh extends UE.FoliageType {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Mesh: UE.StaticMesh;
        OverrideMaterials: TArray<UE.MaterialInterface>;
        ComponentClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageType_InstancedStaticMesh;
        static Load(InName: string): FoliageType_InstancedStaticMesh;
    
        __tid_FoliageType_InstancedStaticMesh_0__: boolean;
    }
    
    class FoliageType_InstancedStaticMeshFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageType_InstancedStaticMeshFactory;
        static Load(InName: string): FoliageType_InstancedStaticMeshFactory;
    
        __tid_FoliageType_InstancedStaticMeshFactory_0__: boolean;
    }
    
    class FoliageType_ISMThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FoliageType_ISMThumbnailRenderer;
        static Load(InName: string): FoliageType_ISMThumbnailRenderer;
    
        __tid_FoliageType_ISMThumbnailRenderer_0__: boolean;
    }
    
    class FoliageTypeObject {
        constructor();
        constructor(FoliageTypeObject: UE.Object, TypeInstance: UE.FoliageType, bIsAsset: boolean, Type: UE.Class);
        FoliageTypeObject: UE.Object;
        TypeInstance: UE.FoliageType;
        bIsAsset: boolean;
        Type: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FoliageTypeObject_0__: boolean;
    }
    
    class FontFace extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceFilename: string;
        Hinting: UE.EFontHinting;
        LoadingPolicy: UE.EFontLoadingPolicy;
        LayoutMethod: UE.EFontLayoutMethod;
        FontFaceData: TArray<number>;
        SubFaces: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontFace;
        static Load(InName: string): FontFace;
    
        __tid_FontFace_0__: boolean;
    }
    
    class FontFaceInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontFaceInterface;
        static Load(InName: string): FontFaceInterface;
    
        __tid_FontFaceInterface_0__: boolean;
    }
    
    class FontFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontFactory;
        static Load(InName: string): FontFactory;
    
        __tid_FontFactory_0__: boolean;
    }
    
    class FontFileImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontFileImportFactory;
        static Load(InName: string): FontFileImportFactory;
    
        __tid_FontFileImportFactory_0__: boolean;
    }
    
    class FontImportOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Data: UE.FontImportOptionsData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontImportOptions;
        static Load(InName: string): FontImportOptions;
    
        __tid_FontImportOptions_0__: boolean;
    }
    
    class FontProviderInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontProviderInterface;
        static Load(InName: string): FontProviderInterface;
    
        __tid_FontProviderInterface_0__: boolean;
    }
    
    class FontRenderInfo {
        constructor();
        constructor(bClipText: boolean, bEnableShadow: boolean, GlowInfo: UE.DepthFieldGlowInfo);
        bClipText: boolean;
        bEnableShadow: boolean;
        GlowInfo: UE.DepthFieldGlowInfo;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FontRenderInfo_0__: boolean;
    }
    
    class TextureThumbnailRenderer extends UE.ThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureThumbnailRenderer;
        static Load(InName: string): TextureThumbnailRenderer;
    
        __tid_TextureThumbnailRenderer_0__: boolean;
    }
    
    class FontThumbnailRenderer extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FontThumbnailRenderer;
        static Load(InName: string): FontThumbnailRenderer;
    
        __tid_FontThumbnailRenderer_0__: boolean;
    }
    
    class ForceFeedbackAttenuationSettings extends UE.BaseAttenuationSettings {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ForceFeedbackAttenuationSettings_0__: boolean;
    }
    
    class ForceFeedbackAttenuation extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Attenuation: UE.ForceFeedbackAttenuationSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ForceFeedbackAttenuation;
        static Load(InName: string): ForceFeedbackAttenuation;
    
        __tid_ForceFeedbackAttenuation_0__: boolean;
    }
    
    class ForceFeedbackAttenuationFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ForceFeedbackAttenuationFactory;
        static Load(InName: string): ForceFeedbackAttenuationFactory;
    
        __tid_ForceFeedbackAttenuationFactory_0__: boolean;
    }
    
    class ForceFeedbackComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ForceFeedbackEffect: UE.ForceFeedbackEffect;
        bAutoDestroy: boolean;
        bStopWhenOwnerDestroyed: boolean;
        bLooping: boolean;
        bIgnoreTimeDilation: boolean;
        bOverrideAttenuation: boolean;
        IntensityMultiplier: number;
        AttenuationSettings: UE.ForceFeedbackAttenuation;
        AttenuationOverrides: UE.ForceFeedbackAttenuationSettings;
        OnForceFeedbackFinished: $MulticastDelegate<(ForceFeedbackComponent: $Nullable<UE.ForceFeedbackComponent>) => void>;
        AdjustAttenuation(InAttenuationSettings: UE.ForceFeedbackAttenuationSettings) : void;
        BP_GetAttenuationSettingsToApply(OutAttenuationSettings: $Ref<UE.ForceFeedbackAttenuationSettings>) : boolean;
        Play(StartTime?: number /* = 0.000000 */) : void;
        SetForceFeedbackEffect(NewForceFeedbackEffect: $Nullable<UE.ForceFeedbackEffect>) : void;
        SetIntensityMultiplier(NewIntensityMultiplier: number) : void;
        Stop() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ForceFeedbackComponent;
        static Load(InName: string): ForceFeedbackComponent;
    
        __tid_ForceFeedbackComponent_0__: boolean;
    }
    
    class ForceFeedbackEffectFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ForceFeedbackEffectFactory;
        static Load(InName: string): ForceFeedbackEffectFactory;
    
        __tid_ForceFeedbackEffectFactory_0__: boolean;
    }
    
    class LandscapeSplineSegmentConnection {
        constructor();
        constructor(ControlPoint: UE.LandscapeSplineControlPoint, TangentLen: number, SocketName: string);
        ControlPoint: UE.LandscapeSplineControlPoint;
        TangentLen: number;
        SocketName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeSplineSegmentConnection_0__: boolean;
    }
    
    enum LandscapeSplineMeshOrientation { LSMO_XUp, LSMO_YUp, LSMO_MAX, __typeKeyDoNoAccess}
    class LandscapeSplineMeshEntry {
        constructor();
        constructor(Mesh: UE.StaticMesh, MaterialOverrides: TArray<UE.MaterialInterface>, bCenterH: boolean, CenterAdjust: UE.Vector2D, bScaleToWidth: boolean, Scale: UE.Vector, Orientation: UE.LandscapeSplineMeshOrientation, ForwardAxis: UE.ESplineMeshAxis, UpAxis: UE.ESplineMeshAxis);
        Mesh: UE.StaticMesh;
        MaterialOverrides: TArray<UE.MaterialInterface>;
        bCenterH: boolean;
        CenterAdjust: UE.Vector2D;
        bScaleToWidth: boolean;
        Scale: UE.Vector;
        Orientation: UE.LandscapeSplineMeshOrientation;
        ForwardAxis: UE.ESplineMeshAxis;
        UpAxis: UE.ESplineMeshAxis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeSplineMeshEntry_0__: boolean;
    }
    
    class LandscapeSplineInterpPoint {
        constructor();
        constructor(Center: UE.Vector, Left: UE.Vector, Right: UE.Vector, FalloffLeft: UE.Vector, FalloffRight: UE.Vector, LayerLeft: UE.Vector, LayerRight: UE.Vector, LayerFalloffLeft: UE.Vector, LayerFalloffRight: UE.Vector, StartEndFalloff: number);
        Center: UE.Vector;
        Left: UE.Vector;
        Right: UE.Vector;
        FalloffLeft: UE.Vector;
        FalloffRight: UE.Vector;
        LayerLeft: UE.Vector;
        LayerRight: UE.Vector;
        LayerFalloffLeft: UE.Vector;
        LayerFalloffRight: UE.Vector;
        StartEndFalloff: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeSplineInterpPoint_0__: boolean;
    }
    
    class LandscapeSplineSegment extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Connections: FixSizeArray<UE.LandscapeSplineSegmentConnection>;
        LayerName: string;
        bRaiseTerrain: boolean;
        bLowerTerrain: boolean;
        SplineMeshes: TArray<UE.LandscapeSplineMeshEntry>;
        bEnableCollision: boolean;
        CollisionProfileName: string;
        bCastShadow: boolean;
        bHiddenInGame: boolean;
        bPlaceSplineMeshesInStreamingLevels: boolean;
        RandomSeed: number;
        LDMaxDrawDistance: number;
        TranslucencySortPriority: number;
        bRenderCustomDepth: boolean;
        CustomDepthStencilWriteMask: UE.ERendererStencilMask;
        CustomDepthStencilValue: number;
        RuntimeVirtualTextures: TArray<UE.RuntimeVirtualTexture>;
        VirtualTextureLodBias: number;
        VirtualTextureCullMips: number;
        VirtualTextureMainPassMaxDrawDistance: number;
        VirtualTextureRenderPassType: UE.ERuntimeVirtualTextureMainPassType;
        BodyInstance: UE.BodyInstance;
        bSelected: boolean;
        bNavDirty: boolean;
        SplineInfo: UE.InterpCurveVector;
        Points: TArray<UE.LandscapeSplineInterpPoint>;
        Bounds: UE.Box;
        LocalMeshComponents: TArray<UE.SplineMeshComponent>;
        ForeignWorlds: TArray<TSoftObjectPtr<UE.World>>;
        ModificationKey: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeSplineSegment;
        static Load(InName: string): LandscapeSplineSegment;
    
        __tid_LandscapeSplineSegment_0__: boolean;
    }
    
    class LandscapeSplineConnection {
        constructor();
        constructor(Segment: UE.LandscapeSplineSegment, End: boolean);
        Segment: UE.LandscapeSplineSegment;
        End: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeSplineConnection_0__: boolean;
    }
    
    class LandscapeSplineControlPoint extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Location: UE.Vector;
        Rotation: UE.Rotator;
        Width: number;
        LayerWidthRatio: number;
        SideFalloff: number;
        LeftSideFalloffFactor: number;
        RightSideFalloffFactor: number;
        LeftSideLayerFalloffFactor: number;
        RightSideLayerFalloffFactor: number;
        EndFalloff: number;
        SegmentMeshOffset: number;
        LayerName: string;
        bRaiseTerrain: boolean;
        bLowerTerrain: boolean;
        Mesh: UE.StaticMesh;
        MaterialOverrides: TArray<UE.MaterialInterface>;
        MeshScale: UE.Vector;
        bEnableCollision: boolean;
        CollisionProfileName: string;
        bCastShadow: boolean;
        bHiddenInGame: boolean;
        bPlaceSplineMeshesInStreamingLevels: boolean;
        LDMaxDrawDistance: number;
        TranslucencySortPriority: number;
        bRenderCustomDepth: boolean;
        CustomDepthStencilWriteMask: UE.ERendererStencilMask;
        CustomDepthStencilValue: number;
        RuntimeVirtualTextures: TArray<UE.RuntimeVirtualTexture>;
        VirtualTextureLodBias: number;
        VirtualTextureCullMips: number;
        VirtualTextureMainPassMaxDrawDistance: number;
        VirtualTextureRenderPassType: UE.ERuntimeVirtualTextureMainPassType;
        BodyInstance: UE.BodyInstance;
        bSelected: boolean;
        bNavDirty: boolean;
        ConnectedSegments: TArray<UE.LandscapeSplineConnection>;
        Points: TArray<UE.LandscapeSplineInterpPoint>;
        Bounds: UE.Box;
        LocalMeshComponent: UE.ControlPointMeshComponent;
        ForeignWorld: TSoftObjectPtr<UE.World>;
        ModificationKey: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeSplineControlPoint;
        static Load(InName: string): LandscapeSplineControlPoint;
    
        __tid_LandscapeSplineControlPoint_0__: boolean;
    }
    
    class ForeignControlPointData {
        constructor();
        constructor(ModificationKey: UE.Guid, MeshComponent: UE.ControlPointMeshComponent, Identifier: TLazyObjectPtr<UE.LandscapeSplineControlPoint>);
        ModificationKey: UE.Guid;
        MeshComponent: UE.ControlPointMeshComponent;
        Identifier: TLazyObjectPtr<UE.LandscapeSplineControlPoint>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ForeignControlPointData_0__: boolean;
    }
    
    class ForeignSplineSegmentData {
        constructor();
        constructor(ModificationKey: UE.Guid, MeshComponents: TArray<UE.SplineMeshComponent>, Identifier: TLazyObjectPtr<UE.LandscapeSplineSegment>);
        ModificationKey: UE.Guid;
        MeshComponents: TArray<UE.SplineMeshComponent>;
        Identifier: TLazyObjectPtr<UE.LandscapeSplineSegment>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ForeignSplineSegmentData_0__: boolean;
    }
    
    class ForeignWorldSplineData {
        constructor();
        constructor(ForeignControlPointDataMap: TMap<TLazyObjectPtr<UE.LandscapeSplineControlPoint>, UE.ForeignControlPointData>, ForeignControlPointData: TArray<UE.ForeignControlPointData>, ForeignSplineSegmentDataMap: TMap<TLazyObjectPtr<UE.LandscapeSplineSegment>, UE.ForeignSplineSegmentData>, ForeignSplineSegmentData: TArray<UE.ForeignSplineSegmentData>);
        ForeignControlPointDataMap: TMap<TLazyObjectPtr<UE.LandscapeSplineControlPoint>, UE.ForeignControlPointData>;
        ForeignControlPointData: TArray<UE.ForeignControlPointData>;
        ForeignSplineSegmentDataMap: TMap<TLazyObjectPtr<UE.LandscapeSplineSegment>, UE.ForeignSplineSegmentData>;
        ForeignSplineSegmentData: TArray<UE.ForeignSplineSegmentData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ForeignWorldSplineData_0__: boolean;
    }
    
    class FormatArgumentData {
        constructor();
        constructor(ArgumentName: string, ArgumentValueType: UE.EFormatArgumentType, ArgumentValue: string, ArgumentValueInt: number, ArgumentValueFloat: number, ArgumentValueGender: UE.ETextGender);
        ArgumentName: string;
        ArgumentValueType: UE.EFormatArgumentType;
        ArgumentValue: string;
        ArgumentValueInt: number;
        ArgumentValueFloat: number;
        ArgumentValueGender: UE.ETextGender;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FormatArgumentData_0__: boolean;
    }
    
    class FractureAutoClusterSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AutoClusterMode: UE.EFractureAutoClusterMode;
        SiteCount: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureAutoClusterSettings;
        static Load(InName: string): FractureAutoClusterSettings;
    
        __tid_FractureAutoClusterSettings_0__: boolean;
    }
    
    class FractureBitmapSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Transform: UE.Transform;
        Scale: UE.Vector2D;
        IsRelativeTransform: boolean;
        SnapThreshold: number;
        SegmentationErrorThreshold: number;
        CutoutTexture: TWeakObjectPtr<UE.Texture2D>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureBitmapSettings;
        static Load(InName: string): FractureBitmapSettings;
    
        __tid_FractureBitmapSettings_0__: boolean;
    }
    
    class FractureCommonSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeed: number;
        ChanceToFracture: number;
        bGroupFracture: boolean;
        bDrawSites: boolean;
        bDrawDiagram: boolean;
        Amplitude: number;
        Frequency: number;
        OctaveNumber: number;
        SurfaceResolution: number;
        OwnerTool: UE.FractureTool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureCommonSettings;
        static Load(InName: string): FractureCommonSettings;
    
        __tid_FractureCommonSettings_0__: boolean;
    }
    
    class FractureTool extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CommonSettings: UE.FractureCommonSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureTool;
        static Load(InName: string): FractureTool;
    
        __tid_FractureTool_0__: boolean;
    }
    
    class FractureBrickSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Bond: UE.EFractureBrickBond;
        Forward: UE.EFractureBrickProjection;
        Up: UE.EFractureBrickProjection;
        BrickLength: number;
        BrickHeight: number;
        BrickDepth: number;
        OwnerTool: UE.FractureTool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureBrickSettings;
        static Load(InName: string): FractureBrickSettings;
    
        __tid_FractureBrickSettings_0__: boolean;
    }
    
    class FractureClusterSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberClustersMin: number;
        NumberClustersMax: number;
        SitesPerClusterMin: number;
        SitesPerClusterMax: number;
        ClusterRadiusPercentageMin: number;
        ClusterRadiusPercentageMax: number;
        ClusterRadius: number;
        OwnerTool: UE.FractureTool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureClusterSettings;
        static Load(InName: string): FractureClusterSettings;
    
        __tid_FractureClusterSettings_0__: boolean;
    }
    
    class FractureEffect {
        constructor();
        constructor(ParticleSystem: UE.ParticleSystem, Sound: UE.SoundBase);
        ParticleSystem: UE.ParticleSystem;
        Sound: UE.SoundBase;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FractureEffect_0__: boolean;
    }
    
    class FracturePlaneCutSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberPlanarCuts: number;
        ReferenceActor: TLazyObjectPtr<UE.Actor>;
        OwnerTool: UE.FractureTool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FracturePlaneCutSettings;
        static Load(InName: string): FracturePlaneCutSettings;
    
        __tid_FracturePlaneCutSettings_0__: boolean;
    }
    
    class FractureRadialSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Center: UE.Vector;
        Normal: UE.Vector;
        Radius: number;
        AngularSteps: number;
        RadialSteps: number;
        AngleOffset: number;
        Variability: number;
        OwnerTool: UE.FractureTool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureRadialSettings;
        static Load(InName: string): FractureRadialSettings;
    
        __tid_FractureRadialSettings_0__: boolean;
    }
    
    class FractureSliceSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SlicesX: number;
        SlicesY: number;
        SlicesZ: number;
        SliceAngleVariation: number;
        SliceOffsetVariation: number;
        OwnerTool: UE.FractureTool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureSliceSettings;
        static Load(InName: string): FractureSliceSettings;
    
        __tid_FractureSliceSettings_0__: boolean;
    }
    
    class FractureToolAutoCluster extends UE.FractureTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.FractureAutoClusterSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolAutoCluster;
        static Load(InName: string): FractureToolAutoCluster;
    
        __tid_FractureToolAutoCluster_0__: boolean;
    }
    
    class FractureToolBitmap extends UE.FractureTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolBitmap;
        static Load(InName: string): FractureToolBitmap;
    
        __tid_FractureToolBitmap_0__: boolean;
    }
    
    class FractureToolBrick extends UE.FractureTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrickSettings: UE.FractureBrickSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolBrick;
        static Load(InName: string): FractureToolBrick;
    
        __tid_FractureToolBrick_0__: boolean;
    }
    
    class FractureToolVoronoiBase extends UE.FractureTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolVoronoiBase;
        static Load(InName: string): FractureToolVoronoiBase;
    
        __tid_FractureToolVoronoiBase_0__: boolean;
    }
    
    class FractureToolCluster extends UE.FractureToolVoronoiBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.FractureClusterSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolCluster;
        static Load(InName: string): FractureToolCluster;
    
        __tid_FractureToolCluster_0__: boolean;
    }
    
    class FractureToolPlaneCut extends UE.FractureTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlaneCutSettings: UE.FracturePlaneCutSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolPlaneCut;
        static Load(InName: string): FractureToolPlaneCut;
    
        __tid_FractureToolPlaneCut_0__: boolean;
    }
    
    class FractureToolRadial extends UE.FractureToolVoronoiBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolRadial;
        static Load(InName: string): FractureToolRadial;
    
        __tid_FractureToolRadial_0__: boolean;
    }
    
    class FractureToolSlice extends UE.FractureTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SliceSettings: UE.FractureSliceSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolSlice;
        static Load(InName: string): FractureToolSlice;
    
        __tid_FractureToolSlice_0__: boolean;
    }
    
    class FractureUniformSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberVoronoiSitesMin: number;
        NumberVoronoiSitesMax: number;
        OwnerTool: UE.FractureTool;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureUniformSettings;
        static Load(InName: string): FractureUniformSettings;
    
        __tid_FractureUniformSettings_0__: boolean;
    }
    
    class FractureToolUniform extends UE.FractureToolVoronoiBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.FractureUniformSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FractureToolUniform;
        static Load(InName: string): FractureToolUniform;
    
        __tid_FractureToolUniform_0__: boolean;
    }
    
    class FrameMetrics {
        constructor();
        constructor(TotalElapsedTime: number, FrameDelta: number, FrameNumber: number, NumDroppedFrames: number);
        TotalElapsedTime: number;
        FrameDelta: number;
        FrameNumber: number;
        NumDroppedFrames: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FrameMetrics_0__: boolean;
    }
    
    class FreezablePerPlatformInt {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FreezablePerPlatformInt_0__: boolean;
    }
    
    class FullyLoadedPackagesInfo {
        constructor();
        constructor(FullyLoadType: UE.EFullyLoadPackageType, Tag: string, PackagesToLoad: TArray<string>, LoadedObjects: TArray<UE.Object>);
        FullyLoadType: UE.EFullyLoadPackageType;
        Tag: string;
        PackagesToLoad: TArray<string>;
        LoadedObjects: TArray<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_FullyLoadedPackagesInfo_0__: boolean;
    }
    
    class FuncTestRenderingComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FuncTestRenderingComponent;
        static Load(InName: string): FuncTestRenderingComponent;
    
        __tid_FuncTestRenderingComponent_0__: boolean;
    }
    
    class RandomStream {
        constructor();
        constructor(InitialSeed: number, Seed: number);
        InitialSeed: number;
        Seed: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RandomStream_0__: boolean;
    }
    
    class TraceQueryTestNames {
        constructor();
        constructor(ComponentName: string, PhysicalMaterialName: string, ActorName: string);
        ComponentName: string;
        PhysicalMaterialName: string;
        ActorName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TraceQueryTestNames_0__: boolean;
    }
    
    class TraceQueryTestResultsInnerMost {
        constructor();
        constructor(SingleHit: UE.HitResult, SingleNames: UE.TraceQueryTestNames, bSingleResult: boolean, MultiHits: TArray<UE.HitResult>, MultiNames: TArray<UE.TraceQueryTestNames>, bMultiResult: boolean);
        SingleHit: UE.HitResult;
        SingleNames: UE.TraceQueryTestNames;
        bSingleResult: boolean;
        MultiHits: TArray<UE.HitResult>;
        MultiNames: TArray<UE.TraceQueryTestNames>;
        bMultiResult: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TraceQueryTestResultsInnerMost_0__: boolean;
    }
    
    class TraceQueryTestResultsInner {
        constructor();
        constructor(LineResults: UE.TraceQueryTestResultsInnerMost, SphereResults: UE.TraceQueryTestResultsInnerMost, CapsuleResults: UE.TraceQueryTestResultsInnerMost, BoxResults: UE.TraceQueryTestResultsInnerMost);
        LineResults: UE.TraceQueryTestResultsInnerMost;
        SphereResults: UE.TraceQueryTestResultsInnerMost;
        CapsuleResults: UE.TraceQueryTestResultsInnerMost;
        BoxResults: UE.TraceQueryTestResultsInnerMost;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TraceQueryTestResultsInner_0__: boolean;
    }
    
    class TraceChannelTestBatchOptions {
        constructor();
        constructor(bLineTrace: boolean, bSphereTrace: boolean, bCapsuleTrace: boolean, bBoxTrace: boolean, bChannelTrace: boolean, bObjectsTrace: boolean, bProfileTrace: boolean);
        bLineTrace: boolean;
        bSphereTrace: boolean;
        bCapsuleTrace: boolean;
        bBoxTrace: boolean;
        bChannelTrace: boolean;
        bObjectsTrace: boolean;
        bProfileTrace: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TraceChannelTestBatchOptions_0__: boolean;
    }
    
    class TraceQueryTestResults extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChannelResults: UE.TraceQueryTestResultsInner;
        ObjectResults: UE.TraceQueryTestResultsInner;
        ProfileResults: UE.TraceQueryTestResultsInner;
        BatchOptions: UE.TraceChannelTestBatchOptions;
        ToString() : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TraceQueryTestResults;
        static Load(InName: string): TraceQueryTestResults;
    
        __tid_TraceQueryTestResults_0__: boolean;
    }
    
    class FunctionalTest extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpriteComponent: UE.BillboardComponent;
        bIsEnabled: boolean;
        LogErrorHandling: UE.EFunctionalTestLogHandling;
        LogWarningHandling: UE.EFunctionalTestLogHandling;
        Author: string;
        Description: string;
        ObservationPoint: UE.Actor;
        RandomNumbersStream: UE.RandomStream;
        Result: UE.EFunctionalTestResult;
        PreparationTimeLimit: number;
        TimeLimit: number;
        TimesUpMessage: string;
        TimesUpResult: UE.EFunctionalTestResult;
        OnTestPrepare: $MulticastDelegate<() => void>;
        OnTestStart: $MulticastDelegate<() => void>;
        OnTestFinished: $MulticastDelegate<() => void>;
        AutoDestroyActors: TArray<UE.Actor>;
        RenderComp: UE.FuncTestRenderingComponent;
        TestName: UE.TextRenderComponent;
        bIsRunning: boolean;
        TotalTime: number;
        AddError(Message: string) : void;
        AddRerun(Reason: string) : void;
        AddWarning(Message: string) : void;
        AssertEqual_Bool(Actual: boolean, Expected: boolean, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_Float(Actual: number, Expected: number, What: string, Tolerance?: number /* = 0.000100 */, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_Int(Actual: number, Expected: number, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_Name(Actual: string, Expected: string, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_Object(Actual: $Nullable<UE.Object>, Expected: $Nullable<UE.Object>, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_Rotator(Actual: UE.Rotator, Expected: UE.Rotator, What: string, Tolerance?: number /* = 0.000100 */, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_String(Actual: string, Expected: string, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_TraceQueryResults(Actual: $Nullable<UE.TraceQueryTestResults>, Expected: $Nullable<UE.TraceQueryTestResults>, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_Transform(Actual: UE.Transform, Expected: UE.Transform, What: string, Tolerance?: number /* = 0.000100 */, ContextObject?: UE.Object /* = None */) : boolean;
        AssertEqual_Vector(Actual: UE.Vector, Expected: UE.Vector, What: string, Tolerance?: number /* = 0.000100 */, ContextObject?: UE.Object /* = None */) : boolean;
        AssertFalse(Condition: boolean, Message: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertIsValid(Object: $Nullable<UE.Object>, Message: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertNotEqual_Rotator(Actual: UE.Rotator, NotExpected: UE.Rotator, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertNotEqual_String(Actual: string, NotExpected: string, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertNotEqual_Transform(Actual: UE.Transform, NotExpected: UE.Transform, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertNotEqual_Vector(Actual: UE.Vector, NotExpected: UE.Vector, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertTrue(Condition: boolean, Message: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertValue_DateTime(Actual: UE.DateTime, ShouldBe: UE.EComparisonMethod, Expected: UE.DateTime, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertValue_Float(Actual: number, ShouldBe: UE.EComparisonMethod, Expected: number, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        AssertValue_Int(Actual: number, ShouldBe: UE.EComparisonMethod, Expected: number, What: string, ContextObject?: UE.Object /* = None */) : boolean;
        DebugGatherRelevantActors() : TArray<UE.Actor>;
        FinishTest(TestResult: UE.EFunctionalTestResult, Message: string) : void;
        GetCurrentRerunReason() : string;
        IsEnabled() : boolean;
        IsReady() : boolean;
        IsRunning() : boolean;
        LogMessage(Message: string) : void;
        OnAdditionalTestFinishedMessageRequest(TestResult: UE.EFunctionalTestResult) : string;
        OnWantsReRunCheck() : boolean;
        ReceivePrepareTest() : void;
        ReceiveStartTest() : void;
        RegisterAutoDestroyActor(ActorToAutoDestroy: $Nullable<UE.Actor>) : void;
        SetTimeLimit(NewTimeLimit: number, ResultWhenTimeRunsOut: UE.EFunctionalTestResult) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FunctionalTest;
        static Load(InName: string): FunctionalTest;
    
        __tid_FunctionalTest_0__: boolean;
    }
    
    class PendingDelayedSpawn extends UE.AITestSpawnInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PendingDelayedSpawn_0__: boolean;
    }
    
    class FunctionalAITest extends UE.FunctionalTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpawnSets: TArray<UE.AITestSpawnSet>;
        SpawnLocationRandomizationRange: number;
        SpawnedPawns: TArray<UE.Pawn>;
        PendingDelayedSpawns: TArray<UE.PendingDelayedSpawn>;
        CurrentSpawnSetIndex: number;
        CurrentSpawnSetName: string;
        OnAISpawned: $MulticastDelegate<(Controller: $Nullable<UE.AIController>, Pawn: $Nullable<UE.Pawn>) => void>;
        OnAllAISPawned: $MulticastDelegate<() => void>;
        NavMeshDebugOrigin: UE.Vector;
        NavMeshDebugExtent: UE.Vector;
        bWaitForNavMesh: boolean;
        bDebugNavMeshOnTimeout: boolean;
        IsOneOfSpawnedPawns(Actor: $Nullable<UE.Actor>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FunctionalAITest;
        static Load(InName: string): FunctionalAITest;
    
        __tid_FunctionalAITest_0__: boolean;
    }
    
    class FunctionalTestGameMode extends UE.GameModeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FunctionalTestGameMode;
        static Load(InName: string): FunctionalTestGameMode;
    
        __tid_FunctionalTestGameMode_0__: boolean;
    }
    
    class FunctionalTestingManager extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TestsLeft: TArray<UE.FunctionalTest>;
        AllTests: TArray<UE.FunctionalTest>;
        OnSetupTests: $MulticastDelegate<() => void>;
        OnTestsComplete: $MulticastDelegate<() => void>;
        OnTestsBegin: $MulticastDelegate<() => void>;
        static RunAllFunctionalTests(WorldContextObject: $Nullable<UE.Object>, bNewLog?: boolean /* = true */, bRunLooped?: boolean /* = false */, FailedTestsReproString?: string /* = "" */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FunctionalTestingManager;
        static Load(InName: string): FunctionalTestingManager;
    
        __tid_FunctionalTestingManager_0__: boolean;
    }
    
    class FunctionalTestLevelScript extends UE.LevelScriptActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FunctionalTestLevelScript;
        static Load(InName: string): FunctionalTestLevelScript;
    
        __tid_FunctionalTestLevelScript_0__: boolean;
    }
    
    class FunctionalTestUtilityLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static TraceChannelTestUtil(WorldContextObject: $Nullable<UE.Object>, BatchOptions: UE.TraceChannelTestBatchOptions, Start: UE.Vector, End: UE.Vector, SphereCapsuleRadius: number, CapsuleHalfHeight: number, BoxHalfSize: UE.Vector, Orientation: UE.Rotator, TraceChannel: UE.ETraceTypeQuery, ObjectTypes: TArray<UE.EObjectTypeQuery>, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, bIgnoreSelf: boolean, DrawDebugType: UE.EDrawDebugTrace, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : UE.TraceQueryTestResults;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FunctionalTestUtilityLibrary;
        static Load(InName: string): FunctionalTestUtilityLibrary;
    
        __tid_FunctionalTestUtilityLibrary_0__: boolean;
    }
    
    class ScreenshotFunctionalTestBase extends UE.FunctionalTest {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Notes: string;
        ScreenshotCamera: UE.CameraComponent;
        ScreenshotOptions: UE.AutomationScreenshotOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScreenshotFunctionalTestBase;
        static Load(InName: string): ScreenshotFunctionalTestBase;
    
        __tid_ScreenshotFunctionalTestBase_0__: boolean;
    }
    
    class FunctionalUIScreenshotTest extends UE.ScreenshotFunctionalTestBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetClass: UE.Class;
        SpawnedWidget: UE.UserWidget;
        WidgetLocation: UE.EWidgetTestAppearLocation;
        ScreenshotRT: UE.TextureRenderTarget2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): FunctionalUIScreenshotTest;
        static Load(InName: string): FunctionalUIScreenshotTest;
    
        __tid_FunctionalUIScreenshotTest_0__: boolean;
    }
    
    class GameEngine extends UE.Engine {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxDeltaTime: number;
        ServerFlushLogInterval: number;
        GameInstance: UE.GameInstance;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameEngine;
        static Load(InName: string): GameEngine;
    
        __tid_GameEngine_0__: boolean;
    }
    
    class GameInstanceSubsystem extends UE.Subsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameInstanceSubsystem;
        static Load(InName: string): GameInstanceSubsystem;
    
        __tid_GameInstanceSubsystem_0__: boolean;
    }
    
    class GameModeName {
        constructor();
        constructor(Name: string, GameMode: UE.SoftClassPath);
        Name: string;
        GameMode: UE.SoftClassPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameModeName_0__: boolean;
    }
    
    class GameMapsSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditorStartupMap: UE.SoftObjectPath;
        LocalMapOptions: string;
        TransitionMap: UE.SoftObjectPath;
        bUseSplitscreen: boolean;
        TwoPlayerSplitscreenLayout: UE.ETwoPlayerSplitScreenType;
        ThreePlayerSplitscreenLayout: UE.EThreePlayerSplitScreenType;
        FourPlayerSplitscreenLayout: UE.EFourPlayerSplitScreenType;
        bOffsetPlayerGamepadIds: boolean;
        GameInstanceClass: UE.SoftClassPath;
        GameDefaultMap: UE.SoftObjectPath;
        ServerDefaultMap: UE.SoftObjectPath;
        GlobalDefaultGameMode: UE.SoftClassPath;
        GlobalDefaultServerGameMode: UE.SoftClassPath;
        GameModeMapPrefixes: TArray<UE.GameModeName>;
        GameModeClassAliases: TArray<UE.GameModeName>;
        GetSkipAssigningGamepadToPlayer1() : boolean;
        SetSkipAssigningGamepadToPlayer1(bSkipFirstPlayer?: boolean /* = true */) : void;
        static GetGameMapsSettings() : UE.GameMapsSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameMapsSettings;
        static Load(InName: string): GameMapsSettings;
    
        __tid_GameMapsSettings_0__: boolean;
    }
    
    class GameNetworkManagerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MinDynamicBandwidth: number;
        MaxDynamicBandwidth: number;
        TotalNetBandwidth: number;
        BadPingThreshold: number;
        bIsStandbyCheckingEnabled: boolean;
        StandbyRxCheatTime: number;
        StandbyTxCheatTime: number;
        PercentMissingForRxStandby: number;
        PercentMissingForTxStandby: number;
        PercentForBadPing: number;
        JoinInProgressStandbyWaitTime: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameNetworkManagerSettings;
        static Load(InName: string): GameNetworkManagerSettings;
    
        __tid_GameNetworkManagerSettings_0__: boolean;
    }
    
    class GameplayDebuggerInputConfig {
        constructor();
        constructor(ConfigName: string, Key: UE.Key, bModShift: boolean, bModCtrl: boolean, bModAlt: boolean, bModCmd: boolean);
        ConfigName: string;
        Key: UE.Key;
        bModShift: boolean;
        bModCtrl: boolean;
        bModAlt: boolean;
        bModCmd: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayDebuggerInputConfig_0__: boolean;
    }
    
    class GameplayDebuggerCategoryConfig {
        constructor();
        constructor(CategoryName: string, SlotIdx: number, ActiveInGame: UE.EGameplayDebuggerOverrideMode, ActiveInSimulate: UE.EGameplayDebuggerOverrideMode, Hidden: UE.EGameplayDebuggerOverrideMode, bOverrideSlotIdx: boolean, InputHandlers: TArray<UE.GameplayDebuggerInputConfig>);
        CategoryName: string;
        SlotIdx: number;
        ActiveInGame: UE.EGameplayDebuggerOverrideMode;
        ActiveInSimulate: UE.EGameplayDebuggerOverrideMode;
        Hidden: UE.EGameplayDebuggerOverrideMode;
        bOverrideSlotIdx: boolean;
        InputHandlers: TArray<UE.GameplayDebuggerInputConfig>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayDebuggerCategoryConfig_0__: boolean;
    }
    
    class GameplayDebuggerNetPack {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayDebuggerNetPack_0__: boolean;
    }
    
    class GameplayDebuggerDebugActor {
        constructor();
        constructor(Actor: UE.Actor, ActorName: string, SyncCounter: number);
        Actor: UE.Actor;
        ActorName: string;
        SyncCounter: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayDebuggerDebugActor_0__: boolean;
    }
    
    class GameplayDebuggerVisLogSync {
        constructor();
        constructor(DeviceIDs: string);
        DeviceIDs: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayDebuggerVisLogSync_0__: boolean;
    }
    
    class GameplayDebuggerRenderingComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayDebuggerRenderingComponent;
        static Load(InName: string): GameplayDebuggerRenderingComponent;
    
        __tid_GameplayDebuggerRenderingComponent_0__: boolean;
    }
    
    class GameplayDebuggerCategoryReplicator extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwnerPC: UE.PlayerController;
        bIsEnabled: boolean;
        ReplicatedData: UE.GameplayDebuggerNetPack;
        DebugActor: UE.GameplayDebuggerDebugActor;
        VisLogSync: UE.GameplayDebuggerVisLogSync;
        RenderingComp: UE.GameplayDebuggerRenderingComponent;
        ServerSendCategoryInputEvent(CategoryId: number, HandlerId: number) : void;
        ServerSendExtensionInputEvent(ExtensionId: number, HandlerId: number) : void;
        ServerSetCategoryEnabled(CategoryId: number, bEnable: boolean) : void;
        ServerSetDebugActor(Actor: $Nullable<UE.Actor>, bSelectInEditor: boolean) : void;
        ServerSetEnabled(bEnable: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayDebuggerCategoryReplicator;
        static Load(InName: string): GameplayDebuggerCategoryReplicator;
    
        __tid_GameplayDebuggerCategoryReplicator_0__: boolean;
    }
    
    class GameplayDebuggerExtensionConfig {
        constructor();
        constructor(ExtensionName: string, UseExtension: UE.EGameplayDebuggerOverrideMode, InputHandlers: TArray<UE.GameplayDebuggerInputConfig>);
        ExtensionName: string;
        UseExtension: UE.EGameplayDebuggerOverrideMode;
        InputHandlers: TArray<UE.GameplayDebuggerInputConfig>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayDebuggerExtensionConfig_0__: boolean;
    }
    
    class GameplayDebuggerConfig extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActivationKey: UE.Key;
        CategoryRowNextKey: UE.Key;
        CategoryRowPrevKey: UE.Key;
        CategorySlot0: UE.Key;
        CategorySlot1: UE.Key;
        CategorySlot2: UE.Key;
        CategorySlot3: UE.Key;
        CategorySlot4: UE.Key;
        CategorySlot5: UE.Key;
        CategorySlot6: UE.Key;
        CategorySlot7: UE.Key;
        CategorySlot8: UE.Key;
        CategorySlot9: UE.Key;
        DebugCanvasPaddingLeft: number;
        DebugCanvasPaddingRight: number;
        DebugCanvasPaddingTop: number;
        DebugCanvasPaddingBottom: number;
        bDebugCanvasEnableTextShadow: boolean;
        Categories: TArray<UE.GameplayDebuggerCategoryConfig>;
        Extensions: TArray<UE.GameplayDebuggerExtensionConfig>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayDebuggerConfig;
        static Load(InName: string): GameplayDebuggerConfig;
    
        __tid_GameplayDebuggerConfig_0__: boolean;
    }
    
    class GameplayDebuggerPlayerData {
        constructor();
        constructor(Controller: UE.GameplayDebuggerLocalController, InputComponent: UE.InputComponent, Replicator: UE.GameplayDebuggerCategoryReplicator);
        Controller: UE.GameplayDebuggerLocalController;
        InputComponent: UE.InputComponent;
        Replicator: UE.GameplayDebuggerCategoryReplicator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayDebuggerPlayerData_0__: boolean;
    }
    
    class GameplayDebuggerPlayerManager extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayerData: TArray<UE.GameplayDebuggerPlayerData>;
        PendingRegistrations: TArray<UE.GameplayDebuggerCategoryReplicator>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayDebuggerPlayerManager;
        static Load(InName: string): GameplayDebuggerPlayerManager;
    
        __tid_GameplayDebuggerPlayerManager_0__: boolean;
    }
    
    class GameplayDebuggerLocalController extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CachedReplicator: UE.GameplayDebuggerCategoryReplicator;
        CachedPlayerManager: UE.GameplayDebuggerPlayerManager;
        DebugActorCandidate: UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayDebuggerLocalController;
        static Load(InName: string): GameplayDebuggerLocalController;
    
        __tid_GameplayDebuggerLocalController_0__: boolean;
    }
    
    class PredictProjectilePathParams {
        constructor();
        constructor(StartLocation: UE.Vector, LaunchVelocity: UE.Vector, bTraceWithCollision: boolean, ProjectileRadius: number, MaxSimTime: number, bTraceWithChannel: boolean, TraceChannel: UE.ECollisionChannel, ObjectTypes: TArray<UE.EObjectTypeQuery>, ActorsToIgnore: TArray<UE.Actor>, SimFrequency: number, OverrideGravityZ: number, DrawDebugType: UE.EDrawDebugTrace, DrawDebugTime: number, bTraceComplex: boolean);
        StartLocation: UE.Vector;
        LaunchVelocity: UE.Vector;
        bTraceWithCollision: boolean;
        ProjectileRadius: number;
        MaxSimTime: number;
        bTraceWithChannel: boolean;
        TraceChannel: UE.ECollisionChannel;
        ObjectTypes: TArray<UE.EObjectTypeQuery>;
        ActorsToIgnore: TArray<UE.Actor>;
        SimFrequency: number;
        OverrideGravityZ: number;
        DrawDebugType: UE.EDrawDebugTrace;
        DrawDebugTime: number;
        bTraceComplex: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PredictProjectilePathParams_0__: boolean;
    }
    
    class PredictProjectilePathPointData {
        constructor();
        constructor(Location: UE.Vector, Velocity: UE.Vector, Time: number);
        Location: UE.Vector;
        Velocity: UE.Vector;
        Time: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PredictProjectilePathPointData_0__: boolean;
    }
    
    class PredictProjectilePathResult {
        constructor();
        constructor(PathData: TArray<UE.PredictProjectilePathPointData>, LastTraceDestination: UE.PredictProjectilePathPointData, HitResult: UE.HitResult);
        PathData: TArray<UE.PredictProjectilePathPointData>;
        LastTraceDestination: UE.PredictProjectilePathPointData;
        HitResult: UE.HitResult;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PredictProjectilePathResult_0__: boolean;
    }
    
    class GameplayStatics extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ActivateReverbEffect(WorldContextObject: $Nullable<UE.Object>, ReverbEffect: $Nullable<UE.ReverbEffect>, TagName: string, Priority?: number /* = 0.000000 */, Volume?: number /* = 0.500000 */, FadeTime?: number /* = 2.000000 */) : void;
        static AnnounceAccessibleString(AnnouncementString: string) : void;
        static ApplyDamage(DamagedActor: $Nullable<UE.Actor>, BaseDamage: number, EventInstigator: $Nullable<UE.Controller>, DamageCauser: $Nullable<UE.Actor>, DamageTypeClass: $Nullable<UE.Class>) : number;
        static ApplyPointDamage(DamagedActor: $Nullable<UE.Actor>, BaseDamage: number, HitFromDirection: UE.Vector, HitInfo: UE.HitResult, EventInstigator: $Nullable<UE.Controller>, DamageCauser: $Nullable<UE.Actor>, DamageTypeClass: $Nullable<UE.Class>) : number;
        static ApplyRadialDamage(WorldContextObject: $Nullable<UE.Object>, BaseDamage: number, Origin: UE.Vector, DamageRadius: number, DamageTypeClass: $Nullable<UE.Class>, IgnoreActors: TArray<UE.Actor>, DamageCauser?: UE.Actor /* = None */, InstigatedByController?: UE.Controller /* = None */, bDoFullDamage?: boolean /* = false */, DamagePreventionChannel?: UE.ECollisionChannel /* = ECC_Visibility */) : boolean;
        static ApplyRadialDamageWithFalloff(WorldContextObject: $Nullable<UE.Object>, BaseDamage: number, MinimumDamage: number, Origin: UE.Vector, DamageInnerRadius: number, DamageOuterRadius: number, DamageFalloff: number, DamageTypeClass: $Nullable<UE.Class>, IgnoreActors: TArray<UE.Actor>, DamageCauser?: UE.Actor /* = None */, InstigatedByController?: UE.Controller /* = None */, DamagePreventionChannel?: UE.ECollisionChannel /* = ECC_Visibility */) : boolean;
        static AreAnyListenersWithinRange(WorldContextObject: $Nullable<UE.Object>, Location: UE.Vector, MaximumRange: number) : boolean;
        static AreSubtitlesEnabled() : boolean;
        static BeginDeferredActorSpawnFromClass(WorldContextObject: $Nullable<UE.Object>, ActorClass: $Nullable<UE.Class>, SpawnTransform: UE.Transform, CollisionHandlingOverride?: UE.ESpawnActorCollisionHandlingMethod /* = Undefined */, Owner?: UE.Actor /* = None */) : UE.Actor;
        static BeginSpawningActorFromBlueprint(WorldContextObject: $Nullable<UE.Object>, Blueprint: $Nullable<UE.Blueprint>, SpawnTransform: UE.Transform, bNoCollisionFail: boolean) : UE.Actor;
        static BeginSpawningActorFromClass(WorldContextObject: $Nullable<UE.Object>, ActorClass: $Nullable<UE.Class>, SpawnTransform: UE.Transform, bNoCollisionFail?: boolean /* = false */, Owner?: UE.Actor /* = None */) : UE.Actor;
        static Blueprint_PredictProjectilePath_Advanced(WorldContextObject: $Nullable<UE.Object>, PredictParams: UE.PredictProjectilePathParams, PredictResult: $Ref<UE.PredictProjectilePathResult>) : boolean;
        static Blueprint_PredictProjectilePath_ByObjectType(WorldContextObject: $Nullable<UE.Object>, OutHit: $Ref<UE.HitResult>, OutPathPositions: $Ref<TArray<UE.Vector>>, OutLastTraceDestination: $Ref<UE.Vector>, StartPos: UE.Vector, LaunchVelocity: UE.Vector, bTracePath: boolean, ProjectileRadius: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, DrawDebugTime: number, SimFrequency?: number /* = 15.000000 */, MaxSimTime?: number /* = 2.000000 */, OverrideGravityZ?: number /* = 0.000000 */) : boolean;
        static Blueprint_PredictProjectilePath_ByTraceChannel(WorldContextObject: $Nullable<UE.Object>, OutHit: $Ref<UE.HitResult>, OutPathPositions: $Ref<TArray<UE.Vector>>, OutLastTraceDestination: $Ref<UE.Vector>, StartPos: UE.Vector, LaunchVelocity: UE.Vector, bTracePath: boolean, ProjectileRadius: number, TraceChannel: UE.ECollisionChannel, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, DrawDebugTime: number, SimFrequency?: number /* = 15.000000 */, MaxSimTime?: number /* = 2.000000 */, OverrideGravityZ?: number /* = 0.000000 */) : boolean;
        static BlueprintSuggestProjectileVelocity(WorldContextObject: $Nullable<UE.Object>, TossVelocity: $Ref<UE.Vector>, StartLocation: UE.Vector, EndLocation: UE.Vector, LaunchSpeed: number, OverrideGravityZ: number, TraceOption: UE.ESuggestProjVelocityTraceOption, CollisionRadius: number, bFavorHighArc: boolean, bDrawDebug: boolean) : boolean;
        static BreakHitResult(Hit: UE.HitResult, bBlockingHit: $Ref<boolean>, bInitialOverlap: $Ref<boolean>, Time: $Ref<number>, Distance: $Ref<number>, Location: $Ref<UE.Vector>, ImpactPoint: $Ref<UE.Vector>, Normal: $Ref<UE.Vector>, ImpactNormal: $Ref<UE.Vector>, PhysMat: $Ref<UE.PhysicalMaterial>, HitActor: $Ref<UE.Actor>, HitComponent: $Ref<UE.PrimitiveComponent>, HitBoneName: $Ref<string>, HitItem: $Ref<number>, FaceIndex: $Ref<number>, TraceStart: $Ref<UE.Vector>, TraceEnd: $Ref<UE.Vector>) : void;
        static CancelAsyncLoading() : void;
        static ClearSoundMixClassOverride(WorldContextObject: $Nullable<UE.Object>, InSoundMixModifier: $Nullable<UE.SoundMix>, InSoundClass: $Nullable<UE.SoundClass>, FadeOutTime?: number /* = 1.000000 */) : void;
        static ClearSoundMixModifiers(WorldContextObject: $Nullable<UE.Object>) : void;
        static CreatePlayer(WorldContextObject: $Nullable<UE.Object>, ControllerId?: number /* = -1 */, bSpawnPlayerController?: boolean /* = true */) : UE.PlayerController;
        static CreateSaveGameObject(SaveGameClass: $Nullable<UE.Class>) : UE.SaveGame;
        static CreateSound2D(WorldContextObject: $Nullable<UE.Object>, Sound: $Nullable<UE.SoundBase>, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, ConcurrencySettings?: UE.SoundConcurrency /* = None */, bPersistAcrossLevelTransition?: boolean /* = false */, bAutoDestroy?: boolean /* = true */) : UE.AudioComponent;
        static DeactivateReverbEffect(WorldContextObject: $Nullable<UE.Object>, TagName: string) : void;
        static DeleteGameInSlot(SlotName: string, UserIndex: number) : boolean;
        static DeprojectScreenToWorld(Player: $Nullable<UE.PlayerController>, ScreenPosition: UE.Vector2D, WorldPosition: $Ref<UE.Vector>, WorldDirection: $Ref<UE.Vector>) : boolean;
        static DoesSaveGameExist(SlotName: string, UserIndex: number) : boolean;
        static EnableLiveStreaming(Enable: boolean) : void;
        static FindCollisionUV(Hit: UE.HitResult, UVChannel: number, UV: $Ref<UE.Vector2D>) : boolean;
        static FinishSpawningActor(Actor: $Nullable<UE.Actor>, SpawnTransform: UE.Transform) : UE.Actor;
        static FlushLevelStreaming(WorldContextObject: $Nullable<UE.Object>) : void;
        static GetAccurateRealTime(WorldContextObject: $Nullable<UE.Object>, Seconds: $Ref<number>, PartialSeconds: $Ref<number>) : void;
        static GetActorArrayAverageLocation(Actors: TArray<UE.Actor>) : UE.Vector;
        static GetActorArrayBounds(Actors: TArray<UE.Actor>, bOnlyCollidingComponents: boolean, Center: $Ref<UE.Vector>, BoxExtent: $Ref<UE.Vector>) : void;
        static GetActorOfClass(WorldContextObject: $Nullable<UE.Object>, ActorClass: $Nullable<UE.Class>) : UE.Actor;
        static GetAllActorsOfClass(WorldContextObject: $Nullable<UE.Object>, ActorClass: $Nullable<UE.Class>, OutActors: $Ref<TArray<UE.Actor>>) : void;
        static GetAllActorsOfClassWithTag(WorldContextObject: $Nullable<UE.Object>, ActorClass: $Nullable<UE.Class>, Tag: string, OutActors: $Ref<TArray<UE.Actor>>) : void;
        static GetAllActorsWithInterface(WorldContextObject: $Nullable<UE.Object>, Interface: $Nullable<UE.Class>, OutActors: $Ref<TArray<UE.Actor>>) : void;
        static GetAllActorsWithTag(WorldContextObject: $Nullable<UE.Object>, Tag: string, OutActors: $Ref<TArray<UE.Actor>>) : void;
        static GetAudioTimeSeconds(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetClosestListenerLocation(WorldContextObject: $Nullable<UE.Object>, Location: UE.Vector, MaximumRange: number, bAllowAttenuationOverride: boolean, ListenerPosition: $Ref<UE.Vector>) : boolean;
        static GetCurrentLevelName(WorldContextObject: $Nullable<UE.Object>, bRemovePrefixString?: boolean /* = true */) : string;
        static GetCurrentReverbEffect(WorldContextObject: $Nullable<UE.Object>) : UE.ReverbEffect;
        static GetEnableWorldRendering(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static GetGameInstance(WorldContextObject: $Nullable<UE.Object>) : UE.GameInstance;
        static GetGameMode(WorldContextObject: $Nullable<UE.Object>) : UE.GameModeBase;
        static GetGameState(WorldContextObject: $Nullable<UE.Object>) : UE.GameStateBase;
        static GetGlobalTimeDilation(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetIntOption(Options: string, Key: string, DefaultValue: number) : number;
        static GetKeyValue(Pair: string, Key: $Ref<string>, Value: $Ref<string>) : void;
        static GetMaxAudioChannelCount(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetObjectClass(Object: $Nullable<UE.Object>) : UE.Class;
        static GetPlatformName() : string;
        static GetPlayerCameraManager(WorldContextObject: $Nullable<UE.Object>, PlayerIndex: number) : UE.PlayerCameraManager;
        static GetPlayerCharacter(WorldContextObject: $Nullable<UE.Object>, PlayerIndex: number) : UE.Character;
        static GetPlayerController(WorldContextObject: $Nullable<UE.Object>, PlayerIndex: number) : UE.PlayerController;
        static GetPlayerControllerFromID(WorldContextObject: $Nullable<UE.Object>, ControllerID: number) : UE.PlayerController;
        static GetPlayerControllerID(Player: $Nullable<UE.PlayerController>) : number;
        static GetPlayerPawn(WorldContextObject: $Nullable<UE.Object>, PlayerIndex: number) : UE.Pawn;
        static GetRealTimeSeconds(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetStreamingLevel(WorldContextObject: $Nullable<UE.Object>, PackageName: string) : UE.LevelStreaming;
        static GetSurfaceType(Hit: UE.HitResult) : UE.EPhysicalSurface;
        static GetTimeSeconds(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetUnpausedTimeSeconds(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetViewportMouseCaptureMode(WorldContextObject: $Nullable<UE.Object>) : UE.EMouseCaptureMode;
        static GetViewProjectionMatrix(DesiredView: UE.MinimalViewInfo, ViewMatrix: $Ref<UE.Matrix>, ProjectionMatrix: $Ref<UE.Matrix>, ViewProjectionMatrix: $Ref<UE.Matrix>) : void;
        static GetWorldDeltaSeconds(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetWorldOriginLocation(WorldContextObject: $Nullable<UE.Object>) : UE.IntVector;
        static GrassOverlappingSphereCount(WorldContextObject: $Nullable<UE.Object>, StaticMesh: $Nullable<UE.StaticMesh>, CenterPosition: UE.Vector, Radius: number) : number;
        static HasLaunchOption(OptionToCheck: string) : boolean;
        static HasOption(Options: string, InKey: string) : boolean;
        static IsGamePaused(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static IsSplitscreenForceDisabled(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static LoadGameFromSlot(SlotName: string, UserIndex: number) : UE.SaveGame;
        static LoadStreamLevel(WorldContextObject: $Nullable<UE.Object>, LevelName: string, bMakeVisibleAfterLoad: boolean, bShouldBlockOnLoad: boolean, LatentInfo: UE.LatentActionInfo) : void;
        static LoadStreamLevelBySoftObjectPtr(WorldContextObject: $Nullable<UE.Object>, Level: TSoftObjectPtr<UE.World>, bMakeVisibleAfterLoad: boolean, bShouldBlockOnLoad: boolean, LatentInfo: UE.LatentActionInfo) : void;
        static MakeHitResult(bBlockingHit: boolean, bInitialOverlap: boolean, Time: number, Distance: number, Location: UE.Vector, ImpactPoint: UE.Vector, Normal: UE.Vector, ImpactNormal: UE.Vector, PhysMat: $Nullable<UE.PhysicalMaterial>, HitActor: $Nullable<UE.Actor>, HitComponent: $Nullable<UE.PrimitiveComponent>, HitBoneName: string, HitItem: number, FaceIndex: number, TraceStart: UE.Vector, TraceEnd: UE.Vector) : UE.HitResult;
        static OpenLevel(WorldContextObject: $Nullable<UE.Object>, LevelName: string, bAbsolute?: boolean /* = true */, Options?: string /* = "" */) : void;
        static OpenLevelBySoftObjectPtr(WorldContextObject: $Nullable<UE.Object>, Level: TSoftObjectPtr<UE.World>, bAbsolute?: boolean /* = true */, Options?: string /* = "" */) : void;
        static ParseOption(Options: string, Key: string) : string;
        static PlayDialogue2D(WorldContextObject: $Nullable<UE.Object>, Dialogue: $Nullable<UE.DialogueWave>, Context: UE.DialogueContext, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */) : void;
        static PlayDialogueAtLocation(WorldContextObject: $Nullable<UE.Object>, Dialogue: $Nullable<UE.DialogueWave>, Context: UE.DialogueContext, Location: UE.Vector, Rotation: UE.Rotator, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.SoundAttenuation /* = None */) : void;
        static PlaySound2D(WorldContextObject: $Nullable<UE.Object>, Sound: $Nullable<UE.SoundBase>, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, ConcurrencySettings?: UE.SoundConcurrency /* = None */, OwningActor?: UE.Actor /* = None */, bIsUISound?: boolean /* = true */) : void;
        static PlaySoundAtLocation(WorldContextObject: $Nullable<UE.Object>, Sound: $Nullable<UE.SoundBase>, Location: UE.Vector, Rotation: UE.Rotator, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.SoundAttenuation /* = None */, ConcurrencySettings?: UE.SoundConcurrency /* = None */, OwningActor?: UE.Actor /* = None */) : void;
        static PlayWorldCameraShake(WorldContextObject: $Nullable<UE.Object>, Shake: $Nullable<UE.Class>, Epicenter: UE.Vector, InnerRadius: number, OuterRadius: number, Falloff?: number /* = 1.000000 */, bOrientShakeTowardsEpicenter?: boolean /* = false */) : void;
        static PopSoundMixModifier(WorldContextObject: $Nullable<UE.Object>, InSoundMixModifier: $Nullable<UE.SoundMix>) : void;
        static PrimeSound(InSound: $Nullable<UE.SoundBase>) : void;
        static ProjectWorldToScreen(Player: $Nullable<UE.PlayerController>, WorldPosition: UE.Vector, ScreenPosition: $Ref<UE.Vector2D>, bPlayerViewportRelative?: boolean /* = false */) : boolean;
        static PushSoundMixModifier(WorldContextObject: $Nullable<UE.Object>, InSoundMixModifier: $Nullable<UE.SoundMix>) : void;
        static RebaseLocalOriginOntoZero(WorldContextObject: $Nullable<UE.Object>, WorldLocation: UE.Vector) : UE.Vector;
        static RebaseZeroOriginOntoLocal(WorldContextObject: $Nullable<UE.Object>, WorldLocation: UE.Vector) : UE.Vector;
        static RemovePlayer(Player: $Nullable<UE.PlayerController>, bDestroyPawn: boolean) : void;
        static SaveGameToSlot(SaveGameObject: $Nullable<UE.SaveGame>, SlotName: string, UserIndex: number) : boolean;
        static SetBaseSoundMix(WorldContextObject: $Nullable<UE.Object>, InSoundMix: $Nullable<UE.SoundMix>) : void;
        static SetEnableWorldRendering(WorldContextObject: $Nullable<UE.Object>, bEnable: boolean) : void;
        static SetForceDisableSplitscreen(WorldContextObject: $Nullable<UE.Object>, bDisable: boolean) : void;
        static SetGamePaused(WorldContextObject: $Nullable<UE.Object>, bPaused: boolean) : boolean;
        static SetGlobalListenerFocusParameters(WorldContextObject: $Nullable<UE.Object>, FocusAzimuthScale?: number /* = 1.000000 */, NonFocusAzimuthScale?: number /* = 1.000000 */, FocusDistanceScale?: number /* = 1.000000 */, NonFocusDistanceScale?: number /* = 1.000000 */, FocusVolumeScale?: number /* = 1.000000 */, NonFocusVolumeScale?: number /* = 1.000000 */, FocusPriorityScale?: number /* = 1.000000 */, NonFocusPriorityScale?: number /* = 1.000000 */) : void;
        static SetGlobalPitchModulation(WorldContextObject: $Nullable<UE.Object>, PitchModulation: number, TimeSec: number) : void;
        static SetGlobalTimeDilation(WorldContextObject: $Nullable<UE.Object>, TimeDilation: number) : void;
        static SetMaxAudioChannelsScaled(WorldContextObject: $Nullable<UE.Object>, MaxChannelCountScale: number) : void;
        static SetPlayerControllerID(Player: $Nullable<UE.PlayerController>, ControllerId: number) : void;
        static SetSoundClassDistanceScale(WorldContextObject: $Nullable<UE.Object>, SoundClass: $Nullable<UE.SoundClass>, DistanceAttenuationScale: number, TimeSec?: number /* = 0.000000 */) : void;
        static SetSoundMixClassOverride(WorldContextObject: $Nullable<UE.Object>, InSoundMixModifier: $Nullable<UE.SoundMix>, InSoundClass: $Nullable<UE.SoundClass>, Volume?: number /* = 1.000000 */, Pitch?: number /* = 1.000000 */, FadeInTime?: number /* = 1.000000 */, bApplyToChildren?: boolean /* = true */) : void;
        static SetSubtitlesEnabled(bEnabled: boolean) : void;
        static SetViewportMouseCaptureMode(WorldContextObject: $Nullable<UE.Object>, MouseCaptureMode: UE.EMouseCaptureMode) : void;
        static SetWorldOriginLocation(WorldContextObject: $Nullable<UE.Object>, NewLocation: UE.IntVector) : void;
        static SpawnDecalAtLocation(WorldContextObject: $Nullable<UE.Object>, DecalMaterial: $Nullable<UE.MaterialInterface>, DecalSize: UE.Vector, Location: UE.Vector, Rotation?: UE.Rotator /* = -90.000000,0.000000,0.000000 */, LifeSpan?: number /* = 0.000000 */) : UE.DecalComponent;
        static SpawnDecalAttached(DecalMaterial: $Nullable<UE.MaterialInterface>, DecalSize: UE.Vector, AttachToComponent: $Nullable<UE.SceneComponent>, AttachPointName?: string /* = "None" */, Location?: UE.Vector /* =  */, Rotation?: UE.Rotator /* =  */, LocationType?: UE.EAttachLocation /* = KeepRelativeOffset */, LifeSpan?: number /* = 0.000000 */) : UE.DecalComponent;
        static SpawnDialogue2D(WorldContextObject: $Nullable<UE.Object>, Dialogue: $Nullable<UE.DialogueWave>, Context: UE.DialogueContext, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, bAutoDestroy?: boolean /* = true */) : UE.AudioComponent;
        static SpawnDialogueAtLocation(WorldContextObject: $Nullable<UE.Object>, Dialogue: $Nullable<UE.DialogueWave>, Context: UE.DialogueContext, Location: UE.Vector, Rotation?: UE.Rotator /* =  */, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.SoundAttenuation /* = None */, bAutoDestroy?: boolean /* = true */) : UE.AudioComponent;
        static SpawnDialogueAttached(Dialogue: $Nullable<UE.DialogueWave>, Context: UE.DialogueContext, AttachToComponent: $Nullable<UE.SceneComponent>, AttachPointName?: string /* = "None" */, Location?: UE.Vector /* =  */, Rotation?: UE.Rotator /* =  */, LocationType?: UE.EAttachLocation /* = KeepRelativeOffset */, bStopWhenAttachedToDestroyed?: boolean /* = false */, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.SoundAttenuation /* = None */, bAutoDestroy?: boolean /* = true */) : UE.AudioComponent;
        static SpawnEmitterAtLocation(WorldContextObject: $Nullable<UE.Object>, EmitterTemplate: $Nullable<UE.ParticleSystem>, Location: UE.Vector, Rotation?: UE.Rotator /* =  */, Scale?: UE.Vector /* = 1.000000,1.000000,1.000000 */, bAutoDestroy?: boolean /* = true */, PoolingMethod?: UE.EPSCPoolMethod /* = None */, bAutoActivateSystem?: boolean /* = true */) : UE.ParticleSystemComponent;
        static SpawnEmitterAttached(EmitterTemplate: $Nullable<UE.ParticleSystem>, AttachToComponent: $Nullable<UE.SceneComponent>, AttachPointName?: string /* = "None" */, Location?: UE.Vector /* =  */, Rotation?: UE.Rotator /* =  */, Scale?: UE.Vector /* = 1.000000,1.000000,1.000000 */, LocationType?: UE.EAttachLocation /* = KeepRelativeOffset */, bAutoDestroy?: boolean /* = true */, PoolingMethod?: UE.EPSCPoolMethod /* = None */, bAutoActivate?: boolean /* = true */) : UE.ParticleSystemComponent;
        static SpawnForceFeedbackAtLocation(WorldContextObject: $Nullable<UE.Object>, ForceFeedbackEffect: $Nullable<UE.ForceFeedbackEffect>, Location: UE.Vector, Rotation?: UE.Rotator /* =  */, bLooping?: boolean /* = false */, IntensityMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.ForceFeedbackAttenuation /* = None */, bAutoDestroy?: boolean /* = true */) : UE.ForceFeedbackComponent;
        static SpawnForceFeedbackAttached(ForceFeedbackEffect: $Nullable<UE.ForceFeedbackEffect>, AttachToComponent: $Nullable<UE.SceneComponent>, AttachPointName?: string /* = "None" */, Location?: UE.Vector /* =  */, Rotation?: UE.Rotator /* =  */, LocationType?: UE.EAttachLocation /* = KeepRelativeOffset */, bStopWhenAttachedToDestroyed?: boolean /* = false */, bLooping?: boolean /* = false */, IntensityMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.ForceFeedbackAttenuation /* = None */, bAutoDestroy?: boolean /* = true */) : UE.ForceFeedbackComponent;
        static SpawnObject(ObjectClass: $Nullable<UE.Class>, Outer: $Nullable<UE.Object>) : UE.Object;
        static SpawnSound2D(WorldContextObject: $Nullable<UE.Object>, Sound: $Nullable<UE.SoundBase>, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, ConcurrencySettings?: UE.SoundConcurrency /* = None */, bPersistAcrossLevelTransition?: boolean /* = false */, bAutoDestroy?: boolean /* = true */) : UE.AudioComponent;
        static SpawnSoundAtLocation(WorldContextObject: $Nullable<UE.Object>, Sound: $Nullable<UE.SoundBase>, Location: UE.Vector, Rotation?: UE.Rotator /* =  */, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.SoundAttenuation /* = None */, ConcurrencySettings?: UE.SoundConcurrency /* = None */, bAutoDestroy?: boolean /* = true */) : UE.AudioComponent;
        static SpawnSoundAttached(Sound: $Nullable<UE.SoundBase>, AttachToComponent: $Nullable<UE.SceneComponent>, AttachPointName?: string /* = "None" */, Location?: UE.Vector /* =  */, Rotation?: UE.Rotator /* =  */, LocationType?: UE.EAttachLocation /* = KeepRelativeOffset */, bStopWhenAttachedToDestroyed?: boolean /* = false */, VolumeMultiplier?: number /* = 1.000000 */, PitchMultiplier?: number /* = 1.000000 */, StartTime?: number /* = 0.000000 */, AttenuationSettings?: UE.SoundAttenuation /* = None */, ConcurrencySettings?: UE.SoundConcurrency /* = None */, bAutoDestroy?: boolean /* = true */) : UE.AudioComponent;
        static SuggestProjectileVelocity_CustomArc(WorldContextObject: $Nullable<UE.Object>, OutLaunchVelocity: $Ref<UE.Vector>, StartPos: UE.Vector, EndPos: UE.Vector, OverrideGravityZ?: number /* = 0.000000 */, ArcParam?: number /* = 0.500000 */) : boolean;
        static UnloadStreamLevel(WorldContextObject: $Nullable<UE.Object>, LevelName: string, LatentInfo: UE.LatentActionInfo, bShouldBlockOnUnload: boolean) : void;
        static UnloadStreamLevelBySoftObjectPtr(WorldContextObject: $Nullable<UE.Object>, Level: TSoftObjectPtr<UE.World>, LatentInfo: UE.LatentActionInfo, bShouldBlockOnUnload: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayStatics;
        static Load(InName: string): GameplayStatics;
    
        __tid_GameplayStatics_0__: boolean;
    }
    
    class GameplayTagCategoryRemap {
        constructor();
        constructor(BaseCategory: string, RemapCategories: TArray<string>);
        BaseCategory: string;
        RemapCategories: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagCategoryRemap_0__: boolean;
    }
    
    class GameplayTagCreationWidgetHelper {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagCreationWidgetHelper_0__: boolean;
    }
    
    class GameplayTagNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagNode_0__: boolean;
    }
    
    class GameplayTagRedirect {
        constructor();
        constructor(OldTagName: string, NewTagName: string);
        OldTagName: string;
        NewTagName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagRedirect_0__: boolean;
    }
    
    class GameplayTagReferenceHelper {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagReferenceHelper_0__: boolean;
    }
    
    class GameplayTagsDeveloperSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DeveloperConfigName: string;
        FavoriteTagSource: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsDeveloperSettings;
        static Load(InName: string): GameplayTagsDeveloperSettings;
    
        __tid_GameplayTagsDeveloperSettings_0__: boolean;
    }
    
    class GameplayTagSearchFilter extends UE.ContentBrowserFrontEndFilterExtension {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagSearchFilter;
        static Load(InName: string): GameplayTagSearchFilter;
    
        __tid_GameplayTagSearchFilter_0__: boolean;
    }
    
    class GameplayTagsK2Node_LiteralGameplayTag extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_LiteralGameplayTag;
        static Load(InName: string): GameplayTagsK2Node_LiteralGameplayTag;
    
        __tid_GameplayTagsK2Node_LiteralGameplayTag_0__: boolean;
    }
    
    class GameplayTagsK2Node_MultiCompareBase extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberOfPins: number;
        PinNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_MultiCompareBase;
        static Load(InName: string): GameplayTagsK2Node_MultiCompareBase;
    
        __tid_GameplayTagsK2Node_MultiCompareBase_0__: boolean;
    }
    
    class GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface extends UE.GameplayTagsK2Node_MultiCompareBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface;
        static Load(InName: string): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface;
    
        __tid_GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface_0__: boolean;
    }
    
    class GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags extends UE.GameplayTagsK2Node_MultiCompareBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags;
        static Load(InName: string): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags;
    
        __tid_GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags_0__: boolean;
    }
    
    class GameplayTagsK2Node_MultiCompareGameplayTagContainer extends UE.GameplayTagsK2Node_MultiCompareBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_MultiCompareGameplayTagContainer;
        static Load(InName: string): GameplayTagsK2Node_MultiCompareGameplayTagContainer;
    
        __tid_GameplayTagsK2Node_MultiCompareGameplayTagContainer_0__: boolean;
    }
    
    class GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags extends UE.GameplayTagsK2Node_MultiCompareBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags;
        static Load(InName: string): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags;
    
        __tid_GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags_0__: boolean;
    }
    
    class K2Node_Switch extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bHasDefaultPin: boolean;
        FunctionName: string;
        FunctionClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Switch;
        static Load(InName: string): K2Node_Switch;
    
        __tid_K2Node_Switch_0__: boolean;
    }
    
    class GameplayTagsK2Node_SwitchGameplayTag extends UE.K2Node_Switch {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinTags: TArray<UE.GameplayTag>;
        PinNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_SwitchGameplayTag;
        static Load(InName: string): GameplayTagsK2Node_SwitchGameplayTag;
    
        __tid_GameplayTagsK2Node_SwitchGameplayTag_0__: boolean;
    }
    
    class GameplayTagsK2Node_SwitchGameplayTagContainer extends UE.K2Node_Switch {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinContainers: TArray<UE.GameplayTagContainer>;
        PinNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsK2Node_SwitchGameplayTagContainer;
        static Load(InName: string): GameplayTagsK2Node_SwitchGameplayTagContainer;
    
        __tid_GameplayTagsK2Node_SwitchGameplayTagContainer_0__: boolean;
    }
    
    class GameplayTagTableRow extends UE.TableRowBase {
        constructor();
        constructor(Tag: string, DevComment: string);
        Tag: string;
        DevComment: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagTableRow_0__: boolean;
    }
    
    class GameplayTagsList extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConfigFileName: string;
        GameplayTagList: TArray<UE.GameplayTagTableRow>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsList;
        static Load(InName: string): GameplayTagsList;
    
        __tid_GameplayTagsList_0__: boolean;
    }
    
    class RestrictedGameplayTagTableRow extends UE.GameplayTagTableRow {
        constructor();
        constructor(bAllowNonRestrictedChildren: boolean);
        bAllowNonRestrictedChildren: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RestrictedGameplayTagTableRow_0__: boolean;
    }
    
    class RestrictedGameplayTagsList extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConfigFileName: string;
        RestrictedGameplayTagList: TArray<UE.RestrictedGameplayTagTableRow>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RestrictedGameplayTagsList;
        static Load(InName: string): RestrictedGameplayTagsList;
    
        __tid_RestrictedGameplayTagsList_0__: boolean;
    }
    
    class GameplayTagSource {
        constructor();
        constructor(SourceName: string, SourceType: UE.EGameplayTagSourceType, SourceTagList: UE.GameplayTagsList, SourceRestrictedTagList: UE.RestrictedGameplayTagsList);
        SourceName: string;
        SourceType: UE.EGameplayTagSourceType;
        SourceTagList: UE.GameplayTagsList;
        SourceRestrictedTagList: UE.RestrictedGameplayTagsList;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GameplayTagSource_0__: boolean;
    }
    
    class GameplayTagsManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TagSources: TArray<UE.GameplayTagSource>;
        GameplayTagTables: TArray<UE.DataTable>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsManager;
        static Load(InName: string): GameplayTagsManager;
    
        __tid_GameplayTagsManager_0__: boolean;
    }
    
    class RestrictedConfigInfo {
        constructor();
        constructor(RestrictedConfigName: string, Owners: TArray<string>);
        RestrictedConfigName: string;
        Owners: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RestrictedConfigInfo_0__: boolean;
    }
    
    class GameplayTagsSettings extends UE.GameplayTagsList {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportTagsFromConfig: boolean;
        WarnOnInvalidTags: boolean;
        FastReplication: boolean;
        InvalidTagCharacters: string;
        CategoryRemapping: TArray<UE.GameplayTagCategoryRemap>;
        GameplayTagTableList: TArray<UE.SoftObjectPath>;
        GameplayTagRedirects: TArray<UE.GameplayTagRedirect>;
        CommonlyReplicatedTags: TArray<string>;
        NumBitsForContainerSize: number;
        NetIndexFirstBitSegment: number;
        RestrictedConfigFiles: TArray<UE.RestrictedConfigInfo>;
        RestrictedTagList: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTagsSettings;
        static Load(InName: string): GameplayTagsSettings;
    
        __tid_GameplayTagsSettings_0__: boolean;
    }
    
    class GameplayTask_ClaimResource extends UE.GameplayTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ClaimResource(InTaskOwner: GameplayTaskOwnerInterface, ResourceClass: $Nullable<UE.Class>, Priority?: number /* = 192 */, TaskInstanceName?: string /* = "None" */) : UE.GameplayTask_ClaimResource;
        static ClaimResources(InTaskOwner: GameplayTaskOwnerInterface, ResourceClasses: TArray<UE.Class>, Priority?: number /* = 192 */, TaskInstanceName?: string /* = "None" */) : UE.GameplayTask_ClaimResource;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTask_ClaimResource;
        static Load(InName: string): GameplayTask_ClaimResource;
    
        __tid_GameplayTask_ClaimResource_0__: boolean;
    }
    
    class GameplayTask_SpawnActor extends UE.GameplayTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Success: $MulticastDelegate<(SpawnedActor: $Nullable<UE.Actor>) => void>;
        DidNotSpawn: $MulticastDelegate<(SpawnedActor: $Nullable<UE.Actor>) => void>;
        ClassToSpawn: UE.Class;
        BeginSpawningActor(WorldContextObject: $Nullable<UE.Object>, SpawnedActor: $Ref<UE.Actor>) : boolean;
        FinishSpawningActor(WorldContextObject: $Nullable<UE.Object>, SpawnedActor: $Nullable<UE.Actor>) : void;
        static SpawnActor(TaskOwner: GameplayTaskOwnerInterface, SpawnLocation: UE.Vector, SpawnRotation: UE.Rotator, Class: $Nullable<UE.Class>, bSpawnOnlyOnAuthority?: boolean /* = false */) : UE.GameplayTask_SpawnActor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTask_SpawnActor;
        static Load(InName: string): GameplayTask_SpawnActor;
    
        __tid_GameplayTask_SpawnActor_0__: boolean;
    }
    
    class GameplayTask_TimeLimitedExecution extends UE.GameplayTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnFinished: $MulticastDelegate<() => void>;
        OnTimeExpired: $MulticastDelegate<() => void>;
        TaskFinishDelegate__DelegateSignature() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTask_TimeLimitedExecution;
        static Load(InName: string): GameplayTask_TimeLimitedExecution;
    
        __tid_GameplayTask_TimeLimitedExecution_0__: boolean;
    }
    
    class GameplayTask_WaitDelay extends UE.GameplayTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnFinish: $MulticastDelegate<() => void>;
        TaskDelayDelegate__DelegateSignature() : void;
        static TaskWaitDelay(TaskOwner: GameplayTaskOwnerInterface, Time: number, Priority?: number /* = 192 */) : UE.GameplayTask_WaitDelay;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameplayTask_WaitDelay;
        static Load(InName: string): GameplayTask_WaitDelay;
    
        __tid_GameplayTask_WaitDelay_0__: boolean;
    }
    
    class GameSessionSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxSpectators: number;
        MaxPlayers: number;
        bRequiresPushToTalk: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GameSessionSettings;
        static Load(InName: string): GameSessionSettings;
    
        __tid_GameSessionSettings_0__: boolean;
    }
    
    class GarbageCollectionSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TimeBetweenPurgingPendingKillObjects: number;
        FlushStreamingOnGC: boolean;
        AllowParallelGC: boolean;
        IncrementalBeginDestroyEnabled: boolean;
        MultithreadedDestructionEnabled: boolean;
        CreateGCClusters: boolean;
        AssetClusteringEnabled: boolean;
        ActorClusteringEnabled: boolean;
        BlueprintClusteringEnabled: boolean;
        UseDisregardForGCOnDedicatedServers: boolean;
        MinGCClusterSize: number;
        NumRetriesBeforeForcingGC: number;
        MaxObjectsNotConsideredByGC: number;
        SizeOfPermanentObjectPool: number;
        MaxObjectsInGame: number;
        MaxObjectsInEditor: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GarbageCollectionSettings;
        static Load(InName: string): GarbageCollectionSettings;
    
        __tid_GarbageCollectionSettings_0__: boolean;
    }
    
    class GatherTextCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GatherTextCommandlet;
        static Load(InName: string): GatherTextCommandlet;
    
        __tid_GatherTextCommandlet_0__: boolean;
    }
    
    class GatherTextExcludePath {
        constructor();
        constructor(PathRoot: UE.ELocalizationGatherPathRoot, Pattern: string);
        PathRoot: UE.ELocalizationGatherPathRoot;
        Pattern: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GatherTextExcludePath_0__: boolean;
    }
    
    class GatherTextFileExtension {
        constructor();
        constructor(Pattern: string);
        Pattern: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GatherTextFileExtension_0__: boolean;
    }
    
    class GatherTextFromAssetsCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GatherTextFromAssetsCommandlet;
        static Load(InName: string): GatherTextFromAssetsCommandlet;
    
        __tid_GatherTextFromAssetsCommandlet_0__: boolean;
    }
    
    class GatherTextFromMetaDataCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GatherTextFromMetaDataCommandlet;
        static Load(InName: string): GatherTextFromMetaDataCommandlet;
    
        __tid_GatherTextFromMetaDataCommandlet_0__: boolean;
    }
    
    class GatherTextIncludePath {
        constructor();
        constructor(PathRoot: UE.ELocalizationGatherPathRoot, Pattern: string);
        PathRoot: UE.ELocalizationGatherPathRoot;
        Pattern: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GatherTextIncludePath_0__: boolean;
    }
    
    class MetaDataKeyName {
        constructor();
        constructor(Name: string);
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MetaDataKeyName_0__: boolean;
    }
    
    class MetaDataTextKeyPattern {
        constructor();
        constructor(Pattern: string);
        Pattern: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MetaDataTextKeyPattern_0__: boolean;
    }
    
    class MetaDataKeyGatherSpecification {
        constructor();
        constructor(MetaDataKey: UE.MetaDataKeyName, TextNamespace: string, TextKeyPattern: UE.MetaDataTextKeyPattern);
        MetaDataKey: UE.MetaDataKeyName;
        TextNamespace: string;
        TextKeyPattern: UE.MetaDataTextKeyPattern;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MetaDataKeyGatherSpecification_0__: boolean;
    }
    
    class GatherTextFromMetaDataConfiguration {
        constructor();
        constructor(IsEnabled: boolean, IncludePathWildcards: TArray<UE.GatherTextIncludePath>, ExcludePathWildcards: TArray<UE.GatherTextExcludePath>, KeySpecifications: TArray<UE.MetaDataKeyGatherSpecification>, ShouldGatherFromEditorOnlyData: boolean);
        IsEnabled: boolean;
        IncludePathWildcards: TArray<UE.GatherTextIncludePath>;
        ExcludePathWildcards: TArray<UE.GatherTextExcludePath>;
        KeySpecifications: TArray<UE.MetaDataKeyGatherSpecification>;
        ShouldGatherFromEditorOnlyData: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GatherTextFromMetaDataConfiguration_0__: boolean;
    }
    
    class GatherTextFromPackagesConfiguration {
        constructor();
        constructor(IsEnabled: boolean, IncludePathWildcards: TArray<UE.GatherTextIncludePath>, ExcludePathWildcards: TArray<UE.GatherTextExcludePath>, FileExtensions: TArray<UE.GatherTextFileExtension>, Collections: TArray<string>, ExcludeClasses: TArray<UE.SoftClassPath>, ShouldExcludeDerivedClasses: boolean, ShouldGatherFromEditorOnlyData: boolean, SkipGatherCache: boolean);
        IsEnabled: boolean;
        IncludePathWildcards: TArray<UE.GatherTextIncludePath>;
        ExcludePathWildcards: TArray<UE.GatherTextExcludePath>;
        FileExtensions: TArray<UE.GatherTextFileExtension>;
        Collections: TArray<string>;
        ExcludeClasses: TArray<UE.SoftClassPath>;
        ShouldExcludeDerivedClasses: boolean;
        ShouldGatherFromEditorOnlyData: boolean;
        SkipGatherCache: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GatherTextFromPackagesConfiguration_0__: boolean;
    }
    
    class GatherTextFromSourceCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GatherTextFromSourceCommandlet;
        static Load(InName: string): GatherTextFromSourceCommandlet;
    
        __tid_GatherTextFromSourceCommandlet_0__: boolean;
    }
    
    class GatherTextSearchDirectory {
        constructor();
        constructor(PathRoot: UE.ELocalizationGatherPathRoot, Path: string);
        PathRoot: UE.ELocalizationGatherPathRoot;
        Path: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GatherTextSearchDirectory_0__: boolean;
    }
    
    class GatherTextFromTextFilesConfiguration {
        constructor();
        constructor(IsEnabled: boolean, SearchDirectories: TArray<UE.GatherTextSearchDirectory>, ExcludePathWildcards: TArray<UE.GatherTextExcludePath>, FileExtensions: TArray<UE.GatherTextFileExtension>, ShouldGatherFromEditorOnlyData: boolean);
        IsEnabled: boolean;
        SearchDirectories: TArray<UE.GatherTextSearchDirectory>;
        ExcludePathWildcards: TArray<UE.GatherTextExcludePath>;
        FileExtensions: TArray<UE.GatherTextFileExtension>;
        ShouldGatherFromEditorOnlyData: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GatherTextFromTextFilesConfiguration_0__: boolean;
    }
    
    class GaussianSumBloomSettings {
        constructor();
        constructor(Intensity: number, Threshold: number, SizeScale: number, Filter1Size: number, Filter2Size: number, Filter3Size: number, Filter4Size: number, Filter5Size: number, Filter6Size: number, Filter1Tint: UE.LinearColor, Filter2Tint: UE.LinearColor, Filter3Tint: UE.LinearColor, Filter4Tint: UE.LinearColor, Filter5Tint: UE.LinearColor, Filter6Tint: UE.LinearColor);
        Intensity: number;
        Threshold: number;
        SizeScale: number;
        Filter1Size: number;
        Filter2Size: number;
        Filter3Size: number;
        Filter4Size: number;
        Filter5Size: number;
        Filter6Size: number;
        Filter1Tint: UE.LinearColor;
        Filter2Tint: UE.LinearColor;
        Filter3Tint: UE.LinearColor;
        Filter4Tint: UE.LinearColor;
        Filter5Tint: UE.LinearColor;
        Filter6Tint: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GaussianSumBloomSettings_0__: boolean;
    }
    
    class GCObjectReferencer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GCObjectReferencer;
        static Load(InName: string): GCObjectReferencer;
    
        __tid_GCObjectReferencer_0__: boolean;
    }
    
    class GeneralEngineSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeneralEngineSettings;
        static Load(InName: string): GeneralEngineSettings;
    
        __tid_GeneralEngineSettings_0__: boolean;
    }
    
    class GeneralProjectSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CompanyName: string;
        CompanyDistinguishedName: string;
        CopyrightNotice: string;
        Description: string;
        Homepage: string;
        LicensingTerms: string;
        PrivacyPolicy: string;
        ProjectID: UE.Guid;
        ProjectName: string;
        ProjectVersion: string;
        SupportContact: string;
        ProjectDisplayedTitle: string;
        ProjectDebugTitleInfo: string;
        bShouldWindowPreserveAspectRatio: boolean;
        bUseBorderlessWindow: boolean;
        bStartInVR: boolean;
        bAllowWindowResize: boolean;
        bAllowClose: boolean;
        bAllowMaximize: boolean;
        bAllowMinimize: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeneralProjectSettings;
        static Load(InName: string): GeneralProjectSettings;
    
        __tid_GeneralProjectSettings_0__: boolean;
    }
    
    class GenerateAssetManifestCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenerateAssetManifestCommandlet;
        static Load(InName: string): GenerateAssetManifestCommandlet;
    
        __tid_GenerateAssetManifestCommandlet_0__: boolean;
    }
    
    class GenerateBlueprintAPICommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenerateBlueprintAPICommandlet;
        static Load(InName: string): GenerateBlueprintAPICommandlet;
    
        __tid_GenerateBlueprintAPICommandlet_0__: boolean;
    }
    
    class GenerateDistillFileSetsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenerateDistillFileSetsCommandlet;
        static Load(InName: string): GenerateDistillFileSetsCommandlet;
    
        __tid_GenerateDistillFileSetsCommandlet_0__: boolean;
    }
    
    class LightmassPointLightSettings extends UE.LightmassLightSettings {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassPointLightSettings_0__: boolean;
    }
    
    class LocalLightComponent extends UE.LightComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IntensityUnits: UE.ELightUnits;
        Radius: number;
        AttenuationRadius: number;
        LightmassSettings: UE.LightmassPointLightSettings;
        SetAttenuationRadius(NewRadius: number) : void;
        SetIntensityUnits(NewIntensityUnits: UE.ELightUnits) : void;
        static GetUnitsConversionFactor(SrcUnits: UE.ELightUnits, TargetUnits: UE.ELightUnits, CosHalfConeAngle?: number /* = -1.000000 */) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalLightComponent;
        static Load(InName: string): LocalLightComponent;
    
        __tid_LocalLightComponent_0__: boolean;
    }
    
    class PointLightComponent extends UE.LocalLightComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseInverseSquaredFalloff: boolean;
        LightFalloffExponent: number;
        SourceRadius: number;
        SoftSourceRadius: number;
        SourceLength: number;
        SetLightFalloffExponent(NewLightFalloffExponent: number) : void;
        SetSoftSourceRadius(bNewValue: number) : void;
        SetSourceLength(NewValue: number) : void;
        SetSourceRadius(bNewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PointLightComponent;
        static Load(InName: string): PointLightComponent;
    
        __tid_PointLightComponent_0__: boolean;
    }
    
    class SpotLightComponent extends UE.PointLightComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InnerConeAngle: number;
        OuterConeAngle: number;
        SetInnerConeAngle(NewInnerConeAngle: number) : void;
        SetOuterConeAngle(NewOuterConeAngle: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpotLightComponent;
        static Load(InName: string): SpotLightComponent;
    
        __tid_SpotLightComponent_0__: boolean;
    }
    
    class SpotLight extends UE.Light {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpotLightComponent: UE.SpotLightComponent;
        ArrowComponent: UE.ArrowComponent;
        SetInnerConeAngle(NewInnerConeAngle: number) : void;
        SetOuterConeAngle(NewOuterConeAngle: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpotLight;
        static Load(InName: string): SpotLight;
    
        __tid_SpotLight_0__: boolean;
    }
    
    class GeneratedMeshAreaLight extends UE.SpotLight {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeneratedMeshAreaLight;
        static Load(InName: string): GeneratedMeshAreaLight;
    
        __tid_GeneratedMeshAreaLight_0__: boolean;
    }
    
    class GeneratedMovieSceneKeyStruct {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeneratedMovieSceneKeyStruct_0__: boolean;
    }
    
    class GenerateGatherArchiveCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenerateGatherArchiveCommandlet;
        static Load(InName: string): GenerateGatherArchiveCommandlet;
    
        __tid_GenerateGatherArchiveCommandlet_0__: boolean;
    }
    
    class GenerateGatherManifestCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenerateGatherManifestCommandlet;
        static Load(InName: string): GenerateGatherManifestCommandlet;
    
        __tid_GenerateGatherManifestCommandlet_0__: boolean;
    }
    
    class GenerateTextLocalizationReportCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenerateTextLocalizationReportCommandlet;
        static Load(InName: string): GenerateTextLocalizationReportCommandlet;
    
        __tid_GenerateTextLocalizationReportCommandlet_0__: boolean;
    }
    
    class GenerateTextLocalizationResourceCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenerateTextLocalizationResourceCommandlet;
        static Load(InName: string): GenerateTextLocalizationResourceCommandlet;
    
        __tid_GenerateTextLocalizationResourceCommandlet_0__: boolean;
    }
    
    class GenericStruct {
        constructor();
        constructor(Data: number);
        Data: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GenericStruct_0__: boolean;
    }
    
    class GenericTeamAgentInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenericTeamAgentInterface;
        static Load(InName: string): GenericTeamAgentInterface;
    
        __tid_GenericTeamAgentInterface_0__: boolean;
    }
    
    class GenlockedCustomTimeStep extends UE.FixedFrameRateCustomTimeStep {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenlockedCustomTimeStep;
        static Load(InName: string): GenlockedCustomTimeStep;
    
        __tid_GenlockedCustomTimeStep_0__: boolean;
    }
    
    class GenlockedTimecodeProvider extends UE.TimecodeProvider {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseGenlockToCount: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GenlockedTimecodeProvider;
        static Load(InName: string): GenlockedTimecodeProvider;
    
        __tid_GenlockedTimecodeProvider_0__: boolean;
    }
    
    class GeometryCacheTrack extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Duration: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheTrack;
        static Load(InName: string): GeometryCacheTrack;
    
        __tid_GeometryCacheTrack_0__: boolean;
    }
    
    class GeometryCache extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetImportData: UE.AssetImportData;
        ThumbnailInfo: UE.ThumbnailInfo;
        Materials: TArray<UE.MaterialInterface>;
        Tracks: TArray<UE.GeometryCacheTrack>;
        StartFrame: number;
        EndFrame: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCache;
        static Load(InName: string): GeometryCache;
    
        __tid_GeometryCache_0__: boolean;
    }
    
    class GeometryCacheComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeometryCache: UE.GeometryCache;
        bRunning: boolean;
        bLooping: boolean;
        StartTimeOffset: number;
        PlaybackSpeed: number;
        NumTracks: number;
        ElapsedTime: number;
        Duration: number;
        bManualTick: boolean;
        GetAnimationTime() : number;
        GetDuration() : number;
        GetNumberOfFrames() : number;
        GetPlaybackDirection() : number;
        GetPlaybackSpeed() : number;
        GetStartTimeOffset() : number;
        IsLooping() : boolean;
        IsPlaying() : boolean;
        IsPlayingReversed() : boolean;
        Pause() : void;
        Play() : void;
        PlayFromStart() : void;
        PlayReversed() : void;
        PlayReversedFromEnd() : void;
        SetGeometryCache(NewGeomCache: $Nullable<UE.GeometryCache>) : boolean;
        SetLooping(bNewLooping: boolean) : void;
        SetPlaybackSpeed(NewPlaybackSpeed: number) : void;
        SetStartTimeOffset(NewStartTimeOffset: number) : void;
        Stop() : void;
        TickAtThisTime(Time: number, bInIsRunning: boolean, bInBackwards: boolean, bInIsLooping: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheComponent;
        static Load(InName: string): GeometryCacheComponent;
    
        __tid_GeometryCacheComponent_0__: boolean;
    }
    
    class GeometryCacheActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeometryCacheComponent: UE.GeometryCacheComponent;
        GetGeometryCacheComponent() : UE.GeometryCacheComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheActor;
        static Load(InName: string): GeometryCacheActor;
    
        __tid_GeometryCacheActor_0__: boolean;
    }
    
    class GeometryCacheCodecBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TopologyRanges: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheCodecBase;
        static Load(InName: string): GeometryCacheCodecBase;
    
        __tid_GeometryCacheCodecBase_0__: boolean;
    }
    
    class GeometryCacheCodecRaw extends UE.GeometryCacheCodecBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DummyProperty: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheCodecRaw;
        static Load(InName: string): GeometryCacheCodecRaw;
    
        __tid_GeometryCacheCodecRaw_0__: boolean;
    }
    
    class GeometryCacheCodecV1 extends UE.GeometryCacheCodecBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheCodecV1;
        static Load(InName: string): GeometryCacheCodecV1;
    
        __tid_GeometryCacheCodecV1_0__: boolean;
    }
    
    class GeometryCacheMeshBatchInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCacheMeshBatchInfo_0__: boolean;
    }
    
    class GeometryCacheMeshData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCacheMeshData_0__: boolean;
    }
    
    class GeometryCacheThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheThumbnailRenderer;
        static Load(InName: string): GeometryCacheThumbnailRenderer;
    
        __tid_GeometryCacheThumbnailRenderer_0__: boolean;
    }
    
    class GeometryCacheTrack_FlipbookAnimation extends UE.GeometryCacheTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumMeshSamples: number;
        AddMeshSample(MeshData: UE.GeometryCacheMeshData, SampleTime: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheTrack_FlipbookAnimation;
        static Load(InName: string): GeometryCacheTrack_FlipbookAnimation;
    
        __tid_GeometryCacheTrack_FlipbookAnimation_0__: boolean;
    }
    
    class GeometryCacheTrack_TransformAnimation extends UE.GeometryCacheTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetMesh(NewMeshData: UE.GeometryCacheMeshData) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheTrack_TransformAnimation;
        static Load(InName: string): GeometryCacheTrack_TransformAnimation;
    
        __tid_GeometryCacheTrack_TransformAnimation_0__: boolean;
    }
    
    class GeometryCacheTrack_TransformGroupAnimation extends UE.GeometryCacheTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetMesh(NewMeshData: UE.GeometryCacheMeshData) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheTrack_TransformGroupAnimation;
        static Load(InName: string): GeometryCacheTrack_TransformGroupAnimation;
    
        __tid_GeometryCacheTrack_TransformGroupAnimation_0__: boolean;
    }
    
    class GeometryCacheTrackStreamable extends UE.GeometryCacheTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Codec: UE.GeometryCacheCodecBase;
        StartSampleTime: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCacheTrackStreamable;
        static Load(InName: string): GeometryCacheTrackStreamable;
    
        __tid_GeometryCacheTrackStreamable_0__: boolean;
    }
    
    class GeometryCacheVertexInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GeometryCacheVertexInfo_0__: boolean;
    }
    
    class GeometryCollectionCacheFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetCollection: UE.GeometryCollection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionCacheFactory;
        static Load(InName: string): GeometryCollectionCacheFactory;
    
        __tid_GeometryCollectionCacheFactory_0__: boolean;
    }
    
    class GeometryCollectionFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionFactory;
        static Load(InName: string): GeometryCollectionFactory;
    
        __tid_GeometryCollectionFactory_0__: boolean;
    }
    
    class GeometryCollectionThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeometryCollectionThumbnailRenderer;
        static Load(InName: string): GeometryCollectionThumbnailRenderer;
    
        __tid_GeometryCollectionThumbnailRenderer_0__: boolean;
    }
    
    class Polys extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Polys;
        static Load(InName: string): Polys;
    
        __tid_Polys_0__: boolean;
    }
    
    class GeomModifier extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Description: string;
        Tooltip: string;
        ToolbarIconName: string;
        bPushButton: boolean;
        bInitialized: boolean;
        bPendingPivotOffsetUpdate: boolean;
        bAppearsInToolbar: boolean;
        CachedPolys: UE.Polys;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier;
        static Load(InName: string): GeomModifier;
    
        __tid_GeomModifier_0__: boolean;
    }
    
    class GeomModifier_Edit extends UE.GeomModifier {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Edit;
        static Load(InName: string): GeomModifier_Edit;
    
        __tid_GeomModifier_Edit_0__: boolean;
    }
    
    class GeomModifier_Clip extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bFlipNormal: boolean;
        bSplit: boolean;
        ClipMarkers: TArray<UE.Vector>;
        SnappedMouseWorldSpacePos: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Clip;
        static Load(InName: string): GeomModifier_Clip;
    
        __tid_GeomModifier_Clip_0__: boolean;
    }
    
    class GeomModifier_Create extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Create;
        static Load(InName: string): GeomModifier_Create;
    
        __tid_GeomModifier_Create_0__: boolean;
    }
    
    class GeomModifier_Delete extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Delete;
        static Load(InName: string): GeomModifier_Delete;
    
        __tid_GeomModifier_Delete_0__: boolean;
    }
    
    class GeomModifier_Extrude extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Length: number;
        Segments: number;
        SaveCoordSystem: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Extrude;
        static Load(InName: string): GeomModifier_Extrude;
    
        __tid_GeomModifier_Extrude_0__: boolean;
    }
    
    class GeomModifier_Flip extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Flip;
        static Load(InName: string): GeomModifier_Flip;
    
        __tid_GeomModifier_Flip_0__: boolean;
    }
    
    class GeomModifier_Lathe extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TotalSegments: number;
        Segments: number;
        AlignToSide: boolean;
        Axis: UE.EAxis;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Lathe;
        static Load(InName: string): GeomModifier_Lathe;
    
        __tid_GeomModifier_Lathe_0__: boolean;
    }
    
    class GeomModifier_Triangulate extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Triangulate;
        static Load(InName: string): GeomModifier_Triangulate;
    
        __tid_GeomModifier_Triangulate_0__: boolean;
    }
    
    class GeomModifier_Optimize extends UE.GeomModifier_Triangulate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Optimize;
        static Load(InName: string): GeomModifier_Optimize;
    
        __tid_GeomModifier_Optimize_0__: boolean;
    }
    
    class GeomModifier_Pen extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoExtrude: boolean;
        bCreateConvexPolygons: boolean;
        bCreateBrushShape: boolean;
        ExtrudeDepth: number;
        ShapeVertices: TArray<UE.Vector>;
        MouseWorldSpacePos: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Pen;
        static Load(InName: string): GeomModifier_Pen;
    
        __tid_GeomModifier_Pen_0__: boolean;
    }
    
    class GeomModifier_Split extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Split;
        static Load(InName: string): GeomModifier_Split;
    
        __tid_GeomModifier_Split_0__: boolean;
    }
    
    class GeomModifier_Turn extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Turn;
        static Load(InName: string): GeomModifier_Turn;
    
        __tid_GeomModifier_Turn_0__: boolean;
    }
    
    class GeomModifier_Weld extends UE.GeomModifier_Edit {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GeomModifier_Weld;
        static Load(InName: string): GeomModifier_Weld;
    
        __tid_GeomModifier_Weld_0__: boolean;
    }
    
    class GetGeoLocationAsyncTaskBlueprintProxy extends UE.ARBaseAsyncTaskBlueprintProxy {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(Longitude: number, Latitude: number, Altitude: number, Error: string) => void>;
        OnFailed: $MulticastDelegate<(Longitude: number, Latitude: number, Altitude: number, Error: string) => void>;
        GetGeoLocationDelegate__DelegateSignature(Longitude: number, Latitude: number, Altitude: number, Error: string) : void;
        static GetGeoLocationAtWorldPosition(WorldContextObject: $Nullable<UE.Object>, WorldPosition: UE.Vector) : UE.GetGeoLocationAsyncTaskBlueprintProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GetGeoLocationAsyncTaskBlueprintProxy;
        static Load(InName: string): GetGeoLocationAsyncTaskBlueprintProxy;
    
        __tid_GetGeoLocationAsyncTaskBlueprintProxy_0__: boolean;
    }
    
    class InternalToolFrameworkActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InternalToolFrameworkActor;
        static Load(InName: string): InternalToolFrameworkActor;
    
        __tid_InternalToolFrameworkActor_0__: boolean;
    }
    
    class GizmoActor extends UE.InternalToolFrameworkActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoActor;
        static Load(InName: string): GizmoActor;
    
        __tid_GizmoActor_0__: boolean;
    }
    
    class GizmoBaseComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Color: UE.LinearColor;
        HoverSizeMultiplier: number;
        PixelHitDistanceThreshold: number;
        UpdateHoverState(bHoveringIn: boolean) : void;
        UpdateWorldLocalState(bWorldIn: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoBaseComponent;
        static Load(InName: string): GizmoBaseComponent;
    
        __tid_GizmoBaseComponent_0__: boolean;
    }
    
    class GizmoArrowComponent extends UE.GizmoBaseComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Direction: UE.Vector;
        Gap: number;
        Length: number;
        Thickness: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoArrowComponent;
        static Load(InName: string): GizmoArrowComponent;
    
        __tid_GizmoArrowComponent_0__: boolean;
    }
    
    class GizmoBaseFloatParameterSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoBaseFloatParameterSource;
        static Load(InName: string): GizmoBaseFloatParameterSource;
    
        __tid_GizmoBaseFloatParameterSource_0__: boolean;
    }
    
    class GizmoAxisIntervalParameterSource extends UE.GizmoBaseFloatParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatParameterSource: GizmoFloatParameterSource;
        MinParameter: number;
        MaxParameter: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoAxisIntervalParameterSource;
        static Load(InName: string): GizmoAxisIntervalParameterSource;
    
        __tid_GizmoAxisIntervalParameterSource_0__: boolean;
    }
    
    class GizmoTransformSource extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetTransform() : UE.Transform;
        SetTransform(NewTransform: UE.Transform) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoTransformSource;
        static Load(InName: string): GizmoTransformSource;
    
        __tid_GizmoTransformSource_0__: boolean;
    }
    
    class GizmoFloatParameterChange {
        constructor();
        constructor(InitialValue: number, CurrentValue: number);
        InitialValue: number;
        CurrentValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GizmoFloatParameterChange_0__: boolean;
    }
    
    class GizmoAxisRotationParameterSource extends UE.GizmoBaseFloatParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        TransformSource: GizmoTransformSource;
        Angle: number;
        LastChange: UE.GizmoFloatParameterChange;
        CurRotationAxis: UE.Vector;
        CurRotationOrigin: UE.Vector;
        InitialTransform: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoAxisRotationParameterSource;
        static Load(InName: string): GizmoAxisRotationParameterSource;
    
        __tid_GizmoAxisRotationParameterSource_0__: boolean;
    }
    
    class GizmoAxisScaleParameterSource extends UE.GizmoBaseFloatParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        TransformSource: GizmoTransformSource;
        ScaleMultiplier: number;
        Parameter: number;
        LastChange: UE.GizmoFloatParameterChange;
        CurScaleAxis: UE.Vector;
        CurScaleOrigin: UE.Vector;
        InitialTransform: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoAxisScaleParameterSource;
        static Load(InName: string): GizmoAxisScaleParameterSource;
    
        __tid_GizmoAxisScaleParameterSource_0__: boolean;
    }
    
    class GizmoAxisTranslationParameterSource extends UE.GizmoBaseFloatParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        TransformSource: GizmoTransformSource;
        Parameter: number;
        LastChange: UE.GizmoFloatParameterChange;
        CurTranslationAxis: UE.Vector;
        CurTranslationOrigin: UE.Vector;
        InitialTransform: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoAxisTranslationParameterSource;
        static Load(InName: string): GizmoAxisTranslationParameterSource;
    
        __tid_GizmoAxisTranslationParameterSource_0__: boolean;
    }
    
    class GizmoBaseTransformSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoBaseTransformSource;
        static Load(InName: string): GizmoBaseTransformSource;
    
        __tid_GizmoBaseTransformSource_0__: boolean;
    }
    
    class GizmoBaseVec2ParameterSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoBaseVec2ParameterSource;
        static Load(InName: string): GizmoBaseVec2ParameterSource;
    
        __tid_GizmoBaseVec2ParameterSource_0__: boolean;
    }
    
    class GizmoBoxComponent extends UE.GizmoBaseComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Origin: UE.Vector;
        Rotation: UE.Quat;
        Dimensions: UE.Vector;
        LineThickness: number;
        bRemoveHiddenLines: boolean;
        bEnableAxisFlip: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoBoxComponent;
        static Load(InName: string): GizmoBoxComponent;
    
        __tid_GizmoBoxComponent_0__: boolean;
    }
    
    class GizmoCircleComponent extends UE.GizmoBaseComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Normal: UE.Vector;
        Radius: number;
        Thickness: number;
        NumSides: number;
        bViewAligned: boolean;
        bOnlyAllowFrontFacingHits: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoCircleComponent;
        static Load(InName: string): GizmoCircleComponent;
    
        __tid_GizmoCircleComponent_0__: boolean;
    }
    
    class GizmoComponentAxisSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Component: UE.SceneComponent;
        AxisIndex: number;
        bLocalAxes: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoComponentAxisSource;
        static Load(InName: string): GizmoComponentAxisSource;
    
        __tid_GizmoComponentAxisSource_0__: boolean;
    }
    
    class GizmoComponentHitTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Component: UE.PrimitiveComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoComponentHitTarget;
        static Load(InName: string): GizmoComponentHitTarget;
    
        __tid_GizmoComponentHitTarget_0__: boolean;
    }
    
    class GizmoComponentWorldTransformSource extends UE.GizmoBaseTransformSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Component: UE.SceneComponent;
        bModifyComponentOnTransform: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoComponentWorldTransformSource;
        static Load(InName: string): GizmoComponentWorldTransformSource;
    
        __tid_GizmoComponentWorldTransformSource_0__: boolean;
    }
    
    class GizmoConstantAxisSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Origin: UE.Vector;
        Direction: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoConstantAxisSource;
        static Load(InName: string): GizmoConstantAxisSource;
    
        __tid_GizmoConstantAxisSource_0__: boolean;
    }
    
    class GizmoConstantFrameAxisSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Origin: UE.Vector;
        Direction: UE.Vector;
        TangentX: UE.Vector;
        TangentY: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoConstantFrameAxisSource;
        static Load(InName: string): GizmoConstantFrameAxisSource;
    
        __tid_GizmoConstantFrameAxisSource_0__: boolean;
    }
    
    class GizmoHandleMeshComponent extends UE.StaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoHandleMeshComponent;
        static Load(InName: string): GizmoHandleMeshComponent;
    
        __tid_GizmoHandleMeshComponent_0__: boolean;
    }
    
    class GizmoImportLayer {
        constructor();
        constructor(LayerFilename: string, LayerName: string, bNoImport: boolean);
        LayerFilename: string;
        LayerName: string;
        bNoImport: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GizmoImportLayer_0__: boolean;
    }
    
    class GizmoLambdaHitTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoLambdaHitTarget;
        static Load(InName: string): GizmoLambdaHitTarget;
    
        __tid_GizmoLambdaHitTarget_0__: boolean;
    }
    
    class GizmoLambdaStateTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoLambdaStateTarget;
        static Load(InName: string): GizmoLambdaStateTarget;
    
        __tid_GizmoLambdaStateTarget_0__: boolean;
    }
    
    class GizmoLineHandleComponent extends UE.GizmoBaseComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Normal: UE.Vector;
        HandleSize: number;
        Thickness: number;
        Direction: UE.Vector;
        Length: number;
        bImageScale: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoLineHandleComponent;
        static Load(InName: string): GizmoLineHandleComponent;
    
        __tid_GizmoLineHandleComponent_0__: boolean;
    }
    
    class GizmoLocalFloatParameterSource extends UE.GizmoBaseFloatParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: number;
        LastChange: UE.GizmoFloatParameterChange;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoLocalFloatParameterSource;
        static Load(InName: string): GizmoLocalFloatParameterSource;
    
        __tid_GizmoLocalFloatParameterSource_0__: boolean;
    }
    
    class GizmoVec2ParameterChange {
        constructor();
        constructor(InitialValue: UE.Vector2D, CurrentValue: UE.Vector2D);
        InitialValue: UE.Vector2D;
        CurrentValue: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GizmoVec2ParameterChange_0__: boolean;
    }
    
    class GizmoLocalVec2ParameterSource extends UE.GizmoBaseVec2ParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: UE.Vector2D;
        LastChange: UE.GizmoVec2ParameterChange;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoLocalVec2ParameterSource;
        static Load(InName: string): GizmoLocalVec2ParameterSource;
    
        __tid_GizmoLocalVec2ParameterSource_0__: boolean;
    }
    
    class GizmoNilStateTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoNilStateTarget;
        static Load(InName: string): GizmoNilStateTarget;
    
        __tid_GizmoNilStateTarget_0__: boolean;
    }
    
    class GizmoObjectModifyStateTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoObjectModifyStateTarget;
        static Load(InName: string): GizmoObjectModifyStateTarget;
    
        __tid_GizmoObjectModifyStateTarget_0__: boolean;
    }
    
    class GizmoPlaneScaleParameterSource extends UE.GizmoBaseVec2ParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        TransformSource: GizmoTransformSource;
        ScaleMultiplier: number;
        Parameter: UE.Vector2D;
        LastChange: UE.GizmoVec2ParameterChange;
        CurScaleOrigin: UE.Vector;
        CurScaleNormal: UE.Vector;
        CurScaleAxisX: UE.Vector;
        CurScaleAxisY: UE.Vector;
        InitialTransform: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoPlaneScaleParameterSource;
        static Load(InName: string): GizmoPlaneScaleParameterSource;
    
        __tid_GizmoPlaneScaleParameterSource_0__: boolean;
    }
    
    class GizmoPlaneTranslationParameterSource extends UE.GizmoBaseVec2ParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        TransformSource: GizmoTransformSource;
        Parameter: UE.Vector2D;
        LastChange: UE.GizmoVec2ParameterChange;
        CurTranslationOrigin: UE.Vector;
        CurTranslationNormal: UE.Vector;
        CurTranslationAxisX: UE.Vector;
        CurTranslationAxisY: UE.Vector;
        InitialTransform: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoPlaneTranslationParameterSource;
        static Load(InName: string): GizmoPlaneTranslationParameterSource;
    
        __tid_GizmoPlaneTranslationParameterSource_0__: boolean;
    }
    
    class GizmoRectangleComponent extends UE.GizmoBaseComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DirectionX: UE.Vector;
        DirectionY: UE.Vector;
        OffsetX: number;
        OffsetY: number;
        LengthX: number;
        LengthY: number;
        Thickness: number;
        SegmentFlags: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoRectangleComponent;
        static Load(InName: string): GizmoRectangleComponent;
    
        __tid_GizmoRectangleComponent_0__: boolean;
    }
    
    class GizmoScaledTransformSource extends UE.GizmoBaseTransformSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChildTransformSource: GizmoTransformSource;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoScaledTransformSource;
        static Load(InName: string): GizmoScaledTransformSource;
    
        __tid_GizmoScaledTransformSource_0__: boolean;
    }
    
    class GizmoSelectData {
        constructor();
        constructor(Ratio: number, HeightData: number);
        Ratio: number;
        HeightData: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GizmoSelectData_0__: boolean;
    }
    
    class ToolContextTransactionProvider extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolContextTransactionProvider;
        static Load(InName: string): ToolContextTransactionProvider;
    
        __tid_ToolContextTransactionProvider_0__: boolean;
    }
    
    class GizmoTransformChangeStateTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransactionManager: ToolContextTransactionProvider;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoTransformChangeStateTarget;
        static Load(InName: string): GizmoTransformChangeStateTarget;
    
        __tid_GizmoTransformChangeStateTarget_0__: boolean;
    }
    
    class TransformProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRotatePerObject: boolean;
        bSetPivotMode: boolean;
        SharedTransform: UE.Transform;
        InitialSharedTransform: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TransformProxy;
        static Load(InName: string): TransformProxy;
    
        __tid_TransformProxy_0__: boolean;
    }
    
    class GizmoTransformProxyTransformSource extends UE.GizmoBaseTransformSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Proxy: UE.TransformProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoTransformProxyTransformSource;
        static Load(InName: string): GizmoTransformProxyTransformSource;
    
        __tid_GizmoTransformProxyTransformSource_0__: boolean;
    }
    
    class GizmoUniformScaleParameterSource extends UE.GizmoBaseVec2ParameterSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        TransformSource: GizmoTransformSource;
        ScaleMultiplier: number;
        Parameter: UE.Vector2D;
        LastChange: UE.GizmoVec2ParameterChange;
        CurScaleOrigin: UE.Vector;
        CurScaleNormal: UE.Vector;
        CurScaleAxisX: UE.Vector;
        CurScaleAxisY: UE.Vector;
        InitialTransform: UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoUniformScaleParameterSource;
        static Load(InName: string): GizmoUniformScaleParameterSource;
    
        __tid_GizmoUniformScaleParameterSource_0__: boolean;
    }
    
    class GizmoVec2ParameterSource extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeginModify() : void;
        EndModify() : void;
        GetParameter() : UE.Vector2D;
        SetParameter(NewValue: UE.Vector2D) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoVec2ParameterSource;
        static Load(InName: string): GizmoVec2ParameterSource;
    
        __tid_GizmoVec2ParameterSource_0__: boolean;
    }
    
    class GizmoWorldAxisSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Origin: UE.Vector;
        AxisIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GizmoWorldAxisSource;
        static Load(InName: string): GizmoWorldAxisSource;
    
        __tid_GizmoWorldAxisSource_0__: boolean;
    }
    
    class GlobalEditorUtilityBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HelpText: string;
        bDirtiedSelectionSet: boolean;
        bAutoRunDefaultAction: boolean;
        OnEachSelectedActor: $MulticastDelegate<(Actor: $Nullable<UE.Actor>, Index: number) => void>;
        OnEachSelectedAsset: $MulticastDelegate<(Asset: $Nullable<UE.Object>, Index: number) => void>;
        ClearActorSelectionSet() : void;
        ForEachSelectedActor() : void;
        ForEachSelectedAsset() : void;
        GetActorReference(PathToActor: string) : UE.Actor;
        GetEditorUserSettings() : UE.EditorPerProjectUserSettings;
        GetSelectedAssets() : TArray<UE.Object>;
        GetSelectionBounds(Origin: $Ref<UE.Vector>, BoxExtent: $Ref<UE.Vector>, SphereRadius: $Ref<number>) : void;
        GetSelectionSet() : TArray<UE.Actor>;
        OnDefaultActionClicked() : void;
        RenameAsset(Asset: $Nullable<UE.Object>, NewName: string) : void;
        SelectNothing() : void;
        SetActorSelectionState(Actor: $Nullable<UE.Actor>, bShouldBeSelected: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GlobalEditorUtilityBase;
        static Load(InName: string): GlobalEditorUtilityBase;
    
        __tid_GlobalEditorUtilityBase_0__: boolean;
    }
    
    class GooglePADFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CancelDownload(AssetPacks: TArray<string>) : UE.EGooglePADErrorCode;
        static GetAssetPackLocation(Name: string, Location: $Ref<number>) : UE.EGooglePADErrorCode;
        static GetAssetsPath(Location: number) : string;
        static GetBytesDownloaded(State: number) : number;
        static GetDownloadState(Name: string, State: $Ref<number>) : UE.EGooglePADErrorCode;
        static GetDownloadStatus(State: number) : UE.EGooglePADDownloadStatus;
        static GetShowCellularDataConfirmationStatus(Status: $Ref<UE.EGooglePADCellularDataConfirmStatus>) : UE.EGooglePADErrorCode;
        static GetStorageMethod(Location: number) : UE.EGooglePADStorageMethod;
        static GetTotalBytesToDownload(State: number) : number;
        static ReleaseAssetPackLocation(Location: number) : void;
        static ReleaseDownloadState(State: number) : void;
        static RequestDownload(AssetPacks: TArray<string>) : UE.EGooglePADErrorCode;
        static RequestInfo(AssetPacks: TArray<string>) : UE.EGooglePADErrorCode;
        static RequestRemoval(Name: string) : UE.EGooglePADErrorCode;
        static ShowCellularDataConfirmation() : UE.EGooglePADErrorCode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GooglePADFunctionLibrary;
        static Load(InName: string): GooglePADFunctionLibrary;
    
        __tid_GooglePADFunctionLibrary_0__: boolean;
    }
    
    class GooglePADRuntimeSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnablePlugin: boolean;
        bOnlyDistribution: boolean;
        bOnlyShipping: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GooglePADRuntimeSettings;
        static Load(InName: string): GooglePADRuntimeSettings;
    
        __tid_GooglePADRuntimeSettings_0__: boolean;
    }
    
    class ParticleModuleSpawnPerUnit extends UE.ParticleModuleSpawnBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UnitScalar: number;
        MovementTolerance: number;
        SpawnPerUnit: UE.RawDistributionFloat;
        MaxFrameDistance: number;
        bIgnoreSpawnRateWhenMoving: boolean;
        bIgnoreMovementAlongX: boolean;
        bIgnoreMovementAlongY: boolean;
        bIgnoreMovementAlongZ: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSpawnPerUnit;
        static Load(InName: string): ParticleModuleSpawnPerUnit;
    
        __tid_ParticleModuleSpawnPerUnit_0__: boolean;
    }
    
    class VectorField extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Bounds: UE.Box;
        Intensity: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorField;
        static Load(InName: string): VectorField;
    
        __tid_VectorField_0__: boolean;
    }
    
    class GPUSpriteLocalVectorFieldInfo {
        constructor();
        constructor(Field: UE.VectorField, Transform: UE.Transform, MinInitialRotation: UE.Rotator, MaxInitialRotation: UE.Rotator, RotationRate: UE.Rotator, Intensity: number, Tightness: number, bIgnoreComponentTransform: boolean, bTileX: boolean, bTileY: boolean, bTileZ: boolean, bUseFixDT: boolean);
        Field: UE.VectorField;
        Transform: UE.Transform;
        MinInitialRotation: UE.Rotator;
        MaxInitialRotation: UE.Rotator;
        RotationRate: UE.Rotator;
        Intensity: number;
        Tightness: number;
        bIgnoreComponentTransform: boolean;
        bTileX: boolean;
        bTileY: boolean;
        bTileZ: boolean;
        bUseFixDT: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GPUSpriteLocalVectorFieldInfo_0__: boolean;
    }
    
    class GPUSpriteEmitterInfo {
        constructor();
        constructor(RequiredModule: UE.ParticleModuleRequired, SpawnModule: UE.ParticleModuleSpawn, SpawnPerUnitModule: UE.ParticleModuleSpawnPerUnit, SpawnModules: TArray<UE.ParticleModule>, LocalVectorField: UE.GPUSpriteLocalVectorFieldInfo, VectorFieldScale: UE.FloatDistribution, DragCoefficient: UE.FloatDistribution, PointAttractorStrength: UE.FloatDistribution, Resilience: UE.FloatDistribution, ConstantAcceleration: UE.Vector, PointAttractorPosition: UE.Vector, PointAttractorRadiusSq: number, OrbitOffsetBase: UE.Vector, OrbitOffsetRange: UE.Vector, InvMaxSize: UE.Vector2D, InvRotationRateScale: number, MaxLifetime: number, MaxParticleCount: number, ScreenAlignment: UE.EParticleScreenAlignment, LockAxisFlag: UE.EParticleAxisLock, bEnableCollision: boolean, CollisionMode: UE.EParticleCollisionMode, bRemoveHMDRoll: boolean, MinFacingCameraBlendDistance: number, MaxFacingCameraBlendDistance: number, DynamicColor: UE.RawDistributionVector, DynamicAlpha: UE.RawDistributionFloat, DynamicColorScale: UE.RawDistributionVector, DynamicAlphaScale: UE.RawDistributionFloat);
        RequiredModule: UE.ParticleModuleRequired;
        SpawnModule: UE.ParticleModuleSpawn;
        SpawnPerUnitModule: UE.ParticleModuleSpawnPerUnit;
        SpawnModules: TArray<UE.ParticleModule>;
        LocalVectorField: UE.GPUSpriteLocalVectorFieldInfo;
        VectorFieldScale: UE.FloatDistribution;
        DragCoefficient: UE.FloatDistribution;
        PointAttractorStrength: UE.FloatDistribution;
        Resilience: UE.FloatDistribution;
        ConstantAcceleration: UE.Vector;
        PointAttractorPosition: UE.Vector;
        PointAttractorRadiusSq: number;
        OrbitOffsetBase: UE.Vector;
        OrbitOffsetRange: UE.Vector;
        InvMaxSize: UE.Vector2D;
        InvRotationRateScale: number;
        MaxLifetime: number;
        MaxParticleCount: number;
        ScreenAlignment: UE.EParticleScreenAlignment;
        LockAxisFlag: UE.EParticleAxisLock;
        bEnableCollision: boolean;
        CollisionMode: UE.EParticleCollisionMode;
        bRemoveHMDRoll: boolean;
        MinFacingCameraBlendDistance: number;
        MaxFacingCameraBlendDistance: number;
        DynamicColor: UE.RawDistributionVector;
        DynamicAlpha: UE.RawDistributionFloat;
        DynamicColorScale: UE.RawDistributionVector;
        DynamicAlphaScale: UE.RawDistributionFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GPUSpriteEmitterInfo_0__: boolean;
    }
    
    class GPUSpriteResourceData {
        constructor();
        constructor(QuantizedColorSamples: TArray<UE.Color>, QuantizedMiscSamples: TArray<UE.Color>, QuantizedSimulationAttrSamples: TArray<UE.Color>, ColorScale: UE.Vector4, ColorBias: UE.Vector4, MiscScale: UE.Vector4, MiscBias: UE.Vector4, SimulationAttrCurveScale: UE.Vector4, SimulationAttrCurveBias: UE.Vector4, SubImageSize: UE.Vector4, SizeBySpeed: UE.Vector4, ConstantAcceleration: UE.Vector, OrbitOffsetBase: UE.Vector, OrbitOffsetRange: UE.Vector, OrbitFrequencyBase: UE.Vector, OrbitFrequencyRange: UE.Vector, OrbitPhaseBase: UE.Vector, OrbitPhaseRange: UE.Vector, GlobalVectorFieldScale: number, GlobalVectorFieldTightness: number, PerParticleVectorFieldScale: number, PerParticleVectorFieldBias: number, DragCoefficientScale: number, DragCoefficientBias: number, ResilienceScale: number, ResilienceBias: number, CollisionRadiusScale: number, CollisionRadiusBias: number, CollisionTimeBias: number, CollisionRandomSpread: number, CollisionRandomDistribution: number, OneMinusFriction: number, RotationRateScale: number, CameraMotionBlurAmount: number, ScreenAlignment: UE.EParticleScreenAlignment, LockAxisFlag: UE.EParticleAxisLock, PivotOffset: UE.Vector2D, bRemoveHMDRoll: boolean, MinFacingCameraBlendDistance: number, MaxFacingCameraBlendDistance: number);
        QuantizedColorSamples: TArray<UE.Color>;
        QuantizedMiscSamples: TArray<UE.Color>;
        QuantizedSimulationAttrSamples: TArray<UE.Color>;
        ColorScale: UE.Vector4;
        ColorBias: UE.Vector4;
        MiscScale: UE.Vector4;
        MiscBias: UE.Vector4;
        SimulationAttrCurveScale: UE.Vector4;
        SimulationAttrCurveBias: UE.Vector4;
        SubImageSize: UE.Vector4;
        SizeBySpeed: UE.Vector4;
        ConstantAcceleration: UE.Vector;
        OrbitOffsetBase: UE.Vector;
        OrbitOffsetRange: UE.Vector;
        OrbitFrequencyBase: UE.Vector;
        OrbitFrequencyRange: UE.Vector;
        OrbitPhaseBase: UE.Vector;
        OrbitPhaseRange: UE.Vector;
        GlobalVectorFieldScale: number;
        GlobalVectorFieldTightness: number;
        PerParticleVectorFieldScale: number;
        PerParticleVectorFieldBias: number;
        DragCoefficientScale: number;
        DragCoefficientBias: number;
        ResilienceScale: number;
        ResilienceBias: number;
        CollisionRadiusScale: number;
        CollisionRadiusBias: number;
        CollisionTimeBias: number;
        CollisionRandomSpread: number;
        CollisionRandomDistribution: number;
        OneMinusFriction: number;
        RotationRateScale: number;
        CameraMotionBlurAmount: number;
        ScreenAlignment: UE.EParticleScreenAlignment;
        LockAxisFlag: UE.EParticleAxisLock;
        PivotOffset: UE.Vector2D;
        bRemoveHMDRoll: boolean;
        MinFacingCameraBlendDistance: number;
        MaxFacingCameraBlendDistance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GPUSpriteResourceData_0__: boolean;
    }
    
    class GrainTableEntry {
        constructor();
        constructor(SampleIndex: number, RPM: number, AnalysisSampleIndex: number);
        SampleIndex: number;
        RPM: number;
        AnalysisSampleIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GrainTableEntry_0__: boolean;
    }
    
    class GranularSynth extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GranulatedSoundWave: UE.SoundWave;
        GetCurrentPlayheadTime() : number;
        GetSampleDuration() : number;
        IsLoaded() : boolean;
        NoteOff(Note: number, bKill?: boolean /* = false */) : void;
        NoteOn(Note: number, Velocity: number, Duration?: number /* = -1.000000 */) : void;
        SetAttackTime(AttackTimeMsec: number) : void;
        SetDecayTime(DecayTimeMsec: number) : void;
        SetGrainDuration(BaseDurationMsec: number, DurationRange?: UE.Vector2D /* =  */) : void;
        SetGrainEnvelopeType(EnvelopeType: UE.EGranularSynthEnvelopeType) : void;
        SetGrainPan(BasePan: number, PanRange?: UE.Vector2D /* =  */) : void;
        SetGrainPitch(BasePitch: number, PitchRange?: UE.Vector2D /* =  */) : void;
        SetGrainProbability(InGrainProbability: number) : void;
        SetGrainsPerSecond(InGrainsPerSecond: number) : void;
        SetGrainVolume(BaseVolume: number, VolumeRange?: UE.Vector2D /* =  */) : void;
        SetPlaybackSpeed(InPlayheadRate: number) : void;
        SetPlayheadTime(InPositionSec: number, LerpTimeSec?: number /* = 0.000000 */, SeekType?: UE.EGranularSynthSeekType /* = FromBeginning */) : void;
        SetReleaseTimeMsec(ReleaseTimeMsec: number) : void;
        SetScrubMode(bScrubMode: boolean) : void;
        SetSoundWave(InSoundWave: $Nullable<UE.SoundWave>) : void;
        SetSustainGain(SustainGain: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GranularSynth;
        static Load(InName: string): GranularSynth;
    
        __tid_GranularSynth_0__: boolean;
    }
    
    class GraphEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DataPinStyle: UE.EBlueprintPinStyleType;
        PanningMouseButton: UE.EGraphPanningMouseButton;
        PaddingAbovePin: number;
        PaddingBelowPin: number;
        PaddingRightOfInput: number;
        PaddingLeftOfOutput: number;
        PaddingTowardsNodeEdge: number;
        bTreatSplinesLikePins: boolean;
        SplineHoverTolerance: number;
        ForwardSplineHorizontalDeltaRange: number;
        ForwardSplineVerticalDeltaRange: number;
        ForwardSplineTangentFromHorizontalDelta: UE.Vector2D;
        ForwardSplineTangentFromVerticalDelta: UE.Vector2D;
        BackwardSplineHorizontalDeltaRange: number;
        BackwardSplineVerticalDeltaRange: number;
        BackwardSplineTangentFromHorizontalDelta: UE.Vector2D;
        BackwardSplineTangentFromVerticalDelta: UE.Vector2D;
        DefaultPinTypeColor: UE.LinearColor;
        ExecutionPinTypeColor: UE.LinearColor;
        BooleanPinTypeColor: UE.LinearColor;
        BytePinTypeColor: UE.LinearColor;
        ClassPinTypeColor: UE.LinearColor;
        IntPinTypeColor: UE.LinearColor;
        Int64PinTypeColor: UE.LinearColor;
        FloatPinTypeColor: UE.LinearColor;
        NamePinTypeColor: UE.LinearColor;
        SoftObjectPinTypeColor: UE.LinearColor;
        SoftClassPinTypeColor: UE.LinearColor;
        DelegatePinTypeColor: UE.LinearColor;
        ObjectPinTypeColor: UE.LinearColor;
        InterfacePinTypeColor: UE.LinearColor;
        StringPinTypeColor: UE.LinearColor;
        TextPinTypeColor: UE.LinearColor;
        StructPinTypeColor: UE.LinearColor;
        WildcardPinTypeColor: UE.LinearColor;
        VectorPinTypeColor: UE.LinearColor;
        RotatorPinTypeColor: UE.LinearColor;
        TransformPinTypeColor: UE.LinearColor;
        IndexPinTypeColor: UE.LinearColor;
        EventNodeTitleColor: UE.LinearColor;
        FunctionCallNodeTitleColor: UE.LinearColor;
        PureFunctionCallNodeTitleColor: UE.LinearColor;
        ParentFunctionCallNodeTitleColor: UE.LinearColor;
        FunctionTerminatorNodeTitleColor: UE.LinearColor;
        ExecBranchNodeTitleColor: UE.LinearColor;
        ExecSequenceNodeTitleColor: UE.LinearColor;
        ResultNodeTitleColor: UE.LinearColor;
        DefaultCommentNodeTitleColor: UE.LinearColor;
        PreviewNodeTitleColor: UE.LinearColor;
        DefaultDataWireThickness: number;
        DefaultExecutionWireThickness: number;
        TraceAttackColor: UE.LinearColor;
        TraceAttackWireThickness: number;
        TraceAttackHoldPeriod: number;
        TraceDecayPeriod: number;
        TraceDecayExponent: number;
        TraceSustainColor: UE.LinearColor;
        TraceSustainWireThickness: number;
        TraceSustainHoldPeriod: number;
        TraceReleaseColor: UE.LinearColor;
        TraceReleaseWireThickness: number;
        TraceReleasePeriod: number;
        TraceReleaseExponent: number;
        TracePositionBonusPeriod: number;
        TracePositionExponent: number;
        PaddingAutoCollateIncrement: number;
        bOpenCreateMenuOnBlankGraphAreas: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GraphEditorSettings;
        static Load(InName: string): GraphEditorSettings;
    
        __tid_GraphEditorSettings_0__: boolean;
    }
    
    class GraphNodeContextMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Blueprint: UE.Blueprint;
        Graph: UE.EdGraph;
        Node: UE.EdGraphNode;
        bIsDebugging: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GraphNodeContextMenuContext;
        static Load(InName: string): GraphNodeContextMenuContext;
    
        __tid_GraphNodeContextMenuContext_0__: boolean;
    }
    
    class GraphReference {
        constructor();
        constructor(MacroGraph: UE.EdGraph, GraphBlueprint: UE.Blueprint, GraphGuid: UE.Guid);
        MacroGraph: UE.EdGraph;
        GraphBlueprint: UE.Blueprint;
        GraphGuid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GraphReference_0__: boolean;
    }
    
    class GrassInput {
        constructor();
        constructor(Name: string, GrassType: UE.LandscapeGrassType, Input: UE.ExpressionInput);
        Name: string;
        GrassType: UE.LandscapeGrassType;
        Input: UE.ExpressionInput;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GrassInput_0__: boolean;
    }
    
    class GridBlendSample {
        constructor();
        constructor(GridElement: UE.EditorElement, BlendWeight: number);
        GridElement: UE.EditorElement;
        BlendWeight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GridBlendSample_0__: boolean;
    }
    
    class GridSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        Row: number;
        RowSpan: number;
        Column: number;
        ColumnSpan: number;
        Layer: number;
        Nudge: UE.Vector2D;
        SetColumn(InColumn: number) : void;
        SetColumnSpan(InColumnSpan: number) : void;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetLayer(InLayer: number) : void;
        SetNudge(InNudge: UE.Vector2D) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetRow(InRow: number) : void;
        SetRowSpan(InRowSpan: number) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GridSlot;
        static Load(InName: string): GridSlot;
    
        __tid_GridSlot_0__: boolean;
    }
    
    class GridPanel extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ColumnFill: TArray<number>;
        RowFill: TArray<number>;
        AddChildToGrid(Content: $Nullable<UE.Widget>, InRow?: number /* = 0 */, InColumn?: number /* = 0 */) : UE.GridSlot;
        SetColumnFill(ColumnIndex: number, Coefficient: number) : void;
        SetRowFill(ColumnIndex: number, Coefficient: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GridPanel;
        static Load(InName: string): GridPanel;
    
        __tid_GridPanel_0__: boolean;
    }
    
    class GridPathAIController extends UE.AIController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GridPathAIController;
        static Load(InName: string): GridPathAIController;
    
        __tid_GridPathAIController_0__: boolean;
    }
    
    class GridPathFollowingComponent extends UE.PathFollowingComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GridManager: UE.NavLocalGridManager;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GridPathFollowingComponent;
        static Load(InName: string): GridPathFollowingComponent;
    
        __tid_GridPathFollowingComponent_0__: boolean;
    }
    
    class GroundTruthData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bResetGroundTruth: boolean;
        ObjectData: UE.Object;
        CanModify() : boolean;
        LoadObject() : UE.Object;
        SaveObject(GroundTruth: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GroundTruthData;
        static Load(InName: string): GroundTruthData;
    
        __tid_GroundTruthData_0__: boolean;
    }
    
    class GroupActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bLocked: boolean;
        GroupActors: TArray<UE.Actor>;
        SubGroups: TArray<UE.GroupActor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): GroupActor;
        static Load(InName: string): GroupActor;
    
        __tid_GroupActor_0__: boolean;
    }
    
    class GuardianTestResult {
        constructor();
        constructor(IsTriggering: boolean, DeviceType: UE.ETrackedDeviceType, ClosestDistance: number, ClosestPoint: UE.Vector, ClosestPointNormal: UE.Vector);
        IsTriggering: boolean;
        DeviceType: UE.ETrackedDeviceType;
        ClosestDistance: number;
        ClosestPoint: UE.Vector;
        ClosestPointNormal: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_GuardianTestResult_0__: boolean;
    }
    
    class HapticFeedbackDetails_Curve {
        constructor();
        constructor(Frequency: UE.RuntimeFloatCurve, Amplitude: UE.RuntimeFloatCurve);
        Frequency: UE.RuntimeFloatCurve;
        Amplitude: UE.RuntimeFloatCurve;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HapticFeedbackDetails_Curve_0__: boolean;
    }
    
    class HapticFeedbackEffect_Buffer extends UE.HapticFeedbackEffect_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Amplitudes: TArray<number>;
        SampleRate: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HapticFeedbackEffect_Buffer;
        static Load(InName: string): HapticFeedbackEffect_Buffer;
    
        __tid_HapticFeedbackEffect_Buffer_0__: boolean;
    }
    
    class HapticFeedbackEffect_Curve extends UE.HapticFeedbackEffect_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HapticDetails: UE.HapticFeedbackDetails_Curve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HapticFeedbackEffect_Curve;
        static Load(InName: string): HapticFeedbackEffect_Curve;
    
        __tid_HapticFeedbackEffect_Curve_0__: boolean;
    }
    
    class HapticFeedbackEffect_SoundWave extends UE.HapticFeedbackEffect_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundWave: UE.SoundWave;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HapticFeedbackEffect_SoundWave;
        static Load(InName: string): HapticFeedbackEffect_SoundWave;
    
        __tid_HapticFeedbackEffect_SoundWave_0__: boolean;
    }
    
    class HapticFeedbackEffectBufferFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HapticFeedbackEffectBufferFactory;
        static Load(InName: string): HapticFeedbackEffectBufferFactory;
    
        __tid_HapticFeedbackEffectBufferFactory_0__: boolean;
    }
    
    class HapticFeedbackEffectCurveFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HapticFeedbackEffectCurveFactory;
        static Load(InName: string): HapticFeedbackEffectCurveFactory;
    
        __tid_HapticFeedbackEffectCurveFactory_0__: boolean;
    }
    
    class HapticFeedbackEffectSoundWaveFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HapticFeedbackEffectSoundWaveFactory;
        static Load(InName: string): HapticFeedbackEffectSoundWaveFactory;
    
        __tid_HapticFeedbackEffectSoundWaveFactory_0__: boolean;
    }
    
    class HardwareCursorReference {
        constructor();
        constructor(CursorPath: string, HotSpot: UE.Vector2D);
        CursorPath: string;
        HotSpot: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HardwareCursorReference_0__: boolean;
    }
    
    class HardwareTargetingSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetedHardwareClass: UE.EHardwareClass;
        AppliedTargetedHardwareClass: UE.EHardwareClass;
        DefaultGraphicsPerformance: UE.EGraphicsPreset;
        AppliedDefaultGraphicsPerformance: UE.EGraphicsPreset;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HardwareTargetingSettings;
        static Load(InName: string): HardwareTargetingSettings;
    
        __tid_HardwareTargetingSettings_0__: boolean;
    }
    
    class TableColumnHeaderStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(SortPrimaryAscendingImage: UE.SlateBrush, SortPrimaryDescendingImage: UE.SlateBrush, SortSecondaryAscendingImage: UE.SlateBrush, SortSecondaryDescendingImage: UE.SlateBrush, NormalBrush: UE.SlateBrush, HoveredBrush: UE.SlateBrush, MenuDropdownImage: UE.SlateBrush, MenuDropdownNormalBorderBrush: UE.SlateBrush, MenuDropdownHoveredBorderBrush: UE.SlateBrush);
        SortPrimaryAscendingImage: UE.SlateBrush;
        SortPrimaryDescendingImage: UE.SlateBrush;
        SortSecondaryAscendingImage: UE.SlateBrush;
        SortSecondaryDescendingImage: UE.SlateBrush;
        NormalBrush: UE.SlateBrush;
        HoveredBrush: UE.SlateBrush;
        MenuDropdownImage: UE.SlateBrush;
        MenuDropdownNormalBorderBrush: UE.SlateBrush;
        MenuDropdownHoveredBorderBrush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TableColumnHeaderStyle_0__: boolean;
    }
    
    class SplitterStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(HandleNormalBrush: UE.SlateBrush, HandleHighlightBrush: UE.SlateBrush);
        HandleNormalBrush: UE.SlateBrush;
        HandleHighlightBrush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SplitterStyle_0__: boolean;
    }
    
    class HeaderRowStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(ColumnStyle: UE.TableColumnHeaderStyle, LastColumnStyle: UE.TableColumnHeaderStyle, ColumnSplitterStyle: UE.SplitterStyle, BackgroundBrush: UE.SlateBrush, ForegroundColor: UE.SlateColor);
        ColumnStyle: UE.TableColumnHeaderStyle;
        LastColumnStyle: UE.TableColumnHeaderStyle;
        ColumnSplitterStyle: UE.SplitterStyle;
        BackgroundBrush: UE.SlateBrush;
        ForegroundColor: UE.SlateColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HeaderRowStyle_0__: boolean;
    }
    
    class XRMotionControllerData {
        constructor();
        constructor(bValid: boolean, DeviceName: string, ApplicationInstanceID: UE.Guid, DeviceVisualType: UE.EXRVisualType, HandIndex: UE.EControllerHand, TrackingStatus: UE.ETrackingStatus, GripPosition: UE.Vector, GripRotation: UE.Quat, AimPosition: UE.Vector, AimRotation: UE.Quat, HandKeyPositions: TArray<UE.Vector>, HandKeyRotations: TArray<UE.Quat>, HandKeyRadii: TArray<number>, bIsGrasped: boolean);
        bValid: boolean;
        DeviceName: string;
        ApplicationInstanceID: UE.Guid;
        DeviceVisualType: UE.EXRVisualType;
        HandIndex: UE.EControllerHand;
        TrackingStatus: UE.ETrackingStatus;
        GripPosition: UE.Vector;
        GripRotation: UE.Quat;
        AimPosition: UE.Vector;
        AimRotation: UE.Quat;
        HandKeyPositions: TArray<UE.Vector>;
        HandKeyRotations: TArray<UE.Quat>;
        HandKeyRadii: TArray<number>;
        bIsGrasped: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_XRMotionControllerData_0__: boolean;
    }
    
    class XRHMDData {
        constructor();
        constructor(bValid: boolean, DeviceName: string, ApplicationInstanceID: UE.Guid, TrackingStatus: UE.ETrackingStatus, Position: UE.Vector, Rotation: UE.Quat);
        bValid: boolean;
        DeviceName: string;
        ApplicationInstanceID: UE.Guid;
        TrackingStatus: UE.ETrackingStatus;
        Position: UE.Vector;
        Rotation: UE.Quat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_XRHMDData_0__: boolean;
    }
    
    class XRGestureConfig {
        constructor();
        constructor(bTap: boolean, bHold: boolean, AxisGesture: UE.ESpatialInputGestureAxis, bNavigationAxisX: boolean, bNavigationAxisY: boolean, bNavigationAxisZ: boolean);
        bTap: boolean;
        bHold: boolean;
        AxisGesture: UE.ESpatialInputGestureAxis;
        bNavigationAxisX: boolean;
        bNavigationAxisY: boolean;
        bNavigationAxisZ: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_XRGestureConfig_0__: boolean;
    }
    
    class HeadMountedDisplayFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CalibrateExternalTrackingToHMD(ExternalTrackingTransform: UE.Transform) : void;
        static ClearXRTimedInputActionDelegate(ActionPath: string) : void;
        static ConfigureGestures(GestureConfig: UE.XRGestureConfig) : boolean;
        static ConnectRemoteXRDevice(IpAddress: string, BitRate: number) : UE.EXRDeviceConnectionResult;
        static DisconnectRemoteXRDevice() : void;
        static EnableHMD(bEnable: boolean) : boolean;
        static EnableLowPersistenceMode(bEnable: boolean) : void;
        static EnumerateTrackedDevices(SystemId?: string /* = "None" */, DeviceType?: UE.EXRTrackedDeviceType /* = Any */) : TArray<UE.XRDeviceId>;
        static GetControllerTransformForTime(WorldContext: $Nullable<UE.Object>, ControllerIndex: number, MotionSource: string, Time: UE.Timespan, bTimeWasUsed: $Ref<boolean>, Orientation: $Ref<UE.Rotator>, Position: $Ref<UE.Vector>, bProvidedLinearVelocity: $Ref<boolean>, LinearVelocity: $Ref<UE.Vector>, bProvidedAngularVelocity: $Ref<boolean>, AngularVelocityRadPerSec: $Ref<UE.Vector>) : boolean;
        static GetDevicePose(XRDeviceId: UE.XRDeviceId, bIsTracked: $Ref<boolean>, Orientation: $Ref<UE.Rotator>, bHasPositionalTracking: $Ref<boolean>, Position: $Ref<UE.Vector>) : void;
        static GetDeviceWorldPose(WorldContext: $Nullable<UE.Object>, XRDeviceId: UE.XRDeviceId, bIsTracked: $Ref<boolean>, Orientation: $Ref<UE.Rotator>, bHasPositionalTracking: $Ref<boolean>, Position: $Ref<UE.Vector>) : void;
        static GetHMDData(WorldContext: $Nullable<UE.Object>, HMDData: $Ref<UE.XRHMDData>) : void;
        static GetHMDDeviceName() : string;
        static GetHMDWornState() : UE.EHMDWornState;
        static GetMotionControllerData(WorldContext: $Nullable<UE.Object>, Hand: UE.EControllerHand, MotionControllerData: $Ref<UE.XRMotionControllerData>) : void;
        static GetNumOfTrackingSensors() : number;
        static GetOrientationAndPosition(DeviceRotation: $Ref<UE.Rotator>, DevicePosition: $Ref<UE.Vector>) : void;
        static GetPixelDensity() : number;
        static GetPositionalTrackingCameraParameters(CameraOrigin: $Ref<UE.Vector>, CameraRotation: $Ref<UE.Rotator>, HFOV: $Ref<number>, VFOV: $Ref<number>, CameraDistance: $Ref<number>, NearPlane: $Ref<number>, FarPlane: $Ref<number>) : void;
        static GetScreenPercentage() : number;
        static GetTrackingOrigin() : UE.EHMDTrackingOrigin;
        static GetTrackingSensorParameters(Origin: $Ref<UE.Vector>, Rotation: $Ref<UE.Rotator>, LeftFOV: $Ref<number>, RightFOV: $Ref<number>, TopFOV: $Ref<number>, BottomFOV: $Ref<number>, Distance: $Ref<number>, NearPlane: $Ref<number>, FarPlane: $Ref<number>, IsActive: $Ref<boolean>, Index?: number /* = 0 */) : void;
        static GetTrackingToWorldTransform(WorldContext: $Nullable<UE.Object>) : UE.Transform;
        static GetVersionString() : string;
        static GetVRFocusState(bUseFocus: $Ref<boolean>, bHasFocus: $Ref<boolean>) : void;
        static GetWorldToMetersScale(WorldContext: $Nullable<UE.Object>) : number;
        static GetXRSystemFlags() : number;
        static HasValidTrackingPosition() : boolean;
        static IsDeviceTracking(XRDeviceId: UE.XRDeviceId) : boolean;
        static IsHeadMountedDisplayConnected() : boolean;
        static IsHeadMountedDisplayEnabled() : boolean;
        static IsInLowPersistenceMode() : boolean;
        static IsSpectatorScreenModeControllable() : boolean;
        static ResetOrientationAndPosition(Yaw?: number /* = 0.000000 */, Options?: UE.EOrientPositionSelector /* = OrientationAndPosition */) : void;
        static SetClippingPlanes(Near: number, Far: number) : void;
        static SetSpectatorScreenMode(Mode: UE.ESpectatorScreenMode) : void;
        static SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: UE.Vector2D, EyeRectMax: UE.Vector2D, TextureRectMin: UE.Vector2D, TextureRectMax: UE.Vector2D, bDrawEyeFirst?: boolean /* = true */, bClearBlack?: boolean /* = false */, bUseAlpha?: boolean /* = false */) : void;
        static SetSpectatorScreenTexture(InTexture: $Nullable<UE.Texture>) : void;
        static SetTrackingOrigin(Origin: UE.EHMDTrackingOrigin) : void;
        static SetWorldToMetersScale(WorldContext: $Nullable<UE.Object>, NewScale?: number /* = 100.000000 */) : void;
        static SetXRDisconnectDelegate(InDisconnectedDelegate: $Delegate<(OutReason: string) => void>) : void;
        static SetXRTimedInputActionDelegate(ActionName: string, InDelegate: $Delegate<(Value: number, Time: UE.Timespan) => void>) : void;
        static UpdateExternalTrackingHMDPosition(ExternalTrackingTransform: UE.Transform) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HeadMountedDisplayFunctionLibrary;
        static Load(InName: string): HeadMountedDisplayFunctionLibrary;
    
        __tid_HeadMountedDisplayFunctionLibrary_0__: boolean;
    }
    
    class HealthSnapshotBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static LogPerformanceSnapshot(SnapshotTitle: string, bResetStats?: boolean /* = true */) : void;
        static StartPerformanceSnapshots() : void;
        static StopPerformanceSnapshots() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HealthSnapshotBlueprintLibrary;
        static Load(InName: string): HealthSnapshotBlueprintLibrary;
    
        __tid_HealthSnapshotBlueprintLibrary_0__: boolean;
    }
    
    class HeightmapData {
        constructor();
        constructor(Texture: UE.Texture2D);
        Texture: UE.Texture2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HeightmapData_0__: boolean;
    }
    
    class HierarchicalLODSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bForceSettingsInAllMaps: boolean;
        bSaveLODActorsToHLODPackages: boolean;
        DefaultSetup: TSoftClassPtr<UE.HierarchicalLODSetup>;
        DirectoriesForHLODCommandlet: TArray<UE.DirectoryPath>;
        MapsToBuild: TArray<UE.FilePath>;
        bInvalidateHLODClusters: boolean;
        bDeleteHLODAssets: boolean;
        BaseMaterial: TSoftObjectPtr<UE.MaterialInterface>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HierarchicalLODSettings;
        static Load(InName: string): HierarchicalLODSettings;
    
        __tid_HierarchicalLODSettings_0__: boolean;
    }
    
    class HierarchicalLODSetup extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HierarchicalLODSetup: TArray<UE.HierarchicalSimplification>;
        OverrideBaseMaterial: TSoftObjectPtr<UE.MaterialInterface>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HierarchicalLODSetup;
        static Load(InName: string): HierarchicalLODSetup;
    
        __tid_HierarchicalLODSetup_0__: boolean;
    }
    
    class HierarchicalLODVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIncludeOverlappingActors: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HierarchicalLODVolume;
        static Load(InName: string): HierarchicalLODVolume;
    
        __tid_HierarchicalLODVolume_0__: boolean;
    }
    
    class HLODEngineSubsystem extends UE.EngineSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HLODEngineSubsystem;
        static Load(InName: string): HLODEngineSubsystem;
    
        __tid_HLODEngineSubsystem_0__: boolean;
    }
    
    class HLODISMComponentDesc {
        constructor();
        constructor(StaticMesh: UE.StaticMesh, Material: UE.MaterialInterface, Instances: TArray<UE.Transform>);
        StaticMesh: UE.StaticMesh;
        Material: UE.MaterialInterface;
        Instances: TArray<UE.Transform>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HLODISMComponentDesc_0__: boolean;
    }
    
    class HLODProxyDesc extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SubActors: TArray<string>;
        StaticMesh: UE.StaticMesh;
        ISMComponentsDesc: TArray<UE.HLODISMComponentDesc>;
        LODDrawDistance: number;
        bOverrideMaterialMergeSettings: boolean;
        MaterialSettings: UE.MaterialProxySettings;
        bOverrideTransitionScreenSize: boolean;
        TransitionScreenSize: number;
        bOverrideScreenSize: boolean;
        ScreenSize: number;
        Key: string;
        LODLevel: number;
        LODActorTag: string;
        Location: UE.Vector;
        SubHLODDescs: TArray<TSoftObjectPtr<UE.HLODProxyDesc>>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HLODProxyDesc;
        static Load(InName: string): HLODProxyDesc;
    
        __tid_HLODProxyDesc_0__: boolean;
    }
    
    class LODActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StaticMeshComponent: UE.StaticMeshComponent;
        ImpostersStaticMeshComponents: TMap<UE.MaterialInterface, UE.InstancedStaticMeshComponent>;
        Proxy: UE.HLODProxy;
        Key: string;
        LODDrawDistance: number;
        LODLevel: number;
        SubActors: TArray<UE.Actor>;
        CachedNumHLODLevels: number;
        NumTrianglesInSubActors: number;
        NumTrianglesInMergedMesh: number;
        bOverrideMaterialMergeSettings: boolean;
        MaterialSettings: UE.MaterialProxySettings;
        bOverrideTransitionScreenSize: boolean;
        TransitionScreenSize: number;
        bOverrideScreenSize: boolean;
        ScreenSize: number;
        LODActorTag: string;
        bBuiltFromHLODDesc: boolean;
        ProxyDesc: UE.HLODProxyDesc;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LODActor;
        static Load(InName: string): LODActor;
    
        __tid_LODActor_0__: boolean;
    }
    
    class HLODProxyMesh {
        constructor();
        constructor(LODActor: TLazyObjectPtr<UE.LODActor>, StaticMesh: UE.StaticMesh, Key: string);
        LODActor: TLazyObjectPtr<UE.LODActor>;
        StaticMesh: UE.StaticMesh;
        Key: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HLODProxyMesh_0__: boolean;
    }
    
    class HLODProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwningMap: TSoftObjectPtr<UE.World>;
        ProxyMeshes: TArray<UE.HLODProxyMesh>;
        HLODActors: TMap<UE.HLODProxyDesc, UE.HLODProxyMesh>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HLODProxy;
        static Load(InName: string): HLODProxy;
    
        __tid_HLODProxy_0__: boolean;
    }
    
    class HmdUserProfileField {
        constructor();
        constructor(FieldName: string, FieldValue: string);
        FieldName: string;
        FieldValue: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HmdUserProfileField_0__: boolean;
    }
    
    class HmdUserProfile {
        constructor();
        constructor(Name: string, Gender: string, PlayerHeight: number, EyeHeight: number, IPD: number, NeckToEyeDistance: UE.Vector2D, ExtraFields: TArray<UE.HmdUserProfileField>);
        Name: string;
        Gender: string;
        PlayerHeight: number;
        EyeHeight: number;
        IPD: number;
        NeckToEyeDistance: UE.Vector2D;
        ExtraFields: TArray<UE.HmdUserProfileField>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HmdUserProfile_0__: boolean;
    }
    
    class HorizontalBoxSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        Size: UE.SlateChildSize;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetSize(InSize: UE.SlateChildSize) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HorizontalBoxSlot;
        static Load(InName: string): HorizontalBoxSlot;
    
        __tid_HorizontalBoxSlot_0__: boolean;
    }
    
    class HorizontalBox extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddChildToHorizontalBox(Content: $Nullable<UE.Widget>) : UE.HorizontalBoxSlot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HorizontalBox;
        static Load(InName: string): HorizontalBox;
    
        __tid_HorizontalBox_0__: boolean;
    }
    
    class HudSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShowHUD: boolean;
        DebugDisplay: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): HudSettings;
        static Load(InName: string): HudSettings;
    
        __tid_HudSettings_0__: boolean;
    }
    
    class TextBlockStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(Font: UE.SlateFontInfo, ColorAndOpacity: UE.SlateColor, ShadowOffset: UE.Vector2D, ShadowColorAndOpacity: UE.LinearColor, SelectedBackgroundColor: UE.SlateColor, HighlightColor: UE.LinearColor, HighlightShape: UE.SlateBrush, StrikeBrush: UE.SlateBrush, UnderlineBrush: UE.SlateBrush);
        Font: UE.SlateFontInfo;
        ColorAndOpacity: UE.SlateColor;
        ShadowOffset: UE.Vector2D;
        ShadowColorAndOpacity: UE.LinearColor;
        SelectedBackgroundColor: UE.SlateColor;
        HighlightColor: UE.LinearColor;
        HighlightShape: UE.SlateBrush;
        StrikeBrush: UE.SlateBrush;
        UnderlineBrush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TextBlockStyle_0__: boolean;
    }
    
    class HyperlinkStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(UnderlineStyle: UE.ButtonStyle, TextStyle: UE.TextBlockStyle, Padding: UE.Margin);
        UnderlineStyle: UE.ButtonStyle;
        TextStyle: UE.TextBlockStyle;
        Padding: UE.Margin;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_HyperlinkStyle_0__: boolean;
    }
    
    class IKChain {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IKChain_0__: boolean;
    }
    
    class IKChainLink {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IKChainLink_0__: boolean;
    }
    
    class SlateTextureAtlasInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateTextureAtlasInterface;
        static Load(InName: string): SlateTextureAtlasInterface;
    
        __tid_SlateTextureAtlasInterface_0__: boolean;
    }
    
    class Image extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Image: UE.SlateBrushAsset;
        Brush: UE.SlateBrush;
        BrushDelegate: $Delegate<() => UE.SlateBrush>;
        ColorAndOpacity: UE.LinearColor;
        ColorAndOpacityDelegate: $Delegate<() => UE.LinearColor>;
        bFlipForRightToLeftFlowDirection: boolean;
        OnMouseButtonDownEvent: $Delegate<(MyGeometry: UE.Geometry, MouseEvent: UE.PointerEvent) => UE.EventReply>;
        GetDynamicMaterial() : UE.MaterialInstanceDynamic;
        SetBrush(InBrush: UE.SlateBrush) : void;
        SetBrushFromAsset(Asset: $Nullable<UE.SlateBrushAsset>) : void;
        SetBrushFromAtlasInterface(AtlasRegion: SlateTextureAtlasInterface, bMatchSize?: boolean /* = false */) : void;
        SetBrushFromMaterial(Material: $Nullable<UE.MaterialInterface>) : void;
        SetBrushFromSoftMaterial(SoftMaterial: TSoftObjectPtr<UE.MaterialInterface>) : void;
        SetBrushFromSoftTexture(SoftTexture: TSoftObjectPtr<UE.Texture2D>, bMatchSize?: boolean /* = false */) : void;
        SetBrushFromTexture(Texture: $Nullable<UE.Texture2D>, bMatchSize?: boolean /* = false */) : void;
        SetBrushFromTextureDynamic(Texture: $Nullable<UE.Texture2DDynamic>, bMatchSize?: boolean /* = false */) : void;
        SetBrushResourceObject(ResourceObject: $Nullable<UE.Object>) : void;
        SetBrushSize(DesiredSize: UE.Vector2D) : void;
        SetBrushTintColor(TintColor: UE.SlateColor) : void;
        SetColorAndOpacity(InColorAndOpacity: UE.LinearColor) : void;
        SetOpacity(InOpacity: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Image;
        static Load(InName: string): Image;
    
        __tid_Image_0__: boolean;
    }
    
    class ImageSequenceProtocol_BMP extends UE.ImageSequenceProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImageSequenceProtocol_BMP;
        static Load(InName: string): ImageSequenceProtocol_BMP;
    
        __tid_ImageSequenceProtocol_BMP_0__: boolean;
    }
    
    class ImageSequenceProtocol_EXR extends UE.ImageSequenceProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCompressed: boolean;
        CaptureGamut: UE.EHDRCaptureGamut;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImageSequenceProtocol_EXR;
        static Load(InName: string): ImageSequenceProtocol_EXR;
    
        __tid_ImageSequenceProtocol_EXR_0__: boolean;
    }
    
    class ImageSequenceProtocol_JPG extends UE.CompressedImageSequenceProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImageSequenceProtocol_JPG;
        static Load(InName: string): ImageSequenceProtocol_JPG;
    
        __tid_ImageSequenceProtocol_JPG_0__: boolean;
    }
    
    class ImageSequenceProtocol_PNG extends UE.CompressedImageSequenceProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImageSequenceProtocol_PNG;
        static Load(InName: string): ImageSequenceProtocol_PNG;
    
        __tid_ImageSequenceProtocol_PNG_0__: boolean;
    }
    
    class ImageWriteOptions {
        constructor();
        constructor(Format: UE.EDesiredImageFormat, OnComplete: $Delegate<(bSuccess: boolean) => void>, CompressionQuality: number, bOverwriteFile: boolean, bAsync: boolean);
        Format: UE.EDesiredImageFormat;
        OnComplete: $Delegate<(bSuccess: boolean) => void>;
        CompressionQuality: number;
        bOverwriteFile: boolean;
        bAsync: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ImageWriteOptions_0__: boolean;
    }
    
    class ImageWriteBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ExportToDisk(Texture: $Nullable<UE.Texture>, Filename: string, Options: UE.ImageWriteOptions) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImageWriteBlueprintLibrary;
        static Load(InName: string): ImageWriteBlueprintLibrary;
    
        __tid_ImageWriteBlueprintLibrary_0__: boolean;
    }
    
    class ImgMediaSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultFrameRate: UE.FrameRate;
        CacheBehindPercentage: number;
        CacheSizeGB: number;
        CacheThreads: number;
        CacheThreadStackSizeKB: number;
        GlobalCacheSizeGB: number;
        UseGlobalCache: boolean;
        ExrDecoderThreads: number;
        DefaultProxy: string;
        UseDefaultProxy: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImgMediaSettings;
        static Load(InName: string): ImgMediaSettings;
    
        __tid_ImgMediaSettings_0__: boolean;
    }
    
    class ImgMediaSource extends UE.BaseMediaSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FrameRateOverride: UE.FrameRate;
        ProxyOverride: string;
        SequencePath: UE.DirectoryPath;
        GetProxies(OutProxies: $Ref<TArray<string>>) : void;
        GetSequencePath() : string;
        SetSequencePath(Path: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImgMediaSource;
        static Load(InName: string): ImgMediaSource;
    
        __tid_ImgMediaSource_0__: boolean;
    }
    
    class ImgMediaSourceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImgMediaSourceFactory;
        static Load(InName: string): ImgMediaSourceFactory;
    
        __tid_ImgMediaSourceFactory_0__: boolean;
    }
    
    class ImgMediaSourceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImgMediaSourceFactoryNew;
        static Load(InName: string): ImgMediaSourceFactoryNew;
    
        __tid_ImgMediaSourceFactoryNew_0__: boolean;
    }
    
    class ImportanceTexture {
        constructor();
        constructor(Size: UE.IntPoint, NumMips: number, MarginalCDF: TArray<number>, ConditionalCDF: TArray<number>, TextureData: TArray<UE.Color>, Texture: TWeakObjectPtr<UE.Texture2D>, Weighting: UE.EImportanceWeight);
        Size: UE.IntPoint;
        NumMips: number;
        MarginalCDF: TArray<number>;
        ConditionalCDF: TArray<number>;
        TextureData: TArray<UE.Color>;
        Texture: TWeakObjectPtr<UE.Texture2D>;
        Weighting: UE.EImportanceWeight;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ImportanceTexture_0__: boolean;
    }
    
    class ImportanceSamplingLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static BreakImportanceTexture(ImportanceTexture: UE.ImportanceTexture, Texture: $Ref<UE.Texture2D>, WeightingFunc: $Ref<UE.EImportanceWeight>) : void;
        static ImportanceSample(Texture: UE.ImportanceTexture, Rand: UE.Vector2D, Samples: number, Intensity: number, SamplePosition: $Ref<UE.Vector2D>, SampleColor: $Ref<UE.LinearColor>, SampleIntensity: $Ref<number>, SampleSize: $Ref<number>) : void;
        static MakeImportanceTexture(Texture: $Nullable<UE.Texture2D>, WeightingFunc: UE.EImportanceWeight) : UE.ImportanceTexture;
        static NextSobolCell2D(Index: number, NumCells?: number /* = 1 */, PreviousValue?: UE.Vector2D /* = (X=0.000,Y=0.000) */) : UE.Vector2D;
        static NextSobolCell3D(Index: number, NumCells?: number /* = 1 */, PreviousValue?: UE.Vector /* = 0.000000,0.000000,0.000000 */) : UE.Vector;
        static NextSobolFloat(Index: number, Dimension: number, PreviousValue: number) : number;
        static RandomSobolCell2D(Index: number, NumCells?: number /* = 1 */, Cell?: UE.Vector2D /* = (X=0.000,Y=0.000) */, Seed?: UE.Vector2D /* = (X=0.000,Y=0.000) */) : UE.Vector2D;
        static RandomSobolCell3D(Index: number, NumCells?: number /* = 1 */, Cell?: UE.Vector /* = 0.000000,0.000000,0.000000 */, Seed?: UE.Vector /* = 0.000000,0.000000,0.000000 */) : UE.Vector;
        static RandomSobolFloat(Index: number, Dimension: number, Seed: number) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImportanceSamplingLibrary;
        static Load(InName: string): ImportanceSamplingLibrary;
    
        __tid_ImportanceSamplingLibrary_0__: boolean;
    }
    
    class ImportantToggleSettingInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImportantToggleSettingInterface;
        static Load(InName: string): ImportantToggleSettingInterface;
    
        __tid_ImportantToggleSettingInterface_0__: boolean;
    }
    
    class ImportAssetsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GlobalImportData: UE.AutomatedAssetImportData;
        ImportDataList: TArray<UE.AutomatedAssetImportData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImportAssetsCommandlet;
        static Load(InName: string): ImportAssetsCommandlet;
    
        __tid_ImportAssetsCommandlet_0__: boolean;
    }
    
    class ImportDialogueScriptCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImportDialogueScriptCommandlet;
        static Load(InName: string): ImportDialogueScriptCommandlet;
    
        __tid_ImportDialogueScriptCommandlet_0__: boolean;
    }
    
    class ImportLocalizedDialogueCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImportLocalizedDialogueCommandlet;
        static Load(InName: string): ImportLocalizedDialogueCommandlet;
    
        __tid_ImportLocalizedDialogueCommandlet_0__: boolean;
    }
    
    class ImportSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnAssetPreImport_BP: $MulticastDelegate<(InFactory: $Nullable<UE.Factory>, InClass: $Nullable<UE.Class>, InParent: $Nullable<UE.Object>, Name: string, Type: string) => void>;
        OnAssetPostImport_BP: $MulticastDelegate<(InFactory: $Nullable<UE.Factory>, InCreatedObject: $Nullable<UE.Object>) => void>;
        OnAssetReimport_BP: $MulticastDelegate<(InCreatedObject: $Nullable<UE.Object>) => void>;
        OnAssetPostLODImport_BP: $MulticastDelegate<(InObject: $Nullable<UE.Object>, InLODIndex: number) => void>;
        OnAssetPostImport_Dyn__DelegateSignature(InFactory: $Nullable<UE.Factory>, InCreatedObject: $Nullable<UE.Object>) : void;
        OnAssetPostLODImport_Dyn__DelegateSignature(InObject: $Nullable<UE.Object>, InLODIndex: number) : void;
        OnAssetPreImport_Dyn__DelegateSignature(InFactory: $Nullable<UE.Factory>, InClass: $Nullable<UE.Class>, InParent: $Nullable<UE.Object>, Name: string, Type: string) : void;
        OnAssetReimport_Dyn__DelegateSignature(InCreatedObject: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImportSubsystem;
        static Load(InName: string): ImportSubsystem;
    
        __tid_ImportSubsystem_0__: boolean;
    }
    
    class ImportVertexColorOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UVIndex: number;
        LODIndex: number;
        bRed: boolean;
        bBlue: boolean;
        bGreen: boolean;
        bAlpha: boolean;
        bImportToInstance: boolean;
        bCanImportToInstance: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ImportVertexColorOptions;
        static Load(InName: string): ImportVertexColorOptions;
    
        __tid_ImportVertexColorOptions_0__: boolean;
    }
    
    class InAppPurchaseProductInfo {
        constructor();
        constructor(Identifier: string, TransactionIdentifier: string, DisplayName: string, DisplayDescription: string, DisplayPrice: string, RawPrice: number, CurrencyCode: string, CurrencySymbol: string, DecimalSeparator: string, GroupingSeparator: string, ReceiptData: string);
        Identifier: string;
        TransactionIdentifier: string;
        DisplayName: string;
        DisplayDescription: string;
        DisplayPrice: string;
        RawPrice: number;
        CurrencyCode: string;
        CurrencySymbol: string;
        DecimalSeparator: string;
        GroupingSeparator: string;
        ReceiptData: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseProductInfo_0__: boolean;
    }
    
    class InAppPurchaseProductRequest {
        constructor();
        constructor(ProductIdentifier: string, bIsConsumable: boolean);
        ProductIdentifier: string;
        bIsConsumable: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseProductRequest_0__: boolean;
    }
    
    class InAppPurchaseCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(PurchaseStatus: UE.EInAppPurchaseState, InAppPurchaseReceipts: UE.InAppPurchaseProductInfo) => void>;
        OnFailure: $MulticastDelegate<(PurchaseStatus: UE.EInAppPurchaseState, InAppPurchaseReceipts: UE.InAppPurchaseProductInfo) => void>;
        static CreateProxyObjectForInAppPurchase(PlayerController: $Nullable<UE.PlayerController>, ProductRequest: UE.InAppPurchaseProductRequest) : UE.InAppPurchaseCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InAppPurchaseCallbackProxy;
        static Load(InName: string): InAppPurchaseCallbackProxy;
    
        __tid_InAppPurchaseCallbackProxy_0__: boolean;
    }
    
    class InAppPurchaseReceiptInfo2 {
        constructor();
        constructor(ItemName: string, ItemId: string, ValidationInfo: string);
        ItemName: string;
        ItemId: string;
        ValidationInfo: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseReceiptInfo2_0__: boolean;
    }
    
    class InAppPurchaseProductRequest2 {
        constructor();
        constructor(ProductIdentifier: string, bIsConsumable: boolean);
        ProductIdentifier: string;
        bIsConsumable: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseProductRequest2_0__: boolean;
    }
    
    class InAppPurchaseCallbackProxy2 extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(PurchaseStatus: UE.EInAppPurchaseStatus, InAppPurchaseReceipts: TArray<UE.InAppPurchaseReceiptInfo2>) => void>;
        OnFailure: $MulticastDelegate<(PurchaseStatus: UE.EInAppPurchaseStatus, InAppPurchaseReceipts: TArray<UE.InAppPurchaseReceiptInfo2>) => void>;
        static CreateProxyObjectForInAppPurchase(PlayerController: $Nullable<UE.PlayerController>, ProductRequest: UE.InAppPurchaseProductRequest2) : UE.InAppPurchaseCallbackProxy2;
        static CreateProxyObjectForInAppPurchaseQueryOwned(PlayerController: $Nullable<UE.PlayerController>) : UE.InAppPurchaseCallbackProxy2;
        static CreateProxyObjectForInAppPurchaseUnprocessedPurchases(PlayerController: $Nullable<UE.PlayerController>) : UE.InAppPurchaseCallbackProxy2;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InAppPurchaseCallbackProxy2;
        static Load(InName: string): InAppPurchaseCallbackProxy2;
    
        __tid_InAppPurchaseCallbackProxy2_0__: boolean;
    }
    
    enum PurchaseType { Consumable, Nonconsumable, Undefined, PurchaseType_MAX, __typeKeyDoNoAccess}
    class PurchaseItemDetails {
        constructor();
        constructor(Price: string, Name: string, Type: UE.PurchaseType);
        Price: string;
        Name: string;
        Type: UE.PurchaseType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PurchaseItemDetails_0__: boolean;
    }
    
    class PurchaseConfirmation {
        constructor();
        constructor(PackageName: string, Type: UE.PurchaseType);
        PackageName: string;
        Type: UE.PurchaseType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PurchaseConfirmation_0__: boolean;
    }
    
    class InAppPurchaseComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InAppPurchaseLogMessage: $MulticastDelegate<(LogMessage: string) => void>;
        GetItemsDetailsSuccess: $MulticastDelegate<(ItemsDetails: TArray<UE.PurchaseItemDetails>) => void>;
        GetItemsDetailsFailure: $MulticastDelegate<() => void>;
        PurchaseConfirmationSuccess: $MulticastDelegate<(PurchaseConfirmations: UE.PurchaseConfirmation) => void>;
        PurchaseConfirmationFailure: $MulticastDelegate<() => void>;
        GetPurchaseHistorySuccess: $MulticastDelegate<(PurchaseHistory: TArray<UE.PurchaseConfirmation>) => void>;
        GetPurchaseHistoryFailure: $MulticastDelegate<() => void>;
        GetItemsDetailsFailure__DelegateSignature() : void;
        GetItemsDetailsSuccess__DelegateSignature(ItemsDetails: TArray<UE.PurchaseItemDetails>) : void;
        GetPurchaseHistoryFailure__DelegateSignature() : void;
        GetPurchaseHistorySuccess__DelegateSignature(PurchaseHistory: TArray<UE.PurchaseConfirmation>) : void;
        InAppPurchaseLogMessage__DelegateSignature(LogMessage: string) : void;
        PurchaseConfirmationFailure__DelegateSignature() : void;
        PurchaseConfirmationSuccess__DelegateSignature(PurchaseConfirmations: UE.PurchaseConfirmation) : void;
        TryGetItemsDetailsAsync(ItemIDs: TArray<string>) : boolean;
        TryGetPurchaseHistoryAsync(InNumPages: number) : boolean;
        TryPurchaseItemAsync(ItemDetails: UE.PurchaseItemDetails) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InAppPurchaseComponent;
        static Load(InName: string): InAppPurchaseComponent;
    
        __tid_InAppPurchaseComponent_0__: boolean;
    }
    
    class InAppPurchaseProductInfo2 {
        constructor();
        constructor(Identifier: string, TransactionIdentifier: string, DisplayName: string, DisplayDescription: string, DisplayPrice: string, RawPrice: number, CurrencyCode: string, CurrencySymbol: string, DecimalSeparator: string, GroupingSeparator: string, ReceiptData: string, DynamicFields: TMap<string, string>);
        Identifier: string;
        TransactionIdentifier: string;
        DisplayName: string;
        DisplayDescription: string;
        DisplayPrice: string;
        RawPrice: number;
        CurrencyCode: string;
        CurrencySymbol: string;
        DecimalSeparator: string;
        GroupingSeparator: string;
        ReceiptData: string;
        DynamicFields: TMap<string, string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseProductInfo2_0__: boolean;
    }
    
    class InAppPurchaseQueryCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(InAppPurchaseInformation: TArray<UE.InAppPurchaseProductInfo>) => void>;
        OnFailure: $MulticastDelegate<(InAppPurchaseInformation: TArray<UE.InAppPurchaseProductInfo>) => void>;
        static CreateProxyObjectForInAppPurchaseQuery(PlayerController: $Nullable<UE.PlayerController>, ProductIdentifiers: TArray<string>) : UE.InAppPurchaseQueryCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InAppPurchaseQueryCallbackProxy;
        static Load(InName: string): InAppPurchaseQueryCallbackProxy;
    
        __tid_InAppPurchaseQueryCallbackProxy_0__: boolean;
    }
    
    class OnlineProxyStoreOffer {
        constructor();
        constructor(OfferId: string, Title: string, Description: string, LongDescription: string, RegularPriceText: string, RegularPrice: number, PriceText: string, NumericPrice: number, CurrencyCode: string, ReleaseDate: UE.DateTime, ExpirationDate: UE.DateTime, DiscountType: UE.EOnlineProxyStoreOfferDiscountType, DynamicFields: TMap<string, string>);
        OfferId: string;
        Title: string;
        Description: string;
        LongDescription: string;
        RegularPriceText: string;
        RegularPrice: number;
        PriceText: string;
        NumericPrice: number;
        CurrencyCode: string;
        ReleaseDate: UE.DateTime;
        ExpirationDate: UE.DateTime;
        DiscountType: UE.EOnlineProxyStoreOfferDiscountType;
        DynamicFields: TMap<string, string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OnlineProxyStoreOffer_0__: boolean;
    }
    
    class InAppPurchaseQueryCallbackProxy2 extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(InAppOfferInformation: TArray<UE.OnlineProxyStoreOffer>) => void>;
        OnFailure: $MulticastDelegate<(InAppOfferInformation: TArray<UE.OnlineProxyStoreOffer>) => void>;
        static CreateProxyObjectForInAppPurchaseQuery(PlayerController: $Nullable<UE.PlayerController>, ProductIdentifiers: TArray<string>) : UE.InAppPurchaseQueryCallbackProxy2;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InAppPurchaseQueryCallbackProxy2;
        static Load(InName: string): InAppPurchaseQueryCallbackProxy2;
    
        __tid_InAppPurchaseQueryCallbackProxy2_0__: boolean;
    }
    
    class InAppPurchaseReceiptInfo {
        constructor();
        constructor(ItemName: string, ItemId: string, ValidationInfo: string);
        ItemName: string;
        ItemId: string;
        ValidationInfo: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseReceiptInfo_0__: boolean;
    }
    
    class InAppPurchaseRestoreInfo {
        constructor();
        constructor(Identifier: string, ReceiptData: string, TransactionIdentifier: string);
        Identifier: string;
        ReceiptData: string;
        TransactionIdentifier: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseRestoreInfo_0__: boolean;
    }
    
    class InAppPurchaseRestoreCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(CompletionStatus: UE.EInAppPurchaseState, InAppRestorePurchaseInformation: TArray<UE.InAppPurchaseRestoreInfo>) => void>;
        OnFailure: $MulticastDelegate<(CompletionStatus: UE.EInAppPurchaseState, InAppRestorePurchaseInformation: TArray<UE.InAppPurchaseRestoreInfo>) => void>;
        static CreateProxyObjectForInAppPurchaseRestore(ConsumableProductFlags: TArray<UE.InAppPurchaseProductRequest>, PlayerController: $Nullable<UE.PlayerController>) : UE.InAppPurchaseRestoreCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InAppPurchaseRestoreCallbackProxy;
        static Load(InName: string): InAppPurchaseRestoreCallbackProxy;
    
        __tid_InAppPurchaseRestoreCallbackProxy_0__: boolean;
    }
    
    class InAppPurchaseRestoreInfo2 {
        constructor();
        constructor(ItemName: string, ItemId: string, ValidationInfo: string);
        ItemName: string;
        ItemId: string;
        ValidationInfo: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InAppPurchaseRestoreInfo2_0__: boolean;
    }
    
    class InAppPurchaseRestoreCallbackProxy2 extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(PurchaseStatus: UE.EInAppPurchaseStatus, InAppPurchaseRestoreInfo: TArray<UE.InAppPurchaseRestoreInfo2>) => void>;
        OnFailure: $MulticastDelegate<(PurchaseStatus: UE.EInAppPurchaseStatus, InAppPurchaseRestoreInfo: TArray<UE.InAppPurchaseRestoreInfo2>) => void>;
        static CreateProxyObjectForInAppPurchaseRestore(ConsumableProductFlags: TArray<UE.InAppPurchaseProductRequest2>, PlayerController: $Nullable<UE.PlayerController>) : UE.InAppPurchaseRestoreCallbackProxy2;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InAppPurchaseRestoreCallbackProxy2;
        static Load(InName: string): InAppPurchaseRestoreCallbackProxy2;
    
        __tid_InAppPurchaseRestoreCallbackProxy2_0__: boolean;
    }
    
    class InertializationBoneDiff {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InertializationBoneDiff_0__: boolean;
    }
    
    class InertializationCurveDiff {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InertializationCurveDiff_0__: boolean;
    }
    
    class InertializationPose {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InertializationPose_0__: boolean;
    }
    
    class InertializationPoseDiff {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InertializationPoseDiff_0__: boolean;
    }
    
    class InGameAdManager extends UE.PlatformInterfaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShouldPauseWhileAdOpen: boolean;
        ClickedBannerDelegates: TArray<$Delegate<() => void>>;
        ClosedAdDelegates: TArray<$Delegate<() => void>>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InGameAdManager;
        static Load(InName: string): InGameAdManager;
    
        __tid_InGameAdManager_0__: boolean;
    }
    
    class InlineEditableTextBlockStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(EditableTextBoxStyle: UE.EditableTextBoxStyle, TextStyle: UE.TextBlockStyle);
        EditableTextBoxStyle: UE.EditableTextBoxStyle;
        TextStyle: UE.TextBlockStyle;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InlineEditableTextBlockStyle_0__: boolean;
    }
    
    class InlineTextImageStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(Image: UE.SlateBrush, Baseline: number);
        Image: UE.SlateBrush;
        Baseline: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InlineTextImageStyle_0__: boolean;
    }
    
    class InputDelegateBinding extends UE.DynamicBlueprintBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputDelegateBinding;
        static Load(InName: string): InputDelegateBinding;
    
        __tid_InputDelegateBinding_0__: boolean;
    }
    
    class InputActionDelegateBinding extends UE.InputDelegateBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputActionDelegateBindings: TArray<UE.BlueprintInputActionDelegateBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputActionDelegateBinding;
        static Load(InName: string): InputActionDelegateBinding;
    
        __tid_InputActionDelegateBinding_0__: boolean;
    }
    
    class InputActionKeyMapping {
        constructor();
        constructor(ActionName: string, bShift: boolean, bCtrl: boolean, bAlt: boolean, bCmd: boolean, Key: UE.Key);
        ActionName: string;
        bShift: boolean;
        bCtrl: boolean;
        bAlt: boolean;
        bCmd: boolean;
        Key: UE.Key;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputActionKeyMapping_0__: boolean;
    }
    
    class InputActionSpeechMapping {
        constructor();
        constructor(ActionName: string, SpeechKeyword: string);
        ActionName: string;
        SpeechKeyword: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputActionSpeechMapping_0__: boolean;
    }
    
    class InputAxisProperties {
        constructor();
        constructor(DeadZone: number, Sensitivity: number, Exponent: number, bInvert: boolean);
        DeadZone: number;
        Sensitivity: number;
        Exponent: number;
        bInvert: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputAxisProperties_0__: boolean;
    }
    
    class InputAxisConfigEntry {
        constructor();
        constructor(AxisKeyName: string, AxisProperties: UE.InputAxisProperties);
        AxisKeyName: string;
        AxisProperties: UE.InputAxisProperties;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputAxisConfigEntry_0__: boolean;
    }
    
    class InputAxisDelegateBinding extends UE.InputDelegateBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputAxisDelegateBindings: TArray<UE.BlueprintInputAxisDelegateBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputAxisDelegateBinding;
        static Load(InName: string): InputAxisDelegateBinding;
    
        __tid_InputAxisDelegateBinding_0__: boolean;
    }
    
    class InputAxisKeyDelegateBinding extends UE.InputDelegateBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputAxisKeyDelegateBindings: TArray<UE.BlueprintInputAxisKeyDelegateBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputAxisKeyDelegateBinding;
        static Load(InName: string): InputAxisKeyDelegateBinding;
    
        __tid_InputAxisKeyDelegateBinding_0__: boolean;
    }
    
    class InputAxisKeyMapping {
        constructor();
        constructor(AxisName: string, Scale: number, Key: UE.Key);
        AxisName: string;
        Scale: number;
        Key: UE.Key;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputAxisKeyMapping_0__: boolean;
    }
    
    class InputBehaviorSource extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputBehaviorSource;
        static Load(InName: string): InputBehaviorSource;
    
        __tid_InputBehaviorSource_0__: boolean;
    }
    
    class InputCoreTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputCoreTypes;
        static Load(InName: string): InputCoreTypes;
    
        __tid_InputCoreTypes_0__: boolean;
    }
    
    class InputKeyDelegateBinding extends UE.InputDelegateBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputKeyDelegateBindings: TArray<UE.BlueprintInputKeyDelegateBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputKeyDelegateBinding;
        static Load(InName: string): InputKeyDelegateBinding;
    
        __tid_InputKeyDelegateBinding_0__: boolean;
    }
    
    class InputKeySelector extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetStyle: UE.ButtonStyle;
        TextStyle: UE.TextBlockStyle;
        SelectedKey: UE.InputChord;
        Font: UE.SlateFontInfo;
        Margin: UE.Margin;
        ColorAndOpacity: UE.LinearColor;
        KeySelectionText: string;
        NoKeySpecifiedText: string;
        bAllowModifierKeys: boolean;
        bAllowGamepadKeys: boolean;
        EscapeKeys: TArray<UE.Key>;
        OnKeySelected: $MulticastDelegate<(SelectedKey: UE.InputChord) => void>;
        OnIsSelectingKeyChanged: $MulticastDelegate<() => void>;
        GetIsSelectingKey() : boolean;
        OnIsSelectingKeyChanged__DelegateSignature() : void;
        OnKeySelected__DelegateSignature(SelectedKey: UE.InputChord) : void;
        SetAllowGamepadKeys(bInAllowGamepadKeys: boolean) : void;
        SetAllowModifierKeys(bInAllowModifierKeys: boolean) : void;
        SetEscapeKeys(InKeys: TArray<UE.Key>) : void;
        SetKeySelectionText(InKeySelectionText: string) : void;
        SetNoKeySpecifiedText(InNoKeySpecifiedText: string) : void;
        SetSelectedKey(InSelectedKey: UE.InputChord) : void;
        SetTextBlockVisibility(InVisibility: UE.ESlateVisibility) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputKeySelector;
        static Load(InName: string): InputKeySelector;
    
        __tid_InputKeySelector_0__: boolean;
    }
    
    class InputRayHit {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InputRayHit_0__: boolean;
    }
    
    class InputSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisConfig: TArray<UE.InputAxisConfigEntry>;
        bAltEnterTogglesFullscreen: boolean;
        bF11TogglesFullscreen: boolean;
        bUseMouseForTouch: boolean;
        bEnableMouseSmoothing: boolean;
        bEnableFOVScaling: boolean;
        bCaptureMouseOnLaunch: boolean;
        bDefaultViewportMouseLock: boolean;
        bAlwaysShowTouchInterface: boolean;
        bShowConsoleOnFourFingerTap: boolean;
        bEnableGestureRecognizer: boolean;
        bUseAutocorrect: boolean;
        ExcludedAutocorrectOS: TArray<string>;
        ExcludedAutocorrectCultures: TArray<string>;
        ExcludedAutocorrectDeviceModels: TArray<string>;
        DefaultViewportMouseCaptureMode: UE.EMouseCaptureMode;
        DefaultViewportMouseLockMode: UE.EMouseLockMode;
        FOVScale: number;
        DoubleClickTime: number;
        ActionMappings: TArray<UE.InputActionKeyMapping>;
        AxisMappings: TArray<UE.InputAxisKeyMapping>;
        SpeechMappings: TArray<UE.InputActionSpeechMapping>;
        DefaultPlayerInputClass: TSoftClassPtr<UE.PlayerInput>;
        DefaultInputComponentClass: TSoftClassPtr<UE.InputComponent>;
        DefaultTouchInterface: UE.SoftObjectPath;
        ConsoleKey: UE.Key;
        ConsoleKeys: TArray<UE.Key>;
        AddActionMapping(KeyMapping: UE.InputActionKeyMapping, bForceRebuildKeymaps?: boolean /* = true */) : void;
        AddAxisMapping(KeyMapping: UE.InputAxisKeyMapping, bForceRebuildKeymaps?: boolean /* = true */) : void;
        ForceRebuildKeymaps() : void;
        GetActionMappingByName(InActionName: string, OutMappings: $Ref<TArray<UE.InputActionKeyMapping>>) : void;
        GetActionNames(ActionNames: $Ref<TArray<string>>) : void;
        GetAxisMappingByName(InAxisName: string, OutMappings: $Ref<TArray<UE.InputAxisKeyMapping>>) : void;
        GetAxisNames(AxisNames: $Ref<TArray<string>>) : void;
        RemoveActionMapping(KeyMapping: UE.InputActionKeyMapping, bForceRebuildKeymaps?: boolean /* = true */) : void;
        RemoveAxisMapping(KeyMapping: UE.InputAxisKeyMapping, bForceRebuildKeymaps?: boolean /* = true */) : void;
        SaveKeyMappings() : void;
        static GetInputSettings() : UE.InputSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputSettings;
        static Load(InName: string): InputSettings;
    
        __tid_InputSettings_0__: boolean;
    }
    
    class InputTouchDelegateBinding extends UE.InputDelegateBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputTouchDelegateBindings: TArray<UE.BlueprintInputTouchDelegateBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputTouchDelegateBinding;
        static Load(InName: string): InputTouchDelegateBinding;
    
        __tid_InputTouchDelegateBinding_0__: boolean;
    }
    
    class InputVectorAxisDelegateBinding extends UE.InputAxisKeyDelegateBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InputVectorAxisDelegateBinding;
        static Load(InName: string): InputVectorAxisDelegateBinding;
    
        __tid_InputVectorAxisDelegateBinding_0__: boolean;
    }
    
    class InstancedFoliageActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InstancedFoliageActor;
        static Load(InName: string): InstancedFoliageActor;
    
        __tid_InstancedFoliageActor_0__: boolean;
    }
    
    class InstancedStaticMeshLightMapInstanceData {
        constructor();
        constructor(Transform: UE.Transform, MapBuildDataIds: TArray<UE.Guid>);
        Transform: UE.Transform;
        MapBuildDataIds: TArray<UE.Guid>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InstancedStaticMeshLightMapInstanceData_0__: boolean;
    }
    
    class InstancedStaticMeshComponentInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        constructor(StaticMesh: UE.StaticMesh, CachedStaticLighting: UE.InstancedStaticMeshLightMapInstanceData, PerInstanceSMData: TArray<UE.InstancedStaticMeshInstanceData>, PerInstanceSMCustomData: TArray<number>, InstancingRandomSeed: number);
        StaticMesh: UE.StaticMesh;
        CachedStaticLighting: UE.InstancedStaticMeshLightMapInstanceData;
        PerInstanceSMData: TArray<UE.InstancedStaticMeshInstanceData>;
        PerInstanceSMCustomData: TArray<number>;
        InstancingRandomSeed: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InstancedStaticMeshComponentInstanceData_0__: boolean;
    }
    
    class Int16Property extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Int16Property;
        static Load(InName: string): Int16Property;
    
        __tid_Int16Property_0__: boolean;
    }
    
    class Int32Binding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Int32Binding;
        static Load(InName: string): Int32Binding;
    
        __tid_Int32Binding_0__: boolean;
    }
    
    class Int64Property extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Int64Property;
        static Load(InName: string): Int64Property;
    
        __tid_Int64Property_0__: boolean;
    }
    
    class Int8Property extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Int8Property;
        static Load(InName: string): Int8Property;
    
        __tid_Int8Property_0__: boolean;
    }
    
    class IntegerChannelKeyProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Time: UE.FrameNumber;
        Value: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IntegerChannelKeyProxy;
        static Load(InName: string): IntegerChannelKeyProxy;
    
        __tid_IntegerChannelKeyProxy_0__: boolean;
    }
    
    class InteractionMechanic extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractionMechanic;
        static Load(InName: string): InteractionMechanic;
    
        __tid_InteractionMechanic_0__: boolean;
    }
    
    class StaticMeshActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StaticMeshComponent: UE.StaticMeshComponent;
        bStaticMeshReplicateMovement: boolean;
        NavigationGeometryGatheringMode: UE.ENavDataGatheringMode;
        SetMobility(InMobility: UE.EComponentMobility) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshActor;
        static Load(InName: string): StaticMeshActor;
    
        __tid_StaticMeshActor_0__: boolean;
    }
    
    class InteractiveFoliageActor extends UE.StaticMeshActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CapsuleComponent: UE.CapsuleComponent;
        TouchingActorEntryPosition: UE.Vector;
        FoliageVelocity: UE.Vector;
        FoliageForce: UE.Vector;
        FoliagePosition: UE.Vector;
        FoliageDamageImpulseScale: number;
        FoliageTouchImpulseScale: number;
        FoliageStiffness: number;
        FoliageStiffnessQuadratic: number;
        FoliageDamping: number;
        MaxDamageImpulse: number;
        MaxTouchImpulse: number;
        MaxForce: number;
        Mass: number;
        CapsuleTouched(OverlappedComp: $Nullable<UE.PrimitiveComponent>, Other: $Nullable<UE.Actor>, OtherComp: $Nullable<UE.PrimitiveComponent>, OtherBodyIndex: number, bFromSweep: boolean, OverlapInfo: UE.HitResult) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveFoliageActor;
        static Load(InName: string): InteractiveFoliageActor;
    
        __tid_InteractiveFoliageActor_0__: boolean;
    }
    
    class InteractiveFoliageComponent extends UE.StaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InteractiveFoliageComponent;
        static Load(InName: string): InteractiveFoliageComponent;
    
        __tid_InteractiveFoliageComponent_0__: boolean;
    }
    
    class Interface_AssetUserData extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Interface_AssetUserData;
        static Load(InName: string): Interface_AssetUserData;
    
        __tid_Interface_AssetUserData_0__: boolean;
    }
    
    class Interface_CollisionDataProvider extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Interface_CollisionDataProvider;
        static Load(InName: string): Interface_CollisionDataProvider;
    
        __tid_Interface_CollisionDataProvider_0__: boolean;
    }
    
    class Interface_PostProcessVolume extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Interface_PostProcessVolume;
        static Load(InName: string): Interface_PostProcessVolume;
    
        __tid_Interface_PostProcessVolume_0__: boolean;
    }
    
    class Interface_PreviewMeshProvider extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Interface_PreviewMeshProvider;
        static Load(InName: string): Interface_PreviewMeshProvider;
    
        __tid_Interface_PreviewMeshProvider_0__: boolean;
    }
    
    class InterfaceProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterfaceProperty;
        static Load(InName: string): InterfaceProperty;
    
        __tid_InterfaceProperty_0__: boolean;
    }
    
    class InternationalizationConditioningCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InternationalizationConditioningCommandlet;
        static Load(InName: string): InternationalizationConditioningCommandlet;
    
        __tid_InternationalizationConditioningCommandlet_0__: boolean;
    }
    
    class InternationalizationExportCommandlet extends UE.GatherTextCommandletBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InternationalizationExportCommandlet;
        static Load(InName: string): InternationalizationExportCommandlet;
    
        __tid_InternationalizationExportCommandlet_0__: boolean;
    }
    
    class InternationalizationExportSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CulturesToGenerate: TArray<string>;
        CommandletClass: string;
        SourcePath: string;
        DestinationPath: string;
        PortableObjectName: string;
        ManifestName: string;
        ArchiveName: string;
        bExportLoc: boolean;
        bImportLoc: boolean;
        bUseCultureDirectory: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InternationalizationExportSettings;
        static Load(InName: string): InternationalizationExportSettings;
    
        __tid_InternationalizationExportSettings_0__: boolean;
    }
    
    class InternationalizationSettingsModel extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DisplayTimezone: UE.ETimezoneSetting;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InternationalizationSettingsModel;
        static Load(InName: string): InternationalizationSettingsModel;
    
        __tid_InternationalizationSettingsModel_0__: boolean;
    }
    
    class InterpControlPoint {
        constructor();
        constructor(PositionControlPoint: UE.Vector, bPositionIsRelative: boolean);
        PositionControlPoint: UE.Vector;
        bPositionIsRelative: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpControlPoint_0__: boolean;
    }
    
    class InterpCurvePointLinearColor {
        constructor();
        constructor(InVal: number, OutVal: UE.LinearColor, ArriveTangent: UE.LinearColor, LeaveTangent: UE.LinearColor, InterpMode: UE.EInterpCurveMode);
        InVal: number;
        OutVal: UE.LinearColor;
        ArriveTangent: UE.LinearColor;
        LeaveTangent: UE.LinearColor;
        InterpMode: UE.EInterpCurveMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurvePointLinearColor_0__: boolean;
    }
    
    class InterpCurveLinearColor {
        constructor();
        constructor(Points: TArray<UE.InterpCurvePointLinearColor>, bIsLooped: boolean, LoopKeyOffset: number);
        Points: TArray<UE.InterpCurvePointLinearColor>;
        bIsLooped: boolean;
        LoopKeyOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpCurveLinearColor_0__: boolean;
    }
    
    class InterpDataFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpDataFactoryNew;
        static Load(InName: string): InterpDataFactoryNew;
    
        __tid_InterpDataFactoryNew_0__: boolean;
    }
    
    class InterpEdSelKey {
        constructor();
        constructor(Group: UE.InterpGroup, Track: UE.InterpTrack, KeyIndex: number, UnsnappedPosition: number);
        Group: UE.InterpGroup;
        Track: UE.InterpTrack;
        KeyIndex: number;
        UnsnappedPosition: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_InterpEdSelKey_0__: boolean;
    }
    
    class InterpFilter_Classes extends UE.InterpFilter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClassToFilterBy: UE.Class;
        TrackClasses: TArray<UE.Class>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpFilter_Classes;
        static Load(InName: string): InterpFilter_Classes;
    
        __tid_InterpFilter_Classes_0__: boolean;
    }
    
    class InterpFilter_Custom extends UE.InterpFilter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GroupsToInclude: TArray<UE.InterpGroup>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpFilter_Custom;
        static Load(InName: string): InterpFilter_Custom;
    
        __tid_InterpFilter_Custom_0__: boolean;
    }
    
    class InterpGroupCamera extends UE.InterpGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraAnimInst: UE.CameraAnim;
        Target: UE.CameraPreviewInfo;
        CompressTolerance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpGroupCamera;
        static Load(InName: string): InterpGroupCamera;
    
        __tid_InterpGroupCamera_0__: boolean;
    }
    
    class InterpGroupInstCamera extends UE.InterpGroupInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpGroupInstCamera;
        static Load(InName: string): InterpGroupInstCamera;
    
        __tid_InterpGroupInstCamera_0__: boolean;
    }
    
    class InterpGroupInstDirector extends UE.InterpGroupInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpGroupInstDirector;
        static Load(InName: string): InterpGroupInstDirector;
    
        __tid_InterpGroupInstDirector_0__: boolean;
    }
    
    class InterpToMovementComponent extends UE.MovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Duration: number;
        bPauseOnImpact: boolean;
        bSweep: boolean;
        TeleportType: UE.ETeleportType;
        BehaviourType: UE.EInterpToBehaviourType;
        bCheckIfStillInWorld: boolean;
        bForceSubStepping: boolean;
        OnInterpToReverse: $MulticastDelegate<(ImpactResult: UE.HitResult, Time: number) => void>;
        OnInterpToStop: $MulticastDelegate<(ImpactResult: UE.HitResult, Time: number) => void>;
        OnWaitBeginDelegate: $MulticastDelegate<(ImpactResult: UE.HitResult, Time: number) => void>;
        OnWaitEndDelegate: $MulticastDelegate<(ImpactResult: UE.HitResult, Time: number) => void>;
        OnResetDelegate: $MulticastDelegate<(ImpactResult: UE.HitResult, Time: number) => void>;
        MaxSimulationTimeStep: number;
        MaxSimulationIterations: number;
        ControlPoints: TArray<UE.InterpControlPoint>;
        FinaliseControlPoints() : void;
        OnInterpToResetDelegate__DelegateSignature(ImpactResult: UE.HitResult, Time: number) : void;
        OnInterpToReverseDelegate__DelegateSignature(ImpactResult: UE.HitResult, Time: number) : void;
        OnInterpToStopDelegate__DelegateSignature(ImpactResult: UE.HitResult, Time: number) : void;
        OnInterpToWaitBeginDelegate__DelegateSignature(ImpactResult: UE.HitResult, Time: number) : void;
        OnInterpToWaitEndDelegate__DelegateSignature(ImpactResult: UE.HitResult, Time: number) : void;
        RestartMovement(InitialDirection?: number /* = 1.000000 */) : void;
        StopSimulating(HitResult: UE.HitResult) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpToMovementComponent;
        static Load(InName: string): InterpToMovementComponent;
    
        __tid_InterpToMovementComponent_0__: boolean;
    }
    
    class InterpTrackFloatBase extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatTrack: UE.InterpCurveFloat;
        CurveTension: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackFloatBase;
        static Load(InName: string): InterpTrackFloatBase;
    
        __tid_InterpTrackFloatBase_0__: boolean;
    }
    
    class InterpTrackAnimControl extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SlotName: string;
        AnimSeqs: TArray<UE.AnimControlTrackKey>;
        bSkipAnimNotifiers: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackAnimControl;
        static Load(InName: string): InterpTrackAnimControl;
    
        __tid_InterpTrackAnimControl_0__: boolean;
    }
    
    class InterpTrackVectorBase extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VectorTrack: UE.InterpCurveVector;
        CurveTension: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackVectorBase;
        static Load(InName: string): InterpTrackVectorBase;
    
        __tid_InterpTrackVectorBase_0__: boolean;
    }
    
    class InterpTrackAudioMaster extends UE.InterpTrackVectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackAudioMaster;
        static Load(InName: string): InterpTrackAudioMaster;
    
        __tid_InterpTrackAudioMaster_0__: boolean;
    }
    
    class InterpTrackBoolProp extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoolTrack: TArray<UE.BoolTrackKey>;
        PropertyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackBoolProp;
        static Load(InName: string): InterpTrackBoolProp;
    
        __tid_InterpTrackBoolProp_0__: boolean;
    }
    
    class InterpTrackColorProp extends UE.InterpTrackVectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackColorProp;
        static Load(InName: string): InterpTrackColorProp;
    
        __tid_InterpTrackColorProp_0__: boolean;
    }
    
    class InterpTrackColorScale extends UE.InterpTrackVectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackColorScale;
        static Load(InName: string): InterpTrackColorScale;
    
        __tid_InterpTrackColorScale_0__: boolean;
    }
    
    class InterpTrackDirector extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CutTrack: TArray<UE.DirectorTrackCut>;
        bSimulateCameraCutsOnClients: boolean;
        PreviewCamera: UE.CameraActor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackDirector;
        static Load(InName: string): InterpTrackDirector;
    
        __tid_InterpTrackDirector_0__: boolean;
    }
    
    class InterpTrackEvent extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventTrack: TArray<UE.EventTrackKey>;
        bFireEventsWhenForwards: boolean;
        bFireEventsWhenBackwards: boolean;
        bFireEventsWhenJumpingForwards: boolean;
        bUseCustomEventName: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackEvent;
        static Load(InName: string): InterpTrackEvent;
    
        __tid_InterpTrackEvent_0__: boolean;
    }
    
    class InterpTrackFade extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bPersistFade: boolean;
        bFadeAudio: boolean;
        FadeColor: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackFade;
        static Load(InName: string): InterpTrackFade;
    
        __tid_InterpTrackFade_0__: boolean;
    }
    
    class InterpTrackFloatAnimBPParam extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimBlueprintClass: UE.AnimBlueprintGeneratedClass;
        AnimClass: UE.Class;
        ParamName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackFloatAnimBPParam;
        static Load(InName: string): InterpTrackFloatAnimBPParam;
    
        __tid_InterpTrackFloatAnimBPParam_0__: boolean;
    }
    
    class InterpTrackFloatMaterialParam extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetMaterials: TArray<UE.MaterialInterface>;
        ParamName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackFloatMaterialParam;
        static Load(InName: string): InterpTrackFloatMaterialParam;
    
        __tid_InterpTrackFloatMaterialParam_0__: boolean;
    }
    
    class InterpTrackFloatParticleParam extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParamName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackFloatParticleParam;
        static Load(InName: string): InterpTrackFloatParticleParam;
    
        __tid_InterpTrackFloatParticleParam_0__: boolean;
    }
    
    class InterpTrackFloatProp extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackFloatProp;
        static Load(InName: string): InterpTrackFloatProp;
    
        __tid_InterpTrackFloatProp_0__: boolean;
    }
    
    class InterpTrackInstAnimControl extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LastUpdatePosition: number;
        InitPosition: UE.Vector;
        InitRotation: UE.Rotator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstAnimControl;
        static Load(InName: string): InterpTrackInstAnimControl;
    
        __tid_InterpTrackInstAnimControl_0__: boolean;
    }
    
    class InterpTrackInstAudioMaster extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstAudioMaster;
        static Load(InName: string): InterpTrackInstAudioMaster;
    
        __tid_InterpTrackInstAudioMaster_0__: boolean;
    }
    
    class InterpTrackInstProperty extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyOuterObjectInst: UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstProperty;
        static Load(InName: string): InterpTrackInstProperty;
    
        __tid_InterpTrackInstProperty_0__: boolean;
    }
    
    class InterpTrackInstBoolProp extends UE.InterpTrackInstProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResetBool: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstBoolProp;
        static Load(InName: string): InterpTrackInstBoolProp;
    
        __tid_InterpTrackInstBoolProp_0__: boolean;
    }
    
    class InterpTrackInstColorProp extends UE.InterpTrackInstProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResetColor: UE.Color;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstColorProp;
        static Load(InName: string): InterpTrackInstColorProp;
    
        __tid_InterpTrackInstColorProp_0__: boolean;
    }
    
    class InterpTrackInstColorScale extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstColorScale;
        static Load(InName: string): InterpTrackInstColorScale;
    
        __tid_InterpTrackInstColorScale_0__: boolean;
    }
    
    class InterpTrackInstEvent extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LastUpdatePosition: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstEvent;
        static Load(InName: string): InterpTrackInstEvent;
    
        __tid_InterpTrackInstEvent_0__: boolean;
    }
    
    class InterpTrackInstFade extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstFade;
        static Load(InName: string): InterpTrackInstFade;
    
        __tid_InterpTrackInstFade_0__: boolean;
    }
    
    class InterpTrackInstFloatAnimBPParam extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimScriptInstance: UE.AnimInstance;
        ResetFloat: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstFloatAnimBPParam;
        static Load(InName: string): InterpTrackInstFloatAnimBPParam;
    
        __tid_InterpTrackInstFloatAnimBPParam_0__: boolean;
    }
    
    class PrimitiveMaterialRef {
        constructor();
        constructor(Primitive: UE.PrimitiveComponent, Decal: UE.DecalComponent, ElementIndex: number);
        Primitive: UE.PrimitiveComponent;
        Decal: UE.DecalComponent;
        ElementIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimitiveMaterialRef_0__: boolean;
    }
    
    class InterpTrackInstFloatMaterialParam extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialInstances: TArray<UE.MaterialInstanceDynamic>;
        ResetFloats: TArray<number>;
        PrimitiveMaterialRefs: TArray<UE.PrimitiveMaterialRef>;
        InstancedTrack: UE.InterpTrackFloatMaterialParam;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstFloatMaterialParam;
        static Load(InName: string): InterpTrackInstFloatMaterialParam;
    
        __tid_InterpTrackInstFloatMaterialParam_0__: boolean;
    }
    
    class InterpTrackInstFloatParticleParam extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResetFloat: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstFloatParticleParam;
        static Load(InName: string): InterpTrackInstFloatParticleParam;
    
        __tid_InterpTrackInstFloatParticleParam_0__: boolean;
    }
    
    class InterpTrackInstFloatProp extends UE.InterpTrackInstProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResetFloat: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstFloatProp;
        static Load(InName: string): InterpTrackInstFloatProp;
    
        __tid_InterpTrackInstFloatProp_0__: boolean;
    }
    
    class InterpTrackInstLinearColorProp extends UE.InterpTrackInstProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResetColor: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstLinearColorProp;
        static Load(InName: string): InterpTrackInstLinearColorProp;
    
        __tid_InterpTrackInstLinearColorProp_0__: boolean;
    }
    
    class InterpTrackInstParticleReplay extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LastUpdatePosition: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstParticleReplay;
        static Load(InName: string): InterpTrackInstParticleReplay;
    
        __tid_InterpTrackInstParticleReplay_0__: boolean;
    }
    
    class InterpTrackInstSlomo extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OldTimeDilation: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstSlomo;
        static Load(InName: string): InterpTrackInstSlomo;
    
        __tid_InterpTrackInstSlomo_0__: boolean;
    }
    
    class InterpTrackInstSound extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LastUpdatePosition: number;
        PlayAudioComp: UE.AudioComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstSound;
        static Load(InName: string): InterpTrackInstSound;
    
        __tid_InterpTrackInstSound_0__: boolean;
    }
    
    class InterpTrackInstToggle extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Action: UE.ETrackToggleAction;
        LastUpdatePosition: number;
        bSavedActiveState: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstToggle;
        static Load(InName: string): InterpTrackInstToggle;
    
        __tid_InterpTrackInstToggle_0__: boolean;
    }
    
    class InterpTrackVectorMaterialParam extends UE.InterpTrackVectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetMaterials: TArray<UE.MaterialInterface>;
        ParamName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackVectorMaterialParam;
        static Load(InName: string): InterpTrackVectorMaterialParam;
    
        __tid_InterpTrackVectorMaterialParam_0__: boolean;
    }
    
    class InterpTrackInstVectorMaterialParam extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialInstances: TArray<UE.MaterialInstanceDynamic>;
        ResetVectors: TArray<UE.Vector>;
        PrimitiveMaterialRefs: TArray<UE.PrimitiveMaterialRef>;
        InstancedTrack: UE.InterpTrackVectorMaterialParam;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstVectorMaterialParam;
        static Load(InName: string): InterpTrackInstVectorMaterialParam;
    
        __tid_InterpTrackInstVectorMaterialParam_0__: boolean;
    }
    
    class InterpTrackInstVectorProp extends UE.InterpTrackInstProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ResetVector: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstVectorProp;
        static Load(InName: string): InterpTrackInstVectorProp;
    
        __tid_InterpTrackInstVectorProp_0__: boolean;
    }
    
    class InterpTrackInstVisibility extends UE.InterpTrackInst {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Action: UE.EVisibilityTrackAction;
        LastUpdatePosition: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackInstVisibility;
        static Load(InName: string): InterpTrackInstVisibility;
    
        __tid_InterpTrackInstVisibility_0__: boolean;
    }
    
    class InterpTrackLinearColorBase extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LinearColorTrack: UE.InterpCurveLinearColor;
        CurveTension: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackLinearColorBase;
        static Load(InName: string): InterpTrackLinearColorBase;
    
        __tid_InterpTrackLinearColorBase_0__: boolean;
    }
    
    class InterpTrackLinearColorProp extends UE.InterpTrackLinearColorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackLinearColorProp;
        static Load(InName: string): InterpTrackLinearColorProp;
    
        __tid_InterpTrackLinearColorProp_0__: boolean;
    }
    
    class InterpTrackMoveAxis extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MoveAxis: UE.EInterpMoveAxis;
        LookupTrack: UE.InterpLookupTrack;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackMoveAxis;
        static Load(InName: string): InterpTrackMoveAxis;
    
        __tid_InterpTrackMoveAxis_0__: boolean;
    }
    
    class ParticleReplayTrackKey {
        constructor();
        constructor(Time: number, Duration: number, ClipIDNumber: number);
        Time: number;
        Duration: number;
        ClipIDNumber: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleReplayTrackKey_0__: boolean;
    }
    
    class InterpTrackParticleReplay extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TrackKeys: TArray<UE.ParticleReplayTrackKey>;
        bIsCapturingReplay: boolean;
        FixedTimeStep: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackParticleReplay;
        static Load(InName: string): InterpTrackParticleReplay;
    
        __tid_InterpTrackParticleReplay_0__: boolean;
    }
    
    class InterpTrackSlomo extends UE.InterpTrackFloatBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackSlomo;
        static Load(InName: string): InterpTrackSlomo;
    
        __tid_InterpTrackSlomo_0__: boolean;
    }
    
    class SoundTrackKey {
        constructor();
        constructor(Time: number, Volume: number, Pitch: number, Sound: UE.SoundBase);
        Time: number;
        Volume: number;
        Pitch: number;
        Sound: UE.SoundBase;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundTrackKey_0__: boolean;
    }
    
    class InterpTrackSound extends UE.InterpTrackVectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sounds: TArray<UE.SoundTrackKey>;
        bPlayOnReverse: boolean;
        bContinueSoundOnMatineeEnd: boolean;
        bSuppressSubtitles: boolean;
        bTreatAsDialogue: boolean;
        bAttach: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackSound;
        static Load(InName: string): InterpTrackSound;
    
        __tid_InterpTrackSound_0__: boolean;
    }
    
    class ToggleTrackKey {
        constructor();
        constructor(Time: number, ToggleAction: UE.ETrackToggleAction);
        Time: number;
        ToggleAction: UE.ETrackToggleAction;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToggleTrackKey_0__: boolean;
    }
    
    class InterpTrackToggle extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ToggleTrack: TArray<UE.ToggleTrackKey>;
        bActivateSystemEachUpdate: boolean;
        bActivateWithJustAttachedFlag: boolean;
        bFireEventsWhenForwards: boolean;
        bFireEventsWhenBackwards: boolean;
        bFireEventsWhenJumpingForwards: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackToggle;
        static Load(InName: string): InterpTrackToggle;
    
        __tid_InterpTrackToggle_0__: boolean;
    }
    
    class InterpTrackVectorProp extends UE.InterpTrackVectorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackVectorProp;
        static Load(InName: string): InterpTrackVectorProp;
    
        __tid_InterpTrackVectorProp_0__: boolean;
    }
    
    class VisibilityTrackKey {
        constructor();
        constructor(Time: number, Action: UE.EVisibilityTrackAction, ActiveCondition: UE.EVisibilityTrackCondition);
        Time: number;
        Action: UE.EVisibilityTrackAction;
        ActiveCondition: UE.EVisibilityTrackCondition;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VisibilityTrackKey_0__: boolean;
    }
    
    class InterpTrackVisibility extends UE.InterpTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VisibilityTrack: TArray<UE.VisibilityTrackKey>;
        bFireEventsWhenForwards: boolean;
        bFireEventsWhenBackwards: boolean;
        bFireEventsWhenJumpingForwards: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InterpTrackVisibility;
        static Load(InName: string): InterpTrackVisibility;
    
        __tid_InterpTrackVisibility_0__: boolean;
    }
    
    class IntervalGizmo extends UE.InteractiveGizmo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StateTarget: UE.GizmoTransformChangeStateTarget;
        TransformProxy: UE.TransformProxy;
        ActiveComponents: TArray<UE.PrimitiveComponent>;
        ActiveGizmos: TArray<UE.InteractiveGizmo>;
        AxisYSource: UE.GizmoComponentAxisSource;
        AxisZSource: UE.GizmoComponentAxisSource;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IntervalGizmo;
        static Load(InName: string): IntervalGizmo;
    
        __tid_IntervalGizmo_0__: boolean;
    }
    
    class IntervalGizmoActor extends UE.GizmoActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UpIntervalComponent: UE.GizmoLineHandleComponent;
        DownIntervalComponent: UE.GizmoLineHandleComponent;
        ForwardIntervalComponent: UE.GizmoLineHandleComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IntervalGizmoActor;
        static Load(InName: string): IntervalGizmoActor;
    
        __tid_IntervalGizmoActor_0__: boolean;
    }
    
    class IntervalGizmoBuilder extends UE.InteractiveGizmoBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IntervalGizmoBuilder;
        static Load(InName: string): IntervalGizmoBuilder;
    
        __tid_IntervalGizmoBuilder_0__: boolean;
    }
    
    class IntMargin {
        constructor();
        constructor(Left: number, Top: number, Right: number, Bottom: number);
        Left: number;
        Top: number;
        Right: number;
        Bottom: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IntMargin_0__: boolean;
    }
    
    class IntProperty extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IntProperty;
        static Load(InName: string): IntProperty;
    
        __tid_IntProperty_0__: boolean;
    }
    
    class IntSerialization extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UnsignedInt16Variable: number;
        UnsignedInt32Variable: number;
        UnsignedInt64Variable: bigint;
        SignedInt8Variable: number;
        SignedInt16Variable: number;
        SignedInt64Variable: bigint;
        UnsignedInt8Variable: number;
        SignedInt32Variable: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IntSerialization;
        static Load(InName: string): IntSerialization;
    
        __tid_IntSerialization_0__: boolean;
    }
    
    class InvalidationBox extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCanCache: boolean;
        CacheRelativeTransforms: boolean;
        GetCanCache() : boolean;
        InvalidateCache() : void;
        SetCanCache(CanCache: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): InvalidationBox;
        static Load(InName: string): InvalidationBox;
    
        __tid_InvalidationBox_0__: boolean;
    }
    
    class IOSBuildResourceDirectory {
        constructor();
        constructor(Path: string);
        Path: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IOSBuildResourceDirectory_0__: boolean;
    }
    
    class IOSBuildResourceFilePath {
        constructor();
        constructor(FilePath: string);
        FilePath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IOSBuildResourceFilePath_0__: boolean;
    }
    
    class IOSLaunchDaemonLaunchApp {
        constructor();
        constructor(AppID: string, Parameters: string);
        AppID: string;
        Parameters: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IOSLaunchDaemonLaunchApp_0__: boolean;
    }
    
    class IOSLaunchDaemonPing {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IOSLaunchDaemonPing_0__: boolean;
    }
    
    class IOSLaunchDaemonPong {
        constructor();
        constructor(DeviceID: string, DeviceName: string, DeviceStatus: string, DeviceType: string, bCanPowerOff: boolean, bCanPowerOn: boolean, bCanReboot: boolean);
        DeviceID: string;
        DeviceName: string;
        DeviceStatus: string;
        DeviceType: string;
        bCanPowerOff: boolean;
        bCanPowerOn: boolean;
        bCanReboot: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_IOSLaunchDaemonPong_0__: boolean;
    }
    
    class IOSRuntimeSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnableGameCenterSupport: boolean;
        bEnableCloudKitSupport: boolean;
        IOSCloudKitSyncStrategy: UE.EIOSCloudKitSyncStrategy;
        bEnableRemoteNotificationsSupport: boolean;
        bEnableBackgroundFetch: boolean;
        bSupportsMetal: boolean;
        bSupportsMetalMRT: boolean;
        bCookPVRTCTextures: boolean;
        bCookASTCTextures: boolean;
        bBuildAsFramework: boolean;
        WindowsMetalToolchainOverride: UE.IOSBuildResourceDirectory;
        bGeneratedSYMFile: boolean;
        bGeneratedSYMBundle: boolean;
        bGenerateCrashReportSymbols: boolean;
        bGenerateXCArchive: boolean;
        bShipForBitcode: boolean;
        bEnableAdvertisingIdentifier: boolean;
        AdditionalLinkerFlags: string;
        AdditionalShippingLinkerFlags: string;
        RemoteServerName: string;
        bUseRSync: boolean;
        RSyncUsername: string;
        DeltaCopyInstallPath: UE.IOSBuildResourceDirectory;
        SSHPrivateKeyLocation: string;
        SSHPrivateKeyOverridePath: UE.IOSBuildResourceFilePath;
        bRunAsCurrentUser: boolean;
        bGameSupportsMultipleActiveControllers: boolean;
        bAllowRemoteRotation: boolean;
        bUseRemoteAsVirtualJoystick: boolean;
        bUseRemoteAbsoluteDpadValues: boolean;
        bAllowControllers: boolean;
        bControllersBlockDeviceFeedback: boolean;
        bDisableMotionData: boolean;
        bSupportsPortraitOrientation: boolean;
        bSupportsUpsideDownOrientation: boolean;
        bSupportsLandscapeLeftOrientation: boolean;
        bSupportsLandscapeRightOrientation: boolean;
        bSupportsITunesFileSharing: boolean;
        bSupportsFilesApp: boolean;
        PreferredLandscapeOrientation: UE.EIOSLandscapeOrientation;
        BundleDisplayName: string;
        BundleName: string;
        BundleIdentifier: string;
        VersionInfo: string;
        FrameRateLock: UE.EPowerUsageFrameRateLock;
        bEnableDynamicMaxFPS: boolean;
        MinimumiOSVersion: UE.EIOSVersion;
        bSupportsIPad: boolean;
        bSupportsIPhone: boolean;
        AdditionalPlistData: string;
        bCustomLaunchscreenStoryboard: boolean;
        bEnableFacebookSupport: boolean;
        FacebookAppID: string;
        MobileProvision: string;
        SigningCertificate: string;
        bAutomaticSigning: boolean;
        IOSTeamID: string;
        bDisableHTTPS: boolean;
        MaxShaderLanguageVersion: number;
        UseFastIntrinsics: boolean;
        ForceFloats: boolean;
        EnableMathOptimisations: boolean;
        IndirectArgumentTier: number;
        bUseIntegratedKeyboard: boolean;
        AudioSampleRate: number;
        AudioCallbackBufferFrameSize: number;
        AudioNumBuffersToEnqueue: number;
        AudioMaxChannels: number;
        AudioNumSourceWorkers: number;
        SpatializationPlugin: string;
        ReverbPlugin: string;
        OcclusionPlugin: string;
        CompressionOverrides: UE.PlatformRuntimeAudioCompressionOverrides;
        bUseAudioStreamCaching: boolean;
        CacheSizeKB: number;
        MaxChunkSizeOverrideKB: number;
        bResampleForDevice: boolean;
        SoundCueCookQualityIndex: number;
        MaxSampleRate: number;
        HighSampleRate: number;
        MedSampleRate: number;
        LowSampleRate: number;
        MinSampleRate: number;
        CompressionQualityModifier: number;
        AutoStreamingThreshold: number;
        bStreamLandscapeMeshLODs: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IOSRuntimeSettings;
        static Load(InName: string): IOSRuntimeSettings;
    
        __tid_IOSRuntimeSettings_0__: boolean;
    }
    
    class IoStoreCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IoStoreCommandlet;
        static Load(InName: string): IoStoreCommandlet;
    
        __tid_IoStoreCommandlet_0__: boolean;
    }
    
    class IpConnection extends UE.NetConnection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SocketErrorDisconnectDelay: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IpConnection;
        static Load(InName: string): IpConnection;
    
        __tid_IpConnection_0__: boolean;
    }
    
    class IpNetDriver extends UE.NetDriver {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LogPortUnreach: boolean;
        AllowPlayerPortUnreach: boolean;
        MaxPortCountToTry: number;
        ServerDesiredSocketReceiveBufferBytes: number;
        ServerDesiredSocketSendBufferBytes: number;
        ClientDesiredSocketReceiveBufferBytes: number;
        ClientDesiredSocketSendBufferBytes: number;
        MaxSecondsInReceive: number;
        NbPacketsBetweenReceiveTimeTest: number;
        ResolutionConnectionTimeout: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): IpNetDriver;
        static Load(InName: string): IpNetDriver;
    
        __tid_IpNetDriver_0__: boolean;
    }
    
    class JoinabilitySettings {
        constructor();
        constructor(SessionName: string, bPublicSearchable: boolean, bAllowInvites: boolean, bJoinViaPresence: boolean, bJoinViaPresenceFriendsOnly: boolean, MaxPlayers: number, MaxPartySize: number);
        SessionName: string;
        bPublicSearchable: boolean;
        bAllowInvites: boolean;
        bJoinViaPresence: boolean;
        bJoinViaPresenceFriendsOnly: boolean;
        MaxPlayers: number;
        MaxPartySize: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_JoinabilitySettings_0__: boolean;
    }
    
    class JoinSessionCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<() => void>;
        OnFailure: $MulticastDelegate<() => void>;
        static JoinSession(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, SearchResult: UE.BlueprintSessionResult) : UE.JoinSessionCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): JoinSessionCallbackProxy;
        static Load(InName: string): JoinSessionCallbackProxy;
    
        __tid_JoinSessionCallbackProxy_0__: boolean;
    }
    
    class JSAnimGeneratedClass extends UE.AnimBlueprintGeneratedClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): JSAnimGeneratedClass;
        static Load(InName: string): JSAnimGeneratedClass;
    
        __tid_JSAnimGeneratedClass_0__: boolean;
    }
    
    class JSBlueprintFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Concat(First: string, Second: string) : string;
        static GetName() : string;
        static Hello(To: string) : string;
        static Info(To: $Nullable<UE.Class>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): JSBlueprintFunctionLibrary;
        static Load(InName: string): JSBlueprintFunctionLibrary;
    
        __tid_JSBlueprintFunctionLibrary_0__: boolean;
    }
    
    class JSGeneratedClass extends UE.BlueprintGeneratedClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): JSGeneratedClass;
        static Load(InName: string): JSGeneratedClass;
    
        __tid_JSGeneratedClass_0__: boolean;
    }
    
    class JSGeneratedFunction extends UE.Function {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): JSGeneratedFunction;
        static Load(InName: string): JSGeneratedFunction;
    
        __tid_JSGeneratedFunction_0__: boolean;
    }
    
    class JsonObjectWrapper {
        constructor();
        constructor(JsonString: string);
        JsonString: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_JsonObjectWrapper_0__: boolean;
    }
    
    class JsonUtilitiesDummyObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): JsonUtilitiesDummyObject;
        static Load(InName: string): JsonUtilitiesDummyObject;
    
        __tid_JsonUtilitiesDummyObject_0__: boolean;
    }
    
    class WidgetBlueprintGeneratedClass extends UE.BlueprintGeneratedClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetTree: UE.WidgetTree;
        bCanCallPreConstruct: boolean;
        bClassRequiresNativeTick: boolean;
        Bindings: TArray<UE.DelegateRuntimeBinding>;
        Animations: TArray<UE.WidgetAnimation>;
        NamedSlots: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetBlueprintGeneratedClass;
        static Load(InName: string): WidgetBlueprintGeneratedClass;
    
        __tid_WidgetBlueprintGeneratedClass_0__: boolean;
    }
    
    class JSWidgetGeneratedClass extends UE.WidgetBlueprintGeneratedClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): JSWidgetGeneratedClass;
        static Load(InName: string): JSWidgetGeneratedClass;
    
        __tid_JSWidgetGeneratedClass_0__: boolean;
    }
    
    class K2Node_EditablePinBase extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsEditable: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_EditablePinBase;
        static Load(InName: string): K2Node_EditablePinBase;
    
        __tid_K2Node_EditablePinBase_0__: boolean;
    }
    
    class K2Node_Event extends UE.K2Node_EditablePinBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventSignatureName: string;
        EventSignatureClass: UE.Class;
        EventReference: UE.MemberReference;
        bOverrideFunction: boolean;
        bInternalEvent: boolean;
        CustomFunctionName: string;
        FunctionFlags: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Event;
        static Load(InName: string): K2Node_Event;
    
        __tid_K2Node_Event_0__: boolean;
    }
    
    class K2Node_ActorBoundEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DelegatePropertyName: string;
        DelegateOwnerClass: UE.Class;
        EventOwner: UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ActorBoundEvent;
        static Load(InName: string): K2Node_ActorBoundEvent;
    
        __tid_K2Node_ActorBoundEvent_0__: boolean;
    }
    
    class K2Node_CallFunction extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsPureFunc: boolean;
        bIsConstFunc: boolean;
        bWantsEnumToExecExpansion: boolean;
        bIsInterfaceCall: boolean;
        bIsFinalFunction: boolean;
        bIsBeadFunction: boolean;
        FunctionReference: UE.MemberReference;
        CallFunctionName: string;
        CallFunctionClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CallFunction;
        static Load(InName: string): K2Node_CallFunction;
    
        __tid_K2Node_CallFunction_0__: boolean;
    }
    
    class K2Node_AddComponent extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bHasExposedVariable: boolean;
        TemplateBlueprint: string;
        TemplateType: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AddComponent;
        static Load(InName: string): K2Node_AddComponent;
    
        __tid_K2Node_AddComponent_0__: boolean;
    }
    
    class K2Node_ConstructObjectFromClass extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ConstructObjectFromClass;
        static Load(InName: string): K2Node_ConstructObjectFromClass;
    
        __tid_K2Node_ConstructObjectFromClass_0__: boolean;
    }
    
    class K2Node_AddComponentByClass extends UE.K2Node_ConstructObjectFromClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AddComponentByClass;
        static Load(InName: string): K2Node_AddComponentByClass;
    
        __tid_K2Node_AddComponentByClass_0__: boolean;
    }
    
    class K2Node_BaseMCDelegate extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DelegateReference: UE.MemberReference;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_BaseMCDelegate;
        static Load(InName: string): K2Node_BaseMCDelegate;
    
        __tid_K2Node_BaseMCDelegate_0__: boolean;
    }
    
    class K2Node_AddDelegate extends UE.K2Node_BaseMCDelegate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AddDelegate;
        static Load(InName: string): K2Node_AddDelegate;
    
        __tid_K2Node_AddDelegate_0__: boolean;
    }
    
    class K2Node_AddPinInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AddPinInterface;
        static Load(InName: string): K2Node_AddPinInterface;
    
        __tid_K2Node_AddPinInterface_0__: boolean;
    }
    
    class K2Node_BaseAsyncTask extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProxyFactoryFunctionName: string;
        ProxyFactoryClass: UE.Class;
        ProxyClass: UE.Class;
        ProxyActivateFunctionName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_BaseAsyncTask;
        static Load(InName: string): K2Node_BaseAsyncTask;
    
        __tid_K2Node_BaseAsyncTask_0__: boolean;
    }
    
    class K2Node_AIMoveTo extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AIMoveTo;
        static Load(InName: string): K2Node_AIMoveTo;
    
        __tid_K2Node_AIMoveTo_0__: boolean;
    }
    
    class K2Node_AnimGetter extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceNode: UE.AnimGraphNode_Base;
        SourceStateNode: UE.AnimStateNodeBase;
        GetterClass: UE.Class;
        SourceAnimBlueprint: UE.AnimBlueprint;
        CachedTitle: string;
        Contexts: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AnimGetter;
        static Load(InName: string): K2Node_AnimGetter;
    
        __tid_K2Node_AnimGetter_0__: boolean;
    }
    
    class K2Node_AssignDelegate extends UE.K2Node_AddDelegate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AssignDelegate;
        static Load(InName: string): K2Node_AssignDelegate;
    
        __tid_K2Node_AssignDelegate_0__: boolean;
    }
    
    class K2Node_AssignmentStatement extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AssignmentStatement;
        static Load(InName: string): K2Node_AssignmentStatement;
    
        __tid_K2Node_AssignmentStatement_0__: boolean;
    }
    
    class K2Node_AsyncAction extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_AsyncAction;
        static Load(InName: string): K2Node_AsyncAction;
    
        __tid_K2Node_AsyncAction_0__: boolean;
    }
    
    class K2Node_BitmaskLiteral extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BitflagsEnum: UE.Enum;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_BitmaskLiteral;
        static Load(InName: string): K2Node_BitmaskLiteral;
    
        __tid_K2Node_BitmaskLiteral_0__: boolean;
    }
    
    class K2Node_Variable extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VariableReference: UE.MemberReference;
        SelfContextInfo: UE.ESelfContextInfo;
        VariableSourceClass: UE.Class;
        VariableName: string;
        bSelfContext: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Variable;
        static Load(InName: string): K2Node_Variable;
    
        __tid_K2Node_Variable_0__: boolean;
    }
    
    class K2Node_StructOperation extends UE.K2Node_Variable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StructType: UE.ScriptStruct;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_StructOperation;
        static Load(InName: string): K2Node_StructOperation;
    
        __tid_K2Node_StructOperation_0__: boolean;
    }
    
    class K2Node_StructMemberGet extends UE.K2Node_StructOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShowPinForProperties: TArray<UE.OptionalPinFromProperty>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_StructMemberGet;
        static Load(InName: string): K2Node_StructMemberGet;
    
        __tid_K2Node_StructMemberGet_0__: boolean;
    }
    
    class K2Node_BreakStruct extends UE.K2Node_StructMemberGet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMadeAfterOverridePinRemoval: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_BreakStruct;
        static Load(InName: string): K2Node_BreakStruct;
    
        __tid_K2Node_BreakStruct_0__: boolean;
    }
    
    class K2Node_CallArrayFunction extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CallArrayFunction;
        static Load(InName: string): K2Node_CallArrayFunction;
    
        __tid_K2Node_CallArrayFunction_0__: boolean;
    }
    
    class K2Node_CallDataTableFunction extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CallDataTableFunction;
        static Load(InName: string): K2Node_CallDataTableFunction;
    
        __tid_K2Node_CallDataTableFunction_0__: boolean;
    }
    
    class K2Node_CallDelegate extends UE.K2Node_BaseMCDelegate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CallDelegate;
        static Load(InName: string): K2Node_CallDelegate;
    
        __tid_K2Node_CallDelegate_0__: boolean;
    }
    
    class K2Node_CallFunctionOnMember extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MemberVariableToCallOn: UE.MemberReference;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CallFunctionOnMember;
        static Load(InName: string): K2Node_CallFunctionOnMember;
    
        __tid_K2Node_CallFunctionOnMember_0__: boolean;
    }
    
    class K2Node_CallMaterialParameterCollectionFunction extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CallMaterialParameterCollectionFunction;
        static Load(InName: string): K2Node_CallMaterialParameterCollectionFunction;
    
        __tid_K2Node_CallMaterialParameterCollectionFunction_0__: boolean;
    }
    
    class K2Node_CallParentFunction extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CallParentFunction;
        static Load(InName: string): K2Node_CallParentFunction;
    
        __tid_K2Node_CallParentFunction_0__: boolean;
    }
    
    class K2Node_CastByteToEnum extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Enum: UE.Enum;
        bSafe: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CastByteToEnum;
        static Load(InName: string): K2Node_CastByteToEnum;
    
        __tid_K2Node_CastByteToEnum_0__: boolean;
    }
    
    class K2Node_DynamicCast extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetType: UE.Class;
        bIsPureCast: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_DynamicCast;
        static Load(InName: string): K2Node_DynamicCast;
    
        __tid_K2Node_DynamicCast_0__: boolean;
    }
    
    class K2Node_ClassDynamicCast extends UE.K2Node_DynamicCast {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ClassDynamicCast;
        static Load(InName: string): K2Node_ClassDynamicCast;
    
        __tid_K2Node_ClassDynamicCast_0__: boolean;
    }
    
    class K2Node_ClearDelegate extends UE.K2Node_BaseMCDelegate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ClearDelegate;
        static Load(InName: string): K2Node_ClearDelegate;
    
        __tid_K2Node_ClearDelegate_0__: boolean;
    }
    
    class K2Node_CommutativeAssociativeBinaryOperator extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumAdditionalInputs: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CommutativeAssociativeBinaryOperator;
        static Load(InName: string): K2Node_CommutativeAssociativeBinaryOperator;
    
        __tid_K2Node_CommutativeAssociativeBinaryOperator_0__: boolean;
    }
    
    class K2Node_ComponentBoundEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DelegatePropertyName: string;
        DelegateOwnerClass: UE.Class;
        ComponentPropertyName: string;
        DelegatePropertyDisplayName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ComponentBoundEvent;
        static Load(InName: string): K2Node_ComponentBoundEvent;
    
        __tid_K2Node_ComponentBoundEvent_0__: boolean;
    }
    
    class KismetUserDeclaredFunctionMetadata {
        constructor();
        constructor(ToolTip: string, Category: string, Keywords: string, CompactNodeTitle: string, InstanceTitleColor: UE.LinearColor, DeprecationMessage: string, bIsDeprecated: boolean, bCallInEditor: boolean, HasLatentFunctions: number);
        ToolTip: string;
        Category: string;
        Keywords: string;
        CompactNodeTitle: string;
        InstanceTitleColor: UE.LinearColor;
        DeprecationMessage: string;
        bIsDeprecated: boolean;
        bCallInEditor: boolean;
        HasLatentFunctions: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_KismetUserDeclaredFunctionMetadata_0__: boolean;
    }
    
    class K2Node_Tunnel extends UE.K2Node_EditablePinBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OutputSourceNode: UE.K2Node_Tunnel;
        InputSinkNode: UE.K2Node_Tunnel;
        bCanHaveInputs: boolean;
        bCanHaveOutputs: boolean;
        MetaData: UE.KismetUserDeclaredFunctionMetadata;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Tunnel;
        static Load(InName: string): K2Node_Tunnel;
    
        __tid_K2Node_Tunnel_0__: boolean;
    }
    
    class K2Node_Composite extends UE.K2Node_Tunnel {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundGraph: UE.EdGraph;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Composite;
        static Load(InName: string): K2Node_Composite;
    
        __tid_K2Node_Composite_0__: boolean;
    }
    
    class K2Node_ConvertAsset extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ConvertAsset;
        static Load(InName: string): K2Node_ConvertAsset;
    
        __tid_K2Node_ConvertAsset_0__: boolean;
    }
    
    class K2Node_ConvertToHEIF extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ConvertToHEIF;
        static Load(InName: string): K2Node_ConvertToHEIF;
    
        __tid_K2Node_ConvertToHEIF_0__: boolean;
    }
    
    class K2Node_ConvertToJPEG extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ConvertToJPEG;
        static Load(InName: string): K2Node_ConvertToJPEG;
    
        __tid_K2Node_ConvertToJPEG_0__: boolean;
    }
    
    class K2Node_ConvertToPNG extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ConvertToPNG;
        static Load(InName: string): K2Node_ConvertToPNG;
    
        __tid_K2Node_ConvertToPNG_0__: boolean;
    }
    
    class K2Node_ConvertToTIFF extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ConvertToTIFF;
        static Load(InName: string): K2Node_ConvertToTIFF;
    
        __tid_K2Node_ConvertToTIFF_0__: boolean;
    }
    
    class K2Node_Copy extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Copy;
        static Load(InName: string): K2Node_Copy;
    
        __tid_K2Node_Copy_0__: boolean;
    }
    
    class K2Node_CreateDelegate extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectedFunctionName: string;
        SelectedFunctionGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CreateDelegate;
        static Load(InName: string): K2Node_CreateDelegate;
    
        __tid_K2Node_CreateDelegate_0__: boolean;
    }
    
    class K2Node_CreateDragDropOperation extends UE.K2Node_ConstructObjectFromClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CreateDragDropOperation;
        static Load(InName: string): K2Node_CreateDragDropOperation;
    
        __tid_K2Node_CreateDragDropOperation_0__: boolean;
    }
    
    class K2Node_CreateWidget extends UE.K2Node_ConstructObjectFromClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CreateWidget;
        static Load(InName: string): K2Node_CreateWidget;
    
        __tid_K2Node_CreateWidget_0__: boolean;
    }
    
    class K2Node_CustomEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DeprecationMessage: string;
        bIsDeprecated: boolean;
        bCallInEditor: boolean;
        MetaData: UE.KismetUserDeclaredFunctionMetadata;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_CustomEvent;
        static Load(InName: string): K2Node_CustomEvent;
    
        __tid_K2Node_CustomEvent_0__: boolean;
    }
    
    class K2Node_DeadClass extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_DeadClass;
        static Load(InName: string): K2Node_DeadClass;
    
        __tid_K2Node_DeadClass_0__: boolean;
    }
    
    class K2Node_DelegateSet extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DelegatePropertyName: string;
        DelegatePropertyClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_DelegateSet;
        static Load(InName: string): K2Node_DelegateSet;
    
        __tid_K2Node_DelegateSet_0__: boolean;
    }
    
    class K2Node_TemporaryVariable extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VariableType: UE.EdGraphPinType;
        bIsPersistent: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_TemporaryVariable;
        static Load(InName: string): K2Node_TemporaryVariable;
    
        __tid_K2Node_TemporaryVariable_0__: boolean;
    }
    
    class K2Node_DoOnceMultiInput extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumAdditionalInputs: number;
        DataNode: UE.K2Node_TemporaryVariable;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_DoOnceMultiInput;
        static Load(InName: string): K2Node_DoOnceMultiInput;
    
        __tid_K2Node_DoOnceMultiInput_0__: boolean;
    }
    
    class K2Node_EaseFunction extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EaseFunctionName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_EaseFunction;
        static Load(InName: string): K2Node_EaseFunction;
    
        __tid_K2Node_EaseFunction_0__: boolean;
    }
    
    class K2Node_EditorPropertyAccessBase extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_EditorPropertyAccessBase;
        static Load(InName: string): K2Node_EditorPropertyAccessBase;
    
        __tid_K2Node_EditorPropertyAccessBase_0__: boolean;
    }
    
    class K2Node_EnumEquality extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_EnumEquality;
        static Load(InName: string): K2Node_EnumEquality;
    
        __tid_K2Node_EnumEquality_0__: boolean;
    }
    
    class K2Node_EnumInequality extends UE.K2Node_EnumEquality {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_EnumInequality;
        static Load(InName: string): K2Node_EnumInequality;
    
        __tid_K2Node_EnumInequality_0__: boolean;
    }
    
    class K2Node_EnumLiteral extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Enum: UE.Enum;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_EnumLiteral;
        static Load(InName: string): K2Node_EnumLiteral;
    
        __tid_K2Node_EnumLiteral_0__: boolean;
    }
    
    class K2Node_EventNodeInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_EventNodeInterface;
        static Load(InName: string): K2Node_EventNodeInterface;
    
        __tid_K2Node_EventNodeInterface_0__: boolean;
    }
    
    class K2Node_ExecutionSequence extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ExecutionSequence;
        static Load(InName: string): K2Node_ExecutionSequence;
    
        __tid_K2Node_ExecutionSequence_0__: boolean;
    }
    
    class K2Node_ForEachElementInEnum extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Enum: UE.Enum;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_ForEachElementInEnum;
        static Load(InName: string): K2Node_ForEachElementInEnum;
    
        __tid_K2Node_ForEachElementInEnum_0__: boolean;
    }
    
    class K2Node_FormatText extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_FormatText;
        static Load(InName: string): K2Node_FormatText;
    
        __tid_K2Node_FormatText_0__: boolean;
    }
    
    class K2Node_FunctionTerminator extends UE.K2Node_EditablePinBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FunctionReference: UE.MemberReference;
        SignatureClass: UE.Class;
        SignatureName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_FunctionTerminator;
        static Load(InName: string): K2Node_FunctionTerminator;
    
        __tid_K2Node_FunctionTerminator_0__: boolean;
    }
    
    class K2Node_FunctionEntry extends UE.K2Node_FunctionTerminator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CustomGeneratedFunctionName: string;
        MetaData: UE.KismetUserDeclaredFunctionMetadata;
        LocalVariables: TArray<UE.BPVariableDescription>;
        bEnforceConstCorrectness: boolean;
        ExtraFlags: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_FunctionEntry;
        static Load(InName: string): K2Node_FunctionEntry;
    
        __tid_K2Node_FunctionEntry_0__: boolean;
    }
    
    class K2Node_FunctionResult extends UE.K2Node_FunctionTerminator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_FunctionResult;
        static Load(InName: string): K2Node_FunctionResult;
    
        __tid_K2Node_FunctionResult_0__: boolean;
    }
    
    class K2Node_GenericCreateObject extends UE.K2Node_ConstructObjectFromClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GenericCreateObject;
        static Load(InName: string): K2Node_GenericCreateObject;
    
        __tid_K2Node_GenericCreateObject_0__: boolean;
    }
    
    class K2Node_GetArrayItem extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bReturnByRefDesired: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetArrayItem;
        static Load(InName: string): K2Node_GetArrayItem;
    
        __tid_K2Node_GetArrayItem_0__: boolean;
    }
    
    class K2Node_GetClassDefaults extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlueprintSubscribedTo: UE.Blueprint;
        ShowPinForProperties: TArray<UE.OptionalPinFromProperty>;
        bExcludeObjectContainers: boolean;
        bExcludeObjectArrays: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetClassDefaults;
        static Load(InName: string): K2Node_GetClassDefaults;
    
        __tid_K2Node_GetClassDefaults_0__: boolean;
    }
    
    class K2Node_GetDataTableRow extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetDataTableRow;
        static Load(InName: string): K2Node_GetDataTableRow;
    
        __tid_K2Node_GetDataTableRow_0__: boolean;
    }
    
    class K2Node_GetEditorProperty extends UE.K2Node_EditorPropertyAccessBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetEditorProperty;
        static Load(InName: string): K2Node_GetEditorProperty;
    
        __tid_K2Node_GetEditorProperty_0__: boolean;
    }
    
    class K2Node_GetSubsystem extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CustomClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetSubsystem;
        static Load(InName: string): K2Node_GetSubsystem;
    
        __tid_K2Node_GetSubsystem_0__: boolean;
    }
    
    class K2Node_GetEditorSubsystem extends UE.K2Node_GetSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetEditorSubsystem;
        static Load(InName: string): K2Node_GetEditorSubsystem;
    
        __tid_K2Node_GetEditorSubsystem_0__: boolean;
    }
    
    class K2Node_GetEngineSubsystem extends UE.K2Node_GetSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetEngineSubsystem;
        static Load(InName: string): K2Node_GetEngineSubsystem;
    
        __tid_K2Node_GetEngineSubsystem_0__: boolean;
    }
    
    class K2Node_GetEnumeratorName extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetEnumeratorName;
        static Load(InName: string): K2Node_GetEnumeratorName;
    
        __tid_K2Node_GetEnumeratorName_0__: boolean;
    }
    
    class K2Node_GetEnumeratorNameAsString extends UE.K2Node_GetEnumeratorName {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetEnumeratorNameAsString;
        static Load(InName: string): K2Node_GetEnumeratorNameAsString;
    
        __tid_K2Node_GetEnumeratorNameAsString_0__: boolean;
    }
    
    class K2Node_GetInputAxisKeyValue extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputAxisKey: UE.Key;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetInputAxisKeyValue;
        static Load(InName: string): K2Node_GetInputAxisKeyValue;
    
        __tid_K2Node_GetInputAxisKeyValue_0__: boolean;
    }
    
    class K2Node_GetInputAxisValue extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputAxisName: string;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetInputAxisValue;
        static Load(InName: string): K2Node_GetInputAxisValue;
    
        __tid_K2Node_GetInputAxisValue_0__: boolean;
    }
    
    class K2Node_GetInputVectorAxisValue extends UE.K2Node_GetInputAxisKeyValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetInputVectorAxisValue;
        static Load(InName: string): K2Node_GetInputVectorAxisValue;
    
        __tid_K2Node_GetInputVectorAxisValue_0__: boolean;
    }
    
    class K2Node_GetNumEnumEntries extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Enum: UE.Enum;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetNumEnumEntries;
        static Load(InName: string): K2Node_GetNumEnumEntries;
    
        __tid_K2Node_GetNumEnumEntries_0__: boolean;
    }
    
    class K2Node_GetSequenceBinding extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceSequence: UE.SoftObjectPath;
        Binding: UE.MovieSceneObjectBindingID;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetSequenceBinding;
        static Load(InName: string): K2Node_GetSequenceBinding;
    
        __tid_K2Node_GetSequenceBinding_0__: boolean;
    }
    
    class K2Node_GetSubsystemFromPC extends UE.K2Node_GetSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_GetSubsystemFromPC;
        static Load(InName: string): K2Node_GetSubsystemFromPC;
    
        __tid_K2Node_GetSubsystemFromPC_0__: boolean;
    }
    
    class K2Node_IfThenElse extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_IfThenElse;
        static Load(InName: string): K2Node_IfThenElse;
    
        __tid_K2Node_IfThenElse_0__: boolean;
    }
    
    class K2Node_InAppPurchase extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchase;
        static Load(InName: string): K2Node_InAppPurchase;
    
        __tid_K2Node_InAppPurchase_0__: boolean;
    }
    
    class K2Node_InAppPurchase2 extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchase2;
        static Load(InName: string): K2Node_InAppPurchase2;
    
        __tid_K2Node_InAppPurchase2_0__: boolean;
    }
    
    class K2Node_InAppPurchaseQuery extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchaseQuery;
        static Load(InName: string): K2Node_InAppPurchaseQuery;
    
        __tid_K2Node_InAppPurchaseQuery_0__: boolean;
    }
    
    class K2Node_InAppPurchaseQuery2 extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchaseQuery2;
        static Load(InName: string): K2Node_InAppPurchaseQuery2;
    
        __tid_K2Node_InAppPurchaseQuery2_0__: boolean;
    }
    
    class K2Node_InAppPurchaseQueryOwned2 extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchaseQueryOwned2;
        static Load(InName: string): K2Node_InAppPurchaseQueryOwned2;
    
        __tid_K2Node_InAppPurchaseQueryOwned2_0__: boolean;
    }
    
    class K2Node_InAppPurchaseRestore extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchaseRestore;
        static Load(InName: string): K2Node_InAppPurchaseRestore;
    
        __tid_K2Node_InAppPurchaseRestore_0__: boolean;
    }
    
    class K2Node_InAppPurchaseRestore2 extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchaseRestore2;
        static Load(InName: string): K2Node_InAppPurchaseRestore2;
    
        __tid_K2Node_InAppPurchaseRestore2_0__: boolean;
    }
    
    class K2Node_InAppPurchaseUnprocessed2 extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InAppPurchaseUnprocessed2;
        static Load(InName: string): K2Node_InAppPurchaseUnprocessed2;
    
        __tid_K2Node_InAppPurchaseUnprocessed2_0__: boolean;
    }
    
    class K2Node_InputAction extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputActionName: string;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputAction;
        static Load(InName: string): K2Node_InputAction;
    
        __tid_K2Node_InputAction_0__: boolean;
    }
    
    class K2Node_InputActionEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputActionName: string;
        InputKeyEvent: UE.EInputEvent;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputActionEvent;
        static Load(InName: string): K2Node_InputActionEvent;
    
        __tid_K2Node_InputActionEvent_0__: boolean;
    }
    
    class K2Node_InputAxisEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputAxisName: string;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputAxisEvent;
        static Load(InName: string): K2Node_InputAxisEvent;
    
        __tid_K2Node_InputAxisEvent_0__: boolean;
    }
    
    class K2Node_InputAxisKeyEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisKey: UE.Key;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputAxisKeyEvent;
        static Load(InName: string): K2Node_InputAxisKeyEvent;
    
        __tid_K2Node_InputAxisKeyEvent_0__: boolean;
    }
    
    class K2Node_InputKey extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputKey: UE.Key;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        bControl: boolean;
        bAlt: boolean;
        bShift: boolean;
        bCommand: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputKey;
        static Load(InName: string): K2Node_InputKey;
    
        __tid_K2Node_InputKey_0__: boolean;
    }
    
    class K2Node_InputKeyEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputChord: UE.InputChord;
        InputKeyEvent: UE.EInputEvent;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputKeyEvent;
        static Load(InName: string): K2Node_InputKeyEvent;
    
        __tid_K2Node_InputKeyEvent_0__: boolean;
    }
    
    class K2Node_InputTouch extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputTouch;
        static Load(InName: string): K2Node_InputTouch;
    
        __tid_K2Node_InputTouch_0__: boolean;
    }
    
    class K2Node_InputTouchEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputKeyEvent: UE.EInputEvent;
        bConsumeInput: boolean;
        bExecuteWhenPaused: boolean;
        bOverrideParentBinding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputTouchEvent;
        static Load(InName: string): K2Node_InputTouchEvent;
    
        __tid_K2Node_InputTouchEvent_0__: boolean;
    }
    
    class K2Node_InputVectorAxisEvent extends UE.K2Node_InputAxisKeyEvent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_InputVectorAxisEvent;
        static Load(InName: string): K2Node_InputVectorAxisEvent;
    
        __tid_K2Node_InputVectorAxisEvent_0__: boolean;
    }
    
    class K2Node_Knot extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Knot;
        static Load(InName: string): K2Node_Knot;
    
        __tid_K2Node_Knot_0__: boolean;
    }
    
    class K2Node_LatentGameplayTaskCall extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpawnParamPins: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_LatentGameplayTaskCall;
        static Load(InName: string): K2Node_LatentGameplayTaskCall;
    
        __tid_K2Node_LatentGameplayTaskCall_0__: boolean;
    }
    
    class K2Node_LeaderboardFlush extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_LeaderboardFlush;
        static Load(InName: string): K2Node_LeaderboardFlush;
    
        __tid_K2Node_LeaderboardFlush_0__: boolean;
    }
    
    class K2Node_LeaderboardQuery extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_LeaderboardQuery;
        static Load(InName: string): K2Node_LeaderboardQuery;
    
        __tid_K2Node_LeaderboardQuery_0__: boolean;
    }
    
    class K2Node_Literal extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ObjectRef: UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Literal;
        static Load(InName: string): K2Node_Literal;
    
        __tid_K2Node_Literal_0__: boolean;
    }
    
    class K2Node_LoadAsset extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_LoadAsset;
        static Load(InName: string): K2Node_LoadAsset;
    
        __tid_K2Node_LoadAsset_0__: boolean;
    }
    
    class K2Node_LoadAssetClass extends UE.K2Node_LoadAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_LoadAssetClass;
        static Load(InName: string): K2Node_LoadAssetClass;
    
        __tid_K2Node_LoadAssetClass_0__: boolean;
    }
    
    class K2Node_LocalVariable extends UE.K2Node_TemporaryVariable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CustomVariableName: string;
        VariableTooltip: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_LocalVariable;
        static Load(InName: string): K2Node_LocalVariable;
    
        __tid_K2Node_LocalVariable_0__: boolean;
    }
    
    class K2Node_MacroInstance extends UE.K2Node_Tunnel {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MacroGraph: UE.EdGraph;
        MacroGraphReference: UE.GraphReference;
        ResolvedWildcardType: UE.EdGraphPinType;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MacroInstance;
        static Load(InName: string): K2Node_MacroInstance;
    
        __tid_K2Node_MacroInstance_0__: boolean;
    }
    
    class K2Node_MakeContainer extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumInputs: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MakeContainer;
        static Load(InName: string): K2Node_MakeContainer;
    
        __tid_K2Node_MakeContainer_0__: boolean;
    }
    
    class K2Node_MakeArray extends UE.K2Node_MakeContainer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MakeArray;
        static Load(InName: string): K2Node_MakeArray;
    
        __tid_K2Node_MakeArray_0__: boolean;
    }
    
    class K2Node_MakeMap extends UE.K2Node_MakeContainer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MakeMap;
        static Load(InName: string): K2Node_MakeMap;
    
        __tid_K2Node_MakeMap_0__: boolean;
    }
    
    class K2Node_MakeSet extends UE.K2Node_MakeContainer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MakeSet;
        static Load(InName: string): K2Node_MakeSet;
    
        __tid_K2Node_MakeSet_0__: boolean;
    }
    
    class K2Node_StructMemberSet extends UE.K2Node_StructOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShowPinForProperties: TArray<UE.OptionalPinFromProperty>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_StructMemberSet;
        static Load(InName: string): K2Node_StructMemberSet;
    
        __tid_K2Node_StructMemberSet_0__: boolean;
    }
    
    class K2Node_MakeStruct extends UE.K2Node_StructMemberSet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMadeAfterOverridePinRemoval: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MakeStruct;
        static Load(InName: string): K2Node_MakeStruct;
    
        __tid_K2Node_MakeStruct_0__: boolean;
    }
    
    class K2Node_MakeVariable extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VariableType: UE.BPVariableDescription;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MakeVariable;
        static Load(InName: string): K2Node_MakeVariable;
    
        __tid_K2Node_MakeVariable_0__: boolean;
    }
    
    class K2Node_MathExpression extends UE.K2Node_Composite {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Expression: string;
        bMadeAfterRotChange: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MathExpression;
        static Load(InName: string): K2Node_MathExpression;
    
        __tid_K2Node_MathExpression_0__: boolean;
    }
    
    class K2Node_MatineeController extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MatineeActor: UE.MatineeActor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MatineeController;
        static Load(InName: string): K2Node_MatineeController;
    
        __tid_K2Node_MatineeController_0__: boolean;
    }
    
    class K2Node_Message extends UE.K2Node_CallFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Message;
        static Load(InName: string): K2Node_Message;
    
        __tid_K2Node_Message_0__: boolean;
    }
    
    class K2Node_MultiGate extends UE.K2Node_ExecutionSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DataNode: UE.K2Node_TemporaryVariable;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_MultiGate;
        static Load(InName: string): K2Node_MultiGate;
    
        __tid_K2Node_MultiGate_0__: boolean;
    }
    
    class K2Node_PlayAnimation extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_PlayAnimation;
        static Load(InName: string): K2Node_PlayAnimation;
    
        __tid_K2Node_PlayAnimation_0__: boolean;
    }
    
    class K2Node_PlayAnimationTimeRange extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_PlayAnimationTimeRange;
        static Load(InName: string): K2Node_PlayAnimationTimeRange;
    
        __tid_K2Node_PlayAnimationTimeRange_0__: boolean;
    }
    
    class K2Node_PlayMontage extends UE.K2Node_BaseAsyncTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_PlayMontage;
        static Load(InName: string): K2Node_PlayMontage;
    
        __tid_K2Node_PlayMontage_0__: boolean;
    }
    
    class K2Node_PropertyAccess extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Path: TArray<string>;
        TextPath: string;
        ResolvedPinType: UE.EdGraphPinType;
        GeneratedPropertyName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_PropertyAccess;
        static Load(InName: string): K2Node_PropertyAccess;
    
        __tid_K2Node_PropertyAccess_0__: boolean;
    }
    
    class K2Node_PureAssignmentStatement extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_PureAssignmentStatement;
        static Load(InName: string): K2Node_PureAssignmentStatement;
    
        __tid_K2Node_PureAssignmentStatement_0__: boolean;
    }
    
    class K2Node_RemoveDelegate extends UE.K2Node_BaseMCDelegate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_RemoveDelegate;
        static Load(InName: string): K2Node_RemoveDelegate;
    
        __tid_K2Node_RemoveDelegate_0__: boolean;
    }
    
    class K2Node_Select extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumOptionPins: number;
        IndexPinType: UE.EdGraphPinType;
        Enum: UE.Enum;
        EnumEntries: TArray<string>;
        EnumEntryFriendlyNames: TArray<string>;
        bReconstructNode: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Select;
        static Load(InName: string): K2Node_Select;
    
        __tid_K2Node_Select_0__: boolean;
    }
    
    class K2Node_Self extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Self;
        static Load(InName: string): K2Node_Self;
    
        __tid_K2Node_Self_0__: boolean;
    }
    
    class K2Node_SetEditorProperty extends UE.K2Node_EditorPropertyAccessBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SetEditorProperty;
        static Load(InName: string): K2Node_SetEditorProperty;
    
        __tid_K2Node_SetEditorProperty_0__: boolean;
    }
    
    class K2Node_SetFieldsInStruct extends UE.K2Node_MakeStruct {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SetFieldsInStruct;
        static Load(InName: string): K2Node_SetFieldsInStruct;
    
        __tid_K2Node_SetFieldsInStruct_0__: boolean;
    }
    
    class K2Node_SetVariableOnPersistentFrame extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SetVariableOnPersistentFrame;
        static Load(InName: string): K2Node_SetVariableOnPersistentFrame;
    
        __tid_K2Node_SetVariableOnPersistentFrame_0__: boolean;
    }
    
    class K2Node_SpawnActor extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SpawnActor;
        static Load(InName: string): K2Node_SpawnActor;
    
        __tid_K2Node_SpawnActor_0__: boolean;
    }
    
    class K2Node_SpawnActorFromClass extends UE.K2Node_ConstructObjectFromClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SpawnActorFromClass;
        static Load(InName: string): K2Node_SpawnActorFromClass;
    
        __tid_K2Node_SpawnActorFromClass_0__: boolean;
    }
    
    class K2Node_SwitchEnum extends UE.K2Node_Switch {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Enum: UE.Enum;
        EnumEntries: TArray<string>;
        EnumFriendlyNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SwitchEnum;
        static Load(InName: string): K2Node_SwitchEnum;
    
        __tid_K2Node_SwitchEnum_0__: boolean;
    }
    
    class K2Node_SwitchInteger extends UE.K2Node_Switch {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SwitchInteger;
        static Load(InName: string): K2Node_SwitchInteger;
    
        __tid_K2Node_SwitchInteger_0__: boolean;
    }
    
    class K2Node_SwitchName extends UE.K2Node_Switch {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinNames: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SwitchName;
        static Load(InName: string): K2Node_SwitchName;
    
        __tid_K2Node_SwitchName_0__: boolean;
    }
    
    class K2Node_SwitchString extends UE.K2Node_Switch {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinNames: TArray<string>;
        bIsCaseSensitive: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_SwitchString;
        static Load(InName: string): K2Node_SwitchString;
    
        __tid_K2Node_SwitchString_0__: boolean;
    }
    
    class K2Node_Timeline extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TimelineName: string;
        bAutoPlay: boolean;
        TimelineGuid: UE.Guid;
        bLoop: boolean;
        bReplicated: boolean;
        bIgnoreTimeDilation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_Timeline;
        static Load(InName: string): K2Node_Timeline;
    
        __tid_K2Node_Timeline_0__: boolean;
    }
    
    class K2Node_TransitionRuleGetter extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetterType: UE.ETransitionGetter;
        AssociatedAnimAssetPlayerNode: UE.AnimGraphNode_Base;
        AssociatedStateNode: UE.AnimStateNode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_TransitionRuleGetter;
        static Load(InName: string): K2Node_TransitionRuleGetter;
    
        __tid_K2Node_TransitionRuleGetter_0__: boolean;
    }
    
    class K2Node_TunnelBoundary extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseName: string;
        TunnelBoundaryType: UE.ETunnelBoundaryType;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_TunnelBoundary;
        static Load(InName: string): K2Node_TunnelBoundary;
    
        __tid_K2Node_TunnelBoundary_0__: boolean;
    }
    
    class K2Node_VariableGet extends UE.K2Node_Variable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsPureGet: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_VariableGet;
        static Load(InName: string): K2Node_VariableGet;
    
        __tid_K2Node_VariableGet_0__: boolean;
    }
    
    class K2Node_VariableSet extends UE.K2Node_Variable {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_VariableSet;
        static Load(InName: string): K2Node_VariableSet;
    
        __tid_K2Node_VariableSet_0__: boolean;
    }
    
    class K2Node_VariableSetRef extends UE.K2Node {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_VariableSetRef;
        static Load(InName: string): K2Node_VariableSetRef;
    
        __tid_K2Node_VariableSetRef_0__: boolean;
    }
    
    class K2Node_WidgetAnimationEvent extends UE.K2Node_Event {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Action: UE.EWidgetAnimationEvent;
        AnimationPropertyName: string;
        UserTag: string;
        SourceWidgetBlueprint: UE.WidgetBlueprint;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): K2Node_WidgetAnimationEvent;
        static Load(InName: string): K2Node_WidgetAnimationEvent;
    
        __tid_K2Node_WidgetAnimationEvent_0__: boolean;
    }
    
    class KeyAsModifierInputBehavior extends UE.InputBehavior {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KeyAsModifierInputBehavior;
        static Load(InName: string): KeyAsModifierInputBehavior;
    
        __tid_KeyAsModifierInputBehavior_0__: boolean;
    }
    
    class KillZVolume extends UE.PhysicsVolume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KillZVolume;
        static Load(InName: string): KillZVolume;
    
        __tid_KillZVolume_0__: boolean;
    }
    
    class PositionHistory {
        constructor();
        constructor(Positions: TArray<UE.Vector>, Range: number);
        Positions: TArray<UE.Vector>;
        Range: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PositionHistory_0__: boolean;
    }
    
    class KismetAnimationLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static K2_CalculateVelocityFromPositionHistory(DeltaSeconds: number, Position: UE.Vector, History: $Ref<UE.PositionHistory>, NumberOfSamples: number, VelocityMin: number, VelocityMax: number) : number;
        static K2_CalculateVelocityFromSockets(DeltaSeconds: number, Component: $Nullable<UE.SkeletalMeshComponent>, SocketOrBoneName: string, ReferenceSocketOrBone: string, SocketSpace: UE.ERelativeTransformSpace, OffsetInBoneSpace: UE.Vector, History: $Ref<UE.PositionHistory>, NumberOfSamples: number, VelocityMin: number, VelocityMax: number, EasingType: UE.EEasingFuncType, CustomCurve: UE.RuntimeFloatCurve) : number;
        static K2_DirectionBetweenSockets(Component: $Nullable<UE.SkeletalMeshComponent>, SocketOrBoneNameFrom: string, SocketOrBoneNameTo: string) : UE.Vector;
        static K2_DistanceBetweenTwoSocketsAndMapRange(Component: $Nullable<UE.SkeletalMeshComponent>, SocketOrBoneNameA: string, SocketSpaceA: UE.ERelativeTransformSpace, SocketOrBoneNameB: string, SocketSpaceB: UE.ERelativeTransformSpace, bRemapRange: boolean, InRangeMin: number, InRangeMax: number, OutRangeMin: number, OutRangeMax: number) : number;
        static K2_EndProfilingTimer(bLog?: boolean /* = true */, LogPrefix?: string /* = "" */) : number;
        static K2_LookAt(CurrentTransform: UE.Transform, TargetPosition: UE.Vector, LookAtVector: UE.Vector, bUseUpVector: boolean, UpVector: UE.Vector, ClampConeInDegree: number) : UE.Transform;
        static K2_MakePerlinNoiseAndRemap(Value: number, RangeOutMin: number, RangeOutMax: number) : number;
        static K2_MakePerlinNoiseVectorAndRemap(X: number, Y: number, Z: number, RangeOutMinX: number, RangeOutMaxX: number, RangeOutMinY: number, RangeOutMaxY: number, RangeOutMinZ: number, RangeOutMaxZ: number) : UE.Vector;
        static K2_StartProfilingTimer() : void;
        static K2_TwoBoneIK(RootPos: UE.Vector, JointPos: UE.Vector, EndPos: UE.Vector, JointTarget: UE.Vector, Effector: UE.Vector, OutJointPos: $Ref<UE.Vector>, OutEndPos: $Ref<UE.Vector>, bAllowStretching: boolean, StartStretchRatio: number, MaxStretchScale: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetAnimationLibrary;
        static Load(InName: string): KismetAnimationLibrary;
    
        __tid_KismetAnimationLibrary_0__: boolean;
    }
    
    class KismetArrayLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Array_Add(TargetArray: TArray<number>, NewItem: number) : number;
        static Array_AddUnique(TargetArray: TArray<number>, NewItem: number) : number;
        static Array_Append(TargetArray: TArray<number>, SourceArray: TArray<number>) : void;
        static Array_Clear(TargetArray: TArray<number>) : void;
        static Array_Contains(TargetArray: TArray<number>, ItemToFind: number) : boolean;
        static Array_Find(TargetArray: TArray<number>, ItemToFind: number) : number;
        static Array_Get(TargetArray: TArray<number>, Index: number, Item: $Ref<number>) : void;
        static Array_Identical(ArrayA: TArray<number>, ArrayB: TArray<number>) : boolean;
        static Array_Insert(TargetArray: TArray<number>, NewItem: number, Index: number) : void;
        static Array_IsValidIndex(TargetArray: TArray<number>, IndexToTest: number) : boolean;
        static Array_LastIndex(TargetArray: TArray<number>) : number;
        static Array_Length(TargetArray: TArray<number>) : number;
        static Array_Random(TargetArray: TArray<number>, OutItem: $Ref<number>, OutIndex: $Ref<number>) : void;
        static Array_RandomFromStream(TargetArray: TArray<number>, RandomStream: $Ref<UE.RandomStream>, OutItem: $Ref<number>, OutIndex: $Ref<number>) : void;
        static Array_Remove(TargetArray: TArray<number>, IndexToRemove: number) : void;
        static Array_RemoveItem(TargetArray: TArray<number>, Item: number) : boolean;
        static Array_Resize(TargetArray: TArray<number>, Size: number) : void;
        static Array_Reverse(TargetArray: TArray<number>) : void;
        static Array_Set(TargetArray: TArray<number>, Index: number, Item: number, bSizeToFit: boolean) : void;
        static Array_Shuffle(TargetArray: TArray<number>) : void;
        static Array_Swap(TargetArray: TArray<number>, FirstIndex: number, SecondIndex: number) : void;
        static FilterArray(TargetArray: TArray<UE.Actor>, FilterClass: $Nullable<UE.Class>, FilteredArray: $Ref<TArray<UE.Actor>>) : void;
        static SetArrayPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: TArray<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetArrayLibrary;
        static Load(InName: string): KismetArrayLibrary;
    
        __tid_KismetArrayLibrary_0__: boolean;
    }
    
    class KismetGuidLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Conv_GuidToString(InGuid: UE.Guid) : string;
        static EqualEqual_GuidGuid(A: UE.Guid, B: UE.Guid) : boolean;
        static Invalidate_Guid(InGuid: $Ref<UE.Guid>) : void;
        static IsValid_Guid(InGuid: UE.Guid) : boolean;
        static NewGuid() : UE.Guid;
        static NotEqual_GuidGuid(A: UE.Guid, B: UE.Guid) : boolean;
        static Parse_StringToGuid(GuidString: string, OutGuid: $Ref<UE.Guid>, Success: $Ref<boolean>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetGuidLibrary;
        static Load(InName: string): KismetGuidLibrary;
    
        __tid_KismetGuidLibrary_0__: boolean;
    }
    
    class KismetInputLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CalibrateTilt() : void;
        static EqualEqual_InputChordInputChord(A: UE.InputChord, B: UE.InputChord) : boolean;
        static EqualEqual_KeyKey(A: UE.Key, B: UE.Key) : boolean;
        static GetAnalogValue(Input: UE.AnalogInputEvent) : number;
        static GetKey(Input: UE.KeyEvent) : UE.Key;
        static GetUserIndex(Input: UE.KeyEvent) : number;
        static InputChord_GetDisplayName(Key: UE.InputChord) : string;
        static InputEvent_IsAltDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsCommandDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsControlDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsLeftAltDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsLeftCommandDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsLeftControlDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsLeftShiftDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsRepeat(Input: UE.InputEvent) : boolean;
        static InputEvent_IsRightAltDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsRightCommandDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsRightControlDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsRightShiftDown(Input: UE.InputEvent) : boolean;
        static InputEvent_IsShiftDown(Input: UE.InputEvent) : boolean;
        static Key_GetDisplayName(Key: UE.Key) : string;
        static Key_GetNavigationAction(InKey: UE.Key) : UE.EUINavigationAction;
        static Key_GetNavigationActionFromKey(InKeyEvent: UE.KeyEvent) : UE.EUINavigationAction;
        static Key_GetNavigationDirectionFromAnalog(InAnalogEvent: UE.AnalogInputEvent) : UE.EUINavigation;
        static Key_GetNavigationDirectionFromKey(InKeyEvent: UE.KeyEvent) : UE.EUINavigation;
        static Key_IsAnalog(Key: UE.Key) : boolean;
        static Key_IsAxis1D(Key: UE.Key) : boolean;
        static Key_IsAxis2D(Key: UE.Key) : boolean;
        static Key_IsAxis3D(Key: UE.Key) : boolean;
        static Key_IsButtonAxis(Key: UE.Key) : boolean;
        static Key_IsDigital(Key: UE.Key) : boolean;
        static Key_IsGamepadKey(Key: UE.Key) : boolean;
        static Key_IsKeyboardKey(Key: UE.Key) : boolean;
        static Key_IsModifierKey(Key: UE.Key) : boolean;
        static Key_IsMouseButton(Key: UE.Key) : boolean;
        static Key_IsValid(Key: UE.Key) : boolean;
        static Key_IsVectorAxis(Key: UE.Key) : boolean;
        static PointerEvent_GetCursorDelta(Input: UE.PointerEvent) : UE.Vector2D;
        static PointerEvent_GetEffectingButton(Input: UE.PointerEvent) : UE.Key;
        static PointerEvent_GetGestureDelta(Input: UE.PointerEvent) : UE.Vector2D;
        static PointerEvent_GetGestureType(Input: UE.PointerEvent) : UE.ESlateGesture;
        static PointerEvent_GetLastScreenSpacePosition(Input: UE.PointerEvent) : UE.Vector2D;
        static PointerEvent_GetPointerIndex(Input: UE.PointerEvent) : number;
        static PointerEvent_GetScreenSpacePosition(Input: UE.PointerEvent) : UE.Vector2D;
        static PointerEvent_GetTouchpadIndex(Input: UE.PointerEvent) : number;
        static PointerEvent_GetUserIndex(Input: UE.PointerEvent) : number;
        static PointerEvent_GetWheelDelta(Input: UE.PointerEvent) : number;
        static PointerEvent_IsMouseButtonDown(Input: UE.PointerEvent, MouseButton: UE.Key) : boolean;
        static PointerEvent_IsTouchEvent(Input: UE.PointerEvent) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetInputLibrary;
        static Load(InName: string): KismetInputLibrary;
    
        __tid_KismetInputLibrary_0__: boolean;
    }
    
    class KismetInternationalizationLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ClearCurrentAssetGroupCulture(AssetGroup: string, SaveToConfig?: boolean /* = false */) : void;
        static GetCultureDisplayName(Culture: string, Localized?: boolean /* = true */) : string;
        static GetCurrentAssetGroupCulture(AssetGroup: string) : string;
        static GetCurrentCulture() : string;
        static GetCurrentLanguage() : string;
        static GetCurrentLocale() : string;
        static GetLocalizedCultures(IncludeGame?: boolean /* = true */, IncludeEngine?: boolean /* = false */, IncludeEditor?: boolean /* = false */, IncludeAdditional?: boolean /* = false */) : TArray<string>;
        static GetNativeCulture(TextCategory: UE.ELocalizedTextSourceCategory) : string;
        static GetSuitableCulture(AvailableCultures: TArray<string>, CultureToMatch: string, FallbackCulture?: string /* = "en" */) : string;
        static SetCurrentAssetGroupCulture(AssetGroup: string, Culture: string, SaveToConfig?: boolean /* = false */) : boolean;
        static SetCurrentCulture(Culture: string, SaveToConfig?: boolean /* = false */) : boolean;
        static SetCurrentLanguage(Culture: string, SaveToConfig?: boolean /* = false */) : boolean;
        static SetCurrentLanguageAndLocale(Culture: string, SaveToConfig?: boolean /* = false */) : boolean;
        static SetCurrentLocale(Culture: string, SaveToConfig?: boolean /* = false */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetInternationalizationLibrary;
        static Load(InName: string): KismetInternationalizationLibrary;
    
        __tid_KismetInternationalizationLibrary_0__: boolean;
    }
    
    class KismetMaterialLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateDynamicMaterialInstance(WorldContextObject: $Nullable<UE.Object>, Parent: $Nullable<UE.MaterialInterface>, OptionalName?: string /* = "None" */, CreationFlags?: UE.EMIDCreationFlags /* = None */) : UE.MaterialInstanceDynamic;
        static GetScalarParameterValue(WorldContextObject: $Nullable<UE.Object>, Collection: $Nullable<UE.MaterialParameterCollection>, ParameterName: string) : number;
        static GetVectorParameterValue(WorldContextObject: $Nullable<UE.Object>, Collection: $Nullable<UE.MaterialParameterCollection>, ParameterName: string) : UE.LinearColor;
        static SetScalarParameterValue(WorldContextObject: $Nullable<UE.Object>, Collection: $Nullable<UE.MaterialParameterCollection>, ParameterName: string, ParameterValue: number) : void;
        static SetVectorParameterValue(WorldContextObject: $Nullable<UE.Object>, Collection: $Nullable<UE.MaterialParameterCollection>, ParameterName: string, ParameterValue: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetMaterialLibrary;
        static Load(InName: string): KismetMaterialLibrary;
    
        __tid_KismetMaterialLibrary_0__: boolean;
    }
    
    class VectorSpringState {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VectorSpringState_0__: boolean;
    }
    
    class KismetMathLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Abs(A: number) : number;
        static Abs_Int(A: number) : number;
        static Abs_Int64(A: bigint) : bigint;
        static Acos(A: number) : number;
        static Add_ByteByte(A: number, B?: number /* = 1 */) : number;
        static Add_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : UE.DateTime;
        static Add_DateTimeTimespan(A: UE.DateTime, B: UE.Timespan) : UE.DateTime;
        static Add_FloatFloat(A: number, B?: number /* = 1.000000 */) : number;
        static Add_Int64Int64(A: bigint, B?: bigint /* = 1 */) : bigint;
        static Add_IntInt(A: number, B?: number /* = 1 */) : number;
        static Add_IntPointInt(A: UE.IntPoint, B: number) : UE.IntPoint;
        static Add_IntPointIntPoint(A: UE.IntPoint, B: UE.IntPoint) : UE.IntPoint;
        static Add_LinearColorLinearColor(A: UE.LinearColor, B: UE.LinearColor) : UE.LinearColor;
        static Add_MatrixMatrix(A: UE.Matrix, B: UE.Matrix) : UE.Matrix;
        static Add_QuatQuat(A: UE.Quat, B: UE.Quat) : UE.Quat;
        static Add_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : UE.Timespan;
        static Add_Vector2DFloat(A: UE.Vector2D, B: number) : UE.Vector2D;
        static Add_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D) : UE.Vector2D;
        static Add_Vector4Vector4(A: UE.Vector4, B: UE.Vector4) : UE.Vector4;
        static Add_VectorFloat(A: UE.Vector, B: number) : UE.Vector;
        static Add_VectorInt(A: UE.Vector, B: number) : UE.Vector;
        static Add_VectorVector(A: UE.Vector, B: UE.Vector) : UE.Vector;
        static And_Int64Int64(A: bigint, B: bigint) : bigint;
        static And_IntInt(A: number, B: number) : number;
        static Asin(A: number) : number;
        static Atan(A: number) : number;
        static Atan2(Y: number, X: number) : number;
        static BMax(A: number, B: number) : number;
        static BMin(A: number, B: number) : number;
        static BooleanAND(A: boolean, B: boolean) : boolean;
        static BooleanNAND(A: boolean, B: boolean) : boolean;
        static BooleanNOR(A: boolean, B: boolean) : boolean;
        static BooleanOR(A: boolean, B: boolean) : boolean;
        static BooleanXOR(A: boolean, B: boolean) : boolean;
        static BreakColor(InColor: UE.LinearColor, R: $Ref<number>, G: $Ref<number>, B: $Ref<number>, A: $Ref<number>) : void;
        static BreakDateTime(InDateTime: UE.DateTime, Year: $Ref<number>, Month: $Ref<number>, Day: $Ref<number>, Hour: $Ref<number>, Minute: $Ref<number>, Second: $Ref<number>, Millisecond: $Ref<number>) : void;
        static BreakFrameRate(InFrameRate: UE.FrameRate, Numerator: $Ref<number>, Denominator: $Ref<number>) : void;
        static BreakQualifiedFrameTime(InFrameTime: UE.QualifiedFrameTime, Frame: $Ref<UE.FrameNumber>, FrameRate: $Ref<UE.FrameRate>, SubFrame: $Ref<number>) : void;
        static BreakRandomStream(InRandomStream: UE.RandomStream, InitialSeed: $Ref<number>) : void;
        static BreakRotator(InRot: UE.Rotator, Roll: $Ref<number>, Pitch: $Ref<number>, Yaw: $Ref<number>) : void;
        static BreakRotIntoAxes(InRot: UE.Rotator, X: $Ref<UE.Vector>, Y: $Ref<UE.Vector>, Z: $Ref<UE.Vector>) : void;
        static BreakTimespan(InTimespan: UE.Timespan, Days: $Ref<number>, Hours: $Ref<number>, Minutes: $Ref<number>, Seconds: $Ref<number>, Milliseconds: $Ref<number>) : void;
        static BreakTimespan2(InTimespan: UE.Timespan, Days: $Ref<number>, Hours: $Ref<number>, Minutes: $Ref<number>, Seconds: $Ref<number>, FractionNano: $Ref<number>) : void;
        static BreakTransform(InTransform: UE.Transform, Location: $Ref<UE.Vector>, Rotation: $Ref<UE.Rotator>, Scale: $Ref<UE.Vector>) : void;
        static BreakVector(InVec: UE.Vector, X: $Ref<number>, Y: $Ref<number>, Z: $Ref<number>) : void;
        static BreakVector2D(InVec: UE.Vector2D, X: $Ref<number>, Y: $Ref<number>) : void;
        static BreakVector4(InVec: UE.Vector4, X: $Ref<number>, Y: $Ref<number>, Z: $Ref<number>, W: $Ref<number>) : void;
        static CInterpTo(Current: UE.LinearColor, Target: UE.LinearColor, DeltaTime: number, InterpSpeed: number) : UE.LinearColor;
        static Clamp(Value: number, Min: number, Max: number) : number;
        static ClampAngle(AngleDegrees: number, MinAngleDegrees: number, MaxAngleDegrees: number) : number;
        static ClampAxes2D(A: UE.Vector2D, MinAxisVal: number, MaxAxisVal: number) : UE.Vector2D;
        static ClampAxis(Angle: number) : number;
        static ClampInt64(Value: bigint, Min: bigint, Max: bigint) : bigint;
        static ClampVectorSize(A: UE.Vector, Min: number, Max: number) : UE.Vector;
        static ClassIsChildOf(TestClass: $Nullable<UE.Class>, ParentClass: $Nullable<UE.Class>) : boolean;
        static ComposeRotators(A: UE.Rotator, B: UE.Rotator) : UE.Rotator;
        static ComposeTransforms(A: UE.Transform, B: UE.Transform) : UE.Transform;
        static Conv_BoolToByte(InBool: boolean) : number;
        static Conv_BoolToFloat(InBool: boolean) : number;
        static Conv_BoolToInt(InBool: boolean) : number;
        static Conv_ByteToFloat(InByte: number) : number;
        static Conv_ByteToInt(InByte: number) : number;
        static Conv_ColorToLinearColor(InColor: UE.Color) : UE.LinearColor;
        static Conv_FloatToLinearColor(InFloat: number) : UE.LinearColor;
        static Conv_FloatToVector(InFloat: number) : UE.Vector;
        static Conv_Int64ToByte(InInt: bigint) : number;
        static Conv_Int64ToInt(InInt: bigint) : number;
        static Conv_IntPointToVector2D(InIntPoint: UE.IntPoint) : UE.Vector2D;
        static Conv_IntToBool(InInt: number) : boolean;
        static Conv_IntToByte(InInt: number) : number;
        static Conv_IntToFloat(InInt: number) : number;
        static Conv_IntToInt64(InInt: number) : bigint;
        static Conv_IntToIntVector(InInt: number) : UE.IntVector;
        static Conv_IntVectorToVector(InIntVector: UE.IntVector) : UE.Vector;
        static Conv_LinearColorToColor(InLinearColor: UE.LinearColor, InUseSRGB?: boolean /* = true */) : UE.Color;
        static Conv_LinearColorToVector(InLinearColor: UE.LinearColor) : UE.Vector;
        static Conv_MatrixToRotator(InMatrix: UE.Matrix) : UE.Rotator;
        static Conv_MatrixToTransform(InMatrix: UE.Matrix) : UE.Transform;
        static Conv_RotatorToTransform(InRotator: UE.Rotator) : UE.Transform;
        static Conv_RotatorToVector(InRot: UE.Rotator) : UE.Vector;
        static Conv_TransformToMatrix(Transform: UE.Transform) : UE.Matrix;
        static Conv_Vector2DToIntPoint(InVector2D: UE.Vector2D) : UE.IntPoint;
        static Conv_Vector2DToVector(InVector2D: UE.Vector2D, Z?: number /* = 0.000000 */) : UE.Vector;
        static Conv_Vector4ToQuaternion(InVec: UE.Vector4) : UE.Quat;
        static Conv_Vector4ToRotator(InVec: UE.Vector4) : UE.Rotator;
        static Conv_Vector4ToVector(InVector4: UE.Vector4) : UE.Vector;
        static Conv_VectorToLinearColor(InVec: UE.Vector) : UE.LinearColor;
        static Conv_VectorToQuaternion(InVec: UE.Vector) : UE.Quat;
        static Conv_VectorToRotator(InVec: UE.Vector) : UE.Rotator;
        static Conv_VectorToTransform(InLocation: UE.Vector) : UE.Transform;
        static Conv_VectorToVector2D(InVector: UE.Vector) : UE.Vector2D;
        static ConvertTransformToRelative(Transform: UE.Transform, ParentTransform: UE.Transform) : UE.Transform;
        static Cos(A: number) : number;
        static CreateVectorFromYawPitch(Yaw: number, Pitch: number, Length?: number /* = 1.000000 */) : UE.Vector;
        static Cross_VectorVector(A: UE.Vector, B: UE.Vector) : UE.Vector;
        static CrossProduct2D(A: UE.Vector2D, B: UE.Vector2D) : number;
        static DateTimeFromIsoString(IsoString: string, Result: $Ref<UE.DateTime>) : boolean;
        static DateTimeFromString(DateTimeString: string, Result: $Ref<UE.DateTime>) : boolean;
        static DateTimeMaxValue() : UE.DateTime;
        static DateTimeMinValue() : UE.DateTime;
        static DaysInMonth(Year: number, Month: number) : number;
        static DaysInYear(Year: number) : number;
        static DegAcos(A: number) : number;
        static DegAsin(A: number) : number;
        static DegAtan(A: number) : number;
        static DegAtan2(Y: number, X: number) : number;
        static DegCos(A: number) : number;
        static DegreesToRadians(A: number) : number;
        static DegSin(A: number) : number;
        static DegTan(A: number) : number;
        static Distance2D(V1: UE.Vector2D, V2: UE.Vector2D) : number;
        static DistanceSquared2D(V1: UE.Vector2D, V2: UE.Vector2D) : number;
        static Divide_ByteByte(A: number, B?: number /* = 1 */) : number;
        static Divide_FloatFloat(A: number, B?: number /* = 1.000000 */) : number;
        static Divide_Int64Int64(A: bigint, B?: bigint /* = 1 */) : bigint;
        static Divide_IntInt(A: number, B?: number /* = 1 */) : number;
        static Divide_IntPointInt(A: UE.IntPoint, B: number) : UE.IntPoint;
        static Divide_IntPointIntPoint(A: UE.IntPoint, B: UE.IntPoint) : UE.IntPoint;
        static Divide_LinearColorLinearColor(A: UE.LinearColor, B: UE.LinearColor) : UE.LinearColor;
        static Divide_TimespanFloat(A: UE.Timespan, Scalar: number) : UE.Timespan;
        static Divide_Vector2DFloat(A: UE.Vector2D, B?: number /* = 1.000000 */) : UE.Vector2D;
        static Divide_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D) : UE.Vector2D;
        static Divide_Vector4Vector4(A: UE.Vector4, B: UE.Vector4) : UE.Vector4;
        static Divide_VectorFloat(A: UE.Vector, B?: number /* = 1.000000 */) : UE.Vector;
        static Divide_VectorInt(A: UE.Vector, B?: number /* = 1 */) : UE.Vector;
        static Divide_VectorVector(A: UE.Vector, B?: UE.Vector /* = 1.000000,1.000000,1.000000 */) : UE.Vector;
        static Dot_VectorVector(A: UE.Vector, B: UE.Vector) : number;
        static DotProduct2D(A: UE.Vector2D, B: UE.Vector2D) : number;
        static DynamicWeightedMovingAverage_Float(CurrentSample: number, PreviousSample: number, MaxDistance: number, MinWeight: number, MaxWeight: number) : number;
        static DynamicWeightedMovingAverage_FRotator(CurrentSample: UE.Rotator, PreviousSample: UE.Rotator, MaxDistance: number, MinWeight: number, MaxWeight: number) : UE.Rotator;
        static DynamicWeightedMovingAverage_FVector(CurrentSample: UE.Vector, PreviousSample: UE.Vector, MaxDistance: number, MinWeight: number, MaxWeight: number) : UE.Vector;
        static Ease(A: number, B: number, Alpha: number, EasingFunc: UE.EEasingFunc, BlendExp?: number /* = 2.000000 */, Steps?: number /* = 2 */) : number;
        static Equal_IntPointIntPoint(A: UE.IntPoint, B: UE.IntPoint) : boolean;
        static EqualEqual_BoolBool(A: boolean, B: boolean) : boolean;
        static EqualEqual_ByteByte(A: number, B: number) : boolean;
        static EqualEqual_ClassClass(A: $Nullable<UE.Class>, B: $Nullable<UE.Class>) : boolean;
        static EqualEqual_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : boolean;
        static EqualEqual_FloatFloat(A: number, B: number) : boolean;
        static EqualEqual_Int64Int64(A: bigint, B: bigint) : boolean;
        static EqualEqual_IntInt(A: number, B: number) : boolean;
        static EqualEqual_LinearColorLinearColor(A: UE.LinearColor, B: UE.LinearColor) : boolean;
        static EqualEqual_MatrixMatrix(A: UE.Matrix, B: UE.Matrix, Tolerance?: number /* = 0.000100 */) : boolean;
        static EqualEqual_NameName(A: string, B: string) : boolean;
        static EqualEqual_ObjectObject(A: $Nullable<UE.Object>, B: $Nullable<UE.Object>) : boolean;
        static EqualEqual_QuatQuat(A: UE.Quat, B: UE.Quat, Tolerance?: number /* = 0.000100 */) : boolean;
        static EqualEqual_RotatorRotator(A: UE.Rotator, B: UE.Rotator, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static EqualEqual_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : boolean;
        static EqualEqual_TransformTransform(A: UE.Transform, B: UE.Transform) : boolean;
        static EqualEqual_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static EqualEqual_Vector4Vector4(A: UE.Vector4, B: UE.Vector4, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static EqualEqual_VectorVector(A: UE.Vector, B: UE.Vector, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static EqualExactly_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D) : boolean;
        static EqualExactly_Vector4Vector4(A: UE.Vector4, B: UE.Vector4) : boolean;
        static EqualExactly_VectorVector(A: UE.Vector, B: UE.Vector) : boolean;
        static Exp(A: number) : number;
        static FCeil(A: number) : number;
        static FCeil64(A: number) : bigint;
        static FClamp(Value: number, Min: number, Max: number) : number;
        static FFloor(A: number) : number;
        static FFloor64(A: number) : bigint;
        static FindClosestPointOnLine(Point: UE.Vector, LineOrigin: UE.Vector, LineDirection: UE.Vector) : UE.Vector;
        static FindClosestPointOnSegment(Point: UE.Vector, SegmentStart: UE.Vector, SegmentEnd: UE.Vector) : UE.Vector;
        static FindLookAtRotation(Start: UE.Vector, Target: UE.Vector) : UE.Rotator;
        static FindNearestPointsOnLineSegments(Segment1Start: UE.Vector, Segment1End: UE.Vector, Segment2Start: UE.Vector, Segment2End: UE.Vector, Segment1Point: $Ref<UE.Vector>, Segment2Point: $Ref<UE.Vector>) : void;
        static FInterpEaseInOut(A: number, B: number, Alpha: number, Exponent: number) : number;
        static FInterpTo(Current: number, Target: number, DeltaTime: number, InterpSpeed: number) : number;
        static FInterpTo_Constant(Current: number, Target: number, DeltaTime: number, InterpSpeed: number) : number;
        static FixedTurn(InCurrent: number, InDesired: number, InDeltaRate: number) : number;
        static FloatSpringInterp(Current: number, Target: number, SpringState: $Ref<UE.FloatSpringState>, Stiffness: number, CriticalDampingFactor: number, DeltaTime: number, Mass?: number /* = 1.000000 */) : number;
        static FMax(A: number, B: number) : number;
        static FMin(A: number, B: number) : number;
        static FMod(Dividend: number, Divisor: number, Remainder: $Ref<number>) : number;
        static Fraction(A: number) : number;
        static FromDays(Days: number) : UE.Timespan;
        static FromHours(Hours: number) : UE.Timespan;
        static FromMilliseconds(Milliseconds: number) : UE.Timespan;
        static FromMinutes(Minutes: number) : UE.Timespan;
        static FromSeconds(Seconds: number) : UE.Timespan;
        static FTrunc(A: number) : number;
        static FTrunc64(A: number) : bigint;
        static FTruncVector(InVector: UE.Vector) : UE.IntVector;
        static FWrap(Value: number, Min: number, Max: number) : number;
        static GetAbs2D(A: UE.Vector2D) : UE.Vector2D;
        static GetAbsMax2D(A: UE.Vector2D) : number;
        static GetAxes(A: UE.Rotator, X: $Ref<UE.Vector>, Y: $Ref<UE.Vector>, Z: $Ref<UE.Vector>) : void;
        static GetAzimuthAndElevation(InDirection: UE.Vector, ReferenceFrame: UE.Transform, Azimuth: $Ref<number>, Elevation: $Ref<number>) : void;
        static GetDate(A: UE.DateTime) : UE.DateTime;
        static GetDay(A: UE.DateTime) : number;
        static GetDayOfYear(A: UE.DateTime) : number;
        static GetDays(A: UE.Timespan) : number;
        static GetDirectionUnitVector(From: UE.Vector, To: UE.Vector) : UE.Vector;
        static GetDuration(A: UE.Timespan) : UE.Timespan;
        static GetForwardVector(InRot: UE.Rotator) : UE.Vector;
        static GetHour(A: UE.DateTime) : number;
        static GetHour12(A: UE.DateTime) : number;
        static GetHours(A: UE.Timespan) : number;
        static GetMax2D(A: UE.Vector2D) : number;
        static GetMaxElement(A: UE.Vector) : number;
        static GetMillisecond(A: UE.DateTime) : number;
        static GetMilliseconds(A: UE.Timespan) : number;
        static GetMin2D(A: UE.Vector2D) : number;
        static GetMinElement(A: UE.Vector) : number;
        static GetMinute(A: UE.DateTime) : number;
        static GetMinutes(A: UE.Timespan) : number;
        static GetMonth(A: UE.DateTime) : number;
        static GetPI() : number;
        static GetPointDistanceToLine(Point: UE.Vector, LineOrigin: UE.Vector, LineDirection: UE.Vector) : number;
        static GetPointDistanceToSegment(Point: UE.Vector, SegmentStart: UE.Vector, SegmentEnd: UE.Vector) : number;
        static GetReflectionVector(Direction: UE.Vector, SurfaceNormal: UE.Vector) : UE.Vector;
        static GetRightVector(InRot: UE.Rotator) : UE.Vector;
        static GetRotated2D(A: UE.Vector2D, AngleDeg: number) : UE.Vector2D;
        static GetSecond(A: UE.DateTime) : number;
        static GetSeconds(A: UE.Timespan) : number;
        static GetSlopeDegreeAngles(MyRightYAxis: UE.Vector, FloorNormal: UE.Vector, UpVector: UE.Vector, OutSlopePitchDegreeAngle: $Ref<number>, OutSlopeRollDegreeAngle: $Ref<number>) : void;
        static GetTAU() : number;
        static GetTimeOfDay(A: UE.DateTime) : UE.Timespan;
        static GetTotalDays(A: UE.Timespan) : number;
        static GetTotalHours(A: UE.Timespan) : number;
        static GetTotalMilliseconds(A: UE.Timespan) : number;
        static GetTotalMinutes(A: UE.Timespan) : number;
        static GetTotalSeconds(A: UE.Timespan) : number;
        static GetUpVector(InRot: UE.Rotator) : UE.Vector;
        static GetVectorArrayAverage(Vectors: TArray<UE.Vector>) : UE.Vector;
        static GetYawPitchFromVector(InVec: UE.Vector, Yaw: $Ref<number>, Pitch: $Ref<number>) : void;
        static GetYear(A: UE.DateTime) : number;
        static Greater_ByteByte(A: number, B: number) : boolean;
        static Greater_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : boolean;
        static Greater_FloatFloat(A: number, B: number) : boolean;
        static Greater_Int64Int64(A: bigint, B: bigint) : boolean;
        static Greater_IntInt(A: number, B: number) : boolean;
        static Greater_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : boolean;
        static GreaterEqual_ByteByte(A: number, B: number) : boolean;
        static GreaterEqual_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : boolean;
        static GreaterEqual_FloatFloat(A: number, B: number) : boolean;
        static GreaterEqual_Int64Int64(A: bigint, B: bigint) : boolean;
        static GreaterEqual_IntInt(A: number, B: number) : boolean;
        static GreaterEqual_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : boolean;
        static GreaterGreater_VectorRotator(A: UE.Vector, B: UE.Rotator) : UE.Vector;
        static GridSnap_Float(Location: number, GridSize: number) : number;
        static HSVToRGB(H: number, S: number, V: number, A?: number /* = 1.000000 */) : UE.LinearColor;
        static HSVToRGB_Vector(HSV: UE.LinearColor, RGB: $Ref<UE.LinearColor>) : void;
        static HSVToRGBLinear(HSV: UE.LinearColor) : UE.LinearColor;
        static Hypotenuse(Width: number, Height: number) : number;
        static InRange_FloatFloat(Value: number, Min: number, Max: number, InclusiveMin?: boolean /* = true */, InclusiveMax?: boolean /* = true */) : boolean;
        static InRange_Int64Int64(Value: bigint, Min: bigint, Max: bigint, InclusiveMin?: boolean /* = true */, InclusiveMax?: boolean /* = true */) : boolean;
        static InRange_IntInt(Value: number, Min: number, Max: number, InclusiveMin?: boolean /* = true */, InclusiveMax?: boolean /* = true */) : boolean;
        static IntPoint_Down() : UE.IntPoint;
        static IntPoint_Left() : UE.IntPoint;
        static IntPoint_One() : UE.IntPoint;
        static IntPoint_Right() : UE.IntPoint;
        static IntPoint_Up() : UE.IntPoint;
        static IntPoint_Zero() : UE.IntPoint;
        static InverseTransformDirection(T: UE.Transform, Direction: UE.Vector) : UE.Vector;
        static InverseTransformLocation(T: UE.Transform, Location: UE.Vector) : UE.Vector;
        static InverseTransformRotation(T: UE.Transform, Rotation: UE.Rotator) : UE.Rotator;
        static InvertTransform(T: UE.Transform) : UE.Transform;
        static IsAfternoon(A: UE.DateTime) : boolean;
        static IsLeapYear(Year: number) : boolean;
        static IsMorning(A: UE.DateTime) : boolean;
        static IsNearlyZero2D(A: UE.Vector2D, Tolerance?: number /* = 0.000100 */) : boolean;
        static IsPointInBox(Point: UE.Vector, BoxOrigin: UE.Vector, BoxExtent: UE.Vector) : boolean;
        static IsPointInBoxWithTransform(Point: UE.Vector, BoxWorldTransform: UE.Transform, BoxExtent: UE.Vector) : boolean;
        static IsZero2D(A: UE.Vector2D) : boolean;
        static Lerp(A: number, B: number, Alpha: number) : number;
        static Less_ByteByte(A: number, B: number) : boolean;
        static Less_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : boolean;
        static Less_FloatFloat(A: number, B: number) : boolean;
        static Less_Int64Int64(A: bigint, B: bigint) : boolean;
        static Less_IntInt(A: number, B: number) : boolean;
        static Less_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : boolean;
        static LessEqual_ByteByte(A: number, B: number) : boolean;
        static LessEqual_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : boolean;
        static LessEqual_FloatFloat(A: number, B: number) : boolean;
        static LessEqual_Int64Int64(A: bigint, B: bigint) : boolean;
        static LessEqual_IntInt(A: number, B: number) : boolean;
        static LessEqual_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : boolean;
        static LessLess_VectorRotator(A: UE.Vector, B: UE.Rotator) : UE.Vector;
        static LinearColor_Black() : UE.LinearColor;
        static LinearColor_Blue() : UE.LinearColor;
        static LinearColor_Desaturated(InColor: UE.LinearColor, InDesaturation: number) : UE.LinearColor;
        static LinearColor_Distance(C1: UE.LinearColor, C2: UE.LinearColor) : number;
        static LinearColor_GetLuminance(InColor: UE.LinearColor) : number;
        static LinearColor_GetMax(InColor: UE.LinearColor) : number;
        static LinearColor_GetMin(InColor: UE.LinearColor) : number;
        static LinearColor_Gray() : UE.LinearColor;
        static LinearColor_Green() : UE.LinearColor;
        static LinearColor_IsNearEqual(A: UE.LinearColor, B: UE.LinearColor, Tolerance?: number /* = 0.000100 */) : boolean;
        static LinearColor_Quantize(InColor: UE.LinearColor) : UE.Color;
        static LinearColor_QuantizeRound(InColor: UE.LinearColor) : UE.Color;
        static LinearColor_Red() : UE.LinearColor;
        static LinearColor_Set(InOutColor: $Ref<UE.LinearColor>, InColor: UE.LinearColor) : void;
        static LinearColor_SetFromHSV(InOutColor: $Ref<UE.LinearColor>, H: number, S: number, V: number, A?: number /* = 1.000000 */) : void;
        static LinearColor_SetFromPow22(InOutColor: $Ref<UE.LinearColor>, InColor: UE.Color) : void;
        static LinearColor_SetFromSRGB(InOutColor: $Ref<UE.LinearColor>, InSRGB: UE.Color) : void;
        static LinearColor_SetRandomHue(InOutColor: $Ref<UE.LinearColor>) : void;
        static LinearColor_SetRGBA(InOutColor: $Ref<UE.LinearColor>, R: number, G: number, B: number, A?: number /* = 1.000000 */) : void;
        static LinearColor_SetTemperature(InOutColor: $Ref<UE.LinearColor>, InTemperature: number) : void;
        static LinearColor_ToNewOpacity(InColor: UE.LinearColor, InOpacity: number) : UE.LinearColor;
        static LinearColor_ToRGBE(InLinearColor: UE.LinearColor) : UE.Color;
        static LinearColor_Transparent() : UE.LinearColor;
        static LinearColor_White() : UE.LinearColor;
        static LinearColor_Yellow() : UE.LinearColor;
        static LinearColorLerp(A: UE.LinearColor, B: UE.LinearColor, Alpha: number) : UE.LinearColor;
        static LinearColorLerpUsingHSV(A: UE.LinearColor, B: UE.LinearColor, Alpha: number) : UE.LinearColor;
        static LinePlaneIntersection(LineStart: UE.Vector, LineEnd: UE.Vector, APlane: UE.Plane, T: $Ref<number>, Intersection: $Ref<UE.Vector>) : boolean;
        static LinePlaneIntersection_OriginNormal(LineStart: UE.Vector, LineEnd: UE.Vector, PlaneOrigin: UE.Vector, PlaneNormal: UE.Vector, T: $Ref<number>, Intersection: $Ref<UE.Vector>) : boolean;
        static Log(A: number, Base?: number /* = 1.000000 */) : number;
        static Loge(A: number) : number;
        static MakeBox(Min: UE.Vector, Max: UE.Vector) : UE.Box;
        static MakeBox2D(Min: UE.Vector2D, Max: UE.Vector2D) : UE.Box2D;
        static MakeColor(R: number, G: number, B: number, A?: number /* = 1.000000 */) : UE.LinearColor;
        static MakeDateTime(Year: number, Month: number, Day: number, Hour?: number /* = 0 */, Minute?: number /* = 0 */, Second?: number /* = 0 */, Millisecond?: number /* = 0 */) : UE.DateTime;
        static MakeFrameRate(Numerator: number, Denominator?: number /* = 1 */) : UE.FrameRate;
        static MakePlaneFromPointAndNormal(Point: UE.Vector, Normal: UE.Vector) : UE.Plane;
        static MakePulsatingValue(InCurrentTime: number, InPulsesPerSecond?: number /* = 1.000000 */, InPhase?: number /* = 0.000000 */) : number;
        static MakeQualifiedFrameTime(Frame: UE.FrameNumber, FrameRate: UE.FrameRate, SubFrame?: number /* = 0.000000 */) : UE.QualifiedFrameTime;
        static MakeRandomStream(InitialSeed: number) : UE.RandomStream;
        static MakeRelativeTransform(A: UE.Transform, RelativeTo: UE.Transform) : UE.Transform;
        static MakeRotationFromAxes(Forward: UE.Vector, Right: UE.Vector, Up: UE.Vector) : UE.Rotator;
        static MakeRotator(Roll: number, Pitch: number, Yaw: number) : UE.Rotator;
        static MakeRotFromX(X: UE.Vector) : UE.Rotator;
        static MakeRotFromXY(X: UE.Vector, Y: UE.Vector) : UE.Rotator;
        static MakeRotFromXZ(X: UE.Vector, Z: UE.Vector) : UE.Rotator;
        static MakeRotFromY(Y: UE.Vector) : UE.Rotator;
        static MakeRotFromYX(Y: UE.Vector, X: UE.Vector) : UE.Rotator;
        static MakeRotFromYZ(Y: UE.Vector, Z: UE.Vector) : UE.Rotator;
        static MakeRotFromZ(Z: UE.Vector) : UE.Rotator;
        static MakeRotFromZX(Z: UE.Vector, X: UE.Vector) : UE.Rotator;
        static MakeRotFromZY(Z: UE.Vector, Y: UE.Vector) : UE.Rotator;
        static MakeTimespan(Days: number, Hours: number, Minutes: number, Seconds: number, Milliseconds: number) : UE.Timespan;
        static MakeTimespan2(Days: number, Hours: number, Minutes: number, Seconds: number, FractionNano: number) : UE.Timespan;
        static MakeTransform(Location: UE.Vector, Rotation: UE.Rotator, Scale: UE.Vector) : UE.Transform;
        static MakeVector(X: number, Y: number, Z: number) : UE.Vector;
        static MakeVector2D(X: number, Y: number) : UE.Vector2D;
        static MakeVector4(X: number, Y: number, Z: number, W: number) : UE.Vector4;
        static MapRangeClamped(Value: number, InRangeA: number, InRangeB: number, OutRangeA: number, OutRangeB: number) : number;
        static MapRangeUnclamped(Value: number, InRangeA: number, InRangeB: number, OutRangeA: number, OutRangeB: number) : number;
        static Matrix_ApplyScale(M: UE.Matrix, Scale: number) : UE.Matrix;
        static Matrix_ConcatenateTranslation(M: UE.Matrix, Translation: UE.Vector) : UE.Matrix;
        static Matrix_ContainsNaN(M: UE.Matrix) : boolean;
        static Matrix_GetColumn(M: UE.Matrix, Column: UE.EMatrixColumns) : UE.Vector;
        static Matrix_GetDeterminant(M: UE.Matrix) : number;
        static Matrix_GetFrustumBottomPlane(M: UE.Matrix, OutPlane: $Ref<UE.Plane>) : boolean;
        static Matrix_GetFrustumFarPlane(M: UE.Matrix, OutPlane: $Ref<UE.Plane>) : boolean;
        static Matrix_GetFrustumLeftPlane(M: UE.Matrix, OutPlane: $Ref<UE.Plane>) : boolean;
        static Matrix_GetFrustumNearPlane(M: UE.Matrix, OutPlane: $Ref<UE.Plane>) : boolean;
        static Matrix_GetFrustumRightPlane(M: UE.Matrix, OutPlane: $Ref<UE.Plane>) : boolean;
        static Matrix_GetFrustumTopPlane(M: UE.Matrix, OutPlane: $Ref<UE.Plane>) : boolean;
        static Matrix_GetInverse(M: UE.Matrix) : UE.Matrix;
        static Matrix_GetMatrixWithoutScale(M: UE.Matrix, Tolerance?: number /* = 0.000000 */) : UE.Matrix;
        static Matrix_GetMaximumAxisScale(M: UE.Matrix) : number;
        static Matrix_GetOrigin(InMatrix: UE.Matrix) : UE.Vector;
        static Matrix_GetRotator(M: UE.Matrix) : UE.Rotator;
        static Matrix_GetRotDeterminant(M: UE.Matrix) : number;
        static Matrix_GetScaledAxes(M: UE.Matrix, X: $Ref<UE.Vector>, Y: $Ref<UE.Vector>, Z: $Ref<UE.Vector>) : void;
        static Matrix_GetScaledAxis(M: UE.Matrix, Axis: UE.EAxis) : UE.Vector;
        static Matrix_GetScaleVector(M: UE.Matrix, Tolerance?: number /* = 0.000000 */) : UE.Vector;
        static Matrix_GetTransposeAdjoint(M: UE.Matrix) : UE.Matrix;
        static Matrix_GetTransposed(M: UE.Matrix) : UE.Matrix;
        static Matrix_GetUnitAxes(M: UE.Matrix, X: $Ref<UE.Vector>, Y: $Ref<UE.Vector>, Z: $Ref<UE.Vector>) : void;
        static Matrix_GetUnitAxis(M: UE.Matrix, Axis: UE.EAxis) : UE.Vector;
        static Matrix_Identity() : UE.Matrix;
        static Matrix_InverseTransformPosition(M: UE.Matrix, V: UE.Vector) : UE.Vector;
        static Matrix_InverseTransformVector(M: UE.Matrix, V: UE.Vector) : UE.Vector;
        static Matrix_Mirror(M: UE.Matrix, MirrorAxis: UE.EAxis, FlipAxis: UE.EAxis) : UE.Matrix;
        static Matrix_RemoveScaling(M: $Ref<UE.Matrix>, Tolerance?: number /* = 0.000000 */) : void;
        static Matrix_RemoveTranslation(M: UE.Matrix) : UE.Matrix;
        static Matrix_ScaleTranslation(M: UE.Matrix, Scale3D: UE.Vector) : UE.Matrix;
        static Matrix_SetAxis(M: $Ref<UE.Matrix>, Axis: UE.EAxis, AxisVector: UE.Vector) : void;
        static Matrix_SetColumn(M: $Ref<UE.Matrix>, Column: UE.EMatrixColumns, Value: UE.Vector) : void;
        static Matrix_SetOrigin(M: $Ref<UE.Matrix>, NewOrigin: UE.Vector) : void;
        static Matrix_ToQuat(M: UE.Matrix) : UE.Quat;
        static Matrix_TransformPosition(M: UE.Matrix, V: UE.Vector) : UE.Vector4;
        static Matrix_TransformVector(M: UE.Matrix, V: UE.Vector) : UE.Vector4;
        static Matrix_TransformVector4(M: UE.Matrix, V: UE.Vector4) : UE.Vector4;
        static Max(A: number, B: number) : number;
        static MaxInt64(A: bigint, B: bigint) : bigint;
        static MaxOfByteArray(ByteArray: TArray<number>, IndexOfMaxValue: $Ref<number>, MaxValue: $Ref<number>) : void;
        static MaxOfFloatArray(FloatArray: TArray<number>, IndexOfMaxValue: $Ref<number>, MaxValue: $Ref<number>) : void;
        static MaxOfIntArray(IntArray: TArray<number>, IndexOfMaxValue: $Ref<number>, MaxValue: $Ref<number>) : void;
        static Min(A: number, B: number) : number;
        static MinimumAreaRectangle(WorldContextObject: $Nullable<UE.Object>, InVerts: TArray<UE.Vector>, SampleSurfaceNormal: UE.Vector, OutRectCenter: $Ref<UE.Vector>, OutRectRotation: $Ref<UE.Rotator>, OutSideLengthX: $Ref<number>, OutSideLengthY: $Ref<number>, bDebugDraw?: boolean /* = false */) : void;
        static MinInt64(A: bigint, B: bigint) : bigint;
        static MinOfByteArray(ByteArray: TArray<number>, IndexOfMinValue: $Ref<number>, MinValue: $Ref<number>) : void;
        static MinOfFloatArray(FloatArray: TArray<number>, IndexOfMinValue: $Ref<number>, MinValue: $Ref<number>) : void;
        static MinOfIntArray(IntArray: TArray<number>, IndexOfMinValue: $Ref<number>, MinValue: $Ref<number>) : void;
        static MirrorVectorByNormal(InVect: UE.Vector, InNormal: UE.Vector) : UE.Vector;
        static Multiply_ByteByte(A: number, B: number) : number;
        static Multiply_FloatFloat(A: number, B: number) : number;
        static Multiply_Int64Int64(A: bigint, B: bigint) : bigint;
        static Multiply_IntFloat(A: number, B: number) : number;
        static Multiply_IntInt(A: number, B: number) : number;
        static Multiply_IntPointInt(A: UE.IntPoint, B: number) : UE.IntPoint;
        static Multiply_IntPointIntPoint(A: UE.IntPoint, B: UE.IntPoint) : UE.IntPoint;
        static Multiply_LinearColorFloat(A: UE.LinearColor, B: number) : UE.LinearColor;
        static Multiply_LinearColorLinearColor(A: UE.LinearColor, B: UE.LinearColor) : UE.LinearColor;
        static Multiply_MatrixFloat(A: UE.Matrix, B: number) : UE.Matrix;
        static Multiply_MatrixMatrix(A: UE.Matrix, B: UE.Matrix) : UE.Matrix;
        static Multiply_QuatQuat(A: UE.Quat, B: UE.Quat) : UE.Quat;
        static Multiply_RotatorFloat(A: UE.Rotator, B: number) : UE.Rotator;
        static Multiply_RotatorInt(A: UE.Rotator, B: number) : UE.Rotator;
        static Multiply_TimespanFloat(A: UE.Timespan, Scalar: number) : UE.Timespan;
        static Multiply_Vector2DFloat(A: UE.Vector2D, B: number) : UE.Vector2D;
        static Multiply_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D) : UE.Vector2D;
        static Multiply_Vector4Vector4(A: UE.Vector4, B: UE.Vector4) : UE.Vector4;
        static Multiply_VectorFloat(A: UE.Vector, B: number) : UE.Vector;
        static Multiply_VectorInt(A: UE.Vector, B: number) : UE.Vector;
        static Multiply_VectorVector(A: UE.Vector, B: UE.Vector) : UE.Vector;
        static MultiplyByPi(Value: number) : number;
        static MultiplyMultiply_FloatFloat(Base: number, Exp: number) : number;
        static NearlyEqual_FloatFloat(A: number, B: number, ErrorTolerance?: number /* = 0.000001 */) : boolean;
        static NearlyEqual_TransformTransform(A: UE.Transform, B: UE.Transform, LocationTolerance?: number /* = 0.000100 */, RotationTolerance?: number /* = 0.000100 */, Scale3DTolerance?: number /* = 0.000100 */) : boolean;
        static Negated2D(A: UE.Vector2D) : UE.Vector2D;
        static NegateRotator(A: UE.Rotator) : UE.Rotator;
        static NegateVector(A: UE.Vector) : UE.Vector;
        static Normal(A: UE.Vector, Tolerance?: number /* = 0.000100 */) : UE.Vector;
        static Normal2D(A: UE.Vector2D) : UE.Vector2D;
        static Normalize2D(A: $Ref<UE.Vector2D>, Tolerance?: number /* = 0.000000 */) : void;
        static NormalizeAxis(Angle: number) : number;
        static NormalizedDeltaRotator(A: UE.Rotator, B: UE.Rotator) : UE.Rotator;
        static NormalizeToRange(Value: number, RangeMin: number, RangeMax: number) : number;
        static NormalSafe2D(A: UE.Vector2D, Tolerance?: number /* = 0.000000 */) : UE.Vector2D;
        static Not_Int(A: number) : number;
        static Not_Int64(A: bigint) : bigint;
        static Not_PreBool(A: boolean) : boolean;
        static NotEqual_BoolBool(A: boolean, B: boolean) : boolean;
        static NotEqual_ByteByte(A: number, B: number) : boolean;
        static NotEqual_ClassClass(A: $Nullable<UE.Class>, B: $Nullable<UE.Class>) : boolean;
        static NotEqual_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : boolean;
        static NotEqual_FloatFloat(A: number, B: number) : boolean;
        static NotEqual_Int64Int64(A: bigint, B: bigint) : boolean;
        static NotEqual_IntInt(A: number, B: number) : boolean;
        static NotEqual_IntPointIntPoint(A: UE.IntPoint, B: UE.IntPoint) : boolean;
        static NotEqual_LinearColorLinearColor(A: UE.LinearColor, B: UE.LinearColor) : boolean;
        static NotEqual_MatrixMatrix(A: UE.Matrix, B: UE.Matrix, Tolerance?: number /* = 0.000100 */) : boolean;
        static NotEqual_NameName(A: string, B: string) : boolean;
        static NotEqual_ObjectObject(A: $Nullable<UE.Object>, B: $Nullable<UE.Object>) : boolean;
        static NotEqual_QuatQuat(A: UE.Quat, B: UE.Quat, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static NotEqual_RotatorRotator(A: UE.Rotator, B: UE.Rotator, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static NotEqual_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : boolean;
        static NotEqual_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static NotEqual_Vector4Vector4(A: UE.Vector4, B: UE.Vector4, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static NotEqual_VectorVector(A: UE.Vector, B: UE.Vector, ErrorTolerance?: number /* = 0.000100 */) : boolean;
        static NotEqualExactly_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D) : boolean;
        static NotEqualExactly_Vector4Vector4(A: UE.Vector4, B: UE.Vector4) : boolean;
        static NotEqualExactly_VectorVector(A: UE.Vector, B: UE.Vector) : boolean;
        static Now() : UE.DateTime;
        static Or_Int64Int64(A: bigint, B: bigint) : bigint;
        static Or_IntInt(A: number, B: number) : number;
        static Percent_ByteByte(A: number, B?: number /* = 1 */) : number;
        static Percent_FloatFloat(A: number, B?: number /* = 1.000000 */) : number;
        static Percent_IntInt(A: number, B?: number /* = 1 */) : number;
        static PerlinNoise1D(Value: number) : number;
        static PointsAreCoplanar(Points: TArray<UE.Vector>, Tolerance?: number /* = 0.100000 */) : boolean;
        static ProjectPointOnToPlane(Point: UE.Vector, PlaneBase: UE.Vector, PlaneNormal: UE.Vector) : UE.Vector;
        static ProjectVectorOnToPlane(V: UE.Vector, PlaneNormal: UE.Vector) : UE.Vector;
        static ProjectVectorOnToVector(V: UE.Vector, Target: UE.Vector) : UE.Vector;
        static Quat_AngularDistance(A: UE.Quat, B: UE.Quat) : number;
        static Quat_EnforceShortestArcWith(A: $Ref<UE.Quat>, B: UE.Quat) : void;
        static Quat_Euler(Q: UE.Quat) : UE.Vector;
        static Quat_Exp(Q: UE.Quat) : UE.Quat;
        static Quat_GetAngle(Q: UE.Quat) : number;
        static Quat_GetAxisX(Q: UE.Quat) : UE.Vector;
        static Quat_GetAxisY(Q: UE.Quat) : UE.Vector;
        static Quat_GetAxisZ(Q: UE.Quat) : UE.Vector;
        static Quat_GetRotationAxis(Q: UE.Quat) : UE.Vector;
        static Quat_Identity() : UE.Quat;
        static Quat_Inversed(Q: UE.Quat) : UE.Quat;
        static Quat_IsFinite(Q: UE.Quat) : boolean;
        static Quat_IsIdentity(Q: UE.Quat, Tolerance?: number /* = 0.000100 */) : boolean;
        static Quat_IsNonFinite(Q: UE.Quat) : boolean;
        static Quat_IsNormalized(Q: UE.Quat) : boolean;
        static Quat_Log(Q: UE.Quat) : UE.Quat;
        static Quat_MakeFromEuler(Euler: UE.Vector) : UE.Quat;
        static Quat_Normalize(Q: $Ref<UE.Quat>, Tolerance?: number /* = 0.000100 */) : void;
        static Quat_Normalized(Q: UE.Quat, Tolerance?: number /* = 0.000100 */) : UE.Quat;
        static Quat_RotateVector(Q: UE.Quat, V: UE.Vector) : UE.Vector;
        static Quat_Rotator(Q: UE.Quat) : UE.Rotator;
        static Quat_SetComponents(Q: $Ref<UE.Quat>, X: number, Y: number, Z: number, W: number) : void;
        static Quat_SetFromEuler(Q: $Ref<UE.Quat>, Euler: UE.Vector) : void;
        static Quat_Size(Q: UE.Quat) : number;
        static Quat_SizeSquared(Q: UE.Quat) : number;
        static Quat_UnrotateVector(Q: UE.Quat, V: UE.Vector) : UE.Vector;
        static Quat_VectorForward(Q: UE.Quat) : UE.Vector;
        static Quat_VectorRight(Q: UE.Quat) : UE.Vector;
        static Quat_VectorUp(Q: UE.Quat) : UE.Vector;
        static RadiansToDegrees(A: number) : number;
        static RandomBool() : boolean;
        static RandomBoolFromStream(Stream: UE.RandomStream) : boolean;
        static RandomBoolWithWeight(Weight: number) : boolean;
        static RandomBoolWithWeightFromStream(Weight: number, RandomStream: UE.RandomStream) : boolean;
        static RandomFloat() : number;
        static RandomFloatFromStream(Stream: UE.RandomStream) : number;
        static RandomFloatInRange(Min: number, Max: number) : number;
        static RandomFloatInRangeFromStream(Min: number, Max: number, Stream: UE.RandomStream) : number;
        static RandomInteger(Max: number) : number;
        static RandomInteger64(Max: bigint) : bigint;
        static RandomInteger64InRange(Min: bigint, Max: bigint) : bigint;
        static RandomIntegerFromStream(Max: number, Stream: UE.RandomStream) : number;
        static RandomIntegerInRange(Min: number, Max: number) : number;
        static RandomIntegerInRangeFromStream(Min: number, Max: number, Stream: UE.RandomStream) : number;
        static RandomPointInBoundingBox(Origin: UE.Vector, BoxExtent: UE.Vector) : UE.Vector;
        static RandomRotator(bRoll?: boolean /* = false */) : UE.Rotator;
        static RandomRotatorFromStream(bRoll: boolean, Stream: UE.RandomStream) : UE.Rotator;
        static RandomUnitVector() : UE.Vector;
        static RandomUnitVectorFromStream(Stream: UE.RandomStream) : UE.Vector;
        static RandomUnitVectorInConeInDegrees(ConeDir: UE.Vector, ConeHalfAngleInDegrees: number) : UE.Vector;
        static RandomUnitVectorInConeInDegreesFromStream(ConeDir: UE.Vector, ConeHalfAngleInDegrees: number, Stream: UE.RandomStream) : UE.Vector;
        static RandomUnitVectorInConeInRadians(ConeDir: UE.Vector, ConeHalfAngleInRadians: number) : UE.Vector;
        static RandomUnitVectorInConeInRadiansFromStream(ConeDir: UE.Vector, ConeHalfAngleInRadians: number, Stream: UE.RandomStream) : UE.Vector;
        static RandomUnitVectorInEllipticalConeInDegrees(ConeDir: UE.Vector, MaxYawInDegrees: number, MaxPitchInDegrees: number) : UE.Vector;
        static RandomUnitVectorInEllipticalConeInDegreesFromStream(ConeDir: UE.Vector, MaxYawInDegrees: number, MaxPitchInDegrees: number, Stream: UE.RandomStream) : UE.Vector;
        static RandomUnitVectorInEllipticalConeInRadians(ConeDir: UE.Vector, MaxYawInRadians: number, MaxPitchInRadians: number) : UE.Vector;
        static RandomUnitVectorInEllipticalConeInRadiansFromStream(ConeDir: UE.Vector, MaxYawInRadians: number, MaxPitchInRadians: number, Stream: UE.RandomStream) : UE.Vector;
        static REase(A: UE.Rotator, B: UE.Rotator, Alpha: number, bShortestPath: boolean, EasingFunc: UE.EEasingFunc, BlendExp?: number /* = 2.000000 */, Steps?: number /* = 2 */) : UE.Rotator;
        static ResetFloatSpringState(SpringState: $Ref<UE.FloatSpringState>) : void;
        static ResetRandomStream(Stream: UE.RandomStream) : void;
        static ResetVectorSpringState(SpringState: $Ref<UE.VectorSpringState>) : void;
        static RGBLinearToHSV(RGB: UE.LinearColor) : UE.LinearColor;
        static RGBToHSV(InColor: UE.LinearColor, H: $Ref<number>, S: $Ref<number>, V: $Ref<number>, A: $Ref<number>) : void;
        static RGBToHSV_Vector(RGB: UE.LinearColor, HSV: $Ref<UE.LinearColor>) : void;
        static RInterpTo(Current: UE.Rotator, Target: UE.Rotator, DeltaTime: number, InterpSpeed: number) : UE.Rotator;
        static RInterpTo_Constant(Current: UE.Rotator, Target: UE.Rotator, DeltaTime: number, InterpSpeed: number) : UE.Rotator;
        static RLerp(A: UE.Rotator, B: UE.Rotator, Alpha: number, bShortestPath: boolean) : UE.Rotator;
        static RotateAngleAxis(InVect: UE.Vector, AngleDeg: number, Axis: UE.Vector) : UE.Vector;
        static RotatorFromAxisAndAngle(Axis: UE.Vector, Angle: number) : UE.Rotator;
        static Round(A: number) : number;
        static Round64(A: number) : bigint;
        static SafeDivide(A: number, B: number) : number;
        static SeedRandomStream(Stream: $Ref<UE.RandomStream>) : void;
        static SelectClass(A: $Nullable<UE.Class>, B: $Nullable<UE.Class>, bSelectA: boolean) : UE.Class;
        static SelectColor(A: UE.LinearColor, B: UE.LinearColor, bPickA: boolean) : UE.LinearColor;
        static SelectFloat(A: number, B: number, bPickA: boolean) : number;
        static SelectInt(A: number, B: number, bPickA: boolean) : number;
        static SelectObject(A: $Nullable<UE.Object>, B: $Nullable<UE.Object>, bSelectA: boolean) : UE.Object;
        static SelectRotator(A: UE.Rotator, B: UE.Rotator, bPickA: boolean) : UE.Rotator;
        static SelectString(A: string, B: string, bPickA: boolean) : string;
        static SelectTransform(A: UE.Transform, B: UE.Transform, bPickA: boolean) : UE.Transform;
        static SelectVector(A: UE.Vector, B: UE.Vector, bPickA: boolean) : UE.Vector;
        static Set2D(A: $Ref<UE.Vector2D>, X: number, Y: number) : void;
        static SetRandomStreamSeed(Stream: $Ref<UE.RandomStream>, NewSeed: number) : void;
        static SignOfFloat(A: number) : number;
        static SignOfInteger(A: number) : number;
        static SignOfInteger64(A: bigint) : bigint;
        static Sin(A: number) : number;
        static Spherical2DToUnitCartesian(A: UE.Vector2D) : UE.Vector;
        static Sqrt(A: number) : number;
        static Square(A: number) : number;
        static Subtract_ByteByte(A: number, B?: number /* = 1 */) : number;
        static Subtract_DateTimeDateTime(A: UE.DateTime, B: UE.DateTime) : UE.Timespan;
        static Subtract_DateTimeTimespan(A: UE.DateTime, B: UE.Timespan) : UE.DateTime;
        static Subtract_FloatFloat(A: number, B?: number /* = 1.000000 */) : number;
        static Subtract_Int64Int64(A: bigint, B?: bigint /* = 1 */) : bigint;
        static Subtract_IntInt(A: number, B?: number /* = 1 */) : number;
        static Subtract_IntPointInt(A: UE.IntPoint, B: number) : UE.IntPoint;
        static Subtract_IntPointIntPoint(A: UE.IntPoint, B: UE.IntPoint) : UE.IntPoint;
        static Subtract_LinearColorLinearColor(A: UE.LinearColor, B: UE.LinearColor) : UE.LinearColor;
        static Subtract_QuatQuat(A: UE.Quat, B: UE.Quat) : UE.Quat;
        static Subtract_TimespanTimespan(A: UE.Timespan, B: UE.Timespan) : UE.Timespan;
        static Subtract_Vector2DFloat(A: UE.Vector2D, B: number) : UE.Vector2D;
        static Subtract_Vector2DVector2D(A: UE.Vector2D, B: UE.Vector2D) : UE.Vector2D;
        static Subtract_Vector4Vector4(A: UE.Vector4, B: UE.Vector4) : UE.Vector4;
        static Subtract_VectorFloat(A: UE.Vector, B: number) : UE.Vector;
        static Subtract_VectorInt(A: UE.Vector, B: number) : UE.Vector;
        static Subtract_VectorVector(A: UE.Vector, B: UE.Vector) : UE.Vector;
        static Tan(A: number) : number;
        static TEase(A: UE.Transform, B: UE.Transform, Alpha: number, EasingFunc: UE.EEasingFunc, BlendExp?: number /* = 2.000000 */, Steps?: number /* = 2 */) : UE.Transform;
        static TimespanFromString(TimespanString: string, Result: $Ref<UE.Timespan>) : boolean;
        static TimespanMaxValue() : UE.Timespan;
        static TimespanMinValue() : UE.Timespan;
        static TimespanRatio(A: UE.Timespan, B: UE.Timespan) : number;
        static TimespanZeroValue() : UE.Timespan;
        static TInterpTo(Current: UE.Transform, Target: UE.Transform, DeltaTime: number, InterpSpeed: number) : UE.Transform;
        static TLerp(A: UE.Transform, B: UE.Transform, Alpha: number, InterpMode?: UE.ELerpInterpolationMode /* = QuatInterp */) : UE.Transform;
        static Today() : UE.DateTime;
        static ToDirectionAndLength2D(A: UE.Vector2D, OutDir: $Ref<UE.Vector2D>, OutLength: $Ref<number>) : void;
        static ToRounded2D(A: UE.Vector2D) : UE.Vector2D;
        static ToSign2D(A: UE.Vector2D) : UE.Vector2D;
        static Transform_Determinant(Transform: UE.Transform) : number;
        static TransformDirection(T: UE.Transform, Direction: UE.Vector) : UE.Vector;
        static TransformLocation(T: UE.Transform, Location: UE.Vector) : UE.Vector;
        static TransformRotation(T: UE.Transform, Rotation: UE.Rotator) : UE.Rotator;
        static TransformVector4(Matrix: UE.Matrix, Vec4: UE.Vector4) : UE.Vector4;
        static UtcNow() : UE.DateTime;
        static VEase(A: UE.Vector, B: UE.Vector, Alpha: number, EasingFunc: UE.EEasingFunc, BlendExp?: number /* = 2.000000 */, Steps?: number /* = 2 */) : UE.Vector;
        static Vector2D_One() : UE.Vector2D;
        static Vector2D_Unit45Deg() : UE.Vector2D;
        static Vector2D_Zero() : UE.Vector2D;
        static Vector2DInterpTo(Current: UE.Vector2D, Target: UE.Vector2D, DeltaTime: number, InterpSpeed: number) : UE.Vector2D;
        static Vector2DInterpTo_Constant(Current: UE.Vector2D, Target: UE.Vector2D, DeltaTime: number, InterpSpeed: number) : UE.Vector2D;
        static Vector4_Assign(A: $Ref<UE.Vector4>, InVector: UE.Vector4) : void;
        static Vector4_CrossProduct3(A: UE.Vector4, B: UE.Vector4) : UE.Vector4;
        static Vector4_DotProduct(A: UE.Vector4, B: UE.Vector4) : number;
        static Vector4_DotProduct3(A: UE.Vector4, B: UE.Vector4) : number;
        static Vector4_IsNAN(A: UE.Vector4) : boolean;
        static Vector4_IsNearlyZero3(A: UE.Vector4, Tolerance?: number /* = 0.000100 */) : boolean;
        static Vector4_IsNormal3(A: UE.Vector4) : boolean;
        static Vector4_IsUnit3(A: UE.Vector4, SquaredLenthTolerance?: number /* = 0.000100 */) : boolean;
        static Vector4_IsZero(A: UE.Vector4) : boolean;
        static Vector4_MirrorByVector3(Direction: UE.Vector4, SurfaceNormal: UE.Vector4) : UE.Vector4;
        static Vector4_Negated(A: UE.Vector4) : UE.Vector4;
        static Vector4_Normal3(A: UE.Vector4, Tolerance?: number /* = 0.000100 */) : UE.Vector4;
        static Vector4_Normalize3(A: $Ref<UE.Vector4>, Tolerance?: number /* = 0.000000 */) : void;
        static Vector4_NormalUnsafe3(A: UE.Vector4) : UE.Vector4;
        static Vector4_Set(A: $Ref<UE.Vector4>, X: number, Y: number, Z: number, W: number) : void;
        static Vector4_Size(A: UE.Vector4) : number;
        static Vector4_Size3(A: UE.Vector4) : number;
        static Vector4_SizeSquared(A: UE.Vector4) : number;
        static Vector4_SizeSquared3(A: UE.Vector4) : number;
        static Vector4_Zero() : UE.Vector4;
        static Vector_AddBounded(A: $Ref<UE.Vector>, InAddVect: UE.Vector, InRadius: number) : void;
        static Vector_Assign(A: $Ref<UE.Vector>, InVector: UE.Vector) : void;
        static Vector_Backward() : UE.Vector;
        static Vector_BoundedToBox(InVect: UE.Vector, InBoxMin: UE.Vector, InBoxMax: UE.Vector) : UE.Vector;
        static Vector_BoundedToCube(InVect: UE.Vector, InRadius: number) : UE.Vector;
        static Vector_ClampSize2D(A: UE.Vector, Min: number, Max: number) : UE.Vector;
        static Vector_ClampSizeMax(A: UE.Vector, Max: number) : UE.Vector;
        static Vector_ClampSizeMax2D(A: UE.Vector, Max: number) : UE.Vector;
        static Vector_ComponentMax(A: UE.Vector, B: UE.Vector) : UE.Vector;
        static Vector_ComponentMin(A: UE.Vector, B: UE.Vector) : UE.Vector;
        static Vector_CosineAngle2D(A: UE.Vector, B: UE.Vector) : number;
        static Vector_Distance(V1: UE.Vector, V2: UE.Vector) : number;
        static Vector_Distance2D(V1: UE.Vector, V2: UE.Vector) : number;
        static Vector_Distance2DSquared(V1: UE.Vector, V2: UE.Vector) : number;
        static Vector_DistanceSquared(V1: UE.Vector, V2: UE.Vector) : number;
        static Vector_Down() : UE.Vector;
        static Vector_Forward() : UE.Vector;
        static Vector_GetAbs(A: UE.Vector) : UE.Vector;
        static Vector_GetAbsMax(A: UE.Vector) : number;
        static Vector_GetAbsMin(A: UE.Vector) : number;
        static Vector_GetProjection(A: UE.Vector) : UE.Vector;
        static Vector_GetSignVector(A: UE.Vector) : UE.Vector;
        static Vector_HeadingAngle(A: UE.Vector) : number;
        static Vector_IsNAN(A: UE.Vector) : boolean;
        static Vector_IsNearlyZero(A: UE.Vector, Tolerance?: number /* = 0.000100 */) : boolean;
        static Vector_IsNormal(A: UE.Vector) : boolean;
        static Vector_IsUniform(A: UE.Vector, Tolerance?: number /* = 0.000100 */) : boolean;
        static Vector_IsUnit(A: UE.Vector, SquaredLenthTolerance?: number /* = 0.000100 */) : boolean;
        static Vector_IsZero(A: UE.Vector) : boolean;
        static Vector_Left() : UE.Vector;
        static Vector_MirrorByPlane(A: UE.Vector, InPlane: UE.Plane) : UE.Vector;
        static Vector_Normal2D(A: UE.Vector, Tolerance?: number /* = 0.000100 */) : UE.Vector;
        static Vector_Normalize(A: $Ref<UE.Vector>, Tolerance?: number /* = 0.000000 */) : void;
        static Vector_NormalUnsafe(A: UE.Vector) : UE.Vector;
        static Vector_One() : UE.Vector;
        static Vector_ProjectOnToNormal(V: UE.Vector, InNormal: UE.Vector) : UE.Vector;
        static Vector_Reciprocal(A: UE.Vector) : UE.Vector;
        static Vector_Right() : UE.Vector;
        static Vector_Set(A: $Ref<UE.Vector>, X: number, Y: number, Z: number) : void;
        static Vector_SnappedToGrid(InVect: UE.Vector, InGridSize: number) : UE.Vector;
        static Vector_ToDegrees(A: UE.Vector) : UE.Vector;
        static Vector_ToRadians(A: UE.Vector) : UE.Vector;
        static Vector_UnitCartesianToSpherical(A: UE.Vector) : UE.Vector2D;
        static Vector_UnwindEuler(A: $Ref<UE.Vector>) : void;
        static Vector_Up() : UE.Vector;
        static Vector_Zero() : UE.Vector;
        static VectorSpringInterp(Current: UE.Vector, Target: UE.Vector, SpringState: $Ref<UE.VectorSpringState>, Stiffness: number, CriticalDampingFactor: number, DeltaTime: number, Mass?: number /* = 1.000000 */) : UE.Vector;
        static VInterpTo(Current: UE.Vector, Target: UE.Vector, DeltaTime: number, InterpSpeed: number) : UE.Vector;
        static VInterpTo_Constant(Current: UE.Vector, Target: UE.Vector, DeltaTime: number, InterpSpeed: number) : UE.Vector;
        static VLerp(A: UE.Vector, B: UE.Vector, Alpha: number) : UE.Vector;
        static VSize(A: UE.Vector) : number;
        static VSize2D(A: UE.Vector2D) : number;
        static VSize2DSquared(A: UE.Vector2D) : number;
        static VSizeSquared(A: UE.Vector) : number;
        static VSizeXY(A: UE.Vector) : number;
        static VSizeXYSquared(A: UE.Vector) : number;
        static WeightedMovingAverage_Float(CurrentSample: number, PreviousSample: number, Weight: number) : number;
        static WeightedMovingAverage_FRotator(CurrentSample: UE.Rotator, PreviousSample: UE.Rotator, Weight: number) : UE.Rotator;
        static WeightedMovingAverage_FVector(CurrentSample: UE.Vector, PreviousSample: UE.Vector, Weight: number) : UE.Vector;
        static Wrap(Value: number, Min: number, Max: number) : number;
        static Xor_Int64Int64(A: bigint, B: bigint) : bigint;
        static Xor_IntInt(A: number, B: number) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetMathLibrary;
        static Load(InName: string): KismetMathLibrary;
    
        __tid_KismetMathLibrary_0__: boolean;
    }
    
    class KismetNodeHelperLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static BitIsMarked(Data: number, Index: number) : boolean;
        static ClearAllBits(Data: $Ref<number>) : void;
        static ClearBit(Data: $Ref<number>, Index: number) : void;
        static GetEnumeratorName(Enum: $Nullable<UE.Enum>, EnumeratorValue: number) : string;
        static GetEnumeratorUserFriendlyName(Enum: $Nullable<UE.Enum>, EnumeratorValue: number) : string;
        static GetEnumeratorValueFromIndex(Enum: $Nullable<UE.Enum>, EnumeratorIndex: number) : number;
        static GetFirstUnmarkedBit(Data: number, StartIdx: number, NumBits: number) : number;
        static GetRandomUnmarkedBit(Data: number, StartIdx: number, NumBits: number) : number;
        static GetUnmarkedBit(Data: number, StartIdx: number, NumBits: number, bRandom: boolean) : number;
        static GetValidValue(Enum: $Nullable<UE.Enum>, EnumeratorValue: number) : number;
        static HasMarkedBit(Data: number, NumBits: number) : boolean;
        static HasUnmarkedBit(Data: number, NumBits: number) : boolean;
        static MarkBit(Data: $Ref<number>, Index: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetNodeHelperLibrary;
        static Load(InName: string): KismetNodeHelperLibrary;
    
        __tid_KismetNodeHelperLibrary_0__: boolean;
    }
    
    class ProcMeshTangent {
        constructor();
        constructor(TangentX: UE.Vector, bFlipTangentY: boolean);
        TangentX: UE.Vector;
        bFlipTangentY: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProcMeshTangent_0__: boolean;
    }
    
    class ProcMeshVertex {
        constructor();
        constructor(Position: UE.Vector, Normal: UE.Vector, Tangent: UE.ProcMeshTangent, Color: UE.Color, UV0: UE.Vector2D, UV1: UE.Vector2D, UV2: UE.Vector2D, UV3: UE.Vector2D);
        Position: UE.Vector;
        Normal: UE.Vector;
        Tangent: UE.ProcMeshTangent;
        Color: UE.Color;
        UV0: UE.Vector2D;
        UV1: UE.Vector2D;
        UV2: UE.Vector2D;
        UV3: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProcMeshVertex_0__: boolean;
    }
    
    class ProcMeshSection {
        constructor();
        constructor(ProcVertexBuffer: TArray<UE.ProcMeshVertex>, ProcIndexBuffer: TArray<number>, SectionLocalBox: UE.Box, bEnableCollision: boolean, bSectionVisible: boolean);
        ProcVertexBuffer: TArray<UE.ProcMeshVertex>;
        ProcIndexBuffer: TArray<number>;
        SectionLocalBox: UE.Box;
        bEnableCollision: boolean;
        bSectionVisible: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProcMeshSection_0__: boolean;
    }
    
    class ProceduralMeshComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseComplexAsSimpleCollision: boolean;
        bUseAsyncCooking: boolean;
        ProcMeshBodySetup: UE.BodySetup;
        ProcMeshSections: TArray<UE.ProcMeshSection>;
        CollisionConvexElems: TArray<UE.KConvexElem>;
        LocalBounds: UE.BoxSphereBounds;
        AsyncBodySetupQueue: TArray<UE.BodySetup>;
        AddCollisionConvexMesh(ConvexVerts: TArray<UE.Vector>) : void;
        ClearAllMeshSections() : void;
        ClearCollisionConvexMeshes() : void;
        ClearMeshSection(SectionIndex: number) : void;
        CreateMeshSection(SectionIndex: number, Vertices: TArray<UE.Vector>, Triangles: TArray<number>, Normals: TArray<UE.Vector>, UV0: TArray<UE.Vector2D>, VertexColors: TArray<UE.Color>, Tangents: TArray<UE.ProcMeshTangent>, bCreateCollision: boolean) : void;
        CreateMeshSection_LinearColor(SectionIndex: number, Vertices: TArray<UE.Vector>, Triangles: TArray<number>, Normals: TArray<UE.Vector>, UV0: TArray<UE.Vector2D>, UV1: TArray<UE.Vector2D>, UV2: TArray<UE.Vector2D>, UV3: TArray<UE.Vector2D>, VertexColors: TArray<UE.LinearColor>, Tangents: TArray<UE.ProcMeshTangent>, bCreateCollision: boolean) : void;
        GetNumSections() : number;
        IsMeshSectionVisible(SectionIndex: number) : boolean;
        SetMeshSectionVisible(SectionIndex: number, bNewVisibility: boolean) : void;
        UpdateMeshSection(SectionIndex: number, Vertices: TArray<UE.Vector>, Normals: TArray<UE.Vector>, UV0: TArray<UE.Vector2D>, VertexColors: TArray<UE.Color>, Tangents: TArray<UE.ProcMeshTangent>) : void;
        UpdateMeshSection_LinearColor(SectionIndex: number, Vertices: TArray<UE.Vector>, Normals: TArray<UE.Vector>, UV0: TArray<UE.Vector2D>, UV1: TArray<UE.Vector2D>, UV2: TArray<UE.Vector2D>, UV3: TArray<UE.Vector2D>, VertexColors: TArray<UE.LinearColor>, Tangents: TArray<UE.ProcMeshTangent>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProceduralMeshComponent;
        static Load(InName: string): ProceduralMeshComponent;
    
        __tid_ProceduralMeshComponent_0__: boolean;
    }
    
    class KismetProceduralMeshLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CalculateTangentsForMesh(Vertices: TArray<UE.Vector>, Triangles: TArray<number>, UVs: TArray<UE.Vector2D>, Normals: $Ref<TArray<UE.Vector>>, Tangents: $Ref<TArray<UE.ProcMeshTangent>>) : void;
        static ConvertQuadToTriangles(Triangles: $Ref<TArray<number>>, Vert0: number, Vert1: number, Vert2: number, Vert3: number) : void;
        static CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: $Nullable<UE.StaticMeshComponent>, LODIndex: number, ProcMeshComponent: $Nullable<UE.ProceduralMeshComponent>, bCreateCollision: boolean) : void;
        static CreateGridMeshSplit(NumX: number, NumY: number, Triangles: $Ref<TArray<number>>, Vertices: $Ref<TArray<UE.Vector>>, UVs: $Ref<TArray<UE.Vector2D>>, UV1s: $Ref<TArray<UE.Vector2D>>, GridSpacing?: number /* = 16.000000 */) : void;
        static CreateGridMeshTriangles(NumX: number, NumY: number, bWinding: boolean, Triangles: $Ref<TArray<number>>) : void;
        static CreateGridMeshWelded(NumX: number, NumY: number, Triangles: $Ref<TArray<number>>, Vertices: $Ref<TArray<UE.Vector>>, UVs: $Ref<TArray<UE.Vector2D>>, GridSpacing?: number /* = 16.000000 */) : void;
        static GenerateBoxMesh(BoxRadius: UE.Vector, Vertices: $Ref<TArray<UE.Vector>>, Triangles: $Ref<TArray<number>>, Normals: $Ref<TArray<UE.Vector>>, UVs: $Ref<TArray<UE.Vector2D>>, Tangents: $Ref<TArray<UE.ProcMeshTangent>>) : void;
        static GetSectionFromProceduralMesh(InProcMesh: $Nullable<UE.ProceduralMeshComponent>, SectionIndex: number, Vertices: $Ref<TArray<UE.Vector>>, Triangles: $Ref<TArray<number>>, Normals: $Ref<TArray<UE.Vector>>, UVs: $Ref<TArray<UE.Vector2D>>, Tangents: $Ref<TArray<UE.ProcMeshTangent>>) : void;
        static GetSectionFromStaticMesh(InMesh: $Nullable<UE.StaticMesh>, LODIndex: number, SectionIndex: number, Vertices: $Ref<TArray<UE.Vector>>, Triangles: $Ref<TArray<number>>, Normals: $Ref<TArray<UE.Vector>>, UVs: $Ref<TArray<UE.Vector2D>>, Tangents: $Ref<TArray<UE.ProcMeshTangent>>) : void;
        static SliceProceduralMesh(InProcMesh: $Nullable<UE.ProceduralMeshComponent>, PlanePosition: UE.Vector, PlaneNormal: UE.Vector, bCreateOtherHalf: boolean, OutOtherHalfProcMesh: $Ref<UE.ProceduralMeshComponent>, CapOption: UE.EProcMeshSliceCapOption, CapMaterial: $Nullable<UE.MaterialInterface>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetProceduralMeshLibrary;
        static Load(InName: string): KismetProceduralMeshLibrary;
    
        __tid_KismetProceduralMeshLibrary_0__: boolean;
    }
    
    class TextureRenderTargetVolume extends UE.TextureRenderTarget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SizeX: number;
        SizeY: number;
        SizeZ: number;
        ClearColor: UE.LinearColor;
        OverrideFormat: UE.EPixelFormat;
        bHDR: boolean;
        bForceLinearGamma: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTargetVolume;
        static Load(InName: string): TextureRenderTargetVolume;
    
        __tid_TextureRenderTargetVolume_0__: boolean;
    }
    
    class TextureRenderTarget2DArray extends UE.TextureRenderTarget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SizeX: number;
        SizeY: number;
        Slices: number;
        ClearColor: UE.LinearColor;
        OverrideFormat: UE.EPixelFormat;
        bHDR: boolean;
        bForceLinearGamma: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTarget2DArray;
        static Load(InName: string): TextureRenderTarget2DArray;
    
        __tid_TextureRenderTarget2DArray_0__: boolean;
    }
    
    class KismetRenderingLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static BeginDrawCanvasToRenderTarget(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, Canvas: $Ref<UE.Canvas>, Size: $Ref<UE.Vector2D>, Context: $Ref<UE.DrawToRenderTargetContext>) : void;
        static BreakSkinWeightInfo(InWeight: UE.SkelMeshSkinWeightInfo, Bone0: $Ref<number>, Weight0: $Ref<number>, Bone1: $Ref<number>, Weight1: $Ref<number>, Bone2: $Ref<number>, Weight2: $Ref<number>, Bone3: $Ref<number>, Weight3: $Ref<number>) : void;
        static ClearRenderTarget2D(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, ClearColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=0.000000,A=1.000000) */) : void;
        static ConvertRenderTargetToTexture2DEditorOnly(WorldContextObject: $Nullable<UE.Object>, RenderTarget: $Nullable<UE.TextureRenderTarget2D>, Texture: $Nullable<UE.Texture2D>) : void;
        static CreateRenderTarget2D(WorldContextObject: $Nullable<UE.Object>, Width?: number /* = 256 */, Height?: number /* = 256 */, Format?: UE.ETextureRenderTargetFormat /* = RTF_RGBA16f */, ClearColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=0.000000,A=1.000000) */, bAutoGenerateMipMaps?: boolean /* = false */) : UE.TextureRenderTarget2D;
        static CreateRenderTarget2DArray(WorldContextObject: $Nullable<UE.Object>, Width?: number /* = 256 */, Height?: number /* = 256 */, Slices?: number /* = 1 */, Format?: UE.ETextureRenderTargetFormat /* = RTF_RGBA16f */, ClearColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=0.000000,A=1.000000) */, bAutoGenerateMipMaps?: boolean /* = false */) : UE.TextureRenderTarget2DArray;
        static CreateRenderTargetVolume(WorldContextObject: $Nullable<UE.Object>, Width?: number /* = 16 */, Height?: number /* = 16 */, Depth?: number /* = 16 */, Format?: UE.ETextureRenderTargetFormat /* = RTF_RGBA16f */, ClearColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=0.000000,A=1.000000) */, bAutoGenerateMipMaps?: boolean /* = false */) : UE.TextureRenderTargetVolume;
        static DrawMaterialToRenderTarget(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, Material: $Nullable<UE.MaterialInterface>) : void;
        static EndDrawCanvasToRenderTarget(WorldContextObject: $Nullable<UE.Object>, Context: UE.DrawToRenderTargetContext) : void;
        static ExportRenderTarget(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, FilePath: string, FileName: string) : void;
        static ExportTexture2D(WorldContextObject: $Nullable<UE.Object>, Texture: $Nullable<UE.Texture2D>, FilePath: string, FileName: string) : void;
        static ImportBufferAsTexture2D(WorldContextObject: $Nullable<UE.Object>, Buffer: TArray<number>) : UE.Texture2D;
        static ImportFileAsTexture2D(WorldContextObject: $Nullable<UE.Object>, Filename: string) : UE.Texture2D;
        static MakeSkinWeightInfo(Bone0: number, Weight0: number, Bone1: number, Weight1: number, Bone2: number, Weight2: number, Bone3: number, Weight3: number) : UE.SkelMeshSkinWeightInfo;
        static ReadRenderTargetPixel(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, X: number, Y: number) : UE.Color;
        static ReadRenderTargetRawPixel(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, X: number, Y: number) : UE.LinearColor;
        static ReadRenderTargetRawUV(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, U: number, V: number) : UE.LinearColor;
        static ReadRenderTargetUV(WorldContextObject: $Nullable<UE.Object>, TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>, U: number, V: number) : UE.Color;
        static ReleaseRenderTarget2D(TextureRenderTarget: $Nullable<UE.TextureRenderTarget2D>) : void;
        static RenderTargetCreateStaticTexture2DEditorOnly(RenderTarget: $Nullable<UE.TextureRenderTarget2D>, Name?: string /* = "Texture" */, CompressionSettings?: UE.TextureCompressionSettings /* = TC_Default */, MipSettings?: UE.TextureMipGenSettings /* = TMGS_FromTextureGroup */) : UE.Texture2D;
        static SetCastInsetShadowForAllAttachments(PrimitiveComponent: $Nullable<UE.PrimitiveComponent>, bCastInsetShadow: boolean, bLightAttachmentsAsGroup: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetRenderingLibrary;
        static Load(InName: string): KismetRenderingLibrary;
    
        __tid_KismetRenderingLibrary_0__: boolean;
    }
    
    class KismetStringLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static BuildString_Bool(AppendTo: string, Prefix: string, InBool: boolean, Suffix: string) : string;
        static BuildString_Color(AppendTo: string, Prefix: string, InColor: UE.LinearColor, Suffix: string) : string;
        static BuildString_Float(AppendTo: string, Prefix: string, InFloat: number, Suffix: string) : string;
        static BuildString_Int(AppendTo: string, Prefix: string, InInt: number, Suffix: string) : string;
        static BuildString_IntVector(AppendTo: string, Prefix: string, InIntVector: UE.IntVector, Suffix: string) : string;
        static BuildString_Name(AppendTo: string, Prefix: string, InName: string, Suffix: string) : string;
        static BuildString_Object(AppendTo: string, Prefix: string, InObj: $Nullable<UE.Object>, Suffix: string) : string;
        static BuildString_Rotator(AppendTo: string, Prefix: string, InRot: UE.Rotator, Suffix: string) : string;
        static BuildString_Vector(AppendTo: string, Prefix: string, InVector: UE.Vector, Suffix: string) : string;
        static BuildString_Vector2d(AppendTo: string, Prefix: string, InVector2d: UE.Vector2D, Suffix: string) : string;
        static Concat_StrStr(A: string, B: string) : string;
        static Contains(SearchIn: string, Substring: string, bUseCase?: boolean /* = false */, bSearchFromEnd?: boolean /* = false */) : boolean;
        static Conv_BoolToString(InBool: boolean) : string;
        static Conv_ByteToString(InByte: number) : string;
        static Conv_ColorToString(InColor: UE.LinearColor) : string;
        static Conv_FloatToString(InFloat: number) : string;
        static Conv_IntPointToString(InIntPoint: UE.IntPoint) : string;
        static Conv_IntToString(InInt: number) : string;
        static Conv_IntVectorToString(InIntVec: UE.IntVector) : string;
        static Conv_MatrixToString(InMatrix: UE.Matrix) : string;
        static Conv_NameToString(InName: string) : string;
        static Conv_ObjectToString(InObj: $Nullable<UE.Object>) : string;
        static Conv_RotatorToString(InRot: UE.Rotator) : string;
        static Conv_StringToColor(InString: string, OutConvertedColor: $Ref<UE.LinearColor>, OutIsValid: $Ref<boolean>) : void;
        static Conv_StringToFloat(InString: string) : number;
        static Conv_StringToInt(InString: string) : number;
        static Conv_StringToName(InString: string) : string;
        static Conv_StringToRotator(InString: string, OutConvertedRotator: $Ref<UE.Rotator>, OutIsValid: $Ref<boolean>) : void;
        static Conv_StringToVector(InString: string, OutConvertedVector: $Ref<UE.Vector>, OutIsValid: $Ref<boolean>) : void;
        static Conv_StringToVector2D(InString: string, OutConvertedVector2D: $Ref<UE.Vector2D>, OutIsValid: $Ref<boolean>) : void;
        static Conv_TransformToString(InTrans: UE.Transform) : string;
        static Conv_Vector2dToString(InVec: UE.Vector2D) : string;
        static Conv_VectorToString(InVec: UE.Vector) : string;
        static CullArray(SourceString: string, InArray: $Ref<TArray<string>>) : number;
        static EndsWith(SourceString: string, InSuffix: string, SearchCase?: UE.ESearchCase /* = IgnoreCase */) : boolean;
        static EqualEqual_StriStri(A: string, B: string) : boolean;
        static EqualEqual_StrStr(A: string, B: string) : boolean;
        static FindSubstring(SearchIn: string, Substring: string, bUseCase?: boolean /* = false */, bSearchFromEnd?: boolean /* = false */, StartPosition?: number /* = -1 */) : number;
        static GetCharacterArrayFromString(SourceString: string) : TArray<string>;
        static GetCharacterAsNumber(SourceString: string, Index?: number /* = 0 */) : number;
        static GetSubstring(SourceString: string, StartIndex?: number /* = 0 */, Length?: number /* = 1 */) : string;
        static IsEmpty(InString: string) : boolean;
        static IsNumeric(SourceString: string) : boolean;
        static JoinStringArray(SourceArray: TArray<string>, Separator?: string /* = " " */) : string;
        static Left(SourceString: string, Count: number) : string;
        static LeftChop(SourceString: string, Count: number) : string;
        static LeftPad(SourceString: string, ChCount: number) : string;
        static Len(S: string) : number;
        static MatchesWildcard(SourceString: string, Wildcard: string, SearchCase?: UE.ESearchCase /* = IgnoreCase */) : boolean;
        static Mid(SourceString: string, Start: number, Count: number) : string;
        static NotEqual_StriStri(A: string, B: string) : boolean;
        static NotEqual_StrStr(A: string, B: string) : boolean;
        static ParseIntoArray(SourceString: string, Delimiter?: string /* = " " */, CullEmptyStrings?: boolean /* = true */) : TArray<string>;
        static Replace(SourceString: string, From: string, To: string, SearchCase?: UE.ESearchCase /* = IgnoreCase */) : string;
        static ReplaceInline(SourceString: $Ref<string>, SearchText: string, ReplacementText: string, SearchCase?: UE.ESearchCase /* = IgnoreCase */) : number;
        static Reverse(SourceString: string) : string;
        static Right(SourceString: string, Count: number) : string;
        static RightChop(SourceString: string, Count: number) : string;
        static RightPad(SourceString: string, ChCount: number) : string;
        static Split(SourceString: string, InStr: string, LeftS: $Ref<string>, RightS: $Ref<string>, SearchCase?: UE.ESearchCase /* = IgnoreCase */, SearchDir?: UE.ESearchDir /* = FromStart */) : boolean;
        static StartsWith(SourceString: string, InPrefix: string, SearchCase?: UE.ESearchCase /* = IgnoreCase */) : boolean;
        static TimeSecondsToString(InSeconds: number) : string;
        static ToLower(SourceString: string) : string;
        static ToUpper(SourceString: string) : string;
        static Trim(SourceString: string) : string;
        static TrimTrailing(SourceString: string) : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetStringLibrary;
        static Load(InName: string): KismetStringLibrary;
    
        __tid_KismetStringLibrary_0__: boolean;
    }
    
    class KismetStringTableLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetKeysFromStringTable(TableId: string) : TArray<string>;
        static GetMetaDataIdsFromStringTableEntry(TableId: string, Key: string) : TArray<string>;
        static GetRegisteredStringTables() : TArray<string>;
        static GetTableEntryMetaData(TableId: string, Key: string, MetaDataId: string) : string;
        static GetTableEntrySourceString(TableId: string, Key: string) : string;
        static GetTableNamespace(TableId: string) : string;
        static IsRegisteredTableEntry(TableId: string, Key: string) : boolean;
        static IsRegisteredTableId(TableId: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetStringTableLibrary;
        static Load(InName: string): KismetStringTableLibrary;
    
        __tid_KismetStringTableLibrary_0__: boolean;
    }
    
    class UserActivity {
        constructor();
        constructor(ActionName: string);
        ActionName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UserActivity_0__: boolean;
    }
    
    class TimerHandle {
        constructor();
        constructor(Handle: bigint);
        Handle: bigint;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimerHandle_0__: boolean;
    }
    
    class KismetSystemLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnAssetClassLoaded__DelegateSignature(Loaded: $Nullable<UE.Class>) : void;
        OnAssetLoaded__DelegateSignature(Loaded: $Nullable<UE.Object>) : void;
        static AddFloatHistorySample(Value: number, FloatHistory: UE.DebugFloatHistory) : UE.DebugFloatHistory;
        static BeginTransaction(Context: string, Description: string, PrimaryObject: $Nullable<UE.Object>) : number;
        static BoxOverlapActors(WorldContextObject: $Nullable<UE.Object>, BoxPos: UE.Vector, BoxExtent: UE.Vector, ObjectTypes: TArray<UE.EObjectTypeQuery>, ActorClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutActors: $Ref<TArray<UE.Actor>>) : boolean;
        static BoxOverlapComponents(WorldContextObject: $Nullable<UE.Object>, BoxPos: UE.Vector, Extent: UE.Vector, ObjectTypes: TArray<UE.EObjectTypeQuery>, ComponentClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutComponents: $Ref<TArray<UE.PrimitiveComponent>>) : boolean;
        static BoxTraceMulti(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, HalfSize: UE.Vector, Orientation: UE.Rotator, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static BoxTraceMultiByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, HalfSize: UE.Vector, Orientation: UE.Rotator, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static BoxTraceMultiForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, HalfSize: UE.Vector, Orientation: UE.Rotator, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static BoxTraceSingle(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, HalfSize: UE.Vector, Orientation: UE.Rotator, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static BoxTraceSingleByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, HalfSize: UE.Vector, Orientation: UE.Rotator, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static BoxTraceSingleForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, HalfSize: UE.Vector, Orientation: UE.Rotator, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static BreakSoftClassPath(InSoftClassPath: UE.SoftClassPath, PathString: $Ref<string>) : void;
        static BreakSoftObjectPath(InSoftObjectPath: UE.SoftObjectPath, PathString: $Ref<string>) : void;
        static CancelTransaction(Index: number) : void;
        static CanLaunchURL(URL: string) : boolean;
        static CapsuleOverlapActors(WorldContextObject: $Nullable<UE.Object>, CapsulePos: UE.Vector, Radius: number, HalfHeight: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, ActorClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutActors: $Ref<TArray<UE.Actor>>) : boolean;
        static CapsuleOverlapComponents(WorldContextObject: $Nullable<UE.Object>, CapsulePos: UE.Vector, Radius: number, HalfHeight: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, ComponentClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutComponents: $Ref<TArray<UE.PrimitiveComponent>>) : boolean;
        static CapsuleTraceMulti(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, HalfHeight: number, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static CapsuleTraceMultiByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, HalfHeight: number, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static CapsuleTraceMultiForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, HalfHeight: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static CapsuleTraceSingle(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, HalfHeight: number, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static CapsuleTraceSingleByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, HalfHeight: number, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static CapsuleTraceSingleForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, HalfHeight: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static CollectGarbage() : void;
        static ComponentOverlapActors(Component: $Nullable<UE.PrimitiveComponent>, ComponentTransform: UE.Transform, ObjectTypes: TArray<UE.EObjectTypeQuery>, ActorClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutActors: $Ref<TArray<UE.Actor>>) : boolean;
        static ComponentOverlapComponents(Component: $Nullable<UE.PrimitiveComponent>, ComponentTransform: UE.Transform, ObjectTypes: TArray<UE.EObjectTypeQuery>, ComponentClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutComponents: $Ref<TArray<UE.PrimitiveComponent>>) : boolean;
        static ControlScreensaver(bAllowScreenSaver: boolean) : void;
        static Conv_ClassToSoftClassReference(Class: UE.Class) : TSoftClassPtr<UE.Object>;
        static Conv_InterfaceToObject(Interface: Interface) : UE.Object;
        static Conv_ObjectToSoftObjectReference(Object: $Nullable<UE.Object>) : TSoftObjectPtr<UE.Object>;
        static Conv_PrimaryAssetIdToString(PrimaryAssetId: UE.PrimaryAssetId) : string;
        static Conv_PrimaryAssetTypeToString(PrimaryAssetType: UE.PrimaryAssetType) : string;
        static Conv_SoftClassPathToSoftClassRef(SoftClassPath: UE.SoftClassPath) : TSoftClassPtr<UE.Object>;
        static Conv_SoftClassReferenceToClass(SoftClass: TSoftClassPtr<UE.Object>) : UE.Class;
        static Conv_SoftClassReferenceToString(SoftClassReference: TSoftClassPtr<UE.Object>) : string;
        static Conv_SoftObjectReferenceToObject(SoftObject: TSoftObjectPtr<UE.Object>) : UE.Object;
        static Conv_SoftObjectReferenceToString(SoftObjectReference: TSoftObjectPtr<UE.Object>) : string;
        static Conv_SoftObjPathToSoftObjRef(SoftObjectPath: UE.SoftObjectPath) : TSoftObjectPtr<UE.Object>;
        static ConvertToAbsolutePath(Filename: string) : string;
        static ConvertToRelativePath(Filename: string) : string;
        static CreateCopyForUndoBuffer(ObjectToModify: $Nullable<UE.Object>) : void;
        static Delay(WorldContextObject: $Nullable<UE.Object>, Duration: number, LatentInfo: UE.LatentActionInfo) : void;
        static DoesImplementInterface(TestObject: $Nullable<UE.Object>, Interface: $Nullable<UE.Class>) : boolean;
        static DrawDebugArrow(WorldContextObject: $Nullable<UE.Object>, LineStart: UE.Vector, LineEnd: UE.Vector, ArrowSize: number, LineColor: UE.LinearColor, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugBox(WorldContextObject: $Nullable<UE.Object>, Center: UE.Vector, Extent: UE.Vector, LineColor: UE.LinearColor, Rotation?: UE.Rotator /* =  */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugCamera(CameraActor: $Nullable<UE.CameraActor>, CameraColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */) : void;
        static DrawDebugCapsule(WorldContextObject: $Nullable<UE.Object>, Center: UE.Vector, HalfHeight: number, Radius: number, Rotation: UE.Rotator, LineColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugCircle(WorldContextObject: $Nullable<UE.Object>, Center: UE.Vector, Radius: number, NumSegments?: number /* = 12 */, LineColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */, YAxis?: UE.Vector /* = 0.000000,1.000000,0.000000 */, ZAxis?: UE.Vector /* = 0.000000,0.000000,1.000000 */, bDrawAxis?: boolean /* = false */) : void;
        static DrawDebugCone(WorldContextObject: $Nullable<UE.Object>, Origin: UE.Vector, Direction: UE.Vector, Length: number, AngleWidth: number, AngleHeight: number, NumSides: number, LineColor: UE.LinearColor, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugConeInDegrees(WorldContextObject: $Nullable<UE.Object>, Origin: UE.Vector, Direction: UE.Vector, Length?: number /* = 100.000000 */, AngleWidth?: number /* = 45.000000 */, AngleHeight?: number /* = 45.000000 */, NumSides?: number /* = 12 */, LineColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugCoordinateSystem(WorldContextObject: $Nullable<UE.Object>, AxisLoc: UE.Vector, AxisRot: UE.Rotator, Scale?: number /* = 1.000000 */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugCylinder(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius?: number /* = 100.000000 */, Segments?: number /* = 12 */, LineColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugFloatHistoryLocation(WorldContextObject: $Nullable<UE.Object>, FloatHistory: UE.DebugFloatHistory, DrawLocation: UE.Vector, DrawSize: UE.Vector2D, DrawColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */) : void;
        static DrawDebugFloatHistoryTransform(WorldContextObject: $Nullable<UE.Object>, FloatHistory: UE.DebugFloatHistory, DrawTransform: UE.Transform, DrawSize: UE.Vector2D, DrawColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */) : void;
        static DrawDebugFrustum(WorldContextObject: $Nullable<UE.Object>, FrustumTransform: UE.Transform, FrustumColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugLine(WorldContextObject: $Nullable<UE.Object>, LineStart: UE.Vector, LineEnd: UE.Vector, LineColor: UE.LinearColor, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugPlane(WorldContextObject: $Nullable<UE.Object>, PlaneCoordinates: UE.Plane, Location: UE.Vector, Size: number, PlaneColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */) : void;
        static DrawDebugPoint(WorldContextObject: $Nullable<UE.Object>, Position: UE.Vector, Size: number, PointColor: UE.LinearColor, Duration?: number /* = 0.000000 */) : void;
        static DrawDebugSphere(WorldContextObject: $Nullable<UE.Object>, Center: UE.Vector, Radius?: number /* = 100.000000 */, Segments?: number /* = 12 */, LineColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */, Thickness?: number /* = 0.000000 */) : void;
        static DrawDebugString(WorldContextObject: $Nullable<UE.Object>, TextLocation: UE.Vector, Text: string, TestBaseActor?: UE.Actor /* = None */, TextColor?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */) : void;
        static EndTransaction() : number;
        static EqualEqual_PrimaryAssetId(A: UE.PrimaryAssetId, B: UE.PrimaryAssetId) : boolean;
        static EqualEqual_PrimaryAssetType(A: UE.PrimaryAssetType, B: UE.PrimaryAssetType) : boolean;
        static EqualEqual_SoftClassReference(A: TSoftClassPtr<UE.Object>, B: TSoftClassPtr<UE.Object>) : boolean;
        static EqualEqual_SoftObjectReference(A: TSoftObjectPtr<UE.Object>, B: TSoftObjectPtr<UE.Object>) : boolean;
        static ExecuteConsoleCommand(WorldContextObject: $Nullable<UE.Object>, Command: string, SpecificPlayer?: UE.PlayerController /* = None */) : void;
        static FlushDebugStrings(WorldContextObject: $Nullable<UE.Object>) : void;
        static FlushPersistentDebugLines(WorldContextObject: $Nullable<UE.Object>) : void;
        static ForceCloseAdBanner() : void;
        static GetActorBounds(Actor: $Nullable<UE.Actor>, Origin: $Ref<UE.Vector>, BoxExtent: $Ref<UE.Vector>) : void;
        static GetActorListFromComponentList(ComponentList: TArray<UE.PrimitiveComponent>, ActorClassFilter: $Nullable<UE.Class>, OutActorList: $Ref<TArray<UE.Actor>>) : void;
        static GetAdIDCount() : number;
        static GetClassDisplayName(Class: $Nullable<UE.Class>) : string;
        static GetClassFromPrimaryAssetId(PrimaryAssetId: UE.PrimaryAssetId) : UE.Class;
        static GetCommandLine() : string;
        static GetComponentBounds(Component: $Nullable<UE.SceneComponent>, Origin: $Ref<UE.Vector>, BoxExtent: $Ref<UE.Vector>, SphereRadius: $Ref<number>) : void;
        static GetConsoleVariableBoolValue(VariableName: string) : boolean;
        static GetConsoleVariableFloatValue(VariableName: string) : number;
        static GetConsoleVariableIntValue(VariableName: string) : number;
        static GetConvenientWindowedResolutions(Resolutions: $Ref<TArray<UE.IntPoint>>) : boolean;
        static GetCurrentBundleState(PrimaryAssetId: UE.PrimaryAssetId, bForceCurrentState: boolean, OutBundles: $Ref<TArray<string>>) : boolean;
        static GetDefaultLanguage() : string;
        static GetDefaultLocale() : string;
        static GetDeviceId() : string;
        static GetDisplayName(Object: $Nullable<UE.Object>) : string;
        static GetEditorProperty(Object: $Nullable<UE.Object>, PropertyName: string, PropertyValue: $Ref<number>) : boolean;
        static GetEngineVersion() : string;
        static GetFrameCount() : bigint;
        static GetGameBundleId() : string;
        static GetGameName() : string;
        static GetGamepadButtonGlyph(ButtonKey: string, ControllerIndex: number) : UE.Texture2D;
        static GetGamepadControllerName(ControllerId: number) : string;
        static GetGameTimeInSeconds(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetLocalCurrencyCode() : string;
        static GetLocalCurrencySymbol() : string;
        static GetMinYResolutionFor3DView() : number;
        static GetMinYResolutionForUI() : number;
        static GetObjectFromPrimaryAssetId(PrimaryAssetId: UE.PrimaryAssetId) : UE.Object;
        static GetObjectName(Object: $Nullable<UE.Object>) : string;
        static GetOuterObject(Object: $Nullable<UE.Object>) : UE.Object;
        static GetPathName(Object: $Nullable<UE.Object>) : string;
        static GetPlatformUserDir() : string;
        static GetPlatformUserName() : string;
        static GetPreferredLanguages() : TArray<string>;
        static GetPrimaryAssetIdFromClass(Class: $Nullable<UE.Class>) : UE.PrimaryAssetId;
        static GetPrimaryAssetIdFromObject(Object: $Nullable<UE.Object>) : UE.PrimaryAssetId;
        static GetPrimaryAssetIdFromSoftClassReference(SoftClassReference: TSoftClassPtr<UE.Object>) : UE.PrimaryAssetId;
        static GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: TSoftObjectPtr<UE.Object>) : UE.PrimaryAssetId;
        static GetPrimaryAssetIdList(PrimaryAssetType: UE.PrimaryAssetType, OutPrimaryAssetIdList: $Ref<TArray<UE.PrimaryAssetId>>) : void;
        static GetPrimaryAssetsWithBundleState(RequiredBundles: TArray<string>, ExcludedBundles: TArray<string>, ValidTypes: TArray<UE.PrimaryAssetType>, bForceCurrentState: boolean, OutPrimaryAssetIdList: $Ref<TArray<UE.PrimaryAssetId>>) : void;
        static GetProjectContentDirectory() : string;
        static GetProjectDirectory() : string;
        static GetProjectSavedDirectory() : string;
        static GetRenderingDetailMode() : number;
        static GetRenderingMaterialQualityLevel() : number;
        static GetSoftClassReferenceFromPrimaryAssetId(PrimaryAssetId: UE.PrimaryAssetId) : TSoftClassPtr<UE.Object>;
        static GetSoftObjectReferenceFromPrimaryAssetId(PrimaryAssetId: UE.PrimaryAssetId) : TSoftObjectPtr<UE.Object>;
        static GetSupportedFullscreenResolutions(Resolutions: $Ref<TArray<UE.IntPoint>>) : boolean;
        static GetSystemPath(Object: $Nullable<UE.Object>) : string;
        static GetUniqueDeviceId() : string;
        static GetVolumeButtonsHandledBySystem() : boolean;
        static HideAdBanner() : void;
        static IsControllerAssignedToGamepad(ControllerId: number) : boolean;
        static IsDedicatedServer(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static IsInterstitialAdAvailable() : boolean;
        static IsInterstitialAdRequested() : boolean;
        static IsLoggedIn(SpecificPlayer: $Nullable<UE.PlayerController>) : boolean;
        static IsPackagedForDistribution() : boolean;
        static IsScreensaverEnabled() : boolean;
        static IsServer(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static IsSplitScreen(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static IsStandalone(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static IsUnattended() : boolean;
        static IsValid(Object: $Nullable<UE.Object>) : boolean;
        static IsValidClass(Class: $Nullable<UE.Class>) : boolean;
        static IsValidPrimaryAssetId(PrimaryAssetId: UE.PrimaryAssetId) : boolean;
        static IsValidPrimaryAssetType(PrimaryAssetType: UE.PrimaryAssetType) : boolean;
        static IsValidSoftClassReference(SoftClassReference: TSoftClassPtr<UE.Object>) : boolean;
        static IsValidSoftObjectReference(SoftObjectReference: TSoftObjectPtr<UE.Object>) : boolean;
        static K2_ClearAndInvalidateTimerHandle(WorldContextObject: $Nullable<UE.Object>, Handle: $Ref<UE.TimerHandle>) : void;
        static K2_ClearTimer(Object: $Nullable<UE.Object>, FunctionName: string) : void;
        static K2_ClearTimerDelegate(Delegate: $Delegate<() => void>) : void;
        static K2_ClearTimerHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : void;
        static K2_GetTimerElapsedTime(Object: $Nullable<UE.Object>, FunctionName: string) : number;
        static K2_GetTimerElapsedTimeDelegate(Delegate: $Delegate<() => void>) : number;
        static K2_GetTimerElapsedTimeHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : number;
        static K2_GetTimerRemainingTime(Object: $Nullable<UE.Object>, FunctionName: string) : number;
        static K2_GetTimerRemainingTimeDelegate(Delegate: $Delegate<() => void>) : number;
        static K2_GetTimerRemainingTimeHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : number;
        static K2_InvalidateTimerHandle(Handle: $Ref<UE.TimerHandle>) : UE.TimerHandle;
        static K2_IsTimerActive(Object: $Nullable<UE.Object>, FunctionName: string) : boolean;
        static K2_IsTimerActiveDelegate(Delegate: $Delegate<() => void>) : boolean;
        static K2_IsTimerActiveHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : boolean;
        static K2_IsTimerPaused(Object: $Nullable<UE.Object>, FunctionName: string) : boolean;
        static K2_IsTimerPausedDelegate(Delegate: $Delegate<() => void>) : boolean;
        static K2_IsTimerPausedHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : boolean;
        static K2_IsValidTimerHandle(Handle: UE.TimerHandle) : boolean;
        static K2_PauseTimer(Object: $Nullable<UE.Object>, FunctionName: string) : void;
        static K2_PauseTimerDelegate(Delegate: $Delegate<() => void>) : void;
        static K2_PauseTimerHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : void;
        static K2_SetTimer(Object: $Nullable<UE.Object>, FunctionName: string, Time: number, bLooping: boolean, InitialStartDelay?: number /* = 0.000000 */, InitialStartDelayVariance?: number /* = 0.000000 */) : UE.TimerHandle;
        static K2_SetTimerDelegate(Delegate: $Delegate<() => void>, Time: number, bLooping: boolean, InitialStartDelay?: number /* = 0.000000 */, InitialStartDelayVariance?: number /* = 0.000000 */) : UE.TimerHandle;
        static K2_TimerExists(Object: $Nullable<UE.Object>, FunctionName: string) : boolean;
        static K2_TimerExistsDelegate(Delegate: $Delegate<() => void>) : boolean;
        static K2_TimerExistsHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : boolean;
        static K2_UnPauseTimer(Object: $Nullable<UE.Object>, FunctionName: string) : void;
        static K2_UnPauseTimerDelegate(Delegate: $Delegate<() => void>) : void;
        static K2_UnPauseTimerHandle(WorldContextObject: $Nullable<UE.Object>, Handle: UE.TimerHandle) : void;
        static LaunchURL(URL: string) : void;
        static LineTraceMulti(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static LineTraceMultiByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static LineTraceMultiForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static LineTraceSingle(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static LineTraceSingleByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static LineTraceSingleForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static LoadAsset(WorldContextObject: $Nullable<UE.Object>, Asset: TSoftObjectPtr<UE.Object>, OnLoaded: $Delegate<(Loaded: $Nullable<UE.Object>) => void>, LatentInfo: UE.LatentActionInfo) : void;
        static LoadAsset_Blocking(Asset: TSoftObjectPtr<UE.Object>) : UE.Object;
        static LoadAssetClass(WorldContextObject: $Nullable<UE.Object>, AssetClass: TSoftClassPtr<UE.Object>, OnLoaded: $Delegate<(Loaded: $Nullable<UE.Class>) => void>, LatentInfo: UE.LatentActionInfo) : void;
        static LoadClassAsset_Blocking(AssetClass: TSoftClassPtr<UE.Object>) : UE.Class;
        static LoadInterstitialAd(AdIdIndex: number) : void;
        static MakeLiteralBool(Value: boolean) : boolean;
        static MakeLiteralByte(Value: number) : number;
        static MakeLiteralFloat(Value: number) : number;
        static MakeLiteralInt(Value: number) : number;
        static MakeLiteralName(Value: string) : string;
        static MakeLiteralString(Value: string) : string;
        static MakeLiteralText(Value: string) : string;
        static MakeSoftClassPath(PathString: string) : UE.SoftClassPath;
        static MakeSoftObjectPath(PathString: string) : UE.SoftObjectPath;
        static MoveComponentTo(Component: $Nullable<UE.SceneComponent>, TargetRelativeLocation: UE.Vector, TargetRelativeRotation: UE.Rotator, bEaseOut: boolean, bEaseIn: boolean, OverTime: number, bForceShortestRotationPath: boolean, MoveAction: UE.EMoveComponentAction, LatentInfo: UE.LatentActionInfo) : void;
        static NormalizeFilename(InFilename: string) : string;
        static NotEqual_PrimaryAssetId(A: UE.PrimaryAssetId, B: UE.PrimaryAssetId) : boolean;
        static NotEqual_PrimaryAssetType(A: UE.PrimaryAssetType, B: UE.PrimaryAssetType) : boolean;
        static NotEqual_SoftClassReference(A: TSoftClassPtr<UE.Object>, B: TSoftClassPtr<UE.Object>) : boolean;
        static NotEqual_SoftObjectReference(A: TSoftObjectPtr<UE.Object>, B: TSoftObjectPtr<UE.Object>) : boolean;
        static ParseCommandLine(InCmdLine: string, OutTokens: $Ref<TArray<string>>, OutSwitches: $Ref<TArray<string>>, OutParams: $Ref<TMap<string, string>>) : void;
        static ParseParam(InString: string, InParam: string) : boolean;
        static ParseParamValue(InString: string, InParam: string, OutValue: $Ref<string>) : boolean;
        static PrintString(WorldContextObject: $Nullable<UE.Object>, InString?: string /* = "Hello" */, bPrintToScreen?: boolean /* = true */, bPrintToLog?: boolean /* = true */, TextColor?: UE.LinearColor /* = (R=0.000000,G=0.660000,B=1.000000,A=1.000000) */, Duration?: number /* = 2.000000 */) : void;
        static PrintText(WorldContextObject: $Nullable<UE.Object>, InText?: string /* = "INVTEXT("Hello")" */, bPrintToScreen?: boolean /* = true */, bPrintToLog?: boolean /* = true */, TextColor?: UE.LinearColor /* = (R=0.000000,G=0.660000,B=1.000000,A=1.000000) */, Duration?: number /* = 2.000000 */) : void;
        static PrintWarning(InString: string) : void;
        static QuitEditor() : void;
        static QuitGame(WorldContextObject: $Nullable<UE.Object>, SpecificPlayer: $Nullable<UE.PlayerController>, QuitPreference: UE.EQuitPreference, bIgnorePlatformRestrictions: boolean) : void;
        static RegisterForRemoteNotifications() : void;
        static ResetGamepadAssignments() : void;
        static ResetGamepadAssignmentToController(ControllerId: number) : void;
        static RetriggerableDelay(WorldContextObject: $Nullable<UE.Object>, Duration: number, LatentInfo: UE.LatentActionInfo) : void;
        static SetBoolPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: boolean) : void;
        static SetBytePropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: number) : void;
        static SetClassPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: $Nullable<UE.Class>) : void;
        static SetCollisionProfileNameProperty(Object: $Nullable<UE.Object>, PropertyName: string, Value: UE.CollisionProfileName) : void;
        static SetColorPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: UE.Color) : void;
        static SetEditorProperty(Object: $Nullable<UE.Object>, PropertyName: string, PropertyValue: number, ChangeNotifyMode: UE.EPropertyAccessChangeNotifyMode) : boolean;
        static SetFloatPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: number) : void;
        static SetGamepadsBlockDeviceFeedback(bBlock: boolean) : void;
        static SetInt64PropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: bigint) : void;
        static SetInterfacePropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: Interface) : void;
        static SetIntPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: number) : void;
        static SetLinearColorPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: UE.LinearColor) : void;
        static SetNamePropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: string) : void;
        static SetObjectPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: $Nullable<UE.Object>) : void;
        static SetRotatorPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: UE.Rotator) : void;
        static SetSoftClassPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: TSoftClassPtr<UE.Object>) : void;
        static SetSoftObjectPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: TSoftObjectPtr<UE.Object>) : void;
        static SetStringPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: string) : void;
        static SetStructurePropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: UE.GenericStruct) : void;
        static SetSuppressViewportTransitionMessage(WorldContextObject: $Nullable<UE.Object>, bState: boolean) : void;
        static SetTextPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: string) : void;
        static SetTransformPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: UE.Transform) : void;
        static SetUserActivity(UserActivity: UE.UserActivity) : void;
        static SetVectorPropertyByName(Object: $Nullable<UE.Object>, PropertyName: string, Value: UE.Vector) : void;
        static SetVolumeButtonsHandledBySystem(bEnabled: boolean) : void;
        static SetWindowTitle(Title: string) : void;
        static ShowAdBanner(AdIdIndex: number, bShowOnBottomOfScreen: boolean) : void;
        static ShowInterstitialAd() : void;
        static ShowPlatformSpecificAchievementsScreen(SpecificPlayer: $Nullable<UE.PlayerController>) : void;
        static ShowPlatformSpecificLeaderboardScreen(CategoryName: string) : void;
        static SnapshotObject(Object: $Nullable<UE.Object>) : void;
        static SphereOverlapActors(WorldContextObject: $Nullable<UE.Object>, SpherePos: UE.Vector, SphereRadius: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, ActorClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutActors: $Ref<TArray<UE.Actor>>) : boolean;
        static SphereOverlapComponents(WorldContextObject: $Nullable<UE.Object>, SpherePos: UE.Vector, SphereRadius: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, ComponentClassFilter: $Nullable<UE.Class>, ActorsToIgnore: TArray<UE.Actor>, OutComponents: $Ref<TArray<UE.PrimitiveComponent>>) : boolean;
        static SphereTraceMulti(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static SphereTraceMultiByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static SphereTraceMultiForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHits: $Ref<TArray<UE.HitResult>>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static SphereTraceSingle(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, TraceChannel: UE.ETraceTypeQuery, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static SphereTraceSingleByProfile(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, ProfileName: string, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static SphereTraceSingleForObjects(WorldContextObject: $Nullable<UE.Object>, Start: UE.Vector, End: UE.Vector, Radius: number, ObjectTypes: TArray<UE.EObjectTypeQuery>, bTraceComplex: boolean, ActorsToIgnore: TArray<UE.Actor>, DrawDebugType: UE.EDrawDebugTrace, OutHit: $Ref<UE.HitResult>, bIgnoreSelf: boolean, TraceColor?: UE.LinearColor /* = (R=1.000000,G=0.000000,B=0.000000,A=1.000000) */, TraceHitColor?: UE.LinearColor /* = (R=0.000000,G=1.000000,B=0.000000,A=1.000000) */, DrawTime?: number /* = 5.000000 */) : boolean;
        static StackTrace() : void;
        static TransactObject(Object: $Nullable<UE.Object>) : void;
        static UnloadPrimaryAsset(PrimaryAssetId: UE.PrimaryAssetId) : void;
        static UnloadPrimaryAssetList(PrimaryAssetIdList: TArray<UE.PrimaryAssetId>) : void;
        static UnregisterForRemoteNotifications() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetSystemLibrary;
        static Load(InName: string): KismetSystemLibrary;
    
        __tid_KismetSystemLibrary_0__: boolean;
    }
    
    class PolyglotTextData {
        constructor();
        constructor(Category: UE.ELocalizedTextSourceCategory, NativeCulture: string, Namespace: string, Key: string, NativeString: string, LocalizedStrings: TMap<string, string>, bIsMinimalPatch: boolean, CachedText: string);
        Category: UE.ELocalizedTextSourceCategory;
        NativeCulture: string;
        Namespace: string;
        Key: string;
        NativeString: string;
        LocalizedStrings: TMap<string, string>;
        bIsMinimalPatch: boolean;
        CachedText: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PolyglotTextData_0__: boolean;
    }
    
    class KismetTextLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AsCurrency_Float(Value: number, RoundingMode: UE.ERoundingMode, bAlwaysSign?: boolean /* = false */, bUseGrouping?: boolean /* = true */, MinimumIntegralDigits?: number /* = 1 */, MaximumIntegralDigits?: number /* = 324 */, MinimumFractionalDigits?: number /* = 0 */, MaximumFractionalDigits?: number /* = 3 */, CurrencyCode?: string /* = "" */) : string;
        static AsCurrency_Integer(Value: number, RoundingMode: UE.ERoundingMode, bAlwaysSign?: boolean /* = false */, bUseGrouping?: boolean /* = true */, MinimumIntegralDigits?: number /* = 1 */, MaximumIntegralDigits?: number /* = 324 */, MinimumFractionalDigits?: number /* = 0 */, MaximumFractionalDigits?: number /* = 3 */, CurrencyCode?: string /* = "" */) : string;
        static AsCurrencyBase(BaseValue: number, CurrencyCode: string) : string;
        static AsDate_DateTime(InDateTime: UE.DateTime) : string;
        static AsDateTime_DateTime(In: UE.DateTime) : string;
        static AsPercent_Float(Value: number, RoundingMode: UE.ERoundingMode, bAlwaysSign?: boolean /* = false */, bUseGrouping?: boolean /* = true */, MinimumIntegralDigits?: number /* = 1 */, MaximumIntegralDigits?: number /* = 324 */, MinimumFractionalDigits?: number /* = 0 */, MaximumFractionalDigits?: number /* = 3 */) : string;
        static AsTime_DateTime(In: UE.DateTime) : string;
        static AsTimespan_Timespan(InTimespan: UE.Timespan) : string;
        static AsTimeZoneDate_DateTime(InDateTime: UE.DateTime, InTimeZone?: string /* = "" */) : string;
        static AsTimeZoneDateTime_DateTime(InDateTime: UE.DateTime, InTimeZone?: string /* = "" */) : string;
        static AsTimeZoneTime_DateTime(InDateTime: UE.DateTime, InTimeZone?: string /* = "" */) : string;
        static Conv_BoolToText(InBool: boolean) : string;
        static Conv_ByteToText(Value: number) : string;
        static Conv_ColorToText(InColor: UE.LinearColor) : string;
        static Conv_FloatToText(Value: number, RoundingMode: UE.ERoundingMode, bAlwaysSign?: boolean /* = false */, bUseGrouping?: boolean /* = true */, MinimumIntegralDigits?: number /* = 1 */, MaximumIntegralDigits?: number /* = 324 */, MinimumFractionalDigits?: number /* = 0 */, MaximumFractionalDigits?: number /* = 3 */) : string;
        static Conv_Int64ToText(Value: bigint, bAlwaysSign?: boolean /* = false */, bUseGrouping?: boolean /* = true */, MinimumIntegralDigits?: number /* = 1 */, MaximumIntegralDigits?: number /* = 324 */) : string;
        static Conv_IntToText(Value: number, bAlwaysSign?: boolean /* = false */, bUseGrouping?: boolean /* = true */, MinimumIntegralDigits?: number /* = 1 */, MaximumIntegralDigits?: number /* = 324 */) : string;
        static Conv_NameToText(InName: string) : string;
        static Conv_ObjectToText(InObj: $Nullable<UE.Object>) : string;
        static Conv_RotatorToText(InRot: UE.Rotator) : string;
        static Conv_StringToText(InString: string) : string;
        static Conv_TextToString(InText: string) : string;
        static Conv_TransformToText(InTrans: UE.Transform) : string;
        static Conv_Vector2dToText(InVec: UE.Vector2D) : string;
        static Conv_VectorToText(InVec: UE.Vector) : string;
        static EqualEqual_IgnoreCase_TextText(A: string, B: string) : boolean;
        static EqualEqual_TextText(A: string, B: string) : boolean;
        static FindTextInLocalizationTable(Namespace: string, Key: string, OutText: $Ref<string>) : boolean;
        static Format(InPattern: string, InArgs: TArray<UE.FormatArgumentData>) : string;
        static GetEmptyText() : string;
        static IsPolyglotDataValid(PolyglotData: UE.PolyglotTextData, IsValid: $Ref<boolean>, ErrorMessage: $Ref<string>) : void;
        static NotEqual_IgnoreCase_TextText(A: string, B: string) : boolean;
        static NotEqual_TextText(A: string, B: string) : boolean;
        static PolyglotDataToText(PolyglotData: UE.PolyglotTextData) : string;
        static StringTableIdAndKeyFromText(Text: string, OutTableId: $Ref<string>, OutKey: $Ref<string>) : boolean;
        static TextFromStringTable(TableId: string, Key: string) : string;
        static TextIsCultureInvariant(InText: string) : boolean;
        static TextIsEmpty(InText: string) : boolean;
        static TextIsFromStringTable(Text: string) : boolean;
        static TextIsTransient(InText: string) : boolean;
        static TextToLower(InText: string) : string;
        static TextToUpper(InText: string) : string;
        static TextTrimPreceding(InText: string) : string;
        static TextTrimPrecedingAndTrailing(InText: string) : string;
        static TextTrimTrailing(InText: string) : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): KismetTextLibrary;
        static Load(InName: string): KismetTextLibrary;
    
        __tid_KismetTextLibrary_0__: boolean;
    }
    
    class LandscapeSplinesComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SplineResolution: number;
        SplineColor: UE.Color;
        ControlPointSprite: UE.Texture2D;
        SplineEditorMesh: UE.StaticMesh;
        bShowSplineEditorMesh: boolean;
        ControlPoints: TArray<UE.LandscapeSplineControlPoint>;
        Segments: TArray<UE.LandscapeSplineSegment>;
        ForeignWorldSplineDataMap: TMap<TSoftObjectPtr<UE.World>, UE.ForeignWorldSplineData>;
        CookedForeignMeshComponents: TArray<UE.MeshComponent>;
        GetSplineMeshComponents() : TArray<UE.SplineMeshComponent>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeSplinesComponent;
        static Load(InName: string): LandscapeSplinesComponent;
    
        __tid_LandscapeSplinesComponent_0__: boolean;
    }
    
    class LandscapeProxyMaterialOverride {
        constructor();
        constructor(LODIndex: UE.PerPlatformInt, Material: UE.MaterialInterface);
        LODIndex: UE.PerPlatformInt;
        Material: UE.MaterialInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeProxyMaterialOverride_0__: boolean;
    }
    
    class LandscapeComponentMaterialOverride {
        constructor();
        constructor(LODIndex: UE.PerPlatformInt, Material: UE.MaterialInterface);
        LODIndex: UE.PerPlatformInt;
        Material: UE.MaterialInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeComponentMaterialOverride_0__: boolean;
    }
    
    class MaterialInstanceConstant extends UE.MaterialInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterStateId: UE.Guid;
        PhysMaterialMask: UE.PhysicalMaterialMask;
        K2_GetScalarParameterValue(ParameterName: string) : number;
        K2_GetTextureParameterValue(ParameterName: string) : UE.Texture;
        K2_GetVectorParameterValue(ParameterName: string) : UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialInstanceConstant;
        static Load(InName: string): MaterialInstanceConstant;
    
        __tid_MaterialInstanceConstant_0__: boolean;
    }
    
    class LandscapeLayerInfoObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LayerName: string;
        PhysMaterial: UE.PhysicalMaterial;
        Hardness: number;
        MinimumCollisionRelevanceWeight: number;
        bNoWeightBlend: boolean;
        SplineFalloffModulationTexture: UE.Texture2D;
        SplineFalloffModulationColorMask: UE.ESplineModulationColorMask;
        SplineFalloffModulationTiling: number;
        SplineFalloffModulationBias: number;
        SplineFalloffModulationScale: number;
        IsReferencedFromLoadedData: boolean;
        LayerUsageDebugColor: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeLayerInfoObject;
        static Load(InName: string): LandscapeLayerInfoObject;
    
        __tid_LandscapeLayerInfoObject_0__: boolean;
    }
    
    class LandscapeHeightfieldCollisionComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComponentLayerInfos: TArray<UE.LandscapeLayerInfoObject>;
        SectionBaseX: number;
        SectionBaseY: number;
        CollisionSizeQuads: number;
        CollisionScale: number;
        SimpleCollisionSizeQuads: number;
        CollisionQuadFlags: TArray<number>;
        HeightfieldGuid: UE.Guid;
        CachedLocalBox: UE.Box;
        RenderComponent: TLazyObjectPtr<UE.LandscapeComponent>;
        PhysicalMaterialRenderObjects: TArray<UE.PhysicalMaterial>;
        CookedPhysicalMaterials: TArray<UE.PhysicalMaterial>;
        GetRenderComponent() : UE.LandscapeComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeHeightfieldCollisionComponent;
        static Load(InName: string): LandscapeHeightfieldCollisionComponent;
    
        __tid_LandscapeHeightfieldCollisionComponent_0__: boolean;
    }
    
    class WeightmapLayerAllocationInfo {
        constructor();
        constructor(LayerInfo: UE.LandscapeLayerInfoObject, WeightmapTextureIndex: number, WeightmapTextureChannel: number);
        LayerInfo: UE.LandscapeLayerInfoObject;
        WeightmapTextureIndex: number;
        WeightmapTextureChannel: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WeightmapLayerAllocationInfo_0__: boolean;
    }
    
    class LandscapeWeightmapUsage extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChannelUsage: FixSizeArray<UE.LandscapeComponent>;
        LayerGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeWeightmapUsage;
        static Load(InName: string): LandscapeWeightmapUsage;
    
        __tid_LandscapeWeightmapUsage_0__: boolean;
    }
    
    class WeightmapData {
        constructor();
        constructor(Textures: TArray<UE.Texture2D>, LayerAllocations: TArray<UE.WeightmapLayerAllocationInfo>, TextureUsages: TArray<UE.LandscapeWeightmapUsage>);
        Textures: TArray<UE.Texture2D>;
        LayerAllocations: TArray<UE.WeightmapLayerAllocationInfo>;
        TextureUsages: TArray<UE.LandscapeWeightmapUsage>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WeightmapData_0__: boolean;
    }
    
    class LandscapeLayerComponentData {
        constructor();
        constructor(HeightmapData: UE.HeightmapData, WeightmapData: UE.WeightmapData);
        HeightmapData: UE.HeightmapData;
        WeightmapData: UE.WeightmapData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeLayerComponentData_0__: boolean;
    }
    
    class LandscapeLODStreamingProxy extends UE.StreamableRenderAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeLODStreamingProxy;
        static Load(InName: string): LandscapeLODStreamingProxy;
    
        __tid_LandscapeLODStreamingProxy_0__: boolean;
    }
    
    class LandscapeEditToolRenderData {
        constructor();
        constructor(ToolMaterial: UE.MaterialInterface, GizmoMaterial: UE.MaterialInterface, SelectedType: number, DebugChannelR: number, DebugChannelG: number, DebugChannelB: number, DataTexture: UE.Texture2D, LayerContributionTexture: UE.Texture2D, DirtyTexture: UE.Texture2D);
        ToolMaterial: UE.MaterialInterface;
        GizmoMaterial: UE.MaterialInterface;
        SelectedType: number;
        DebugChannelR: number;
        DebugChannelG: number;
        DebugChannelB: number;
        DataTexture: UE.Texture2D;
        LayerContributionTexture: UE.Texture2D;
        DirtyTexture: UE.Texture2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeEditToolRenderData_0__: boolean;
    }
    
    class LandscapeComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SectionBaseX: number;
        SectionBaseY: number;
        ComponentSizeQuads: number;
        SubsectionSizeQuads: number;
        NumSubsections: number;
        OverrideMaterial: UE.MaterialInterface;
        OverrideHoleMaterial: UE.MaterialInterface;
        OverrideMaterials: TArray<UE.LandscapeComponentMaterialOverride>;
        MaterialInstance: UE.MaterialInstanceConstant;
        MaterialInstances: TArray<UE.MaterialInstanceConstant>;
        MaterialInstancesDynamic: TArray<UE.MaterialInstanceDynamic>;
        LODIndexToMaterialIndex: TArray<number>;
        MaterialIndexToDisabledTessellationMaterial: TArray<number>;
        XYOffsetmapTexture: UE.Texture2D;
        WeightmapScaleBias: UE.Vector4;
        WeightmapSubsectionOffset: number;
        HeightmapScaleBias: UE.Vector4;
        CachedLocalBox: UE.Box;
        CollisionComponent: TLazyObjectPtr<UE.LandscapeHeightfieldCollisionComponent>;
        LightingGuid: UE.Guid;
        LayersData: TMap<UE.Guid, UE.LandscapeLayerComponentData>;
        WeightmapTexturesUsage: TArray<UE.LandscapeWeightmapUsage>;
        LayerUpdateFlagPerMode: number;
        HeightmapTexture: UE.Texture2D;
        WeightmapLayerAllocations: TArray<UE.WeightmapLayerAllocationInfo>;
        WeightmapTextures: TArray<UE.Texture2D>;
        LODStreamingProxy: UE.LandscapeLODStreamingProxy;
        MapBuildDataId: UE.Guid;
        IrrelevantLights: TArray<UE.Guid>;
        CollisionMipLevel: number;
        SimpleCollisionMipLevel: number;
        NegativeZBoundsExtension: number;
        PositiveZBoundsExtension: number;
        StaticLightingResolution: number;
        ForcedLOD: number;
        LODBias: number;
        StateId: UE.Guid;
        BakedTextureMaterialGuid: UE.Guid;
        GIBakedBaseColorTexture: UE.Texture2D;
        LightingLODBias: number;
        LayerWhitelist: TArray<UE.LandscapeLayerInfoObject>;
        EditToolRenderData: UE.LandscapeEditToolRenderData;
        MobileDataSourceHash: UE.Guid;
        MaterialPerLOD: TMap<UE.MaterialInterface, number>;
        SplineHash: number;
        PhysicalMaterialHash: number;
        MobileBlendableLayerMask: number;
        MobileMaterialInterface: UE.MaterialInterface;
        MobileMaterialInterfaces: TArray<UE.MaterialInterface>;
        MobileWeightmapTextures: TArray<UE.Texture2D>;
        MobileCombinationMaterialInstances: TArray<UE.MaterialInstanceConstant>;
        MobileCombinationMaterialInstance: UE.MaterialInstanceConstant;
        EditorGetPaintLayerWeightAtLocation(InLocation: UE.Vector, PaintLayer: $Nullable<UE.LandscapeLayerInfoObject>) : number;
        EditorGetPaintLayerWeightByNameAtLocation(InLocation: UE.Vector, InPaintLayerName: string) : number;
        GetMaterialInstanceDynamic(InIndex: number) : UE.MaterialInstanceDynamic;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeComponent;
        static Load(InName: string): LandscapeComponent;
    
        __tid_LandscapeComponent_0__: boolean;
    }
    
    class LandscapeEditorLayerSettings {
        constructor();
        constructor(LayerInfoObj: UE.LandscapeLayerInfoObject, ReimportLayerFilePath: string);
        LayerInfoObj: UE.LandscapeLayerInfoObject;
        ReimportLayerFilePath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeEditorLayerSettings_0__: boolean;
    }
    
    class LandscapeProxy extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SplineComponent: UE.LandscapeSplinesComponent;
        LandscapeGuid: UE.Guid;
        LandscapeSectionOffset: UE.IntPoint;
        MaxLODLevel: number;
        LODDistanceFactor: number;
        LODFalloff: UE.ELandscapeLODFalloff;
        ComponentScreenSizeToUseSubSections: number;
        LOD0ScreenSize: number;
        LOD0DistributionSetting: number;
        LODDistributionSetting: number;
        TessellationComponentScreenSize: number;
        UseTessellationComponentScreenSizeFalloff: boolean;
        TessellationComponentScreenSizeFalloff: number;
        OccluderGeometryLOD: number;
        ExportLOD: number;
        TargetDisplayOrderList: TArray<string>;
        TargetDisplayOrder: UE.ELandscapeLayerDisplayMode;
        StaticLightingLOD: number;
        DefaultPhysMaterial: UE.PhysicalMaterial;
        StreamingDistanceMultiplier: number;
        LandscapeMaterial: UE.MaterialInterface;
        LandscapeHoleMaterial: UE.MaterialInterface;
        LandscapeMaterialsOverride: TArray<UE.LandscapeProxyMaterialOverride>;
        PreEditLandscapeMaterial: UE.MaterialInterface;
        PreEditLandscapeHoleMaterial: UE.MaterialInterface;
        PreEditLandscapeMaterialsOverride: TArray<UE.LandscapeProxyMaterialOverride>;
        bIsPerformingInteractiveActionOnLandscapeMaterialOverride: boolean;
        bMeshHoles: boolean;
        MeshHolesMaxLod: number;
        RuntimeVirtualTextures: TArray<UE.RuntimeVirtualTexture>;
        VirtualTextureNumLods: number;
        VirtualTextureLodBias: number;
        VirtualTextureRenderPassType: UE.ERuntimeVirtualTextureMainPassType;
        NegativeZBoundsExtension: number;
        PositiveZBoundsExtension: number;
        LandscapeComponents: TArray<UE.LandscapeComponent>;
        CollisionComponents: TArray<UE.LandscapeHeightfieldCollisionComponent>;
        FoliageComponents: TArray<UE.HierarchicalInstancedStaticMeshComponent>;
        bHasLandscapeGrass: boolean;
        StaticLightingResolution: number;
        CastShadow: boolean;
        bCastDynamicShadow: boolean;
        bCastStaticShadow: boolean;
        bCastFarShadow: boolean;
        bCastHiddenShadow: boolean;
        bCastShadowAsTwoSided: boolean;
        bAffectDistanceFieldLighting: boolean;
        LightingChannels: UE.LightingChannels;
        bUseMaterialPositionOffsetInStaticLighting: boolean;
        bRenderCustomDepth: boolean;
        CustomDepthStencilWriteMask: UE.ERendererStencilMask;
        CustomDepthStencilValue: number;
        LDMaxDrawDistance: number;
        bIsMovingToLevel: boolean;
        LightmassSettings: UE.LightmassPrimitiveSettings;
        CollisionMipLevel: number;
        SimpleCollisionMipLevel: number;
        CollisionThickness: number;
        BodyInstance: UE.BodyInstance;
        bGenerateOverlapEvents: boolean;
        bBakeMaterialPositionOffsetIntoCollision: boolean;
        EditorCachedLayerInfos: TArray<UE.LandscapeLayerInfoObject>;
        ReimportHeightmapFilePath: string;
        ReimportDestinationLayerGuid: UE.Guid;
        EditorLayerSettings: TArray<UE.LandscapeEditorLayerSettings>;
        ComponentSizeQuads: number;
        SubsectionSizeQuads: number;
        NumSubsections: number;
        bUsedForNavigation: boolean;
        bFillCollisionUnderLandscapeForNavmesh: boolean;
        bUseDynamicMaterialInstance: boolean;
        NavigationGeometryGatheringMode: UE.ENavDataGatheringMode;
        MaxPaintedLayersPerComponent: number;
        bUseLandscapeForCullingInvisibleHLODVertices: boolean;
        bHasLayersContent: boolean;
        WeightmapUsageMap: TMap<UE.Texture2D, UE.LandscapeWeightmapUsage>;
        ChangeComponentScreenSizeToUseSubSections(InComponentScreenSizeToUseSubSections: number) : void;
        ChangeLODDistanceFactor(InLODDistanceFactor: number) : void;
        ChangeTessellationComponentScreenSize(InTessellationComponentScreenSize: number) : void;
        ChangeTessellationComponentScreenSizeFalloff(InUseTessellationComponentScreenSizeFalloff: number) : void;
        ChangeUseTessellationComponentScreenSizeFalloff(InComponentScreenSizeToUseSubSections: boolean) : void;
        EditorApplySpline(InSplineComponent: $Nullable<UE.SplineComponent>, StartWidth?: number /* = 200.000000 */, EndWidth?: number /* = 200.000000 */, StartSideFalloff?: number /* = 200.000000 */, EndSideFalloff?: number /* = 200.000000 */, StartRoll?: number /* = 0.000000 */, EndRoll?: number /* = 0.000000 */, NumSubdivisions?: number /* = 20 */, bRaiseHeights?: boolean /* = true */, bLowerHeights?: boolean /* = true */, PaintLayer?: UE.LandscapeLayerInfoObject /* = None */, EditLayerName?: string /* = "" */) : void;
        EditorSetLandscapeMaterial(NewLandscapeMaterial: $Nullable<UE.MaterialInterface>) : void;
        LandscapeExportHeightmapToRenderTarget(InRenderTarget: $Nullable<UE.TextureRenderTarget2D>, InExportHeightIntoRGChannel?: boolean /* = false */, InExportLandscapeProxies?: boolean /* = true */) : boolean;
        LandscapeExportWeightmapToRenderTarget(InRenderTarget: $Nullable<UE.TextureRenderTarget2D>, InLayerName: string) : boolean;
        LandscapeImportHeightmapFromRenderTarget(InRenderTarget: $Nullable<UE.TextureRenderTarget2D>, InImportHeightFromRGChannel?: boolean /* = false */) : boolean;
        LandscapeImportWeightmapFromRenderTarget(InRenderTarget: $Nullable<UE.TextureRenderTarget2D>, InLayerName: string) : boolean;
        SetLandscapeMaterialScalarParameterValue(ParameterName: string, Value: number) : void;
        SetLandscapeMaterialTextureParameterValue(ParameterName: string, Value: $Nullable<UE.Texture>) : void;
        SetLandscapeMaterialVectorParameterValue(ParameterName: string, Value: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeProxy;
        static Load(InName: string): LandscapeProxy;
    
        __tid_LandscapeProxy_0__: boolean;
    }
    
    class LandscapeBlueprintBrushBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwningLandscape: UE.Landscape;
        AffectHeightmap: boolean;
        AffectWeightmap: boolean;
        AffectedWeightmapLayers: TArray<string>;
        bIsVisible: boolean;
        GetBlueprintRenderDependencies(OutStreamableAssets: $Ref<TArray<UE.Object>>) : void;
        Initialize(InLandscapeTransform: UE.Transform, InLandscapeSize: UE.IntPoint, InLandscapeRenderTargetSize: UE.IntPoint) : void;
        Render(InIsHeightmap: boolean, InCombinedResult: $Nullable<UE.TextureRenderTarget2D>, InWeightmapLayerName: string) : UE.TextureRenderTarget2D;
        RequestLandscapeUpdate() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeBlueprintBrushBase;
        static Load(InName: string): LandscapeBlueprintBrushBase;
    
        __tid_LandscapeBlueprintBrushBase_0__: boolean;
    }
    
    class LandscapeLayerBrush {
        constructor();
        constructor(BlueprintBrush: UE.LandscapeBlueprintBrushBase);
        BlueprintBrush: UE.LandscapeBlueprintBrushBase;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeLayerBrush_0__: boolean;
    }
    
    class LandscapeLayer {
        constructor();
        constructor(Guid: UE.Guid, Name: string, bVisible: boolean, bLocked: boolean, HeightmapAlpha: number, WeightmapAlpha: number, BlendMode: UE.ELandscapeBlendMode, Brushes: TArray<UE.LandscapeLayerBrush>, WeightmapLayerAllocationBlend: TMap<UE.LandscapeLayerInfoObject, boolean>);
        Guid: UE.Guid;
        Name: string;
        bVisible: boolean;
        bLocked: boolean;
        HeightmapAlpha: number;
        WeightmapAlpha: number;
        BlendMode: UE.ELandscapeBlendMode;
        Brushes: TArray<UE.LandscapeLayerBrush>;
        WeightmapLayerAllocationBlend: TMap<UE.LandscapeLayerInfoObject, boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeLayer_0__: boolean;
    }
    
    class Landscape extends UE.LandscapeProxy {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCanHaveLayersContent: boolean;
        LandscapeSplinesTargetLayerGuid: UE.Guid;
        LandscapeLayers: TArray<UE.LandscapeLayer>;
        HeightmapRTList: TArray<UE.TextureRenderTarget2D>;
        WeightmapRTList: TArray<UE.TextureRenderTarget2D>;
        LandscapeSplinesAffectedComponents: TSet<UE.LandscapeComponent>;
        bLandscapeLayersAreInitialized: boolean;
        WasCompilingShaders: boolean;
        LayerContentUpdateModes: number;
        bSplineLayerUpdateRequested: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Landscape;
        static Load(InName: string): Landscape;
    
        __tid_Landscape_0__: boolean;
    }
    
    class LandscapeBlueprintBrush extends UE.LandscapeBlueprintBrushBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeBlueprintBrush;
        static Load(InName: string): LandscapeBlueprintBrush;
    
        __tid_LandscapeBlueprintBrush_0__: boolean;
    }
    
    class LandscapeImportLayerInfo {
        constructor();
        constructor(LayerName: string, LayerInfo: UE.LandscapeLayerInfoObject, SourceFilePath: string);
        LayerName: string;
        LayerInfo: UE.LandscapeLayerInfoObject;
        SourceFilePath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeImportLayerInfo_0__: boolean;
    }
    
    class LandscapeMaterialTextureStreamingInfo {
        constructor();
        constructor(TextureName: string, TexelFactor: number);
        TextureName: string;
        TexelFactor: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeMaterialTextureStreamingInfo_0__: boolean;
    }
    
    class LandscapeMaterialInstanceConstant extends UE.MaterialInstanceConstant {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureStreamingInfo: TArray<UE.LandscapeMaterialTextureStreamingInfo>;
        bIsLayerThumbnail: boolean;
        bDisableTessellation: boolean;
        bMobile: boolean;
        bEditorToolUsage: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeMaterialInstanceConstant;
        static Load(InName: string): LandscapeMaterialInstanceConstant;
    
        __tid_LandscapeMaterialInstanceConstant_0__: boolean;
    }
    
    class LandscapeImportLayer extends UE.LandscapeImportLayerInfo {
        constructor();
        constructor(ThumbnailMIC: UE.LandscapeMaterialInstanceConstant, ImportResult: UE.ELandscapeImportResult, ErrorMessage: string);
        ThumbnailMIC: UE.LandscapeMaterialInstanceConstant;
        ImportResult: UE.ELandscapeImportResult;
        ErrorMessage: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeImportLayer_0__: boolean;
    }
    
    class LandscapePatternBrushWorldSpaceSettings {
        constructor();
        constructor(Origin: UE.Vector2D, Rotation: number, bCenterTextureOnOrigin: boolean, RepeatSize: number);
        Origin: UE.Vector2D;
        Rotation: number;
        bCenterTextureOnOrigin: boolean;
        RepeatSize: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapePatternBrushWorldSpaceSettings_0__: boolean;
    }
    
    class LandscapeEditorObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ToolStrength: number;
        bUseWeightTargetValue: boolean;
        WeightTargetValue: number;
        MaximumValueRadius: number;
        bCombinedLayersOperation: boolean;
        FlattenMode: UE.ELandscapeToolFlattenMode;
        bUseSlopeFlatten: boolean;
        bPickValuePerApply: boolean;
        bUseFlattenTarget: boolean;
        FlattenTarget: number;
        bShowFlattenTargetPreview: boolean;
        TerraceInterval: number;
        TerraceSmooth: number;
        bFlattenEyeDropperModeActivated: boolean;
        FlattenEyeDropperModeDesiredTarget: number;
        RampWidth: number;
        RampSideFalloff: number;
        SmoothFilterKernelSize: number;
        bDetailSmooth: boolean;
        DetailScale: number;
        ErodeThresh: number;
        ErodeSurfaceThickness: number;
        ErodeIterationNum: number;
        ErosionNoiseMode: UE.ELandscapeToolErosionMode;
        ErosionNoiseScale: number;
        RainAmount: number;
        SedimentCapacity: number;
        HErodeIterationNum: number;
        RainDistMode: UE.ELandscapeToolHydroErosionMode;
        RainDistScale: number;
        bHErosionDetailSmooth: boolean;
        HErosionDetailScale: number;
        NoiseMode: UE.ELandscapeToolNoiseMode;
        NoiseScale: number;
        bUseSelectedRegion: boolean;
        bUseNegativeMask: boolean;
        PasteMode: UE.ELandscapeToolPasteMode;
        bApplyToAllTargets: boolean;
        bSnapGizmo: boolean;
        bSmoothGizmoBrush: boolean;
        GizmoHeightmapFilenameString: string;
        GizmoImportSize: UE.IntPoint;
        GizmoImportLayers: TArray<UE.GizmoImportLayer>;
        MirrorPoint: UE.Vector2D;
        MirrorOp: UE.ELandscapeMirrorOperation;
        MirrorSmoothingWidth: number;
        BlueprintBrush: UE.Class;
        ResizeLandscape_QuadsPerSection: number;
        ResizeLandscape_SectionsPerComponent: number;
        ResizeLandscape_ComponentCount: UE.IntPoint;
        ResizeLandscape_ConvertMode: UE.ELandscapeConvertMode;
        NewLandscape_Material: TWeakObjectPtr<UE.MaterialInterface>;
        NewLandscape_QuadsPerSection: number;
        NewLandscape_SectionsPerComponent: number;
        NewLandscape_ComponentCount: UE.IntPoint;
        NewLandscape_Location: UE.Vector;
        NewLandscape_Rotation: UE.Rotator;
        NewLandscape_Scale: UE.Vector;
        ImportLandscape_HeightmapImportResult: UE.ELandscapeImportResult;
        ImportLandscape_HeightmapErrorMessage: string;
        ImportLandscape_HeightmapFilename: string;
        ImportLandscape_Width: number;
        ImportLandscape_Height: number;
        ImportLandscape_Data: TArray<number>;
        bCanHaveLayersContent: boolean;
        ImportLandscape_AlphamapType: UE.ELandscapeImportAlphamapType;
        ImportLandscape_Layers: TArray<UE.LandscapeImportLayer>;
        BrushRadius: number;
        BrushFalloff: number;
        bUseClayBrush: boolean;
        AlphaBrushScale: number;
        bAlphaBrushAutoRotate: boolean;
        AlphaBrushRotation: number;
        AlphaBrushPanU: number;
        AlphaBrushPanV: number;
        bUseWorldSpacePatternBrush: boolean;
        WorldSpacePatternBrushSettings: UE.LandscapePatternBrushWorldSpaceSettings;
        AlphaTexture: UE.Texture2D;
        AlphaTextureChannel: UE.EColorChannel;
        AlphaTextureSizeX: number;
        AlphaTextureSizeY: number;
        AlphaTextureData: TArray<number>;
        BrushComponentSize: number;
        PaintingRestriction: UE.ELandscapeLayerPaintingRestriction;
        TargetDisplayOrder: UE.ELandscapeLayerDisplayMode;
        ShowUnusedLayers: boolean;
        CurrentLayerIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeEditorObject;
        static Load(InName: string): LandscapeEditorObject;
    
        __tid_LandscapeEditorObject_0__: boolean;
    }
    
    class LandscapeInfoLayerSettings {
        constructor();
        constructor(LayerInfoObj: UE.LandscapeLayerInfoObject, LayerName: string, ThumbnailMIC: UE.MaterialInstanceConstant, Owner: UE.LandscapeProxy, DebugColorChannel: number, bValid: boolean);
        LayerInfoObj: UE.LandscapeLayerInfoObject;
        LayerName: string;
        ThumbnailMIC: UE.MaterialInstanceConstant;
        Owner: UE.LandscapeProxy;
        DebugColorChannel: number;
        bValid: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeInfoLayerSettings_0__: boolean;
    }
    
    class LandscapeStreamingProxy extends UE.LandscapeProxy {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LandscapeActor: TLazyObjectPtr<UE.Landscape>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeStreamingProxy;
        static Load(InName: string): LandscapeStreamingProxy;
    
        __tid_LandscapeStreamingProxy_0__: boolean;
    }
    
    class LandscapeInfo extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LandscapeActor: TLazyObjectPtr<UE.Landscape>;
        LandscapeGuid: UE.Guid;
        ComponentSizeQuads: number;
        SubsectionSizeQuads: number;
        ComponentNumSubsections: number;
        DrawScale: UE.Vector;
        Layers: TArray<UE.LandscapeInfoLayerSettings>;
        Proxies: TArray<UE.LandscapeStreamingProxy>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeInfo;
        static Load(InName: string): LandscapeInfo;
    
        __tid_LandscapeInfo_0__: boolean;
    }
    
    class LandscapeGizmoActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Height: number;
        LengthZ: number;
        MarginZ: number;
        MinRelativeZ: number;
        RelativeScaleZ: number;
        TargetLandscapeInfo: UE.LandscapeInfo;
        SpriteComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeGizmoActor;
        static Load(InName: string): LandscapeGizmoActor;
    
        __tid_LandscapeGizmoActor_0__: boolean;
    }
    
    class LandscapeGizmoActiveActor extends UE.LandscapeGizmoActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DataType: UE.ELandscapeGizmoType;
        GizmoTexture: UE.Texture2D;
        TextureScale: UE.Vector2D;
        SampledHeight: TArray<UE.Vector>;
        SampledNormal: TArray<UE.Vector>;
        SampleSizeX: number;
        SampleSizeY: number;
        CachedWidth: number;
        CachedHeight: number;
        CachedScaleXY: number;
        FrustumVerts: FixSizeArray<UE.Vector>;
        GizmoMaterial: UE.Material;
        GizmoDataMaterial: UE.MaterialInstance;
        GizmoMeshMaterial: UE.Material;
        LayerInfos: TArray<UE.LandscapeLayerInfoObject>;
        bSnapToLandscapeGrid: boolean;
        UnsnappedRotation: UE.Rotator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeGizmoActiveActor;
        static Load(InName: string): LandscapeGizmoActiveActor;
    
        __tid_LandscapeGizmoActiveActor_0__: boolean;
    }
    
    class LandscapeGizmoRenderComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeGizmoRenderComponent;
        static Load(InName: string): LandscapeGizmoRenderComponent;
    
        __tid_LandscapeGizmoRenderComponent_0__: boolean;
    }
    
    class LandscapeGrassTypeFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeGrassTypeFactory;
        static Load(InName: string): LandscapeGrassTypeFactory;
    
        __tid_LandscapeGrassTypeFactory_0__: boolean;
    }
    
    class LandscapeInfoMap extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeInfoMap;
        static Load(InName: string): LandscapeInfoMap;
    
        __tid_LandscapeInfoMap_0__: boolean;
    }
    
    class LandscapeLayerStruct {
        constructor();
        constructor(LayerInfoObj: UE.LandscapeLayerInfoObject, ThumbnailMIC: UE.LandscapeMaterialInstanceConstant, Owner: UE.LandscapeProxy, DebugColorChannel: number, bSelected: boolean, SourceFilePath: string);
        LayerInfoObj: UE.LandscapeLayerInfoObject;
        ThumbnailMIC: UE.LandscapeMaterialInstanceConstant;
        Owner: UE.LandscapeProxy;
        DebugColorChannel: number;
        bSelected: boolean;
        SourceFilePath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LandscapeLayerStruct_0__: boolean;
    }
    
    class LandscapeMeshCollisionComponent extends UE.LandscapeHeightfieldCollisionComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MeshGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeMeshCollisionComponent;
        static Load(InName: string): LandscapeMeshCollisionComponent;
    
        __tid_LandscapeMeshCollisionComponent_0__: boolean;
    }
    
    class LandscapeMeshProxyComponent extends UE.StaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LandscapeGuid: UE.Guid;
        ProxyComponentBases: TArray<UE.IntPoint>;
        ProxyLOD: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeMeshProxyComponent;
        static Load(InName: string): LandscapeMeshProxyComponent;
    
        __tid_LandscapeMeshProxyComponent_0__: boolean;
    }
    
    class LandscapeMeshProxyActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LandscapeMeshProxyComponent: UE.LandscapeMeshProxyComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeMeshProxyActor;
        static Load(InName: string): LandscapeMeshProxyActor;
    
        __tid_LandscapeMeshProxyActor_0__: boolean;
    }
    
    class LandscapePlaceholder extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapePlaceholder;
        static Load(InName: string): LandscapePlaceholder;
    
        __tid_LandscapePlaceholder_0__: boolean;
    }
    
    class LandscapeSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxNumberOfLayers: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeSettings;
        static Load(InName: string): LandscapeSettings;
    
        __tid_LandscapeSettings_0__: boolean;
    }
    
    class LandscapeSubsystem extends UE.WorldSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LandscapeSubsystem;
        static Load(InName: string): LandscapeSubsystem;
    
        __tid_LandscapeSubsystem_0__: boolean;
    }
    
    class LatentActionManager {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LatentActionManager_0__: boolean;
    }
    
    class LatentActionState extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LatentActionCallback: $Delegate<() => void>;
        GetLatentActionInfo() : UE.LatentActionInfo;
        OnLatentActionCompleted(LinkID: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LatentActionState;
        static Load(InName: string): LatentActionState;
    
        __tid_LatentActionState_0__: boolean;
    }
    
    class LayerBlendInput {
        constructor();
        constructor(LayerName: string, BlendType: UE.ELandscapeLayerBlendType, LayerInput: UE.ExpressionInput, HeightInput: UE.ExpressionInput, PreviewWeight: number, ConstLayerInput: UE.Vector, ConstHeightInput: number);
        LayerName: string;
        BlendType: UE.ELandscapeLayerBlendType;
        LayerInput: UE.ExpressionInput;
        HeightInput: UE.ExpressionInput;
        PreviewWeight: number;
        ConstLayerInput: UE.Vector;
        ConstHeightInput: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LayerBlendInput_0__: boolean;
    }
    
    class LayersBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddActorToLayer(InActor: $Nullable<UE.Actor>, Layer: UE.ActorLayer) : void;
        static GetActors(WorldContextObject: $Nullable<UE.Object>, ActorLayer: UE.ActorLayer) : TArray<UE.Actor>;
        static RemoveActorFromLayer(InActor: $Nullable<UE.Actor>, Layer: UE.ActorLayer) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LayersBlueprintLibrary;
        static Load(InName: string): LayersBlueprintLibrary;
    
        __tid_LayersBlueprintLibrary_0__: boolean;
    }
    
    class LayersSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddActorsToLayer(Actors: TArray<UE.Actor>, LayerName: string) : boolean;
        AddActorsToLayers(Actors: TArray<UE.Actor>, LayerNames: TArray<string>) : boolean;
        AddActorToLayer(Actor: $Nullable<UE.Actor>, LayerName: string) : boolean;
        AddActorToLayers(Actor: $Nullable<UE.Actor>, LayerNames: TArray<string>) : boolean;
        AddAllLayerNamesTo(OutLayerNames: $Ref<TArray<string>>) : void;
        AddAllLayersTo(OutLayers: $Ref<TArray<UE.Layer>>) : void;
        AddLevelLayerInformation(Level: $Nullable<UE.Level>) : void;
        AddSelectedActorsToLayer(LayerName: string) : boolean;
        AddSelectedActorsToLayers(LayerNames: TArray<string>) : boolean;
        AppendActorsFromLayer(LayerName: string, InOutActors: $Ref<TArray<UE.Actor>>) : void;
        AppendActorsFromLayers(LayerNames: TArray<string>, InOutActors: $Ref<TArray<UE.Actor>>) : void;
        CreateLayer(LayerName: string) : UE.Layer;
        DeleteLayer(LayerToDelete: string) : void;
        DeleteLayers(LayersToDelete: TArray<string>) : void;
        DisassociateActorFromLayers(Actor: $Nullable<UE.Actor>) : boolean;
        EditorMapChange() : void;
        EditorRefreshLayerBrowser() : void;
        GetActorsFromLayer(LayerName: string) : TArray<UE.Actor>;
        GetActorsFromLayers(LayerNames: TArray<string>) : TArray<UE.Actor>;
        GetLayer(LayerName: string) : UE.Layer;
        GetSelectedActors() : TArray<UE.Actor>;
        GetWorld() : UE.World;
        /**
         * @deprecated Unsupported super overloads.
         */
        GetWorld() : World;
        InitializeNewActorLayers(Actor: $Nullable<UE.Actor>) : boolean;
        IsActorValidForLayer(Actor: $Nullable<UE.Actor>) : boolean;
        IsLayer(LayerName: string) : boolean;
        MakeAllLayersVisible() : void;
        RemoveActorFromLayer(Actor: $Nullable<UE.Actor>, LayerToRemove: string, bUpdateStats?: boolean /* = true */) : boolean;
        RemoveActorFromLayers(Actor: $Nullable<UE.Actor>, LayerNames: TArray<string>, bUpdateStats?: boolean /* = true */) : boolean;
        RemoveActorsFromLayer(Actors: TArray<UE.Actor>, LayerName: string, bUpdateStats?: boolean /* = true */) : boolean;
        RemoveActorsFromLayers(Actors: TArray<UE.Actor>, LayerNames: TArray<string>, bUpdateStats?: boolean /* = true */) : boolean;
        RemoveLevelLayerInformation(Level: $Nullable<UE.Level>) : void;
        RemoveSelectedActorsFromLayer(LayerName: string) : boolean;
        RemoveSelectedActorsFromLayers(LayerNames: TArray<string>) : boolean;
        RenameLayer(OriginalLayerName: string, NewLayerName: string) : boolean;
        SelectActorsInLayer(LayerName: string, bSelect: boolean, bNotify: boolean, bSelectEvenIfHidden?: boolean /* = false */) : boolean;
        SelectActorsInLayers(LayerNames: TArray<string>, bSelect: boolean, bNotify: boolean, bSelectEvenIfHidden?: boolean /* = false */) : boolean;
        SetLayersVisibility(LayerNames: TArray<string>, bIsVisible: boolean) : void;
        SetLayerVisibility(LayerName: string, bIsVisible: boolean) : void;
        ToggleLayersVisibility(LayerNames: TArray<string>) : void;
        ToggleLayerVisibility(LayerName: string) : void;
        TryGetLayer(LayerName: string, OutLayer: $Ref<UE.Layer>) : boolean;
        UpdateActorAllViewsVisibility(Actor: $Nullable<UE.Actor>) : void;
        UpdateActorVisibility(Actor: $Nullable<UE.Actor>, bOutSelectionChanged: $Ref<boolean>, bOutActorModified: $Ref<boolean>, bNotifySelectionChange: boolean, bRedrawViewports: boolean) : boolean;
        UpdateAllActorsVisibility(bNotifySelectionChange: boolean, bRedrawViewports: boolean) : boolean;
        UpdateAllViewVisibility(LayerThatChanged: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LayersSubsystem;
        static Load(InName: string): LayersSubsystem;
    
        __tid_LayersSubsystem_0__: boolean;
    }
    
    class LazyObjectProperty extends UE.ObjectPropertyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LazyObjectProperty;
        static Load(InName: string): LazyObjectProperty;
    
        __tid_LazyObjectProperty_0__: boolean;
    }
    
    class LeaderboardBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static WriteLeaderboardInteger(PlayerController: $Nullable<UE.PlayerController>, StatName: string, StatValue: number) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LeaderboardBlueprintLibrary;
        static Load(InName: string): LeaderboardBlueprintLibrary;
    
        __tid_LeaderboardBlueprintLibrary_0__: boolean;
    }
    
    class LeaderboardFlushCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(SessionName: string) => void>;
        OnFailure: $MulticastDelegate<(SessionName: string) => void>;
        static CreateProxyObjectForFlush(PlayerController: $Nullable<UE.PlayerController>, SessionName: string) : UE.LeaderboardFlushCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LeaderboardFlushCallbackProxy;
        static Load(InName: string): LeaderboardFlushCallbackProxy;
    
        __tid_LeaderboardFlushCallbackProxy_0__: boolean;
    }
    
    class LeaderboardQueryCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(LeaderboardValue: number) => void>;
        OnFailure: $MulticastDelegate<(LeaderboardValue: number) => void>;
        static CreateProxyObjectForIntQuery(PlayerController: $Nullable<UE.PlayerController>, StatName: string) : UE.LeaderboardQueryCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LeaderboardQueryCallbackProxy;
        static Load(InName: string): LeaderboardQueryCallbackProxy;
    
        __tid_LeaderboardQueryCallbackProxy_0__: boolean;
    }
    
    class LegacyEdModeWrapper extends UE.EdMode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LegacyEdModeWrapper;
        static Load(InName: string): LegacyEdModeWrapper;
    
        __tid_LegacyEdModeWrapper_0__: boolean;
    }
    
    class LegacyLevelSequenceDirectorBlueprint extends UE.Blueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LegacyLevelSequenceDirectorBlueprint;
        static Load(InName: string): LegacyLevelSequenceDirectorBlueprint;
    
        __tid_LegacyLevelSequenceDirectorBlueprint_0__: boolean;
    }
    
    class LensBloomSettings {
        constructor();
        constructor(GaussianSum: UE.GaussianSumBloomSettings, Convolution: UE.ConvolutionBloomSettings, Method: UE.EBloomMethod);
        GaussianSum: UE.GaussianSumBloomSettings;
        Convolution: UE.ConvolutionBloomSettings;
        Method: UE.EBloomMethod;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LensBloomSettings_0__: boolean;
    }
    
    class LensImperfectionSettings {
        constructor();
        constructor(DirtMask: UE.Texture, DirtMaskIntensity: number, DirtMaskTint: UE.LinearColor);
        DirtMask: UE.Texture;
        DirtMaskIntensity: number;
        DirtMaskTint: UE.LinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LensImperfectionSettings_0__: boolean;
    }
    
    class LensSettings {
        constructor();
        constructor(Bloom: UE.LensBloomSettings, Imperfections: UE.LensImperfectionSettings, ChromaticAberration: number);
        Bloom: UE.LensBloomSettings;
        Imperfections: UE.LensImperfectionSettings;
        ChromaticAberration: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LensSettings_0__: boolean;
    }
    
    class LevelBounds extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoxComponent: UE.BoxComponent;
        bAutoUpdateBounds: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelBounds;
        static Load(InName: string): LevelBounds;
    
        __tid_LevelBounds_0__: boolean;
    }
    
    class LevelCapture extends UE.MovieSceneCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoStartCapture: boolean;
        PrerequisiteActorId: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelCapture;
        static Load(InName: string): LevelCapture;
    
        __tid_LevelCapture_0__: boolean;
    }
    
    class Mode2DLayer {
        constructor();
        constructor(Name: string, Depth: number);
        Name: string;
        Depth: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Mode2DLayer_0__: boolean;
    }
    
    class LevelEditor2DSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnable2DWidget: boolean;
        bEnableSnapLayers: boolean;
        SnapAxis: UE.ELevelEditor2DAxis;
        SnapLayers: TArray<UE.Mode2DLayer>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelEditor2DSettings;
        static Load(InName: string): LevelEditor2DSettings;
    
        __tid_LevelEditor2DSettings_0__: boolean;
    }
    
    namespace Engine.Tutorial.Basics.LevelEditorAttract {
        class LevelEditorAttract_C extends UE.EditorTutorial {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): LevelEditorAttract_C;
            static Load(InName: string): LevelEditorAttract_C;
        
            __tid_LevelEditorAttract_C_0__: boolean;
        }
        
    }

    class LevelEditorContextMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelEditorContextMenuContext;
        static Load(InName: string): LevelEditorContextMenuContext;
    
        __tid_LevelEditorContextMenuContext_0__: boolean;
    }
    
    class LevelEditorMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelEditorMenuContext;
        static Load(InName: string): LevelEditorMenuContext;
    
        __tid_LevelEditorMenuContext_0__: boolean;
    }
    
    class LevelEditorMiscSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoApplyLightingEnable: boolean;
        bBSPAutoUpdate: boolean;
        bAutoMoveBSPPivotOffset: boolean;
        bNavigationAutoUpdate: boolean;
        bReplaceRespectsScale: boolean;
        bEnableLegacyMeshPaintMode: boolean;
        bAvoidRelabelOnPasteSelected: boolean;
        bAllowBackgroundAudio: boolean;
        bCreateNewAudioDeviceForPlayInEditor: boolean;
        bEnableRealTimeAudio: boolean;
        EditorVolumeLevel: number;
        bEnableEditorSounds: boolean;
        DefaultLevelStreamingClass: UE.Class;
        bPromptWhenAddingToLevelBeforeCheckout: boolean;
        bPromptWhenAddingToLevelOutsideBounds: boolean;
        PercentageThresholdForPrompt: number;
        MinimumBoundsForCheckingSize: UE.Vector;
        EditorScreenshotSaveDirectory: UE.DirectoryPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelEditorMiscSettings;
        static Load(InName: string): LevelEditorMiscSettings;
    
        __tid_LevelEditorMiscSettings_0__: boolean;
    }
    
    namespace Engine.Tutorial.Basics.LevelEditorOverview {
        class LevelEditorOverview_C extends UE.EditorTutorial {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): LevelEditorOverview_C;
            static Load(InName: string): LevelEditorOverview_C;
        
            __tid_LevelEditorOverview_C_0__: boolean;
        }
        
    }

    enum NetworkEmulationTarget { Server, Client, Any, NetworkEmulationTarget_MAX, __typeKeyDoNoAccess}
    class NetworkEmulationPacketSettings {
        constructor();
        constructor(MinLatency: number, MaxLatency: number, PacketLossPercentage: number);
        MinLatency: number;
        MaxLatency: number;
        PacketLossPercentage: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NetworkEmulationPacketSettings_0__: boolean;
    }
    
    class LevelEditorPlayNetworkEmulationSettings {
        constructor();
        constructor(bIsNetworkEmulationEnabled: boolean, EmulationTarget: UE.NetworkEmulationTarget, CurrentProfile: string, OutPackets: UE.NetworkEmulationPacketSettings, InPackets: UE.NetworkEmulationPacketSettings);
        bIsNetworkEmulationEnabled: boolean;
        EmulationTarget: UE.NetworkEmulationTarget;
        CurrentProfile: string;
        OutPackets: UE.NetworkEmulationPacketSettings;
        InPackets: UE.NetworkEmulationPacketSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelEditorPlayNetworkEmulationSettings_0__: boolean;
    }
    
    class PlayScreenResolution {
        constructor();
        constructor(Description: string, Width: number, Height: number, AspectRatio: string, bCanSwapAspectRatio: boolean, ProfileName: string, ScaleFactor: number, LogicalHeight: number, LogicalWidth: number);
        Description: string;
        Width: number;
        Height: number;
        AspectRatio: string;
        bCanSwapAspectRatio: boolean;
        ProfileName: string;
        ScaleFactor: number;
        LogicalHeight: number;
        LogicalWidth: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PlayScreenResolution_0__: boolean;
    }
    
    class LevelEditorPlaySettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayFromHerePlayerStartClassName: string;
        GameGetsMouseControl: boolean;
        UseMouseForTouch: boolean;
        ShowMouseControlLabel: boolean;
        MouseControlLabelPosition: UE.ELabelAnchorMode;
        ViewportGetsHMDControl: boolean;
        ShouldMinimizeEditorOnVRPIE: boolean;
        AutoRecompileBlueprints: boolean;
        EnableGameSound: boolean;
        EnablePIEEnterAndExitSounds: boolean;
        PlayInEditorSoundQualityLevel: number;
        bUseNonRealtimeAudioDevice: boolean;
        bOnlyLoadVisibleLevelsInPIE: boolean;
        bPreferToStreamLevelsInPIE: boolean;
        NewWindowWidth: number;
        NewWindowHeight: number;
        NewWindowPosition: UE.IntPoint;
        CenterNewWindow: boolean;
        PIEAlwaysOnTop: boolean;
        DisableStandaloneSound: boolean;
        AdditionalLaunchParameters: string;
        AdditionalLaunchParametersForMobile: string;
        BuildGameBeforeLaunch: UE.EPlayOnBuildMode;
        LaunchConfiguration: UE.EPlayOnLaunchConfiguration;
        bAutoCompileBlueprintsOnLaunch: boolean;
        bLaunchSeparateServer: boolean;
        PlayNetMode: UE.EPlayNetMode;
        RunUnderOneProcess: boolean;
        PlayNetDedicated: boolean;
        PlayNumberOfClients: number;
        ServerPort: number;
        ClientWindowWidth: number;
        AutoConnectToServer: boolean;
        RouteGamepadToSecondWindow: boolean;
        CreateAudioDeviceForEveryPlayer: boolean;
        ClientWindowHeight: number;
        ServerMapNameOverride: string;
        AdditionalServerGameOptions: string;
        AdditionalLaunchOptions: string;
        bShowServerDebugDrawingByDefault: boolean;
        ServerDebugDrawingColorTintStrength: number;
        ServerDebugDrawingColorTint: UE.LinearColor;
        AdditionalServerLaunchParameters: string;
        ServerFixedFPS: number;
        ClientFixedFPS: TArray<number>;
        NetworkEmulationSettings: UE.LevelEditorPlayNetworkEmulationSettings;
        LastSize: UE.IntPoint;
        MultipleInstancePositions: TArray<UE.IntPoint>;
        LastExecutedLaunchDevice: string;
        LastExecutedLaunchName: string;
        LastExecutedLaunchModeType: UE.ELaunchModeType;
        LastExecutedPlayModeLocation: UE.EPlayModeLocations;
        LastExecutedPlayModeType: UE.EPlayModeType;
        LastExecutedPIEPreviewDevice: string;
        LaptopScreenResolutions: TArray<UE.PlayScreenResolution>;
        MonitorScreenResolutions: TArray<UE.PlayScreenResolution>;
        PhoneScreenResolutions: TArray<UE.PlayScreenResolution>;
        TabletScreenResolutions: TArray<UE.PlayScreenResolution>;
        TelevisionScreenResolutions: TArray<UE.PlayScreenResolution>;
        DeviceToEmulate: string;
        PIESafeZoneOverride: UE.Margin;
        CustomUnsafeZoneStarts: TArray<UE.Vector2D>;
        CustomUnsafeZoneDimensions: TArray<UE.Vector2D>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelEditorPlaySettings;
        static Load(InName: string): LevelEditorPlaySettings;
    
        __tid_LevelEditorPlaySettings_0__: boolean;
    }
    
    class LevelEditorViewportInstanceSettings {
        constructor();
        constructor(ViewportType: UE.ELevelViewportType, PerspViewModeIndex: UE.EViewModeIndex, OrthoViewModeIndex: UE.EViewModeIndex, EditorShowFlagsString: string, GameShowFlagsString: string, BufferVisualizationMode: string, RayTracingDebugVisualizationMode: string, ExposureSettings: UE.ExposureSettings, FOVAngle: number, FarViewPlane: number, bIsRealtime: boolean, bShowFPS: boolean, bShowOnScreenStats: boolean, EnabledStats: TArray<string>, bShowFullToolbar: boolean);
        ViewportType: UE.ELevelViewportType;
        PerspViewModeIndex: UE.EViewModeIndex;
        OrthoViewModeIndex: UE.EViewModeIndex;
        EditorShowFlagsString: string;
        GameShowFlagsString: string;
        BufferVisualizationMode: string;
        RayTracingDebugVisualizationMode: string;
        ExposureSettings: UE.ExposureSettings;
        FOVAngle: number;
        FarViewPlane: number;
        bIsRealtime: boolean;
        bShowFPS: boolean;
        bShowOnScreenStats: boolean;
        EnabledStats: TArray<string>;
        bShowFullToolbar: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelEditorViewportInstanceSettings_0__: boolean;
    }
    
    class LevelEditorViewportInstanceSettingsKeyValuePair {
        constructor();
        constructor(ConfigName: string, ConfigSettings: UE.LevelEditorViewportInstanceSettings);
        ConfigName: string;
        ConfigSettings: UE.LevelEditorViewportInstanceSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelEditorViewportInstanceSettingsKeyValuePair_0__: boolean;
    }
    
    class SnapToSurfaceSettings {
        constructor();
        constructor(bEnabled: boolean, SnapOffsetExtent: number, bSnapRotation: boolean);
        bEnabled: boolean;
        SnapOffsetExtent: number;
        bSnapRotation: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SnapToSurfaceSettings_0__: boolean;
    }
    
    class LevelEditorViewportSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FlightCameraControlType: UE.EWASDType;
        FlightCameraControlExperimentalNavigation: boolean;
        LandscapeEditorControlType: UE.ELandscapeFoliageEditorControlType;
        FoliageEditorControlType: UE.ELandscapeFoliageEditorControlType;
        bPanMovesCanvas: boolean;
        bCenterZoomAroundCursor: boolean;
        MinimumOrthographicZoom: number;
        bAllowTranslateRotateZWidget: boolean;
        bAllowArcballRotate: boolean;
        bAllowScreenRotate: boolean;
        bClickBSPSelectsBrush: boolean;
        CameraSpeed: number;
        CameraSpeedScalar: number;
        MouseScrollCameraSpeed: number;
        MouseSensitivty: number;
        bInvertMouseLookYAxis: boolean;
        bInvertOrbitYAxis: boolean;
        bInvertMiddleMousePan: boolean;
        bInvertRightMouseDollyYAxis: boolean;
        bUseAbsoluteTranslation: boolean;
        bLevelStreamingVolumePrevis: boolean;
        bUseUE3OrbitControls: boolean;
        ScrollGestureDirectionFor3DViewports: UE.EScrollGestureDirection;
        ScrollGestureDirectionForOrthoViewports: UE.EScrollGestureDirection;
        bLevelEditorJoystickControls: boolean;
        bUseDistanceScaledCameraSpeed: boolean;
        bOrbitCameraAroundSelection: boolean;
        bUsePowerOf2SnapSize: boolean;
        DecimalGridSizes: TArray<number>;
        DecimalGridIntervals: TArray<number>;
        Pow2GridSizes: TArray<number>;
        Pow2GridIntervals: TArray<number>;
        CommonRotGridSizes: TArray<number>;
        DivisionsOf360RotGridSizes: TArray<number>;
        ScalingGridSizes: TArray<number>;
        GridEnabled: boolean;
        RotGridEnabled: boolean;
        SnapScaleEnabled: boolean;
        SnapToSurface: UE.SnapToSurfaceSettings;
        bUsePercentageBasedScaling: boolean;
        bEnableLayerSnap: boolean;
        ActiveSnapLayerIndex: number;
        bEnableActorSnap: boolean;
        ActorSnapScale: number;
        ActorSnapDistance: number;
        bSnapVertices: boolean;
        SnapDistance: number;
        CurrentPosGridSize: number;
        CurrentRotGridSize: number;
        CurrentScalingGridSize: number;
        PreserveNonUniformScale: boolean;
        CurrentRotGridMode: UE.ERotationGridMode;
        bUseLegacyPostEditBehavior: boolean;
        AspectRatioAxisConstraint: UE.EAspectRatioAxisConstraint;
        bEnableViewportHoverFeedback: boolean;
        bHighlightWithBrackets: boolean;
        bUseLinkedOrthographicViewports: boolean;
        bStrictBoxSelection: boolean;
        bTransparentBoxSelection: boolean;
        bUseSelectionOutline: boolean;
        SelectionHighlightIntensity: number;
        BSPSelectionHighlightIntensity: number;
        bEnableViewportCameraToUpdateFromPIV: boolean;
        bPreviewSelectedCameras: boolean;
        CameraPreviewSize: number;
        BackgroundDropDistance: number;
        PreviewMeshes: TArray<UE.SoftObjectPath>;
        BillboardScale: number;
        TransformWidgetSizeAdjustment: number;
        bSaveEngineStats: boolean;
        MeasuringToolUnits: UE.EMeasuringToolUnits;
        SelectedSplinePointSizeAdjustment: number;
        SplineLineThicknessAdjustment: number;
        SplineTangentHandleSizeAdjustment: number;
        SplineTangentScale: number;
        PerInstanceSettings: TArray<UE.LevelEditorViewportInstanceSettingsKeyValuePair>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelEditorViewportSettings;
        static Load(InName: string): LevelEditorViewportSettings;
    
        __tid_LevelEditorViewportSettings_0__: boolean;
    }
    
    class LevelExporterFBX extends UE.ExporterFBX {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelExporterFBX;
        static Load(InName: string): LevelExporterFBX;
    
        __tid_LevelExporterFBX_0__: boolean;
    }
    
    class LevelExporterLOD extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelExporterLOD;
        static Load(InName: string): LevelExporterLOD;
    
        __tid_LevelExporterLOD_0__: boolean;
    }
    
    class LevelExporterOBJ extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelExporterOBJ;
        static Load(InName: string): LevelExporterOBJ;
    
        __tid_LevelExporterOBJ_0__: boolean;
    }
    
    class LevelExporterSTL extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelExporterSTL;
        static Load(InName: string): LevelExporterSTL;
    
        __tid_LevelExporterSTL_0__: boolean;
    }
    
    class LevelExporterT3D extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelExporterT3D;
        static Load(InName: string): LevelExporterT3D;
    
        __tid_LevelExporterT3D_0__: boolean;
    }
    
    class LevelFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelFactory;
        static Load(InName: string): LevelFactory;
    
        __tid_LevelFactory_0__: boolean;
    }
    
    class LevelNameAndTime {
        constructor();
        constructor(LevelName: string, LevelChangeTimeInMS: number);
        LevelName: string;
        LevelChangeTimeInMS: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelNameAndTime_0__: boolean;
    }
    
    class LevelSequenceAnimSequenceLinkItem {
        constructor();
        constructor(SkelTrackGuid: UE.Guid, PathToAnimSequence: UE.SoftObjectPath, bExportTransforms: boolean, bExportCurves: boolean, bRecordInWorldSpace: boolean);
        SkelTrackGuid: UE.Guid;
        PathToAnimSequence: UE.SoftObjectPath;
        bExportTransforms: boolean;
        bExportCurves: boolean;
        bRecordInWorldSpace: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceAnimSequenceLinkItem_0__: boolean;
    }
    
    class LevelSequenceAnimSequenceLink extends UE.AssetUserData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimSequenceLinks: TArray<UE.LevelSequenceAnimSequenceLinkItem>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceAnimSequenceLink;
        static Load(InName: string): LevelSequenceAnimSequenceLink;
    
        __tid_LevelSequenceAnimSequenceLink_0__: boolean;
    }
    
    class LevelSequenceDirector extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Player: UE.LevelSequencePlayer;
        OnCreated() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceDirector;
        static Load(InName: string): LevelSequenceDirector;
    
        __tid_LevelSequenceDirector_0__: boolean;
    }
    
    class SequencerChannelProxy {
        constructor();
        constructor(ChannelName: string, Section: UE.MovieSceneSection);
        ChannelName: string;
        Section: UE.MovieSceneSection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SequencerChannelProxy_0__: boolean;
    }
    
    class LevelSequenceEditorBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CloseLevelSequence() : void;
        static EmptySelection() : void;
        static GetBoundObjects(ObjectBinding: UE.MovieSceneObjectBindingID) : TArray<UE.Object>;
        static GetCurrentLevelSequence() : UE.LevelSequence;
        static GetCurrentTime() : number;
        static GetSelectedChannels() : TArray<UE.SequencerChannelProxy>;
        static GetSelectedFolders() : TArray<UE.MovieSceneFolder>;
        static GetSelectedObjects() : TArray<UE.Guid>;
        static GetSelectedSections() : TArray<UE.MovieSceneSection>;
        static GetSelectedTracks() : TArray<UE.MovieSceneTrack>;
        static IsLevelSequenceLocked() : boolean;
        static IsPlaying() : boolean;
        static OpenLevelSequence(LevelSequence: $Nullable<UE.LevelSequence>) : boolean;
        static Pause() : void;
        static Play() : void;
        static RefreshCurrentLevelSequence() : void;
        static SelectChannels(Channels: TArray<UE.SequencerChannelProxy>) : void;
        static SelectFolders(Folders: TArray<UE.MovieSceneFolder>) : void;
        static SelectObjects(ObjectBinding: TArray<UE.Guid>) : void;
        static SelectSections(Sections: TArray<UE.MovieSceneSection>) : void;
        static SelectTracks(Tracks: TArray<UE.MovieSceneTrack>) : void;
        static SetCurrentTime(NewFrame: number) : void;
        static SetLockLevelSequence(bLock: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceEditorBlueprintLibrary;
        static Load(InName: string): LevelSequenceEditorBlueprintLibrary;
    
        __tid_LevelSequenceEditorBlueprintLibrary_0__: boolean;
    }
    
    class LevelSequencePropertyTrackSettings {
        constructor();
        constructor(ComponentPath: string, PropertyPath: string);
        ComponentPath: string;
        PropertyPath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequencePropertyTrackSettings_0__: boolean;
    }
    
    class LevelSequenceTrackSettings {
        constructor();
        constructor(MatchingActorClass: UE.SoftClassPath, DefaultTracks: TArray<UE.SoftClassPath>, ExcludeDefaultTracks: TArray<UE.SoftClassPath>, DefaultPropertyTracks: TArray<UE.LevelSequencePropertyTrackSettings>, ExcludeDefaultPropertyTracks: TArray<UE.LevelSequencePropertyTrackSettings>);
        MatchingActorClass: UE.SoftClassPath;
        DefaultTracks: TArray<UE.SoftClassPath>;
        ExcludeDefaultTracks: TArray<UE.SoftClassPath>;
        DefaultPropertyTracks: TArray<UE.LevelSequencePropertyTrackSettings>;
        ExcludeDefaultPropertyTracks: TArray<UE.LevelSequencePropertyTrackSettings>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceTrackSettings_0__: boolean;
    }
    
    class LevelSequenceEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TrackSettings: TArray<UE.LevelSequenceTrackSettings>;
        bAutoBindToPIE: boolean;
        bAutoBindToSimulate: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceEditorSettings;
        static Load(InName: string): LevelSequenceEditorSettings;
    
        __tid_LevelSequenceEditorSettings_0__: boolean;
    }
    
    class LevelSequenceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceFactoryNew;
        static Load(InName: string): LevelSequenceFactoryNew;
    
        __tid_LevelSequenceFactoryNew_0__: boolean;
    }
    
    class LevelSequenceLegacyObjectReference {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelSequenceLegacyObjectReference_0__: boolean;
    }
    
    class LevelSequenceMasterSequenceSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MasterSequenceName: string;
        MasterSequenceSuffix: string;
        MasterSequenceBasePath: UE.DirectoryPath;
        MasterSequenceNumShots: number;
        MasterSequenceLevelSequenceToDuplicate: TLazyObjectPtr<UE.LevelSequence>;
        SubSequenceNames: TArray<string>;
        bInstanceSubSequences: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceMasterSequenceSettings;
        static Load(InName: string): LevelSequenceMasterSequenceSettings;
    
        __tid_LevelSequenceMasterSequenceSettings_0__: boolean;
    }
    
    enum MediaTextureOutputFormat { MTOF_Default, MTOF_SRGB_LINOUT, MTOF_MAX, __typeKeyDoNoAccess}
    enum MediaTextureOrientation { MTORI_Original, MTORI_CW90, MTORI_CW180, MTORI_CW270, MTORI_MAX, __typeKeyDoNoAccess}
    class MediaPlaylist extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Items: TArray<UE.MediaSource>;
        Add(MediaSource: $Nullable<UE.MediaSource>) : boolean;
        AddFile(FilePath: string) : boolean;
        AddUrl(Url: string) : boolean;
        Get(Index: number) : UE.MediaSource;
        GetNext(InOutIndex: $Ref<number>) : UE.MediaSource;
        GetPrevious(InOutIndex: $Ref<number>) : UE.MediaSource;
        GetRandom(OutIndex: $Ref<number>) : UE.MediaSource;
        Insert(MediaSource: $Nullable<UE.MediaSource>, Index: number) : void;
        Num() : number;
        Remove(MediaSource: $Nullable<UE.MediaSource>) : boolean;
        RemoveAt(Index: number) : boolean;
        Replace(Index: number, Replacement: $Nullable<UE.MediaSource>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaPlaylist;
        static Load(InName: string): MediaPlaylist;
    
        __tid_MediaPlaylist_0__: boolean;
    }
    
    class MediaPlayerTrackOptions {
        constructor();
        constructor(Audio: number, Caption: number, Metadata: number, Script: number, Subtitle: number, Text: number, Video: number);
        Audio: number;
        Caption: number;
        Metadata: number;
        Script: number;
        Subtitle: number;
        Text: number;
        Video: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MediaPlayerTrackOptions_0__: boolean;
    }
    
    class MediaPlayerOptions {
        constructor();
        constructor(Tracks: UE.MediaPlayerTrackOptions, SeekTime: UE.Timespan, PlayOnOpen: UE.EMediaPlayerOptionBooleanOverride, Loop: UE.EMediaPlayerOptionBooleanOverride);
        Tracks: UE.MediaPlayerTrackOptions;
        SeekTime: UE.Timespan;
        PlayOnOpen: UE.EMediaPlayerOptionBooleanOverride;
        Loop: UE.EMediaPlayerOptionBooleanOverride;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MediaPlayerOptions_0__: boolean;
    }
    
    class MediaTimeStampInfo extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Time: UE.Timespan;
        SequenceIndex: bigint;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaTimeStampInfo;
        static Load(InName: string): MediaTimeStampInfo;
    
        __tid_MediaTimeStampInfo_0__: boolean;
    }
    
    class MediaPlayer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnEndReached: $MulticastDelegate<() => void>;
        OnMediaClosed: $MulticastDelegate<() => void>;
        OnMediaOpened: $MulticastDelegate<(OpenedUrl: string) => void>;
        OnMediaOpenFailed: $MulticastDelegate<(FailedUrl: string) => void>;
        OnPlaybackResumed: $MulticastDelegate<() => void>;
        OnPlaybackSuspended: $MulticastDelegate<() => void>;
        OnSeekCompleted: $MulticastDelegate<() => void>;
        OnTracksChanged: $MulticastDelegate<() => void>;
        CacheAhead: UE.Timespan;
        CacheBehind: UE.Timespan;
        CacheBehindGame: UE.Timespan;
        NativeAudioOut: boolean;
        PlayOnOpen: boolean;
        Shuffle: boolean;
        Loop: boolean;
        Playlist: UE.MediaPlaylist;
        PlaylistIndex: number;
        TimeDelay: UE.Timespan;
        HorizontalFieldOfView: number;
        VerticalFieldOfView: number;
        ViewRotation: UE.Rotator;
        PlayerGuid: UE.Guid;
        AffectedByPIEHandling: boolean;
        CanPause() : boolean;
        CanPlaySource(MediaSource: $Nullable<UE.MediaSource>) : boolean;
        CanPlayUrl(Url: string) : boolean;
        Close() : void;
        GetAudioTrackChannels(TrackIndex: number, FormatIndex: number) : number;
        GetAudioTrackSampleRate(TrackIndex: number, FormatIndex: number) : number;
        GetAudioTrackType(TrackIndex: number, FormatIndex: number) : string;
        GetDesiredPlayerName() : string;
        GetDuration() : UE.Timespan;
        GetHorizontalFieldOfView() : number;
        GetMediaName() : string;
        GetNumTrackFormats(TrackType: UE.EMediaPlayerTrack, TrackIndex: number) : number;
        GetNumTracks(TrackType: UE.EMediaPlayerTrack) : number;
        GetPlayerName() : string;
        GetPlaylist() : UE.MediaPlaylist;
        GetPlaylistIndex() : number;
        GetRate() : number;
        GetSelectedTrack(TrackType: UE.EMediaPlayerTrack) : number;
        GetSupportedRates(OutRates: $Ref<TArray<UE.FloatRange>>, Unthinned: boolean) : void;
        GetTime() : UE.Timespan;
        GetTimeDelay() : UE.Timespan;
        GetTimeStamp() : UE.MediaTimeStampInfo;
        GetTrackDisplayName(TrackType: UE.EMediaPlayerTrack, TrackIndex: number) : string;
        GetTrackFormat(TrackType: UE.EMediaPlayerTrack, TrackIndex: number) : number;
        GetTrackLanguage(TrackType: UE.EMediaPlayerTrack, TrackIndex: number) : string;
        GetUrl() : string;
        GetVerticalFieldOfView() : number;
        GetVideoTrackAspectRatio(TrackIndex: number, FormatIndex: number) : number;
        GetVideoTrackDimensions(TrackIndex: number, FormatIndex: number) : UE.IntPoint;
        GetVideoTrackFrameRate(TrackIndex: number, FormatIndex: number) : number;
        GetVideoTrackFrameRates(TrackIndex: number, FormatIndex: number) : UE.FloatRange;
        GetVideoTrackType(TrackIndex: number, FormatIndex: number) : string;
        GetViewRotation() : UE.Rotator;
        HasError() : boolean;
        IsBuffering() : boolean;
        IsClosed() : boolean;
        IsConnecting() : boolean;
        IsLooping() : boolean;
        IsPaused() : boolean;
        IsPlaying() : boolean;
        IsPreparing() : boolean;
        IsReady() : boolean;
        Next() : boolean;
        OpenFile(FilePath: string) : boolean;
        OpenPlaylist(InPlaylist: $Nullable<UE.MediaPlaylist>) : boolean;
        OpenPlaylistIndex(InPlaylist: $Nullable<UE.MediaPlaylist>, Index: number) : boolean;
        OpenSource(MediaSource: $Nullable<UE.MediaSource>) : boolean;
        OpenSourceLatent(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, MediaSource: $Nullable<UE.MediaSource>, Options: UE.MediaPlayerOptions, bSuccess: $Ref<boolean>) : void;
        OpenSourceWithOptions(MediaSource: $Nullable<UE.MediaSource>, Options: UE.MediaPlayerOptions) : boolean;
        OpenUrl(Url: string) : boolean;
        Pause() : boolean;
        Play() : boolean;
        PlayAndSeek() : void;
        Previous() : boolean;
        Reopen() : boolean;
        Rewind() : boolean;
        Seek(Time: UE.Timespan) : boolean;
        SelectTrack(TrackType: UE.EMediaPlayerTrack, TrackIndex: number) : boolean;
        SetBlockOnTime(Time: UE.Timespan) : void;
        SetDesiredPlayerName(PlayerName: string) : void;
        SetLooping(Looping: boolean) : boolean;
        SetMediaOptions(Options: $Nullable<UE.MediaSource>) : void;
        SetNativeVolume(Volume: number) : boolean;
        SetRate(Rate: number) : boolean;
        SetTimeDelay(TimeDelay: UE.Timespan) : void;
        SetTrackFormat(TrackType: UE.EMediaPlayerTrack, TrackIndex: number, FormatIndex: number) : boolean;
        SetVideoTrackFrameRate(TrackIndex: number, FormatIndex: number, FrameRate: number) : boolean;
        SetViewField(Horizontal: number, Vertical: number, Absolute: boolean) : boolean;
        SetViewRotation(Rotation: UE.Rotator, Absolute: boolean) : boolean;
        SupportsRate(Rate: number, Unthinned: boolean) : boolean;
        SupportsScrubbing() : boolean;
        SupportsSeeking() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaPlayer;
        static Load(InName: string): MediaPlayer;
    
        __tid_MediaPlayer_0__: boolean;
    }
    
    class MediaTexture extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddressX: UE.TextureAddress;
        AddressY: UE.TextureAddress;
        AutoClear: boolean;
        ClearColor: UE.LinearColor;
        EnableGenMips: boolean;
        NumMips: number;
        NewStyleOutput: boolean;
        OutputFormat: UE.MediaTextureOutputFormat;
        CurrentAspectRatio: number;
        CurrentOrientation: UE.MediaTextureOrientation;
        MediaPlayer: UE.MediaPlayer;
        GetAspectRatio() : number;
        GetHeight() : number;
        GetMediaPlayer() : UE.MediaPlayer;
        GetWidth() : number;
        SetMediaPlayer(NewMediaPlayer: $Nullable<UE.MediaPlayer>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaTexture;
        static Load(InName: string): MediaTexture;
    
        __tid_MediaTexture_0__: boolean;
    }
    
    class MediaComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MediaTexture: UE.MediaTexture;
        MediaPlayer: UE.MediaPlayer;
        GetMediaPlayer() : UE.MediaPlayer;
        GetMediaTexture() : UE.MediaTexture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaComponent;
        static Load(InName: string): MediaComponent;
    
        __tid_MediaComponent_0__: boolean;
    }
    
    class LevelSequenceMediaController extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sequence: UE.LevelSequenceActor;
        MediaComponent: UE.MediaComponent;
        ServerStartTimeSeconds: number;
        GetMediaComponent() : UE.MediaComponent;
        GetSequence() : UE.LevelSequenceActor;
        OnRep_ServerStartTimeSeconds() : void;
        Play() : void;
        SynchronizeToServer(DesyncThresholdSeconds?: number /* = 2.000000 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceMediaController;
        static Load(InName: string): LevelSequenceMediaController;
    
        __tid_LevelSequenceMediaController_0__: boolean;
    }
    
    class LevelSequenceMetaData extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelSequenceMetaData;
        static Load(InName: string): LevelSequenceMetaData;
    
        __tid_LevelSequenceMetaData_0__: boolean;
    }
    
    class LevelStreamingAlwaysLoaded extends UE.LevelStreaming {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelStreamingAlwaysLoaded;
        static Load(InName: string): LevelStreamingAlwaysLoaded;
    
        __tid_LevelStreamingAlwaysLoaded_0__: boolean;
    }
    
    class LevelStreamingDynamic extends UE.LevelStreaming {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bInitiallyLoaded: boolean;
        bInitiallyVisible: boolean;
        static LoadLevelInstance(WorldContextObject: $Nullable<UE.Object>, LevelName: string, Location: UE.Vector, Rotation: UE.Rotator, bOutSuccess: $Ref<boolean>, OptionalLevelNameOverride?: string /* = "" */) : UE.LevelStreamingDynamic;
        static LoadLevelInstanceBySoftObjectPtr(WorldContextObject: $Nullable<UE.Object>, Level: TSoftObjectPtr<UE.World>, Location: UE.Vector, Rotation: UE.Rotator, bOutSuccess: $Ref<boolean>, OptionalLevelNameOverride?: string /* = "" */) : UE.LevelStreamingDynamic;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelStreamingDynamic;
        static Load(InName: string): LevelStreamingDynamic;
    
        __tid_LevelStreamingDynamic_0__: boolean;
    }
    
    class LevelStreamingPersistent extends UE.LevelStreaming {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelStreamingPersistent;
        static Load(InName: string): LevelStreamingPersistent;
    
        __tid_LevelStreamingPersistent_0__: boolean;
    }
    
    class LevelStreamingStatus {
        constructor();
        constructor(PackageName: string, bShouldBeLoaded: boolean, bShouldBeVisible: boolean, LODIndex: number);
        PackageName: string;
        bShouldBeLoaded: boolean;
        bShouldBeVisible: boolean;
        LODIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelStreamingStatus_0__: boolean;
    }
    
    class LevelThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelThumbnailRenderer;
        static Load(InName: string): LevelThumbnailRenderer;
    
        __tid_LevelThumbnailRenderer_0__: boolean;
    }
    
    class LevelVariantSetsActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LevelVariantSets: UE.SoftObjectPath;
        GetLevelVariantSets(bLoad?: boolean /* = false */) : UE.LevelVariantSets;
        SetLevelVariantSets(InVariantSets: $Nullable<UE.LevelVariantSets>) : void;
        SwitchOnVariantByIndex(VariantSetIndex: number, VariantIndex: number) : boolean;
        SwitchOnVariantByName(VariantSetName: string, VariantName: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelVariantSetsActor;
        static Load(InName: string): LevelVariantSetsActor;
    
        __tid_LevelVariantSetsActor_0__: boolean;
    }
    
    class LevelVariantSetsActorFactory extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelVariantSetsActorFactory;
        static Load(InName: string): LevelVariantSetsActorFactory;
    
        __tid_LevelVariantSetsActorFactory_0__: boolean;
    }
    
    class LevelVariantSetsFunctionDirector extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelVariantSetsFunctionDirector;
        static Load(InName: string): LevelVariantSetsFunctionDirector;
    
        __tid_LevelVariantSetsFunctionDirector_0__: boolean;
    }
    
    class LevelViewportToolBarContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LevelViewportToolBarContext;
        static Load(InName: string): LevelViewportToolBarContext;
    
        __tid_LevelViewportToolBarContext_0__: boolean;
    }
    
    class MovieSceneLevelVisibilitySection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Visibility: UE.ELevelVisibility;
        LevelNames: TArray<string>;
        GetLevelNames() : TArray<string>;
        GetVisibility() : UE.ELevelVisibility;
        SetLevelNames(InLevelNames: TArray<string>) : void;
        SetVisibility(InVisibility: UE.ELevelVisibility) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneLevelVisibilitySection;
        static Load(InName: string): MovieSceneLevelVisibilitySection;
    
        __tid_MovieSceneLevelVisibilitySection_0__: boolean;
    }
    
    class LevelVisibilityComponentData {
        constructor();
        constructor(Section: UE.MovieSceneLevelVisibilitySection);
        Section: UE.MovieSceneLevelVisibilitySection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LevelVisibilityComponentData_0__: boolean;
    }
    
    class LightingBuildInfo extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Object: TWeakObjectPtr<UE.Object>;
        LightingTime: number;
        UnmappedTexelsPercentage: number;
        UnmappedTexelsMemory: number;
        TotalTexelMemory: number;
        LevelName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightingBuildInfo;
        static Load(InName: string): LightingBuildInfo;
    
        __tid_LightingBuildInfo_0__: boolean;
    }
    
    class LightmappedSurfaceCollection extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceModel: UE.Model;
        Surfaces: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightmappedSurfaceCollection;
        static Load(InName: string): LightmappedSurfaceCollection;
    
        __tid_LightmappedSurfaceCollection_0__: boolean;
    }
    
    class LightMapTexture2D extends UE.Texture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightMapTexture2D;
        static Load(InName: string): LightMapTexture2D;
    
        __tid_LightMapTexture2D_0__: boolean;
    }
    
    class VirtualTexture extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VirtualTexture;
        static Load(InName: string): VirtualTexture;
    
        __tid_VirtualTexture_0__: boolean;
    }
    
    class LightMapVirtualTexture extends UE.VirtualTexture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightMapVirtualTexture;
        static Load(InName: string): LightMapVirtualTexture;
    
        __tid_LightMapVirtualTexture_0__: boolean;
    }
    
    class LightMapVirtualTexture2D extends UE.Texture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TypeToLayer: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightMapVirtualTexture2D;
        static Load(InName: string): LightMapVirtualTexture2D;
    
        __tid_LightMapVirtualTexture2D_0__: boolean;
    }
    
    class LightmassParameterValue {
        constructor();
        constructor(bOverride: boolean);
        bOverride: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassParameterValue_0__: boolean;
    }
    
    class LightmassBooleanParameterValue extends UE.LightmassParameterValue {
        constructor();
        constructor(ParameterValue: boolean);
        ParameterValue: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassBooleanParameterValue_0__: boolean;
    }
    
    class LightmassCharacterIndirectDetailVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightmassCharacterIndirectDetailVolume;
        static Load(InName: string): LightmassCharacterIndirectDetailVolume;
    
        __tid_LightmassCharacterIndirectDetailVolume_0__: boolean;
    }
    
    class LightmassDebugOptions {
        constructor();
        constructor(bDebugMode: boolean, bStatsEnabled: boolean, bGatherBSPSurfacesAcrossComponents: boolean, CoplanarTolerance: number, bUseImmediateImport: boolean, bImmediateProcessMappings: boolean, bSortMappings: boolean, bDumpBinaryFiles: boolean, bDebugMaterials: boolean, bPadMappings: boolean, bDebugPaddings: boolean, bOnlyCalcDebugTexelMappings: boolean, bUseRandomColors: boolean, bColorBordersGreen: boolean, bColorByExecutionTime: boolean, ExecutionTimeDivisor: number);
        bDebugMode: boolean;
        bStatsEnabled: boolean;
        bGatherBSPSurfacesAcrossComponents: boolean;
        CoplanarTolerance: number;
        bUseImmediateImport: boolean;
        bImmediateProcessMappings: boolean;
        bSortMappings: boolean;
        bDumpBinaryFiles: boolean;
        bDebugMaterials: boolean;
        bPadMappings: boolean;
        bDebugPaddings: boolean;
        bOnlyCalcDebugTexelMappings: boolean;
        bUseRandomColors: boolean;
        bColorBordersGreen: boolean;
        bColorByExecutionTime: boolean;
        ExecutionTimeDivisor: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassDebugOptions_0__: boolean;
    }
    
    class LightmassImportanceVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightmassImportanceVolume;
        static Load(InName: string): LightmassImportanceVolume;
    
        __tid_LightmassImportanceVolume_0__: boolean;
    }
    
    class SwarmDebugOptions {
        constructor();
        constructor(bDistributionEnabled: boolean, bForceContentExport: boolean, bInitialized: boolean);
        bDistributionEnabled: boolean;
        bForceContentExport: boolean;
        bInitialized: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmDebugOptions_0__: boolean;
    }
    
    class LightmassOptionsObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DebugSettings: UE.LightmassDebugOptions;
        SwarmSettings: UE.SwarmDebugOptions;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightmassOptionsObject;
        static Load(InName: string): LightmassOptionsObject;
    
        __tid_LightmassOptionsObject_0__: boolean;
    }
    
    class LightmassScalarParameterValue extends UE.LightmassParameterValue {
        constructor();
        constructor(ParameterValue: number);
        ParameterValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassScalarParameterValue_0__: boolean;
    }
    
    class LightmassParameterizedMaterialSettings {
        constructor();
        constructor(CastShadowAsMasked: UE.LightmassBooleanParameterValue, EmissiveBoost: UE.LightmassScalarParameterValue, DiffuseBoost: UE.LightmassScalarParameterValue, ExportResolutionScale: UE.LightmassScalarParameterValue);
        CastShadowAsMasked: UE.LightmassBooleanParameterValue;
        EmissiveBoost: UE.LightmassScalarParameterValue;
        DiffuseBoost: UE.LightmassScalarParameterValue;
        ExportResolutionScale: UE.LightmassScalarParameterValue;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightmassParameterizedMaterialSettings_0__: boolean;
    }
    
    class LightmassPortalComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PreviewBox: UE.BoxComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightmassPortalComponent;
        static Load(InName: string): LightmassPortalComponent;
    
        __tid_LightmassPortalComponent_0__: boolean;
    }
    
    class LightmassPortal extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PortalComponent: UE.LightmassPortalComponent;
        SpriteComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightmassPortal;
        static Load(InName: string): LightmassPortal;
    
        __tid_LightmassPortal_0__: boolean;
    }
    
    class LightmassPrimitiveSettingsObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightmassSettings: UE.LightmassPrimitiveSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightmassPrimitiveSettingsObject;
        static Load(InName: string): LightmassPrimitiveSettingsObject;
    
        __tid_LightmassPrimitiveSettingsObject_0__: boolean;
    }
    
    class LightPropagationVolumeSettings {
        constructor();
        constructor(bOverride_LPVIntensity: boolean, bOverride_LPVDirectionalOcclusionIntensity: boolean, bOverride_LPVDirectionalOcclusionRadius: boolean, bOverride_LPVDiffuseOcclusionExponent: boolean, bOverride_LPVSpecularOcclusionExponent: boolean, bOverride_LPVDiffuseOcclusionIntensity: boolean, bOverride_LPVSpecularOcclusionIntensity: boolean, bOverride_LPVSize: boolean, bOverride_LPVSecondaryOcclusionIntensity: boolean, bOverride_LPVSecondaryBounceIntensity: boolean, bOverride_LPVGeometryVolumeBias: boolean, bOverride_LPVVplInjectionBias: boolean, bOverride_LPVEmissiveInjectionIntensity: boolean, LPVIntensity: number, LPVVplInjectionBias: number, LPVSize: number, LPVSecondaryOcclusionIntensity: number, LPVSecondaryBounceIntensity: number, LPVGeometryVolumeBias: number, LPVEmissiveInjectionIntensity: number, LPVDirectionalOcclusionIntensity: number, LPVDirectionalOcclusionRadius: number, LPVDiffuseOcclusionExponent: number, LPVSpecularOcclusionExponent: number, LPVDiffuseOcclusionIntensity: number, LPVSpecularOcclusionIntensity: number, LPVFadeRange: number, LPVDirectionalOcclusionFadeRange: number);
        bOverride_LPVIntensity: boolean;
        bOverride_LPVDirectionalOcclusionIntensity: boolean;
        bOverride_LPVDirectionalOcclusionRadius: boolean;
        bOverride_LPVDiffuseOcclusionExponent: boolean;
        bOverride_LPVSpecularOcclusionExponent: boolean;
        bOverride_LPVDiffuseOcclusionIntensity: boolean;
        bOverride_LPVSpecularOcclusionIntensity: boolean;
        bOverride_LPVSize: boolean;
        bOverride_LPVSecondaryOcclusionIntensity: boolean;
        bOverride_LPVSecondaryBounceIntensity: boolean;
        bOverride_LPVGeometryVolumeBias: boolean;
        bOverride_LPVVplInjectionBias: boolean;
        bOverride_LPVEmissiveInjectionIntensity: boolean;
        LPVIntensity: number;
        LPVVplInjectionBias: number;
        LPVSize: number;
        LPVSecondaryOcclusionIntensity: number;
        LPVSecondaryBounceIntensity: number;
        LPVGeometryVolumeBias: number;
        LPVEmissiveInjectionIntensity: number;
        LPVDirectionalOcclusionIntensity: number;
        LPVDirectionalOcclusionRadius: number;
        LPVDiffuseOcclusionExponent: number;
        LPVSpecularOcclusionExponent: number;
        LPVDiffuseOcclusionIntensity: number;
        LPVSpecularOcclusionIntensity: number;
        LPVFadeRange: number;
        LPVDirectionalOcclusionFadeRange: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LightPropagationVolumeSettings_0__: boolean;
    }
    
    class LightPropagationVolumeBlendable extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.LightPropagationVolumeSettings;
        BlendWeight: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightPropagationVolumeBlendable;
        static Load(InName: string): LightPropagationVolumeBlendable;
    
        __tid_LightPropagationVolumeBlendable_0__: boolean;
    }
    
    class LightPropagationVolumeBlendableFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LightPropagationVolumeBlendableFactory;
        static Load(InName: string): LightPropagationVolumeBlendableFactory;
    
        __tid_LightPropagationVolumeBlendableFactory_0__: boolean;
    }
    
    class LinearStairBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StepLength: number;
        StepHeight: number;
        StepWidth: number;
        NumSteps: number;
        AddToFirstStep: number;
        GroupName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LinearStairBuilder;
        static Load(InName: string): LinearStairBuilder;
    
        __tid_LinearStairBuilder_0__: boolean;
    }
    
    class LineSplineGenerator extends UE.SplineGeneratorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberOfPoints: number;
        Length: number;
        bEnableUpToNextPoint: boolean;
        bUpToNextPoint: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LineSplineGenerator;
        static Load(InName: string): LineSplineGenerator;
    
        __tid_LineSplineGenerator_0__: boolean;
    }
    
    class LinkerPlaceholderClass extends UE.Class {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LinkerPlaceholderClass;
        static Load(InName: string): LinkerPlaceholderClass;
    
        __tid_LinkerPlaceholderClass_0__: boolean;
    }
    
    class LinkerPlaceholderExportObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LinkerPlaceholderExportObject;
        static Load(InName: string): LinkerPlaceholderExportObject;
    
        __tid_LinkerPlaceholderExportObject_0__: boolean;
    }
    
    class LinkerPlaceholderFunction extends UE.Function {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LinkerPlaceholderFunction;
        static Load(InName: string): LinkerPlaceholderFunction;
    
        __tid_LinkerPlaceholderFunction_0__: boolean;
    }
    
    class LinuxTargetSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpatializationPlugin: string;
        ReverbPlugin: string;
        OcclusionPlugin: string;
        SoundCueCookQualityIndex: number;
        TargetedRHIs: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LinuxTargetSettings;
        static Load(InName: string): LinuxTargetSettings;
    
        __tid_LinuxTargetSettings_0__: boolean;
    }
    
    class ListMaterialsUsedWithMeshEmittersCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ListMaterialsUsedWithMeshEmittersCommandlet;
        static Load(InName: string): ListMaterialsUsedWithMeshEmittersCommandlet;
    
        __tid_ListMaterialsUsedWithMeshEmittersCommandlet_0__: boolean;
    }
    
    class ListStaticMeshesImportedFromSpeedTreesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ListStaticMeshesImportedFromSpeedTreesCommandlet;
        static Load(InName: string): ListStaticMeshesImportedFromSpeedTreesCommandlet;
    
        __tid_ListStaticMeshesImportedFromSpeedTreesCommandlet_0__: boolean;
    }
    
    class ListViewBase extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EntryWidgetClass: UE.Class;
        WheelScrollMultiplier: number;
        bEnableScrollAnimation: boolean;
        bEnableFixedLineOffset: boolean;
        FixedLineScrollOffset: number;
        BP_OnEntryGenerated: $MulticastDelegate<(Widget: $Nullable<UE.UserWidget>) => void>;
        BP_OnEntryReleased: $MulticastDelegate<(Widget: $Nullable<UE.UserWidget>) => void>;
        NumDesignerPreviewEntries: number;
        EntryWidgetPool: UE.UserWidgetPool;
        GetDisplayedEntryWidgets() : TArray<UE.UserWidget>;
        RegenerateAllEntries() : void;
        RequestRefresh() : void;
        ScrollToBottom() : void;
        ScrollToTop() : void;
        SetScrollbarVisibility(InVisibility: UE.ESlateVisibility) : void;
        SetScrollOffset(InScrollOffset: number) : void;
        SetWheelScrollMultiplier(NewWheelScrollMultiplier: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ListViewBase;
        static Load(InName: string): ListViewBase;
    
        __tid_ListViewBase_0__: boolean;
    }
    
    class ListView extends UE.ListViewBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Orientation: UE.EOrientation;
        SelectionMode: UE.ESelectionMode;
        ConsumeMouseWheel: UE.EConsumeMouseWheel;
        bClearSelectionOnClick: boolean;
        bIsFocusable: boolean;
        EntrySpacing: number;
        bReturnFocusToSelection: boolean;
        ListItems: TArray<UE.Object>;
        BP_OnEntryInitialized: $MulticastDelegate<(Item: $Nullable<UE.Object>, Widget: $Nullable<UE.UserWidget>) => void>;
        BP_OnItemClicked: $MulticastDelegate<(Item: $Nullable<UE.Object>) => void>;
        BP_OnItemDoubleClicked: $MulticastDelegate<(Item: $Nullable<UE.Object>) => void>;
        BP_OnItemIsHoveredChanged: $MulticastDelegate<(Item: $Nullable<UE.Object>, bIsHovered: boolean) => void>;
        BP_OnItemSelectionChanged: $MulticastDelegate<(Item: $Nullable<UE.Object>, bIsSelected: boolean) => void>;
        BP_OnItemScrolledIntoView: $MulticastDelegate<(Item: $Nullable<UE.Object>, Widget: $Nullable<UE.UserWidget>) => void>;
        AddItem(Item: $Nullable<UE.Object>) : void;
        BP_CancelScrollIntoView() : void;
        BP_ClearSelection() : void;
        BP_GetNumItemsSelected() : number;
        BP_GetSelectedItem() : UE.Object;
        BP_GetSelectedItems(Items: $Ref<TArray<UE.Object>>) : boolean;
        BP_IsItemVisible(Item: $Nullable<UE.Object>) : boolean;
        BP_NavigateToItem(Item: $Nullable<UE.Object>) : void;
        BP_ScrollItemIntoView(Item: $Nullable<UE.Object>) : void;
        BP_SetItemSelection(Item: $Nullable<UE.Object>, bSelected: boolean) : void;
        BP_SetListItems(InListItems: TArray<UE.Object>) : void;
        BP_SetSelectedItem(Item: $Nullable<UE.Object>) : void;
        ClearListItems() : void;
        GetIndexForItem(Item: $Nullable<UE.Object>) : number;
        GetItemAt(Index: number) : UE.Object;
        GetListItems() : TArray<UE.Object>;
        GetNumItems() : number;
        IsRefreshPending() : boolean;
        NavigateToIndex(Index: number) : void;
        RemoveItem(Item: $Nullable<UE.Object>) : void;
        ScrollIndexIntoView(Index: number) : void;
        SetSelectedIndex(Index: number) : void;
        SetSelectionMode(SelectionMode: UE.ESelectionMode) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ListView;
        static Load(InName: string): ListView;
    
        __tid_ListView_0__: boolean;
    }
    
    class ListViewDesignerPreviewItem extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ListViewDesignerPreviewItem;
        static Load(InName: string): ListViewDesignerPreviewItem;
    
        __tid_ListViewDesignerPreviewItem_0__: boolean;
    }
    
    class LiveCodingSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnabled: boolean;
        Startup: UE.ELiveCodingStartupMode;
        bPreloadEngineModules: boolean;
        bPreloadEnginePluginModules: boolean;
        bPreloadProjectModules: boolean;
        bPreloadProjectPluginModules: boolean;
        PreloadNamedModules: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveCodingSettings;
        static Load(InName: string): LiveCodingSettings;
    
        __tid_LiveCodingSettings_0__: boolean;
    }
    
    class LiveLinkWorldTime {
        constructor();
        constructor(Time: number, Offset: number);
        Time: number;
        Offset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkWorldTime_0__: boolean;
    }
    
    class LiveLinkMetaData {
        constructor();
        constructor(StringMetaData: TMap<string, string>, SceneTime: UE.QualifiedFrameTime);
        StringMetaData: TMap<string, string>;
        SceneTime: UE.QualifiedFrameTime;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkMetaData_0__: boolean;
    }
    
    class LiveLinkBaseFrameData {
        constructor();
        constructor(WorldTime: UE.LiveLinkWorldTime, MetaData: UE.LiveLinkMetaData, PropertyValues: TArray<number>);
        WorldTime: UE.LiveLinkWorldTime;
        MetaData: UE.LiveLinkMetaData;
        PropertyValues: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkBaseFrameData_0__: boolean;
    }
    
    class LiveLinkAnimationFrameData extends UE.LiveLinkBaseFrameData {
        constructor();
        constructor(Transforms: TArray<UE.Transform>);
        Transforms: TArray<UE.Transform>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkAnimationFrameData_0__: boolean;
    }
    
    class LiveLinkRole extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkRole;
        static Load(InName: string): LiveLinkRole;
    
        __tid_LiveLinkRole_0__: boolean;
    }
    
    class LiveLinkBasicRole extends UE.LiveLinkRole {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkBasicRole;
        static Load(InName: string): LiveLinkBasicRole;
    
        __tid_LiveLinkBasicRole_0__: boolean;
    }
    
    class LiveLinkAnimationRole extends UE.LiveLinkBasicRole {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkAnimationRole;
        static Load(InName: string): LiveLinkAnimationRole;
    
        __tid_LiveLinkAnimationRole_0__: boolean;
    }
    
    class LiveLinkBaseBlueprintData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkBaseBlueprintData_0__: boolean;
    }
    
    class LiveLinkBaseStaticData {
        constructor();
        constructor(PropertyNames: TArray<string>);
        PropertyNames: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkBaseStaticData_0__: boolean;
    }
    
    class LiveLinkBasicBlueprintData extends UE.LiveLinkBaseBlueprintData {
        constructor();
        constructor(StaticData: UE.LiveLinkBaseStaticData, FrameData: UE.LiveLinkBaseFrameData);
        StaticData: UE.LiveLinkBaseStaticData;
        FrameData: UE.LiveLinkBaseFrameData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkBasicBlueprintData_0__: boolean;
    }
    
    class LiveLinkTransformStaticData extends UE.LiveLinkBaseStaticData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTransformStaticData_0__: boolean;
    }
    
    class LiveLinkCameraStaticData extends UE.LiveLinkTransformStaticData {
        constructor();
        constructor(bIsFieldOfViewSupported: boolean, bIsAspectRatioSupported: boolean, bIsFocalLengthSupported: boolean, bIsProjectionModeSupported: boolean, FilmBackWidth: number, FilmBackHeight: number, bIsApertureSupported: boolean, bIsFocusDistanceSupported: boolean);
        bIsFieldOfViewSupported: boolean;
        bIsAspectRatioSupported: boolean;
        bIsFocalLengthSupported: boolean;
        bIsProjectionModeSupported: boolean;
        FilmBackWidth: number;
        FilmBackHeight: number;
        bIsApertureSupported: boolean;
        bIsFocusDistanceSupported: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkCameraStaticData_0__: boolean;
    }
    
    class LiveLinkTransformFrameData extends UE.LiveLinkBaseFrameData {
        constructor();
        constructor(Transform: UE.Transform);
        Transform: UE.Transform;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTransformFrameData_0__: boolean;
    }
    
    class LiveLinkCameraFrameData extends UE.LiveLinkTransformFrameData {
        constructor();
        constructor(FieldOfView: number, AspectRatio: number, FocalLength: number, Aperture: number, FocusDistance: number, ProjectionMode: UE.ELiveLinkCameraProjectionMode);
        FieldOfView: number;
        AspectRatio: number;
        FocalLength: number;
        Aperture: number;
        FocusDistance: number;
        ProjectionMode: UE.ELiveLinkCameraProjectionMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkCameraFrameData_0__: boolean;
    }
    
    class LiveLinkCameraBlueprintData extends UE.LiveLinkBaseBlueprintData {
        constructor();
        constructor(StaticData: UE.LiveLinkCameraStaticData, FrameData: UE.LiveLinkCameraFrameData);
        StaticData: UE.LiveLinkCameraStaticData;
        FrameData: UE.LiveLinkCameraFrameData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkCameraBlueprintData_0__: boolean;
    }
    
    class LiveLinkTransformRole extends UE.LiveLinkBasicRole {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkTransformRole;
        static Load(InName: string): LiveLinkTransformRole;
    
        __tid_LiveLinkTransformRole_0__: boolean;
    }
    
    class LiveLinkCameraRole extends UE.LiveLinkTransformRole {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkCameraRole;
        static Load(InName: string): LiveLinkCameraRole;
    
        __tid_LiveLinkCameraRole_0__: boolean;
    }
    
    class LiveLinkController extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkController;
        static Load(InName: string): LiveLinkController;
    
        __tid_LiveLinkController_0__: boolean;
    }
    
    class LiveLinkCurveConversionSettings {
        constructor();
        constructor(CurveConversionAssetMap: TMap<string, UE.SoftObjectPath>);
        CurveConversionAssetMap: TMap<string, UE.SoftObjectPath>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkCurveConversionSettings_0__: boolean;
    }
    
    class LiveLinkCurveElement {
        constructor();
        constructor(CurveName: string, CurveValue: number);
        CurveName: string;
        CurveValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkCurveElement_0__: boolean;
    }
    
    class LiveLinkSourceBufferManagementSettings {
        constructor();
        constructor(bValidEngineTimeEnabled: boolean, ValidEngineTime: number, EngineTimeOffset: number, EngineTimeClockOffset: number, TimecodeFrameRate: UE.FrameRate, bGenerateSubFrame: boolean, DetectedFrameRate: UE.FrameRate, bUseTimecodeSmoothLatest: boolean, SourceTimecodeFrameRate: UE.FrameRate, bValidTimecodeFrameEnabled: boolean, ValidTimecodeFrame: number, TimecodeFrameOffset: number, TimecodeClockOffset: number, LatestOffset: number, MaxNumberOfFrameToBuffered: number, bKeepAtLeastOneFrame: boolean);
        bValidEngineTimeEnabled: boolean;
        ValidEngineTime: number;
        EngineTimeOffset: number;
        EngineTimeClockOffset: number;
        TimecodeFrameRate: UE.FrameRate;
        bGenerateSubFrame: boolean;
        DetectedFrameRate: UE.FrameRate;
        bUseTimecodeSmoothLatest: boolean;
        SourceTimecodeFrameRate: UE.FrameRate;
        bValidTimecodeFrameEnabled: boolean;
        ValidTimecodeFrame: number;
        TimecodeFrameOffset: number;
        TimecodeClockOffset: number;
        LatestOffset: number;
        MaxNumberOfFrameToBuffered: number;
        bKeepAtLeastOneFrame: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSourceBufferManagementSettings_0__: boolean;
    }
    
    class LiveLinkSubjectName {
        constructor();
        constructor(Name: string);
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSubjectName_0__: boolean;
    }
    
    class LiveLinkSourceDebugInfo {
        constructor();
        constructor(SubjectName: UE.LiveLinkSubjectName, SnapshotIndex: number, NumberOfBufferAtSnapshot: number);
        SubjectName: UE.LiveLinkSubjectName;
        SnapshotIndex: number;
        NumberOfBufferAtSnapshot: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSourceDebugInfo_0__: boolean;
    }
    
    class LiveLinkSourceSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Mode: UE.ELiveLinkSourceMode;
        BufferSettings: UE.LiveLinkSourceBufferManagementSettings;
        ConnectionString: string;
        Factory: UE.Class;
        SourceDebugInfos: TArray<UE.LiveLinkSourceDebugInfo>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkSourceSettings;
        static Load(InName: string): LiveLinkSourceSettings;
    
        __tid_LiveLinkSourceSettings_0__: boolean;
    }
    
    class LiveLinkCurveRemapSettings extends UE.LiveLinkSourceSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurveConversionSettings: UE.LiveLinkCurveConversionSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkCurveRemapSettings;
        static Load(InName: string): LiveLinkCurveRemapSettings;
    
        __tid_LiveLinkCurveRemapSettings_0__: boolean;
    }
    
    class LiveLinkFrameData {
        constructor();
        constructor(Transforms: TArray<UE.Transform>, CurveElements: TArray<UE.LiveLinkCurveElement>, WorldTime: UE.LiveLinkWorldTime, MetaData: UE.LiveLinkMetaData);
        Transforms: TArray<UE.Transform>;
        CurveElements: TArray<UE.LiveLinkCurveElement>;
        WorldTime: UE.LiveLinkWorldTime;
        MetaData: UE.LiveLinkMetaData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkFrameData_0__: boolean;
    }
    
    class LiveLinkFrameInterpolationProcessor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkFrameInterpolationProcessor;
        static Load(InName: string): LiveLinkFrameInterpolationProcessor;
    
        __tid_LiveLinkFrameInterpolationProcessor_0__: boolean;
    }
    
    class LiveLinkFramePreProcessor extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkFramePreProcessor;
        static Load(InName: string): LiveLinkFramePreProcessor;
    
        __tid_LiveLinkFramePreProcessor_0__: boolean;
    }
    
    class LiveLinkFrameRate extends UE.FrameRate {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkFrameRate_0__: boolean;
    }
    
    class LiveLinkFrameTranslator extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkFrameTranslator;
        static Load(InName: string): LiveLinkFrameTranslator;
    
        __tid_LiveLinkFrameTranslator_0__: boolean;
    }
    
    class LiveLinkInterpolationSettings {
        constructor();
        constructor(bUseInterpolation: boolean, InterpolationOffset: number);
        bUseInterpolation: boolean;
        InterpolationOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkInterpolationSettings_0__: boolean;
    }
    
    class LiveLinkLightStaticData extends UE.LiveLinkTransformStaticData {
        constructor();
        constructor(bIsTemperatureSupported: boolean, bIsIntensitySupported: boolean, bIsLightColorSupported: boolean, bIsInnerConeAngleSupported: boolean, bIsOuterConeAngleSupported: boolean, bIsAttenuationRadiusSupported: boolean, bIsSourceLenghtSupported: boolean, bIsSourceRadiusSupported: boolean, bIsSoftSourceRadiusSupported: boolean);
        bIsTemperatureSupported: boolean;
        bIsIntensitySupported: boolean;
        bIsLightColorSupported: boolean;
        bIsInnerConeAngleSupported: boolean;
        bIsOuterConeAngleSupported: boolean;
        bIsAttenuationRadiusSupported: boolean;
        bIsSourceLenghtSupported: boolean;
        bIsSourceRadiusSupported: boolean;
        bIsSoftSourceRadiusSupported: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkLightStaticData_0__: boolean;
    }
    
    class LiveLinkLightFrameData extends UE.LiveLinkTransformFrameData {
        constructor();
        constructor(Temperature: number, Intensity: number, LightColor: UE.Color, InnerConeAngle: number, OuterConeAngle: number, AttenuationRadius: number, SourceRadius: number, SoftSourceRadius: number, SourceLength: number);
        Temperature: number;
        Intensity: number;
        LightColor: UE.Color;
        InnerConeAngle: number;
        OuterConeAngle: number;
        AttenuationRadius: number;
        SourceRadius: number;
        SoftSourceRadius: number;
        SourceLength: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkLightFrameData_0__: boolean;
    }
    
    class LiveLinkLightBlueprintData extends UE.LiveLinkBaseBlueprintData {
        constructor();
        constructor(StaticData: UE.LiveLinkLightStaticData, FrameData: UE.LiveLinkLightFrameData);
        StaticData: UE.LiveLinkLightStaticData;
        FrameData: UE.LiveLinkLightFrameData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkLightBlueprintData_0__: boolean;
    }
    
    class LiveLinkLightRole extends UE.LiveLinkTransformRole {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkLightRole;
        static Load(InName: string): LiveLinkLightRole;
    
        __tid_LiveLinkLightRole_0__: boolean;
    }
    
    class LiveLinkSourceFactory extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkSourceFactory;
        static Load(InName: string): LiveLinkSourceFactory;
    
        __tid_LiveLinkSourceFactory_0__: boolean;
    }
    
    class LiveLinkMagicLeapHandTrackingSourceFactory extends UE.LiveLinkSourceFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkMagicLeapHandTrackingSourceFactory;
        static Load(InName: string): LiveLinkMagicLeapHandTrackingSourceFactory;
    
        __tid_LiveLinkMagicLeapHandTrackingSourceFactory_0__: boolean;
    }
    
    class LiveLinkRefSkeleton {
        constructor();
        constructor(BoneNames: TArray<string>, BoneParents: TArray<number>);
        BoneNames: TArray<string>;
        BoneParents: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkRefSkeleton_0__: boolean;
    }
    
    class LiveLinkSkeletonStaticData extends UE.LiveLinkBaseStaticData {
        constructor();
        constructor(BoneNames: TArray<string>, BoneParents: TArray<number>);
        BoneNames: TArray<string>;
        BoneParents: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSkeletonStaticData_0__: boolean;
    }
    
    class LiveLinkSourceHandle {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSourceHandle_0__: boolean;
    }
    
    class LiveLinkSourcePreset {
        constructor();
        constructor(Guid: UE.Guid, Settings: UE.LiveLinkSourceSettings, SourceType: string);
        Guid: UE.Guid;
        Settings: UE.LiveLinkSourceSettings;
        SourceType: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSourcePreset_0__: boolean;
    }
    
    class LiveLinkSubjectKey {
        constructor();
        constructor(Source: UE.Guid, SubjectName: UE.LiveLinkSubjectName);
        Source: UE.Guid;
        SubjectName: UE.LiveLinkSubjectName;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSubjectKey_0__: boolean;
    }
    
    class LiveLinkSubjectSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PreProcessors: TArray<UE.LiveLinkFramePreProcessor>;
        InterpolationProcessor: UE.LiveLinkFrameInterpolationProcessor;
        Translators: TArray<UE.LiveLinkFrameTranslator>;
        Role: UE.Class;
        FrameRate: UE.FrameRate;
        bRebroadcastSubject: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkSubjectSettings;
        static Load(InName: string): LiveLinkSubjectSettings;
    
        __tid_LiveLinkSubjectSettings_0__: boolean;
    }
    
    class LiveLinkVirtualSubject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Role: UE.Class;
        Subjects: TArray<UE.LiveLinkSubjectName>;
        FrameTranslators: TArray<UE.LiveLinkFrameTranslator>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LiveLinkVirtualSubject;
        static Load(InName: string): LiveLinkVirtualSubject;
    
        __tid_LiveLinkVirtualSubject_0__: boolean;
    }
    
    class LiveLinkSubjectPreset {
        constructor();
        constructor(Key: UE.LiveLinkSubjectKey, Role: UE.Class, Settings: UE.LiveLinkSubjectSettings, VirtualSubject: UE.LiveLinkVirtualSubject, bEnabled: boolean);
        Key: UE.LiveLinkSubjectKey;
        Role: UE.Class;
        Settings: UE.LiveLinkSubjectSettings;
        VirtualSubject: UE.LiveLinkVirtualSubject;
        bEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSubjectPreset_0__: boolean;
    }
    
    class LiveLinkSubjectRepresentation {
        constructor();
        constructor(Subject: UE.LiveLinkSubjectName, Role: UE.Class);
        Subject: UE.LiveLinkSubjectName;
        Role: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkSubjectRepresentation_0__: boolean;
    }
    
    class LiveLinkTime {
        constructor();
        constructor(WorldTime: number, SceneTime: UE.QualifiedFrameTime);
        WorldTime: number;
        SceneTime: UE.QualifiedFrameTime;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTime_0__: boolean;
    }
    
    class LiveLinkTimeCode_Base_DEPRECATED {
        constructor();
        constructor(Seconds: number, Frames: number, FrameRate: UE.LiveLinkFrameRate);
        Seconds: number;
        Frames: number;
        FrameRate: UE.LiveLinkFrameRate;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTimeCode_Base_DEPRECATED_0__: boolean;
    }
    
    class LiveLinkTimeCode extends UE.LiveLinkTimeCode_Base_DEPRECATED {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTimeCode_0__: boolean;
    }
    
    class LiveLinkTimeSynchronizationSettings {
        constructor();
        constructor(FrameRate: UE.FrameRate, FrameOffset: UE.FrameNumber);
        FrameRate: UE.FrameRate;
        FrameOffset: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTimeSynchronizationSettings_0__: boolean;
    }
    
    class LiveLinkTransform {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTransform_0__: boolean;
    }
    
    class LiveLinkTransformBlueprintData extends UE.LiveLinkBaseBlueprintData {
        constructor();
        constructor(StaticData: UE.LiveLinkTransformStaticData, FrameData: UE.LiveLinkTransformFrameData);
        StaticData: UE.LiveLinkTransformStaticData;
        FrameData: UE.LiveLinkTransformFrameData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LiveLinkTransformBlueprintData_0__: boolean;
    }
    
    class LoadPackageCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LoadPackageCommandlet;
        static Load(InName: string): LoadPackageCommandlet;
    
        __tid_LoadPackageCommandlet_0__: boolean;
    }
    
    class LocalClickDragInputBehavior extends UE.ClickDragInputBehavior {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalClickDragInputBehavior;
        static Load(InName: string): LocalClickDragInputBehavior;
    
        __tid_LocalClickDragInputBehavior_0__: boolean;
    }
    
    class LocalizationCompilationSettings {
        constructor();
        constructor(SkipSourceCheck: boolean, ValidateFormatPatterns: boolean, ValidateSafeWhitespace: boolean);
        SkipSourceCheck: boolean;
        ValidateFormatPatterns: boolean;
        ValidateSafeWhitespace: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizationCompilationSettings_0__: boolean;
    }
    
    class LocalizationDashboardSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalizationDashboardSettings;
        static Load(InName: string): LocalizationDashboardSettings;
    
        __tid_LocalizationDashboardSettings_0__: boolean;
    }
    
    class LocalizationExportingSettings {
        constructor();
        constructor(CollapseMode: UE.ELocalizedTextCollapseMode, POFormat: UE.EPortableObjectFormat, ShouldPersistCommentsOnExport: boolean, ShouldAddSourceLocationsAsComments: boolean);
        CollapseMode: UE.ELocalizedTextCollapseMode;
        POFormat: UE.EPortableObjectFormat;
        ShouldPersistCommentsOnExport: boolean;
        ShouldAddSourceLocationsAsComments: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizationExportingSettings_0__: boolean;
    }
    
    class LocalizationImportDialogueSettings {
        constructor();
        constructor(RawAudioPath: UE.DirectoryPath, ImportedDialogueFolder: string, bImportNativeAsSource: boolean);
        RawAudioPath: UE.DirectoryPath;
        ImportedDialogueFolder: string;
        bImportNativeAsSource: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizationImportDialogueSettings_0__: boolean;
    }
    
    class LocalizationTargetSettings {
        constructor();
        constructor(Name: string, Guid: UE.Guid, ConflictStatus: UE.ELocalizationTargetConflictStatus, TargetDependencies: TArray<UE.Guid>, AdditionalManifestDependencies: TArray<UE.FilePath>, RequiredModuleNames: TArray<string>, GatherFromTextFiles: UE.GatherTextFromTextFilesConfiguration, GatherFromPackages: UE.GatherTextFromPackagesConfiguration, GatherFromMetaData: UE.GatherTextFromMetaDataConfiguration, ExportSettings: UE.LocalizationExportingSettings, CompileSettings: UE.LocalizationCompilationSettings, ImportDialogueSettings: UE.LocalizationImportDialogueSettings, NativeCultureIndex: number, SupportedCulturesStatistics: TArray<UE.CultureStatistics>);
        Name: string;
        Guid: UE.Guid;
        ConflictStatus: UE.ELocalizationTargetConflictStatus;
        TargetDependencies: TArray<UE.Guid>;
        AdditionalManifestDependencies: TArray<UE.FilePath>;
        RequiredModuleNames: TArray<string>;
        GatherFromTextFiles: UE.GatherTextFromTextFilesConfiguration;
        GatherFromPackages: UE.GatherTextFromPackagesConfiguration;
        GatherFromMetaData: UE.GatherTextFromMetaDataConfiguration;
        ExportSettings: UE.LocalizationExportingSettings;
        CompileSettings: UE.LocalizationCompilationSettings;
        ImportDialogueSettings: UE.LocalizationImportDialogueSettings;
        NativeCultureIndex: number;
        SupportedCulturesStatistics: TArray<UE.CultureStatistics>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizationTargetSettings_0__: boolean;
    }
    
    class LocalizationTarget extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.LocalizationTargetSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalizationTarget;
        static Load(InName: string): LocalizationTarget;
    
        __tid_LocalizationTarget_0__: boolean;
    }
    
    class LocalizationTargetSet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetObjects: TArray<UE.LocalizationTarget>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalizationTargetSet;
        static Load(InName: string): LocalizationTargetSet;
    
        __tid_LocalizationTargetSet_0__: boolean;
    }
    
    class LocalizationSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EngineTargetSet: UE.LocalizationTargetSet;
        EngineTargetsSettings: TArray<UE.LocalizationTargetSettings>;
        GameTargetSet: UE.LocalizationTargetSet;
        GameTargetsSettings: TArray<UE.LocalizationTargetSettings>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalizationSettings;
        static Load(InName: string): LocalizationSettings;
    
        __tid_LocalizationSettings_0__: boolean;
    }
    
    class LocalizedAppName {
        constructor();
        constructor(LanguageCode: string, AppName: string);
        LanguageCode: string;
        AppName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizedAppName_0__: boolean;
    }
    
    class LocalizedIconInfo {
        constructor();
        constructor(LanguageCode: string, IconModelPath: UE.DirectoryPath, IconPortalPath: UE.DirectoryPath);
        LanguageCode: string;
        IconModelPath: UE.DirectoryPath;
        IconPortalPath: UE.DirectoryPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizedIconInfo_0__: boolean;
    }
    
    class LocalizedIconInfos {
        constructor();
        constructor(IconData: TArray<UE.LocalizedIconInfo>);
        IconData: TArray<UE.LocalizedIconInfo>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalizedIconInfos_0__: boolean;
    }
    
    class LocalizedOverlays extends UE.Overlays {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultOverlays: UE.BasicOverlays;
        LocaleToOverlaysMap: TMap<string, UE.BasicOverlays>;
        AssetImportData: UE.AssetImportData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalizedOverlays;
        static Load(InName: string): LocalizedOverlays;
    
        __tid_LocalizedOverlays_0__: boolean;
    }
    
    class LocalizedOverlaysFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalizedOverlaysFactoryNew;
        static Load(InName: string): LocalizedOverlaysFactoryNew;
    
        __tid_LocalizedOverlaysFactoryNew_0__: boolean;
    }
    
    class LocalPlayerSubsystem extends UE.Subsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalPlayerSubsystem;
        static Load(InName: string): LocalPlayerSubsystem;
    
        __tid_LocalPlayerSubsystem_0__: boolean;
    }
    
    class LocalProfiles extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Profiles: TArray<UE.PreviewSceneProfile>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocalProfiles;
        static Load(InName: string): LocalProfiles;
    
        __tid_LocalProfiles_0__: boolean;
    }
    
    class LocalSpacePose {
        constructor();
        constructor(Transforms: TArray<UE.Transform>, Names: TArray<string>);
        Transforms: TArray<UE.Transform>;
        Names: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocalSpacePose_0__: boolean;
    }
    
    class LocationBoneSocketInfo {
        constructor();
        constructor(BoneSocketName: string, Offset: UE.Vector);
        BoneSocketName: string;
        Offset: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocationBoneSocketInfo_0__: boolean;
    }
    
    class LocationServicesData {
        constructor();
        constructor(Timestamp: number, Longitude: number, Latitude: number, HorizontalAccuracy: number, VerticalAccuracy: number, Altitude: number);
        Timestamp: number;
        Longitude: number;
        Latitude: number;
        HorizontalAccuracy: number;
        VerticalAccuracy: number;
        Altitude: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LocationServicesData_0__: boolean;
    }
    
    class LocationServicesImpl extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnLocationChanged: $MulticastDelegate<(LocationData: UE.LocationServicesData) => void>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocationServicesImpl;
        static Load(InName: string): LocationServicesImpl;
    
        __tid_LocationServicesImpl_0__: boolean;
    }
    
    class LocationServices extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AreLocationServicesEnabled() : boolean;
        static GetLastKnownLocation() : UE.LocationServicesData;
        static GetLocationServicesImpl() : UE.LocationServicesImpl;
        static InitLocationServices(Accuracy: UE.ELocationAccuracy, UpdateFrequency: number, MinDistanceFilter: number) : boolean;
        static IsLocationAccuracyAvailable(Accuracy: UE.ELocationAccuracy) : boolean;
        static StartLocationServices() : boolean;
        static StopLocationServices() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LocationServices;
        static Load(InName: string): LocationServices;
    
        __tid_LocationServices_0__: boolean;
    }
    
    class LODInfoUILayout extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LODInfo: UE.SkeletalMeshLODInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LODInfoUILayout;
        static Load(InName: string): LODInfoUILayout;
    
        __tid_LODInfoUILayout_0__: boolean;
    }
    
    class LODMappingData {
        constructor();
        constructor(Mapping: TArray<number>, InverseMapping: TArray<number>);
        Mapping: TArray<number>;
        InverseMapping: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LODMappingData_0__: boolean;
    }
    
    class LODSyncComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumLODs: number;
        ForcedLOD: number;
        ComponentsToSync: TArray<UE.ComponentSync>;
        CustomLODMapping: TMap<string, UE.LODMappingData>;
        CurrentLOD: number;
        CurrentNumLODs: number;
        DriveComponents: TArray<UE.PrimitiveComponent>;
        SubComponents: TArray<UE.PrimitiveComponent>;
        GetLODSyncDebugText() : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LODSyncComponent;
        static Load(InName: string): LODSyncComponent;
    
        __tid_LODSyncComponent_0__: boolean;
    }
    
    class LODSyncInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LODSyncInterface;
        static Load(InName: string): LODSyncInterface;
    
        __tid_LODSyncInterface_0__: boolean;
    }
    
    class LogoutCallbackProxy extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(PlayerController: $Nullable<UE.PlayerController>) => void>;
        OnFailure: $MulticastDelegate<(PlayerController: $Nullable<UE.PlayerController>) => void>;
        static Logout(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>) : UE.LogoutCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LogoutCallbackProxy;
        static Load(InName: string): LogoutCallbackProxy;
    
        __tid_LogoutCallbackProxy_0__: boolean;
    }
    
    class LogVisualizerSessionSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnableGraphsVisualization: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LogVisualizerSessionSettings;
        static Load(InName: string): LogVisualizerSessionSettings;
    
        __tid_LogVisualizerSessionSettings_0__: boolean;
    }
    
    class VisualLoggerFiltersData {
        constructor();
        constructor(SearchBoxFilter: string, ObjectNameFilter: string, Categories: TArray<UE.CategoryFilter>, SelectedClasses: TArray<string>);
        SearchBoxFilter: string;
        ObjectNameFilter: string;
        Categories: TArray<UE.CategoryFilter>;
        SelectedClasses: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VisualLoggerFiltersData_0__: boolean;
    }
    
    class LogVisualizerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIgnoreTrivialLogs: boolean;
        TrivialLogsThreshold: number;
        bStickToRecentData: boolean;
        bResetDataWithNewSession: boolean;
        bShowHistogramLabelsOutside: boolean;
        DefaultCameraDistance: number;
        bSearchInsideLogs: boolean;
        GraphsBackgroundColor: UE.Color;
        bPresistentFilters: boolean;
        bDrawExtremesOnGraphs: boolean;
        bConstrainGraphToLocalMinMax: boolean;
        bUsePlayersOnlyForPause: boolean;
        bLogNavOctreeOnStop: boolean;
        bForceUniqueLogNames: boolean;
        PresistentFilters: UE.VisualLoggerFiltersData;
        DebugMeshMaterialFakeLight: UE.Material;
        DebugMeshMaterialFakeLightName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LogVisualizerSettings;
        static Load(InName: string): LogVisualizerSettings;
    
        __tid_LogVisualizerSettings_0__: boolean;
    }
    
    class LoudnessNRTSettings extends UE.AudioSynesthesiaNRTSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnalysisPeriod: number;
        MinimumFrequency: number;
        MaximumFrequency: number;
        CurveType: UE.ELoudnessNRTCurveTypeEnum;
        NoiseFloorDb: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LoudnessNRTSettings;
        static Load(InName: string): LoudnessNRTSettings;
    
        __tid_LoudnessNRTSettings_0__: boolean;
    }
    
    class LoudnessNRT extends UE.AudioSynesthesiaNRT {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.LoudnessNRTSettings;
        GetChannelLoudnessAtTime(InSeconds: number, InChannel: number, OutLoudness: $Ref<number>) : void;
        GetLoudnessAtTime(InSeconds: number, OutLoudness: $Ref<number>) : void;
        GetNormalizedChannelLoudnessAtTime(InSeconds: number, InChannel: number, OutLoudness: $Ref<number>) : void;
        GetNormalizedLoudnessAtTime(InSeconds: number, OutLoudness: $Ref<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LoudnessNRT;
        static Load(InName: string): LoudnessNRT;
    
        __tid_LoudnessNRT_0__: boolean;
    }
    
    class LuminApplicationLifecycleComponent extends UE.ApplicationLifecycleComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DeviceHasReactivatedDelegate: $MulticastDelegate<() => void>;
        DeviceWillEnterRealityModeDelegate: $MulticastDelegate<() => void>;
        DeviceWillGoInStandbyDelegate: $MulticastDelegate<() => void>;
        FocusLostDelegate: $MulticastDelegate<(reason: UE.EFocusLostReason) => void>;
        FocusGainedDelegate: $MulticastDelegate<() => void>;
        LuminApplicationLifetimeDelegate__DelegateSignature() : void;
        LuminApplicationLifetimeFocusLostDelegate__DelegateSignature(reason: UE.EFocusLostReason) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminApplicationLifecycleComponent;
        static Load(InName: string): LuminApplicationLifecycleComponent;
    
        __tid_LuminApplicationLifecycleComponent_0__: boolean;
    }
    
    class LuminARCandidateImage extends UE.ARCandidateImage {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseUnreliablePose: boolean;
        bImageIsStationary: boolean;
        AxisOrientation: UE.EMagicLeapImageTargetOrientation;
        GetAxisOrientation() : UE.EMagicLeapImageTargetOrientation;
        GetImageIsStationary() : boolean;
        GetUseUnreliablePose() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminARCandidateImage;
        static Load(InName: string): LuminARCandidateImage;
    
        __tid_LuminARCandidateImage_0__: boolean;
    }
    
    class LuminARFrameFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetTrackingState() : UE.ELuminARTrackingState;
        static LuminARLineTrace(WorldContextObject: $Nullable<UE.Object>, ScreenPosition: UE.Vector2D, TraceChannels: TSet<UE.ELuminARLineTraceChannel>, OutHitResults: $Ref<TArray<UE.ARTraceResult>>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminARFrameFunctionLibrary;
        static Load(InName: string): LuminARFrameFunctionLibrary;
    
        __tid_LuminARFrameFunctionLibrary_0__: boolean;
    }
    
    class LuminARImageTrackingFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddLuminRuntimeCandidateImage(SessionConfig: $Nullable<UE.ARSessionConfig>, CandidateTexture: $Nullable<UE.Texture2D>, FriendlyName: string, PhysicalWidth: number, bUseUnreliablePose: boolean, bImageIsStationary: boolean) : UE.LuminARCandidateImage;
        static AddLuminRuntimeCandidateImageEx(SessionConfig: $Nullable<UE.ARSessionConfig>, CandidateTexture: $Nullable<UE.Texture2D>, FriendlyName: string, PhysicalWidth: number, bUseUnreliablePose: boolean, bImageIsStationary: boolean, InAxisOrientation: UE.EMagicLeapImageTargetOrientation) : UE.LuminARCandidateImage;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminARImageTrackingFunctionLibrary;
        static Load(InName: string): LuminARImageTrackingFunctionLibrary;
    
        __tid_LuminARImageTrackingFunctionLibrary_0__: boolean;
    }
    
    class LuminARLightEstimate extends UE.ARBasicLightEstimate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AmbientIntensityNits: TArray<number>;
        GetAmbientIntensityNits() : TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminARLightEstimate;
        static Load(InName: string): LuminARLightEstimate;
    
        __tid_LuminARLightEstimate_0__: boolean;
    }
    
    class LuminAROrigin extends UE.AROriginActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MRMeshComponent: UE.MRMeshComponent;
        PlaneSurfaceMaterial: UE.MaterialInterface;
        WireframeMaterial: UE.MaterialInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminAROrigin;
        static Load(InName: string): LuminAROrigin;
    
        __tid_LuminAROrigin_0__: boolean;
    }
    
    class MagicLeapPlanesQuery {
        constructor();
        constructor(Flags: TArray<UE.EMagicLeapPlaneQueryFlags>, SearchVolume: UE.BoxComponent, MaxResults: number, MinHoleLength: number, MinPlaneArea: number, SearchVolumePosition: UE.Vector, SearchVolumeOrientation: UE.Quat, SearchVolumeExtents: UE.Vector, SimilarityThreshold: number, bSearchVolumeTrackingSpace: boolean, bResultTrackingSpace: boolean);
        Flags: TArray<UE.EMagicLeapPlaneQueryFlags>;
        SearchVolume: UE.BoxComponent;
        MaxResults: number;
        MinHoleLength: number;
        MinPlaneArea: number;
        SearchVolumePosition: UE.Vector;
        SearchVolumeOrientation: UE.Quat;
        SearchVolumeExtents: UE.Vector;
        SimilarityThreshold: number;
        bSearchVolumeTrackingSpace: boolean;
        bResultTrackingSpace: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapPlanesQuery_0__: boolean;
    }
    
    class LuminARSessionConfig extends UE.ARSessionConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlanesQuery: UE.MagicLeapPlanesQuery;
        MaxPlaneQueryResults: number;
        MinPlaneArea: number;
        bArbitraryOrientationPlaneDetection: boolean;
        PlaneSearchExtents: UE.Vector;
        PlaneQueryFlags: TArray<UE.EMagicLeapPlaneQueryFlags>;
        bDiscardZeroExtentPlanes: boolean;
        bDefaultUseUnreliablePose: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminARSessionConfig;
        static Load(InName: string): LuminARSessionConfig;
    
        __tid_LuminARSessionConfig_0__: boolean;
    }
    
    class LuminARSessionFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StartLuminARSession(WorldContextObject: $Nullable<UE.Object>, LatentInfo: UE.LatentActionInfo, Configuration: $Nullable<UE.LuminARSessionConfig>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminARSessionFunctionLibrary;
        static Load(InName: string): LuminARSessionFunctionLibrary;
    
        __tid_LuminARSessionFunctionLibrary_0__: boolean;
    }
    
    class LuminComponentSubElement {
        constructor();
        constructor(ElementType: UE.ELuminComponentSubElementType, Value: string);
        ElementType: UE.ELuminComponentSubElementType;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LuminComponentSubElement_0__: boolean;
    }
    
    class LuminComponentElement {
        constructor();
        constructor(Name: string, VisibleName: string, ExecutableName: string, ComponentType: UE.ELuminComponentType, ExtraComponentSubElements: TArray<UE.LuminComponentSubElement>);
        Name: string;
        VisibleName: string;
        ExecutableName: string;
        ComponentType: UE.ELuminComponentType;
        ExtraComponentSubElements: TArray<UE.LuminComponentSubElement>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_LuminComponentElement_0__: boolean;
    }
    
    class LuminRuntimeSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PackageName: string;
        ApplicationDisplayName: string;
        FrameTimingHint: UE.ELuminFrameTimingHint;
        bProtectedContent: boolean;
        bManualCallToAppReady: boolean;
        bUseMobileRendering: boolean;
        bUseVulkan: boolean;
        Certificate: UE.FilePath;
        IconModelPath: UE.DirectoryPath;
        IconPortalPath: UE.DirectoryPath;
        LocalizedIconInfos: UE.LocalizedIconInfos;
        VersionCode: number;
        MinimumAPILevel: number;
        AppPrivileges: TArray<UE.ELuminPrivilege>;
        ExtraComponentSubElements: TArray<UE.LuminComponentSubElement>;
        ExtraComponentElements: TArray<UE.LuminComponentElement>;
        SpatializationPlugin: string;
        ReverbPlugin: string;
        OcclusionPlugin: string;
        SoundCueCookQualityIndex: number;
        bRemoveDebugInfo: boolean;
        VulkanValidationLayerLibs: UE.DirectoryPath;
        bFrameVignette: boolean;
        LocalizedAppNames: TArray<UE.LocalizedAppName>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): LuminRuntimeSettings;
        static Load(InName: string): LuminRuntimeSettings;
    
        __tid_LuminRuntimeSettings_0__: boolean;
    }
    
    class MacTargetSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetedRHIs: TArray<string>;
        TargetArchitecture: UE.EMacTargetArchitecture;
        MaxShaderLanguageVersion: number;
        UseFastIntrinsics: boolean;
        ForceFloats: boolean;
        EnableMathOptimisations: boolean;
        IndirectArgumentTier: number;
        AudioSampleRate: number;
        AudioCallbackBufferFrameSize: number;
        AudioNumBuffersToEnqueue: number;
        AudioMaxChannels: number;
        AudioNumSourceWorkers: number;
        SpatializationPlugin: string;
        ReverbPlugin: string;
        OcclusionPlugin: string;
        SoundCueCookQualityIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MacTargetSettings;
        static Load(InName: string): MacTargetSettings;
    
        __tid_MacTargetSettings_0__: boolean;
    }
    
    class MagicLeapARPinSaveGame extends UE.SaveGame {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinnedID: UE.Guid;
        ComponentWorldTransform: UE.Transform;
        PinTransform: UE.Transform;
        bShouldPinActor: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapARPinSaveGame;
        static Load(InName: string): MagicLeapARPinSaveGame;
    
        __tid_MagicLeapARPinSaveGame_0__: boolean;
    }
    
    class MagicLeapARPinState {
        constructor();
        constructor(Confidence: number, ValidRadius: number, RotationError: number, TranslationError: number, PinType: UE.EMagicLeapARPinType);
        Confidence: number;
        ValidRadius: number;
        RotationError: number;
        TranslationError: number;
        PinType: UE.EMagicLeapARPinType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapARPinState_0__: boolean;
    }
    
    class MagicLeapARPinComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ObjectUID: string;
        UserIndex: number;
        AutoPinType: UE.EMagicLeapAutoPinType;
        bShouldPinActor: boolean;
        PinDataClass: UE.Class;
        SearchPinTypes: TSet<UE.EMagicLeapARPinType>;
        SearchVolume: UE.SphereComponent;
        OnPersistentEntityPinned: $MulticastDelegate<(bRestoredOrSynced: boolean) => void>;
        OnPersistentEntityPinLost: $MulticastDelegate<() => void>;
        OnPinDataLoadAttemptCompleted: $MulticastDelegate<(bDataRestored: boolean) => void>;
        PinnedCFUID: UE.Guid;
        PinnedSceneComponent: UE.SceneComponent;
        PinData: UE.MagicLeapARPinSaveGame;
        AttemptPinDataRestoration() : boolean;
        AttemptPinDataRestorationAsync() : void;
        GetPinData(PinDataClass: $Nullable<UE.Class>) : UE.MagicLeapARPinSaveGame;
        GetPinnedPinID(PinID: $Ref<UE.Guid>) : boolean;
        GetPinState(State: $Ref<UE.MagicLeapARPinState>) : boolean;
        IsPinned() : boolean;
        MagicLeapARPinDataLoadAttemptCompleted__DelegateSignature(bDataRestored: boolean) : void;
        PersistentEntityPinLost__DelegateSignature() : void;
        PersistentEntityPinned__DelegateSignature(bRestoredOrSynced: boolean) : void;
        PinActor(ActorToPin: $Nullable<UE.Actor>) : boolean;
        PinRestoredOrSynced() : boolean;
        PinSceneComponent(ComponentToPin: $Nullable<UE.SceneComponent>) : boolean;
        PinToBestFit() : void;
        PinToID(PinID: UE.Guid) : boolean;
        PinToRestoredOrSyncedID() : boolean;
        TryGetPinData(InPinDataClass: $Nullable<UE.Class>, OutPinDataValid: $Ref<boolean>) : UE.MagicLeapARPinSaveGame;
        UnPin() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapARPinComponent;
        static Load(InName: string): MagicLeapARPinComponent;
    
        __tid_MagicLeapARPinComponent_0__: boolean;
    }
    
    class MagicLeapARPinObjectIdList {
        constructor();
        constructor(ObjectIdList: TSet<string>);
        ObjectIdList: TSet<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapARPinObjectIdList_0__: boolean;
    }
    
    class MagicLeapARPinContentBindings extends UE.SaveGame {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AllContentBindings: TMap<UE.Guid, UE.MagicLeapARPinObjectIdList>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapARPinContentBindings;
        static Load(InName: string): MagicLeapARPinContentBindings;
    
        __tid_MagicLeapARPinContentBindings_0__: boolean;
    }
    
    class MagicLeapARPinQuery {
        constructor();
        constructor(Types: TSet<UE.EMagicLeapARPinType>, MaxResults: number, TargetPoint: UE.Vector, Radius: number, bSorted: boolean);
        Types: TSet<UE.EMagicLeapARPinType>;
        MaxResults: number;
        TargetPoint: UE.Vector;
        Radius: number;
        bSorted: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapARPinQuery_0__: boolean;
    }
    
    class MagicLeapARPinFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ARPinIdToString(ARPinId: UE.Guid) : string;
        static BindToOnMagicLeapARPinUpdatedDelegate(Delegate: $Delegate<(Added: TArray<UE.Guid>, Updated: TArray<UE.Guid>, Deleted: TArray<UE.Guid>) => void>) : void;
        static BindToOnMagicLeapContentBindingFoundDelegate(Delegate: $Delegate<(PinId: UE.Guid, PinnedObjectIds: TSet<string>) => void>) : void;
        static CreateTracker() : UE.EMagicLeapPassableWorldError;
        static DestroyTracker() : UE.EMagicLeapPassableWorldError;
        static GetARPinPositionAndOrientation(PinID: UE.Guid, Position: $Ref<UE.Vector>, Orientation: $Ref<UE.Rotator>, PinFoundInEnvironment: $Ref<boolean>) : boolean;
        static GetARPinPositionAndOrientation_TrackingSpace(PinID: UE.Guid, Position: $Ref<UE.Vector>, Orientation: $Ref<UE.Rotator>, PinFoundInEnvironment: $Ref<boolean>) : boolean;
        static GetARPinState(PinID: UE.Guid, State: $Ref<UE.MagicLeapARPinState>) : UE.EMagicLeapPassableWorldError;
        static GetARPinStateToString(State: UE.MagicLeapARPinState) : string;
        static GetAvailableARPins(NumRequested: number, Pins: $Ref<TArray<UE.Guid>>) : UE.EMagicLeapPassableWorldError;
        static GetClosestARPin(SearchPoint: UE.Vector, PinID: $Ref<UE.Guid>) : UE.EMagicLeapPassableWorldError;
        static GetContentBindingSaveGameUserIndex() : number;
        static GetGlobalQueryFilter(CurrentGlobalFilter: $Ref<UE.MagicLeapARPinQuery>) : UE.EMagicLeapPassableWorldError;
        static GetNumAvailableARPins(Count: $Ref<number>) : UE.EMagicLeapPassableWorldError;
        static IsTrackerValid() : boolean;
        static ParseStringToARPinId(PinIdString: string, ARPinId: $Ref<UE.Guid>) : boolean;
        static QueryARPins(Query: UE.MagicLeapARPinQuery, Pins: $Ref<TArray<UE.Guid>>) : UE.EMagicLeapPassableWorldError;
        static SetContentBindingSaveGameUserIndex(UserIndex: number) : void;
        static SetGlobalQueryFilter(InGlobalFilter: UE.MagicLeapARPinQuery) : UE.EMagicLeapPassableWorldError;
        static UnBindToOnMagicLeapARPinUpdatedDelegate(Delegate: $Delegate<(Added: TArray<UE.Guid>, Updated: TArray<UE.Guid>, Deleted: TArray<UE.Guid>) => void>) : void;
        static UnBindToOnMagicLeapContentBindingFoundDelegate(Delegate: $Delegate<(PinId: UE.Guid, PinnedObjectIds: TSet<string>) => void>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapARPinFunctionLibrary;
        static Load(InName: string): MagicLeapARPinFunctionLibrary;
    
        __tid_MagicLeapARPinFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapARPinInfoActorBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinID: UE.Guid;
        bVisibilityOverride: boolean;
        OnUpdateARPinState() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapARPinInfoActorBase;
        static Load(InName: string): MagicLeapARPinInfoActorBase;
    
        __tid_MagicLeapARPinInfoActorBase_0__: boolean;
    }
    
    class PointerToUberGraphFrame {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PointerToUberGraphFrame_0__: boolean;
    }
    
    namespace MagicLeapPassableWorld.MagicLeapARPinInfoActor {
        class MagicLeapARPinInfoActor_C extends UE.MagicLeapARPinInfoActorBase {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            UberGraphFrame: UE.PointerToUberGraphFrame;
            Right: UE.StaticMeshComponent;
            Forward: UE.StaticMeshComponent;
            Up: UE.StaticMeshComponent;
            ValidRadiusVisualizer: UE.SphereComponent;
            AxisRoot: UE.SceneComponent;
            VisualizerRoot: UE.SceneComponent;
            TypeValue: UE.TextRenderComponent;
            TransErrValue: UE.TextRenderComponent;
            RotErrValue: UE.TextRenderComponent;
            ConfidenceValue: UE.TextRenderComponent;
            TransErrLabel: UE.TextRenderComponent;
            RotErrLabel: UE.TextRenderComponent;
            ConfidenceLabel: UE.TextRenderComponent;
            PinIDValue: UE.TextRenderComponent;
            InfoRoot: UE.SceneComponent;
            Root: UE.SceneComponent;
            RotationSmoothSpeed: number;
            ExecuteUbergraph_MagicLeapARPinInfoActor(EntryPoint: number) : void;
            OnUpdateARPinState() : void;
            ReceiveTick(DeltaSeconds: number) : void;
            UpdatePinState() : void;
            UserConstructionScript() : void;
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): MagicLeapARPinInfoActor_C;
            static Load(InName: string): MagicLeapARPinInfoActor_C;
        
            __tid_MagicLeapARPinInfoActor_C_0__: boolean;
        }
        
    }

    class MagicLeapARPinRenderer extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bInfoActorsVisibilityOverride: boolean;
        AllInfoActors: TMap<UE.Guid, UE.MagicLeapARPinInfoActorBase>;
        ClassToSpawn: UE.Class;
        SetVisibilityOverride(InVisibilityOverride: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapARPinRenderer;
        static Load(InName: string): MagicLeapARPinRenderer;
    
        __tid_MagicLeapARPinRenderer_0__: boolean;
    }
    
    class MagicLeapARPinSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UpdateCheckFrequency: number;
        OnUpdatedEventTriggerDelta: UE.MagicLeapARPinState;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapARPinSettings;
        static Load(InName: string): MagicLeapARPinSettings;
    
        __tid_MagicLeapARPinSettings_0__: boolean;
    }
    
    class MagicLeapAudioDummyStruct {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapAudioDummyStruct_0__: boolean;
    }
    
    class MagicLeapAudioFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static IsMicMuted() : boolean;
        static SetMicMute(IsMuted: boolean) : boolean;
        static SetOnAudioJackPluggedDelegate(ResultDelegate: $Delegate<() => void>) : boolean;
        static SetOnAudioJackUnpluggedDelegate(ResultDelegate: $Delegate<() => void>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapAudioFunctionLibrary;
        static Load(InName: string): MagicLeapAudioFunctionLibrary;
    
        __tid_MagicLeapAudioFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapControllerFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetControllerMapping(ControllerIndex: number, Hand: $Ref<UE.EControllerHand>) : boolean;
        static GetControllerTrackingMode() : UE.EMagicLeapControllerTrackingMode;
        static GetControllerType(MotionSource: string) : UE.EMagicLeapControllerType;
        static GetHandForMotionSource(MotionSource: string) : UE.EControllerHand;
        static GetMLControllerType(Hand: UE.EControllerHand) : UE.EMagicLeapControllerType;
        static GetMotionSourceForHand(Hand: UE.EControllerHand) : string;
        static InvertControllerMapping() : void;
        static IsMLControllerConnected(MotionSource: string) : boolean;
        static MaxSupportedMagicLeapControllers() : number;
        static PlayControllerHapticFeedback(Hand: UE.EControllerHand, HapticPattern: UE.EMagicLeapControllerHapticPattern, Intensity: UE.EMagicLeapControllerHapticIntensity) : boolean;
        static PlayControllerLED(Hand: UE.EControllerHand, LEDPattern: UE.EMagicLeapControllerLEDPattern, LEDColor: UE.EMagicLeapControllerLEDColor, DurationInSec: number) : boolean;
        static PlayControllerLEDEffect(Hand: UE.EControllerHand, LEDEffect: UE.EMagicLeapControllerLEDEffect, LEDSpeed: UE.EMagicLeapControllerLEDSpeed, LEDPattern: UE.EMagicLeapControllerLEDPattern, LEDColor: UE.EMagicLeapControllerLEDColor, DurationInSec: number) : boolean;
        static PlayHapticPattern(MotionSource: string, HapticPattern: UE.EMagicLeapControllerHapticPattern, Intensity: UE.EMagicLeapControllerHapticIntensity) : boolean;
        static PlayLEDEffect(MotionSource: string, LEDEffect: UE.EMagicLeapControllerLEDEffect, LEDSpeed: UE.EMagicLeapControllerLEDSpeed, LEDPattern: UE.EMagicLeapControllerLEDPattern, LEDColor: UE.EMagicLeapControllerLEDColor, DurationInSec: number) : boolean;
        static PlayLEDPattern(MotionSource: string, LEDPattern: UE.EMagicLeapControllerLEDPattern, LEDColor: UE.EMagicLeapControllerLEDColor, DurationInSec: number) : boolean;
        static SetControllerTrackingMode(TrackingMode: UE.EMagicLeapControllerTrackingMode) : boolean;
        static SetMotionSourceForHand(Hand: UE.EControllerHand, MotionSource: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapControllerFunctionLibrary;
        static Load(InName: string): MagicLeapControllerFunctionLibrary;
    
        __tid_MagicLeapControllerFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapEyeBlinkState {
        constructor();
        constructor(LeftEyeBlinked: boolean, RightEyeBlinked: boolean);
        LeftEyeBlinked: boolean;
        RightEyeBlinked: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapEyeBlinkState_0__: boolean;
    }
    
    class MagicLeapEyeTrackerFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetCalibrationStatus() : UE.EMagicLeapEyeTrackingCalibrationStatus;
        static GetEyeBlinkState(BlinkState: $Ref<UE.MagicLeapEyeBlinkState>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapEyeTrackerFunctionLibrary;
        static Load(InName: string): MagicLeapEyeTrackerFunctionLibrary;
    
        __tid_MagicLeapEyeTrackerFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapFileMediaSourceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapFileMediaSourceFactory;
        static Load(InName: string): MagicLeapFileMediaSourceFactory;
    
        __tid_MagicLeapFileMediaSourceFactory_0__: boolean;
    }
    
    class MagicLeapGraphicsClientPerformanceInfo {
        constructor();
        constructor(FrameStartCPUCompAcquireCPUTimeMs: number, FrameStartCPUFrameEndGPUTimeMs: number, FrameStartCPUFrameStartCPUTimeMs: number, FrameDurationCPUTimeMs: number, FrameDurationGPUTimeMs: number, FrameInternalDurationCPUTimeMs: number, FrameInternalDurationGPUTimeMs: number);
        FrameStartCPUCompAcquireCPUTimeMs: number;
        FrameStartCPUFrameEndGPUTimeMs: number;
        FrameStartCPUFrameStartCPUTimeMs: number;
        FrameDurationCPUTimeMs: number;
        FrameDurationGPUTimeMs: number;
        FrameInternalDurationCPUTimeMs: number;
        FrameInternalDurationGPUTimeMs: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapGraphicsClientPerformanceInfo_0__: boolean;
    }
    
    class MagicLeapHandMeshBlock {
        constructor();
        constructor(IndexCount: number, VertexCount: number, Vertex: TArray<UE.Vector>, Index: TArray<number>);
        IndexCount: number;
        VertexCount: number;
        Vertex: TArray<UE.Vector>;
        Index: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapHandMeshBlock_0__: boolean;
    }
    
    class MagicLeapHandMesh {
        constructor();
        constructor(Version: number, DataCount: number, Data: TArray<UE.MagicLeapHandMeshBlock>);
        Version: number;
        DataCount: number;
        Data: TArray<UE.MagicLeapHandMeshBlock>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapHandMesh_0__: boolean;
    }
    
    class MagicLeapHandMeshingComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : boolean;
        DisconnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : boolean;
        SetUseWeightedNormals(bInUseWeightedNormals: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapHandMeshingComponent;
        static Load(InName: string): MagicLeapHandMeshingComponent;
    
        __tid_MagicLeapHandMeshingComponent_0__: boolean;
    }
    
    class MagicLeapHandMeshingFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ConnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : boolean;
        static CreateClient() : boolean;
        static DestroyClient() : boolean;
        static DisconnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapHandMeshingFunctionLibrary;
        static Load(InName: string): MagicLeapHandMeshingFunctionLibrary;
    
        __tid_MagicLeapHandMeshingFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapHandTrackingFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetConfiguration(ActiveStaticGestures: $Ref<TArray<UE.EMagicLeapHandTrackingGesture>>, KeypointsFilterLevel: $Ref<UE.EMagicLeapHandTrackingKeypointFilterLevel>, GestureFilterLevel: $Ref<UE.EMagicLeapHandTrackingGestureFilterLevel>, bTrackingEnabled: $Ref<boolean>) : boolean;
        static GetCurrentGesture(Hand: UE.EControllerHand, Gesture: $Ref<UE.EMagicLeapHandTrackingGesture>) : boolean;
        static GetCurrentGestureConfidence(Hand: UE.EControllerHand, Confidence: $Ref<number>) : boolean;
        static GetGestureKeypoints(Hand: UE.EControllerHand, Keypoints: $Ref<TArray<UE.Transform>>) : boolean;
        static GetGestureKeypointTransform(Hand: UE.EControllerHand, Keypoint: UE.EMagicLeapHandTrackingKeypoint, TransformSpace: UE.EMagicLeapGestureTransformSpace, Transform: $Ref<UE.Transform>) : boolean;
        static GetHandCenter(Hand: UE.EControllerHand, HandCenter: $Ref<UE.Transform>) : boolean;
        static GetHandCenterNormalized(Hand: UE.EControllerHand, HandCenterNormalized: $Ref<UE.Vector>) : boolean;
        static GetHandIndexFingerTip(Hand: UE.EControllerHand, TransformSpace: UE.EMagicLeapGestureTransformSpace, Pointer: $Ref<UE.Transform>) : boolean;
        static GetHandKeypointForMotionSource(MotionSource: string, OutKeyPoint: $Ref<UE.EMagicLeapHandTrackingKeypoint>) : boolean;
        static GetHandThumbTip(Hand: UE.EControllerHand, TransformSpace: UE.EMagicLeapGestureTransformSpace, Secondary: $Ref<UE.Transform>) : boolean;
        static GetMagicLeapHandTrackingLiveLinkSource(SourceHandle: $Ref<UE.LiveLinkSourceHandle>) : boolean;
        static GetMotionSourceForHandKeypoint(Hand: UE.EControllerHand, Keypoint: UE.EMagicLeapHandTrackingKeypoint, OutMotionSource: $Ref<string>) : boolean;
        static GetStaticGestureConfidenceThreshold(Gesture: UE.EMagicLeapHandTrackingGesture) : number;
        static IsHoldingControl(Hand: UE.EControllerHand) : boolean;
        static SetConfiguration(StaticGesturesToActivate: TArray<UE.EMagicLeapHandTrackingGesture>, KeypointsFilterLevel?: UE.EMagicLeapHandTrackingKeypointFilterLevel /* = NoFilter */, GestureFilterLevel?: UE.EMagicLeapHandTrackingGestureFilterLevel /* = NoFilter */, bTrackingEnabled?: boolean /* = true */) : boolean;
        static SetStaticGestureConfidenceThreshold(Gesture: UE.EMagicLeapHandTrackingGesture, Confidence: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapHandTrackingFunctionLibrary;
        static Load(InName: string): MagicLeapHandTrackingFunctionLibrary;
    
        __tid_MagicLeapHandTrackingFunctionLibrary_0__: boolean;
    }
    
    class VRNotificationsComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate: $MulticastDelegate<() => void>;
        HMDTrackingInitializedDelegate: $MulticastDelegate<() => void>;
        HMDRecenteredDelegate: $MulticastDelegate<() => void>;
        HMDLostDelegate: $MulticastDelegate<() => void>;
        HMDReconnectedDelegate: $MulticastDelegate<() => void>;
        HMDConnectCanceledDelegate: $MulticastDelegate<() => void>;
        HMDPutOnHeadDelegate: $MulticastDelegate<() => void>;
        HMDRemovedFromHeadDelegate: $MulticastDelegate<() => void>;
        VRControllerRecenteredDelegate: $MulticastDelegate<() => void>;
        VRNotificationsDelegate__DelegateSignature() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VRNotificationsComponent;
        static Load(InName: string): VRNotificationsComponent;
    
        __tid_VRNotificationsComponent_0__: boolean;
    }
    
    class MagicLeapHeadTrackingNotificationsComponent extends UE.VRNotificationsComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnHeadTrackingLost: $MulticastDelegate<() => void>;
        OnHeadTrackingRecovered: $MulticastDelegate<() => void>;
        OnHeadTrackingRecoveryFailed: $MulticastDelegate<() => void>;
        OnHeadTrackingNewSessionStarted: $MulticastDelegate<() => void>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapHeadTrackingNotificationsComponent;
        static Load(InName: string): MagicLeapHeadTrackingNotificationsComponent;
    
        __tid_MagicLeapHeadTrackingNotificationsComponent_0__: boolean;
    }
    
    class MagicLeapHeadTrackingState {
        constructor();
        constructor(Mode: UE.EMagicLeapHeadTrackingMode, Error: UE.EMagicLeapHeadTrackingError, Confidence: number);
        Mode: UE.EMagicLeapHeadTrackingMode;
        Error: UE.EMagicLeapHeadTrackingError;
        Confidence: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapHeadTrackingState_0__: boolean;
    }
    
    class MagicLeapHMDFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetGraphicsClientPerformanceInfo(PerformanceInfo: $Ref<UE.MagicLeapGraphicsClientPerformanceInfo>) : boolean;
        static GetHeadTrackingMapEvents(MapEvents: $Ref<TSet<UE.EMagicLeapHeadTrackingMapEvent>>) : boolean;
        static GetHeadTrackingState(State: $Ref<UE.MagicLeapHeadTrackingState>) : boolean;
        static GetMinimumAPILevel() : number;
        static GetMLSDKVersion() : string;
        static GetMLSDKVersionMajor() : number;
        static GetMLSDKVersionMinor() : number;
        static GetMLSDKVersionRevision() : number;
        static GetPlatformAPILevel() : number;
        static IsRunningOnMagicLeapHMD() : boolean;
        static SetAppReady() : boolean;
        static SetBaseOrientation(InBaseOrientation: UE.Quat) : void;
        static SetBasePosition(InBasePosition: UE.Vector) : void;
        static SetBaseRotation(InBaseRotation: UE.Rotator) : void;
        static SetFocusActor(InFocusActor: $Nullable<UE.Actor>, bSetStabilizationActor?: boolean /* = true */) : void;
        static SetStabilizationDepthActor(InStabilizationDepthActor: $Nullable<UE.Actor>, bSetFocusActor?: boolean /* = true */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapHMDFunctionLibrary;
        static Load(InName: string): MagicLeapHMDFunctionLibrary;
    
        __tid_MagicLeapHMDFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapIdentityAttribute {
        constructor();
        constructor(Attribute: UE.EMagicLeapIdentityKey, Value: string);
        Attribute: UE.EMagicLeapIdentityKey;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapIdentityAttribute_0__: boolean;
    }
    
    class MagicLeapIdentity extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AvailableIdentityAttributesDelegate__DelegateSignature(ResultCode: UE.EMagicLeapIdentityError, AvailableAttributes: TArray<UE.EMagicLeapIdentityKey>) : void;
        GetAllAvailableAttributes(AvailableAttributes: $Ref<TArray<UE.EMagicLeapIdentityKey>>) : UE.EMagicLeapIdentityError;
        GetAllAvailableAttributesAsync(ResultDelegate: $Delegate<(ResultCode: UE.EMagicLeapIdentityError, AvailableAttributes: TArray<UE.EMagicLeapIdentityKey>) => void>) : void;
        ModifyIdentityAttributeValueDelegate__DelegateSignature(ResultCode: UE.EMagicLeapIdentityError, AttributesUpdatedSuccessfully: TArray<UE.EMagicLeapIdentityKey>) : void;
        RequestAttributeValue(RequestedAttributeList: TArray<UE.EMagicLeapIdentityKey>, RequestedAttributeValues: $Ref<TArray<UE.MagicLeapIdentityAttribute>>) : UE.EMagicLeapIdentityError;
        RequestAttributeValueAsync(RequestedAttributeList: TArray<UE.EMagicLeapIdentityKey>, ResultDelegate: $Delegate<(ResultCode: UE.EMagicLeapIdentityError, AttributeValue: TArray<UE.MagicLeapIdentityAttribute>) => void>) : UE.EMagicLeapIdentityError;
        RequestIdentityAttributeValueDelegate__DelegateSignature(ResultCode: UE.EMagicLeapIdentityError, AttributeValue: TArray<UE.MagicLeapIdentityAttribute>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapIdentity;
        static Load(InName: string): MagicLeapIdentity;
    
        __tid_MagicLeapIdentity_0__: boolean;
    }
    
    class MagicLeapImageTargetSettings {
        constructor();
        constructor(ImageTexture: UE.Texture2D, Name: string, LongerDimension: number, bIsStationary: boolean, bIsEnabled: boolean);
        ImageTexture: UE.Texture2D;
        Name: string;
        LongerDimension: number;
        bIsStationary: boolean;
        bIsEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapImageTargetSettings_0__: boolean;
    }
    
    class MagicLeapImageTargetState {
        constructor();
        constructor(TrackingStatus: UE.EMagicLeapImageTargetStatus, Location: UE.Vector, Rotation: UE.Rotator);
        TrackingStatus: UE.EMagicLeapImageTargetStatus;
        Location: UE.Vector;
        Rotation: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapImageTargetState_0__: boolean;
    }
    
    class MagicLeapImageTrackerComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetImageTexture: UE.Texture2D;
        Name: string;
        LongerDimension: number;
        bIsStationary: boolean;
        bUseUnreliablePose: boolean;
        AxisOrientation: UE.EMagicLeapImageTargetOrientation;
        OnSetImageTargetSucceeded: $MulticastDelegate<() => void>;
        OnSetImageTargetFailed: $MulticastDelegate<() => void>;
        OnImageTargetFound: $MulticastDelegate<() => void>;
        OnImageTargetLost: $MulticastDelegate<() => void>;
        OnImageTargetUnreliableTracking: $MulticastDelegate<(LastTrackedLocation: UE.Vector, LastTrackedRotation: UE.Rotator, NewUnreliableLocation: UE.Vector, NewUnreliableRotation: UE.Rotator) => void>;
        RemoveTargetAsync() : boolean;
        SetTargetAsync(ImageTarget: $Nullable<UE.Texture2D>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapImageTrackerComponent;
        static Load(InName: string): MagicLeapImageTrackerComponent;
    
        __tid_MagicLeapImageTrackerComponent_0__: boolean;
    }
    
    class MagicLeapImageTrackerFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static EnableImageTracking(bEnable: boolean) : void;
        static GetMaxSimultaneousTargets() : number;
        static IsImageTrackingEnabled() : boolean;
        static SetMaxSimultaneousTargets(MaxSimultaneousTargets: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapImageTrackerFunctionLibrary;
        static Load(InName: string): MagicLeapImageTrackerFunctionLibrary;
    
        __tid_MagicLeapImageTrackerFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapLightEstimationAmbientGlobalState {
        constructor();
        constructor(AmbientIntensityNits: TArray<number>, Timestamp: UE.Timespan);
        AmbientIntensityNits: TArray<number>;
        Timestamp: UE.Timespan;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapLightEstimationAmbientGlobalState_0__: boolean;
    }
    
    class MagicLeapLightEstimationColorTemperatureState {
        constructor();
        constructor(ColorTemperatureKelvin: number, AmbientColor: UE.LinearColor, Timestamp: UE.Timespan);
        ColorTemperatureKelvin: number;
        AmbientColor: UE.LinearColor;
        Timestamp: UE.Timespan;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapLightEstimationColorTemperatureState_0__: boolean;
    }
    
    class MagicLeapLightEstimationFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateTracker() : boolean;
        static DestroyTracker() : void;
        static GetAmbientGlobalState(GlobalAmbientState: $Ref<UE.MagicLeapLightEstimationAmbientGlobalState>) : boolean;
        static GetColorTemperatureState(ColorTemperatureState: $Ref<UE.MagicLeapLightEstimationColorTemperatureState>) : boolean;
        static IsTrackerValid() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapLightEstimationFunctionLibrary;
        static Load(InName: string): MagicLeapLightEstimationFunctionLibrary;
    
        __tid_MagicLeapLightEstimationFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapLightingTrackingComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UseGlobalAmbience: boolean;
        UseColorTemp: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapLightingTrackingComponent;
        static Load(InName: string): MagicLeapLightingTrackingComponent;
    
        __tid_MagicLeapLightingTrackingComponent_0__: boolean;
    }
    
    class MagicLeapMeshBlockInfo {
        constructor();
        constructor(BlockID: UE.Guid, BlockPosition: UE.Vector, BlockOrientation: UE.Rotator, BlockDimensions: UE.Vector, Timestamp: UE.Timespan, BlockState: UE.EMagicLeapMeshState);
        BlockID: UE.Guid;
        BlockPosition: UE.Vector;
        BlockOrientation: UE.Rotator;
        BlockDimensions: UE.Vector;
        Timestamp: UE.Timespan;
        BlockState: UE.EMagicLeapMeshState;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapMeshBlockInfo_0__: boolean;
    }
    
    class MagicLeapMeshBlockRequest {
        constructor();
        constructor(BlockID: UE.Guid, LevelOfDetail: UE.EMagicLeapMeshLOD);
        BlockID: UE.Guid;
        LevelOfDetail: UE.EMagicLeapMeshLOD;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapMeshBlockRequest_0__: boolean;
    }
    
    class MagicLeapTrackingMeshInfo {
        constructor();
        constructor(Timestamp: UE.Timespan, BlockData: TArray<UE.MagicLeapMeshBlockInfo>);
        Timestamp: UE.Timespan;
        BlockData: TArray<UE.MagicLeapMeshBlockInfo>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapTrackingMeshInfo_0__: boolean;
    }
    
    class MagicLeapMeshBlockSelectorInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectMeshBlocks(NewMeshInfo: UE.MagicLeapTrackingMeshInfo, RequestedMesh: $Ref<TArray<UE.MagicLeapMeshBlockRequest>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapMeshBlockSelectorInterface;
        static Load(InName: string): MagicLeapMeshBlockSelectorInterface;
    
        __tid_MagicLeapMeshBlockSelectorInterface_0__: boolean;
    }
    
    class MagicLeapMeshTrackerComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnMeshTrackerUpdated: $MulticastDelegate<(ID: UE.Guid, Vertices: TArray<UE.Vector>, Triangles: TArray<number>, Normals: TArray<UE.Vector>, Confidence: TArray<number>) => void>;
        ScanWorld: boolean;
        MeshType: UE.EMagicLeapMeshType;
        BoundingVolume: UE.BoxComponent;
        LevelOfDetail: UE.EMagicLeapMeshLOD;
        PerimeterOfGapsToFill: number;
        Planarize: boolean;
        DisconnectedSectionArea: number;
        RequestNormals: boolean;
        RequestVertexConfidence: boolean;
        VertexColorMode: UE.EMagicLeapMeshVertexColorMode;
        BlockVertexColors: TArray<UE.Color>;
        VertexColorFromConfidenceZero: UE.LinearColor;
        VertexColorFromConfidenceOne: UE.LinearColor;
        RemoveOverlappingTriangles: boolean;
        MRMesh: UE.MRMeshComponent;
        BricksPerFrame: number;
        ConnectBlockSelector(Selector: MagicLeapMeshBlockSelectorInterface) : void;
        ConnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : void;
        DisconnectBlockSelector() : void;
        DisconnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : void;
        GetNumQueuedBlockUpdates() : number;
        OnMeshTrackerUpdated__DelegateSignature(ID: UE.Guid, Vertices: TArray<UE.Vector>, Triangles: TArray<number>, Normals: TArray<UE.Vector>, Confidence: TArray<number>) : void;
        SelectMeshBlocks(NewMeshInfo: UE.MagicLeapTrackingMeshInfo, RequestedMesh: $Ref<TArray<UE.MagicLeapMeshBlockRequest>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapMeshTrackerComponent;
        static Load(InName: string): MagicLeapMeshTrackerComponent;
    
        __tid_MagicLeapMeshTrackerComponent_0__: boolean;
    }
    
    class MagicLeapPolygon {
        constructor();
        constructor(Vertices: TArray<UE.Vector>);
        Vertices: TArray<UE.Vector>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapPolygon_0__: boolean;
    }
    
    class MagicLeapPlaneBoundary {
        constructor();
        constructor(Polygon: UE.MagicLeapPolygon, Holes: TArray<UE.MagicLeapPolygon>);
        Polygon: UE.MagicLeapPolygon;
        Holes: TArray<UE.MagicLeapPolygon>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapPlaneBoundary_0__: boolean;
    }
    
    class MagicLeapPlaneBoundaries {
        constructor();
        constructor(ID: UE.Guid, Boundaries: TArray<UE.MagicLeapPlaneBoundary>);
        ID: UE.Guid;
        Boundaries: TArray<UE.MagicLeapPlaneBoundary>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapPlaneBoundaries_0__: boolean;
    }
    
    class MagicLeapPlaneResult {
        constructor();
        constructor(PlanePosition: UE.Vector, PlaneOrientation: UE.Rotator, ContentOrientation: UE.Rotator, PlaneDimensions: UE.Vector2D, PlaneFlags: TArray<UE.EMagicLeapPlaneQueryFlags>, ID: UE.Guid, InnerID: UE.Guid);
        PlanePosition: UE.Vector;
        PlaneOrientation: UE.Rotator;
        ContentOrientation: UE.Rotator;
        PlaneDimensions: UE.Vector2D;
        PlaneFlags: TArray<UE.EMagicLeapPlaneQueryFlags>;
        ID: UE.Guid;
        InnerID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapPlaneResult_0__: boolean;
    }
    
    class MagicLeapPlanesComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QueryFlags: TArray<UE.EMagicLeapPlaneQueryFlags>;
        SearchVolume: UE.BoxComponent;
        MaxResults: number;
        MinHolePerimeter: number;
        MinPlaneArea: number;
        QueryType: UE.EMagicLeapPlaneQueryType;
        SimilarityThreshold: number;
        OnPlanesQueryResult: $MulticastDelegate<(bSuccess: boolean, Planes: TArray<UE.MagicLeapPlaneResult>, Polygons: TArray<UE.MagicLeapPlaneBoundaries>) => void>;
        OnPersistentPlanesQueryResult: $MulticastDelegate<(bSuccess: boolean, QueryHandle: UE.Guid, QueryType: UE.EMagicLeapPlaneQueryType, NewPlanes: TArray<UE.MagicLeapPlaneResult>, RemovedPlaneIDs: TArray<UE.Guid>, NewPolygons: TArray<UE.MagicLeapPlaneBoundaries>, RemovedPolygonIDs: TArray<UE.Guid>) => void>;
        RequestPlanesAsync() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapPlanesComponent;
        static Load(InName: string): MagicLeapPlanesComponent;
    
        __tid_MagicLeapPlanesComponent_0__: boolean;
    }
    
    class MagicLeapPlanesFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddPersistentQuery(PersistentQueryType: UE.EMagicLeapPlaneQueryType) : UE.Guid;
        static CreateTracker() : boolean;
        static DestroyTracker() : boolean;
        static GetContentScale(ContentActor: $Nullable<UE.Actor>, PlaneResult: UE.MagicLeapPlaneResult) : UE.Transform;
        static IsTrackerValid() : boolean;
        static PlanesPersistentQueryBeginAsync(Query: UE.MagicLeapPlanesQuery, Handle: UE.Guid, ResultDelegate: $Delegate<(bSuccess: boolean, QueryHandle: UE.Guid, QueryType: UE.EMagicLeapPlaneQueryType, NewPlanes: TArray<UE.MagicLeapPlaneResult>, RemovedPlaneIDs: TArray<UE.Guid>, NewPolygons: TArray<UE.MagicLeapPlaneBoundaries>, RemovedPolygonIDs: TArray<UE.Guid>) => void>) : boolean;
        static PlanesQueryBeginAsync(Query: UE.MagicLeapPlanesQuery, ResultDelegate: $Delegate<(bSuccess: boolean, Planes: TArray<UE.MagicLeapPlaneResult>, Polygons: TArray<UE.MagicLeapPlaneBoundaries>) => void>) : boolean;
        static RemoveFlagsNotInQuery(InQueryFlags: TArray<UE.EMagicLeapPlaneQueryFlags>, InResultFlags: TArray<UE.EMagicLeapPlaneQueryFlags>, OutFlags: $Ref<TArray<UE.EMagicLeapPlaneQueryFlags>>) : void;
        static RemovePersistentQuery(Handle: UE.Guid) : boolean;
        static ReorderPlaneFlags(InPriority: TArray<UE.EMagicLeapPlaneQueryFlags>, InFlagsToReorder: TArray<UE.EMagicLeapPlaneQueryFlags>, OutReorderedFlags: $Ref<TArray<UE.EMagicLeapPlaneQueryFlags>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapPlanesFunctionLibrary;
        static Load(InName: string): MagicLeapPlanesFunctionLibrary;
    
        __tid_MagicLeapPlanesFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapPrivilegesFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CheckPrivilege(Privilege: UE.EMagicLeapPrivilege) : boolean;
        static RequestPrivilege(Privilege: UE.EMagicLeapPrivilege) : boolean;
        static RequestPrivilegeAsync(Privilege: UE.EMagicLeapPrivilege, ResultDelegate: $Delegate<(RequestedPrivilege: UE.EMagicLeapPrivilege, WasGranted: boolean) => void>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapPrivilegesFunctionLibrary;
        static Load(InName: string): MagicLeapPrivilegesFunctionLibrary;
    
        __tid_MagicLeapPrivilegesFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapRaycastHitResult {
        constructor();
        constructor(HitState: UE.EMagicLeapRaycastResultState, HitPoint: UE.Vector, Normal: UE.Vector, Confidence: number, UserData: number);
        HitState: UE.EMagicLeapRaycastResultState;
        HitPoint: UE.Vector;
        Normal: UE.Vector;
        Confidence: number;
        UserData: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapRaycastHitResult_0__: boolean;
    }
    
    class MagicLeapRaycastQueryParams {
        constructor();
        constructor(Position: UE.Vector, Direction: UE.Vector, UpVector: UE.Vector, Width: number, Height: number, HorizontalFovDegrees: number, CollideWithUnobserved: boolean, UserData: number);
        Position: UE.Vector;
        Direction: UE.Vector;
        UpVector: UE.Vector;
        Width: number;
        Height: number;
        HorizontalFovDegrees: number;
        CollideWithUnobserved: boolean;
        UserData: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapRaycastQueryParams_0__: boolean;
    }
    
    class MagicLeapRaycastComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RaycastResultDelegate__DelegateSignature(HitResult: UE.MagicLeapRaycastHitResult) : void;
        RequestRaycast(RequestParams: UE.MagicLeapRaycastQueryParams, ResultDelegate: $Delegate<(HitResult: UE.MagicLeapRaycastHitResult) => void>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapRaycastComponent;
        static Load(InName: string): MagicLeapRaycastComponent;
    
        __tid_MagicLeapRaycastComponent_0__: boolean;
    }
    
    class MagicLeapRaycastFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static MakeRaycastQueryParams(Position: UE.Vector, Direction: UE.Vector, UpVector: UE.Vector, Width: number, Height: number, HorizontalFovDegrees: number, CollideWithUnobserved: boolean, UserData: number) : UE.MagicLeapRaycastQueryParams;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapRaycastFunctionLibrary;
        static Load(InName: string): MagicLeapRaycastFunctionLibrary;
    
        __tid_MagicLeapRaycastFunctionLibrary_0__: boolean;
    }
    
    class MagicLeapResult {
        constructor();
        constructor(bSuccess: boolean, AdditionalInfo: string);
        bSuccess: boolean;
        AdditionalInfo: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapResult_0__: boolean;
    }
    
    class MagicLeapSDKSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MLSDKPath: UE.DirectoryPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapSDKSettings;
        static Load(InName: string): MagicLeapSDKSettings;
    
        __tid_MagicLeapSDKSettings_0__: boolean;
    }
    
    class MagicLeapSecureStorage extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static DeleteSecureData(Key: string) : boolean;
        static GetSecureArray(Key: string, DataToRetrieve: $Ref<TArray<number>>) : boolean;
        static GetSecureBool(Key: string, DataToRetrieve: $Ref<boolean>) : boolean;
        static GetSecureByte(Key: string, DataToRetrieve: $Ref<number>) : boolean;
        static GetSecureFloat(Key: string, DataToRetrieve: $Ref<number>) : boolean;
        static GetSecureInt(Key: string, DataToRetrieve: $Ref<number>) : boolean;
        static GetSecureInt64(Key: string, DataToRetrieve: $Ref<bigint>) : boolean;
        static GetSecureRotator(Key: string, DataToRetrieve: $Ref<UE.Rotator>) : boolean;
        static GetSecureSaveGame(Key: string, ObjectToRetrieve: $Ref<UE.SaveGame>) : boolean;
        static GetSecureString(Key: string, DataToRetrieve: $Ref<string>) : boolean;
        static GetSecureTransform(Key: string, DataToRetrieve: $Ref<UE.Transform>) : boolean;
        static GetSecureVector(Key: string, DataToRetrieve: $Ref<UE.Vector>) : boolean;
        static PutSecureArray(Key: string, DataToStore: TArray<number>) : boolean;
        static PutSecureBool(Key: string, DataToStore: boolean) : boolean;
        static PutSecureByte(Key: string, DataToStore: number) : boolean;
        static PutSecureFloat(Key: string, DataToStore: number) : boolean;
        static PutSecureInt(Key: string, DataToStore: number) : boolean;
        static PutSecureInt64(Key: string, DataToStore: bigint) : boolean;
        static PutSecureRotator(Key: string, DataToStore: UE.Rotator) : boolean;
        static PutSecureSaveGame(Key: string, ObjectToStore: $Nullable<UE.SaveGame>) : boolean;
        static PutSecureString(Key: string, DataToStore: string) : boolean;
        static PutSecureTransform(Key: string, DataToStore: UE.Transform) : boolean;
        static PutSecureVector(Key: string, DataToStore: UE.Vector) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapSecureStorage;
        static Load(InName: string): MagicLeapSecureStorage;
    
        __tid_MagicLeapSecureStorage_0__: boolean;
    }
    
    class MagicLeapSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnableZI: boolean;
        bUseVulkanForZI: boolean;
        bUseMLAudioForZI: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapSettings;
        static Load(InName: string): MagicLeapSettings;
    
        __tid_MagicLeapSettings_0__: boolean;
    }
    
    class MagicLeapSharedWorldAlignmentTransforms {
        constructor();
        constructor(AlignmentTransforms: TArray<UE.Transform>);
        AlignmentTransforms: TArray<UE.Transform>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapSharedWorldAlignmentTransforms_0__: boolean;
    }
    
    class MagicLeapSharedWorldSharedData {
        constructor();
        constructor(PinIDs: TArray<UE.Guid>);
        PinIDs: TArray<UE.Guid>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapSharedWorldSharedData_0__: boolean;
    }
    
    class MagicLeapSharedWorldPinData {
        constructor();
        constructor(PinID: UE.Guid, PinState: UE.MagicLeapARPinState);
        PinID: UE.Guid;
        PinState: UE.MagicLeapARPinState;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapSharedWorldPinData_0__: boolean;
    }
    
    class MagicLeapSharedWorldLocalData {
        constructor();
        constructor(LocalPins: TArray<UE.MagicLeapSharedWorldPinData>);
        LocalPins: TArray<UE.MagicLeapSharedWorldPinData>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapSharedWorldLocalData_0__: boolean;
    }
    
    class MagicLeapSharedWorldPlayerController extends UE.PlayerController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CanSendLocalDataToServer() : boolean;
        ClientMarkReadyForSendingLocalData() : void;
        ClientSetChosenOne(bChosenOne: boolean) : void;
        IsChosenOne() : boolean;
        ServerSetAlignmentTransforms(InAlignmentTransforms: UE.MagicLeapSharedWorldAlignmentTransforms) : void;
        ServerSetLocalWorldData(LocalWorldReplicationData: UE.MagicLeapSharedWorldLocalData) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapSharedWorldPlayerController;
        static Load(InName: string): MagicLeapSharedWorldPlayerController;
    
        __tid_MagicLeapSharedWorldPlayerController_0__: boolean;
    }
    
    class MagicLeapSharedWorldGameMode extends UE.GameMode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SharedWorldData: UE.MagicLeapSharedWorldSharedData;
        OnNewLocalDataFromClients: $MulticastDelegate<() => void>;
        PinSelectionConfidenceThreshold: number;
        ChosenOne: UE.MagicLeapSharedWorldPlayerController;
        DetermineSharedWorldData(NewSharedWorldData: $Ref<UE.MagicLeapSharedWorldSharedData>) : void;
        MagicLeapOnNewLocalDataFromClients__DelegateSignature() : void;
        SelectChosenOne() : void;
        SendSharedWorldDataToClients() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapSharedWorldGameMode;
        static Load(InName: string): MagicLeapSharedWorldGameMode;
    
        __tid_MagicLeapSharedWorldGameMode_0__: boolean;
    }
    
    class MagicLeapSharedWorldGameState extends UE.GameState {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SharedWorldData: UE.MagicLeapSharedWorldSharedData;
        AlignmentTransforms: UE.MagicLeapSharedWorldAlignmentTransforms;
        OnSharedWorldDataUpdated: $MulticastDelegate<() => void>;
        OnAlignmentTransformsUpdated: $MulticastDelegate<() => void>;
        CalculateXRCameraRootTransform() : UE.Transform;
        MagicLeapSharedWorldEvent__DelegateSignature() : void;
        OnReplicate_AlignmentTransforms() : void;
        OnReplicate_SharedWorldData() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapSharedWorldGameState;
        static Load(InName: string): MagicLeapSharedWorldGameState;
    
        __tid_MagicLeapSharedWorldGameState_0__: boolean;
    }
    
    class MagicLeapTouchpadGesture {
        constructor();
        constructor(Hand: UE.EControllerHand, MotionSource: string, Type: UE.EMagicLeapTouchpadGestureType, Direction: UE.EMagicLeapTouchpadGestureDirection, PositionAndForce: UE.Vector, Speed: number, Distance: number, FingerGap: number, Radius: number, Angle: number);
        Hand: UE.EControllerHand;
        MotionSource: string;
        Type: UE.EMagicLeapTouchpadGestureType;
        Direction: UE.EMagicLeapTouchpadGestureDirection;
        PositionAndForce: UE.Vector;
        Speed: number;
        Distance: number;
        FingerGap: number;
        Radius: number;
        Angle: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MagicLeapTouchpadGesture_0__: boolean;
    }
    
    class MagicLeapTouchpadGesturesComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnTouchpadGestureStart: $MulticastDelegate<(GestureData: UE.MagicLeapTouchpadGesture) => void>;
        OnTouchpadGestureContinue: $MulticastDelegate<(GestureData: UE.MagicLeapTouchpadGesture) => void>;
        OnTouchpadGestureEnd: $MulticastDelegate<(GestureData: UE.MagicLeapTouchpadGesture) => void>;
        TouchpadGestureEvent__DelegateSignature(GestureData: UE.MagicLeapTouchpadGesture) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MagicLeapTouchpadGesturesComponent;
        static Load(InName: string): MagicLeapTouchpadGesturesComponent;
    
        __tid_MagicLeapTouchpadGesturesComponent_0__: boolean;
    }
    
    class MainActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NotifyWithInt: $MulticastDelegate<(A: number) => void>;
        NotifyWithString: $Delegate<(A: string) => void>;
        NotifyWithRefString: $Delegate<(A: $Ref<string>) => void>;
        NotifyWithStringRet: $Delegate<(A: string) => string>;
        NotifyWithNothing: $MulticastDelegate<() => void>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MainActor;
        static Load(InName: string): MainActor;
    
        __tid_MainActor_0__: boolean;
    }
    
    class SomeData {
        constructor();
        constructor(Alignment: UE.Vector2D, WillSerialize: number);
        Alignment: UE.Vector2D;
        WillSerialize: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SomeData_0__: boolean;
    }
    
    class MainObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SomeData: UE.SomeData;
        V: UE.Vector;
        MyFixSizeArray: FixSizeArray<number>;
        MyArray: TArray<number>;
        MySet: TSet<string>;
        MyMap: TMap<string, number>;
        MyString: string;
        ArrayBuffer: ArrayBuffer;
        Add(a: number, b: number) : number;
        ArrayBufferTest(Ab: ArrayBuffer) : ArrayBuffer;
        Bar(V: UE.Vector) : string;
        Bar2(V: $Ref<UE.Vector>) : string;
        Bar3(V: $Ref<UE.Vector>) : UE.Vector;
        Callback__DelegateSignature(A: string) : boolean;
        DefaultTest(Str?: string /* = "i am default" */, I?: number /* = 10 */, Vec?: UE.Vector /* = 1.100000,2.200000,3.300000 */) : void;
        Div(a: number, b: number) : number;
        EnumTest(E: UE.EToTest) : void;
        Foo() : string;
        GetData() : TArray<number>;
        GetInts() : TArray<number>;
        GetStrings() : TArray<string>;
        Mult(a: number, b: number) : number;
        NameTest(Name: string) : void;
        PassJsFunctionAsDelegate(Callback: $Delegate<(A: string) => boolean>) : void;
        PrintState() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MainObject;
        static Load(InName: string): MainObject;
    
        __tid_MainObject_0__: boolean;
    }
    
    class Manipulator extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssociatedComponent: UE.SceneComponent;
        StaticMeshComponent: UE.StaticMeshComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Manipulator;
        static Load(InName: string): Manipulator;
    
        __tid_Manipulator_0__: boolean;
    }
    
    class MapProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MapProperty;
        static Load(InName: string): MapProperty;
    
        __tid_MapProperty_0__: boolean;
    }
    
    class MasterAudioSubmixCaptureProtocol extends UE.MovieSceneAudioCaptureProtocolBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FileName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MasterAudioSubmixCaptureProtocol;
        static Load(InName: string): MasterAudioSubmixCaptureProtocol;
    
        __tid_MasterAudioSubmixCaptureProtocol_0__: boolean;
    }
    
    class MaterialEditingLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static ClearAllMaterialInstanceParameters(Instance: $Nullable<UE.MaterialInstanceConstant>) : void;
        static ConnectMaterialExpressions(FromExpression: $Nullable<UE.MaterialExpression>, FromOutputName: string, ToExpression: $Nullable<UE.MaterialExpression>, ToInputName: string) : boolean;
        static ConnectMaterialProperty(FromExpression: $Nullable<UE.MaterialExpression>, FromOutputName: string, Property: UE.EMaterialProperty) : boolean;
        static CreateMaterialExpression(Material: $Nullable<UE.Material>, ExpressionClass: $Nullable<UE.Class>, NodePosX?: number /* = 0 */, NodePosY?: number /* = 0 */) : UE.MaterialExpression;
        static CreateMaterialExpressionInFunction(MaterialFunction: $Nullable<UE.MaterialFunction>, ExpressionClass: $Nullable<UE.Class>, NodePosX?: number /* = 0 */, NodePosY?: number /* = 0 */) : UE.MaterialExpression;
        static DeleteAllMaterialExpressions(Material: $Nullable<UE.Material>) : void;
        static DeleteAllMaterialExpressionsInFunction(MaterialFunction: $Nullable<UE.MaterialFunction>) : void;
        static DeleteMaterialExpression(Material: $Nullable<UE.Material>, Expression: $Nullable<UE.MaterialExpression>) : void;
        static DeleteMaterialExpressionInFunction(MaterialFunction: $Nullable<UE.MaterialFunction>, Expression: $Nullable<UE.MaterialExpression>) : void;
        static GetChildInstances(Parent: $Nullable<UE.MaterialInterface>, ChildInstances: $Ref<TArray<UE.AssetData>>) : void;
        static GetInputsForMaterialExpression(Material: $Nullable<UE.Material>, MaterialExpression: $Nullable<UE.MaterialExpression>) : TArray<UE.MaterialExpression>;
        static GetMaterialDefaultScalarParameterValue(Material: $Nullable<UE.Material>, ParameterName: string) : number;
        static GetMaterialDefaultStaticSwitchParameterValue(Material: $Nullable<UE.Material>, ParameterName: string) : boolean;
        static GetMaterialDefaultTextureParameterValue(Material: $Nullable<UE.Material>, ParameterName: string) : UE.Texture;
        static GetMaterialDefaultVectorParameterValue(Material: $Nullable<UE.Material>, ParameterName: string) : UE.LinearColor;
        static GetMaterialInstanceScalarParameterValue(Instance: $Nullable<UE.MaterialInstanceConstant>, ParameterName: string) : number;
        static GetMaterialInstanceStaticSwitchParameterValue(Instance: $Nullable<UE.MaterialInstanceConstant>, ParameterName: string) : boolean;
        static GetMaterialInstanceTextureParameterValue(Instance: $Nullable<UE.MaterialInstanceConstant>, ParameterName: string) : UE.Texture;
        static GetMaterialInstanceVectorParameterValue(Instance: $Nullable<UE.MaterialInstanceConstant>, ParameterName: string) : UE.LinearColor;
        static GetMaterialPropertyInputNode(Material: $Nullable<UE.Material>, Property: UE.EMaterialProperty) : UE.MaterialExpression;
        static GetMaterialSelectedNodes(Material: $Nullable<UE.Material>) : TSet<UE.Object>;
        static GetNumMaterialExpressions(Material: $Nullable<UE.Material>) : number;
        static GetNumMaterialExpressionsInFunction(MaterialFunction: $Nullable<UE.MaterialFunction>) : number;
        static GetScalarParameterNames(Material: $Nullable<UE.MaterialInterface>, ParameterNames: $Ref<TArray<string>>) : void;
        static GetScalarParameterSource(Material: $Nullable<UE.MaterialInterface>, ParameterName: string, ParameterSource: $Ref<UE.SoftObjectPath>) : boolean;
        static GetStaticSwitchParameterNames(Material: $Nullable<UE.MaterialInterface>, ParameterNames: $Ref<TArray<string>>) : void;
        static GetStaticSwitchParameterSource(Material: $Nullable<UE.MaterialInterface>, ParameterName: string, ParameterSource: $Ref<UE.SoftObjectPath>) : boolean;
        static GetTextureParameterNames(Material: $Nullable<UE.MaterialInterface>, ParameterNames: $Ref<TArray<string>>) : void;
        static GetTextureParameterSource(Material: $Nullable<UE.MaterialInterface>, ParameterName: string, ParameterSource: $Ref<UE.SoftObjectPath>) : boolean;
        static GetUsedTextures(Material: $Nullable<UE.Material>) : TArray<UE.Texture>;
        static GetVectorParameterNames(Material: $Nullable<UE.MaterialInterface>, ParameterNames: $Ref<TArray<string>>) : void;
        static GetVectorParameterSource(Material: $Nullable<UE.MaterialInterface>, ParameterName: string, ParameterSource: $Ref<UE.SoftObjectPath>) : boolean;
        static HasMaterialUsage(Material: $Nullable<UE.Material>, Usage: UE.EMaterialUsage) : boolean;
        static LayoutMaterialExpressions(Material: $Nullable<UE.Material>) : void;
        static LayoutMaterialFunctionExpressions(MaterialFunction: $Nullable<UE.MaterialFunction>) : void;
        static RecompileMaterial(Material: $Nullable<UE.Material>) : void;
        static SetMaterialInstanceParent(Instance: $Nullable<UE.MaterialInstanceConstant>, NewParent: $Nullable<UE.MaterialInterface>) : void;
        static SetMaterialInstanceScalarParameterValue(Instance: $Nullable<UE.MaterialInstanceConstant>, ParameterName: string, Value: number) : boolean;
        static SetMaterialInstanceTextureParameterValue(Instance: $Nullable<UE.MaterialInstanceConstant>, ParameterName: string, Value: $Nullable<UE.Texture>) : boolean;
        static SetMaterialInstanceVectorParameterValue(Instance: $Nullable<UE.MaterialInstanceConstant>, ParameterName: string, Value: UE.LinearColor) : boolean;
        static SetMaterialUsage(Material: $Nullable<UE.Material>, Usage: UE.EMaterialUsage, bNeedsRecompile: $Ref<boolean>) : boolean;
        static UpdateMaterialFunction(MaterialFunction: $Nullable<UE.MaterialFunctionInterface>, PreviewMaterial?: UE.Material /* = None */) : void;
        static UpdateMaterialInstance(Instance: $Nullable<UE.MaterialInstanceConstant>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialEditingLibrary;
        static Load(InName: string): MaterialEditingLibrary;
    
        __tid_MaterialEditingLibrary_0__: boolean;
    }
    
    class MaterialFunctionInstance extends UE.MaterialFunctionInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Parent: UE.MaterialFunctionInterface;
        Base: UE.MaterialFunctionInterface;
        ScalarParameterValues: TArray<UE.ScalarParameterValue>;
        VectorParameterValues: TArray<UE.VectorParameterValue>;
        TextureParameterValues: TArray<UE.TextureParameterValue>;
        FontParameterValues: TArray<UE.FontParameterValue>;
        StaticSwitchParameterValues: TArray<UE.StaticSwitchParameter>;
        StaticComponentMaskParameterValues: TArray<UE.StaticComponentMaskParameter>;
        RuntimeVirtualTextureParameterValues: TArray<UE.RuntimeVirtualTextureParameterValue>;
        PreviewMaterial: UE.MaterialInstanceConstant;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionInstance;
        static Load(InName: string): MaterialFunctionInstance;
    
        __tid_MaterialFunctionInstance_0__: boolean;
    }
    
    class MaterialEditorInstanceConstant extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysMaterial: UE.PhysicalMaterial;
        Parent: UE.MaterialInterface;
        ParameterGroups: TArray<UE.EditorParameterGroup>;
        RefractionDepthBias: number;
        SubsurfaceProfile: UE.SubsurfaceProfile;
        bOverrideSubsurfaceProfile: boolean;
        bOverrideBaseProperties: boolean;
        bIsFunctionPreviewMaterial: boolean;
        bIsFunctionInstanceDirty: boolean;
        BasePropertyOverrides: UE.MaterialInstanceBasePropertyOverrides;
        SourceInstance: UE.MaterialInstanceConstant;
        SourceFunction: UE.MaterialFunctionInstance;
        VisibleExpressions: TArray<UE.MaterialParameterInfo>;
        LightmassSettings: UE.LightmassParameterizedMaterialSettings;
        bUseOldStyleMICEditorGroups: boolean;
        StoredLayerPreviews: TArray<UE.MaterialInstanceConstant>;
        StoredBlendPreviews: TArray<UE.MaterialInstanceConstant>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialEditorInstanceConstant;
        static Load(InName: string): MaterialEditorInstanceConstant;
    
        __tid_MaterialEditorInstanceConstant_0__: boolean;
    }
    
    class MaterialEditorMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialEditorMenuContext;
        static Load(InName: string): MaterialEditorMenuContext;
    
        __tid_MaterialEditorMenuContext_0__: boolean;
    }
    
    class MaterialEditorMeshComponent extends UE.StaticMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialEditorMeshComponent;
        static Load(InName: string): MaterialEditorMeshComponent;
    
        __tid_MaterialEditorMeshComponent_0__: boolean;
    }
    
    class MaterialEditorOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShowGrid: boolean;
        bHideUnusedConnectors: boolean;
        bRealtimeMaterialViewport: boolean;
        bRealtimeExpressionViewport: boolean;
        bLivePreviewUpdate: boolean;
        bHideUnrelatedNodes: boolean;
        bAlwaysRefreshAllPreviews: boolean;
        bUseUnsortedMenus: boolean;
        FavoriteExpressions: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialEditorOptions;
        static Load(InName: string): MaterialEditorOptions;
    
        __tid_MaterialEditorOptions_0__: boolean;
    }
    
    class MaterialEditorPreviewParameters extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterGroups: TArray<UE.EditorParameterGroup>;
        PreviewMaterial: UE.Material;
        OriginalFunction: UE.MaterialFunction;
        OriginalMaterial: UE.Material;
        StoredLayerPreviews: TArray<UE.MaterialInstanceConstant>;
        StoredBlendPreviews: TArray<UE.MaterialInstanceConstant>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialEditorPreviewParameters;
        static Load(InName: string): MaterialEditorPreviewParameters;
    
        __tid_MaterialEditorPreviewParameters_0__: boolean;
    }
    
    class MaterialEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaliOfflineCompilerPath: UE.FilePath;
        DefaultPreviewWidth: number;
        DefaultPreviewHeight: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialEditorSettings;
        static Load(InName: string): MaterialEditorSettings;
    
        __tid_MaterialEditorSettings_0__: boolean;
    }
    
    class MaterialExpressionAbs extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionAbs;
        static Load(InName: string): MaterialExpressionAbs;
    
        __tid_MaterialExpressionAbs_0__: boolean;
    }
    
    class MaterialExpressionActorPositionWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionActorPositionWS;
        static Load(InName: string): MaterialExpressionActorPositionWS;
    
        __tid_MaterialExpressionActorPositionWS_0__: boolean;
    }
    
    class MaterialExpressionAdd extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionAdd;
        static Load(InName: string): MaterialExpressionAdd;
    
        __tid_MaterialExpressionAdd_0__: boolean;
    }
    
    class MaterialExpressionTextureBase extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Texture: UE.Texture;
        SamplerType: UE.EMaterialSamplerType;
        IsDefaultMeshpaintTexture: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureBase;
        static Load(InName: string): MaterialExpressionTextureBase;
    
        __tid_MaterialExpressionTextureBase_0__: boolean;
    }
    
    class MaterialExpressionTextureSample extends UE.MaterialExpressionTextureBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Coordinates: UE.ExpressionInput;
        TextureObject: UE.ExpressionInput;
        MipValue: UE.ExpressionInput;
        CoordinatesDX: UE.ExpressionInput;
        CoordinatesDY: UE.ExpressionInput;
        AutomaticViewMipBiasValue: UE.ExpressionInput;
        MipValueMode: UE.ETextureMipValueMode;
        SamplerSource: UE.ESamplerSourceMode;
        AutomaticViewMipBias: boolean;
        ConstCoordinate: number;
        ConstMipValue: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureSample;
        static Load(InName: string): MaterialExpressionTextureSample;
    
        __tid_MaterialExpressionTextureSample_0__: boolean;
    }
    
    class MaterialExpressionTextureSampleParameter extends UE.MaterialExpressionTextureSample {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        ExpressionGUID: UE.Guid;
        Group: string;
        SortPriority: number;
        ChannelNames: UE.ParameterChannelNames;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureSampleParameter;
        static Load(InName: string): MaterialExpressionTextureSampleParameter;
    
        __tid_MaterialExpressionTextureSampleParameter_0__: boolean;
    }
    
    class MaterialExpressionTextureSampleParameter2D extends UE.MaterialExpressionTextureSampleParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureSampleParameter2D;
        static Load(InName: string): MaterialExpressionTextureSampleParameter2D;
    
        __tid_MaterialExpressionTextureSampleParameter2D_0__: boolean;
    }
    
    class MaterialExpressionAntialiasedTextureMask extends UE.MaterialExpressionTextureSampleParameter2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Threshold: number;
        Channel: UE.ETextureColorChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionAntialiasedTextureMask;
        static Load(InName: string): MaterialExpressionAntialiasedTextureMask;
    
        __tid_MaterialExpressionAntialiasedTextureMask_0__: boolean;
    }
    
    class MaterialExpressionAppendVector extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionAppendVector;
        static Load(InName: string): MaterialExpressionAppendVector;
    
        __tid_MaterialExpressionAppendVector_0__: boolean;
    }
    
    class MaterialExpressionArccosine extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArccosine;
        static Load(InName: string): MaterialExpressionArccosine;
    
        __tid_MaterialExpressionArccosine_0__: boolean;
    }
    
    class MaterialExpressionArccosineFast extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArccosineFast;
        static Load(InName: string): MaterialExpressionArccosineFast;
    
        __tid_MaterialExpressionArccosineFast_0__: boolean;
    }
    
    class MaterialExpressionArcsine extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArcsine;
        static Load(InName: string): MaterialExpressionArcsine;
    
        __tid_MaterialExpressionArcsine_0__: boolean;
    }
    
    class MaterialExpressionArcsineFast extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArcsineFast;
        static Load(InName: string): MaterialExpressionArcsineFast;
    
        __tid_MaterialExpressionArcsineFast_0__: boolean;
    }
    
    class MaterialExpressionArctangent extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArctangent;
        static Load(InName: string): MaterialExpressionArctangent;
    
        __tid_MaterialExpressionArctangent_0__: boolean;
    }
    
    class MaterialExpressionArctangent2 extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Y: UE.ExpressionInput;
        X: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArctangent2;
        static Load(InName: string): MaterialExpressionArctangent2;
    
        __tid_MaterialExpressionArctangent2_0__: boolean;
    }
    
    class MaterialExpressionArctangent2Fast extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Y: UE.ExpressionInput;
        X: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArctangent2Fast;
        static Load(InName: string): MaterialExpressionArctangent2Fast;
    
        __tid_MaterialExpressionArctangent2Fast_0__: boolean;
    }
    
    class MaterialExpressionArctangentFast extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionArctangentFast;
        static Load(InName: string): MaterialExpressionArctangentFast;
    
        __tid_MaterialExpressionArctangentFast_0__: boolean;
    }
    
    class MaterialExpressionAtmosphericFogColor extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WorldPosition: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionAtmosphericFogColor;
        static Load(InName: string): MaterialExpressionAtmosphericFogColor;
    
        __tid_MaterialExpressionAtmosphericFogColor_0__: boolean;
    }
    
    class MaterialExpressionAtmosphericLightColor extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionAtmosphericLightColor;
        static Load(InName: string): MaterialExpressionAtmosphericLightColor;
    
        __tid_MaterialExpressionAtmosphericLightColor_0__: boolean;
    }
    
    class MaterialExpressionAtmosphericLightVector extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionAtmosphericLightVector;
        static Load(InName: string): MaterialExpressionAtmosphericLightVector;
    
        __tid_MaterialExpressionAtmosphericLightVector_0__: boolean;
    }
    
    class MaterialExpressionCustomOutput extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCustomOutput;
        static Load(InName: string): MaterialExpressionCustomOutput;
    
        __tid_MaterialExpressionCustomOutput_0__: boolean;
    }
    
    class MaterialExpressionBentNormalCustomOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionBentNormalCustomOutput;
        static Load(InName: string): MaterialExpressionBentNormalCustomOutput;
    
        __tid_MaterialExpressionBentNormalCustomOutput_0__: boolean;
    }
    
    class MaterialExpressionBlackBody extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Temp: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionBlackBody;
        static Load(InName: string): MaterialExpressionBlackBody;
    
        __tid_MaterialExpressionBlackBody_0__: boolean;
    }
    
    class MaterialExpressionBlendMaterialAttributes extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.MaterialAttributesInput;
        B: UE.MaterialAttributesInput;
        Alpha: UE.ExpressionInput;
        PixelAttributeBlendType: UE.EMaterialAttributeBlend;
        VertexAttributeBlendType: UE.EMaterialAttributeBlend;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionBlendMaterialAttributes;
        static Load(InName: string): MaterialExpressionBlendMaterialAttributes;
    
        __tid_MaterialExpressionBlendMaterialAttributes_0__: boolean;
    }
    
    class MaterialExpressionBreakMaterialAttributes extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialAttributes: UE.MaterialAttributesInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionBreakMaterialAttributes;
        static Load(InName: string): MaterialExpressionBreakMaterialAttributes;
    
        __tid_MaterialExpressionBreakMaterialAttributes_0__: boolean;
    }
    
    class MaterialExpressionBumpOffset extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Coordinate: UE.ExpressionInput;
        Height: UE.ExpressionInput;
        HeightRatioInput: UE.ExpressionInput;
        HeightRatio: number;
        ReferencePlane: number;
        ConstCoordinate: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionBumpOffset;
        static Load(InName: string): MaterialExpressionBumpOffset;
    
        __tid_MaterialExpressionBumpOffset_0__: boolean;
    }
    
    class MaterialExpressionCameraPositionWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCameraPositionWS;
        static Load(InName: string): MaterialExpressionCameraPositionWS;
    
        __tid_MaterialExpressionCameraPositionWS_0__: boolean;
    }
    
    class MaterialExpressionCameraVectorWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCameraVectorWS;
        static Load(InName: string): MaterialExpressionCameraVectorWS;
    
        __tid_MaterialExpressionCameraVectorWS_0__: boolean;
    }
    
    class MaterialExpressionCeil extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCeil;
        static Load(InName: string): MaterialExpressionCeil;
    
        __tid_MaterialExpressionCeil_0__: boolean;
    }
    
    class MaterialExpressionParameter extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        ExpressionGUID: UE.Guid;
        Group: string;
        SortPriority: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParameter;
        static Load(InName: string): MaterialExpressionParameter;
    
        __tid_MaterialExpressionParameter_0__: boolean;
    }
    
    class MaterialExpressionVectorParameter extends UE.MaterialExpressionParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultValue: UE.LinearColor;
        bUseCustomPrimitiveData: boolean;
        PrimitiveDataIndex: number;
        ChannelNames: UE.ParameterChannelNames;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVectorParameter;
        static Load(InName: string): MaterialExpressionVectorParameter;
    
        __tid_MaterialExpressionVectorParameter_0__: boolean;
    }
    
    class MaterialExpressionChannelMaskParameter extends UE.MaterialExpressionVectorParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaskChannel: UE.EChannelMaskParameterColor;
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionChannelMaskParameter;
        static Load(InName: string): MaterialExpressionChannelMaskParameter;
    
        __tid_MaterialExpressionChannelMaskParameter_0__: boolean;
    }
    
    class MaterialExpressionClamp extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        Min: UE.ExpressionInput;
        Max: UE.ExpressionInput;
        ClampMode: UE.EClampMode;
        MinDefault: number;
        MaxDefault: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionClamp;
        static Load(InName: string): MaterialExpressionClamp;
    
        __tid_MaterialExpressionClamp_0__: boolean;
    }
    
    class MaterialExpressionClearCoatNormalCustomOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionClearCoatNormalCustomOutput;
        static Load(InName: string): MaterialExpressionClearCoatNormalCustomOutput;
    
        __tid_MaterialExpressionClearCoatNormalCustomOutput_0__: boolean;
    }
    
    class MaterialExpressionCloudSampleAttribute extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCloudSampleAttribute;
        static Load(InName: string): MaterialExpressionCloudSampleAttribute;
    
        __tid_MaterialExpressionCloudSampleAttribute_0__: boolean;
    }
    
    class MaterialExpressionCollectionParameter extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Collection: UE.MaterialParameterCollection;
        ParameterName: string;
        ParameterId: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCollectionParameter;
        static Load(InName: string): MaterialExpressionCollectionParameter;
    
        __tid_MaterialExpressionCollectionParameter_0__: boolean;
    }
    
    class MaterialExpressionComponentMask extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        R: boolean;
        G: boolean;
        B: boolean;
        A: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionComponentMask;
        static Load(InName: string): MaterialExpressionComponentMask;
    
        __tid_MaterialExpressionComponentMask_0__: boolean;
    }
    
    class MaterialExpressionConstant extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        R: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionConstant;
        static Load(InName: string): MaterialExpressionConstant;
    
        __tid_MaterialExpressionConstant_0__: boolean;
    }
    
    class MaterialExpressionConstant2Vector extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        R: number;
        G: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionConstant2Vector;
        static Load(InName: string): MaterialExpressionConstant2Vector;
    
        __tid_MaterialExpressionConstant2Vector_0__: boolean;
    }
    
    class MaterialExpressionConstant3Vector extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Constant: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionConstant3Vector;
        static Load(InName: string): MaterialExpressionConstant3Vector;
    
        __tid_MaterialExpressionConstant3Vector_0__: boolean;
    }
    
    class MaterialExpressionConstant4Vector extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Constant: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionConstant4Vector;
        static Load(InName: string): MaterialExpressionConstant4Vector;
    
        __tid_MaterialExpressionConstant4Vector_0__: boolean;
    }
    
    class MaterialExpressionConstantBiasScale extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        Bias: number;
        Scale: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionConstantBiasScale;
        static Load(InName: string): MaterialExpressionConstantBiasScale;
    
        __tid_MaterialExpressionConstantBiasScale_0__: boolean;
    }
    
    class MaterialExpressionCosine extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        Period: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCosine;
        static Load(InName: string): MaterialExpressionCosine;
    
        __tid_MaterialExpressionCosine_0__: boolean;
    }
    
    class MaterialExpressionCrossProduct extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCrossProduct;
        static Load(InName: string): MaterialExpressionCrossProduct;
    
        __tid_MaterialExpressionCrossProduct_0__: boolean;
    }
    
    class MaterialExpressionScalarParameter extends UE.MaterialExpressionParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultValue: number;
        bUseCustomPrimitiveData: boolean;
        PrimitiveDataIndex: number;
        SliderMin: number;
        SliderMax: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionScalarParameter;
        static Load(InName: string): MaterialExpressionScalarParameter;
    
        __tid_MaterialExpressionScalarParameter_0__: boolean;
    }
    
    class MaterialExpressionCurveAtlasRowParameter extends UE.MaterialExpressionScalarParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Curve: UE.CurveLinearColor;
        Atlas: UE.CurveLinearColorAtlas;
        InputTime: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCurveAtlasRowParameter;
        static Load(InName: string): MaterialExpressionCurveAtlasRowParameter;
    
        __tid_MaterialExpressionCurveAtlasRowParameter_0__: boolean;
    }
    
    class MaterialExpressionCustom extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Code: string;
        OutputType: UE.ECustomMaterialOutputType;
        Description: string;
        Inputs: TArray<UE.CustomInput>;
        AdditionalOutputs: TArray<UE.CustomOutput>;
        AdditionalDefines: TArray<UE.CustomDefine>;
        IncludeFilePaths: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionCustom;
        static Load(InName: string): MaterialExpressionCustom;
    
        __tid_MaterialExpressionCustom_0__: boolean;
    }
    
    class MaterialExpressionDDX extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDDX;
        static Load(InName: string): MaterialExpressionDDX;
    
        __tid_MaterialExpressionDDX_0__: boolean;
    }
    
    class MaterialExpressionDDY extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDDY;
        static Load(InName: string): MaterialExpressionDDY;
    
        __tid_MaterialExpressionDDY_0__: boolean;
    }
    
    class MaterialExpressionDecalDerivative extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDecalDerivative;
        static Load(InName: string): MaterialExpressionDecalDerivative;
    
        __tid_MaterialExpressionDecalDerivative_0__: boolean;
    }
    
    class MaterialExpressionDecalLifetimeOpacity extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDecalLifetimeOpacity;
        static Load(InName: string): MaterialExpressionDecalLifetimeOpacity;
    
        __tid_MaterialExpressionDecalLifetimeOpacity_0__: boolean;
    }
    
    class MaterialExpressionDecalMipmapLevel extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureSize: UE.ExpressionInput;
        ConstWidth: number;
        ConstHeight: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDecalMipmapLevel;
        static Load(InName: string): MaterialExpressionDecalMipmapLevel;
    
        __tid_MaterialExpressionDecalMipmapLevel_0__: boolean;
    }
    
    class MaterialExpressionDeltaTime extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDeltaTime;
        static Load(InName: string): MaterialExpressionDeltaTime;
    
        __tid_MaterialExpressionDeltaTime_0__: boolean;
    }
    
    class MaterialExpressionDepthFade extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InOpacity: UE.ExpressionInput;
        FadeDistance: UE.ExpressionInput;
        OpacityDefault: number;
        FadeDistanceDefault: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDepthFade;
        static Load(InName: string): MaterialExpressionDepthFade;
    
        __tid_MaterialExpressionDepthFade_0__: boolean;
    }
    
    class MaterialExpressionDepthOfFieldFunction extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FunctionValue: UE.EDepthOfFieldFunctionValue;
        Depth: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDepthOfFieldFunction;
        static Load(InName: string): MaterialExpressionDepthOfFieldFunction;
    
        __tid_MaterialExpressionDepthOfFieldFunction_0__: boolean;
    }
    
    class MaterialExpressionDeriveNormalZ extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InXY: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDeriveNormalZ;
        static Load(InName: string): MaterialExpressionDeriveNormalZ;
    
        __tid_MaterialExpressionDeriveNormalZ_0__: boolean;
    }
    
    class MaterialExpressionDesaturation extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        Fraction: UE.ExpressionInput;
        LuminanceFactors: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDesaturation;
        static Load(InName: string): MaterialExpressionDesaturation;
    
        __tid_MaterialExpressionDesaturation_0__: boolean;
    }
    
    class MaterialExpressionDistance extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDistance;
        static Load(InName: string): MaterialExpressionDistance;
    
        __tid_MaterialExpressionDistance_0__: boolean;
    }
    
    class MaterialExpressionDistanceCullFade extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDistanceCullFade;
        static Load(InName: string): MaterialExpressionDistanceCullFade;
    
        __tid_MaterialExpressionDistanceCullFade_0__: boolean;
    }
    
    class MaterialExpressionDistanceFieldGradient extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Position: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDistanceFieldGradient;
        static Load(InName: string): MaterialExpressionDistanceFieldGradient;
    
        __tid_MaterialExpressionDistanceFieldGradient_0__: boolean;
    }
    
    class MaterialExpressionDistanceToNearestSurface extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Position: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDistanceToNearestSurface;
        static Load(InName: string): MaterialExpressionDistanceToNearestSurface;
    
        __tid_MaterialExpressionDistanceToNearestSurface_0__: boolean;
    }
    
    class MaterialExpressionDivide extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDivide;
        static Load(InName: string): MaterialExpressionDivide;
    
        __tid_MaterialExpressionDivide_0__: boolean;
    }
    
    class MaterialExpressionDotProduct extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDotProduct;
        static Load(InName: string): MaterialExpressionDotProduct;
    
        __tid_MaterialExpressionDotProduct_0__: boolean;
    }
    
    class MaterialExpressionDynamicParameter extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParamNames: TArray<string>;
        DefaultValue: UE.LinearColor;
        ParameterIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionDynamicParameter;
        static Load(InName: string): MaterialExpressionDynamicParameter;
    
        __tid_MaterialExpressionDynamicParameter_0__: boolean;
    }
    
    class MaterialExpressionEyeAdaptation extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionEyeAdaptation;
        static Load(InName: string): MaterialExpressionEyeAdaptation;
    
        __tid_MaterialExpressionEyeAdaptation_0__: boolean;
    }
    
    class MaterialExpressionFeatureLevelSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Default: UE.ExpressionInput;
        Inputs: FixSizeArray<UE.ExpressionInput>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFeatureLevelSwitch;
        static Load(InName: string): MaterialExpressionFeatureLevelSwitch;
    
        __tid_MaterialExpressionFeatureLevelSwitch_0__: boolean;
    }
    
    class MaterialExpressionFloor extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFloor;
        static Load(InName: string): MaterialExpressionFloor;
    
        __tid_MaterialExpressionFloor_0__: boolean;
    }
    
    class MaterialExpressionFmod extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFmod;
        static Load(InName: string): MaterialExpressionFmod;
    
        __tid_MaterialExpressionFmod_0__: boolean;
    }
    
    class MaterialExpressionFontSample extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Font: UE.Font;
        FontTexturePage: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFontSample;
        static Load(InName: string): MaterialExpressionFontSample;
    
        __tid_MaterialExpressionFontSample_0__: boolean;
    }
    
    class MaterialExpressionFontSampleParameter extends UE.MaterialExpressionFontSample {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        ExpressionGUID: UE.Guid;
        Group: string;
        SortPriority: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFontSampleParameter;
        static Load(InName: string): MaterialExpressionFontSampleParameter;
    
        __tid_MaterialExpressionFontSampleParameter_0__: boolean;
    }
    
    class MaterialExpressionFrac extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFrac;
        static Load(InName: string): MaterialExpressionFrac;
    
        __tid_MaterialExpressionFrac_0__: boolean;
    }
    
    class MaterialExpressionFresnel extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ExponentIn: UE.ExpressionInput;
        Exponent: number;
        BaseReflectFractionIn: UE.ExpressionInput;
        BaseReflectFraction: number;
        Normal: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionFresnel;
        static Load(InName: string): MaterialExpressionFresnel;
    
        __tid_MaterialExpressionFresnel_0__: boolean;
    }
    
    class MaterialExpressionGetMaterialAttributes extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialAttributes: UE.MaterialAttributesInput;
        AttributeGetTypes: TArray<UE.Guid>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionGetMaterialAttributes;
        static Load(InName: string): MaterialExpressionGetMaterialAttributes;
    
        __tid_MaterialExpressionGetMaterialAttributes_0__: boolean;
    }
    
    class MaterialExpressionGIReplace extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Default: UE.ExpressionInput;
        StaticIndirect: UE.ExpressionInput;
        DynamicIndirect: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionGIReplace;
        static Load(InName: string): MaterialExpressionGIReplace;
    
        __tid_MaterialExpressionGIReplace_0__: boolean;
    }
    
    class MaterialExpressionHairAttributes extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseTangentSpace: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionHairAttributes;
        static Load(InName: string): MaterialExpressionHairAttributes;
    
        __tid_MaterialExpressionHairAttributes_0__: boolean;
    }
    
    class MaterialExpressionHairColor extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Melanin: UE.ExpressionInput;
        Redness: UE.ExpressionInput;
        DyeColor: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionHairColor;
        static Load(InName: string): MaterialExpressionHairColor;
    
        __tid_MaterialExpressionHairColor_0__: boolean;
    }
    
    class MaterialExpressionIf extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        AGreaterThanB: UE.ExpressionInput;
        AEqualsB: UE.ExpressionInput;
        ALessThanB: UE.ExpressionInput;
        EqualsThreshold: number;
        ConstB: number;
        ConstAEqualsB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionIf;
        static Load(InName: string): MaterialExpressionIf;
    
        __tid_MaterialExpressionIf_0__: boolean;
    }
    
    class MaterialExpressionInverseLinearInterpolate extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        Value: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        ConstValue: number;
        bClampResult: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionInverseLinearInterpolate;
        static Load(InName: string): MaterialExpressionInverseLinearInterpolate;
    
        __tid_MaterialExpressionInverseLinearInterpolate_0__: boolean;
    }
    
    class MaterialExpressionLandscapeGrassOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GrassTypes: TArray<UE.GrassInput>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapeGrassOutput;
        static Load(InName: string): MaterialExpressionLandscapeGrassOutput;
    
        __tid_MaterialExpressionLandscapeGrassOutput_0__: boolean;
    }
    
    class MaterialExpressionLandscapeLayerBlend extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Layers: TArray<UE.LayerBlendInput>;
        ExpressionGUID: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapeLayerBlend;
        static Load(InName: string): MaterialExpressionLandscapeLayerBlend;
    
        __tid_MaterialExpressionLandscapeLayerBlend_0__: boolean;
    }
    
    class MaterialExpressionLandscapeLayerCoords extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MappingType: UE.ETerrainCoordMappingType;
        CustomUVType: UE.ELandscapeCustomizedCoordType;
        MappingScale: number;
        MappingRotation: number;
        MappingPanU: number;
        MappingPanV: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapeLayerCoords;
        static Load(InName: string): MaterialExpressionLandscapeLayerCoords;
    
        __tid_MaterialExpressionLandscapeLayerCoords_0__: boolean;
    }
    
    class MaterialExpressionLandscapeLayerSample extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        PreviewWeight: number;
        ExpressionGUID: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapeLayerSample;
        static Load(InName: string): MaterialExpressionLandscapeLayerSample;
    
        __tid_MaterialExpressionLandscapeLayerSample_0__: boolean;
    }
    
    class MaterialExpressionLandscapeLayerSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LayerUsed: UE.ExpressionInput;
        LayerNotUsed: UE.ExpressionInput;
        ParameterName: string;
        PreviewUsed: boolean;
        ExpressionGUID: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapeLayerSwitch;
        static Load(InName: string): MaterialExpressionLandscapeLayerSwitch;
    
        __tid_MaterialExpressionLandscapeLayerSwitch_0__: boolean;
    }
    
    class MaterialExpressionLandscapeLayerWeight extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Base: UE.ExpressionInput;
        Layer: UE.ExpressionInput;
        ParameterName: string;
        PreviewWeight: number;
        ConstBase: UE.Vector;
        ExpressionGUID: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapeLayerWeight;
        static Load(InName: string): MaterialExpressionLandscapeLayerWeight;
    
        __tid_MaterialExpressionLandscapeLayerWeight_0__: boolean;
    }
    
    class PhysicalMaterialInput {
        constructor();
        constructor(PhysicalMaterial: UE.PhysicalMaterial, Input: UE.ExpressionInput);
        PhysicalMaterial: UE.PhysicalMaterial;
        Input: UE.ExpressionInput;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PhysicalMaterialInput_0__: boolean;
    }
    
    class MaterialExpressionLandscapePhysicalMaterialOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Inputs: TArray<UE.PhysicalMaterialInput>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapePhysicalMaterialOutput;
        static Load(InName: string): MaterialExpressionLandscapePhysicalMaterialOutput;
    
        __tid_MaterialExpressionLandscapePhysicalMaterialOutput_0__: boolean;
    }
    
    class MaterialExpressionLandscapeVisibilityMask extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ExpressionGUID: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLandscapeVisibilityMask;
        static Load(InName: string): MaterialExpressionLandscapeVisibilityMask;
    
        __tid_MaterialExpressionLandscapeVisibilityMask_0__: boolean;
    }
    
    class MaterialExpressionLightmapUVs extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLightmapUVs;
        static Load(InName: string): MaterialExpressionLightmapUVs;
    
        __tid_MaterialExpressionLightmapUVs_0__: boolean;
    }
    
    class MaterialExpressionLightmassReplace extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Realtime: UE.ExpressionInput;
        Lightmass: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLightmassReplace;
        static Load(InName: string): MaterialExpressionLightmassReplace;
    
        __tid_MaterialExpressionLightmassReplace_0__: boolean;
    }
    
    class MaterialExpressionLightVector extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLightVector;
        static Load(InName: string): MaterialExpressionLightVector;
    
        __tid_MaterialExpressionLightVector_0__: boolean;
    }
    
    class MaterialExpressionLinearInterpolate extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        Alpha: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        ConstAlpha: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLinearInterpolate;
        static Load(InName: string): MaterialExpressionLinearInterpolate;
    
        __tid_MaterialExpressionLinearInterpolate_0__: boolean;
    }
    
    class MaterialExpressionLogarithm10 extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        X: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLogarithm10;
        static Load(InName: string): MaterialExpressionLogarithm10;
    
        __tid_MaterialExpressionLogarithm10_0__: boolean;
    }
    
    class MaterialExpressionLogarithm2 extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        X: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionLogarithm2;
        static Load(InName: string): MaterialExpressionLogarithm2;
    
        __tid_MaterialExpressionLogarithm2_0__: boolean;
    }
    
    class MaterialExpressionMakeMaterialAttributes extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseColor: UE.ExpressionInput;
        Metallic: UE.ExpressionInput;
        Specular: UE.ExpressionInput;
        Roughness: UE.ExpressionInput;
        Anisotropy: UE.ExpressionInput;
        EmissiveColor: UE.ExpressionInput;
        Opacity: UE.ExpressionInput;
        OpacityMask: UE.ExpressionInput;
        Normal: UE.ExpressionInput;
        Tangent: UE.ExpressionInput;
        WorldPositionOffset: UE.ExpressionInput;
        WorldDisplacement: UE.ExpressionInput;
        TessellationMultiplier: UE.ExpressionInput;
        SubsurfaceColor: UE.ExpressionInput;
        ClearCoat: UE.ExpressionInput;
        ClearCoatRoughness: UE.ExpressionInput;
        AmbientOcclusion: UE.ExpressionInput;
        Refraction: UE.ExpressionInput;
        CustomizedUVs: FixSizeArray<UE.ExpressionInput>;
        PixelDepthOffset: UE.ExpressionInput;
        ShadingModel: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMakeMaterialAttributes;
        static Load(InName: string): MaterialExpressionMakeMaterialAttributes;
    
        __tid_MaterialExpressionMakeMaterialAttributes_0__: boolean;
    }
    
    class MaterialExpressionMapARPassthroughCameraUV extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Coordinates: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMapARPassthroughCameraUV;
        static Load(InName: string): MaterialExpressionMapARPassthroughCameraUV;
    
        __tid_MaterialExpressionMapARPassthroughCameraUV_0__: boolean;
    }
    
    class MaterialExpressionMaterialAttributeLayers extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        ExpressionGUID: UE.Guid;
        Input: UE.MaterialAttributesInput;
        DefaultLayers: UE.MaterialLayersFunctions;
        LayerCallers: TArray<UE.MaterialExpressionMaterialFunctionCall>;
        NumActiveLayerCallers: number;
        BlendCallers: TArray<UE.MaterialExpressionMaterialFunctionCall>;
        NumActiveBlendCallers: number;
        bIsLayerGraphBuilt: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMaterialAttributeLayers;
        static Load(InName: string): MaterialExpressionMaterialAttributeLayers;
    
        __tid_MaterialExpressionMaterialAttributeLayers_0__: boolean;
    }
    
    class MaterialExpressionMaterialLayerOutput extends UE.MaterialExpressionFunctionOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMaterialLayerOutput;
        static Load(InName: string): MaterialExpressionMaterialLayerOutput;
    
        __tid_MaterialExpressionMaterialLayerOutput_0__: boolean;
    }
    
    class MaterialExpressionMaterialProxyReplace extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Realtime: UE.ExpressionInput;
        MaterialProxy: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMaterialProxyReplace;
        static Load(InName: string): MaterialExpressionMaterialProxyReplace;
    
        __tid_MaterialExpressionMaterialProxyReplace_0__: boolean;
    }
    
    class MaterialExpressionMax extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMax;
        static Load(InName: string): MaterialExpressionMax;
    
        __tid_MaterialExpressionMax_0__: boolean;
    }
    
    class MaterialExpressionMin extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMin;
        static Load(InName: string): MaterialExpressionMin;
    
        __tid_MaterialExpressionMin_0__: boolean;
    }
    
    class MaterialExpressionMultiply extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionMultiply;
        static Load(InName: string): MaterialExpressionMultiply;
    
        __tid_MaterialExpressionMultiply_0__: boolean;
    }
    
    class MaterialExpressionNoise extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Position: UE.ExpressionInput;
        FilterWidth: UE.ExpressionInput;
        Scale: number;
        Quality: number;
        NoiseFunction: UE.ENoiseFunction;
        bTurbulence: boolean;
        Levels: number;
        OutputMin: number;
        OutputMax: number;
        LevelScale: number;
        bTiling: boolean;
        RepeatSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionNoise;
        static Load(InName: string): MaterialExpressionNoise;
    
        __tid_MaterialExpressionNoise_0__: boolean;
    }
    
    class MaterialExpressionNormalize extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VectorInput: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionNormalize;
        static Load(InName: string): MaterialExpressionNormalize;
    
        __tid_MaterialExpressionNormalize_0__: boolean;
    }
    
    class MaterialExpressionObjectBounds extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionObjectBounds;
        static Load(InName: string): MaterialExpressionObjectBounds;
    
        __tid_MaterialExpressionObjectBounds_0__: boolean;
    }
    
    class MaterialExpressionObjectOrientation extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionObjectOrientation;
        static Load(InName: string): MaterialExpressionObjectOrientation;
    
        __tid_MaterialExpressionObjectOrientation_0__: boolean;
    }
    
    class MaterialExpressionObjectPositionWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionObjectPositionWS;
        static Load(InName: string): MaterialExpressionObjectPositionWS;
    
        __tid_MaterialExpressionObjectPositionWS_0__: boolean;
    }
    
    class MaterialExpressionObjectRadius extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionObjectRadius;
        static Load(InName: string): MaterialExpressionObjectRadius;
    
        __tid_MaterialExpressionObjectRadius_0__: boolean;
    }
    
    class MaterialExpressionOneMinus extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionOneMinus;
        static Load(InName: string): MaterialExpressionOneMinus;
    
        __tid_MaterialExpressionOneMinus_0__: boolean;
    }
    
    class MaterialExpressionPanner extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Coordinate: UE.ExpressionInput;
        Time: UE.ExpressionInput;
        Speed: UE.ExpressionInput;
        SpeedX: number;
        SpeedY: number;
        ConstCoordinate: number;
        bFractionalPart: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPanner;
        static Load(InName: string): MaterialExpressionPanner;
    
        __tid_MaterialExpressionPanner_0__: boolean;
    }
    
    class MaterialExpressionParticleColor extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleColor;
        static Load(InName: string): MaterialExpressionParticleColor;
    
        __tid_MaterialExpressionParticleColor_0__: boolean;
    }
    
    class MaterialExpressionParticleDirection extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleDirection;
        static Load(InName: string): MaterialExpressionParticleDirection;
    
        __tid_MaterialExpressionParticleDirection_0__: boolean;
    }
    
    class MaterialExpressionParticleMacroUV extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleMacroUV;
        static Load(InName: string): MaterialExpressionParticleMacroUV;
    
        __tid_MaterialExpressionParticleMacroUV_0__: boolean;
    }
    
    class MaterialExpressionParticleMotionBlurFade extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleMotionBlurFade;
        static Load(InName: string): MaterialExpressionParticleMotionBlurFade;
    
        __tid_MaterialExpressionParticleMotionBlurFade_0__: boolean;
    }
    
    class MaterialExpressionParticlePositionWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticlePositionWS;
        static Load(InName: string): MaterialExpressionParticlePositionWS;
    
        __tid_MaterialExpressionParticlePositionWS_0__: boolean;
    }
    
    class MaterialExpressionParticleRadius extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleRadius;
        static Load(InName: string): MaterialExpressionParticleRadius;
    
        __tid_MaterialExpressionParticleRadius_0__: boolean;
    }
    
    class MaterialExpressionParticleRandom extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleRandom;
        static Load(InName: string): MaterialExpressionParticleRandom;
    
        __tid_MaterialExpressionParticleRandom_0__: boolean;
    }
    
    class MaterialExpressionParticleRelativeTime extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleRelativeTime;
        static Load(InName: string): MaterialExpressionParticleRelativeTime;
    
        __tid_MaterialExpressionParticleRelativeTime_0__: boolean;
    }
    
    class MaterialExpressionParticleSize extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleSize;
        static Load(InName: string): MaterialExpressionParticleSize;
    
        __tid_MaterialExpressionParticleSize_0__: boolean;
    }
    
    class MaterialExpressionParticleSpeed extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleSpeed;
        static Load(InName: string): MaterialExpressionParticleSpeed;
    
        __tid_MaterialExpressionParticleSpeed_0__: boolean;
    }
    
    class MaterialExpressionParticleSubUV extends UE.MaterialExpressionTextureSample {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bBlend: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleSubUV;
        static Load(InName: string): MaterialExpressionParticleSubUV;
    
        __tid_MaterialExpressionParticleSubUV_0__: boolean;
    }
    
    class MaterialExpressionParticleSubUVProperties extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionParticleSubUVProperties;
        static Load(InName: string): MaterialExpressionParticleSubUVProperties;
    
        __tid_MaterialExpressionParticleSubUVProperties_0__: boolean;
    }
    
    class MaterialExpressionPerInstanceCustomData extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultValue: UE.ExpressionInput;
        ConstDefaultValue: number;
        DataIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPerInstanceCustomData;
        static Load(InName: string): MaterialExpressionPerInstanceCustomData;
    
        __tid_MaterialExpressionPerInstanceCustomData_0__: boolean;
    }
    
    class MaterialExpressionPerInstanceFadeAmount extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPerInstanceFadeAmount;
        static Load(InName: string): MaterialExpressionPerInstanceFadeAmount;
    
        __tid_MaterialExpressionPerInstanceFadeAmount_0__: boolean;
    }
    
    class MaterialExpressionPerInstanceRandom extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPerInstanceRandom;
        static Load(InName: string): MaterialExpressionPerInstanceRandom;
    
        __tid_MaterialExpressionPerInstanceRandom_0__: boolean;
    }
    
    class MaterialExpressionPixelDepth extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPixelDepth;
        static Load(InName: string): MaterialExpressionPixelDepth;
    
        __tid_MaterialExpressionPixelDepth_0__: boolean;
    }
    
    class MaterialExpressionPixelNormalWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPixelNormalWS;
        static Load(InName: string): MaterialExpressionPixelNormalWS;
    
        __tid_MaterialExpressionPixelNormalWS_0__: boolean;
    }
    
    class MaterialExpressionPower extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Base: UE.ExpressionInput;
        Exponent: UE.ExpressionInput;
        ConstExponent: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPower;
        static Load(InName: string): MaterialExpressionPower;
    
        __tid_MaterialExpressionPower_0__: boolean;
    }
    
    class MaterialExpressionPrecomputedAOMask extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPrecomputedAOMask;
        static Load(InName: string): MaterialExpressionPrecomputedAOMask;
    
        __tid_MaterialExpressionPrecomputedAOMask_0__: boolean;
    }
    
    class MaterialExpressionPreSkinnedLocalBounds extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPreSkinnedLocalBounds;
        static Load(InName: string): MaterialExpressionPreSkinnedLocalBounds;
    
        __tid_MaterialExpressionPreSkinnedLocalBounds_0__: boolean;
    }
    
    class MaterialExpressionPreSkinnedNormal extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPreSkinnedNormal;
        static Load(InName: string): MaterialExpressionPreSkinnedNormal;
    
        __tid_MaterialExpressionPreSkinnedNormal_0__: boolean;
    }
    
    class MaterialExpressionPreSkinnedPosition extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPreSkinnedPosition;
        static Load(InName: string): MaterialExpressionPreSkinnedPosition;
    
        __tid_MaterialExpressionPreSkinnedPosition_0__: boolean;
    }
    
    class MaterialExpressionPreviousFrameSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurrentFrame: UE.ExpressionInput;
        PreviousFrame: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionPreviousFrameSwitch;
        static Load(InName: string): MaterialExpressionPreviousFrameSwitch;
    
        __tid_MaterialExpressionPreviousFrameSwitch_0__: boolean;
    }
    
    class MaterialExpressionQualitySwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Default: UE.ExpressionInput;
        Inputs: FixSizeArray<UE.ExpressionInput>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionQualitySwitch;
        static Load(InName: string): MaterialExpressionQualitySwitch;
    
        __tid_MaterialExpressionQualitySwitch_0__: boolean;
    }
    
    class MaterialExpressionRayTracingQualitySwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Normal: UE.ExpressionInput;
        RayTraced: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRayTracingQualitySwitch;
        static Load(InName: string): MaterialExpressionRayTracingQualitySwitch;
    
        __tid_MaterialExpressionRayTracingQualitySwitch_0__: boolean;
    }
    
    class MaterialExpressionReflectionCapturePassSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Default: UE.ExpressionInput;
        Reflection: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionReflectionCapturePassSwitch;
        static Load(InName: string): MaterialExpressionReflectionCapturePassSwitch;
    
        __tid_MaterialExpressionReflectionCapturePassSwitch_0__: boolean;
    }
    
    class MaterialExpressionReflectionVectorWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CustomWorldNormal: UE.ExpressionInput;
        bNormalizeCustomWorldNormal: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionReflectionVectorWS;
        static Load(InName: string): MaterialExpressionReflectionVectorWS;
    
        __tid_MaterialExpressionReflectionVectorWS_0__: boolean;
    }
    
    class MaterialExpressionReroute extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionReroute;
        static Load(InName: string): MaterialExpressionReroute;
    
        __tid_MaterialExpressionReroute_0__: boolean;
    }
    
    class MaterialExpressionRotateAboutAxis extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NormalizedRotationAxis: UE.ExpressionInput;
        RotationAngle: UE.ExpressionInput;
        PivotPoint: UE.ExpressionInput;
        Position: UE.ExpressionInput;
        Period: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRotateAboutAxis;
        static Load(InName: string): MaterialExpressionRotateAboutAxis;
    
        __tid_MaterialExpressionRotateAboutAxis_0__: boolean;
    }
    
    class MaterialExpressionRotator extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Coordinate: UE.ExpressionInput;
        Time: UE.ExpressionInput;
        CenterX: number;
        CenterY: number;
        Speed: number;
        ConstCoordinate: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRotator;
        static Load(InName: string): MaterialExpressionRotator;
    
        __tid_MaterialExpressionRotator_0__: boolean;
    }
    
    class MaterialExpressionRound extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRound;
        static Load(InName: string): MaterialExpressionRound;
    
        __tid_MaterialExpressionRound_0__: boolean;
    }
    
    class MaterialExpressionRuntimeVirtualTextureOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BaseColor: UE.ExpressionInput;
        Specular: UE.ExpressionInput;
        Roughness: UE.ExpressionInput;
        Normal: UE.ExpressionInput;
        WorldHeight: UE.ExpressionInput;
        Opacity: UE.ExpressionInput;
        Mask: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRuntimeVirtualTextureOutput;
        static Load(InName: string): MaterialExpressionRuntimeVirtualTextureOutput;
    
        __tid_MaterialExpressionRuntimeVirtualTextureOutput_0__: boolean;
    }
    
    class MaterialExpressionRuntimeVirtualTextureReplace extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Default: UE.ExpressionInput;
        VirtualTextureOutput: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRuntimeVirtualTextureReplace;
        static Load(InName: string): MaterialExpressionRuntimeVirtualTextureReplace;
    
        __tid_MaterialExpressionRuntimeVirtualTextureReplace_0__: boolean;
    }
    
    class MaterialExpressionRuntimeVirtualTextureSample extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Coordinates: UE.ExpressionInput;
        WorldPosition: UE.ExpressionInput;
        MipValue: UE.ExpressionInput;
        VirtualTexture: UE.RuntimeVirtualTexture;
        MaterialType: UE.ERuntimeVirtualTextureMaterialType;
        bSinglePhysicalSpace: boolean;
        bAdaptive: boolean;
        MipValueMode: UE.ERuntimeVirtualTextureMipValueMode;
        TextureAddressMode: UE.ERuntimeVirtualTextureTextureAddressMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRuntimeVirtualTextureSample;
        static Load(InName: string): MaterialExpressionRuntimeVirtualTextureSample;
    
        __tid_MaterialExpressionRuntimeVirtualTextureSample_0__: boolean;
    }
    
    class MaterialExpressionRuntimeVirtualTextureSampleParameter extends UE.MaterialExpressionRuntimeVirtualTextureSample {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParameterName: string;
        ExpressionGUID: UE.Guid;
        Group: string;
        SortPriority: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionRuntimeVirtualTextureSampleParameter;
        static Load(InName: string): MaterialExpressionRuntimeVirtualTextureSampleParameter;
    
        __tid_MaterialExpressionRuntimeVirtualTextureSampleParameter_0__: boolean;
    }
    
    class MaterialExpressionSaturate extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSaturate;
        static Load(InName: string): MaterialExpressionSaturate;
    
        __tid_MaterialExpressionSaturate_0__: boolean;
    }
    
    class MaterialExpressionSceneColor extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputMode: UE.EMaterialSceneAttributeInputMode;
        Input: UE.ExpressionInput;
        OffsetFraction: UE.ExpressionInput;
        ConstInput: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSceneColor;
        static Load(InName: string): MaterialExpressionSceneColor;
    
        __tid_MaterialExpressionSceneColor_0__: boolean;
    }
    
    class MaterialExpressionSceneDepth extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputMode: UE.EMaterialSceneAttributeInputMode;
        Input: UE.ExpressionInput;
        Coordinates: UE.ExpressionInput;
        ConstInput: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSceneDepth;
        static Load(InName: string): MaterialExpressionSceneDepth;
    
        __tid_MaterialExpressionSceneDepth_0__: boolean;
    }
    
    class MaterialExpressionSceneDepthWithoutWater extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputMode: UE.EMaterialSceneAttributeInputMode;
        Input: UE.ExpressionInput;
        ConstInput: UE.Vector2D;
        FallbackDepth: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSceneDepthWithoutWater;
        static Load(InName: string): MaterialExpressionSceneDepthWithoutWater;
    
        __tid_MaterialExpressionSceneDepthWithoutWater_0__: boolean;
    }
    
    class MaterialExpressionSceneTexelSize extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSceneTexelSize;
        static Load(InName: string): MaterialExpressionSceneTexelSize;
    
        __tid_MaterialExpressionSceneTexelSize_0__: boolean;
    }
    
    class MaterialExpressionSceneTexture extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Coordinates: UE.ExpressionInput;
        SceneTextureId: UE.ESceneTextureId;
        bFiltered: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSceneTexture;
        static Load(InName: string): MaterialExpressionSceneTexture;
    
        __tid_MaterialExpressionSceneTexture_0__: boolean;
    }
    
    class MaterialExpressionScreenPosition extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionScreenPosition;
        static Load(InName: string): MaterialExpressionScreenPosition;
    
        __tid_MaterialExpressionScreenPosition_0__: boolean;
    }
    
    class MaterialExpressionSetMaterialAttributes extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Inputs: TArray<UE.ExpressionInput>;
        AttributeSetTypes: TArray<UE.Guid>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSetMaterialAttributes;
        static Load(InName: string): MaterialExpressionSetMaterialAttributes;
    
        __tid_MaterialExpressionSetMaterialAttributes_0__: boolean;
    }
    
    class MaterialExpressionShaderStageSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PixelShader: UE.ExpressionInput;
        VertexShader: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionShaderStageSwitch;
        static Load(InName: string): MaterialExpressionShaderStageSwitch;
    
        __tid_MaterialExpressionShaderStageSwitch_0__: boolean;
    }
    
    class MaterialExpressionShadingModel extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShadingModel: UE.EMaterialShadingModel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionShadingModel;
        static Load(InName: string): MaterialExpressionShadingModel;
    
        __tid_MaterialExpressionShadingModel_0__: boolean;
    }
    
    class MaterialExpressionShadingPathSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Default: UE.ExpressionInput;
        Inputs: FixSizeArray<UE.ExpressionInput>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionShadingPathSwitch;
        static Load(InName: string): MaterialExpressionShadingPathSwitch;
    
        __tid_MaterialExpressionShadingPathSwitch_0__: boolean;
    }
    
    class MaterialExpressionShadowReplace extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Default: UE.ExpressionInput;
        Shadow: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionShadowReplace;
        static Load(InName: string): MaterialExpressionShadowReplace;
    
        __tid_MaterialExpressionShadowReplace_0__: boolean;
    }
    
    class MaterialExpressionSign extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSign;
        static Load(InName: string): MaterialExpressionSign;
    
        __tid_MaterialExpressionSign_0__: boolean;
    }
    
    class MaterialExpressionSine extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        Period: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSine;
        static Load(InName: string): MaterialExpressionSine;
    
        __tid_MaterialExpressionSine_0__: boolean;
    }
    
    class MaterialExpressionSingleLayerWaterMaterialOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ScatteringCoefficients: UE.ExpressionInput;
        AbsorptionCoefficients: UE.ExpressionInput;
        PhaseG: UE.ExpressionInput;
        ColorScaleBehindWater: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSingleLayerWaterMaterialOutput;
        static Load(InName: string): MaterialExpressionSingleLayerWaterMaterialOutput;
    
        __tid_MaterialExpressionSingleLayerWaterMaterialOutput_0__: boolean;
    }
    
    class MaterialExpressionSkinningVertexOffsets extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSkinningVertexOffsets;
        static Load(InName: string): MaterialExpressionSkinningVertexOffsets;
    
        __tid_MaterialExpressionSkinningVertexOffsets_0__: boolean;
    }
    
    class MaterialExpressionSkyAtmosphereAerialPerspective extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WorldPosition: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSkyAtmosphereAerialPerspective;
        static Load(InName: string): MaterialExpressionSkyAtmosphereAerialPerspective;
    
        __tid_MaterialExpressionSkyAtmosphereAerialPerspective_0__: boolean;
    }
    
    class MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance;
        static Load(InName: string): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance;
    
        __tid_MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance_0__: boolean;
    }
    
    class MaterialExpressionSkyAtmosphereLightDirection extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSkyAtmosphereLightDirection;
        static Load(InName: string): MaterialExpressionSkyAtmosphereLightDirection;
    
        __tid_MaterialExpressionSkyAtmosphereLightDirection_0__: boolean;
    }
    
    class MaterialExpressionSkyAtmosphereLightDiskLuminance extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSkyAtmosphereLightDiskLuminance;
        static Load(InName: string): MaterialExpressionSkyAtmosphereLightDiskLuminance;
    
        __tid_MaterialExpressionSkyAtmosphereLightDiskLuminance_0__: boolean;
    }
    
    class MaterialExpressionSkyAtmosphereLightIlluminance extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LightIndex: number;
        WorldPosition: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSkyAtmosphereLightIlluminance;
        static Load(InName: string): MaterialExpressionSkyAtmosphereLightIlluminance;
    
        __tid_MaterialExpressionSkyAtmosphereLightIlluminance_0__: boolean;
    }
    
    class MaterialExpressionSkyAtmosphereViewLuminance extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSkyAtmosphereViewLuminance;
        static Load(InName: string): MaterialExpressionSkyAtmosphereViewLuminance;
    
        __tid_MaterialExpressionSkyAtmosphereViewLuminance_0__: boolean;
    }
    
    class MaterialExpressionSmoothStep extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: UE.ExpressionInput;
        Max: UE.ExpressionInput;
        Value: UE.ExpressionInput;
        ConstMin: number;
        ConstMax: number;
        ConstValue: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSmoothStep;
        static Load(InName: string): MaterialExpressionSmoothStep;
    
        __tid_MaterialExpressionSmoothStep_0__: boolean;
    }
    
    class MaterialExpressionSobol extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Cell: UE.ExpressionInput;
        Index: UE.ExpressionInput;
        Seed: UE.ExpressionInput;
        ConstIndex: number;
        ConstSeed: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSobol;
        static Load(InName: string): MaterialExpressionSobol;
    
        __tid_MaterialExpressionSobol_0__: boolean;
    }
    
    class MaterialExpressionSpeedTree extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeometryInput: UE.ExpressionInput;
        WindInput: UE.ExpressionInput;
        LODInput: UE.ExpressionInput;
        ExtraBendWS: UE.ExpressionInput;
        GeometryType: UE.ESpeedTreeGeometryType;
        WindType: UE.ESpeedTreeWindType;
        LODType: UE.ESpeedTreeLODType;
        BillboardThreshold: number;
        bAccurateWindVelocities: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSpeedTree;
        static Load(InName: string): MaterialExpressionSpeedTree;
    
        __tid_MaterialExpressionSpeedTree_0__: boolean;
    }
    
    class MaterialExpressionSphereMask extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        Radius: UE.ExpressionInput;
        Hardness: UE.ExpressionInput;
        AttenuationRadius: number;
        HardnessPercent: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSphereMask;
        static Load(InName: string): MaterialExpressionSphereMask;
    
        __tid_MaterialExpressionSphereMask_0__: boolean;
    }
    
    class MaterialExpressionSphericalParticleOpacity extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Density: UE.ExpressionInput;
        ConstantDensity: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSphericalParticleOpacity;
        static Load(InName: string): MaterialExpressionSphericalParticleOpacity;
    
        __tid_MaterialExpressionSphericalParticleOpacity_0__: boolean;
    }
    
    class MaterialExpressionSpriteTextureSampler extends UE.MaterialExpressionTextureSampleParameter2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSampleAdditionalTextures: boolean;
        AdditionalSlotIndex: number;
        SlotDisplayName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSpriteTextureSampler;
        static Load(InName: string): MaterialExpressionSpriteTextureSampler;
    
        __tid_MaterialExpressionSpriteTextureSampler_0__: boolean;
    }
    
    class MaterialExpressionSquareRoot extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSquareRoot;
        static Load(InName: string): MaterialExpressionSquareRoot;
    
        __tid_MaterialExpressionSquareRoot_0__: boolean;
    }
    
    class MaterialExpressionStaticBool extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionStaticBool;
        static Load(InName: string): MaterialExpressionStaticBool;
    
        __tid_MaterialExpressionStaticBool_0__: boolean;
    }
    
    class MaterialExpressionStaticBoolParameter extends UE.MaterialExpressionParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultValue: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionStaticBoolParameter;
        static Load(InName: string): MaterialExpressionStaticBoolParameter;
    
        __tid_MaterialExpressionStaticBoolParameter_0__: boolean;
    }
    
    class MaterialExpressionStaticComponentMaskParameter extends UE.MaterialExpressionParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        DefaultR: boolean;
        DefaultG: boolean;
        DefaultB: boolean;
        DefaultA: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionStaticComponentMaskParameter;
        static Load(InName: string): MaterialExpressionStaticComponentMaskParameter;
    
        __tid_MaterialExpressionStaticComponentMaskParameter_0__: boolean;
    }
    
    class MaterialExpressionStaticSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultValue: boolean;
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        Value: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionStaticSwitch;
        static Load(InName: string): MaterialExpressionStaticSwitch;
    
        __tid_MaterialExpressionStaticSwitch_0__: boolean;
    }
    
    class MaterialExpressionStaticSwitchParameter extends UE.MaterialExpressionStaticBoolParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionStaticSwitchParameter;
        static Load(InName: string): MaterialExpressionStaticSwitchParameter;
    
        __tid_MaterialExpressionStaticSwitchParameter_0__: boolean;
    }
    
    class MaterialExpressionStep extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Y: UE.ExpressionInput;
        X: UE.ExpressionInput;
        ConstY: number;
        ConstX: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionStep;
        static Load(InName: string): MaterialExpressionStep;
    
        __tid_MaterialExpressionStep_0__: boolean;
    }
    
    class MaterialExpressionSubtract extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        A: UE.ExpressionInput;
        B: UE.ExpressionInput;
        ConstA: number;
        ConstB: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionSubtract;
        static Load(InName: string): MaterialExpressionSubtract;
    
        __tid_MaterialExpressionSubtract_0__: boolean;
    }
    
    class MaterialExpressionTangent extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        Period: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTangent;
        static Load(InName: string): MaterialExpressionTangent;
    
        __tid_MaterialExpressionTangent_0__: boolean;
    }
    
    class MaterialExpressionTangentOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTangentOutput;
        static Load(InName: string): MaterialExpressionTangentOutput;
    
        __tid_MaterialExpressionTangentOutput_0__: boolean;
    }
    
    class MaterialExpressionTemporalSobol extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Index: UE.ExpressionInput;
        Seed: UE.ExpressionInput;
        ConstIndex: number;
        ConstSeed: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTemporalSobol;
        static Load(InName: string): MaterialExpressionTemporalSobol;
    
        __tid_MaterialExpressionTemporalSobol_0__: boolean;
    }
    
    class MaterialExpressionTextureCoordinate extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CoordinateIndex: number;
        UTiling: number;
        VTiling: number;
        UnMirrorU: boolean;
        UnMirrorV: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureCoordinate;
        static Load(InName: string): MaterialExpressionTextureCoordinate;
    
        __tid_MaterialExpressionTextureCoordinate_0__: boolean;
    }
    
    class MaterialExpressionTextureObject extends UE.MaterialExpressionTextureBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureObject;
        static Load(InName: string): MaterialExpressionTextureObject;
    
        __tid_MaterialExpressionTextureObject_0__: boolean;
    }
    
    class MaterialExpressionTextureObjectParameter extends UE.MaterialExpressionTextureSampleParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureObjectParameter;
        static Load(InName: string): MaterialExpressionTextureObjectParameter;
    
        __tid_MaterialExpressionTextureObjectParameter_0__: boolean;
    }
    
    class MaterialExpressionTextureProperty extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureObject: UE.ExpressionInput;
        Property: UE.EMaterialExposedTextureProperty;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureProperty;
        static Load(InName: string): MaterialExpressionTextureProperty;
    
        __tid_MaterialExpressionTextureProperty_0__: boolean;
    }
    
    class MaterialExpressionTextureSampleParameter2DArray extends UE.MaterialExpressionTextureSampleParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureSampleParameter2DArray;
        static Load(InName: string): MaterialExpressionTextureSampleParameter2DArray;
    
        __tid_MaterialExpressionTextureSampleParameter2DArray_0__: boolean;
    }
    
    class MaterialExpressionTextureSampleParameterCube extends UE.MaterialExpressionTextureSampleParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureSampleParameterCube;
        static Load(InName: string): MaterialExpressionTextureSampleParameterCube;
    
        __tid_MaterialExpressionTextureSampleParameterCube_0__: boolean;
    }
    
    class MaterialExpressionTextureSampleParameterSubUV extends UE.MaterialExpressionTextureSampleParameter2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bBlend: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureSampleParameterSubUV;
        static Load(InName: string): MaterialExpressionTextureSampleParameterSubUV;
    
        __tid_MaterialExpressionTextureSampleParameterSubUV_0__: boolean;
    }
    
    class MaterialExpressionTextureSampleParameterVolume extends UE.MaterialExpressionTextureSampleParameter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTextureSampleParameterVolume;
        static Load(InName: string): MaterialExpressionTextureSampleParameterVolume;
    
        __tid_MaterialExpressionTextureSampleParameterVolume_0__: boolean;
    }
    
    class MaterialExpressionThinTranslucentMaterialOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransmittanceColor: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionThinTranslucentMaterialOutput;
        static Load(InName: string): MaterialExpressionThinTranslucentMaterialOutput;
    
        __tid_MaterialExpressionThinTranslucentMaterialOutput_0__: boolean;
    }
    
    class MaterialExpressionTime extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIgnorePause: boolean;
        bOverride_Period: boolean;
        Period: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTime;
        static Load(InName: string): MaterialExpressionTime;
    
        __tid_MaterialExpressionTime_0__: boolean;
    }
    
    class MaterialExpressionTransform extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        TransformSourceType: UE.EMaterialVectorCoordTransformSource;
        TransformType: UE.EMaterialVectorCoordTransform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTransform;
        static Load(InName: string): MaterialExpressionTransform;
    
        __tid_MaterialExpressionTransform_0__: boolean;
    }
    
    class MaterialExpressionTransformPosition extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        TransformSourceType: UE.EMaterialPositionTransformSource;
        TransformType: UE.EMaterialPositionTransformSource;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTransformPosition;
        static Load(InName: string): MaterialExpressionTransformPosition;
    
        __tid_MaterialExpressionTransformPosition_0__: boolean;
    }
    
    class MaterialExpressionTruncate extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTruncate;
        static Load(InName: string): MaterialExpressionTruncate;
    
        __tid_MaterialExpressionTruncate_0__: boolean;
    }
    
    class MaterialExpressionTwoSidedSign extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionTwoSidedSign;
        static Load(InName: string): MaterialExpressionTwoSidedSign;
    
        __tid_MaterialExpressionTwoSidedSign_0__: boolean;
    }
    
    class MaterialExpressionVectorNoise extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Position: UE.ExpressionInput;
        NoiseFunction: UE.EVectorNoiseFunction;
        Quality: number;
        bTiling: boolean;
        TileSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVectorNoise;
        static Load(InName: string): MaterialExpressionVectorNoise;
    
        __tid_MaterialExpressionVectorNoise_0__: boolean;
    }
    
    class MaterialExpressionVertexColor extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVertexColor;
        static Load(InName: string): MaterialExpressionVertexColor;
    
        __tid_MaterialExpressionVertexColor_0__: boolean;
    }
    
    class MaterialExpressionVertexInterpolator extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVertexInterpolator;
        static Load(InName: string): MaterialExpressionVertexInterpolator;
    
        __tid_MaterialExpressionVertexInterpolator_0__: boolean;
    }
    
    class MaterialExpressionVertexNormalWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVertexNormalWS;
        static Load(InName: string): MaterialExpressionVertexNormalWS;
    
        __tid_MaterialExpressionVertexNormalWS_0__: boolean;
    }
    
    class MaterialExpressionVertexTangentWS extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVertexTangentWS;
        static Load(InName: string): MaterialExpressionVertexTangentWS;
    
        __tid_MaterialExpressionVertexTangentWS_0__: boolean;
    }
    
    class MaterialExpressionViewProperty extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Property: UE.EMaterialExposedViewProperty;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionViewProperty;
        static Load(InName: string): MaterialExpressionViewProperty;
    
        __tid_MaterialExpressionViewProperty_0__: boolean;
    }
    
    class MaterialExpressionViewSize extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionViewSize;
        static Load(InName: string): MaterialExpressionViewSize;
    
        __tid_MaterialExpressionViewSize_0__: boolean;
    }
    
    class MaterialExpressionVirtualTextureFeatureSwitch extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        No: UE.ExpressionInput;
        Yes: UE.ExpressionInput;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVirtualTextureFeatureSwitch;
        static Load(InName: string): MaterialExpressionVirtualTextureFeatureSwitch;
    
        __tid_MaterialExpressionVirtualTextureFeatureSwitch_0__: boolean;
    }
    
    class MaterialExpressionVolumetricAdvancedMaterialInput extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVolumetricAdvancedMaterialInput;
        static Load(InName: string): MaterialExpressionVolumetricAdvancedMaterialInput;
    
        __tid_MaterialExpressionVolumetricAdvancedMaterialInput_0__: boolean;
    }
    
    class MaterialExpressionVolumetricAdvancedMaterialOutput extends UE.MaterialExpressionCustomOutput {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhaseG: UE.ExpressionInput;
        PhaseG2: UE.ExpressionInput;
        PhaseBlend: UE.ExpressionInput;
        MultiScatteringContribution: UE.ExpressionInput;
        MultiScatteringOcclusion: UE.ExpressionInput;
        MultiScatteringEccentricity: UE.ExpressionInput;
        ConservativeDensity: UE.ExpressionInput;
        ConstPhaseG: number;
        ConstPhaseG2: number;
        ConstPhaseBlend: number;
        PerSamplePhaseEvaluation: boolean;
        MultiScatteringApproximationOctaveCount: number;
        ConstMultiScatteringContribution: number;
        ConstMultiScatteringOcclusion: number;
        ConstMultiScatteringEccentricity: number;
        bGroundContribution: boolean;
        bGrayScaleMaterial: boolean;
        bRayMarchVolumeShadow: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionVolumetricAdvancedMaterialOutput;
        static Load(InName: string): MaterialExpressionVolumetricAdvancedMaterialOutput;
    
        __tid_MaterialExpressionVolumetricAdvancedMaterialOutput_0__: boolean;
    }
    
    class MaterialExpressionWorldPosition extends UE.MaterialExpression {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WorldPositionShaderOffset: UE.EWorldPositionIncludedOffsets;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialExpressionWorldPosition;
        static Load(InName: string): MaterialExpressionWorldPosition;
    
        __tid_MaterialExpressionWorldPosition_0__: boolean;
    }
    
    class MaterialFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialTexture: UE.Texture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFactoryNew;
        static Load(InName: string): MaterialFactoryNew;
    
        __tid_MaterialFactoryNew_0__: boolean;
    }
    
    class MaterialFunctionFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionFactoryNew;
        static Load(InName: string): MaterialFunctionFactoryNew;
    
        __tid_MaterialFunctionFactoryNew_0__: boolean;
    }
    
    class MaterialFunctionInstanceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialParent: UE.MaterialFunctionInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionInstanceFactory;
        static Load(InName: string): MaterialFunctionInstanceFactory;
    
        __tid_MaterialFunctionInstanceFactory_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayer extends UE.MaterialFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayer;
        static Load(InName: string): MaterialFunctionMaterialLayer;
    
        __tid_MaterialFunctionMaterialLayer_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayerBlend extends UE.MaterialFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayerBlend;
        static Load(InName: string): MaterialFunctionMaterialLayerBlend;
    
        __tid_MaterialFunctionMaterialLayerBlend_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayerBlendFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayerBlendFactory;
        static Load(InName: string): MaterialFunctionMaterialLayerBlendFactory;
    
        __tid_MaterialFunctionMaterialLayerBlendFactory_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayerBlendInstance extends UE.MaterialFunctionInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayerBlendInstance;
        static Load(InName: string): MaterialFunctionMaterialLayerBlendInstance;
    
        __tid_MaterialFunctionMaterialLayerBlendInstance_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayerBlendInstanceFactory extends UE.MaterialFunctionInstanceFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayerBlendInstanceFactory;
        static Load(InName: string): MaterialFunctionMaterialLayerBlendInstanceFactory;
    
        __tid_MaterialFunctionMaterialLayerBlendInstanceFactory_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayerFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayerFactory;
        static Load(InName: string): MaterialFunctionMaterialLayerFactory;
    
        __tid_MaterialFunctionMaterialLayerFactory_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayerInstance extends UE.MaterialFunctionInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayerInstance;
        static Load(InName: string): MaterialFunctionMaterialLayerInstance;
    
        __tid_MaterialFunctionMaterialLayerInstance_0__: boolean;
    }
    
    class MaterialFunctionMaterialLayerInstanceFactory extends UE.MaterialFunctionInstanceFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionMaterialLayerInstanceFactory;
        static Load(InName: string): MaterialFunctionMaterialLayerInstanceFactory;
    
        __tid_MaterialFunctionMaterialLayerInstanceFactory_0__: boolean;
    }
    
    class MaterialFunctionThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialFunctionThumbnailRenderer;
        static Load(InName: string): MaterialFunctionThumbnailRenderer;
    
        __tid_MaterialFunctionThumbnailRenderer_0__: boolean;
    }
    
    class MaterialGraphNode_Base extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialGraphNode_Base;
        static Load(InName: string): MaterialGraphNode_Base;
    
        __tid_MaterialGraphNode_Base_0__: boolean;
    }
    
    class MaterialGraphNode_Root extends UE.MaterialGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Material: UE.Material;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialGraphNode_Root;
        static Load(InName: string): MaterialGraphNode_Root;
    
        __tid_MaterialGraphNode_Root_0__: boolean;
    }
    
    class MaterialGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Material: UE.Material;
        MaterialFunction: UE.MaterialFunction;
        RootNode: UE.MaterialGraphNode_Root;
        OriginalMaterialFullName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialGraph;
        static Load(InName: string): MaterialGraph;
    
        __tid_MaterialGraph_0__: boolean;
    }
    
    class MaterialGraphNode extends UE.MaterialGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialExpression: UE.MaterialExpression;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialGraphNode;
        static Load(InName: string): MaterialGraphNode;
    
        __tid_MaterialGraphNode_0__: boolean;
    }
    
    class MaterialGraphNode_Comment extends UE.EdGraphNode_Comment {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialExpressionComment: UE.MaterialExpressionComment;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialGraphNode_Comment;
        static Load(InName: string): MaterialGraphNode_Comment;
    
        __tid_MaterialGraphNode_Comment_0__: boolean;
    }
    
    class MaterialGraphNode_Knot extends UE.MaterialGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialGraphNode_Knot;
        static Load(InName: string): MaterialGraphNode_Knot;
    
        __tid_MaterialGraphNode_Knot_0__: boolean;
    }
    
    class MaterialGraphSchema extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialGraphSchema;
        static Load(InName: string): MaterialGraphSchema;
    
        __tid_MaterialGraphSchema_0__: boolean;
    }
    
    class MaterialGraphSchemaAction_NewComment extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialGraphSchemaAction_NewComment_0__: boolean;
    }
    
    class MaterialGraphSchemaAction_NewFunctionCall extends UE.EdGraphSchemaAction {
        constructor();
        constructor(FunctionPath: string);
        FunctionPath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialGraphSchemaAction_NewFunctionCall_0__: boolean;
    }
    
    class MaterialGraphSchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(MaterialExpressionClass: UE.Class);
        MaterialExpressionClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialGraphSchemaAction_NewNode_0__: boolean;
    }
    
    class MaterialGraphSchemaAction_Paste extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialGraphSchemaAction_Paste_0__: boolean;
    }
    
    class MaterialImportHelpers extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static FindExistingMaterial(BasePath: string, MaterialFullName: string, bRecursivePaths: boolean, OutError: $Ref<string>) : UE.MaterialInterface;
        static FindExistingMaterialFromSearchLocation(MaterialFullName: string, BasePackagePath: string, SearchLocation: UE.EMaterialSearchLocation, OutError: $Ref<string>) : UE.MaterialInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialImportHelpers;
        static Load(InName: string): MaterialImportHelpers;
    
        __tid_MaterialImportHelpers_0__: boolean;
    }
    
    class MaterialInstanceActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetActors: TArray<UE.Actor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialInstanceActor;
        static Load(InName: string): MaterialInstanceActor;
    
        __tid_MaterialInstanceActor_0__: boolean;
    }
    
    class MaterialInstanceConstantFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialParent: UE.MaterialInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialInstanceConstantFactoryNew;
        static Load(InName: string): MaterialInstanceConstantFactoryNew;
    
        __tid_MaterialInstanceConstantFactoryNew_0__: boolean;
    }
    
    class MaterialInstanceThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialInstanceThumbnailRenderer;
        static Load(InName: string): MaterialInstanceThumbnailRenderer;
    
        __tid_MaterialInstanceThumbnailRenderer_0__: boolean;
    }
    
    class MaterialMergeOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Method: UE.EMaterialBakeMethod;
        BlendMode: UE.EBlendMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialMergeOptions;
        static Load(InName: string): MaterialMergeOptions;
    
        __tid_MaterialMergeOptions_0__: boolean;
    }
    
    class PropertyEntry {
        constructor();
        constructor(Property: UE.EMaterialProperty, bUseCustomSize: boolean, CustomSize: UE.IntPoint, bUseConstantValue: boolean, ConstantValue: number);
        Property: UE.EMaterialProperty;
        bUseCustomSize: boolean;
        CustomSize: UE.IntPoint;
        bUseConstantValue: boolean;
        ConstantValue: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyEntry_0__: boolean;
    }
    
    class MaterialOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Properties: TArray<UE.PropertyEntry>;
        TextureSize: UE.IntPoint;
        LODIndices: TArray<number>;
        bUseMeshData: boolean;
        bUseSpecificUVIndex: boolean;
        TextureCoordinateIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialOptions;
        static Load(InName: string): MaterialOptions;
    
        __tid_MaterialOptions_0__: boolean;
    }
    
    class MaterialParameterCollectionFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialParameterCollectionFactoryNew;
        static Load(InName: string): MaterialParameterCollectionFactoryNew;
    
        __tid_MaterialParameterCollectionFactoryNew_0__: boolean;
    }
    
    class MaterialQualityOverrides {
        constructor();
        constructor(bDiscardQualityDuringCook: boolean, bEnableOverride: boolean, bForceFullyRough: boolean, bForceNonMetal: boolean, bForceDisableLMDirectionality: boolean, bForceLQReflections: boolean, bForceDisablePreintegratedGF: boolean, bDisableMaterialNormalCalculation: boolean, MobileShadowQuality: UE.EMobileShadowQuality);
        bDiscardQualityDuringCook: boolean;
        bEnableOverride: boolean;
        bForceFullyRough: boolean;
        bForceNonMetal: boolean;
        bForceDisableLMDirectionality: boolean;
        bForceLQReflections: boolean;
        bForceDisablePreintegratedGF: boolean;
        bDisableMaterialNormalCalculation: boolean;
        MobileShadowQuality: UE.EMobileShadowQuality;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MaterialQualityOverrides_0__: boolean;
    }
    
    class ShaderPlatformQualitySettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QualityOverrides: FixSizeArray<UE.MaterialQualityOverrides>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ShaderPlatformQualitySettings;
        static Load(InName: string): ShaderPlatformQualitySettings;
    
        __tid_ShaderPlatformQualitySettings_0__: boolean;
    }
    
    class MaterialShaderQualitySettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ForwardSettingMap: TMap<string, UE.ShaderPlatformQualitySettings>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialShaderQualitySettings;
        static Load(InName: string): MaterialShaderQualitySettings;
    
        __tid_MaterialShaderQualitySettings_0__: boolean;
    }
    
    class MaterialStatsOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bPlatformUsed: FixSizeArray<number>;
        bMaterialQualityUsed: FixSizeArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MaterialStatsOptions;
        static Load(InName: string): MaterialStatsOptions;
    
        __tid_MaterialStatsOptions_0__: boolean;
    }
    
    class MatineeActorCameraAnim extends UE.MatineeActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraAnim: UE.CameraAnim;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MatineeActorCameraAnim;
        static Load(InName: string): MatineeActorCameraAnim;
    
        __tid_MatineeActorCameraAnim_0__: boolean;
    }
    
    class MatineeAnimInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MatineeAnimInterface;
        static Load(InName: string): MatineeAnimInterface;
    
        __tid_MatineeAnimInterface_0__: boolean;
    }
    
    class MatineeInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MatineeInterface;
        static Load(InName: string): MatineeInterface;
    
        __tid_MatineeInterface_0__: boolean;
    }
    
    class MediaCaptureDevice {
        constructor();
        constructor(DisplayName: string, Url: string);
        DisplayName: string;
        Url: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MediaCaptureDevice_0__: boolean;
    }
    
    class MediaBlueprintFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static EnumerateAudioCaptureDevices(OutDevices: $Ref<TArray<UE.MediaCaptureDevice>>, Filter?: number /* = -1 */) : void;
        static EnumerateVideoCaptureDevices(OutDevices: $Ref<TArray<UE.MediaCaptureDevice>>, Filter?: number /* = -1 */) : void;
        static EnumerateWebcamCaptureDevices(OutDevices: $Ref<TArray<UE.MediaCaptureDevice>>, Filter?: number /* = -1 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaBlueprintFunctionLibrary;
        static Load(InName: string): MediaBlueprintFunctionLibrary;
    
        __tid_MediaBlueprintFunctionLibrary_0__: boolean;
    }
    
    class MediaPlayerEditorMediaContext extends UE.ToolMenuContextBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectedAsset: UE.Object;
        StyleSetName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaPlayerEditorMediaContext;
        static Load(InName: string): MediaPlayerEditorMediaContext;
    
        __tid_MediaPlayerEditorMediaContext_0__: boolean;
    }
    
    class MediaPlayerEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DesiredPlayerName: string;
        ShowTextOverlays: boolean;
        ViewportScale: UE.EMediaPlayerEditorScale;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaPlayerEditorSettings;
        static Load(InName: string): MediaPlayerEditorSettings;
    
        __tid_MediaPlayerEditorSettings_0__: boolean;
    }
    
    class MediaPlayerFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaPlayerFactoryNew;
        static Load(InName: string): MediaPlayerFactoryNew;
    
        __tid_MediaPlayerFactoryNew_0__: boolean;
    }
    
    class MediaPlayerRecordingSettings {
        constructor();
        constructor(bActive: boolean, bRecordMediaFrame: boolean, BaseFilename: string, NumerationStyle: UE.EMediaPlayerRecordingNumerationStyle, ImageFormat: UE.EMediaPlayerRecordingImageFormat, CompressionQuality: number, bResetAlpha: boolean);
        bActive: boolean;
        bRecordMediaFrame: boolean;
        BaseFilename: string;
        NumerationStyle: UE.EMediaPlayerRecordingNumerationStyle;
        ImageFormat: UE.EMediaPlayerRecordingImageFormat;
        CompressionQuality: number;
        bResetAlpha: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MediaPlayerRecordingSettings_0__: boolean;
    }
    
    class MediaPlayerRecording extends UE.SequenceRecordingBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RecordingSettings: UE.MediaPlayerRecordingSettings;
        MediaPlayerToRecord: TWeakObjectPtr<UE.MediaPlayer>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaPlayerRecording;
        static Load(InName: string): MediaPlayerRecording;
    
        __tid_MediaPlayerRecording_0__: boolean;
    }
    
    class MediaPlaylistFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaPlaylistFactoryNew;
        static Load(InName: string): MediaPlaylistFactoryNew;
    
        __tid_MediaPlaylistFactoryNew_0__: boolean;
    }
    
    class MediaSequenceRecorderSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRecordMediaPlayerEnabled: boolean;
        MediaPlayerSubDirectory: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaSequenceRecorderSettings;
        static Load(InName: string): MediaSequenceRecorderSettings;
    
        __tid_MediaSequenceRecorderSettings_0__: boolean;
    }
    
    class MediaSoundComponentSpectralData {
        constructor();
        constructor(FrequencyHz: number, Magnitude: number);
        FrequencyHz: number;
        Magnitude: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MediaSoundComponentSpectralData_0__: boolean;
    }
    
    class MediaSoundComponent extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Channels: UE.EMediaSoundChannels;
        DynamicRateAdjustment: boolean;
        RateAdjustmentFactor: number;
        RateAdjustmentRange: UE.FloatRange;
        MediaPlayer: UE.MediaPlayer;
        BP_GetAttenuationSettingsToApply(OutAttenuationSettings: $Ref<UE.SoundAttenuationSettings>) : boolean;
        GetEnvelopeValue() : number;
        GetMediaPlayer() : UE.MediaPlayer;
        GetNormalizedSpectralData() : TArray<UE.MediaSoundComponentSpectralData>;
        GetSpectralData() : TArray<UE.MediaSoundComponentSpectralData>;
        SetEnableEnvelopeFollowing(bInEnvelopeFollowing: boolean) : void;
        SetEnableSpectralAnalysis(bInSpectralAnalysisEnabled: boolean) : void;
        SetEnvelopeFollowingsettings(AttackTimeMsec: number, ReleaseTimeMsec: number) : void;
        SetMediaPlayer(NewMediaPlayer: $Nullable<UE.MediaPlayer>) : void;
        SetSpectralAnalysisSettings(InFrequenciesToAnalyze: TArray<number>, InFFTSize?: UE.EMediaSoundComponentFFTSize /* = Medium_512 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaSoundComponent;
        static Load(InName: string): MediaSoundComponent;
    
        __tid_MediaSoundComponent_0__: boolean;
    }
    
    class MediaTextureFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MediaTextureFactoryNew;
        static Load(InName: string): MediaTextureFactoryNew;
    
        __tid_MediaTextureFactoryNew_0__: boolean;
    }
    
    class MenuAnchor extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MenuClass: UE.Class;
        OnGetMenuContentEvent: $Delegate<() => UE.Widget>;
        OnGetUserMenuContentEvent: $Delegate<() => UE.UserWidget>;
        Placement: UE.EMenuPlacement;
        bFitInWindow: boolean;
        ShouldDeferPaintingAfterWindowContent: boolean;
        UseApplicationMenuStack: boolean;
        OnMenuOpenChanged: $MulticastDelegate<(bIsOpen: boolean) => void>;
        Close() : void;
        FitInWindow(bFit: boolean) : void;
        GetMenuPosition() : UE.Vector2D;
        GetUserWidget__DelegateSignature() : UE.UserWidget;
        HasOpenSubMenus() : boolean;
        IsOpen() : boolean;
        Open(bFocusMenu: boolean) : void;
        SetPlacement(InPlacement: UE.EMenuPlacement) : void;
        ShouldOpenDueToClick() : boolean;
        ToggleOpen(bFocusOnOpen: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MenuAnchor;
        static Load(InName: string): MenuAnchor;
    
        __tid_MenuAnchor_0__: boolean;
    }
    
    class MergeShaderPipelineCachesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MergeShaderPipelineCachesCommandlet;
        static Load(InName: string): MergeShaderPipelineCachesCommandlet;
    
        __tid_MergeShaderPipelineCachesCommandlet_0__: boolean;
    }
    
    class SingleClickTool extends UE.InteractiveTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SingleClickTool;
        static Load(InName: string): SingleClickTool;
    
        __tid_SingleClickTool_0__: boolean;
    }
    
    class MeshPaintSelectionMechanic extends UE.InteractionMechanic {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CachedClickedComponents: TArray<UE.MeshComponent>;
        CachedClickedActors: TArray<UE.Actor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshPaintSelectionMechanic;
        static Load(InName: string): MeshPaintSelectionMechanic;
    
        __tid_MeshPaintSelectionMechanic_0__: boolean;
    }
    
    class MeshClickTool extends UE.SingleClickTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectionMechanic: UE.MeshPaintSelectionMechanic;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshClickTool;
        static Load(InName: string): MeshClickTool;
    
        __tid_MeshClickTool_0__: boolean;
    }
    
    class MeshVertexPaintingToolProperties extends UE.BrushBaseProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PaintColor: UE.LinearColor;
        EraseColor: UE.LinearColor;
        bEnableFlow: boolean;
        bOnlyFrontFacingTriangles: boolean;
        VertexPreviewSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshVertexPaintingToolProperties;
        static Load(InName: string): MeshVertexPaintingToolProperties;
    
        __tid_MeshVertexPaintingToolProperties_0__: boolean;
    }
    
    class MeshVertexPaintingTool extends UE.BaseBrushTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SelectionMechanic: UE.MeshPaintSelectionMechanic;
        VertexProperties: UE.MeshVertexPaintingToolProperties;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshVertexPaintingTool;
        static Load(InName: string): MeshVertexPaintingTool;
    
        __tid_MeshVertexPaintingTool_0__: boolean;
    }
    
    class MeshColorPaintingToolProperties extends UE.MeshVertexPaintingToolProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bWriteRed: boolean;
        bWriteGreen: boolean;
        bWriteBlue: boolean;
        bWriteAlpha: boolean;
        bPaintOnSpecificLOD: boolean;
        LODIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshColorPaintingToolProperties;
        static Load(InName: string): MeshColorPaintingToolProperties;
    
        __tid_MeshColorPaintingToolProperties_0__: boolean;
    }
    
    class MeshColorPaintingTool extends UE.MeshVertexPaintingTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ColorProperties: UE.MeshColorPaintingToolProperties;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshColorPaintingTool;
        static Load(InName: string): MeshColorPaintingTool;
    
        __tid_MeshColorPaintingTool_0__: boolean;
    }
    
    class MeshColorPaintingToolBuilder extends UE.InteractiveToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshColorPaintingToolBuilder;
        static Load(InName: string): MeshColorPaintingToolBuilder;
    
        __tid_MeshColorPaintingToolBuilder_0__: boolean;
    }
    
    class MeshDescription extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshDescription;
        static Load(InName: string): MeshDescription;
    
        __tid_MeshDescription_0__: boolean;
    }
    
    class MeshInstancingSettings {
        constructor();
        constructor(ActorClassToUse: UE.Class, InstanceReplacementThreshold: number, MeshReplacementMethod: UE.EMeshInstancingReplacementMethod, bSkipMeshesWithVertexColors: boolean, bUseHLODVolumes: boolean, ISMComponentToUse: UE.Class);
        ActorClassToUse: UE.Class;
        InstanceReplacementThreshold: number;
        MeshReplacementMethod: UE.EMeshInstancingReplacementMethod;
        bSkipMeshesWithVertexColors: boolean;
        bUseHLODVolumes: boolean;
        ISMComponentToUse: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshInstancingSettings_0__: boolean;
    }
    
    class MeshInstancingSettingsObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.MeshInstancingSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshInstancingSettingsObject;
        static Load(InName: string): MeshInstancingSettingsObject;
    
        __tid_MeshInstancingSettingsObject_0__: boolean;
    }
    
    class MeshMergeCullingVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshMergeCullingVolume;
        static Load(InName: string): MeshMergeCullingVolume;
    
        __tid_MeshMergeCullingVolume_0__: boolean;
    }
    
    class MeshMergingSettingsObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.MeshMergingSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshMergingSettingsObject;
        static Load(InName: string): MeshMergingSettingsObject;
    
        __tid_MeshMergingSettingsObject_0__: boolean;
    }
    
    class MeshPaintingToolset extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshPaintingToolset;
        static Load(InName: string): MeshPaintingToolset;
    
        __tid_MeshPaintingToolset_0__: boolean;
    }
    
    class MeshPaintModeSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ColorViewMode: UE.EMeshPaintDataColorViewMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshPaintModeSettings;
        static Load(InName: string): MeshPaintModeSettings;
    
        __tid_MeshPaintModeSettings_0__: boolean;
    }
    
    class MeshPaintMode extends UE.EdMode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ModeSettings: UE.MeshPaintModeSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshPaintMode;
        static Load(InName: string): MeshPaintMode;
    
        __tid_MeshPaintMode_0__: boolean;
    }
    
    class MeshPaintSelectionInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshPaintSelectionInterface;
        static Load(InName: string): MeshPaintSelectionInterface;
    
        __tid_MeshPaintSelectionInterface_0__: boolean;
    }
    
    class MeshProxySettingsObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.MeshProxySettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshProxySettingsObject;
        static Load(InName: string): MeshProxySettingsObject;
    
        __tid_MeshProxySettingsObject_0__: boolean;
    }
    
    class MeshReconstructorBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConnectMRMesh(Mesh: $Nullable<UE.MRMeshComponent>) : void;
        DisconnectMRMesh() : void;
        IsReconstructionPaused() : boolean;
        IsReconstructionStarted() : boolean;
        PauseReconstruction() : void;
        StartReconstruction() : void;
        StopReconstruction() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshReconstructorBase;
        static Load(InName: string): MeshReconstructorBase;
    
        __tid_MeshReconstructorBase_0__: boolean;
    }
    
    class SelectionSet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SelectionSet;
        static Load(InName: string): SelectionSet;
    
        __tid_SelectionSet_0__: boolean;
    }
    
    class MeshSelectionSet extends UE.SelectionSet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Vertices: TArray<number>;
        Edges: TArray<number>;
        Faces: TArray<number>;
        Groups: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshSelectionSet;
        static Load(InName: string): MeshSelectionSet;
    
        __tid_MeshSelectionSet_0__: boolean;
    }
    
    class MeshSimplificationSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MeshReductionModuleName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshSimplificationSettings;
        static Load(InName: string): MeshSimplificationSettings;
    
        __tid_MeshSimplificationSettings_0__: boolean;
    }
    
    class MeshSurfacePointToolBuilder extends UE.InteractiveToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshSurfacePointToolBuilder;
        static Load(InName: string): MeshSurfacePointToolBuilder;
    
        __tid_MeshSurfacePointToolBuilder_0__: boolean;
    }
    
    class MeshTexturePaintingToolProperties extends UE.BrushBaseProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PaintColor: UE.LinearColor;
        EraseColor: UE.LinearColor;
        bWriteRed: boolean;
        bWriteGreen: boolean;
        bWriteBlue: boolean;
        bWriteAlpha: boolean;
        UVChannel: number;
        bEnableSeamPainting: boolean;
        PaintTexture: UE.Texture2D;
        bEnableFlow: boolean;
        bOnlyFrontFacingTriangles: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshTexturePaintingToolProperties;
        static Load(InName: string): MeshTexturePaintingToolProperties;
    
        __tid_MeshTexturePaintingToolProperties_0__: boolean;
    }
    
    class PaintTexture2DData {
        constructor();
        constructor(PaintingTexture2D: UE.Texture2D, PaintingTexture2DDuplicate: UE.Texture2D, PaintRenderTargetTexture: UE.TextureRenderTarget2D, CloneRenderTargetTexture: UE.TextureRenderTarget2D, PaintingMaterials: TArray<UE.MaterialInterface>);
        PaintingTexture2D: UE.Texture2D;
        PaintingTexture2DDuplicate: UE.Texture2D;
        PaintRenderTargetTexture: UE.TextureRenderTarget2D;
        CloneRenderTargetTexture: UE.TextureRenderTarget2D;
        PaintingMaterials: TArray<UE.MaterialInterface>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaintTexture2DData_0__: boolean;
    }
    
    class MeshTexturePaintingTool extends UE.BaseBrushTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureProperties: UE.MeshTexturePaintingToolProperties;
        Textures: TArray<UE.Texture>;
        BrushRenderTargetTexture: UE.TextureRenderTarget2D;
        BrushMaskRenderTargetTexture: UE.TextureRenderTarget2D;
        SeamMaskRenderTargetTexture: UE.TextureRenderTarget2D;
        PaintTargetData: TMap<UE.Texture2D, UE.PaintTexture2DData>;
        TexturePaintingCurrentMeshComponent: UE.MeshComponent;
        PaintingTexture2D: UE.Texture2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshTexturePaintingTool;
        static Load(InName: string): MeshTexturePaintingTool;
    
        __tid_MeshTexturePaintingTool_0__: boolean;
    }
    
    class MeshTexturePaintingToolBuilder extends UE.InteractiveToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshTexturePaintingToolBuilder;
        static Load(InName: string): MeshTexturePaintingToolBuilder;
    
        __tid_MeshTexturePaintingToolBuilder_0__: boolean;
    }
    
    class MeshToolManager extends UE.InteractiveToolManager {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshToolManager;
        static Load(InName: string): MeshToolManager;
    
        __tid_MeshToolManager_0__: boolean;
    }
    
    class MeshToolsContext extends UE.EdModeInteractiveToolsContext {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshToolsContext;
        static Load(InName: string): MeshToolsContext;
    
        __tid_MeshToolsContext_0__: boolean;
    }
    
    class MeshTriCoordinate {
        constructor();
        constructor(Tri: number, BaryCoord: UE.Vector);
        Tri: number;
        BaryCoord: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MeshTriCoordinate_0__: boolean;
    }
    
    class MeshVertexPainterKismetLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static PaintVerticesLerpAlongAxis(StaticMeshComponent: $Nullable<UE.StaticMeshComponent>, StartColor: UE.LinearColor, EndColor: UE.LinearColor, Axis: UE.EVertexPaintAxis, bConvertToSRGB?: boolean /* = true */) : void;
        static PaintVerticesSingleColor(StaticMeshComponent: $Nullable<UE.StaticMeshComponent>, FillColor: UE.LinearColor, bConvertToSRGB?: boolean /* = true */) : void;
        static RemovePaintedVertices(StaticMeshComponent: $Nullable<UE.StaticMeshComponent>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshVertexPainterKismetLibrary;
        static Load(InName: string): MeshVertexPainterKismetLibrary;
    
        __tid_MeshVertexPainterKismetLibrary_0__: boolean;
    }
    
    class MeshWeightPaintingToolProperties extends UE.MeshVertexPaintingToolProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureWeightType: UE.EMeshPaintWeightTypes;
        PaintTextureWeightIndex: UE.EMeshPaintTextureIndex;
        EraseTextureWeightIndex: UE.EMeshPaintTextureIndex;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshWeightPaintingToolProperties;
        static Load(InName: string): MeshWeightPaintingToolProperties;
    
        __tid_MeshWeightPaintingToolProperties_0__: boolean;
    }
    
    class MeshWeightPaintingTool extends UE.MeshVertexPaintingTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WeightProperties: UE.MeshWeightPaintingToolProperties;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshWeightPaintingTool;
        static Load(InName: string): MeshWeightPaintingTool;
    
        __tid_MeshWeightPaintingTool_0__: boolean;
    }
    
    class MeshWeightPaintingToolBuilder extends UE.InteractiveToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MeshWeightPaintingToolBuilder;
        static Load(InName: string): MeshWeightPaintingToolBuilder;
    
        __tid_MeshWeightPaintingToolBuilder_0__: boolean;
    }
    
    class MessageRpcCancel {
        constructor();
        constructor(CallId: UE.Guid);
        CallId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MessageRpcCancel_0__: boolean;
    }
    
    class MessageRpcProgress {
        constructor();
        constructor(Completion: number, CallId: UE.Guid, StatusText: string);
        Completion: number;
        CallId: UE.Guid;
        StatusText: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MessageRpcProgress_0__: boolean;
    }
    
    class MessageRpcUnhandled {
        constructor();
        constructor(CallId: UE.Guid);
        CallId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MessageRpcUnhandled_0__: boolean;
    }
    
    class MetaData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MetaData;
        static Load(InName: string): MetaData;
    
        __tid_MetaData_0__: boolean;
    }
    
    class PurchaseInfo {
        constructor();
        constructor(Identifier: string, DisplayName: string, DisplayDescription: string, DisplayPrice: string);
        Identifier: string;
        DisplayName: string;
        DisplayDescription: string;
        DisplayPrice: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PurchaseInfo_0__: boolean;
    }
    
    class MicroTransactionBase extends UE.PlatformInterfaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AvailableProducts: TArray<UE.PurchaseInfo>;
        LastError: string;
        LastErrorSolution: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MicroTransactionBase;
        static Load(InName: string): MicroTransactionBase;
    
        __tid_MicroTransactionBase_0__: boolean;
    }
    
    class MobileInstalledContent extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetDiskFreeSpace() : number;
        GetInstalledContentSize() : number;
        Mount(PakOrder: number, MountPoint: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MobileInstalledContent;
        static Load(InName: string): MobileInstalledContent;
    
        __tid_MobileInstalledContent_0__: boolean;
    }
    
    class MobilePendingContent extends UE.MobileInstalledContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetDownloadSize() : number;
        GetDownloadSpeed() : number;
        GetDownloadStatusText() : string;
        GetInstallProgress() : number;
        GetRequiredDiskSpace() : number;
        GetTotalDownloadedSize() : number;
        StartInstall(OnSucceeded: $Delegate<() => void>, OnFailed: $Delegate<(ErrorText: string, ErrorCode: number) => void>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MobilePendingContent;
        static Load(InName: string): MobilePendingContent;
    
        __tid_MobilePendingContent_0__: boolean;
    }
    
    class MobilePatchingLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetActiveDeviceProfileName() : string;
        static GetInstalledContent(InstallDirectory: string) : UE.MobileInstalledContent;
        static GetSupportedPlatformNames() : TArray<string>;
        static HasActiveWiFiConnection() : boolean;
        static RequestContent(RemoteManifestURL: string, CloudURL: string, InstallDirectory: string, OnSucceeded: $Delegate<(MobilePendingContent: $Nullable<UE.MobilePendingContent>) => void>, OnFailed: $Delegate<(ErrorText: string, ErrorCode: number) => void>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MobilePatchingLibrary;
        static Load(InName: string): MobilePatchingLibrary;
    
        __tid_MobilePatchingLibrary_0__: boolean;
    }
    
    class MockAI extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BBComp: UE.BlackboardComponent;
        BrainComp: UE.BrainComponent;
        PerceptionComp: UE.AIPerceptionComponent;
        PawnActionComp: UE.PawnActionsComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MockAI;
        static Load(InName: string): MockAI;
    
        __tid_MockAI_0__: boolean;
    }
    
    class MockAI_BT extends UE.MockAI {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BTComp: UE.BehaviorTreeComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MockAI_BT;
        static Load(InName: string): MockAI_BT;
    
        __tid_MockAI_BT_0__: boolean;
    }
    
    class MockDataMeshTrackerComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnMeshTrackerUpdated: $MulticastDelegate<(Index: number, Vertices: TArray<UE.Vector>, Triangles: TArray<number>, Normals: TArray<UE.Vector>, Confidence: TArray<number>) => void>;
        ScanWorld: boolean;
        RequestNormals: boolean;
        RequestVertexConfidence: boolean;
        VertexColorMode: UE.EMeshTrackerVertexColorMode;
        BlockVertexColors: TArray<UE.Color>;
        VertexColorFromConfidenceZero: UE.LinearColor;
        VertexColorFromConfidenceOne: UE.LinearColor;
        UpdateInterval: number;
        MRMesh: UE.MRMeshComponent;
        ConnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : void;
        DisconnectMRMesh(InMRMeshPtr: $Nullable<UE.MRMeshComponent>) : void;
        OnMockDataMeshTrackerUpdated__DelegateSignature(Index: number, Vertices: TArray<UE.Vector>, Triangles: TArray<number>, Normals: TArray<UE.Vector>, Confidence: TArray<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MockDataMeshTrackerComponent;
        static Load(InName: string): MockDataMeshTrackerComponent;
    
        __tid_MockDataMeshTrackerComponent_0__: boolean;
    }
    
    class MockGameplayTaskOwner extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GTComponent: UE.GameplayTasksComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MockGameplayTaskOwner;
        static Load(InName: string): MockGameplayTaskOwner;
    
        __tid_MockGameplayTaskOwner_0__: boolean;
    }
    
    class MockGameplayTasksComponent extends UE.GameplayTasksComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MockGameplayTasksComponent;
        static Load(InName: string): MockGameplayTasksComponent;
    
        __tid_MockGameplayTasksComponent_0__: boolean;
    }
    
    class MockTask_Log extends UE.GameplayTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MockTask_Log;
        static Load(InName: string): MockTask_Log;
    
        __tid_MockTask_Log_0__: boolean;
    }
    
    class ModelExporterT3D extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ModelExporterT3D;
        static Load(InName: string): ModelExporterT3D;
    
        __tid_ModelExporterT3D_0__: boolean;
    }
    
    class ModelFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ModelFactory;
        static Load(InName: string): ModelFactory;
    
        __tid_ModelFactory_0__: boolean;
    }
    
    class ModularSynthPreset extends UE.TableRowBase {
        constructor();
        constructor(bEnablePolyphony: boolean, Osc1Type: UE.ESynth1OscType, Osc1Gain: number, Osc1Octave: number, Osc1Semitones: number, Osc1Cents: number, Osc1PulseWidth: number, Osc2Type: UE.ESynth1OscType, Osc2Gain: number, Osc2Octave: number, Osc2Semitones: number, Osc2Cents: number, Osc2PulseWidth: number, Portamento: number, bEnableUnison: boolean, bEnableOscillatorSync: boolean, Spread: number, Pan: number, LFO1Frequency: number, LFO1Gain: number, LFO1Type: UE.ESynthLFOType, LFO1Mode: UE.ESynthLFOMode, LFO1PatchType: UE.ESynthLFOPatchType, LFO2Frequency: number, LFO2Gain: number, LFO2Type: UE.ESynthLFOType, LFO2Mode: UE.ESynthLFOMode, LFO2PatchType: UE.ESynthLFOPatchType, GainDb: number, AttackTime: number, DecayTime: number, SustainGain: number, ReleaseTime: number, ModEnvPatchType: UE.ESynthModEnvPatch, ModEnvBiasPatchType: UE.ESynthModEnvBiasPatch, bInvertModulationEnvelope: boolean, bInvertModulationEnvelopeBias: boolean, ModulationEnvelopeDepth: number, ModulationEnvelopeAttackTime: number, ModulationEnvelopeDecayTime: number, ModulationEnvelopeSustainGain: number, ModulationEnvelopeReleaseTime: number, bLegato: boolean, bRetrigger: boolean, FilterFrequency: number, FilterQ: number, FilterType: UE.ESynthFilterType, FilterAlgorithm: UE.ESynthFilterAlgorithm, bStereoDelayEnabled: boolean, StereoDelayMode: UE.ESynthStereoDelayMode, StereoDelayTime: number, StereoDelayFeedback: number, StereoDelayWetlevel: number, StereoDelayRatio: number, bChorusEnabled: boolean, ChorusDepth: number, ChorusFeedback: number, ChorusFrequency: number, Patches: TArray<UE.EpicSynth1Patch>);
        bEnablePolyphony: boolean;
        Osc1Type: UE.ESynth1OscType;
        Osc1Gain: number;
        Osc1Octave: number;
        Osc1Semitones: number;
        Osc1Cents: number;
        Osc1PulseWidth: number;
        Osc2Type: UE.ESynth1OscType;
        Osc2Gain: number;
        Osc2Octave: number;
        Osc2Semitones: number;
        Osc2Cents: number;
        Osc2PulseWidth: number;
        Portamento: number;
        bEnableUnison: boolean;
        bEnableOscillatorSync: boolean;
        Spread: number;
        Pan: number;
        LFO1Frequency: number;
        LFO1Gain: number;
        LFO1Type: UE.ESynthLFOType;
        LFO1Mode: UE.ESynthLFOMode;
        LFO1PatchType: UE.ESynthLFOPatchType;
        LFO2Frequency: number;
        LFO2Gain: number;
        LFO2Type: UE.ESynthLFOType;
        LFO2Mode: UE.ESynthLFOMode;
        LFO2PatchType: UE.ESynthLFOPatchType;
        GainDb: number;
        AttackTime: number;
        DecayTime: number;
        SustainGain: number;
        ReleaseTime: number;
        ModEnvPatchType: UE.ESynthModEnvPatch;
        ModEnvBiasPatchType: UE.ESynthModEnvBiasPatch;
        bInvertModulationEnvelope: boolean;
        bInvertModulationEnvelopeBias: boolean;
        ModulationEnvelopeDepth: number;
        ModulationEnvelopeAttackTime: number;
        ModulationEnvelopeDecayTime: number;
        ModulationEnvelopeSustainGain: number;
        ModulationEnvelopeReleaseTime: number;
        bLegato: boolean;
        bRetrigger: boolean;
        FilterFrequency: number;
        FilterQ: number;
        FilterType: UE.ESynthFilterType;
        FilterAlgorithm: UE.ESynthFilterAlgorithm;
        bStereoDelayEnabled: boolean;
        StereoDelayMode: UE.ESynthStereoDelayMode;
        StereoDelayTime: number;
        StereoDelayFeedback: number;
        StereoDelayWetlevel: number;
        StereoDelayRatio: number;
        bChorusEnabled: boolean;
        ChorusDepth: number;
        ChorusFeedback: number;
        ChorusFrequency: number;
        Patches: TArray<UE.EpicSynth1Patch>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ModularSynthPreset_0__: boolean;
    }
    
    class PatchId {
        constructor();
        constructor(Id: number);
        Id: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PatchId_0__: boolean;
    }
    
    class ModularSynthComponent extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VoiceCount: number;
        CreatePatch(PatchSource: UE.ESynth1PatchSource, PatchCables: TArray<UE.Synth1PatchCable>, bEnableByDefault: boolean) : UE.PatchId;
        NoteOff(Note: number, bAllNotesOff?: boolean /* = false */, bKillAllNotes?: boolean /* = false */) : void;
        NoteOn(Note: number, Velocity: number, Duration?: number /* = -1.000000 */) : void;
        SetAttackTime(AttackTimeMsec: number) : void;
        SetChorusDepth(Depth: number) : void;
        SetChorusEnabled(EnableChorus: boolean) : void;
        SetChorusFeedback(Feedback: number) : void;
        SetChorusFrequency(Frequency: number) : void;
        SetDecayTime(DecayTimeMsec: number) : void;
        SetEnableLegato(LegatoEnabled: boolean) : void;
        SetEnablePatch(PatchId: UE.PatchId, bIsEnabled: boolean) : boolean;
        SetEnablePolyphony(bEnablePolyphony: boolean) : void;
        SetEnableRetrigger(RetriggerEnabled: boolean) : void;
        SetEnableUnison(EnableUnison: boolean) : void;
        SetFilterAlgorithm(FilterAlgorithm: UE.ESynthFilterAlgorithm) : void;
        SetFilterFrequency(FilterFrequencyHz: number) : void;
        SetFilterFrequencyMod(FilterFrequencyHz: number) : void;
        SetFilterQ(FilterQ: number) : void;
        SetFilterQMod(FilterQ: number) : void;
        SetFilterType(FilterType: UE.ESynthFilterType) : void;
        SetGainDb(GainDb: number) : void;
        SetLFOFrequency(LFOIndex: number, FrequencyHz: number) : void;
        SetLFOFrequencyMod(LFOIndex: number, FrequencyModHz: number) : void;
        SetLFOGain(LFOIndex: number, Gain: number) : void;
        SetLFOGainMod(LFOIndex: number, GainMod: number) : void;
        SetLFOMode(LFOIndex: number, LFOMode: UE.ESynthLFOMode) : void;
        SetLFOPatch(LFOIndex: number, LFOPatchType: UE.ESynthLFOPatchType) : void;
        SetLFOType(LFOIndex: number, LFOType: UE.ESynthLFOType) : void;
        SetModEnvAttackTime(AttackTimeMsec: number) : void;
        SetModEnvBiasInvert(bInvert: boolean) : void;
        SetModEnvBiasPatch(InPatchType: UE.ESynthModEnvBiasPatch) : void;
        SetModEnvDecayTime(DecayTimeMsec: number) : void;
        SetModEnvDepth(Depth: number) : void;
        SetModEnvInvert(bInvert: boolean) : void;
        SetModEnvPatch(InPatchType: UE.ESynthModEnvPatch) : void;
        SetModEnvReleaseTime(Release: number) : void;
        SetModEnvSustainGain(SustainGain: number) : void;
        SetOscCents(OscIndex: number, Cents: number) : void;
        SetOscFrequencyMod(OscIndex: number, OscFreqMod: number) : void;
        SetOscGain(OscIndex: number, OscGain: number) : void;
        SetOscGainMod(OscIndex: number, OscGainMod: number) : void;
        SetOscOctave(OscIndex: number, Octave: number) : void;
        SetOscPulsewidth(OscIndex: number, Pulsewidth: number) : void;
        SetOscSemitones(OscIndex: number, Semitones: number) : void;
        SetOscSync(bIsSynced: boolean) : void;
        SetOscType(OscIndex: number, OscType: UE.ESynth1OscType) : void;
        SetPan(Pan: number) : void;
        SetPitchBend(PitchBend: number) : void;
        SetPortamento(Portamento: number) : void;
        SetReleaseTime(ReleaseTimeMsec: number) : void;
        SetSpread(Spread: number) : void;
        SetStereoDelayFeedback(DelayFeedback: number) : void;
        SetStereoDelayIsEnabled(StereoDelayEnabled: boolean) : void;
        SetStereoDelayMode(StereoDelayMode: UE.ESynthStereoDelayMode) : void;
        SetStereoDelayRatio(DelayRatio: number) : void;
        SetStereoDelayTime(DelayTimeMsec: number) : void;
        SetStereoDelayWetlevel(DelayWetlevel: number) : void;
        SetSustainGain(SustainGain: number) : void;
        SetSynthPreset(SynthPreset: UE.ModularSynthPreset) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ModularSynthComponent;
        static Load(InName: string): ModularSynthComponent;
    
        __tid_ModularSynthComponent_0__: boolean;
    }
    
    class ModularSynthPresetBankEntry {
        constructor();
        constructor(PresetName: string, Preset: UE.ModularSynthPreset);
        PresetName: string;
        Preset: UE.ModularSynthPreset;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ModularSynthPresetBankEntry_0__: boolean;
    }
    
    class ModularSynthPresetBank extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Presets: TArray<UE.ModularSynthPresetBankEntry>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ModularSynthPresetBank;
        static Load(InName: string): ModularSynthPresetBank;
    
        __tid_ModularSynthPresetBank_0__: boolean;
    }
    
    class ModularSynthLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddModularSynthPresetToBankAsset(InBank: $Nullable<UE.ModularSynthPresetBank>, Preset: UE.ModularSynthPreset, PresetName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ModularSynthLibrary;
        static Load(InName: string): ModularSynthLibrary;
    
        __tid_ModularSynthLibrary_0__: boolean;
    }
    
    class ModularSynthPresetBankFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ModularSynthPresetBankFactory;
        static Load(InName: string): ModularSynthPresetBankFactory;
    
        __tid_ModularSynthPresetBankFactory_0__: boolean;
    }
    
    enum ModulationParamMode { MPM_Normal, MPM_Abs, MPM_Direct, MPM_MAX, __typeKeyDoNoAccess}
    class ModulatorContinuousParams {
        constructor();
        constructor(ParameterName: string, Default: number, MinInput: number, MaxInput: number, MinOutput: number, MaxOutput: number, ParamMode: UE.ModulationParamMode);
        ParameterName: string;
        Default: number;
        MinInput: number;
        MaxInput: number;
        MinOutput: number;
        MaxOutput: number;
        ParamMode: UE.ModulationParamMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ModulatorContinuousParams_0__: boolean;
    }
    
    class MonoWaveTableSynthPreset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PresetName: string;
        bLockKeyframesToGridBool: boolean;
        LockKeyframesToGrid: number;
        WaveTableResolution: number;
        WaveTable: TArray<UE.RuntimeFloatCurve>;
        bNormalizeWaveTables: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MonoWaveTableSynthPreset;
        static Load(InName: string): MonoWaveTableSynthPreset;
    
        __tid_MonoWaveTableSynthPreset_0__: boolean;
    }
    
    class MonoWaveTableSynthPresetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MonoWaveTableSynthPresetFactory;
        static Load(InName: string): MonoWaveTableSynthPresetFactory;
    
        __tid_MonoWaveTableSynthPresetFactory_0__: boolean;
    }
    
    class MotionControllerComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayerIndex: number;
        Hand: UE.EControllerHand;
        MotionSource: string;
        bDisableLowLatencyUpdate: boolean;
        CurrentTrackingStatus: UE.ETrackingStatus;
        bDisplayDeviceModel: boolean;
        DisplayModelSource: string;
        CustomDisplayMesh: UE.StaticMesh;
        DisplayMeshMaterialOverrides: TArray<UE.MaterialInterface>;
        DisplayComponent: UE.PrimitiveComponent;
        GetHandJointPosition(jointIndex: number, bValueFound: $Ref<boolean>) : UE.Vector;
        GetParameterValue(InName: string, bValueFound: $Ref<boolean>) : number;
        GetTrackingSource() : UE.EControllerHand;
        IsTracked() : boolean;
        OnMotionControllerUpdated() : void;
        SetAssociatedPlayerIndex(NewPlayer: number) : void;
        SetCustomDisplayMesh(NewDisplayMesh: $Nullable<UE.StaticMesh>) : void;
        SetDisplayModelSource(NewDisplayModelSource: string) : void;
        SetShowDeviceModel(bShowControllerModel: boolean) : void;
        SetTrackingMotionSource(NewSource: string) : void;
        SetTrackingSource(NewSource: UE.EControllerHand) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MotionControllerComponent;
        static Load(InName: string): MotionControllerComponent;
    
        __tid_MotionControllerComponent_0__: boolean;
    }
    
    class MotionTrackedDeviceFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static DisableMotionTrackingForComponent(MotionControllerComponent: $Nullable<UE.MotionControllerComponent>) : void;
        static DisableMotionTrackingOfAllControllers() : void;
        static DisableMotionTrackingOfControllersForPlayer(PlayerIndex: number) : void;
        static DisableMotionTrackingOfDevice(PlayerIndex: number, Hand: UE.EControllerHand) : void;
        static DisableMotionTrackingOfSource(PlayerIndex: number, SourceName: string) : void;
        static EnableMotionTrackingForComponent(MotionControllerComponent: $Nullable<UE.MotionControllerComponent>) : boolean;
        static EnableMotionTrackingOfDevice(PlayerIndex: number, Hand: UE.EControllerHand) : boolean;
        static EnableMotionTrackingOfSource(PlayerIndex: number, SourceName: string) : boolean;
        static EnumerateMotionSources() : TArray<string>;
        static GetActiveTrackingSystemName() : string;
        static GetMaximumMotionTrackedControllerCount() : number;
        static GetMotionTrackingEnabledControllerCount() : number;
        static IsMotionSourceTracking(PlayerIndex: number, SourceName: string) : boolean;
        static IsMotionTrackedDeviceCountManagementNecessary() : boolean;
        static IsMotionTrackingEnabledForComponent(MotionControllerComponent: $Nullable<UE.MotionControllerComponent>) : boolean;
        static IsMotionTrackingEnabledForDevice(PlayerIndex: number, Hand: UE.EControllerHand) : boolean;
        static IsMotionTrackingEnabledForSource(PlayerIndex: number, SourceName: string) : boolean;
        static SetIsControllerMotionTrackingEnabledByDefault(Enable: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MotionTrackedDeviceFunctionLibrary;
        static Load(InName: string): MotionTrackedDeviceFunctionLibrary;
    
        __tid_MotionTrackedDeviceFunctionLibrary_0__: boolean;
    }
    
    class MotoSynthSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundWaveSource: UE.SoundWave;
        bConvertTo8Bit: boolean;
        DownSampleFactor: number;
        RPMCurve: UE.RuntimeFloatCurve;
        RPMSynthVolume: number;
        bEnableFilteringForAnalysis: boolean;
        LowPassFilterFrequency: number;
        HighPassFilterFrequency: number;
        bEnableDynamicsProcessorForAnalysis: boolean;
        DynamicsProcessorLookahead: number;
        DynamicsProcessorInputGainDb: number;
        DynamicsProcessorRatio: number;
        DynamicsKneeBandwidth: number;
        DynamicsProcessorThreshold: number;
        DynamicsProcessorAttackTimeMsec: number;
        DynamicsProcessorReleaseTimeMsec: number;
        bEnableNormalizationForAnalysis: boolean;
        SampleShiftOffset: number;
        RPMCycleCalibrationSample: number;
        RPMFirstCycleSampleEnd: number;
        RPMEstimationOctaveOffset: number;
        bWriteAnalysisInputToFile: boolean;
        AnalysisInputFilePath: string;
        SourceData: TArray<number>;
        SourceDataPCM: TArray<number>;
        SourceSampleRate: number;
        GrainTable: TArray<UE.GrainTableEntry>;
        PerformGrainTableAnalysis() : void;
        PlayToneMatch() : void;
        StopToneMatch() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MotoSynthSource;
        static Load(InName: string): MotoSynthSource;
    
        __tid_MotoSynthSource_0__: boolean;
    }
    
    class MotoSynthRuntimeSettings {
        constructor();
        constructor(bSynthToneEnabled: boolean, SynthToneVolume: number, SynthToneFilterFrequency: number, SynthOctaveShift: number, bGranularEngineEnabled: boolean, GranularEngineVolume: number, GranularEnginePitchScale: number, NumSamplesToCrossfadeBetweenGrains: number, NumGrainTableEntriesPerGrain: number, GrainTableRandomOffsetForConstantRPMs: number, GrainCrossfadeSamplesForConstantRPMs: number, AccelerationSource: UE.MotoSynthSource, DecelerationSource: UE.MotoSynthSource, bStereoWidenerEnabled: boolean, StereoDelayMsec: number, StereoFeedback: number, StereoWidenerWetlevel: number, StereoWidenerDryLevel: number, StereoWidenerDelayRatio: number, bStereoWidenerFilterEnabled: boolean, StereoWidenerFilterFrequency: number, StereoWidenerFilterQ: number);
        bSynthToneEnabled: boolean;
        SynthToneVolume: number;
        SynthToneFilterFrequency: number;
        SynthOctaveShift: number;
        bGranularEngineEnabled: boolean;
        GranularEngineVolume: number;
        GranularEnginePitchScale: number;
        NumSamplesToCrossfadeBetweenGrains: number;
        NumGrainTableEntriesPerGrain: number;
        GrainTableRandomOffsetForConstantRPMs: number;
        GrainCrossfadeSamplesForConstantRPMs: number;
        AccelerationSource: UE.MotoSynthSource;
        DecelerationSource: UE.MotoSynthSource;
        bStereoWidenerEnabled: boolean;
        StereoDelayMsec: number;
        StereoFeedback: number;
        StereoWidenerWetlevel: number;
        StereoWidenerDryLevel: number;
        StereoWidenerDelayRatio: number;
        bStereoWidenerFilterEnabled: boolean;
        StereoWidenerFilterFrequency: number;
        StereoWidenerFilterQ: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MotoSynthRuntimeSettings_0__: boolean;
    }
    
    class MotoSynthPreset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnginePreviewRPMCurve: UE.RuntimeFloatCurve;
        Settings: UE.MotoSynthRuntimeSettings;
        DumpRuntimeMemoryUsage() : void;
        StartEnginePreview() : void;
        StopEnginePreview() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MotoSynthPreset;
        static Load(InName: string): MotoSynthPreset;
    
        __tid_MotoSynthPreset_0__: boolean;
    }
    
    class MotoSynthPresetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MotoSynthPresetFactory;
        static Load(InName: string): MotoSynthPresetFactory;
    
        __tid_MotoSynthPresetFactory_0__: boolean;
    }
    
    class MotoSynthSourceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MotoSynthSourceFactory;
        static Load(InName: string): MotoSynthSourceFactory;
    
        __tid_MotoSynthSourceFactory_0__: boolean;
    }
    
    class MouseCursorBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : UE.EMouseCursor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MouseCursorBinding;
        static Load(InName: string): MouseCursorBinding;
    
        __tid_MouseCursorBinding_0__: boolean;
    }
    
    class MouseHoverBehavior extends UE.InputBehavior {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MouseHoverBehavior;
        static Load(InName: string): MouseHoverBehavior;
    
        __tid_MouseHoverBehavior_0__: boolean;
    }
    
    class MoviePlayerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bWaitForMoviesToComplete: boolean;
        bMoviesAreSkippable: boolean;
        StartupMovies: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MoviePlayerSettings;
        static Load(InName: string): MoviePlayerSettings;
    
        __tid_MoviePlayerSettings_0__: boolean;
    }
    
    class MovieScene2DTransformMask {
        constructor();
        constructor(Mask: number);
        Mask: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScene2DTransformMask_0__: boolean;
    }
    
    class MovieSceneEntityInstantiatorSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEntityInstantiatorSystem;
        static Load(InName: string): MovieSceneEntityInstantiatorSystem;
    
        __tid_MovieSceneEntityInstantiatorSystem_0__: boolean;
    }
    
    class MovieScenePropertyInstantiatorSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePropertyInstantiatorSystem;
        static Load(InName: string): MovieScenePropertyInstantiatorSystem;
    
        __tid_MovieScenePropertyInstantiatorSystem_0__: boolean;
    }
    
    class MovieScenePropertySystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InstantiatorSystem: UE.MovieScenePropertyInstantiatorSystem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePropertySystem;
        static Load(InName: string): MovieScenePropertySystem;
    
        __tid_MovieScenePropertySystem_0__: boolean;
    }
    
    class MovieScene2DTransformPropertySystem extends UE.MovieScenePropertySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene2DTransformPropertySystem;
        static Load(InName: string): MovieScene2DTransformPropertySystem;
    
        __tid_MovieScene2DTransformPropertySystem_0__: boolean;
    }
    
    class MovieScene2DTransformSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransformMask: UE.MovieScene2DTransformMask;
        Translation: FixSizeArray<UE.MovieSceneFloatChannel>;
        Rotation: UE.MovieSceneFloatChannel;
        Scale: FixSizeArray<UE.MovieSceneFloatChannel>;
        Shear: FixSizeArray<UE.MovieSceneFloatChannel>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene2DTransformSection;
        static Load(InName: string): MovieScene2DTransformSection;
    
        __tid_MovieScene2DTransformSection_0__: boolean;
    }
    
    class MovieSceneNameableTrack extends UE.MovieSceneTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DisplayName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNameableTrack;
        static Load(InName: string): MovieSceneNameableTrack;
    
        __tid_MovieSceneNameableTrack_0__: boolean;
    }
    
    class MovieScenePropertyBinding {
        constructor();
        constructor(PropertyName: string, PropertyPath: string, bCanUseClassLookup: boolean);
        PropertyName: string;
        PropertyPath: string;
        bCanUseClassLookup: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScenePropertyBinding_0__: boolean;
    }
    
    class MovieScenePropertyTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UniqueTrackName: string;
        PropertyName: string;
        PropertyPath: string;
        SectionToKey: UE.MovieSceneSection;
        PropertyBinding: UE.MovieScenePropertyBinding;
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePropertyTrack;
        static Load(InName: string): MovieScenePropertyTrack;
    
        __tid_MovieScenePropertyTrack_0__: boolean;
    }
    
    class MovieScene2DTransformTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene2DTransformTrack;
        static Load(InName: string): MovieScene2DTransformTrack;
    
        __tid_MovieScene2DTransformTrack_0__: boolean;
    }
    
    class MovieScene3DConstraintSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstraintId: UE.Guid;
        ConstraintBindingID: UE.MovieSceneObjectBindingID;
        GetConstraintBindingID() : UE.MovieSceneObjectBindingID;
        SetConstraintBindingID(InConstraintBindingID: UE.MovieSceneObjectBindingID) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DConstraintSection;
        static Load(InName: string): MovieScene3DConstraintSection;
    
        __tid_MovieScene3DConstraintSection_0__: boolean;
    }
    
    class MovieScene3DAttachSection extends UE.MovieScene3DConstraintSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AttachSocketName: string;
        AttachComponentName: string;
        bFullRevertOnDetach: boolean;
        ReAttachOnDetach: TSoftObjectPtr<UE.Actor>;
        AttachmentLocationRule: UE.EAttachmentRule;
        AttachmentRotationRule: UE.EAttachmentRule;
        AttachmentScaleRule: UE.EAttachmentRule;
        DetachmentLocationRule: UE.EDetachmentRule;
        DetachmentRotationRule: UE.EDetachmentRule;
        DetachmentScaleRule: UE.EDetachmentRule;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DAttachSection;
        static Load(InName: string): MovieScene3DAttachSection;
    
        __tid_MovieScene3DAttachSection_0__: boolean;
    }
    
    class MovieScene3DConstraintTrack extends UE.MovieSceneTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstraintSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DConstraintTrack;
        static Load(InName: string): MovieScene3DConstraintTrack;
    
        __tid_MovieScene3DConstraintTrack_0__: boolean;
    }
    
    class MovieScene3DAttachTrack extends UE.MovieScene3DConstraintTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DAttachTrack;
        static Load(InName: string): MovieScene3DAttachTrack;
    
        __tid_MovieScene3DAttachTrack_0__: boolean;
    }
    
    class MovieSceneKeyStruct {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneKeyStruct_0__: boolean;
    }
    
    class MovieScene3DLocationKeyStruct extends UE.MovieSceneKeyStruct {
        constructor();
        constructor(Location: UE.Vector, Time: UE.FrameNumber);
        Location: UE.Vector;
        Time: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScene3DLocationKeyStruct_0__: boolean;
    }
    
    enum MovieScene3DPathSection_Axis { X, Y, Z, NEG_X, NEG_Y, NEG_Z, MovieScene3DPathSection_MAX, __typeKeyDoNoAccess}
    class MovieScene3DPathSection extends UE.MovieScene3DConstraintSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TimingCurve: UE.MovieSceneFloatChannel;
        FrontAxisEnum: UE.MovieScene3DPathSection_Axis;
        UpAxisEnum: UE.MovieScene3DPathSection_Axis;
        bFollow: boolean;
        bReverse: boolean;
        bForceUpright: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DPathSection;
        static Load(InName: string): MovieScene3DPathSection;
    
        __tid_MovieScene3DPathSection_0__: boolean;
    }
    
    class MovieSceneEvalTemplateBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvalTemplateBase_0__: boolean;
    }
    
    class MovieSceneEvalTemplate extends UE.MovieSceneEvalTemplateBase {
        constructor();
        constructor(CompletionMode: UE.EMovieSceneCompletionMode, SourceSectionPtr: TWeakObjectPtr<UE.MovieSceneSection>);
        CompletionMode: UE.EMovieSceneCompletionMode;
        SourceSectionPtr: TWeakObjectPtr<UE.MovieSceneSection>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvalTemplate_0__: boolean;
    }
    
    class MovieScene3DPathSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(PathBindingID: UE.MovieSceneObjectBindingID, TimingCurve: UE.MovieSceneFloatChannel, FrontAxisEnum: UE.MovieScene3DPathSection_Axis, UpAxisEnum: UE.MovieScene3DPathSection_Axis, bFollow: boolean, bReverse: boolean, bForceUpright: boolean);
        PathBindingID: UE.MovieSceneObjectBindingID;
        TimingCurve: UE.MovieSceneFloatChannel;
        FrontAxisEnum: UE.MovieScene3DPathSection_Axis;
        UpAxisEnum: UE.MovieScene3DPathSection_Axis;
        bFollow: boolean;
        bReverse: boolean;
        bForceUpright: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScene3DPathSectionTemplate_0__: boolean;
    }
    
    class MovieScene3DPathTrack extends UE.MovieScene3DConstraintTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DPathTrack;
        static Load(InName: string): MovieScene3DPathTrack;
    
        __tid_MovieScene3DPathTrack_0__: boolean;
    }
    
    class MovieScene3DRotationKeyStruct extends UE.MovieSceneKeyStruct {
        constructor();
        constructor(Rotation: UE.Rotator, Time: UE.FrameNumber);
        Rotation: UE.Rotator;
        Time: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScene3DRotationKeyStruct_0__: boolean;
    }
    
    class MovieScene3DScaleKeyStruct extends UE.MovieSceneKeyStruct {
        constructor();
        constructor(Scale: UE.Vector, Time: UE.FrameNumber);
        Scale: UE.Vector;
        Time: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScene3DScaleKeyStruct_0__: boolean;
    }
    
    class MovieScene3DTransformKeyStruct extends UE.MovieSceneKeyStruct {
        constructor();
        constructor(Location: UE.Vector, Rotation: UE.Rotator, Scale: UE.Vector, Time: UE.FrameNumber);
        Location: UE.Vector;
        Rotation: UE.Rotator;
        Scale: UE.Vector;
        Time: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScene3DTransformKeyStruct_0__: boolean;
    }
    
    class MovieScene3DTransformPropertySystem extends UE.MovieScenePropertySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DTransformPropertySystem;
        static Load(InName: string): MovieScene3DTransformPropertySystem;
    
        __tid_MovieScene3DTransformPropertySystem_0__: boolean;
    }
    
    class MovieSceneTransformMask {
        constructor();
        constructor(Mask: number);
        Mask: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTransformMask_0__: boolean;
    }
    
    class MovieScene3DTransformSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransformMask: UE.MovieSceneTransformMask;
        Translation: FixSizeArray<UE.MovieSceneFloatChannel>;
        Rotation: FixSizeArray<UE.MovieSceneFloatChannel>;
        Scale: FixSizeArray<UE.MovieSceneFloatChannel>;
        ManualWeight: UE.MovieSceneFloatChannel;
        bUseQuaternionInterpolation: boolean;
        Show3DTrajectory: UE.EShow3DTrajectory;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DTransformSection;
        static Load(InName: string): MovieScene3DTransformSection;
    
        __tid_MovieScene3DTransformSection_0__: boolean;
    }
    
    class MovieScene3DTransformSectionRecorderSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRecordTransforms: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DTransformSectionRecorderSettings;
        static Load(InName: string): MovieScene3DTransformSectionRecorderSettings;
    
        __tid_MovieScene3DTransformSectionRecorderSettings_0__: boolean;
    }
    
    class MovieScene3DTransformTemplateData {
        constructor();
        constructor(TranslationCurve: FixSizeArray<UE.MovieSceneFloatChannel>, RotationCurve: FixSizeArray<UE.MovieSceneFloatChannel>, ScaleCurve: FixSizeArray<UE.MovieSceneFloatChannel>, ManualWeight: UE.MovieSceneFloatChannel, BlendType: UE.EMovieSceneBlendType, Mask: UE.MovieSceneTransformMask, bUseQuaternionInterpolation: boolean);
        TranslationCurve: FixSizeArray<UE.MovieSceneFloatChannel>;
        RotationCurve: FixSizeArray<UE.MovieSceneFloatChannel>;
        ScaleCurve: FixSizeArray<UE.MovieSceneFloatChannel>;
        ManualWeight: UE.MovieSceneFloatChannel;
        BlendType: UE.EMovieSceneBlendType;
        Mask: UE.MovieSceneTransformMask;
        bUseQuaternionInterpolation: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScene3DTransformTemplateData_0__: boolean;
    }
    
    class MovieScene3DTransformTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScene3DTransformTrack;
        static Load(InName: string): MovieScene3DTransformTrack;
    
        __tid_MovieScene3DTransformTrack_0__: boolean;
    }
    
    class MovieSceneActorReferenceKey {
        constructor();
        constructor(Object: UE.MovieSceneObjectBindingID, ComponentName: string, SocketName: string);
        Object: UE.MovieSceneObjectBindingID;
        ComponentName: string;
        SocketName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneActorReferenceKey_0__: boolean;
    }
    
    class MovieSceneActorReferenceData extends UE.MovieSceneChannel {
        constructor();
        constructor(KeyTimes: TArray<UE.FrameNumber>, KeyValues: TArray<UE.MovieSceneActorReferenceKey>);
        KeyTimes: TArray<UE.FrameNumber>;
        KeyValues: TArray<UE.MovieSceneActorReferenceKey>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneActorReferenceData_0__: boolean;
    }
    
    class MovieSceneActorReferenceSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActorReferenceData: UE.MovieSceneActorReferenceData;
        ActorGuidIndexCurve: UE.IntegralCurve;
        ActorGuidStrings: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneActorReferenceSection;
        static Load(InName: string): MovieSceneActorReferenceSection;
    
        __tid_MovieSceneActorReferenceSection_0__: boolean;
    }
    
    class MovieScenePropertySectionData {
        constructor();
        constructor(PropertyName: string, PropertyPath: string);
        PropertyName: string;
        PropertyPath: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScenePropertySectionData_0__: boolean;
    }
    
    class MovieSceneActorReferenceSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(PropertyData: UE.MovieScenePropertySectionData, ActorReferenceData: UE.MovieSceneActorReferenceData);
        PropertyData: UE.MovieScenePropertySectionData;
        ActorReferenceData: UE.MovieSceneActorReferenceData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneActorReferenceSectionTemplate_0__: boolean;
    }
    
    class MovieSceneActorReferenceTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneActorReferenceTrack;
        static Load(InName: string): MovieSceneActorReferenceTrack;
    
        __tid_MovieSceneActorReferenceTrack_0__: boolean;
    }
    
    class MovieSceneAdditiveCameraAnimationTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneAdditiveCameraAnimationTemplate_0__: boolean;
    }
    
    class MovieSceneAudioSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sound: UE.SoundBase;
        StartFrameOffset: UE.FrameNumber;
        StartOffset: number;
        AudioStartTime: number;
        AudioDilationFactor: number;
        AudioVolume: number;
        SoundVolume: UE.MovieSceneFloatChannel;
        PitchMultiplier: UE.MovieSceneFloatChannel;
        AttachActorData: UE.MovieSceneActorReferenceData;
        bLooping: boolean;
        bSuppressSubtitles: boolean;
        bOverrideAttenuation: boolean;
        AttenuationSettings: UE.SoundAttenuation;
        OnQueueSubtitles: $Delegate<(Subtitles: TArray<UE.SubtitleCue>, CueDuration: number) => void>;
        OnAudioFinished: $MulticastDelegate<() => void>;
        OnAudioPlaybackPercent: $MulticastDelegate<(PlayingSoundWave: $Nullable<UE.SoundWave>, PlaybackPercent: number) => void>;
        GetSound() : UE.SoundBase;
        GetStartOffset() : UE.FrameNumber;
        SetSound(InSound: $Nullable<UE.SoundBase>) : void;
        SetStartOffset(InStartOffset: UE.FrameNumber) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneAudioSection;
        static Load(InName: string): MovieSceneAudioSection;
    
        __tid_MovieSceneAudioSection_0__: boolean;
    }
    
    class MovieSceneAudioSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(AudioSection: UE.MovieSceneAudioSection);
        AudioSection: UE.MovieSceneAudioSection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneAudioSectionTemplate_0__: boolean;
    }
    
    class MovieSceneAudioTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AudioSections: TArray<UE.MovieSceneSection>;
        RowHeight: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneAudioTrack;
        static Load(InName: string): MovieSceneAudioTrack;
    
        __tid_MovieSceneAudioTrack_0__: boolean;
    }
    
    class MovieSceneBaseValueEvaluatorSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBaseValueEvaluatorSystem;
        static Load(InName: string): MovieSceneBaseValueEvaluatorSystem;
    
        __tid_MovieSceneBaseValueEvaluatorSystem_0__: boolean;
    }
    
    class MovieSceneBindingOwnerInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBindingOwnerInterface;
        static Load(InName: string): MovieSceneBindingOwnerInterface;
    
        __tid_MovieSceneBindingOwnerInterface_0__: boolean;
    }
    
    class MovieSceneBlenderSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBlenderSystem;
        static Load(InName: string): MovieSceneBlenderSystem;
    
        __tid_MovieSceneBlenderSystem_0__: boolean;
    }
    
    class MovieScenePropertySectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(PropertyData: UE.MovieScenePropertySectionData);
        PropertyData: UE.MovieScenePropertySectionData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScenePropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneBoolPropertySectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(BoolCurve: UE.MovieSceneBoolChannel);
        BoolCurve: UE.MovieSceneBoolChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneBoolPropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneBoolSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultValue: boolean;
        BoolCurve: UE.MovieSceneBoolChannel;
        bIsExternallyInverted: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBoolSection;
        static Load(InName: string): MovieSceneBoolSection;
    
        __tid_MovieSceneBoolSection_0__: boolean;
    }
    
    class MovieSceneBoolTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBoolTrack;
        static Load(InName: string): MovieSceneBoolTrack;
    
        __tid_MovieSceneBoolTrack_0__: boolean;
    }
    
    class MovieSceneBoundSceneComponentInstantiator extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBoundSceneComponentInstantiator;
        static Load(InName: string): MovieSceneBoundSceneComponentInstantiator;
    
        __tid_MovieSceneBoundSceneComponentInstantiator_0__: boolean;
    }
    
    class MovieSceneBuiltInEasingFunction extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Type: UE.EMovieSceneBuiltInEasing;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneBuiltInEasingFunction;
        static Load(InName: string): MovieSceneBuiltInEasingFunction;
    
        __tid_MovieSceneBuiltInEasingFunction_0__: boolean;
    }
    
    class MovieSceneByteChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(Times: TArray<UE.FrameNumber>, DefaultValue: number, bHasDefaultValue: boolean, Values: TArray<number>, Enum: UE.Enum);
        Times: TArray<UE.FrameNumber>;
        DefaultValue: number;
        bHasDefaultValue: boolean;
        Values: TArray<number>;
        Enum: UE.Enum;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneByteChannel_0__: boolean;
    }
    
    class MovieSceneBytePropertySectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(ByteCurve: UE.MovieSceneByteChannel);
        ByteCurve: UE.MovieSceneByteChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneBytePropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneByteSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ByteCurve: UE.MovieSceneByteChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneByteSection;
        static Load(InName: string): MovieSceneByteSection;
    
        __tid_MovieSceneByteSection_0__: boolean;
    }
    
    class MovieSceneByteTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Enum: UE.Enum;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneByteTrack;
        static Load(InName: string): MovieSceneByteTrack;
    
        __tid_MovieSceneByteTrack_0__: boolean;
    }
    
    class MovieSceneCachePreAnimatedStateSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCachePreAnimatedStateSystem;
        static Load(InName: string): MovieSceneCachePreAnimatedStateSystem;
    
        __tid_MovieSceneCachePreAnimatedStateSystem_0__: boolean;
    }
    
    class MovieSceneCameraAnimSectionData {
        constructor();
        constructor(CameraAnim: UE.CameraAnim, PlayRate: number, PlayScale: number, BlendInTime: number, BlendOutTime: number, bLooping: boolean);
        CameraAnim: UE.CameraAnim;
        PlayRate: number;
        PlayScale: number;
        BlendInTime: number;
        BlendOutTime: number;
        bLooping: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraAnimSectionData_0__: boolean;
    }
    
    class MovieSceneCameraAnimSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimData: UE.MovieSceneCameraAnimSectionData;
        CameraAnim: UE.CameraAnim;
        PlayRate: number;
        PlayScale: number;
        BlendInTime: number;
        BlendOutTime: number;
        bLooping: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraAnimSection;
        static Load(InName: string): MovieSceneCameraAnimSection;
    
        __tid_MovieSceneCameraAnimSection_0__: boolean;
    }
    
    class MovieSceneCameraAnimSectionTemplate extends UE.MovieSceneAdditiveCameraAnimationTemplate {
        constructor();
        constructor(SourceData: UE.MovieSceneCameraAnimSectionData, SectionStartTime: UE.FrameNumber);
        SourceData: UE.MovieSceneCameraAnimSectionData;
        SectionStartTime: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraAnimSectionTemplate_0__: boolean;
    }
    
    class MovieSceneCameraAnimTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraAnimSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraAnimTrack;
        static Load(InName: string): MovieSceneCameraAnimTrack;
    
        __tid_MovieSceneCameraAnimTrack_0__: boolean;
    }
    
    class MovieSceneCameraCutSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bLockPreviousCamera: boolean;
        CameraGuid: UE.Guid;
        CameraBindingID: UE.MovieSceneObjectBindingID;
        InitialCameraCutTransform: UE.Transform;
        bHasInitialCameraCutTransform: boolean;
        ThumbnailReferenceOffset: number;
        GetCameraBindingID() : UE.MovieSceneObjectBindingID;
        SetCameraBindingID(InCameraBindingID: UE.MovieSceneObjectBindingID) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraCutSection;
        static Load(InName: string): MovieSceneCameraCutSection;
    
        __tid_MovieSceneCameraCutSection_0__: boolean;
    }
    
    class MovieSceneCameraCutTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCanBlend: boolean;
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraCutTrack;
        static Load(InName: string): MovieSceneCameraCutTrack;
    
        __tid_MovieSceneCameraCutTrack_0__: boolean;
    }
    
    class MovieSceneTrackInstanceInput {
        constructor();
        constructor(Section: UE.MovieSceneSection);
        Section: UE.MovieSceneSection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackInstanceInput_0__: boolean;
    }
    
    class MovieSceneTrackInstance extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimatedObject: UE.Object;
        bIsMasterTrackInstance: boolean;
        Linker: UE.MovieSceneEntitySystemLinker;
        Inputs: TArray<UE.MovieSceneTrackInstanceInput>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTrackInstance;
        static Load(InName: string): MovieSceneTrackInstance;
    
        __tid_MovieSceneTrackInstance_0__: boolean;
    }
    
    class MovieSceneCameraCutTrackInstance extends UE.MovieSceneTrackInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraCutTrackInstance;
        static Load(InName: string): MovieSceneCameraCutTrackInstance;
    
        __tid_MovieSceneCameraCutTrackInstance_0__: boolean;
    }
    
    class MovieSceneCameraShakeSectionData {
        constructor();
        constructor(ShakeClass: UE.Class, PlayScale: number, PlaySpace: UE.ECameraShakePlaySpace, UserDefinedPlaySpace: UE.Rotator);
        ShakeClass: UE.Class;
        PlayScale: number;
        PlaySpace: UE.ECameraShakePlaySpace;
        UserDefinedPlaySpace: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraShakeSectionData_0__: boolean;
    }
    
    class MovieSceneCameraShakeSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShakeData: UE.MovieSceneCameraShakeSectionData;
        ShakeClass: UE.Class;
        PlayScale: number;
        PlaySpace: UE.ECameraShakePlaySpace;
        UserDefinedPlaySpace: UE.Rotator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraShakeSection;
        static Load(InName: string): MovieSceneCameraShakeSection;
    
        __tid_MovieSceneCameraShakeSection_0__: boolean;
    }
    
    class MovieSceneCameraShakeSectionTemplate extends UE.MovieSceneAdditiveCameraAnimationTemplate {
        constructor();
        constructor(SourceData: UE.MovieSceneCameraShakeSectionData, SectionStartTime: UE.FrameNumber);
        SourceData: UE.MovieSceneCameraShakeSectionData;
        SectionStartTime: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraShakeSectionTemplate_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceShakeSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShakeData: UE.MovieSceneCameraShakeSectionData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraShakeSourceShakeSection;
        static Load(InName: string): MovieSceneCameraShakeSourceShakeSection;
    
        __tid_MovieSceneCameraShakeSourceShakeSection_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceShakeSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(SourceData: UE.MovieSceneCameraShakeSectionData, SectionStartTime: UE.FrameNumber, SectionEndTime: UE.FrameNumber);
        SourceData: UE.MovieSceneCameraShakeSectionData;
        SectionStartTime: UE.FrameNumber;
        SectionEndTime: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraShakeSourceShakeSectionTemplate_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceShakeTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraShakeSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraShakeSourceShakeTrack;
        static Load(InName: string): MovieSceneCameraShakeSourceShakeTrack;
    
        __tid_MovieSceneCameraShakeSourceShakeTrack_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceTrigger {
        constructor();
        constructor(ShakeClass: UE.Class, PlayScale: number, PlaySpace: UE.ECameraShakePlaySpace, UserDefinedPlaySpace: UE.Rotator);
        ShakeClass: UE.Class;
        PlayScale: number;
        PlaySpace: UE.ECameraShakePlaySpace;
        UserDefinedPlaySpace: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraShakeSourceTrigger_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceTriggerChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(KeyTimes: TArray<UE.FrameNumber>, KeyValues: TArray<UE.MovieSceneCameraShakeSourceTrigger>);
        KeyTimes: TArray<UE.FrameNumber>;
        KeyValues: TArray<UE.MovieSceneCameraShakeSourceTrigger>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraShakeSourceTriggerChannel_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceTriggerSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Channel: UE.MovieSceneCameraShakeSourceTriggerChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraShakeSourceTriggerSection;
        static Load(InName: string): MovieSceneCameraShakeSourceTriggerSection;
    
        __tid_MovieSceneCameraShakeSourceTriggerSection_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceTriggerSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(TriggerTimes: TArray<UE.FrameNumber>, TriggerValues: TArray<UE.MovieSceneCameraShakeSourceTrigger>);
        TriggerTimes: TArray<UE.FrameNumber>;
        TriggerValues: TArray<UE.MovieSceneCameraShakeSourceTrigger>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneCameraShakeSourceTriggerSectionTemplate_0__: boolean;
    }
    
    class MovieSceneCameraShakeSourceTriggerTrack extends UE.MovieSceneTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraShakeSourceTriggerTrack;
        static Load(InName: string): MovieSceneCameraShakeSourceTriggerTrack;
    
        __tid_MovieSceneCameraShakeSourceTriggerTrack_0__: boolean;
    }
    
    class MovieSceneCameraShakeTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraShakeSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCameraShakeTrack;
        static Load(InName: string): MovieSceneCameraShakeTrack;
    
        __tid_MovieSceneCameraShakeTrack_0__: boolean;
    }
    
    class MovieSceneCaptureEnvironment extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static FindAudioCaptureProtocol() : UE.MovieSceneAudioCaptureProtocolBase;
        static FindImageCaptureProtocol() : UE.MovieSceneImageCaptureProtocolBase;
        static GetCaptureElapsedTime() : number;
        static GetCaptureFrameNumber() : number;
        static IsCaptureInProgress() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCaptureEnvironment;
        static Load(InName: string): MovieSceneCaptureEnvironment;
    
        __tid_MovieSceneCaptureEnvironment_0__: boolean;
    }
    
    class MovieSceneCaptureInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCaptureInterface;
        static Load(InName: string): MovieSceneCaptureInterface;
    
        __tid_MovieSceneCaptureInterface_0__: boolean;
    }
    
    class MovieSceneSectionParameters {
        constructor();
        constructor(StartFrameOffset: UE.FrameNumber, bCanLoop: boolean, EndFrameOffset: UE.FrameNumber, FirstLoopStartFrameOffset: UE.FrameNumber, TimeScale: number, HierarchicalBias: number, StartOffset: number, PrerollTime: number, PostrollTime: number);
        StartFrameOffset: UE.FrameNumber;
        bCanLoop: boolean;
        EndFrameOffset: UE.FrameNumber;
        FirstLoopStartFrameOffset: UE.FrameNumber;
        TimeScale: number;
        HierarchicalBias: number;
        StartOffset: number;
        PrerollTime: number;
        PostrollTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSectionParameters_0__: boolean;
    }
    
    class MovieSceneSubSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Parameters: UE.MovieSceneSectionParameters;
        StartOffset: number;
        TimeScale: number;
        PrerollTime: number;
        SubSequence: UE.MovieSceneSequence;
        ActorToRecord: TLazyObjectPtr<UE.Actor>;
        TargetSequenceName: string;
        TargetPathToRecordTo: UE.DirectoryPath;
        GetSequence() : UE.MovieSceneSequence;
        SetSequence(Sequence: $Nullable<UE.MovieSceneSequence>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSubSection;
        static Load(InName: string): MovieSceneSubSection;
    
        __tid_MovieSceneSubSection_0__: boolean;
    }
    
    class MovieSceneCinematicShotSection extends UE.MovieSceneSubSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShotDisplayName: string;
        DisplayName: string;
        ThumbnailReferenceOffset: number;
        GetShotDisplayName() : string;
        SetShotDisplayName(InShotDisplayName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCinematicShotSection;
        static Load(InName: string): MovieSceneCinematicShotSection;
    
        __tid_MovieSceneCinematicShotSection_0__: boolean;
    }
    
    class MovieSceneSubTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSubTrack;
        static Load(InName: string): MovieSceneSubTrack;
    
        __tid_MovieSceneSubTrack_0__: boolean;
    }
    
    class MovieSceneCinematicShotTrack extends UE.MovieSceneSubTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCinematicShotTrack;
        static Load(InName: string): MovieSceneCinematicShotTrack;
    
        __tid_MovieSceneCinematicShotTrack_0__: boolean;
    }
    
    class MovieSceneColorKeyStruct extends UE.MovieSceneKeyStruct {
        constructor();
        constructor(Color: UE.LinearColor, Time: UE.FrameNumber);
        Color: UE.LinearColor;
        Time: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneColorKeyStruct_0__: boolean;
    }
    
    class MovieSceneColorSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RedCurve: UE.MovieSceneFloatChannel;
        GreenCurve: UE.MovieSceneFloatChannel;
        BlueCurve: UE.MovieSceneFloatChannel;
        AlphaCurve: UE.MovieSceneFloatChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneColorSection;
        static Load(InName: string): MovieSceneColorSection;
    
        __tid_MovieSceneColorSection_0__: boolean;
    }
    
    class MovieSceneColorSectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(Curves: FixSizeArray<UE.MovieSceneFloatChannel>, BlendType: UE.EMovieSceneBlendType);
        Curves: FixSizeArray<UE.MovieSceneFloatChannel>;
        BlendType: UE.EMovieSceneBlendType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneColorSectionTemplate_0__: boolean;
    }
    
    class MovieSceneColorTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsSlateColor: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneColorTrack;
        static Load(InName: string): MovieSceneColorTrack;
    
        __tid_MovieSceneColorTrack_0__: boolean;
    }
    
    class MovieSceneComponentAttachmentInvalidatorSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneComponentAttachmentInvalidatorSystem;
        static Load(InName: string): MovieSceneComponentAttachmentInvalidatorSystem;
    
        __tid_MovieSceneComponentAttachmentInvalidatorSystem_0__: boolean;
    }
    
    class MovieSceneComponentAttachmentSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneComponentAttachmentSystem;
        static Load(InName: string): MovieSceneComponentAttachmentSystem;
    
        __tid_MovieSceneComponentAttachmentSystem_0__: boolean;
    }
    
    class ScalarParameterNameAndCurve {
        constructor();
        constructor(ParameterName: string, ParameterCurve: UE.MovieSceneFloatChannel);
        ParameterName: string;
        ParameterCurve: UE.MovieSceneFloatChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScalarParameterNameAndCurve_0__: boolean;
    }
    
    class Vector2DParameterNameAndCurves {
        constructor();
        constructor(ParameterName: string, XCurve: UE.MovieSceneFloatChannel, YCurve: UE.MovieSceneFloatChannel);
        ParameterName: string;
        XCurve: UE.MovieSceneFloatChannel;
        YCurve: UE.MovieSceneFloatChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Vector2DParameterNameAndCurves_0__: boolean;
    }
    
    class VectorParameterNameAndCurves {
        constructor();
        constructor(ParameterName: string, XCurve: UE.MovieSceneFloatChannel, YCurve: UE.MovieSceneFloatChannel, ZCurve: UE.MovieSceneFloatChannel);
        ParameterName: string;
        XCurve: UE.MovieSceneFloatChannel;
        YCurve: UE.MovieSceneFloatChannel;
        ZCurve: UE.MovieSceneFloatChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VectorParameterNameAndCurves_0__: boolean;
    }
    
    class TransformParameterNameAndCurves {
        constructor();
        constructor(ParameterName: string, Translation: FixSizeArray<UE.MovieSceneFloatChannel>, Rotation: FixSizeArray<UE.MovieSceneFloatChannel>, Scale: FixSizeArray<UE.MovieSceneFloatChannel>);
        ParameterName: string;
        Translation: FixSizeArray<UE.MovieSceneFloatChannel>;
        Rotation: FixSizeArray<UE.MovieSceneFloatChannel>;
        Scale: FixSizeArray<UE.MovieSceneFloatChannel>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformParameterNameAndCurves_0__: boolean;
    }
    
    class MovieSceneParameterSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(Scalars: TArray<UE.ScalarParameterNameAndCurve>, Bools: TArray<UE.BoolParameterNameAndCurve>, Vector2Ds: TArray<UE.Vector2DParameterNameAndCurves>, Vectors: TArray<UE.VectorParameterNameAndCurves>, Colors: TArray<UE.ColorParameterNameAndCurves>, Transforms: TArray<UE.TransformParameterNameAndCurves>);
        Scalars: TArray<UE.ScalarParameterNameAndCurve>;
        Bools: TArray<UE.BoolParameterNameAndCurve>;
        Vector2Ds: TArray<UE.Vector2DParameterNameAndCurves>;
        Vectors: TArray<UE.VectorParameterNameAndCurves>;
        Colors: TArray<UE.ColorParameterNameAndCurves>;
        Transforms: TArray<UE.TransformParameterNameAndCurves>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneComponentMaterialSectionTemplate extends UE.MovieSceneParameterSectionTemplate {
        constructor();
        constructor(MaterialIndex: number);
        MaterialIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneComponentMaterialSectionTemplate_0__: boolean;
    }
    
    class MovieSceneMaterialTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMaterialTrack;
        static Load(InName: string): MovieSceneMaterialTrack;
    
        __tid_MovieSceneMaterialTrack_0__: boolean;
    }
    
    class MovieSceneComponentMaterialTrack extends UE.MovieSceneMaterialTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneComponentMaterialTrack;
        static Load(InName: string): MovieSceneComponentMaterialTrack;
    
        __tid_MovieSceneComponentMaterialTrack_0__: boolean;
    }
    
    class MovieSceneComponentMobilitySystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneComponentMobilitySystem;
        static Load(InName: string): MovieSceneComponentMobilitySystem;
    
        __tid_MovieSceneComponentMobilitySystem_0__: boolean;
    }
    
    class MovieSceneComponentTransformSystem extends UE.MovieScenePropertySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneComponentTransformSystem;
        static Load(InName: string): MovieSceneComponentTransformSystem;
    
        __tid_MovieSceneComponentTransformSystem_0__: boolean;
    }
    
    class MovieSceneCopyableBinding extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpawnableObjectTemplate: UE.Object;
        Tracks: TArray<UE.MovieSceneTrack>;
        Binding: UE.MovieSceneBinding;
        Spawnable: UE.MovieSceneSpawnable;
        Possessable: UE.MovieScenePossessable;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCopyableBinding;
        static Load(InName: string): MovieSceneCopyableBinding;
    
        __tid_MovieSceneCopyableBinding_0__: boolean;
    }
    
    class MovieSceneCopyableTrack extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Track: UE.MovieSceneTrack;
        bIsAMasterTrack: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCopyableTrack;
        static Load(InName: string): MovieSceneCopyableTrack;
    
        __tid_MovieSceneCopyableTrack_0__: boolean;
    }
    
    class MovieSceneCustomClockSource extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnRequestCurrentTime(InCurrentTime: UE.QualifiedFrameTime, InPlayRate: number) : UE.FrameTime;
        OnStartPlaying(InStartTime: UE.QualifiedFrameTime) : void;
        OnStopPlaying(InStopTime: UE.QualifiedFrameTime) : void;
        OnTick(DeltaSeconds: number, InPlayRate: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneCustomClockSource;
        static Load(InName: string): MovieSceneCustomClockSource;
    
        __tid_MovieSceneCustomClockSource_0__: boolean;
    }
    
    class MovieSceneEasingExternalCurve extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Curve: UE.CurveFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEasingExternalCurve;
        static Load(InName: string): MovieSceneEasingExternalCurve;
    
        __tid_MovieSceneEasingExternalCurve_0__: boolean;
    }
    
    class MovieSceneEmptyStruct {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEmptyStruct_0__: boolean;
    }
    
    class MovieSceneEntityProvider extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEntityProvider;
        static Load(InName: string): MovieSceneEntityProvider;
    
        __tid_MovieSceneEntityProvider_0__: boolean;
    }
    
    class MovieSceneEntitySystemGraphNode {
        constructor();
        constructor(System: UE.MovieSceneEntitySystem);
        System: UE.MovieSceneEntitySystem;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEntitySystemGraphNode_0__: boolean;
    }
    
    class MovieSceneEnumPropertySectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(EnumCurve: UE.MovieSceneByteChannel);
        EnumCurve: UE.MovieSceneByteChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEnumPropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneEnumSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnumCurve: UE.MovieSceneByteChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEnumSection;
        static Load(InName: string): MovieSceneEnumSection;
    
        __tid_MovieSceneEnumSection_0__: boolean;
    }
    
    class MovieSceneEnumTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Enum: UE.Enum;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEnumTrack;
        static Load(InName: string): MovieSceneEnumTrack;
    
        __tid_MovieSceneEnumTrack_0__: boolean;
    }
    
    class MovieSceneEulerTransformPropertySystem extends UE.MovieScenePropertySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEulerTransformPropertySystem;
        static Load(InName: string): MovieSceneEulerTransformPropertySystem;
    
        __tid_MovieSceneEulerTransformPropertySystem_0__: boolean;
    }
    
    class MovieSceneEulerTransformTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEulerTransformTrack;
        static Load(InName: string): MovieSceneEulerTransformTrack;
    
        __tid_MovieSceneEulerTransformTrack_0__: boolean;
    }
    
    class MovieSceneEvalTimeSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEvalTimeSystem;
        static Load(InName: string): MovieSceneEvalTimeSystem;
    
        __tid_MovieSceneEvalTimeSystem_0__: boolean;
    }
    
    class MovieSceneSegmentIdentifier {
        constructor();
        constructor(IdentifierIndex: number);
        IdentifierIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSegmentIdentifier_0__: boolean;
    }
    
    class MovieSceneEvaluationFieldSegmentPtr extends UE.MovieSceneEvaluationFieldTrackPtr {
        constructor();
        constructor(SegmentID: UE.MovieSceneSegmentIdentifier);
        SegmentID: UE.MovieSceneSegmentIdentifier;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationFieldSegmentPtr_0__: boolean;
    }
    
    class MovieSceneEvaluationOperand {
        constructor();
        constructor(ObjectBindingID: UE.Guid, SequenceID: UE.MovieSceneSequenceID);
        ObjectBindingID: UE.Guid;
        SequenceID: UE.MovieSceneSequenceID;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvaluationOperand_0__: boolean;
    }
    
    class MovieSceneEventPtrs {
        Function: UE.Function;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEventPtrs_0__: boolean;
    }
    
    class MovieSceneEventPayloadVariable {
        constructor();
        constructor(Value: string);
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEventPayloadVariable_0__: boolean;
    }
    
    class MovieSceneEvent {
        constructor();
        constructor(Ptrs: UE.MovieSceneEventPtrs, PayloadVariables: TMap<string, UE.MovieSceneEventPayloadVariable>, CompiledFunctionName: string, BoundObjectPinName: string, WeakEndpoint: TWeakObjectPtr<UE.Object>, GraphGuid: UE.Guid, NodeGuid: UE.Guid, FunctionEntry: TWeakObjectPtr<UE.Object>);
        Ptrs: UE.MovieSceneEventPtrs;
        PayloadVariables: TMap<string, UE.MovieSceneEventPayloadVariable>;
        CompiledFunctionName: string;
        BoundObjectPinName: string;
        WeakEndpoint: TWeakObjectPtr<UE.Object>;
        GraphGuid: UE.Guid;
        NodeGuid: UE.Guid;
        FunctionEntry: TWeakObjectPtr<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEvent_0__: boolean;
    }
    
    class MovieSceneEventSectionBase extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEventSectionBase;
        static Load(InName: string): MovieSceneEventSectionBase;
    
        __tid_MovieSceneEventSectionBase_0__: boolean;
    }
    
    class MovieSceneEventBlueprintExtension extends UE.BlueprintExtension {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventSections: TArray<UE.MovieSceneEventSectionBase>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEventBlueprintExtension;
        static Load(InName: string): MovieSceneEventBlueprintExtension;
    
        __tid_MovieSceneEventBlueprintExtension_0__: boolean;
    }
    
    class MovieSceneEventChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(KeyTimes: TArray<UE.FrameNumber>, KeyValues: TArray<UE.MovieSceneEvent>);
        KeyTimes: TArray<UE.FrameNumber>;
        KeyValues: TArray<UE.MovieSceneEvent>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEventChannel_0__: boolean;
    }
    
    class MovieSceneEventRepeaterSection extends UE.MovieSceneEventSectionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Event: UE.MovieSceneEvent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEventRepeaterSection;
        static Load(InName: string): MovieSceneEventRepeaterSection;
    
        __tid_MovieSceneEventRepeaterSection_0__: boolean;
    }
    
    class NameCurveKey {
        constructor();
        constructor(Time: number, Value: string);
        Time: number;
        Value: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NameCurveKey_0__: boolean;
    }
    
    class NameCurve extends UE.IndexedCurve {
        constructor();
        constructor(Keys: TArray<UE.NameCurveKey>);
        Keys: TArray<UE.NameCurveKey>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NameCurve_0__: boolean;
    }
    
    class MovieSceneEventSectionData extends UE.MovieSceneChannel {
        constructor();
        constructor(Times: TArray<UE.FrameNumber>, KeyValues: TArray<UE.EventPayload>, KeyTimes: TArray<number>);
        Times: TArray<UE.FrameNumber>;
        KeyValues: TArray<UE.EventPayload>;
        KeyTimes: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEventSectionData_0__: boolean;
    }
    
    class MovieSceneEventSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Events: UE.NameCurve;
        EventData: UE.MovieSceneEventSectionData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEventSection;
        static Load(InName: string): MovieSceneEventSection;
    
        __tid_MovieSceneEventSection_0__: boolean;
    }
    
    class MovieSceneEventSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(EventData: UE.MovieSceneEventSectionData, bFireEventsWhenForwards: boolean, bFireEventsWhenBackwards: boolean);
        EventData: UE.MovieSceneEventSectionData;
        bFireEventsWhenForwards: boolean;
        bFireEventsWhenBackwards: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEventSectionTemplate_0__: boolean;
    }
    
    class MovieSceneEventSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEventSystem;
        static Load(InName: string): MovieSceneEventSystem;
    
        __tid_MovieSceneEventSystem_0__: boolean;
    }
    
    class MovieSceneEventTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bFireEventsWhenForwards: boolean;
        bFireEventsWhenBackwards: boolean;
        EventPosition: UE.EFireEventsAtPosition;
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEventTrack;
        static Load(InName: string): MovieSceneEventTrack;
    
        __tid_MovieSceneEventTrack_0__: boolean;
    }
    
    class MovieSceneEventTriggerData {
        constructor();
        constructor(Ptrs: UE.MovieSceneEventPtrs, ObjectBindingID: UE.Guid);
        Ptrs: UE.MovieSceneEventPtrs;
        ObjectBindingID: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneEventTriggerData_0__: boolean;
    }
    
    class MovieSceneEventTriggerSection extends UE.MovieSceneEventSectionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventChannel: UE.MovieSceneEventChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneEventTriggerSection;
        static Load(InName: string): MovieSceneEventTriggerSection;
    
        __tid_MovieSceneEventTriggerSection_0__: boolean;
    }
    
    class MovieSceneFadeSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatCurve: UE.MovieSceneFloatChannel;
        FadeColor: UE.LinearColor;
        bFadeAudio: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneFadeSection;
        static Load(InName: string): MovieSceneFadeSection;
    
        __tid_MovieSceneFadeSection_0__: boolean;
    }
    
    class MovieSceneFadeSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(FadeCurve: UE.MovieSceneFloatChannel, FadeColor: UE.LinearColor, bFadeAudio: boolean);
        FadeCurve: UE.MovieSceneFloatChannel;
        FadeColor: UE.LinearColor;
        bFadeAudio: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneFadeSectionTemplate_0__: boolean;
    }
    
    class MovieSceneFloatTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneFloatTrack;
        static Load(InName: string): MovieSceneFloatTrack;
    
        __tid_MovieSceneFloatTrack_0__: boolean;
    }
    
    class MovieSceneFadeTrack extends UE.MovieSceneFloatTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneFadeTrack;
        static Load(InName: string): MovieSceneFadeTrack;
    
        __tid_MovieSceneFadeTrack_0__: boolean;
    }
    
    class MovieSceneFloatDecomposer extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneFloatDecomposer;
        static Load(InName: string): MovieSceneFloatDecomposer;
    
        __tid_MovieSceneFloatDecomposer_0__: boolean;
    }
    
    class MovieSceneFloatPropertySystem extends UE.MovieScenePropertySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneFloatPropertySystem;
        static Load(InName: string): MovieSceneFloatPropertySystem;
    
        __tid_MovieSceneFloatPropertySystem_0__: boolean;
    }
    
    class MovieSceneFloatSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatCurve: UE.MovieSceneFloatChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneFloatSection;
        static Load(InName: string): MovieSceneFloatSection;
    
        __tid_MovieSceneFloatSection_0__: boolean;
    }
    
    class MovieSceneGenericBoundObjectInstantiator extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneGenericBoundObjectInstantiator;
        static Load(InName: string): MovieSceneGenericBoundObjectInstantiator;
    
        __tid_MovieSceneGenericBoundObjectInstantiator_0__: boolean;
    }
    
    class MovieSceneGeometryCacheParams {
        constructor();
        constructor(GeometryCacheAsset: UE.GeometryCache, FirstLoopStartFrameOffset: UE.FrameNumber, StartFrameOffset: UE.FrameNumber, EndFrameOffset: UE.FrameNumber, PlayRate: number, bReverse: boolean, StartOffset: number, EndOffset: number, GeometryCache: UE.SoftObjectPath);
        GeometryCacheAsset: UE.GeometryCache;
        FirstLoopStartFrameOffset: UE.FrameNumber;
        StartFrameOffset: UE.FrameNumber;
        EndFrameOffset: UE.FrameNumber;
        PlayRate: number;
        bReverse: boolean;
        StartOffset: number;
        EndOffset: number;
        GeometryCache: UE.SoftObjectPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneGeometryCacheParams_0__: boolean;
    }
    
    class MovieSceneGeometryCacheSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Params: UE.MovieSceneGeometryCacheParams;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneGeometryCacheSection;
        static Load(InName: string): MovieSceneGeometryCacheSection;
    
        __tid_MovieSceneGeometryCacheSection_0__: boolean;
    }
    
    class MovieSceneGeometryCacheSectionTemplateParameters extends UE.MovieSceneGeometryCacheParams {
        constructor();
        constructor(SectionStartTime: UE.FrameNumber, SectionEndTime: UE.FrameNumber);
        SectionStartTime: UE.FrameNumber;
        SectionEndTime: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneGeometryCacheSectionTemplateParameters_0__: boolean;
    }
    
    class MovieSceneGeometryCacheSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(Params: UE.MovieSceneGeometryCacheSectionTemplateParameters);
        Params: UE.MovieSceneGeometryCacheSectionTemplateParameters;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneGeometryCacheSectionTemplate_0__: boolean;
    }
    
    class MovieSceneGeometryCacheTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneGeometryCacheTrack;
        static Load(InName: string): MovieSceneGeometryCacheTrack;
    
        __tid_MovieSceneGeometryCacheTrack_0__: boolean;
    }
    
    class MovieSceneGeometryCollectionParams {
        constructor();
        constructor(GeometryCollectionCache: UE.SoftObjectPath, StartFrameOffset: UE.FrameNumber, EndFrameOffset: UE.FrameNumber, PlayRate: number);
        GeometryCollectionCache: UE.SoftObjectPath;
        StartFrameOffset: UE.FrameNumber;
        EndFrameOffset: UE.FrameNumber;
        PlayRate: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneGeometryCollectionParams_0__: boolean;
    }
    
    class MovieSceneGeometryCollectionSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Params: UE.MovieSceneGeometryCollectionParams;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneGeometryCollectionSection;
        static Load(InName: string): MovieSceneGeometryCollectionSection;
    
        __tid_MovieSceneGeometryCollectionSection_0__: boolean;
    }
    
    class MovieSceneGeometryCollectionSectionTemplateParameters extends UE.MovieSceneGeometryCollectionParams {
        constructor();
        constructor(SectionStartTime: UE.FrameNumber, SectionEndTime: UE.FrameNumber);
        SectionStartTime: UE.FrameNumber;
        SectionEndTime: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneGeometryCollectionSectionTemplateParameters_0__: boolean;
    }
    
    class MovieSceneGeometryCollectionSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(Params: UE.MovieSceneGeometryCollectionSectionTemplateParameters);
        Params: UE.MovieSceneGeometryCollectionSectionTemplateParameters;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneGeometryCollectionSectionTemplate_0__: boolean;
    }
    
    class MovieSceneGeometryCollectionTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneGeometryCollectionTrack;
        static Load(InName: string): MovieSceneGeometryCollectionTrack;
    
        __tid_MovieSceneGeometryCollectionTrack_0__: boolean;
    }
    
    class MovieSceneHierarchicalBiasSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneHierarchicalBiasSystem;
        static Load(InName: string): MovieSceneHierarchicalBiasSystem;
    
        __tid_MovieSceneHierarchicalBiasSystem_0__: boolean;
    }
    
    class MovieSceneHierarchicalEasingInstantiatorSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneHierarchicalEasingInstantiatorSystem;
        static Load(InName: string): MovieSceneHierarchicalEasingInstantiatorSystem;
    
        __tid_MovieSceneHierarchicalEasingInstantiatorSystem_0__: boolean;
    }
    
    class MovieSceneIntegerChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(Times: TArray<UE.FrameNumber>, DefaultValue: number, bHasDefaultValue: boolean, Values: TArray<number>);
        Times: TArray<UE.FrameNumber>;
        DefaultValue: number;
        bHasDefaultValue: boolean;
        Values: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneIntegerChannel_0__: boolean;
    }
    
    class MovieSceneIntegerPropertySectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(IntegerCurve: UE.MovieSceneIntegerChannel, BlendType: UE.EMovieSceneBlendType);
        IntegerCurve: UE.MovieSceneIntegerChannel;
        BlendType: UE.EMovieSceneBlendType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneIntegerPropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneIntegerSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IntegerCurve: UE.MovieSceneIntegerChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneIntegerSection;
        static Load(InName: string): MovieSceneIntegerSection;
    
        __tid_MovieSceneIntegerSection_0__: boolean;
    }
    
    class MovieSceneIntegerTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneIntegerTrack;
        static Load(InName: string): MovieSceneIntegerTrack;
    
        __tid_MovieSceneIntegerTrack_0__: boolean;
    }
    
    class MovieSceneInterrogatedPropertyInstantiatorSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneInterrogatedPropertyInstantiatorSystem;
        static Load(InName: string): MovieSceneInterrogatedPropertyInstantiatorSystem;
    
        __tid_MovieSceneInterrogatedPropertyInstantiatorSystem_0__: boolean;
    }
    
    class MovieSceneKeyProxy extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneKeyProxy;
        static Load(InName: string): MovieSceneKeyProxy;
    
        __tid_MovieSceneKeyProxy_0__: boolean;
    }
    
    class MovieSceneKeyStructType extends UE.ScriptStruct {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneKeyStructType;
        static Load(InName: string): MovieSceneKeyStructType;
    
        __tid_MovieSceneKeyStructType_0__: boolean;
    }
    
    class MovieSceneKeyTimeStruct extends UE.MovieSceneKeyStruct {
        constructor();
        constructor(Time: UE.FrameNumber);
        Time: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneKeyTimeStruct_0__: boolean;
    }
    
    class MovieSceneLevelVisibilitySystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneLevelVisibilitySystem;
        static Load(InName: string): MovieSceneLevelVisibilitySystem;
    
        __tid_MovieSceneLevelVisibilitySystem_0__: boolean;
    }
    
    class MovieSceneLevelVisibilityTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneLevelVisibilityTrack;
        static Load(InName: string): MovieSceneLevelVisibilityTrack;
    
        __tid_MovieSceneLevelVisibilityTrack_0__: boolean;
    }
    
    class MovieSceneMarginSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TopCurve: UE.MovieSceneFloatChannel;
        LeftCurve: UE.MovieSceneFloatChannel;
        RightCurve: UE.MovieSceneFloatChannel;
        BottomCurve: UE.MovieSceneFloatChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMarginSection;
        static Load(InName: string): MovieSceneMarginSection;
    
        __tid_MovieSceneMarginSection_0__: boolean;
    }
    
    class MovieSceneMarginSectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(TopCurve: UE.MovieSceneFloatChannel, LeftCurve: UE.MovieSceneFloatChannel, RightCurve: UE.MovieSceneFloatChannel, BottomCurve: UE.MovieSceneFloatChannel, BlendType: UE.EMovieSceneBlendType);
        TopCurve: UE.MovieSceneFloatChannel;
        LeftCurve: UE.MovieSceneFloatChannel;
        RightCurve: UE.MovieSceneFloatChannel;
        BottomCurve: UE.MovieSceneFloatChannel;
        BlendType: UE.EMovieSceneBlendType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneMarginSectionTemplate_0__: boolean;
    }
    
    class MovieSceneMarginTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMarginTrack;
        static Load(InName: string): MovieSceneMarginTrack;
    
        __tid_MovieSceneMarginTrack_0__: boolean;
    }
    
    class MovieSceneMasterInstantiatorSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMasterInstantiatorSystem;
        static Load(InName: string): MovieSceneMasterInstantiatorSystem;
    
        __tid_MovieSceneMasterInstantiatorSystem_0__: boolean;
    }
    
    class MovieSceneMaterialParameterCollectionTemplate extends UE.MovieSceneParameterSectionTemplate {
        constructor();
        constructor(MPC: UE.MaterialParameterCollection);
        MPC: UE.MaterialParameterCollection;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneMaterialParameterCollectionTemplate_0__: boolean;
    }
    
    class MovieSceneMaterialParameterCollectionTrack extends UE.MovieSceneMaterialTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MPC: UE.MaterialParameterCollection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMaterialParameterCollectionTrack;
        static Load(InName: string): MovieSceneMaterialParameterCollectionTrack;
    
        __tid_MovieSceneMaterialParameterCollectionTrack_0__: boolean;
    }
    
    class MovieSceneMediaPlayerPropertySection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MediaSource: UE.MediaSource;
        bLoop: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMediaPlayerPropertySection;
        static Load(InName: string): MovieSceneMediaPlayerPropertySection;
    
        __tid_MovieSceneMediaPlayerPropertySection_0__: boolean;
    }
    
    class MovieSceneMediaPlayerPropertySectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(MediaSource: UE.MediaSource, SectionStartFrame: UE.FrameNumber, bLoop: boolean);
        MediaSource: UE.MediaSource;
        SectionStartFrame: UE.FrameNumber;
        bLoop: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneMediaPlayerPropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneMediaPlayerPropertyTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMediaPlayerPropertyTrack;
        static Load(InName: string): MovieSceneMediaPlayerPropertyTrack;
    
        __tid_MovieSceneMediaPlayerPropertyTrack_0__: boolean;
    }
    
    class MovieSceneMediaSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MediaSource: UE.MediaSource;
        bLooping: boolean;
        StartFrameOffset: UE.FrameNumber;
        MediaTexture: UE.MediaTexture;
        MediaSoundComponent: UE.MediaSoundComponent;
        bUseExternalMediaPlayer: boolean;
        ExternalMediaPlayer: UE.MediaPlayer;
        ThumbnailReferenceOffset: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMediaSection;
        static Load(InName: string): MovieSceneMediaSection;
    
        __tid_MovieSceneMediaSection_0__: boolean;
    }
    
    class MovieSceneMediaSectionParams {
        constructor();
        constructor(MediaSoundComponent: UE.MediaSoundComponent, MediaSource: UE.MediaSource, MediaTexture: UE.MediaTexture, MediaPlayer: UE.MediaPlayer, SectionStartFrame: UE.FrameNumber, SectionEndFrame: UE.FrameNumber, bLooping: boolean, StartFrameOffset: UE.FrameNumber);
        MediaSoundComponent: UE.MediaSoundComponent;
        MediaSource: UE.MediaSource;
        MediaTexture: UE.MediaTexture;
        MediaPlayer: UE.MediaPlayer;
        SectionStartFrame: UE.FrameNumber;
        SectionEndFrame: UE.FrameNumber;
        bLooping: boolean;
        StartFrameOffset: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneMediaSectionParams_0__: boolean;
    }
    
    class MovieSceneMediaSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(Params: UE.MovieSceneMediaSectionParams);
        Params: UE.MovieSceneMediaSectionParams;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneMediaSectionTemplate_0__: boolean;
    }
    
    class MovieSceneMediaTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MediaSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneMediaTrack;
        static Load(InName: string): MovieSceneMediaTrack;
    
        __tid_MovieSceneMediaTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraParameterSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(Parameter: UE.NiagaraVariable);
        Parameter: UE.NiagaraVariable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneNiagaraBoolParameterSectionTemplate extends UE.MovieSceneNiagaraParameterSectionTemplate {
        constructor();
        constructor(BoolChannel: UE.MovieSceneBoolChannel);
        BoolChannel: UE.MovieSceneBoolChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraBoolParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneNiagaraTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraTrack;
        static Load(InName: string): MovieSceneNiagaraTrack;
    
        __tid_MovieSceneNiagaraTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraParameterTrack extends UE.MovieSceneNiagaraTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Parameter: UE.NiagaraVariable;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraParameterTrack;
        static Load(InName: string): MovieSceneNiagaraParameterTrack;
    
        __tid_MovieSceneNiagaraParameterTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraBoolParameterTrack extends UE.MovieSceneNiagaraParameterTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraBoolParameterTrack;
        static Load(InName: string): MovieSceneNiagaraBoolParameterTrack;
    
        __tid_MovieSceneNiagaraBoolParameterTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraColorParameterSectionTemplate extends UE.MovieSceneNiagaraParameterSectionTemplate {
        constructor();
        constructor(RedChannel: UE.MovieSceneFloatChannel, GreenChannel: UE.MovieSceneFloatChannel, BlueChannel: UE.MovieSceneFloatChannel, AlphaChannel: UE.MovieSceneFloatChannel);
        RedChannel: UE.MovieSceneFloatChannel;
        GreenChannel: UE.MovieSceneFloatChannel;
        BlueChannel: UE.MovieSceneFloatChannel;
        AlphaChannel: UE.MovieSceneFloatChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraColorParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneNiagaraColorParameterTrack extends UE.MovieSceneNiagaraParameterTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraColorParameterTrack;
        static Load(InName: string): MovieSceneNiagaraColorParameterTrack;
    
        __tid_MovieSceneNiagaraColorParameterTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraEmitterChannel extends UE.MovieSceneChannel {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraEmitterChannel_0__: boolean;
    }
    
    class MovieSceneNiagaraEmitterSectionBase extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraEmitterSectionBase;
        static Load(InName: string): MovieSceneNiagaraEmitterSectionBase;
    
        __tid_MovieSceneNiagaraEmitterSectionBase_0__: boolean;
    }
    
    class MovieSceneNiagaraEmitterSection extends UE.MovieSceneNiagaraEmitterSectionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumLoops: number;
        bStartTimeIncludedInFirstLoopOnly: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraEmitterSection;
        static Load(InName: string): MovieSceneNiagaraEmitterSection;
    
        __tid_MovieSceneNiagaraEmitterSection_0__: boolean;
    }
    
    class MovieSceneNiagaraEmitterTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        bSectionsWereModified: boolean;
        EmitterHandleId: UE.Guid;
        SystemPath: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraEmitterTrack;
        static Load(InName: string): MovieSceneNiagaraEmitterTrack;
    
        __tid_MovieSceneNiagaraEmitterTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraFloatParameterSectionTemplate extends UE.MovieSceneNiagaraParameterSectionTemplate {
        constructor();
        constructor(FloatChannel: UE.MovieSceneFloatChannel);
        FloatChannel: UE.MovieSceneFloatChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraFloatParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneNiagaraFloatParameterTrack extends UE.MovieSceneNiagaraParameterTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraFloatParameterTrack;
        static Load(InName: string): MovieSceneNiagaraFloatParameterTrack;
    
        __tid_MovieSceneNiagaraFloatParameterTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraIntegerParameterSectionTemplate extends UE.MovieSceneNiagaraParameterSectionTemplate {
        constructor();
        constructor(IntegerChannel: UE.MovieSceneIntegerChannel);
        IntegerChannel: UE.MovieSceneIntegerChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraIntegerParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneNiagaraIntegerParameterTrack extends UE.MovieSceneNiagaraParameterTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraIntegerParameterTrack;
        static Load(InName: string): MovieSceneNiagaraIntegerParameterTrack;
    
        __tid_MovieSceneNiagaraIntegerParameterTrack_0__: boolean;
    }
    
    class MovieSceneNiagaraSystemSpawnSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SectionStartBehavior: UE.ENiagaraSystemSpawnSectionStartBehavior;
        SectionEvaluateBehavior: UE.ENiagaraSystemSpawnSectionEvaluateBehavior;
        SectionEndBehavior: UE.ENiagaraSystemSpawnSectionEndBehavior;
        AgeUpdateMode: UE.ENiagaraAgeUpdateMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraSystemSpawnSection;
        static Load(InName: string): MovieSceneNiagaraSystemSpawnSection;
    
        __tid_MovieSceneNiagaraSystemSpawnSection_0__: boolean;
    }
    
    class MovieSceneNiagaraSystemTrack extends UE.MovieSceneNiagaraTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraSystemTrack;
        static Load(InName: string): MovieSceneNiagaraSystemTrack;
    
        __tid_MovieSceneNiagaraSystemTrack_0__: boolean;
    }
    
    class MovieSceneTrackImplementation extends UE.MovieSceneEvalTemplateBase {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackImplementation_0__: boolean;
    }
    
    class MovieSceneNiagaraSystemTrackImplementation extends UE.MovieSceneTrackImplementation {
        constructor();
        constructor(SpawnSectionStartFrame: UE.FrameNumber, SpawnSectionEndFrame: UE.FrameNumber, SpawnSectionStartBehavior: UE.ENiagaraSystemSpawnSectionStartBehavior, SpawnSectionEvaluateBehavior: UE.ENiagaraSystemSpawnSectionEvaluateBehavior, SpawnSectionEndBehavior: UE.ENiagaraSystemSpawnSectionEndBehavior, AgeUpdateMode: UE.ENiagaraAgeUpdateMode);
        SpawnSectionStartFrame: UE.FrameNumber;
        SpawnSectionEndFrame: UE.FrameNumber;
        SpawnSectionStartBehavior: UE.ENiagaraSystemSpawnSectionStartBehavior;
        SpawnSectionEvaluateBehavior: UE.ENiagaraSystemSpawnSectionEvaluateBehavior;
        SpawnSectionEndBehavior: UE.ENiagaraSystemSpawnSectionEndBehavior;
        AgeUpdateMode: UE.ENiagaraAgeUpdateMode;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraSystemTrackImplementation_0__: boolean;
    }
    
    class MovieSceneNiagaraSystemTrackTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraSystemTrackTemplate_0__: boolean;
    }
    
    class MovieSceneNiagaraVectorParameterSectionTemplate extends UE.MovieSceneNiagaraParameterSectionTemplate {
        constructor();
        constructor(VectorChannels: FixSizeArray<UE.MovieSceneFloatChannel>, ChannelsUsed: number);
        VectorChannels: FixSizeArray<UE.MovieSceneFloatChannel>;
        ChannelsUsed: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneNiagaraVectorParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneNiagaraVectorParameterTrack extends UE.MovieSceneNiagaraParameterTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChannelsUsed: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneNiagaraVectorParameterTrack;
        static Load(InName: string): MovieSceneNiagaraVectorParameterTrack;
    
        __tid_MovieSceneNiagaraVectorParameterTrack_0__: boolean;
    }
    
    class MovieSceneObjectPathChannelKeyValue {
        constructor();
        constructor(SoftPtr: TSoftObjectPtr<UE.Object>, HardPtr: UE.Object);
        SoftPtr: TSoftObjectPtr<UE.Object>;
        HardPtr: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneObjectPathChannelKeyValue_0__: boolean;
    }
    
    class MovieSceneObjectPathChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(PropertyClass: UE.Class, Times: TArray<UE.FrameNumber>, Values: TArray<UE.MovieSceneObjectPathChannelKeyValue>, DefaultValue: UE.MovieSceneObjectPathChannelKeyValue);
        PropertyClass: UE.Class;
        Times: TArray<UE.FrameNumber>;
        Values: TArray<UE.MovieSceneObjectPathChannelKeyValue>;
        DefaultValue: UE.MovieSceneObjectPathChannelKeyValue;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneObjectPathChannel_0__: boolean;
    }
    
    class MovieSceneObjectPropertySection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ObjectChannel: UE.MovieSceneObjectPathChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneObjectPropertySection;
        static Load(InName: string): MovieSceneObjectPropertySection;
    
        __tid_MovieSceneObjectPropertySection_0__: boolean;
    }
    
    class MovieSceneObjectPropertyTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(ObjectChannel: UE.MovieSceneObjectPathChannel);
        ObjectChannel: UE.MovieSceneObjectPathChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneObjectPropertyTemplate_0__: boolean;
    }
    
    class MovieSceneObjectPropertyTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneObjectPropertyTrack;
        static Load(InName: string): MovieSceneObjectPropertyTrack;
    
        __tid_MovieSceneObjectPropertyTrack_0__: boolean;
    }
    
    class MovieSceneParameterSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoolParameterNamesAndCurves: TArray<UE.BoolParameterNameAndCurve>;
        ScalarParameterNamesAndCurves: TArray<UE.ScalarParameterNameAndCurve>;
        Vector2DParameterNamesAndCurves: TArray<UE.Vector2DParameterNameAndCurves>;
        VectorParameterNamesAndCurves: TArray<UE.VectorParameterNameAndCurves>;
        ColorParameterNamesAndCurves: TArray<UE.ColorParameterNameAndCurves>;
        TransformParameterNamesAndCurves: TArray<UE.TransformParameterNameAndCurves>;
        AddBoolParameterKey(InParameterName: string, InTime: UE.FrameNumber, InValue: boolean) : void;
        AddColorParameterKey(InParameterName: string, InTime: UE.FrameNumber, InValue: UE.LinearColor) : void;
        AddScalarParameterKey(InParameterName: string, InTime: UE.FrameNumber, InValue: number) : void;
        AddTransformParameterKey(InParameterName: string, InTime: UE.FrameNumber, InValue: UE.Transform) : void;
        AddVector2DParameterKey(InParameterName: string, InTime: UE.FrameNumber, InValue: UE.Vector2D) : void;
        AddVectorParameterKey(InParameterName: string, InTime: UE.FrameNumber, InValue: UE.Vector) : void;
        GetParameterNames(ParameterNames: $Ref<TSet<string>>) : void;
        RemoveBoolParameter(InParameterName: string) : boolean;
        RemoveColorParameter(InParameterName: string) : boolean;
        RemoveScalarParameter(InParameterName: string) : boolean;
        RemoveTransformParameter(InParameterName: string) : boolean;
        RemoveVector2DParameter(InParameterName: string) : boolean;
        RemoveVectorParameter(InParameterName: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneParameterSection;
        static Load(InName: string): MovieSceneParameterSection;
    
        __tid_MovieSceneParameterSection_0__: boolean;
    }
    
    class MovieSceneParticleChannel extends UE.MovieSceneByteChannel {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneParticleChannel_0__: boolean;
    }
    
    class MovieSceneParticleParameterSectionTemplate extends UE.MovieSceneParameterSectionTemplate {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneParticleParameterSectionTemplate_0__: boolean;
    }
    
    class MovieSceneParticleParameterTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneParticleParameterTrack;
        static Load(InName: string): MovieSceneParticleParameterTrack;
    
        __tid_MovieSceneParticleParameterTrack_0__: boolean;
    }
    
    class MovieSceneParticleSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParticleKeys: UE.MovieSceneParticleChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneParticleSection;
        static Load(InName: string): MovieSceneParticleSection;
    
        __tid_MovieSceneParticleSection_0__: boolean;
    }
    
    class MovieSceneParticleSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(ParticleKeys: UE.MovieSceneParticleChannel);
        ParticleKeys: UE.MovieSceneParticleChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneParticleSectionTemplate_0__: boolean;
    }
    
    class MovieSceneParticleTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParticleSections: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneParticleTrack;
        static Load(InName: string): MovieSceneParticleTrack;
    
        __tid_MovieSceneParticleTrack_0__: boolean;
    }
    
    class MovieSceneParticleTrackSectionRecorder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnTriggered(Component: $Nullable<UE.ParticleSystemComponent>, bActivating: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneParticleTrackSectionRecorder;
        static Load(InName: string): MovieSceneParticleTrackSectionRecorder;
    
        __tid_MovieSceneParticleTrackSectionRecorder_0__: boolean;
    }
    
    class MovieScenePiecewiseFloatBlenderSystem extends UE.MovieSceneBlenderSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePiecewiseFloatBlenderSystem;
        static Load(InName: string): MovieScenePiecewiseFloatBlenderSystem;
    
        __tid_MovieScenePiecewiseFloatBlenderSystem_0__: boolean;
    }
    
    class MovieScenePostEvalEventSystem extends UE.MovieSceneEventSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePostEvalEventSystem;
        static Load(InName: string): MovieScenePostEvalEventSystem;
    
        __tid_MovieScenePostEvalEventSystem_0__: boolean;
    }
    
    class MovieScenePostSpawnEventSystem extends UE.MovieSceneEventSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePostSpawnEventSystem;
        static Load(InName: string): MovieScenePostSpawnEventSystem;
    
        __tid_MovieScenePostSpawnEventSystem_0__: boolean;
    }
    
    class MovieScenePreAnimatedComponentTransformSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePreAnimatedComponentTransformSystem;
        static Load(InName: string): MovieScenePreAnimatedComponentTransformSystem;
    
        __tid_MovieScenePreAnimatedComponentTransformSystem_0__: boolean;
    }
    
    class MovieScenePreAnimatedStateSystemInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePreAnimatedStateSystemInterface;
        static Load(InName: string): MovieScenePreAnimatedStateSystemInterface;
    
        __tid_MovieScenePreAnimatedStateSystemInterface_0__: boolean;
    }
    
    class MovieScenePreSpawnEventSystem extends UE.MovieSceneEventSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePreSpawnEventSystem;
        static Load(InName: string): MovieScenePreSpawnEventSystem;
    
        __tid_MovieScenePreSpawnEventSystem_0__: boolean;
    }
    
    class MovieScenePrimitiveMaterialSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialChannel: UE.MovieSceneObjectPathChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePrimitiveMaterialSection;
        static Load(InName: string): MovieScenePrimitiveMaterialSection;
    
        __tid_MovieScenePrimitiveMaterialSection_0__: boolean;
    }
    
    class MovieScenePrimitiveMaterialTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(MaterialIndex: number, MaterialChannel: UE.MovieSceneObjectPathChannel);
        MaterialIndex: number;
        MaterialChannel: UE.MovieSceneObjectPathChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieScenePrimitiveMaterialTemplate_0__: boolean;
    }
    
    class MovieScenePrimitiveMaterialTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieScenePrimitiveMaterialTrack;
        static Load(InName: string): MovieScenePrimitiveMaterialTrack;
    
        __tid_MovieScenePrimitiveMaterialTrack_0__: boolean;
    }
    
    class MovieSceneQuaternionInterpolationRotationSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneQuaternionInterpolationRotationSystem;
        static Load(InName: string): MovieSceneQuaternionInterpolationRotationSystem;
    
        __tid_MovieSceneQuaternionInterpolationRotationSystem_0__: boolean;
    }
    
    class MovieSceneRestorePreAnimatedStateSystem extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneRestorePreAnimatedStateSystem;
        static Load(InName: string): MovieSceneRestorePreAnimatedStateSystem;
    
        __tid_MovieSceneRestorePreAnimatedStateSystem_0__: boolean;
    }
    
    class MovieSceneSceneComponentImpersonator extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSceneComponentImpersonator;
        static Load(InName: string): MovieSceneSceneComponentImpersonator;
    
        __tid_MovieSceneSceneComponentImpersonator_0__: boolean;
    }
    
    class MovieSceneSegment {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSegment_0__: boolean;
    }
    
    class MovieSceneSequenceInstanceData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSequenceInstanceData_0__: boolean;
    }
    
    class MovieSceneSkeletalAnimationParams {
        constructor();
        constructor(Animation: UE.AnimSequenceBase, FirstLoopStartFrameOffset: UE.FrameNumber, StartFrameOffset: UE.FrameNumber, EndFrameOffset: UE.FrameNumber, PlayRate: number, bReverse: boolean, SlotName: string, Weight: UE.MovieSceneFloatChannel, bSkipAnimNotifiers: boolean, bForceCustomMode: boolean, StartOffset: number, EndOffset: number);
        Animation: UE.AnimSequenceBase;
        FirstLoopStartFrameOffset: UE.FrameNumber;
        StartFrameOffset: UE.FrameNumber;
        EndFrameOffset: UE.FrameNumber;
        PlayRate: number;
        bReverse: boolean;
        SlotName: string;
        Weight: UE.MovieSceneFloatChannel;
        bSkipAnimNotifiers: boolean;
        bForceCustomMode: boolean;
        StartOffset: number;
        EndOffset: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSkeletalAnimationParams_0__: boolean;
    }
    
    class MovieSceneSkeletalAnimationSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Params: UE.MovieSceneSkeletalAnimationParams;
        AnimSequence: UE.AnimSequence;
        Animation: UE.AnimSequenceBase;
        StartOffset: number;
        EndOffset: number;
        PlayRate: number;
        bReverse: boolean;
        SlotName: string;
        StartLocationOffset: UE.Vector;
        StartRotationOffset: UE.Rotator;
        bMatchWithPrevious: boolean;
        MatchedBoneName: string;
        MatchedLocationOffset: UE.Vector;
        MatchedRotationOffset: UE.Rotator;
        bMatchTranslation: boolean;
        bMatchIncludeZHeight: boolean;
        bMatchRotationYaw: boolean;
        bMatchRotationPitch: boolean;
        bMatchRotationRoll: boolean;
        bShowSkeleton: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSkeletalAnimationSection;
        static Load(InName: string): MovieSceneSkeletalAnimationSection;
    
        __tid_MovieSceneSkeletalAnimationSection_0__: boolean;
    }
    
    class MovieSceneSkeletalAnimationSectionTemplateParameters extends UE.MovieSceneSkeletalAnimationParams {
        constructor();
        constructor(SectionStartTime: UE.FrameNumber, SectionEndTime: UE.FrameNumber);
        SectionStartTime: UE.FrameNumber;
        SectionEndTime: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSkeletalAnimationSectionTemplateParameters_0__: boolean;
    }
    
    class MovieSceneSkeletalAnimationSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(Params: UE.MovieSceneSkeletalAnimationSectionTemplateParameters);
        Params: UE.MovieSceneSkeletalAnimationSectionTemplateParameters;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSkeletalAnimationSectionTemplate_0__: boolean;
    }
    
    class MovieSceneSkeletalAnimRootMotionTrackParams {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSkeletalAnimRootMotionTrackParams_0__: boolean;
    }
    
    class MovieSceneSkeletalAnimationTrack extends UE.MovieSceneNameableTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimationSections: TArray<UE.MovieSceneSection>;
        bUseLegacySectionIndexBlend: boolean;
        RootMotionParams: UE.MovieSceneSkeletalAnimRootMotionTrackParams;
        bBlendFirstChildOfRoot: boolean;
        bShowRootMotionTrail: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSkeletalAnimationTrack;
        static Load(InName: string): MovieSceneSkeletalAnimationTrack;
    
        __tid_MovieSceneSkeletalAnimationTrack_0__: boolean;
    }
    
    class MovieSceneSlomoSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatCurve: UE.MovieSceneFloatChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSlomoSection;
        static Load(InName: string): MovieSceneSlomoSection;
    
        __tid_MovieSceneSlomoSection_0__: boolean;
    }
    
    class MovieSceneSlomoSectionTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        constructor(SlomoCurve: UE.MovieSceneFloatChannel);
        SlomoCurve: UE.MovieSceneFloatChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSlomoSectionTemplate_0__: boolean;
    }
    
    class MovieSceneSlomoTrack extends UE.MovieSceneFloatTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSlomoTrack;
        static Load(InName: string): MovieSceneSlomoTrack;
    
        __tid_MovieSceneSlomoTrack_0__: boolean;
    }
    
    class MovieSceneSpawnablesSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSpawnablesSystem;
        static Load(InName: string): MovieSceneSpawnablesSystem;
    
        __tid_MovieSceneSpawnablesSystem_0__: boolean;
    }
    
    class MovieSceneSpawnSection extends UE.MovieSceneBoolSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSpawnSection;
        static Load(InName: string): MovieSceneSpawnSection;
    
        __tid_MovieSceneSpawnSection_0__: boolean;
    }
    
    class MovieSceneSpawnTrack extends UE.MovieSceneTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sections: TArray<UE.MovieSceneSection>;
        ObjectGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneSpawnTrack;
        static Load(InName: string): MovieSceneSpawnTrack;
    
        __tid_MovieSceneSpawnTrack_0__: boolean;
    }
    
    class MovieSceneStringChannel extends UE.MovieSceneChannel {
        constructor();
        constructor(Times: TArray<UE.FrameNumber>, Values: TArray<string>, DefaultValue: string, bHasDefaultValue: boolean);
        Times: TArray<UE.FrameNumber>;
        Values: TArray<string>;
        DefaultValue: string;
        bHasDefaultValue: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneStringChannel_0__: boolean;
    }
    
    class MovieSceneStringPropertySectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(StringCurve: UE.MovieSceneStringChannel);
        StringCurve: UE.MovieSceneStringChannel;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneStringPropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneStringSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StringCurve: UE.MovieSceneStringChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneStringSection;
        static Load(InName: string): MovieSceneStringSection;
    
        __tid_MovieSceneStringSection_0__: boolean;
    }
    
    class MovieSceneStringTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneStringTrack;
        static Load(InName: string): MovieSceneStringTrack;
    
        __tid_MovieSceneStringTrack_0__: boolean;
    }
    
    class MovieSceneSubSectionData {
        constructor();
        constructor(Section: TWeakObjectPtr<UE.MovieSceneSubSection>, ObjectBindingId: UE.Guid, Flags: UE.ESectionEvaluationFlags);
        Section: TWeakObjectPtr<UE.MovieSceneSubSection>;
        ObjectBindingId: UE.Guid;
        Flags: UE.ESectionEvaluationFlags;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSubSectionData_0__: boolean;
    }
    
    class MovieSceneSubSequenceTreeEntry {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneSubSequenceTreeEntry_0__: boolean;
    }
    
    class MovieSceneToolsPropertyTrackSettings {
        constructor();
        constructor(ComponentName: string, PropertyName: string);
        ComponentName: string;
        PropertyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneToolsPropertyTrackSettings_0__: boolean;
    }
    
    class MovieSceneToolsFbxSettings {
        constructor();
        constructor(FbxPropertyName: string, PropertyPath: UE.MovieSceneToolsPropertyTrackSettings);
        FbxPropertyName: string;
        PropertyPath: UE.MovieSceneToolsPropertyTrackSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneToolsFbxSettings_0__: boolean;
    }
    
    class MovieSceneToolsProjectSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultStartTime: number;
        DefaultDuration: number;
        ShotDirectory: string;
        ShotPrefix: string;
        FirstShotNumber: number;
        ShotIncrement: number;
        ShotNumDigits: number;
        TakeNumDigits: number;
        FirstTakeNumber: number;
        TakeSeparator: string;
        SubSequenceSeparator: string;
        FbxSettings: TArray<UE.MovieSceneToolsFbxSettings>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneToolsProjectSettings;
        static Load(InName: string): MovieSceneToolsProjectSettings;
    
        __tid_MovieSceneToolsProjectSettings_0__: boolean;
    }
    
    class MovieSceneTrackInstanceComponent {
        constructor();
        constructor(Owner: UE.MovieSceneSection, TrackInstanceClass: UE.Class);
        Owner: UE.MovieSceneSection;
        TrackInstanceClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackInstanceComponent_0__: boolean;
    }
    
    class MovieSceneTrackInstanceEntry {
        constructor();
        constructor(BoundObject: UE.Object, TrackInstance: UE.MovieSceneTrackInstance);
        BoundObject: UE.Object;
        TrackInstance: UE.MovieSceneTrackInstance;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneTrackInstanceEntry_0__: boolean;
    }
    
    class MovieSceneTrackInstanceInstantiator extends UE.MovieSceneEntityInstantiatorSystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTrackInstanceInstantiator;
        static Load(InName: string): MovieSceneTrackInstanceInstantiator;
    
        __tid_MovieSceneTrackInstanceInstantiator_0__: boolean;
    }
    
    class MovieSceneTrackInstanceSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Instantiator: UE.MovieSceneTrackInstanceInstantiator;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTrackInstanceSystem;
        static Load(InName: string): MovieSceneTrackInstanceSystem;
    
        __tid_MovieSceneTrackInstanceSystem_0__: boolean;
    }
    
    class MovieSceneTrackTemplateProducer extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTrackTemplateProducer;
        static Load(InName: string): MovieSceneTrackTemplateProducer;
    
        __tid_MovieSceneTrackTemplateProducer_0__: boolean;
    }
    
    class MovieSceneTransformOrigin extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BP_GetTransformOrigin() : UE.Transform;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTransformOrigin;
        static Load(InName: string): MovieSceneTransformOrigin;
    
        __tid_MovieSceneTransformOrigin_0__: boolean;
    }
    
    class MovieSceneTransformOriginSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTransformOriginSystem;
        static Load(InName: string): MovieSceneTransformOriginSystem;
    
        __tid_MovieSceneTransformOriginSystem_0__: boolean;
    }
    
    class MovieSceneTransformTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneTransformTrack;
        static Load(InName: string): MovieSceneTransformTrack;
    
        __tid_MovieSceneTransformTrack_0__: boolean;
    }
    
    class MovieSceneUserImportFBXControlRigSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportedFileName: string;
        ImportedStartTime: UE.FrameNumber;
        ImportedEndTime: UE.FrameNumber;
        ImportedNodeNames: TArray<string>;
        ImportedFrameRate: string;
        FindAndReplaceStrings: TArray<UE.ControlFindReplaceString>;
        bForceFrontXAxis: boolean;
        bImportOntoSelectedControls: boolean;
        TimeToInsertOrReplaceAnimation: UE.FrameNumber;
        bInsertAnimation: boolean;
        bSpecifyTimeRange: boolean;
        StartTimeRange: UE.FrameNumber;
        EndTimeRange: UE.FrameNumber;
        ControlChannelMappings: TArray<UE.ControlToTransformMappings>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneUserImportFBXControlRigSettings;
        static Load(InName: string): MovieSceneUserImportFBXControlRigSettings;
    
        __tid_MovieSceneUserImportFBXControlRigSettings_0__: boolean;
    }
    
    class MovieSceneUserImportFBXSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMatchByNameOnly: boolean;
        bForceFrontXAxis: boolean;
        bCreateCameras: boolean;
        bReduceKeys: boolean;
        ReduceKeysTolerance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneUserImportFBXSettings;
        static Load(InName: string): MovieSceneUserImportFBXSettings;
    
        __tid_MovieSceneUserImportFBXSettings_0__: boolean;
    }
    
    class MovieSceneUserThumbnailSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDrawThumbnails: boolean;
        bDrawSingleThumbnails: boolean;
        ThumbnailSize: UE.IntPoint;
        Quality: UE.EThumbnailQuality;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneUserThumbnailSettings;
        static Load(InName: string): MovieSceneUserThumbnailSettings;
    
        __tid_MovieSceneUserThumbnailSettings_0__: boolean;
    }
    
    class MovieSceneVectorKeyStructBase extends UE.MovieSceneKeyStruct {
        constructor();
        constructor(Time: UE.FrameNumber);
        Time: UE.FrameNumber;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneVectorKeyStructBase_0__: boolean;
    }
    
    class MovieSceneVector2DKeyStruct extends UE.MovieSceneVectorKeyStructBase {
        constructor();
        constructor(Vector: UE.Vector2D);
        Vector: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneVector2DKeyStruct_0__: boolean;
    }
    
    class MovieSceneVector4KeyStruct extends UE.MovieSceneVectorKeyStructBase {
        constructor();
        constructor(Vector: UE.Vector4);
        Vector: UE.Vector4;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneVector4KeyStruct_0__: boolean;
    }
    
    class MovieSceneVectorKeyStruct extends UE.MovieSceneVectorKeyStructBase {
        constructor();
        constructor(Vector: UE.Vector);
        Vector: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneVectorKeyStruct_0__: boolean;
    }
    
    class MovieSceneVectorPropertySectionTemplate extends UE.MovieScenePropertySectionTemplate {
        constructor();
        constructor(ComponentCurves: FixSizeArray<UE.MovieSceneFloatChannel>, NumChannelsUsed: number, BlendType: UE.EMovieSceneBlendType);
        ComponentCurves: FixSizeArray<UE.MovieSceneFloatChannel>;
        NumChannelsUsed: number;
        BlendType: UE.EMovieSceneBlendType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneVectorPropertySectionTemplate_0__: boolean;
    }
    
    class MovieSceneVectorSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Curves: FixSizeArray<UE.MovieSceneFloatChannel>;
        ChannelsUsed: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneVectorSection;
        static Load(InName: string): MovieSceneVectorSection;
    
        __tid_MovieSceneVectorSection_0__: boolean;
    }
    
    class MovieSceneVectorTrack extends UE.MovieScenePropertyTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumChannelsUsed: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneVectorTrack;
        static Load(InName: string): MovieSceneVectorTrack;
    
        __tid_MovieSceneVectorTrack_0__: boolean;
    }
    
    class MovieSceneVisibilitySectionRecorderSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRecordVisibility: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneVisibilitySectionRecorderSettings;
        static Load(InName: string): MovieSceneVisibilitySectionRecorderSettings;
    
        __tid_MovieSceneVisibilitySectionRecorderSettings_0__: boolean;
    }
    
    class MovieSceneVisibilitySectionTemplate extends UE.MovieSceneBoolPropertySectionTemplate {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneVisibilitySectionTemplate_0__: boolean;
    }
    
    class MovieSceneVisibilityTrack extends UE.MovieSceneBoolTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneVisibilityTrack;
        static Load(InName: string): MovieSceneVisibilityTrack;
    
        __tid_MovieSceneVisibilityTrack_0__: boolean;
    }
    
    class MovieSceneWarpCounter {
        constructor();
        constructor(WarpCounts: TArray<number>);
        WarpCounts: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneWarpCounter_0__: boolean;
    }
    
    class MovieSceneWidgetMaterialSectionTemplate extends UE.MovieSceneParameterSectionTemplate {
        constructor();
        constructor(BrushPropertyNamePath: TArray<string>);
        BrushPropertyNamePath: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MovieSceneWidgetMaterialSectionTemplate_0__: boolean;
    }
    
    class MovieSceneWidgetMaterialTrack extends UE.MovieSceneMaterialTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrushPropertyNamePath: TArray<string>;
        TrackName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MovieSceneWidgetMaterialTrack;
        static Load(InName: string): MovieSceneWidgetMaterialTrack;
    
        __tid_MovieSceneWidgetMaterialTrack_0__: boolean;
    }
    
    class MRMeshConfiguration {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MRMeshConfiguration_0__: boolean;
    }
    
    class MTDResult {
        constructor();
        constructor(Direction: UE.Vector, Distance: number);
        Direction: UE.Vector;
        Distance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MTDResult_0__: boolean;
    }
    
    class MulticastDelegateProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MulticastDelegateProperty;
        static Load(InName: string): MulticastDelegateProperty;
    
        __tid_MulticastDelegateProperty_0__: boolean;
    }
    
    class PropertyWrapper extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyWrapper;
        static Load(InName: string): PropertyWrapper;
    
        __tid_PropertyWrapper_0__: boolean;
    }
    
    class MulticastDelegatePropertyWrapper extends UE.PropertyWrapper {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MulticastDelegatePropertyWrapper;
        static Load(InName: string): MulticastDelegatePropertyWrapper;
    
        __tid_MulticastDelegatePropertyWrapper_0__: boolean;
    }
    
    class MulticastInlineDelegateProperty extends UE.MulticastDelegateProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MulticastInlineDelegateProperty;
        static Load(InName: string): MulticastInlineDelegateProperty;
    
        __tid_MulticastInlineDelegateProperty_0__: boolean;
    }
    
    class MulticastInlineDelegatePropertyWrapper extends UE.MulticastDelegatePropertyWrapper {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MulticastInlineDelegatePropertyWrapper;
        static Load(InName: string): MulticastInlineDelegatePropertyWrapper;
    
        __tid_MulticastInlineDelegatePropertyWrapper_0__: boolean;
    }
    
    class MulticastSparseDelegateProperty extends UE.MulticastDelegateProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MulticastSparseDelegateProperty;
        static Load(InName: string): MulticastSparseDelegateProperty;
    
        __tid_MulticastSparseDelegateProperty_0__: boolean;
    }
    
    class MultiClickSequenceInputBehavior extends UE.AnyButtonInputBehavior {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MultiClickSequenceInputBehavior;
        static Load(InName: string): MultiClickSequenceInputBehavior;
    
        __tid_MultiClickSequenceInputBehavior_0__: boolean;
    }
    
    class TextLayoutWidget extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShapedTextOptions: UE.ShapedTextOptions;
        Justification: UE.ETextJustify;
        WrappingPolicy: UE.ETextWrappingPolicy;
        AutoWrapText: boolean;
        WrapTextAt: number;
        Margin: UE.Margin;
        LineHeightPercentage: number;
        SetJustification(InJustification: UE.ETextJustify) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextLayoutWidget;
        static Load(InName: string): TextLayoutWidget;
    
        __tid_TextLayoutWidget_0__: boolean;
    }
    
    class MultiLineEditableText extends UE.TextLayoutWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        HintText: string;
        HintTextDelegate: $Delegate<() => string>;
        WidgetStyle: UE.TextBlockStyle;
        bIsReadOnly: boolean;
        Font: UE.SlateFontInfo;
        SelectAllTextWhenFocused: boolean;
        ClearTextSelectionOnFocusLoss: boolean;
        RevertTextOnEscape: boolean;
        ClearKeyboardFocusOnCommit: boolean;
        AllowContextMenu: boolean;
        VirtualKeyboardOptions: UE.VirtualKeyboardOptions;
        VirtualKeyboardDismissAction: UE.EVirtualKeyboardDismissAction;
        OnTextChanged: $MulticastDelegate<(Text: string) => void>;
        OnTextCommitted: $MulticastDelegate<(Text: string, CommitMethod: UE.ETextCommit) => void>;
        GetHintText() : string;
        GetText() : string;
        OnMultiLineEditableTextChangedEvent__DelegateSignature(Text: string) : void;
        OnMultiLineEditableTextCommittedEvent__DelegateSignature(Text: string, CommitMethod: UE.ETextCommit) : void;
        SetHintText(InHintText: string) : void;
        SetIsReadOnly(bReadOnly: boolean) : void;
        SetText(InText: string) : void;
        SetWidgetStyle(InWidgetStyle: UE.TextBlockStyle) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MultiLineEditableText;
        static Load(InName: string): MultiLineEditableText;
    
        __tid_MultiLineEditableText_0__: boolean;
    }
    
    class MultiLineEditableTextBox extends UE.TextLayoutWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        HintText: string;
        HintTextDelegate: $Delegate<() => string>;
        WidgetStyle: UE.EditableTextBoxStyle;
        TextStyle: UE.TextBlockStyle;
        bIsReadOnly: boolean;
        AllowContextMenu: boolean;
        VirtualKeyboardOptions: UE.VirtualKeyboardOptions;
        VirtualKeyboardDismissAction: UE.EVirtualKeyboardDismissAction;
        Style: UE.SlateWidgetStyleAsset;
        Font: UE.SlateFontInfo;
        ForegroundColor: UE.LinearColor;
        BackgroundColor: UE.LinearColor;
        ReadOnlyForegroundColor: UE.LinearColor;
        OnTextChanged: $MulticastDelegate<(Text: string) => void>;
        OnTextCommitted: $MulticastDelegate<(Text: string, CommitMethod: UE.ETextCommit) => void>;
        GetHintText() : string;
        GetText() : string;
        OnMultiLineEditableTextBoxChangedEvent__DelegateSignature(Text: string) : void;
        OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature(Text: string, CommitMethod: UE.ETextCommit) : void;
        SetError(InError: string) : void;
        SetHintText(InHintText: string) : void;
        SetIsReadOnly(bReadOnly: boolean) : void;
        SetText(InText: string) : void;
        SetTextStyle(InTextStyle: UE.TextBlockStyle) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MultiLineEditableTextBox;
        static Load(InName: string): MultiLineEditableTextBox;
    
        __tid_MultiLineEditableTextBox_0__: boolean;
    }
    
    class MultiScaleToolOptions {
        constructor();
        constructor(XScale: number, YScale: number, PivotType: UE.EMultiScalePivotType);
        XScale: number;
        YScale: number;
        PivotType: UE.EMultiScalePivotType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MultiScaleToolOptions_0__: boolean;
    }
    
    class MultiSelectionTool extends UE.InteractiveTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MultiSelectionTool;
        static Load(InName: string): MultiSelectionTool;
    
        __tid_MultiSelectionTool_0__: boolean;
    }
    
    class MyPluginStruct {
        constructor();
        constructor(TestString: string);
        TestString: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_MyPluginStruct_0__: boolean;
    }
    
    class MyPluginObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MyStruct: UE.MyPluginStruct;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): MyPluginObject;
        static Load(InName: string): MyPluginObject;
    
        __tid_MyPluginObject_0__: boolean;
    }
    
    class NamedColor {
        constructor();
        constructor(Value: UE.Color, Name: string);
        Value: UE.Color;
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedColor_0__: boolean;
    }
    
    class NamedFloat {
        constructor();
        constructor(Value: number, Name: string);
        Value: number;
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedFloat_0__: boolean;
    }
    
    class NamedInterface {
        constructor();
        constructor(InterfaceName: string, InterfaceObject: UE.Object);
        InterfaceName: string;
        InterfaceObject: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedInterface_0__: boolean;
    }
    
    class NamedInterfaceDef {
        constructor();
        constructor(InterfaceName: string, InterfaceClassName: string);
        InterfaceName: string;
        InterfaceClassName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedInterfaceDef_0__: boolean;
    }
    
    class NamedInterfaces extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NamedInterfaces: TArray<UE.NamedInterface>;
        NamedInterfaceDefs: TArray<UE.NamedInterfaceDef>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NamedInterfaces;
        static Load(InName: string): NamedInterfaces;
    
        __tid_NamedInterfaces_0__: boolean;
    }
    
    class NamedNetDriver {
        constructor();
        constructor(NetDriver: UE.NetDriver);
        NetDriver: UE.NetDriver;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedNetDriver_0__: boolean;
    }
    
    class NamedSlot extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NamedSlot;
        static Load(InName: string): NamedSlot;
    
        __tid_NamedSlot_0__: boolean;
    }
    
    class NamedSlotInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NamedSlotInterface;
        static Load(InName: string): NamedSlotInterface;
    
        __tid_NamedSlotInterface_0__: boolean;
    }
    
    class NamedTransform {
        constructor();
        constructor(Value: UE.Transform, Name: string);
        Value: UE.Transform;
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedTransform_0__: boolean;
    }
    
    class NamedVector {
        constructor();
        constructor(Value: UE.Vector, Name: string);
        Value: UE.Vector;
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NamedVector_0__: boolean;
    }
    
    class NameProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NameProperty;
        static Load(InName: string): NameProperty;
    
        __tid_NameProperty_0__: boolean;
    }
    
    class NativeCodeGenCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NativeCodeGenCommandlet;
        static Load(InName: string): NativeCodeGenCommandlet;
    
        __tid_NativeCodeGenCommandlet_0__: boolean;
    }
    
    class NativeWidgetHost extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NativeWidgetHost;
        static Load(InName: string): NativeWidgetHost;
    
        __tid_NativeWidgetHost_0__: boolean;
    }
    
    class NavAgentInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavAgentInterface;
        static Load(InName: string): NavAgentInterface;
    
        __tid_NavAgentInterface_0__: boolean;
    }
    
    class NavAreaBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavAreaBase;
        static Load(InName: string): NavAreaBase;
    
        __tid_NavAreaBase_0__: boolean;
    }
    
    class NavArea extends UE.NavAreaBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultCost: number;
        FixedAreaEnteringCost: number;
        DrawColor: UE.Color;
        SupportedAgents: UE.NavAgentSelector;
        bSupportsAgent0: boolean;
        bSupportsAgent1: boolean;
        bSupportsAgent2: boolean;
        bSupportsAgent3: boolean;
        bSupportsAgent4: boolean;
        bSupportsAgent5: boolean;
        bSupportsAgent6: boolean;
        bSupportsAgent7: boolean;
        bSupportsAgent8: boolean;
        bSupportsAgent9: boolean;
        bSupportsAgent10: boolean;
        bSupportsAgent11: boolean;
        bSupportsAgent12: boolean;
        bSupportsAgent13: boolean;
        bSupportsAgent14: boolean;
        bSupportsAgent15: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavArea;
        static Load(InName: string): NavArea;
    
        __tid_NavArea_0__: boolean;
    }
    
    class NavArea_Default extends UE.NavArea {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavArea_Default;
        static Load(InName: string): NavArea_Default;
    
        __tid_NavArea_Default_0__: boolean;
    }
    
    class NavArea_LowHeight extends UE.NavArea {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavArea_LowHeight;
        static Load(InName: string): NavArea_LowHeight;
    
        __tid_NavArea_LowHeight_0__: boolean;
    }
    
    class NavArea_Null extends UE.NavArea {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavArea_Null;
        static Load(InName: string): NavArea_Null;
    
        __tid_NavArea_Null_0__: boolean;
    }
    
    class NavArea_Obstacle extends UE.NavArea {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavArea_Obstacle;
        static Load(InName: string): NavArea_Obstacle;
    
        __tid_NavArea_Obstacle_0__: boolean;
    }
    
    class NavAreaMeta extends UE.NavArea {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavAreaMeta;
        static Load(InName: string): NavAreaMeta;
    
        __tid_NavAreaMeta_0__: boolean;
    }
    
    class NavAreaMeta_SwitchByAgent extends UE.NavAreaMeta {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Agent0Area: UE.Class;
        Agent1Area: UE.Class;
        Agent2Area: UE.Class;
        Agent3Area: UE.Class;
        Agent4Area: UE.Class;
        Agent5Area: UE.Class;
        Agent6Area: UE.Class;
        Agent7Area: UE.Class;
        Agent8Area: UE.Class;
        Agent9Area: UE.Class;
        Agent10Area: UE.Class;
        Agent11Area: UE.Class;
        Agent12Area: UE.Class;
        Agent13Area: UE.Class;
        Agent14Area: UE.Class;
        Agent15Area: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavAreaMeta_SwitchByAgent;
        static Load(InName: string): NavAreaMeta_SwitchByAgent;
    
        __tid_NavAreaMeta_SwitchByAgent_0__: boolean;
    }
    
    class NavAvoidanceData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavAvoidanceData_0__: boolean;
    }
    
    class NavCollisionCylinder {
        constructor();
        constructor(Offset: UE.Vector, Radius: number, Height: number);
        Offset: UE.Vector;
        Radius: number;
        Height: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavCollisionCylinder_0__: boolean;
    }
    
    class NavCollisionBox {
        constructor();
        constructor(Offset: UE.Vector, Extent: UE.Vector);
        Offset: UE.Vector;
        Extent: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavCollisionBox_0__: boolean;
    }
    
    class NavCollision extends UE.NavCollisionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CylinderCollision: TArray<UE.NavCollisionCylinder>;
        BoxCollision: TArray<UE.NavCollisionBox>;
        AreaClass: UE.Class;
        bGatherConvexGeometry: boolean;
        bCreateOnClient: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavCollision;
        static Load(InName: string): NavCollision;
    
        __tid_NavCollision_0__: boolean;
    }
    
    class NavEdgeProviderInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavEdgeProviderInterface;
        static Load(InName: string): NavEdgeProviderInterface;
    
        __tid_NavEdgeProviderInterface_0__: boolean;
    }
    
    class NavigationFilterArea {
        constructor();
        constructor(AreaClass: UE.Class, TravelCostOverride: number, EnteringCostOverride: number, bIsExcluded: boolean, bOverrideTravelCost: boolean, bOverrideEnteringCost: boolean);
        AreaClass: UE.Class;
        TravelCostOverride: number;
        EnteringCostOverride: number;
        bIsExcluded: boolean;
        bOverrideTravelCost: boolean;
        bOverrideEnteringCost: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavigationFilterArea_0__: boolean;
    }
    
    class NavigationFilterFlags {
        constructor();
        constructor(bNavFlag0: boolean, bNavFlag1: boolean, bNavFlag2: boolean, bNavFlag3: boolean, bNavFlag4: boolean, bNavFlag5: boolean, bNavFlag6: boolean, bNavFlag7: boolean, bNavFlag8: boolean, bNavFlag9: boolean, bNavFlag10: boolean, bNavFlag11: boolean, bNavFlag12: boolean, bNavFlag13: boolean, bNavFlag14: boolean, bNavFlag15: boolean);
        bNavFlag0: boolean;
        bNavFlag1: boolean;
        bNavFlag2: boolean;
        bNavFlag3: boolean;
        bNavFlag4: boolean;
        bNavFlag5: boolean;
        bNavFlag6: boolean;
        bNavFlag7: boolean;
        bNavFlag8: boolean;
        bNavFlag9: boolean;
        bNavFlag10: boolean;
        bNavFlag11: boolean;
        bNavFlag12: boolean;
        bNavFlag13: boolean;
        bNavFlag14: boolean;
        bNavFlag15: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavigationFilterFlags_0__: boolean;
    }
    
    class NavigationQueryFilter extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Areas: TArray<UE.NavigationFilterArea>;
        IncludeFlags: UE.NavigationFilterFlags;
        ExcludeFlags: UE.NavigationFilterFlags;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationQueryFilter;
        static Load(InName: string): NavigationQueryFilter;
    
        __tid_NavigationQueryFilter_0__: boolean;
    }
    
    class NavFilter_AIControllerDefault extends UE.NavigationQueryFilter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavFilter_AIControllerDefault;
        static Load(InName: string): NavFilter_AIControllerDefault;
    
        __tid_NavFilter_AIControllerDefault_0__: boolean;
    }
    
    class NavGraphEdge {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavGraphEdge_0__: boolean;
    }
    
    class NavGraphNode {
        constructor();
        constructor(Owner: UE.Object);
        Owner: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavGraphNode_0__: boolean;
    }
    
    class NavigationDataInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationDataInterface;
        static Load(InName: string): NavigationDataInterface;
    
        __tid_NavigationDataInterface_0__: boolean;
    }
    
    class NavigationEvent extends UE.InputEvent {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavigationEvent_0__: boolean;
    }
    
    class NavigationGraph extends UE.NavigationData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationGraph;
        static Load(InName: string): NavigationGraph;
    
        __tid_NavigationGraph_0__: boolean;
    }
    
    class NavigationGraphNode extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationGraphNode;
        static Load(InName: string): NavigationGraphNode;
    
        __tid_NavigationGraphNode_0__: boolean;
    }
    
    class NavigationGraphNodeComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Node: UE.NavGraphNode;
        NextNodeComponent: UE.NavigationGraphNodeComponent;
        PrevNodeComponent: UE.NavigationGraphNodeComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationGraphNodeComponent;
        static Load(InName: string): NavigationGraphNodeComponent;
    
        __tid_NavigationGraphNodeComponent_0__: boolean;
    }
    
    class NavigationInvokerComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TileGenerationRadius: number;
        TileRemovalRadius: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationInvokerComponent;
        static Load(InName: string): NavigationInvokerComponent;
    
        __tid_NavigationInvokerComponent_0__: boolean;
    }
    
    class NavigationLinkBase {
        constructor();
        constructor(LeftProjectHeight: number, MaxFallDownLength: number, SnapRadius: number, SnapHeight: number, SupportedAgents: UE.NavAgentSelector, bSupportsAgent0: boolean, bSupportsAgent1: boolean, bSupportsAgent2: boolean, bSupportsAgent3: boolean, bSupportsAgent4: boolean, bSupportsAgent5: boolean, bSupportsAgent6: boolean, bSupportsAgent7: boolean, bSupportsAgent8: boolean, bSupportsAgent9: boolean, bSupportsAgent10: boolean, bSupportsAgent11: boolean, bSupportsAgent12: boolean, bSupportsAgent13: boolean, bSupportsAgent14: boolean, bSupportsAgent15: boolean, Description: string, Direction: UE.ENavLinkDirection, bUseSnapHeight: boolean, bSnapToCheapestArea: boolean, bCustomFlag0: boolean, bCustomFlag1: boolean, bCustomFlag2: boolean, bCustomFlag3: boolean, bCustomFlag4: boolean, bCustomFlag5: boolean, bCustomFlag6: boolean, bCustomFlag7: boolean, AreaClass: UE.Class);
        LeftProjectHeight: number;
        MaxFallDownLength: number;
        SnapRadius: number;
        SnapHeight: number;
        SupportedAgents: UE.NavAgentSelector;
        bSupportsAgent0: boolean;
        bSupportsAgent1: boolean;
        bSupportsAgent2: boolean;
        bSupportsAgent3: boolean;
        bSupportsAgent4: boolean;
        bSupportsAgent5: boolean;
        bSupportsAgent6: boolean;
        bSupportsAgent7: boolean;
        bSupportsAgent8: boolean;
        bSupportsAgent9: boolean;
        bSupportsAgent10: boolean;
        bSupportsAgent11: boolean;
        bSupportsAgent12: boolean;
        bSupportsAgent13: boolean;
        bSupportsAgent14: boolean;
        bSupportsAgent15: boolean;
        Description: string;
        Direction: UE.ENavLinkDirection;
        bUseSnapHeight: boolean;
        bSnapToCheapestArea: boolean;
        bCustomFlag0: boolean;
        bCustomFlag1: boolean;
        bCustomFlag2: boolean;
        bCustomFlag3: boolean;
        bCustomFlag4: boolean;
        bCustomFlag5: boolean;
        bCustomFlag6: boolean;
        bCustomFlag7: boolean;
        AreaClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavigationLinkBase_0__: boolean;
    }
    
    class NavigationLink extends UE.NavigationLinkBase {
        constructor();
        constructor(Left: UE.Vector, Right: UE.Vector);
        Left: UE.Vector;
        Right: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavigationLink_0__: boolean;
    }
    
    class NavigationPathGenerator extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationPathGenerator;
        static Load(InName: string): NavigationPathGenerator;
    
        __tid_NavigationPathGenerator_0__: boolean;
    }
    
    class NavigationSegmentLink extends UE.NavigationLinkBase {
        constructor();
        constructor(LeftStart: UE.Vector, LeftEnd: UE.Vector, RightStart: UE.Vector, RightEnd: UE.Vector);
        LeftStart: UE.Vector;
        LeftEnd: UE.Vector;
        RightStart: UE.Vector;
        RightEnd: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavigationSegmentLink_0__: boolean;
    }
    
    class NavigationSimulationArguments {
        constructor();
        constructor(UserIndex: number, NavigationGenesis: UE.ENavigationGenesis, UINavigation: UE.EUINavigation, bOverrideUINavigation: boolean, bShowPreview: boolean);
        UserIndex: number;
        NavigationGenesis: UE.ENavigationGenesis;
        UINavigation: UE.EUINavigation;
        bOverrideUINavigation: boolean;
        bShowPreview: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavigationSimulationArguments_0__: boolean;
    }
    
    class NavigationSystemModuleConfig extends UE.NavigationSystemConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bStrictlyStatic: boolean;
        bCreateOnClient: boolean;
        bAutoSpawnMissingNavData: boolean;
        bSpawnNavDataInNavBoundsLevel: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationSystemModuleConfig;
        static Load(InName: string): NavigationSystemModuleConfig;
    
        __tid_NavigationSystemModuleConfig_0__: boolean;
    }
    
    class NavMeshBoundsVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SupportedAgents: UE.NavAgentSelector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavMeshBoundsVolume;
        static Load(InName: string): NavMeshBoundsVolume;
    
        __tid_NavMeshBoundsVolume_0__: boolean;
    }
    
    class NavigationSystemV1 extends UE.NavigationSystemBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MainNavData: UE.NavigationData;
        AbstractNavData: UE.NavigationData;
        DefaultAgentName: string;
        CrowdManagerClass: TSoftClassPtr<UE.CrowdManagerBase>;
        bAutoCreateNavigationData: boolean;
        bSpawnNavDataInNavBoundsLevel: boolean;
        bAllowClientSideNavigation: boolean;
        bShouldDiscardSubLevelNavData: boolean;
        bTickWhilePaused: boolean;
        bSupportRebuilding: boolean;
        bInitialBuildingLocked: boolean;
        bSkipAgentHeightCheckWhenPickingNavData: boolean;
        bGenerateNavigationOnlyAroundNavigationInvokers: boolean;
        ActiveTilesUpdateInterval: number;
        DataGatheringMode: UE.ENavDataGatheringModeConfig;
        DirtyAreaWarningSizeThreshold: number;
        SupportedAgents: TArray<UE.NavDataConfig>;
        SupportedAgentsMask: UE.NavAgentSelector;
        NavDataSet: TArray<UE.NavigationData>;
        NavDataRegistrationQueue: TArray<UE.NavigationData>;
        OnNavDataRegisteredEvent: $MulticastDelegate<(NavData: $Nullable<UE.NavigationData>) => void>;
        OnNavigationGenerationFinishedDelegate: $MulticastDelegate<(NavData: $Nullable<UE.NavigationData>) => void>;
        OperationMode: UE.FNavigationSystemRunMode;
        DirtyAreasUpdateFreq: number;
        K2_ReplaceAreaInOctreeData(Object: $Nullable<UE.Object>, OldArea: $Nullable<UE.Class>, NewArea: $Nullable<UE.Class>) : boolean;
        OnNavigationBoundsUpdated(NavVolume: $Nullable<UE.NavMeshBoundsVolume>) : void;
        RegisterNavigationInvoker(Invoker: $Nullable<UE.Actor>, TileGenerationRadius?: number /* = 3000.000000 */, TileRemovalRadius?: number /* = 5000.000000 */) : void;
        ResetMaxSimultaneousTileGenerationJobsCount() : void;
        SetGeometryGatheringMode(NewMode: UE.ENavDataGatheringModeConfig) : void;
        SetMaxSimultaneousTileGenerationJobsCount(MaxNumberOfJobs: number) : void;
        UnregisterNavigationInvoker(Invoker: $Nullable<UE.Actor>) : void;
        static FindPathToActorSynchronously(WorldContextObject: $Nullable<UE.Object>, PathStart: UE.Vector, GoalActor: $Nullable<UE.Actor>, TetherDistance?: number /* = 50.000000 */, PathfindingContext?: UE.Actor /* = None */, FilterClass?: UE.Class /* = None */) : UE.NavigationPath;
        static FindPathToLocationSynchronously(WorldContextObject: $Nullable<UE.Object>, PathStart: UE.Vector, PathEnd: UE.Vector, PathfindingContext?: UE.Actor /* = None */, FilterClass?: UE.Class /* = None */) : UE.NavigationPath;
        static GetNavigationSystem(WorldContextObject: $Nullable<UE.Object>) : UE.NavigationSystemV1;
        static GetPathCost(WorldContextObject: $Nullable<UE.Object>, PathStart: UE.Vector, PathEnd: UE.Vector, PathCost: $Ref<number>, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */) : UE.ENavigationQueryResult;
        static GetPathLength(WorldContextObject: $Nullable<UE.Object>, PathStart: UE.Vector, PathEnd: UE.Vector, PathLength: $Ref<number>, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */) : UE.ENavigationQueryResult;
        static GetRandomPointInNavigableRadius(WorldContextObject: $Nullable<UE.Object>, Origin: UE.Vector, Radius: number, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */) : UE.Vector;
        static GetRandomReachablePointInRadius(WorldContextObject: $Nullable<UE.Object>, Origin: UE.Vector, Radius: number, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */) : UE.Vector;
        static IsNavigationBeingBuilt(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static IsNavigationBeingBuiltOrLocked(WorldContextObject: $Nullable<UE.Object>) : boolean;
        static K2_GetRandomLocationInNavigableRadius(WorldContextObject: $Nullable<UE.Object>, Origin: UE.Vector, RandomLocation: $Ref<UE.Vector>, Radius: number, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */) : boolean;
        static K2_GetRandomPointInNavigableRadius(WorldContextObject: $Nullable<UE.Object>, Origin: UE.Vector, RandomLocation: $Ref<UE.Vector>, Radius: number, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */) : boolean;
        static K2_GetRandomReachablePointInRadius(WorldContextObject: $Nullable<UE.Object>, Origin: UE.Vector, RandomLocation: $Ref<UE.Vector>, Radius: number, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */) : boolean;
        static K2_ProjectPointToNavigation(WorldContextObject: $Nullable<UE.Object>, Point: UE.Vector, ProjectedLocation: $Ref<UE.Vector>, NavData: $Nullable<UE.NavigationData>, FilterClass: $Nullable<UE.Class>, QueryExtent?: UE.Vector /* =  */) : boolean;
        static NavigationRaycast(WorldContextObject: $Nullable<UE.Object>, RayStart: UE.Vector, RayEnd: UE.Vector, HitLocation: $Ref<UE.Vector>, FilterClass?: UE.Class /* = None */, Querier?: UE.Controller /* = None */) : boolean;
        static ProjectPointToNavigation(WorldContextObject: $Nullable<UE.Object>, Point: UE.Vector, NavData?: UE.NavigationData /* = None */, FilterClass?: UE.Class /* = None */, QueryExtent?: UE.Vector /* =  */) : UE.Vector;
        static SimpleMoveToActor(Controller: $Nullable<UE.Controller>, Goal: $Nullable<UE.Actor>) : void;
        static SimpleMoveToLocation(Controller: $Nullable<UE.Controller>, Goal: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationSystemV1;
        static Load(InName: string): NavigationSystemV1;
    
        __tid_NavigationSystemV1_0__: boolean;
    }
    
    class NavTestRenderingComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavTestRenderingComponent;
        static Load(InName: string): NavTestRenderingComponent;
    
        __tid_NavTestRenderingComponent_0__: boolean;
    }
    
    class NavigationTestingActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CapsuleComponent: UE.CapsuleComponent;
        EdRenderComp: UE.NavTestRenderingComponent;
        InvokerComponent: UE.NavigationInvokerComponent;
        bActAsNavigationInvoker: boolean;
        NavAgentProps: UE.NavAgentProperties;
        QueryingExtent: UE.Vector;
        MyNavData: UE.NavigationData;
        ProjectedLocation: UE.Vector;
        bProjectedLocationValid: boolean;
        bSearchStart: boolean;
        CostLimitFactor: number;
        MinimumCostLimit: number;
        bBacktracking: boolean;
        bUseHierarchicalPathfinding: boolean;
        bGatherDetailedInfo: boolean;
        bDrawDistanceToWall: boolean;
        bShowNodePool: boolean;
        bShowBestPath: boolean;
        bShowDiffWithPreviousStep: boolean;
        bShouldBeVisibleInGame: boolean;
        CostDisplayMode: UE.ENavCostDisplay;
        TextCanvasOffset: UE.Vector2D;
        bPathExist: boolean;
        bPathIsPartial: boolean;
        bPathSearchOutOfNodes: boolean;
        PathfindingTime: number;
        PathCost: number;
        PathfindingSteps: number;
        OtherActor: UE.NavigationTestingActor;
        FilterClass: UE.Class;
        ShowStepIndex: number;
        OffsetFromCornersDistance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavigationTestingActor;
        static Load(InName: string): NavigationTestingActor;
    
        __tid_NavigationTestingActor_0__: boolean;
    }
    
    class NavLinkComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Links: TArray<UE.NavigationLink>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkComponent;
        static Load(InName: string): NavLinkComponent;
    
        __tid_NavLinkComponent_0__: boolean;
    }
    
    class NavRelevantComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAttachToOwnersRoot: boolean;
        CachedNavParent: UE.Object;
        SetNavigationRelevancy(bRelevant: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavRelevantComponent;
        static Load(InName: string): NavRelevantComponent;
    
        __tid_NavRelevantComponent_0__: boolean;
    }
    
    class NavLinkCustomComponent extends UE.NavRelevantComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NavLinkUserId: number;
        EnabledAreaClass: UE.Class;
        DisabledAreaClass: UE.Class;
        SupportedAgents: UE.NavAgentSelector;
        LinkRelativeStart: UE.Vector;
        LinkRelativeEnd: UE.Vector;
        LinkDirection: UE.ENavLinkDirection;
        bLinkEnabled: boolean;
        bNotifyWhenEnabled: boolean;
        bNotifyWhenDisabled: boolean;
        bCreateBoxObstacle: boolean;
        ObstacleOffset: UE.Vector;
        ObstacleExtent: UE.Vector;
        ObstacleAreaClass: UE.Class;
        BroadcastRadius: number;
        BroadcastInterval: number;
        BroadcastChannel: UE.ECollisionChannel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkCustomComponent;
        static Load(InName: string): NavLinkCustomComponent;
    
        __tid_NavLinkCustomComponent_0__: boolean;
    }
    
    class NavLinkCustomInstanceData extends UE.ActorComponentInstanceData {
        constructor();
        constructor(NavLinkUserId: number);
        NavLinkUserId: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NavLinkCustomInstanceData_0__: boolean;
    }
    
    class NavLinkCustomInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkCustomInterface;
        static Load(InName: string): NavLinkCustomInterface;
    
        __tid_NavLinkCustomInterface_0__: boolean;
    }
    
    class NavLinkDefinition extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Links: TArray<UE.NavigationLink>;
        SegmentLinks: TArray<UE.NavigationSegmentLink>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkDefinition;
        static Load(InName: string): NavLinkDefinition;
    
        __tid_NavLinkDefinition_0__: boolean;
    }
    
    class NavLinkHostInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkHostInterface;
        static Load(InName: string): NavLinkHostInterface;
    
        __tid_NavLinkHostInterface_0__: boolean;
    }
    
    class NavLinkRenderingComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkRenderingComponent;
        static Load(InName: string): NavLinkRenderingComponent;
    
        __tid_NavLinkRenderingComponent_0__: boolean;
    }
    
    class NavLinkProxy extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PointLinks: TArray<UE.NavigationLink>;
        SegmentLinks: TArray<UE.NavigationSegmentLink>;
        SmartLinkComp: UE.NavLinkCustomComponent;
        bSmartLinkIsRelevant: boolean;
        EdRenderComp: UE.NavLinkRenderingComponent;
        SpriteComponent: UE.BillboardComponent;
        OnSmartLinkReached: $MulticastDelegate<(MovingActor: $Nullable<UE.Actor>, DestinationPoint: UE.Vector) => void>;
        CopyEndPointsFromSimpleLinkToSmartLink() : void;
        HasMovingAgents() : boolean;
        IsSmartLinkEnabled() : boolean;
        ReceiveSmartLinkReached(Agent: $Nullable<UE.Actor>, Destination: UE.Vector) : void;
        ResumePathFollowing(Agent: $Nullable<UE.Actor>) : void;
        SetSmartLinkEnabled(bEnabled: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkProxy;
        static Load(InName: string): NavLinkProxy;
    
        __tid_NavLinkProxy_0__: boolean;
    }
    
    class NavLinkTrivial extends UE.NavLinkDefinition {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavLinkTrivial;
        static Load(InName: string): NavLinkTrivial;
    
        __tid_NavLinkTrivial_0__: boolean;
    }
    
    class NavMeshRenderingComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavMeshRenderingComponent;
        static Load(InName: string): NavMeshRenderingComponent;
    
        __tid_NavMeshRenderingComponent_0__: boolean;
    }
    
    class NavModifierComponent extends UE.NavRelevantComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AreaClass: UE.Class;
        FailsafeExtent: UE.Vector;
        bIncludeAgentHeight: boolean;
        SetAreaClass(NewAreaClass: $Nullable<UE.Class>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavModifierComponent;
        static Load(InName: string): NavModifierComponent;
    
        __tid_NavModifierComponent_0__: boolean;
    }
    
    class NavModifierVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AreaClass: UE.Class;
        bMaskFillCollisionUnderneathForNavmesh: boolean;
        SetAreaClass(NewAreaClass?: UE.Class /* = None */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavModifierVolume;
        static Load(InName: string): NavModifierVolume;
    
        __tid_NavModifierVolume_0__: boolean;
    }
    
    class NavNodeInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavNodeInterface;
        static Load(InName: string): NavNodeInterface;
    
        __tid_NavNodeInterface_0__: boolean;
    }
    
    class NavPathObserverInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavPathObserverInterface;
        static Load(InName: string): NavPathObserverInterface;
    
        __tid_NavPathObserverInterface_0__: boolean;
    }
    
    class NavRelevantInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavRelevantInterface;
        static Load(InName: string): NavRelevantInterface;
    
        __tid_NavRelevantInterface_0__: boolean;
    }
    
    class NavSystemConfigOverride extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpriteComponent: UE.BillboardComponent;
        NavigationSystemConfig: UE.NavigationSystemConfig;
        OverridePolicy: UE.ENavSystemOverridePolicy;
        bLoadOnClient: boolean;
        ApplyChanges() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NavSystemConfigOverride;
        static Load(InName: string): NavSystemConfigOverride;
    
        __tid_NavSystemConfigOverride_0__: boolean;
    }
    
    class NCPoolElement {
        constructor();
        constructor(Component: UE.NiagaraComponent);
        Component: UE.NiagaraComponent;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NCPoolElement_0__: boolean;
    }
    
    class NCPool {
        constructor();
        constructor(FreeElements: TArray<UE.NCPoolElement>, InUseComponents_Auto: TArray<UE.NiagaraComponent>, InUseComponents_Manual: TArray<UE.NiagaraComponent>);
        FreeElements: TArray<UE.NCPoolElement>;
        InUseComponents_Auto: TArray<UE.NiagaraComponent>;
        InUseComponents_Manual: TArray<UE.NiagaraComponent>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NCPool_0__: boolean;
    }
    
    class NDIStaticMeshSectionFilter {
        constructor();
        constructor(AllowedMaterialSlots: TArray<number>);
        AllowedMaterialSlots: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NDIStaticMeshSectionFilter_0__: boolean;
    }
    
    class NetAnalyticsDataConfig {
        constructor();
        constructor(DataName: string, bEnabled: boolean);
        DataName: string;
        bEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NetAnalyticsDataConfig_0__: boolean;
    }
    
    class NetAnalyticsAggregatorConfig extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NetAnalyticsData: TArray<UE.NetAnalyticsDataConfig>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NetAnalyticsAggregatorConfig;
        static Load(InName: string): NetAnalyticsAggregatorConfig;
    
        __tid_NetAnalyticsAggregatorConfig_0__: boolean;
    }
    
    class NetPushModelHelpers extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static MarkPropertyDirty(Object: $Nullable<UE.Object>, PropertyName: string) : void;
        static MarkPropertyDirtyFromRepIndex(Object: $Nullable<UE.Object>, RepIndex: number, PropertyName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NetPushModelHelpers;
        static Load(InName: string): NetPushModelHelpers;
    
        __tid_NetPushModelHelpers_0__: boolean;
    }
    
    class NetworkEmulationProfileDescription {
        constructor();
        constructor(ProfileName: string, ToolTip: string);
        ProfileName: string;
        ToolTip: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NetworkEmulationProfileDescription_0__: boolean;
    }
    
    class NetworkPredictionInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NetworkPredictionInterface;
        static Load(InName: string): NetworkPredictionInterface;
    
        __tid_NetworkPredictionInterface_0__: boolean;
    }
    
    class NetworkSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bVerifyPeer: boolean;
        bEnableMultiplayerWorldOriginRebasing: boolean;
        MaxRepArraySize: number;
        MaxRepArrayMemory: number;
        NetworkEmulationProfiles: TArray<UE.NetworkEmulationProfileDescription>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NetworkSettings;
        static Load(InName: string): NetworkSettings;
    
        __tid_NetworkSettings_0__: boolean;
    }
    
    class NewPluginDescriptorData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreatedBy: string;
        CreatedByURL: string;
        Description: string;
        bIsBetaVersion: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NewPluginDescriptorData;
        static Load(InName: string): NewPluginDescriptorData;
    
        __tid_NewPluginDescriptorData_0__: boolean;
    }
    
    namespace Niagara.Enums.Niagara_Units {
        enum Niagara_Units { Centimeters, Meters, Kilometers, Niagara_MAX, __typeKeyDoNoAccess}
    }

    class NiagaraActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NiagaraComponent: UE.NiagaraComponent;
        SpriteComponent: UE.BillboardComponent;
        ArrowComponent: UE.ArrowComponent;
        bDestroyOnSystemFinish: boolean;
        OnNiagaraSystemFinished(FinishedComponent: $Nullable<UE.NiagaraComponent>) : void;
        SetDestroyOnSystemFinish(bShouldDestroyOnSystemFinish: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraActor;
        static Load(InName: string): NiagaraActor;
    
        __tid_NiagaraActor_0__: boolean;
    }
    
    class NiagaraBool {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraBool_0__: boolean;
    }
    
    class NiagaraClipboardFunctionInput extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputName: string;
        InputType: UE.NiagaraTypeDefinition;
        bHasEditCondition: boolean;
        bEditConditionValue: boolean;
        ValueMode: UE.ENiagaraClipboardFunctionInputValueMode;
        Local: TArray<number>;
        Linked: string;
        Data: UE.NiagaraDataInterface;
        Expression: string;
        Dynamic: UE.NiagaraClipboardFunction;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraClipboardFunctionInput;
        static Load(InName: string): NiagaraClipboardFunctionInput;
    
        __tid_NiagaraClipboardFunctionInput_0__: boolean;
    }
    
    class NiagaraNode extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChangeId: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNode;
        static Load(InName: string): NiagaraNode;
    
        __tid_NiagaraNode_0__: boolean;
    }
    
    class NiagaraNodeWithDynamicPins extends UE.NiagaraNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeWithDynamicPins;
        static Load(InName: string): NiagaraNodeWithDynamicPins;
    
        __tid_NiagaraNodeWithDynamicPins_0__: boolean;
    }
    
    class NiagaraPropagatedVariable {
        constructor();
        constructor(SwitchParameter: UE.NiagaraVariable, PropagatedName: string);
        SwitchParameter: UE.NiagaraVariable;
        PropagatedName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraPropagatedVariable_0__: boolean;
    }
    
    class NiagaraMessageData extends UE.NiagaraMessageDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraMessageData;
        static Load(InName: string): NiagaraMessageData;
    
        __tid_NiagaraMessageData_0__: boolean;
    }
    
    class NiagaraNodeFunctionCall extends UE.NiagaraNodeWithDynamicPins {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FunctionScript: UE.NiagaraScript;
        FunctionScriptAssetObjectPath: string;
        Signature: UE.NiagaraFunctionSignature;
        FunctionSpecifiers: TMap<string, string>;
        PropagatedStaticSwitchParameters: TArray<UE.NiagaraPropagatedVariable>;
        CachedChangeId: UE.Guid;
        FunctionDisplayName: string;
        MessageKeyToMessageMap: TMap<UE.Guid, UE.NiagaraMessageData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeFunctionCall;
        static Load(InName: string): NiagaraNodeFunctionCall;
    
        __tid_NiagaraNodeFunctionCall_0__: boolean;
    }
    
    class NiagaraClipboardFunction extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FunctionName: string;
        DisplayName: string;
        ScriptMode: UE.ENiagaraClipboardFunctionScriptMode;
        Script: TSoftObjectPtr<UE.NiagaraScript>;
        AssignmentTargets: TArray<UE.NiagaraVariable>;
        AssignmentDefaults: TArray<string>;
        Inputs: TArray<UE.NiagaraClipboardFunctionInput>;
        OnPastedFunctionCallNodeDelegate: $Delegate<(PastedFunctionCall: $Nullable<UE.NiagaraNodeFunctionCall>) => void>;
        OnPastedFunctionCallNode__DelegateSignature(PastedFunctionCall: $Nullable<UE.NiagaraNodeFunctionCall>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraClipboardFunction;
        static Load(InName: string): NiagaraClipboardFunction;
    
        __tid_NiagaraClipboardFunction_0__: boolean;
    }
    
    class NiagaraScriptVariableBinding {
        constructor();
        constructor(Name: string);
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptVariableBinding_0__: boolean;
    }
    
    class NiagaraInputConditionMetadata {
        constructor();
        constructor(InputName: string, TargetValues: TArray<string>);
        InputName: string;
        TargetValues: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraInputConditionMetadata_0__: boolean;
    }
    
    class NiagaraVariableMetaData {
        constructor();
        constructor(Description: string, CategoryName: string, bAdvancedDisplay: boolean, EditorSortPriority: number, bInlineEditConditionToggle: boolean, EditCondition: UE.NiagaraInputConditionMetadata, VisibleCondition: UE.NiagaraInputConditionMetadata, PropertyMetaData: TMap<string, string>, ParentAttribute: string, ScopeName: string, Usage: UE.ENiagaraScriptParameterUsage, bIsStaticSwitch: boolean, StaticSwitchDefaultValue: number, bAddedToNodeGraphDeepCopy: boolean, bOutputIsPersistent: boolean, CachedNamespacelessVariableName: string, bCreatedInSystemEditor: boolean, bUseLegacyNameString: boolean);
        Description: string;
        CategoryName: string;
        bAdvancedDisplay: boolean;
        EditorSortPriority: number;
        bInlineEditConditionToggle: boolean;
        EditCondition: UE.NiagaraInputConditionMetadata;
        VisibleCondition: UE.NiagaraInputConditionMetadata;
        PropertyMetaData: TMap<string, string>;
        ParentAttribute: string;
        ScopeName: string;
        Usage: UE.ENiagaraScriptParameterUsage;
        bIsStaticSwitch: boolean;
        StaticSwitchDefaultValue: number;
        bAddedToNodeGraphDeepCopy: boolean;
        bOutputIsPersistent: boolean;
        CachedNamespacelessVariableName: string;
        bCreatedInSystemEditor: boolean;
        bUseLegacyNameString: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableMetaData_0__: boolean;
    }
    
    class NiagaraScriptVariable extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultMode: UE.ENiagaraDefaultMode;
        DefaultBinding: UE.NiagaraScriptVariableBinding;
        Variable: UE.NiagaraVariable;
        Metadata: UE.NiagaraVariableMetaData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraScriptVariable;
        static Load(InName: string): NiagaraScriptVariable;
    
        __tid_NiagaraScriptVariable_0__: boolean;
    }
    
    class NiagaraClipboardContent extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Functions: TArray<UE.NiagaraClipboardFunction>;
        FunctionInputs: TArray<UE.NiagaraClipboardFunctionInput>;
        Renderers: TArray<UE.NiagaraRendererProperties>;
        Scripts: TArray<UE.NiagaraScript>;
        ScriptVariables: TArray<UE.NiagaraScriptVariable>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraClipboardContent;
        static Load(InName: string): NiagaraClipboardContent;
    
        __tid_NiagaraClipboardContent_0__: boolean;
    }
    
    class UserDefinedEnum extends UE.Enum {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UniqueNameIndex: number;
        EnumDescription: string;
        DisplayNameMap: TMap<string, string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserDefinedEnum;
        static Load(InName: string): UserDefinedEnum;
    
        __tid_UserDefinedEnum_0__: boolean;
    }
    
    class NiagaraClipboardEditorScriptingUtilities extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateBoolLocalValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InBoolValue: boolean) : UE.NiagaraClipboardFunctionInput;
        static CreateDataValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InDataValue: $Nullable<UE.NiagaraDataInterface>) : UE.NiagaraClipboardFunctionInput;
        static CreateDynamicValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, InInputTypeName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InDynamicValueName: string, InDynamicValue: $Nullable<UE.NiagaraScript>) : UE.NiagaraClipboardFunctionInput;
        static CreateEnumLocalValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditCoditionValue: boolean, InEnumType: $Nullable<UE.UserDefinedEnum>, InEnumValue: number) : UE.NiagaraClipboardFunctionInput;
        static CreateExpressionValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, InInputTypeName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InExpressionValue: string) : UE.NiagaraClipboardFunctionInput;
        static CreateFloatLocalValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InLocalValue: number) : UE.NiagaraClipboardFunctionInput;
        static CreateIntLocalValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InLocalValue: number) : UE.NiagaraClipboardFunctionInput;
        static CreateLinkedValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, InInputTypeName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InLinkedValue: string) : UE.NiagaraClipboardFunctionInput;
        static CreateStructLocalValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InStructValue: $Nullable<UE.UserDefinedStruct>) : UE.NiagaraClipboardFunctionInput;
        static CreateVec2LocalValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InVec2Value: UE.Vector2D) : UE.NiagaraClipboardFunctionInput;
        static CreateVec3LocalValueInput(InOuter: $Nullable<UE.Object>, InInputName: string, bInHasEditCondition: boolean, bInEditConditionValue: boolean, InVec3Value: UE.Vector) : UE.NiagaraClipboardFunctionInput;
        static GetTypeName(InInput: $Nullable<UE.NiagaraClipboardFunctionInput>) : string;
        static TryGetInputByName(InInputs: TArray<UE.NiagaraClipboardFunctionInput>, InInputName: string, bOutSucceeded: $Ref<boolean>, OutInput: $Ref<UE.NiagaraClipboardFunctionInput>) : void;
        static TryGetLocalValueAsFloat(InInput: $Nullable<UE.NiagaraClipboardFunctionInput>, bOutSucceeded: $Ref<boolean>, OutValue: $Ref<number>) : void;
        static TryGetLocalValueAsInt(InInput: $Nullable<UE.NiagaraClipboardFunctionInput>, bOutSucceeded: $Ref<boolean>, OutValue: $Ref<number>) : void;
        static TrySetLocalValueAsInt(InInput: $Nullable<UE.NiagaraClipboardFunctionInput>, bOutSucceeded: $Ref<boolean>, InValue: number, bLooseTyping?: boolean /* = true */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraClipboardEditorScriptingUtilities;
        static Load(InName: string): NiagaraClipboardEditorScriptingUtilities;
    
        __tid_NiagaraClipboardEditorScriptingUtilities_0__: boolean;
    }
    
    class NiagaraCollisionEventPayload {
        constructor();
        constructor(CollisionPos: UE.Vector, CollisionNormal: UE.Vector, CollisionVelocity: UE.Vector, ParticleIndex: number, PhysicalMaterialIndex: number);
        CollisionPos: UE.Vector;
        CollisionNormal: UE.Vector;
        CollisionVelocity: UE.Vector;
        ParticleIndex: number;
        PhysicalMaterialIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraCollisionEventPayload_0__: boolean;
    }
    
    class NiagaraCompileHashVisitorDebugInfo {
        constructor();
        constructor(Object: string, PropertyKeys: TArray<string>, PropertyValues: TArray<string>);
        Object: string;
        PropertyKeys: TArray<string>;
        PropertyValues: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraCompileHashVisitorDebugInfo_0__: boolean;
    }
    
    class NiagaraComponentPool extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WorldParticleSystemPools: TMap<UE.NiagaraSystem, UE.NCPool>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraComponentPool;
        static Load(InName: string): NiagaraComponentPool;
    
        __tid_NiagaraComponentPool_0__: boolean;
    }
    
    class NiagaraVariableAttributeBinding {
        constructor();
        constructor(ParamMapVariable: UE.NiagaraVariableBase, DataSetVariable: UE.NiagaraVariable, RootVariable: UE.NiagaraVariable, BoundVariable: UE.NiagaraVariable, CachedDisplayName: string, BindingSourceMode: UE.ENiagaraBindingSource, bBindingExistsOnSource: boolean, bIsCachedParticleValue: boolean);
        ParamMapVariable: UE.NiagaraVariableBase;
        DataSetVariable: UE.NiagaraVariable;
        RootVariable: UE.NiagaraVariable;
        BoundVariable: UE.NiagaraVariable;
        CachedDisplayName: string;
        BindingSourceMode: UE.ENiagaraBindingSource;
        bBindingExistsOnSource: boolean;
        bIsCachedParticleValue: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableAttributeBinding_0__: boolean;
    }
    
    class NiagaraComponentPropertyBinding {
        constructor();
        constructor(AttributeBinding: UE.NiagaraVariableAttributeBinding, PropertyName: string, PropertyType: UE.NiagaraTypeDefinition, MetadataSetterName: string, WritableValue: UE.NiagaraVariable);
        AttributeBinding: UE.NiagaraVariableAttributeBinding;
        PropertyName: string;
        PropertyType: UE.NiagaraTypeDefinition;
        MetadataSetterName: string;
        WritableValue: UE.NiagaraVariable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraComponentPropertyBinding_0__: boolean;
    }
    
    class NiagaraComponentRendererProperties extends UE.NiagaraRendererProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ComponentType: UE.Class;
        ComponentCountLimit: number;
        EnabledBinding: UE.NiagaraVariableAttributeBinding;
        bAssignComponentsOnParticleID: boolean;
        bOnlyCreateComponentsOnParticleSpawn: boolean;
        bVisualizeComponents: boolean;
        TemplateComponent: UE.SceneComponent;
        PropertyBindings: TArray<UE.NiagaraComponentPropertyBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraComponentRendererProperties;
        static Load(InName: string): NiagaraComponentRendererProperties;
    
        __tid_NiagaraComponentRendererProperties_0__: boolean;
    }
    
    class NiagaraEmitterNameSettingsRef {
        constructor();
        constructor(SystemName: string, EmitterName: string);
        SystemName: string;
        EmitterName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterNameSettingsRef_0__: boolean;
    }
    
    class NiagaraComponentSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SuppressActivationList: TSet<string>;
        ForceAutoPooolingList: TSet<string>;
        SuppressEmitterList: TSet<UE.NiagaraEmitterNameSettingsRef>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraComponentSettings;
        static Load(InName: string): NiagaraComponentSettings;
    
        __tid_NiagaraComponentSettings_0__: boolean;
    }
    
    class NiagaraConvertConnection {
        constructor();
        constructor(SourcePinId: UE.Guid, SourcePath: TArray<string>, DestinationPinId: UE.Guid, DestinationPath: TArray<string>);
        SourcePinId: UE.Guid;
        SourcePath: TArray<string>;
        DestinationPinId: UE.Guid;
        DestinationPath: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraConvertConnection_0__: boolean;
    }
    
    class NiagaraConvertInPlaceUtilityBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraConvertInPlaceUtilityBase;
        static Load(InName: string): NiagaraConvertInPlaceUtilityBase;
    
        __tid_NiagaraConvertInPlaceUtilityBase_0__: boolean;
    }
    
    class NiagaraConvertInPlaceEmitterAndSystemState extends UE.NiagaraConvertInPlaceUtilityBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraConvertInPlaceEmitterAndSystemState;
        static Load(InName: string): NiagaraConvertInPlaceEmitterAndSystemState;
    
        __tid_NiagaraConvertInPlaceEmitterAndSystemState_0__: boolean;
    }
    
    class NiagaraConvertPinRecord {
        constructor();
        constructor(PinId: UE.Guid, Path: TArray<string>);
        PinId: UE.Guid;
        Path: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraConvertPinRecord_0__: boolean;
    }
    
    class Texture2DArray extends UE.Texture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddressX: UE.TextureAddress;
        AddressY: UE.TextureAddress;
        AddressZ: UE.TextureAddress;
        SourceTextures: TArray<UE.Texture2D>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Texture2DArray;
        static Load(InName: string): Texture2DArray;
    
        __tid_Texture2DArray_0__: boolean;
    }
    
    class NiagaraDataInterface2DArrayTexture extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Texture: UE.Texture2DArray;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterface2DArrayTexture;
        static Load(InName: string): NiagaraDataInterface2DArrayTexture;
    
        __tid_NiagaraDataInterface2DArrayTexture_0__: boolean;
    }
    
    class NiagaraDataInterfaceArray extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxElements: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArray;
        static Load(InName: string): NiagaraDataInterfaceArray;
    
        __tid_NiagaraDataInterfaceArray_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayBool extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoolData: TArray<boolean>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayBool;
        static Load(InName: string): NiagaraDataInterfaceArrayBool;
    
        __tid_NiagaraDataInterfaceArrayBool_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayColor extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ColorData: TArray<UE.LinearColor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayColor;
        static Load(InName: string): NiagaraDataInterfaceArrayColor;
    
        __tid_NiagaraDataInterfaceArrayColor_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayFloat extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatData: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayFloat;
        static Load(InName: string): NiagaraDataInterfaceArrayFloat;
    
        __tid_NiagaraDataInterfaceArrayFloat_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayFloat2 extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatData: TArray<UE.Vector2D>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayFloat2;
        static Load(InName: string): NiagaraDataInterfaceArrayFloat2;
    
        __tid_NiagaraDataInterfaceArrayFloat2_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayFloat3 extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatData: TArray<UE.Vector>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayFloat3;
        static Load(InName: string): NiagaraDataInterfaceArrayFloat3;
    
        __tid_NiagaraDataInterfaceArrayFloat3_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayFloat4 extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatData: TArray<UE.Vector4>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayFloat4;
        static Load(InName: string): NiagaraDataInterfaceArrayFloat4;
    
        __tid_NiagaraDataInterfaceArrayFloat4_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetNiagaraArrayBool(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<boolean>;
        static GetNiagaraArrayColor(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<UE.LinearColor>;
        static GetNiagaraArrayFloat(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<number>;
        static GetNiagaraArrayInt32(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<number>;
        static GetNiagaraArrayQuat(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<UE.Quat>;
        static GetNiagaraArrayVector(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<UE.Vector>;
        static GetNiagaraArrayVector2D(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<UE.Vector2D>;
        static GetNiagaraArrayVector4(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string) : TArray<UE.Vector4>;
        static SetNiagaraArrayBool(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<boolean>) : void;
        static SetNiagaraArrayColor(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<UE.LinearColor>) : void;
        static SetNiagaraArrayFloat(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<number>) : void;
        static SetNiagaraArrayInt32(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<number>) : void;
        static SetNiagaraArrayQuat(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<UE.Quat>) : void;
        static SetNiagaraArrayVector(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<UE.Vector>) : void;
        static SetNiagaraArrayVector2D(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<UE.Vector2D>) : void;
        static SetNiagaraArrayVector4(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, ArrayData: TArray<UE.Vector4>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayFunctionLibrary;
        static Load(InName: string): NiagaraDataInterfaceArrayFunctionLibrary;
    
        __tid_NiagaraDataInterfaceArrayFunctionLibrary_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayInt32 extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IntData: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayInt32;
        static Load(InName: string): NiagaraDataInterfaceArrayInt32;
    
        __tid_NiagaraDataInterfaceArrayInt32_0__: boolean;
    }
    
    class NiagaraDataInterfaceArrayQuat extends UE.NiagaraDataInterfaceArray {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        QuatData: TArray<UE.Quat>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceArrayQuat;
        static Load(InName: string): NiagaraDataInterfaceArrayQuat;
    
        __tid_NiagaraDataInterfaceArrayQuat_0__: boolean;
    }
    
    class NiagaraDataInterfaceAudioOscilloscope extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Submix: UE.SoundSubmix;
        Resolution: number;
        ScopeInMilliseconds: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceAudioOscilloscope;
        static Load(InName: string): NiagaraDataInterfaceAudioOscilloscope;
    
        __tid_NiagaraDataInterfaceAudioOscilloscope_0__: boolean;
    }
    
    class NiagaraDataInterfaceAudioPlayer extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundToPlay: UE.SoundBase;
        Attenuation: UE.SoundAttenuation;
        Concurrency: UE.SoundConcurrency;
        ParameterNames: TArray<string>;
        bLimitPlaysPerTick: boolean;
        MaxPlaysPerTick: number;
        bStopWhenComponentIsDestroyed: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceAudioPlayer;
        static Load(InName: string): NiagaraDataInterfaceAudioPlayer;
    
        __tid_NiagaraDataInterfaceAudioPlayer_0__: boolean;
    }
    
    class NiagaraDataInterfaceAudioSubmix extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Submix: UE.SoundSubmix;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceAudioSubmix;
        static Load(InName: string): NiagaraDataInterfaceAudioSubmix;
    
        __tid_NiagaraDataInterfaceAudioSubmix_0__: boolean;
    }
    
    class NiagaraDataInterfaceAudioSpectrum extends UE.NiagaraDataInterfaceAudioSubmix {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Resolution: number;
        MinimumFrequency: number;
        MaximumFrequency: number;
        NoiseFloorDb: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceAudioSpectrum;
        static Load(InName: string): NiagaraDataInterfaceAudioSpectrum;
    
        __tid_NiagaraDataInterfaceAudioSpectrum_0__: boolean;
    }
    
    class NiagaraDataInterfaceCamera extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayerControllerIndex: number;
        bRequireCurrentFrameData: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceCamera;
        static Load(InName: string): NiagaraDataInterfaceCamera;
    
        __tid_NiagaraDataInterfaceCamera_0__: boolean;
    }
    
    class NiagaraDataInterfaceChaosDestruction extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChaosSolverActorSet: TSet<UE.ChaosSolverActor>;
        DataSourceType: UE.EDataSourceTypeEnum;
        DataProcessFrequency: number;
        MaxNumberOfDataEntriesToSpawn: number;
        DoSpawn: boolean;
        SpawnMultiplierMinMax: UE.Vector2D;
        SpawnChance: number;
        ImpulseToSpawnMinMax: UE.Vector2D;
        SpeedToSpawnMinMax: UE.Vector2D;
        MassToSpawnMinMax: UE.Vector2D;
        ExtentMinToSpawnMinMax: UE.Vector2D;
        ExtentMaxToSpawnMinMax: UE.Vector2D;
        VolumeToSpawnMinMax: UE.Vector2D;
        SolverTimeToSpawnMinMax: UE.Vector2D;
        SurfaceTypeToSpawn: number;
        LocationFilteringMode: UE.ELocationFilteringModeEnum;
        LocationXToSpawn: UE.ELocationXToSpawnEnum;
        LocationXToSpawnMinMax: UE.Vector2D;
        LocationYToSpawn: UE.ELocationYToSpawnEnum;
        LocationYToSpawnMinMax: UE.Vector2D;
        LocationZToSpawn: UE.ELocationZToSpawnEnum;
        LocationZToSpawnMinMax: UE.Vector2D;
        DataSortingType: UE.EDataSortTypeEnum;
        bGetExternalCollisionData: boolean;
        DoSpatialHash: boolean;
        SpatialHashVolumeMin: UE.Vector;
        SpatialHashVolumeMax: UE.Vector;
        SpatialHashVolumeCellSize: UE.Vector;
        MaxDataPerCell: number;
        bApplyMaterialsFilter: boolean;
        ChaosBreakingMaterialSet: TSet<UE.PhysicalMaterial>;
        bGetExternalBreakingData: boolean;
        bGetExternalTrailingData: boolean;
        RandomPositionMagnitudeMinMax: UE.Vector2D;
        InheritedVelocityMultiplier: number;
        RandomVelocityGenerationType: UE.ERandomVelocityGenerationTypeEnum;
        RandomVelocityMagnitudeMinMax: UE.Vector2D;
        SpreadAngleMax: number;
        VelocityOffsetMin: UE.Vector;
        VelocityOffsetMax: UE.Vector;
        FinalVelocityMagnitudeMinMax: UE.Vector2D;
        MaxLatency: number;
        DebugType: UE.EDebugTypeEnum;
        LastSpawnedPointID: number;
        LastSpawnTime: number;
        SolverTime: number;
        TimeStampOfLastProcessedData: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceChaosDestruction;
        static Load(InName: string): NiagaraDataInterfaceChaosDestruction;
    
        __tid_NiagaraDataInterfaceChaosDestruction_0__: boolean;
    }
    
    class NiagaraDataInterfaceCollisionQuery extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceCollisionQuery;
        static Load(InName: string): NiagaraDataInterfaceCollisionQuery;
    
        __tid_NiagaraDataInterfaceCollisionQuery_0__: boolean;
    }
    
    class NiagaraDataInterfaceCurveBase extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShaderLUT: TArray<number>;
        LUTMinTime: number;
        LUTMaxTime: number;
        LUTInvTimeRange: number;
        LUTNumSamplesMinusOne: number;
        bUseLUT: boolean;
        bExposeCurve: boolean;
        bOptimizeLUT: boolean;
        bOverrideOptimizeThreshold: boolean;
        ShowInCurveEditor: boolean;
        HasEditorData: boolean;
        OptimizeThreshold: number;
        ExposedName: string;
        ExposedTexture: UE.Texture2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceCurveBase;
        static Load(InName: string): NiagaraDataInterfaceCurveBase;
    
        __tid_NiagaraDataInterfaceCurveBase_0__: boolean;
    }
    
    class NiagaraDataInterfaceColorCurve extends UE.NiagaraDataInterfaceCurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RedCurve: UE.RichCurve;
        GreenCurve: UE.RichCurve;
        BlueCurve: UE.RichCurve;
        AlphaCurve: UE.RichCurve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceColorCurve;
        static Load(InName: string): NiagaraDataInterfaceColorCurve;
    
        __tid_NiagaraDataInterfaceColorCurve_0__: boolean;
    }
    
    class NiagaraDataInterfaceCurlNoise extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Seed: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceCurlNoise;
        static Load(InName: string): NiagaraDataInterfaceCurlNoise;
    
        __tid_NiagaraDataInterfaceCurlNoise_0__: boolean;
    }
    
    class NiagaraDataInterfaceCurve extends UE.NiagaraDataInterfaceCurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Curve: UE.RichCurve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceCurve;
        static Load(InName: string): NiagaraDataInterfaceCurve;
    
        __tid_NiagaraDataInterfaceCurve_0__: boolean;
    }
    
    class NiagaraUserParameterBinding {
        constructor();
        constructor(Parameter: UE.NiagaraVariable);
        Parameter: UE.NiagaraVariable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraUserParameterBinding_0__: boolean;
    }
    
    class NiagaraDataInterfaceExport extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CallbackHandlerParameter: UE.NiagaraUserParameterBinding;
        GPUAllocationMode: UE.ENDIExport_GPUAllocationMode;
        GPUAllocationFixedSize: number;
        GPUAllocationPerParticleSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceExport;
        static Load(InName: string): NiagaraDataInterfaceExport;
    
        __tid_NiagaraDataInterfaceExport_0__: boolean;
    }
    
    class NiagaraDataInterfaceFieldSystem extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlueprintSource: UE.Blueprint;
        SourceActor: UE.Actor;
        FieldDimensions: UE.IntVector;
        MinBounds: UE.Vector;
        MaxBounds: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceFieldSystem;
        static Load(InName: string): NiagaraDataInterfaceFieldSystem;
    
        __tid_NiagaraDataInterfaceFieldSystem_0__: boolean;
    }
    
    class NiagaraDataInterfaceGBuffer extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceGBuffer;
        static Load(InName: string): NiagaraDataInterfaceGBuffer;
    
        __tid_NiagaraDataInterfaceGBuffer_0__: boolean;
    }
    
    class NiagaraDataInterfaceRWBase extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OutputShaderStages: TSet<number>;
        IterationShaderStages: TSet<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceRWBase;
        static Load(InName: string): NiagaraDataInterfaceRWBase;
    
        __tid_NiagaraDataInterfaceRWBase_0__: boolean;
    }
    
    class NiagaraDataInterfaceGrid2D extends UE.NiagaraDataInterfaceRWBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumCellsX: number;
        NumCellsY: number;
        NumCellsMaxAxis: number;
        NumAttributes: number;
        SetGridFromMaxAxis: boolean;
        WorldBBoxSize: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceGrid2D;
        static Load(InName: string): NiagaraDataInterfaceGrid2D;
    
        __tid_NiagaraDataInterfaceGrid2D_0__: boolean;
    }
    
    class NiagaraDataInterfaceGrid2DCollection extends UE.NiagaraDataInterfaceGrid2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderTargetUserParameter: UE.NiagaraUserParameterBinding;
        OverrideBufferFormat: UE.ENiagaraGpuBufferFormat;
        bOverrideFormat: boolean;
        bPreviewGrid: boolean;
        PreviewAttribute: string;
        ManagedRenderTargets: TMap<bigint, UE.TextureRenderTarget2DArray>;
        FillRawTexture2D(Component: $Nullable<UE.NiagaraComponent>, Dest: $Nullable<UE.TextureRenderTarget2D>, TilesX: $Ref<number>, TilesY: $Ref<number>) : boolean;
        FillTexture2D(Component: $Nullable<UE.NiagaraComponent>, dest: $Nullable<UE.TextureRenderTarget2D>, AttributeIndex: number) : boolean;
        GetRawTextureSize(Component: $Nullable<UE.NiagaraComponent>, SizeX: $Ref<number>, SizeY: $Ref<number>) : void;
        GetTextureSize(Component: $Nullable<UE.NiagaraComponent>, SizeX: $Ref<number>, SizeY: $Ref<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceGrid2DCollection;
        static Load(InName: string): NiagaraDataInterfaceGrid2DCollection;
    
        __tid_NiagaraDataInterfaceGrid2DCollection_0__: boolean;
    }
    
    class NiagaraDataInterfaceGrid2DCollectionReader extends UE.NiagaraDataInterfaceGrid2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterName: string;
        DIName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceGrid2DCollectionReader;
        static Load(InName: string): NiagaraDataInterfaceGrid2DCollectionReader;
    
        __tid_NiagaraDataInterfaceGrid2DCollectionReader_0__: boolean;
    }
    
    class NiagaraDataInterfaceGrid3D extends UE.NiagaraDataInterfaceRWBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumCells: UE.IntVector;
        CellSize: number;
        NumCellsMaxAxis: number;
        SetResolutionMethod: UE.ESetResolutionMethod;
        WorldBBoxSize: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceGrid3D;
        static Load(InName: string): NiagaraDataInterfaceGrid3D;
    
        __tid_NiagaraDataInterfaceGrid3D_0__: boolean;
    }
    
    class NiagaraDataInterfaceGrid3DCollection extends UE.NiagaraDataInterfaceGrid3D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumAttributes: number;
        RenderTargetUserParameter: UE.NiagaraUserParameterBinding;
        BufferFormat: UE.ENiagaraGpuBufferFormat;
        FillRawVolumeTexture(Component: $Nullable<UE.NiagaraComponent>, Dest: $Nullable<UE.VolumeTexture>, TilesX: $Ref<number>, TilesY: $Ref<number>, TileZ: $Ref<number>) : boolean;
        FillVolumeTexture(Component: $Nullable<UE.NiagaraComponent>, dest: $Nullable<UE.VolumeTexture>, AttributeIndex: number) : boolean;
        GetRawTextureSize(Component: $Nullable<UE.NiagaraComponent>, SizeX: $Ref<number>, SizeY: $Ref<number>, SizeZ: $Ref<number>) : void;
        GetTextureSize(Component: $Nullable<UE.NiagaraComponent>, SizeX: $Ref<number>, SizeY: $Ref<number>, SizeZ: $Ref<number>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceGrid3DCollection;
        static Load(InName: string): NiagaraDataInterfaceGrid3DCollection;
    
        __tid_NiagaraDataInterfaceGrid3DCollection_0__: boolean;
    }
    
    class NiagaraDataInterfaceLandscape extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceLandscape: UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceLandscape;
        static Load(InName: string): NiagaraDataInterfaceLandscape;
    
        __tid_NiagaraDataInterfaceLandscape_0__: boolean;
    }
    
    class NiagaraDataInterfaceNeighborGrid3D extends UE.NiagaraDataInterfaceGrid3D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxNeighborsPerCell: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceNeighborGrid3D;
        static Load(InName: string): NiagaraDataInterfaceNeighborGrid3D;
    
        __tid_NiagaraDataInterfaceNeighborGrid3D_0__: boolean;
    }
    
    class NiagaraDataInterfaceOcclusion extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceOcclusion;
        static Load(InName: string): NiagaraDataInterfaceOcclusion;
    
        __tid_NiagaraDataInterfaceOcclusion_0__: boolean;
    }
    
    class NiagaraDataInterfaceParticleRead extends UE.NiagaraDataInterfaceRWBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceParticleRead;
        static Load(InName: string): NiagaraDataInterfaceParticleRead;
    
        __tid_NiagaraDataInterfaceParticleRead_0__: boolean;
    }
    
    class NiagaraDataInterfacePlatformSet extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Platforms: UE.NiagaraPlatformSet;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfacePlatformSet;
        static Load(InName: string): NiagaraDataInterfacePlatformSet;
    
        __tid_NiagaraDataInterfacePlatformSet_0__: boolean;
    }
    
    class NiagaraDataInterfaceRenderTarget2D extends UE.NiagaraDataInterfaceRWBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Size: UE.IntPoint;
        OverrideRenderTargetFormat: UE.ETextureRenderTargetFormat;
        bOverrideFormat: boolean;
        bPreviewRenderTarget: boolean;
        RenderTargetUserParameter: UE.NiagaraUserParameterBinding;
        ManagedRenderTargets: TMap<bigint, UE.TextureRenderTarget2D>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceRenderTarget2D;
        static Load(InName: string): NiagaraDataInterfaceRenderTarget2D;
    
        __tid_NiagaraDataInterfaceRenderTarget2D_0__: boolean;
    }
    
    class NiagaraDataInterfaceRenderTarget2DArray extends UE.NiagaraDataInterfaceRWBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Size: UE.IntVector;
        OverrideRenderTargetFormat: UE.ETextureRenderTargetFormat;
        bOverrideFormat: boolean;
        bPreviewRenderTarget: boolean;
        RenderTargetUserParameter: UE.NiagaraUserParameterBinding;
        ManagedRenderTargets: TMap<bigint, UE.TextureRenderTarget2DArray>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceRenderTarget2DArray;
        static Load(InName: string): NiagaraDataInterfaceRenderTarget2DArray;
    
        __tid_NiagaraDataInterfaceRenderTarget2DArray_0__: boolean;
    }
    
    class NiagaraDataInterfaceRenderTargetVolume extends UE.NiagaraDataInterfaceRWBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Size: UE.IntVector;
        OverrideRenderTargetFormat: UE.ETextureRenderTargetFormat;
        bOverrideFormat: boolean;
        bPreviewRenderTarget: boolean;
        RenderTargetUserParameter: UE.NiagaraUserParameterBinding;
        ManagedRenderTargets: TMap<bigint, UE.TextureRenderTargetVolume>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceRenderTargetVolume;
        static Load(InName: string): NiagaraDataInterfaceRenderTargetVolume;
    
        __tid_NiagaraDataInterfaceRenderTargetVolume_0__: boolean;
    }
    
    class NiagaraDataInterfaceSimpleCounter extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceSimpleCounter;
        static Load(InName: string): NiagaraDataInterfaceSimpleCounter;
    
        __tid_NiagaraDataInterfaceSimpleCounter_0__: boolean;
    }
    
    class NiagaraDataInterfaceSkeletalMesh extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceMode: UE.ENDISkeletalMesh_SourceMode;
        PreviewMesh: UE.SkeletalMesh;
        Source: UE.Actor;
        MeshUserParameter: UE.NiagaraUserParameterBinding;
        SourceComponent: UE.SkeletalMeshComponent;
        SkinningMode: UE.ENDISkeletalMesh_SkinningMode;
        SamplingRegions: TArray<string>;
        WholeMeshLOD: number;
        FilteredBones: TArray<string>;
        FilteredSockets: TArray<string>;
        ExcludeBoneName: string;
        bExcludeBone: boolean;
        bRequireCurrentFrameData: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceSkeletalMesh;
        static Load(InName: string): NiagaraDataInterfaceSkeletalMesh;
    
        __tid_NiagaraDataInterfaceSkeletalMesh_0__: boolean;
    }
    
    class NiagaraDataInterfaceSpline extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Source: UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceSpline;
        static Load(InName: string): NiagaraDataInterfaceSpline;
    
        __tid_NiagaraDataInterfaceSpline_0__: boolean;
    }
    
    class NiagaraDataInterfaceStaticMesh extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceMode: UE.ENDIStaticMesh_SourceMode;
        PreviewMesh: UE.StaticMesh;
        DefaultMesh: UE.StaticMesh;
        Source: UE.Actor;
        SourceComponent: UE.StaticMeshComponent;
        SectionFilter: UE.NDIStaticMeshSectionFilter;
        bUsePhysicsBodyVelocity: boolean;
        FilteredSockets: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceStaticMesh;
        static Load(InName: string): NiagaraDataInterfaceStaticMesh;
    
        __tid_NiagaraDataInterfaceStaticMesh_0__: boolean;
    }
    
    class NiagaraDataInterfaceTexture extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Texture: UE.Texture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceTexture;
        static Load(InName: string): NiagaraDataInterfaceTexture;
    
        __tid_NiagaraDataInterfaceTexture_0__: boolean;
    }
    
    class NiagaraDataInterfaceVector2DCurve extends UE.NiagaraDataInterfaceCurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        XCurve: UE.RichCurve;
        YCurve: UE.RichCurve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceVector2DCurve;
        static Load(InName: string): NiagaraDataInterfaceVector2DCurve;
    
        __tid_NiagaraDataInterfaceVector2DCurve_0__: boolean;
    }
    
    class NiagaraDataInterfaceVector4Curve extends UE.NiagaraDataInterfaceCurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        XCurve: UE.RichCurve;
        YCurve: UE.RichCurve;
        ZCurve: UE.RichCurve;
        WCurve: UE.RichCurve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceVector4Curve;
        static Load(InName: string): NiagaraDataInterfaceVector4Curve;
    
        __tid_NiagaraDataInterfaceVector4Curve_0__: boolean;
    }
    
    class NiagaraDataInterfaceVectorCurve extends UE.NiagaraDataInterfaceCurveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        XCurve: UE.RichCurve;
        YCurve: UE.RichCurve;
        ZCurve: UE.RichCurve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceVectorCurve;
        static Load(InName: string): NiagaraDataInterfaceVectorCurve;
    
        __tid_NiagaraDataInterfaceVectorCurve_0__: boolean;
    }
    
    class NiagaraDataInterfaceVectorField extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Field: UE.VectorField;
        bTileX: boolean;
        bTileY: boolean;
        bTileZ: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceVectorField;
        static Load(InName: string): NiagaraDataInterfaceVectorField;
    
        __tid_NiagaraDataInterfaceVectorField_0__: boolean;
    }
    
    class NiagaraDataInterfaceVolumeTexture extends UE.NiagaraDataInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Texture: UE.VolumeTexture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDataInterfaceVolumeTexture;
        static Load(InName: string): NiagaraDataInterfaceVolumeTexture;
    
        __tid_NiagaraDataInterfaceVolumeTexture_0__: boolean;
    }
    
    class NiagaraScriptFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraScriptFactoryNew;
        static Load(InName: string): NiagaraScriptFactoryNew;
    
        __tid_NiagaraScriptFactoryNew_0__: boolean;
    }
    
    class NiagaraDynamicInputScriptFactory extends UE.NiagaraScriptFactoryNew {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraDynamicInputScriptFactory;
        static Load(InName: string): NiagaraDynamicInputScriptFactory;
    
        __tid_NiagaraDynamicInputScriptFactory_0__: boolean;
    }
    
    class NiagaraSpawnShortcut {
        constructor();
        constructor(Name: string, Input: UE.InputChord);
        Name: string;
        Input: UE.InputChord;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSpawnShortcut_0__: boolean;
    }
    
    class NiagaraNewAssetDialogConfig {
        constructor();
        constructor(SelectedOptionIndex: number, WindowSize: UE.Vector2D);
        SelectedOptionIndex: number;
        WindowSize: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraNewAssetDialogConfig_0__: boolean;
    }
    
    class NiagaraNamespaceMetadata {
        constructor();
        constructor(Namespaces: TArray<string>, RequiredNamespaceModifier: string, DisplayName: string, DisplayNameLong: string, Description: string, BackgroundColor: UE.LinearColor, ForegroundStyle: string, SortId: number, OptionalNamespaceModifiers: TArray<string>, Options: TArray<UE.ENiagaraNamespaceMetadataOptions>);
        Namespaces: TArray<string>;
        RequiredNamespaceModifier: string;
        DisplayName: string;
        DisplayNameLong: string;
        Description: string;
        BackgroundColor: UE.LinearColor;
        ForegroundStyle: string;
        SortId: number;
        OptionalNamespaceModifiers: TArray<string>;
        Options: TArray<UE.ENiagaraNamespaceMetadataOptions>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraNamespaceMetadata_0__: boolean;
    }
    
    class NiagaraEditorSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultScript: UE.SoftObjectPath;
        DefaultDynamicInputScript: UE.SoftObjectPath;
        DefaultFunctionScript: UE.SoftObjectPath;
        DefaultModuleScript: UE.SoftObjectPath;
        RequiredSystemUpdateScript: UE.SoftObjectPath;
        GraphCreationShortcuts: TArray<UE.NiagaraSpawnShortcut>;
        bAutoCompile: boolean;
        bAutoPlay: boolean;
        bResetSimulationOnChange: boolean;
        bResimulateOnChangeWhilePaused: boolean;
        bResetDependentSystemsWhenEditingEmitters: boolean;
        bDisplayAdvancedParameterPanelCategories: boolean;
        NewAssetDialogConfigMap: TMap<string, UE.NiagaraNewAssetDialogConfig>;
        HLSLKeywordReplacements: TMap<string, string>;
        NamespaceMetadata: TArray<UE.NiagaraNamespaceMetadata>;
        NamespaceModifierMetadata: TArray<UE.NiagaraNamespaceMetadata>;
        DefaultNamespaceMetadata: UE.NiagaraNamespaceMetadata;
        DefaultNamespaceModifierMetadata: UE.NiagaraNamespaceMetadata;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEditorSettings;
        static Load(InName: string): NiagaraEditorSettings;
    
        __tid_NiagaraEditorSettings_0__: boolean;
    }
    
    class NiagaraEffectTypeFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEffectTypeFactoryNew;
        static Load(InName: string): NiagaraEffectTypeFactoryNew;
    
        __tid_NiagaraEffectTypeFactoryNew_0__: boolean;
    }
    
    class NiagaraEmitterCompiledData {
        constructor();
        constructor(SpawnAttributes: TArray<string>, EmitterSpawnIntervalVar: UE.NiagaraVariable, EmitterInterpSpawnStartDTVar: UE.NiagaraVariable, EmitterSpawnGroupVar: UE.NiagaraVariable, EmitterAgeVar: UE.NiagaraVariable, EmitterRandomSeedVar: UE.NiagaraVariable, EmitterInstanceSeedVar: UE.NiagaraVariable, EmitterTotalSpawnedParticlesVar: UE.NiagaraVariable, DataSetCompiledData: UE.NiagaraDataSetCompiledData, GPUCaptureDataSetCompiledData: UE.NiagaraDataSetCompiledData);
        SpawnAttributes: TArray<string>;
        EmitterSpawnIntervalVar: UE.NiagaraVariable;
        EmitterInterpSpawnStartDTVar: UE.NiagaraVariable;
        EmitterSpawnGroupVar: UE.NiagaraVariable;
        EmitterAgeVar: UE.NiagaraVariable;
        EmitterRandomSeedVar: UE.NiagaraVariable;
        EmitterInstanceSeedVar: UE.NiagaraVariable;
        EmitterTotalSpawnedParticlesVar: UE.NiagaraVariable;
        DataSetCompiledData: UE.NiagaraDataSetCompiledData;
        GPUCaptureDataSetCompiledData: UE.NiagaraDataSetCompiledData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterCompiledData_0__: boolean;
    }
    
    class NiagaraStackEditorData extends UE.NiagaraEditorDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StackEntryKeyToDisplayName: TMap<string, string>;
        DismissedStackIssueIds: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackEditorData;
        static Load(InName: string): NiagaraStackEditorData;
    
        __tid_NiagaraStackEditorData_0__: boolean;
    }
    
    class NiagaraEmitterEditorData extends UE.NiagaraEditorDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StackEditorData: UE.NiagaraStackEditorData;
        PlaybackRangeMin: number;
        PlaybackRangeMax: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEmitterEditorData;
        static Load(InName: string): NiagaraEmitterEditorData;
    
        __tid_NiagaraEmitterEditorData_0__: boolean;
    }
    
    class NiagaraEmitterFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEmitterFactoryNew;
        static Load(InName: string): NiagaraEmitterFactoryNew;
    
        __tid_NiagaraEmitterFactoryNew_0__: boolean;
    }
    
    class NiagaraEmitterSectionKey {
        constructor();
        constructor(ModuleId: UE.Guid, Value: UE.NiagaraVariable);
        ModuleId: UE.Guid;
        Value: UE.NiagaraVariable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraEmitterSectionKey_0__: boolean;
    }
    
    class NiagaraThumbnailRendererBase extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraThumbnailRendererBase;
        static Load(InName: string): NiagaraThumbnailRendererBase;
    
        __tid_NiagaraThumbnailRendererBase_0__: boolean;
    }
    
    class NiagaraEmitterThumbnailRenderer extends UE.NiagaraThumbnailRendererBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEmitterThumbnailRenderer;
        static Load(InName: string): NiagaraEmitterThumbnailRenderer;
    
        __tid_NiagaraEmitterThumbnailRenderer_0__: boolean;
    }
    
    class NiagaraEventReceiverEmitterAction extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEventReceiverEmitterAction;
        static Load(InName: string): NiagaraEventReceiverEmitterAction;
    
        __tid_NiagaraEventReceiverEmitterAction_0__: boolean;
    }
    
    class NiagaraEventReceiverEmitterAction_SpawnParticles extends UE.NiagaraEventReceiverEmitterAction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumParticles: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraEventReceiverEmitterAction_SpawnParticles;
        static Load(InName: string): NiagaraEventReceiverEmitterAction_SpawnParticles;
    
        __tid_NiagaraEventReceiverEmitterAction_SpawnParticles_0__: boolean;
    }
    
    class NiagaraFloat {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraFloat_0__: boolean;
    }
    
    class NiagaraFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetNiagaraParameterCollection(WorldContextObject: $Nullable<UE.Object>, Collection: $Nullable<UE.NiagaraParameterCollection>) : UE.NiagaraParameterCollectionInstance;
        static OverrideSystemUserVariableSkeletalMeshComponent(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, SkeletalMeshComponent: $Nullable<UE.SkeletalMeshComponent>) : void;
        static OverrideSystemUserVariableStaticMesh(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, StaticMesh: $Nullable<UE.StaticMesh>) : void;
        static OverrideSystemUserVariableStaticMeshComponent(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, StaticMeshComponent: $Nullable<UE.StaticMeshComponent>) : void;
        static SetSkeletalMeshDataInterfaceSamplingRegions(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, SamplingRegions: TArray<string>) : void;
        static SetTextureObject(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, Texture: $Nullable<UE.Texture>) : void;
        static SetVolumeTextureObject(NiagaraSystem: $Nullable<UE.NiagaraComponent>, OverrideName: string, Texture: $Nullable<UE.VolumeTexture>) : void;
        static SpawnSystemAtLocation(WorldContextObject: $Nullable<UE.Object>, SystemTemplate: $Nullable<UE.NiagaraSystem>, Location: UE.Vector, Rotation?: UE.Rotator /* =  */, Scale?: UE.Vector /* = 1.000000,1.000000,1.000000 */, bAutoDestroy?: boolean /* = true */, bAutoActivate?: boolean /* = true */, PoolingMethod?: UE.ENCPoolMethod /* = None */, bPreCullCheck?: boolean /* = true */) : UE.NiagaraComponent;
        static SpawnSystemAttached(SystemTemplate: $Nullable<UE.NiagaraSystem>, AttachToComponent: $Nullable<UE.SceneComponent>, AttachPointName: string, Location: UE.Vector, Rotation: UE.Rotator, LocationType: UE.EAttachLocation, bAutoDestroy: boolean, bAutoActivate?: boolean /* = true */, PoolingMethod?: UE.ENCPoolMethod /* = None */, bPreCullCheck?: boolean /* = true */) : UE.NiagaraComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraFunctionLibrary;
        static Load(InName: string): NiagaraFunctionLibrary;
    
        __tid_NiagaraFunctionLibrary_0__: boolean;
    }
    
    class NiagaraFunctionScriptFactory extends UE.NiagaraScriptFactoryNew {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraFunctionScriptFactory;
        static Load(InName: string): NiagaraFunctionScriptFactory;
    
        __tid_NiagaraFunctionScriptFactory_0__: boolean;
    }
    
    class NiagaraGraphScriptUsageInfo {
        constructor();
        constructor(BaseId: UE.Guid, UsageType: UE.ENiagaraScriptUsage, UsageId: UE.Guid, CompileHash: UE.NiagaraCompileHash, CompileHashFromGraph: UE.NiagaraCompileHash, CompileLastObjects: TArray<UE.NiagaraCompileHashVisitorDebugInfo>, Traversal: TArray<UE.NiagaraNode>, DataHash: TArray<number>, GeneratedCompileId: UE.Guid);
        BaseId: UE.Guid;
        UsageType: UE.ENiagaraScriptUsage;
        UsageId: UE.Guid;
        CompileHash: UE.NiagaraCompileHash;
        CompileHashFromGraph: UE.NiagaraCompileHash;
        CompileLastObjects: TArray<UE.NiagaraCompileHashVisitorDebugInfo>;
        Traversal: TArray<UE.NiagaraNode>;
        DataHash: TArray<number>;
        GeneratedCompileId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraGraphScriptUsageInfo_0__: boolean;
    }
    
    class NiagaraGraphParameterReference {
        constructor();
        constructor(Key: UE.Guid, Value: TWeakObjectPtr<UE.Object>);
        Key: UE.Guid;
        Value: TWeakObjectPtr<UE.Object>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraGraphParameterReference_0__: boolean;
    }
    
    class NiagaraGraphParameterReferenceCollection {
        constructor();
        constructor(ParameterReferences: TArray<UE.NiagaraGraphParameterReference>, Graph: UE.NiagaraGraph, bCreated: boolean);
        ParameterReferences: TArray<UE.NiagaraGraphParameterReference>;
        Graph: UE.NiagaraGraph;
        bCreated: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraGraphParameterReferenceCollection_0__: boolean;
    }
    
    class NiagaraGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ChangeId: UE.Guid;
        ForceRebuildId: UE.Guid;
        LastBuiltTraversalDataChangeId: UE.Guid;
        CachedUsageInfo: TArray<UE.NiagaraGraphScriptUsageInfo>;
        VariableToMetaData: TMap<UE.NiagaraVariable, UE.NiagaraVariableMetaData>;
        VariableToScriptVariable: TMap<UE.NiagaraVariable, UE.NiagaraScriptVariable>;
        ParameterToReferencesMap: TMap<UE.NiagaraVariable, UE.NiagaraGraphParameterReferenceCollection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraGraph;
        static Load(InName: string): NiagaraGraph;
    
        __tid_NiagaraGraph_0__: boolean;
    }
    
    class NiagaraGraphViewSettings {
        constructor();
        constructor(Location: UE.Vector2D, Zoom: number, bIsValid: boolean);
        Location: UE.Vector2D;
        Zoom: number;
        bIsValid: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraGraphViewSettings_0__: boolean;
    }
    
    class NiagaraHalf {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraHalf_0__: boolean;
    }
    
    class NiagaraHalfVector2 {
        constructor();
        constructor(x: number, y: number);
        x: number;
        y: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraHalfVector2_0__: boolean;
    }
    
    class NiagaraHalfVector3 {
        constructor();
        constructor(x: number, y: number, z: number);
        x: number;
        y: number;
        z: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraHalfVector3_0__: boolean;
    }
    
    class NiagaraHalfVector4 {
        constructor();
        constructor(x: number, y: number, z: number, w: number);
        x: number;
        y: number;
        z: number;
        w: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraHalfVector4_0__: boolean;
    }
    
    class NiagaraID {
        constructor();
        constructor(Index: number, AcquireTag: number);
        Index: number;
        AcquireTag: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraID_0__: boolean;
    }
    
    class NiagaraInputExposureOptions {
        constructor();
        constructor(bExposed: boolean, bRequired: boolean, bCanAutoBind: boolean, bHidden: boolean);
        bExposed: boolean;
        bRequired: boolean;
        bCanAutoBind: boolean;
        bHidden: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraInputExposureOptions_0__: boolean;
    }
    
    class NiagaraInt32 {
        constructor();
        constructor(Value: number);
        Value: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraInt32_0__: boolean;
    }
    
    class NiagaraLightRendererProperties extends UE.NiagaraRendererProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseInverseSquaredFalloff: boolean;
        bAffectsTranslucency: boolean;
        RadiusScale: number;
        ColorAdd: UE.Vector;
        LightRenderingEnabledBinding: UE.NiagaraVariableAttributeBinding;
        LightExponentBinding: UE.NiagaraVariableAttributeBinding;
        PositionBinding: UE.NiagaraVariableAttributeBinding;
        ColorBinding: UE.NiagaraVariableAttributeBinding;
        RadiusBinding: UE.NiagaraVariableAttributeBinding;
        VolumetricScatteringBinding: UE.NiagaraVariableAttributeBinding;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraLightRendererProperties;
        static Load(InName: string): NiagaraLightRendererProperties;
    
        __tid_NiagaraLightRendererProperties_0__: boolean;
    }
    
    class NiagaraMaterialAttributeBinding {
        constructor();
        constructor(MaterialParameterName: string, NiagaraVariable: UE.NiagaraVariableBase, ResolvedNiagaraVariable: UE.NiagaraVariableBase, NiagaraChildVariable: UE.NiagaraVariableBase);
        MaterialParameterName: string;
        NiagaraVariable: UE.NiagaraVariableBase;
        ResolvedNiagaraVariable: UE.NiagaraVariableBase;
        NiagaraChildVariable: UE.NiagaraVariableBase;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraMaterialAttributeBinding_0__: boolean;
    }
    
    class NiagaraMatrix {
        constructor();
        constructor(Row0: UE.Vector4, Row1: UE.Vector4, Row2: UE.Vector4, Row3: UE.Vector4);
        Row0: UE.Vector4;
        Row1: UE.Vector4;
        Row2: UE.Vector4;
        Row3: UE.Vector4;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraMatrix_0__: boolean;
    }
    
    class NiagaraMenuAction extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraMenuAction_0__: boolean;
    }
    
    class NiagaraMeshMaterialOverride {
        constructor();
        constructor(ExplicitMat: UE.MaterialInterface, UserParamBinding: UE.NiagaraUserParameterBinding);
        ExplicitMat: UE.MaterialInterface;
        UserParamBinding: UE.NiagaraUserParameterBinding;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraMeshMaterialOverride_0__: boolean;
    }
    
    class NiagaraMeshRendererProperties extends UE.NiagaraRendererProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParticleMesh: UE.StaticMesh;
        SortMode: UE.ENiagaraSortMode;
        bOverrideMaterials: boolean;
        bSortOnlyWhenTranslucent: boolean;
        OverrideMaterials: TArray<UE.NiagaraMeshMaterialOverride>;
        SubImageSize: UE.Vector2D;
        bSubImageBlend: boolean;
        FacingMode: UE.ENiagaraMeshFacingMode;
        bLockedAxisEnable: boolean;
        LockedAxis: UE.Vector;
        LockedAxisSpace: UE.ENiagaraMeshLockedAxisSpace;
        PivotOffset: UE.Vector;
        PivotOffsetSpace: UE.ENiagaraMeshPivotOffsetSpace;
        bEnableFrustumCulling: boolean;
        bEnableCameraDistanceCulling: boolean;
        MinCameraDistance: number;
        MaxCameraDistance: number;
        RendererVisibility: number;
        PositionBinding: UE.NiagaraVariableAttributeBinding;
        ColorBinding: UE.NiagaraVariableAttributeBinding;
        VelocityBinding: UE.NiagaraVariableAttributeBinding;
        MeshOrientationBinding: UE.NiagaraVariableAttributeBinding;
        ScaleBinding: UE.NiagaraVariableAttributeBinding;
        SubImageIndexBinding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterialBinding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial1Binding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial2Binding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial3Binding: UE.NiagaraVariableAttributeBinding;
        MaterialRandomBinding: UE.NiagaraVariableAttributeBinding;
        CustomSortingBinding: UE.NiagaraVariableAttributeBinding;
        NormalizedAgeBinding: UE.NiagaraVariableAttributeBinding;
        CameraOffsetBinding: UE.NiagaraVariableAttributeBinding;
        RendererVisibilityTagBinding: UE.NiagaraVariableAttributeBinding;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraMeshRendererProperties;
        static Load(InName: string): NiagaraMeshRendererProperties;
    
        __tid_NiagaraMeshRendererProperties_0__: boolean;
    }
    
    class NiagaraMessageDataText extends UE.NiagaraMessageData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MessageText: string;
        MessageSeverity: UE.ENiagaraMessageSeverity;
        TopicName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraMessageDataText;
        static Load(InName: string): NiagaraMessageDataText;
    
        __tid_NiagaraMessageDataText_0__: boolean;
    }
    
    class NiagaraModuleScriptFactory extends UE.NiagaraScriptFactoryNew {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraModuleScriptFactory;
        static Load(InName: string): NiagaraModuleScriptFactory;
    
        __tid_NiagaraModuleScriptFactory_0__: boolean;
    }
    
    class NiagaraNodeAssignment extends UE.NiagaraNodeFunctionCall {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssignmentTarget: UE.NiagaraVariable;
        AssignmentDefaultValue: string;
        AssignmentTargets: TArray<UE.NiagaraVariable>;
        AssignmentDefaultValues: TArray<string>;
        OldFunctionCallName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeAssignment;
        static Load(InName: string): NiagaraNodeAssignment;
    
        __tid_NiagaraNodeAssignment_0__: boolean;
    }
    
    class NiagaraNodeConvert extends UE.NiagaraNodeWithDynamicPins {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AutowireSwizzle: string;
        AutowireMakeType: UE.NiagaraTypeDefinition;
        AutowireBreakType: UE.NiagaraTypeDefinition;
        Connections: TArray<UE.NiagaraConvertConnection>;
        bIsWiringShown: boolean;
        ExpandedItems: TArray<UE.NiagaraConvertPinRecord>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeConvert;
        static Load(InName: string): NiagaraNodeConvert;
    
        __tid_NiagaraNodeConvert_0__: boolean;
    }
    
    class NiagaraNodeCustomHlsl extends UE.NiagaraNodeFunctionCall {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ScriptUsage: UE.ENiagaraScriptUsage;
        CustomHlsl: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeCustomHlsl;
        static Load(InName: string): NiagaraNodeCustomHlsl;
    
        __tid_NiagaraNodeCustomHlsl_0__: boolean;
    }
    
    class NiagaraNodeDataSetBase extends UE.NiagaraNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DataSet: UE.NiagaraDataSetID;
        Variables: TArray<UE.NiagaraVariable>;
        VariableFriendlyNames: TArray<string>;
        ExternalStructAsset: UE.Struct;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeDataSetBase;
        static Load(InName: string): NiagaraNodeDataSetBase;
    
        __tid_NiagaraNodeDataSetBase_0__: boolean;
    }
    
    class NiagaraNodeEmitter extends UE.NiagaraNodeWithDynamicPins {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwnerSystem: UE.NiagaraSystem;
        EmitterHandleId: UE.Guid;
        DisplayName: string;
        ScriptType: UE.ENiagaraScriptUsage;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeEmitter;
        static Load(InName: string): NiagaraNodeEmitter;
    
        __tid_NiagaraNodeEmitter_0__: boolean;
    }
    
    class PinGuidsForPath {
        constructor();
        constructor(OutputPinGuid: UE.Guid, InputAPinGuid: UE.Guid, InputBPinGuid: UE.Guid);
        OutputPinGuid: UE.Guid;
        InputAPinGuid: UE.Guid;
        InputBPinGuid: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PinGuidsForPath_0__: boolean;
    }
    
    class NiagaraNodeIf extends UE.NiagaraNodeWithDynamicPins {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OutputVars: TArray<UE.NiagaraVariable>;
        PathAssociatedPinGuids: TArray<UE.PinGuidsForPath>;
        ConditionPinGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeIf;
        static Load(InName: string): NiagaraNodeIf;
    
        __tid_NiagaraNodeIf_0__: boolean;
    }
    
    class NiagaraNodeInput extends UE.NiagaraNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Input: UE.NiagaraVariable;
        Usage: UE.ENiagaraInputNodeUsage;
        CallSortPriority: number;
        ExposureOptions: UE.NiagaraInputExposureOptions;
        DataInterface: UE.NiagaraDataInterface;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeInput;
        static Load(InName: string): NiagaraNodeInput;
    
        __tid_NiagaraNodeInput_0__: boolean;
    }
    
    class NiagaraNodeOp extends UE.NiagaraNodeWithDynamicPins {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OpName: string;
        AddedPins: TArray<UE.AddedPinData>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeOp;
        static Load(InName: string): NiagaraNodeOp;
    
        __tid_NiagaraNodeOp_0__: boolean;
    }
    
    class NiagaraNodeOutput extends UE.NiagaraNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Outputs: TArray<UE.NiagaraVariable>;
        ScriptType: UE.ENiagaraScriptUsage;
        ScriptTypeId: UE.Guid;
        ScriptTypeIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeOutput;
        static Load(InName: string): NiagaraNodeOutput;
    
        __tid_NiagaraNodeOutput_0__: boolean;
    }
    
    class NiagaraNodeParameterMapBase extends UE.NiagaraNodeWithDynamicPins {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeParameterMapBase;
        static Load(InName: string): NiagaraNodeParameterMapBase;
    
        __tid_NiagaraNodeParameterMapBase_0__: boolean;
    }
    
    class NiagaraNodeParameterMapSet extends UE.NiagaraNodeParameterMapBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeParameterMapSet;
        static Load(InName: string): NiagaraNodeParameterMapSet;
    
        __tid_NiagaraNodeParameterMapSet_0__: boolean;
    }
    
    class NiagaraNodeParameterMapFor extends UE.NiagaraNodeParameterMapSet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeParameterMapFor;
        static Load(InName: string): NiagaraNodeParameterMapFor;
    
        __tid_NiagaraNodeParameterMapFor_0__: boolean;
    }
    
    class NiagaraNodeParameterMapGet extends UE.NiagaraNodeParameterMapBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PinOutputToPinDefaultPersistentId: TMap<UE.Guid, UE.Guid>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeParameterMapGet;
        static Load(InName: string): NiagaraNodeParameterMapGet;
    
        __tid_NiagaraNodeParameterMapGet_0__: boolean;
    }
    
    class NiagaraNodeReadDataSet extends UE.NiagaraNodeDataSetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeReadDataSet;
        static Load(InName: string): NiagaraNodeReadDataSet;
    
        __tid_NiagaraNodeReadDataSet_0__: boolean;
    }
    
    class NiagaraNodeReroute extends UE.NiagaraNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeReroute;
        static Load(InName: string): NiagaraNodeReroute;
    
        __tid_NiagaraNodeReroute_0__: boolean;
    }
    
    class NiagaraNodeUsageSelector extends UE.NiagaraNodeWithDynamicPins {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OutputVars: TArray<UE.NiagaraVariable>;
        OutputVarGuids: TArray<UE.Guid>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeUsageSelector;
        static Load(InName: string): NiagaraNodeUsageSelector;
    
        __tid_NiagaraNodeUsageSelector_0__: boolean;
    }
    
    class NiagaraNodeSimTargetSelector extends UE.NiagaraNodeUsageSelector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeSimTargetSelector;
        static Load(InName: string): NiagaraNodeSimTargetSelector;
    
        __tid_NiagaraNodeSimTargetSelector_0__: boolean;
    }
    
    class StaticSwitchTypeData {
        constructor();
        constructor(SwitchType: UE.ENiagaraStaticSwitchType, MaxIntCount: number, Enum: UE.Enum, SwitchConstant: string);
        SwitchType: UE.ENiagaraStaticSwitchType;
        MaxIntCount: number;
        Enum: UE.Enum;
        SwitchConstant: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticSwitchTypeData_0__: boolean;
    }
    
    class NiagaraNodeStaticSwitch extends UE.NiagaraNodeUsageSelector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputParameterName: string;
        SwitchTypeData: UE.StaticSwitchTypeData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeStaticSwitch;
        static Load(InName: string): NiagaraNodeStaticSwitch;
    
        __tid_NiagaraNodeStaticSwitch_0__: boolean;
    }
    
    class NiagaraNodeWriteDataSet extends UE.NiagaraNodeDataSetBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraNodeWriteDataSet;
        static Load(InName: string): NiagaraNodeWriteDataSet;
    
        __tid_NiagaraNodeWriteDataSet_0__: boolean;
    }
    
    class NiagaraNumeric {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraNumeric_0__: boolean;
    }
    
    class NiagaraOverviewNode extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OwningSystem: UE.NiagaraSystem;
        EmitterHandleGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraOverviewNode;
        static Load(InName: string): NiagaraOverviewNode;
    
        __tid_NiagaraOverviewNode_0__: boolean;
    }
    
    class NiagaraParameterCollectionFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraParameterCollectionFactoryNew;
        static Load(InName: string): NiagaraParameterCollectionFactoryNew;
    
        __tid_NiagaraParameterCollectionFactoryNew_0__: boolean;
    }
    
    class NiagaraParameterCollectionInstanceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraParameterCollectionInstanceFactoryNew;
        static Load(InName: string): NiagaraParameterCollectionInstanceFactoryNew;
    
        __tid_NiagaraParameterCollectionInstanceFactoryNew_0__: boolean;
    }
    
    class NiagaraParameterMap {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraParameterMap_0__: boolean;
    }
    
    class NiagaraParameterScopeInfo {
        constructor();
        constructor(Scope: UE.ENiagaraParameterScope, NamespaceString: string);
        Scope: UE.ENiagaraParameterScope;
        NamespaceString: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraParameterScopeInfo_0__: boolean;
    }
    
    class NiagaraParticleCallbackHandler extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReceiveParticleData(Data: TArray<UE.BasicParticleData>, NiagaraSystem: $Nullable<UE.NiagaraSystem>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraParticleCallbackHandler;
        static Load(InName: string): NiagaraParticleCallbackHandler;
    
        __tid_NiagaraParticleCallbackHandler_0__: boolean;
    }
    
    class NiagaraPlatformSetConflictEntry {
        constructor();
        constructor(ProfileName: string, QualityLevelMask: number);
        ProfileName: string;
        QualityLevelMask: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraPlatformSetConflictEntry_0__: boolean;
    }
    
    class NiagaraPlatformSetConflictInfo {
        constructor();
        constructor(SetAIndex: number, SetBIndex: number, Conflicts: TArray<UE.NiagaraPlatformSetConflictEntry>);
        SetAIndex: number;
        SetBIndex: number;
        Conflicts: TArray<UE.NiagaraPlatformSetConflictEntry>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraPlatformSetConflictInfo_0__: boolean;
    }
    
    class NiagaraPrecompileContainer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Scripts: TArray<UE.NiagaraScript>;
        System: UE.NiagaraSystem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPrecompileContainer;
        static Load(InName: string): NiagaraPrecompileContainer;
    
        __tid_NiagaraPrecompileContainer_0__: boolean;
    }
    
    class NiagaraPreviewAxis extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ApplyToPreview(PreviewComponent: $Nullable<UE.NiagaraComponent>, PreviewIndex: number, bIsXAxis: boolean, OutLabelText: $Ref<string>) : void;
        Num() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis;
        static Load(InName: string): NiagaraPreviewAxis;
    
        __tid_NiagaraPreviewAxis_0__: boolean;
    }
    
    class NiagaraPreviewAxis_InterpParamBase extends UE.NiagaraPreviewAxis {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Param: string;
        Count: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis_InterpParamBase;
        static Load(InName: string): NiagaraPreviewAxis_InterpParamBase;
    
        __tid_NiagaraPreviewAxis_InterpParamBase_0__: boolean;
    }
    
    class NiagaraPreviewAxis_InterpParamFloat extends UE.NiagaraPreviewAxis_InterpParamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: number;
        Max: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis_InterpParamFloat;
        static Load(InName: string): NiagaraPreviewAxis_InterpParamFloat;
    
        __tid_NiagaraPreviewAxis_InterpParamFloat_0__: boolean;
    }
    
    class NiagaraPreviewAxis_InterpParamInt32 extends UE.NiagaraPreviewAxis_InterpParamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: number;
        Max: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis_InterpParamInt32;
        static Load(InName: string): NiagaraPreviewAxis_InterpParamInt32;
    
        __tid_NiagaraPreviewAxis_InterpParamInt32_0__: boolean;
    }
    
    class NiagaraPreviewAxis_InterpParamLinearColor extends UE.NiagaraPreviewAxis_InterpParamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: UE.LinearColor;
        Max: UE.LinearColor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis_InterpParamLinearColor;
        static Load(InName: string): NiagaraPreviewAxis_InterpParamLinearColor;
    
        __tid_NiagaraPreviewAxis_InterpParamLinearColor_0__: boolean;
    }
    
    class NiagaraPreviewAxis_InterpParamVector extends UE.NiagaraPreviewAxis_InterpParamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: UE.Vector;
        Max: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis_InterpParamVector;
        static Load(InName: string): NiagaraPreviewAxis_InterpParamVector;
    
        __tid_NiagaraPreviewAxis_InterpParamVector_0__: boolean;
    }
    
    class NiagaraPreviewAxis_InterpParamVector2D extends UE.NiagaraPreviewAxis_InterpParamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: UE.Vector2D;
        Max: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis_InterpParamVector2D;
        static Load(InName: string): NiagaraPreviewAxis_InterpParamVector2D;
    
        __tid_NiagaraPreviewAxis_InterpParamVector2D_0__: boolean;
    }
    
    class NiagaraPreviewAxis_InterpParamVector4 extends UE.NiagaraPreviewAxis_InterpParamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Min: UE.Vector4;
        Max: UE.Vector4;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewAxis_InterpParamVector4;
        static Load(InName: string): NiagaraPreviewAxis_InterpParamVector4;
    
        __tid_NiagaraPreviewAxis_InterpParamVector4_0__: boolean;
    }
    
    class NiagaraPreviewBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetLabelText(InXAxisText: string, InYAxisText: string) : void;
        SetSystem(InSystem: $Nullable<UE.NiagaraSystem>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewBase;
        static Load(InName: string): NiagaraPreviewBase;
    
        __tid_NiagaraPreviewBase_0__: boolean;
    }
    
    class NiagaraPreviewGrid extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        System: UE.NiagaraSystem;
        ResetMode: UE.ENiagaraPreviewGridResetMode;
        PreviewAxisX: UE.NiagaraPreviewAxis;
        PreviewAxisY: UE.NiagaraPreviewAxis;
        PreviewClass: UE.Class;
        SpacingX: number;
        SpacingY: number;
        NumX: number;
        NumY: number;
        PreviewComponents: TArray<UE.ChildActorComponent>;
        SpriteComponent: UE.BillboardComponent;
        ArrowComponent: UE.ArrowComponent;
        ActivatePreviews(bReset: boolean) : void;
        DeactivatePreviews() : void;
        GetPreviews(OutPreviews: $Ref<TArray<UE.NiagaraComponent>>) : void;
        SetPaused(bPaused: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraPreviewGrid;
        static Load(InName: string): NiagaraPreviewGrid;
    
        __tid_NiagaraPreviewGrid_0__: boolean;
    }
    
    class NiagaraRandInfo {
        constructor();
        constructor(Seed1: number, Seed2: number, Seed3: number);
        Seed1: number;
        Seed2: number;
        Seed3: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraRandInfo_0__: boolean;
    }
    
    class NiagaraRibbonUVSettings {
        constructor();
        constructor(LeadingEdgeMode: UE.ENiagaraRibbonUVEdgeMode, TrailingEdgeMode: UE.ENiagaraRibbonUVEdgeMode, DistributionMode: UE.ENiagaraRibbonUVDistributionMode, TilingLength: number, Offset: UE.Vector2D, Scale: UE.Vector2D, bEnablePerParticleUOverride: boolean, bEnablePerParticleVRangeOverride: boolean);
        LeadingEdgeMode: UE.ENiagaraRibbonUVEdgeMode;
        TrailingEdgeMode: UE.ENiagaraRibbonUVEdgeMode;
        DistributionMode: UE.ENiagaraRibbonUVDistributionMode;
        TilingLength: number;
        Offset: UE.Vector2D;
        Scale: UE.Vector2D;
        bEnablePerParticleUOverride: boolean;
        bEnablePerParticleVRangeOverride: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraRibbonUVSettings_0__: boolean;
    }
    
    class NiagaraRibbonRendererProperties extends UE.NiagaraRendererProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Material: UE.MaterialInterface;
        MaterialUserParamBinding: UE.NiagaraUserParameterBinding;
        FacingMode: UE.ENiagaraRibbonFacingMode;
        UV0Settings: UE.NiagaraRibbonUVSettings;
        UV1Settings: UE.NiagaraRibbonUVSettings;
        UV0TilingDistance: number;
        UV0Scale: UE.Vector2D;
        UV0Offset: UE.Vector2D;
        UV0AgeOffsetMode: UE.ENiagaraRibbonAgeOffsetMode;
        UV1TilingDistance: number;
        UV1Scale: UE.Vector2D;
        UV1Offset: UE.Vector2D;
        UV1AgeOffsetMode: UE.ENiagaraRibbonAgeOffsetMode;
        DrawDirection: UE.ENiagaraRibbonDrawDirection;
        CurveTension: number;
        TessellationMode: UE.ENiagaraRibbonTessellationMode;
        TessellationFactor: number;
        bUseConstantFactor: boolean;
        TessellationAngle: number;
        bScreenSpaceTessellation: boolean;
        PositionBinding: UE.NiagaraVariableAttributeBinding;
        ColorBinding: UE.NiagaraVariableAttributeBinding;
        VelocityBinding: UE.NiagaraVariableAttributeBinding;
        NormalizedAgeBinding: UE.NiagaraVariableAttributeBinding;
        RibbonTwistBinding: UE.NiagaraVariableAttributeBinding;
        RibbonWidthBinding: UE.NiagaraVariableAttributeBinding;
        RibbonFacingBinding: UE.NiagaraVariableAttributeBinding;
        RibbonIdBinding: UE.NiagaraVariableAttributeBinding;
        RibbonLinkOrderBinding: UE.NiagaraVariableAttributeBinding;
        MaterialRandomBinding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterialBinding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial1Binding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial2Binding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial3Binding: UE.NiagaraVariableAttributeBinding;
        U0OverrideBinding: UE.NiagaraVariableAttributeBinding;
        V0RangeOverrideBinding: UE.NiagaraVariableAttributeBinding;
        U1OverrideBinding: UE.NiagaraVariableAttributeBinding;
        V1RangeOverrideBinding: UE.NiagaraVariableAttributeBinding;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraRibbonRendererProperties;
        static Load(InName: string): NiagaraRibbonRendererProperties;
    
        __tid_NiagaraRibbonRendererProperties_0__: boolean;
    }
    
    class NiagaraScalabilityManager {
        constructor();
        constructor(EffectType: UE.NiagaraEffectType, ManagedComponents: TArray<UE.NiagaraComponent>);
        EffectType: UE.NiagaraEffectType;
        ManagedComponents: TArray<UE.NiagaraComponent>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScalabilityManager_0__: boolean;
    }
    
    class NiagaraSchemaAction_NewComment extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSchemaAction_NewComment_0__: boolean;
    }
    
    class NiagaraSchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(NodeTemplate: UE.EdGraphNode, InternalName: string);
        NodeTemplate: UE.EdGraphNode;
        InternalName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSchemaAction_NewNode_0__: boolean;
    }
    
    class NiagaraScratchPadViewModel extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraScratchPadViewModel;
        static Load(InName: string): NiagaraScratchPadViewModel;
    
        __tid_NiagaraScratchPadViewModel_0__: boolean;
    }
    
    class NiagaraScriptInstanceParameterStore extends UE.NiagaraParameterStore {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraScriptInstanceParameterStore_0__: boolean;
    }
    
    class NiagaraScriptSource extends UE.NiagaraScriptSourceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NodeGraph: UE.NiagaraGraph;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraScriptSource;
        static Load(InName: string): NiagaraScriptSource;
    
        __tid_NiagaraScriptSource_0__: boolean;
    }
    
    class NiagaraSequence extends UE.MovieSceneSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MovieScene: UE.MovieScene;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSequence;
        static Load(InName: string): NiagaraSequence;
    
        __tid_NiagaraSequence_0__: boolean;
    }
    
    class SequencerTrackFilterExtension extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequencerTrackFilterExtension;
        static Load(InName: string): SequencerTrackFilterExtension;
    
        __tid_SequencerTrackFilterExtension_0__: boolean;
    }
    
    class NiagaraSequencerTrackFilter extends UE.SequencerTrackFilterExtension {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSequencerTrackFilter;
        static Load(InName: string): NiagaraSequencerTrackFilter;
    
        __tid_NiagaraSequencerTrackFilter_0__: boolean;
    }
    
    class NiagaraSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AdditionalParameterTypes: TArray<UE.SoftObjectPath>;
        AdditionalPayloadTypes: TArray<UE.SoftObjectPath>;
        AdditionalParameterEnums: TArray<UE.SoftObjectPath>;
        DefaultEffectType: UE.SoftObjectPath;
        QualityLevels: TArray<string>;
        ComponentRendererWarningsPerClass: TMap<string, string>;
        DefaultRenderTargetFormat: UE.ETextureRenderTargetFormat;
        DefaultGridFormat: UE.ENiagaraGpuBufferFormat;
        DefaultEffectTypePtr: UE.NiagaraEffectType;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSettings;
        static Load(InName: string): NiagaraSettings;
    
        __tid_NiagaraSettings_0__: boolean;
    }
    
    class NiagaraSignificanceHandlerAge extends UE.NiagaraSignificanceHandler {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSignificanceHandlerAge;
        static Load(InName: string): NiagaraSignificanceHandlerAge;
    
        __tid_NiagaraSignificanceHandlerAge_0__: boolean;
    }
    
    class NiagaraSignificanceHandlerDistance extends UE.NiagaraSignificanceHandler {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSignificanceHandlerDistance;
        static Load(InName: string): NiagaraSignificanceHandlerDistance;
    
        __tid_NiagaraSignificanceHandlerDistance_0__: boolean;
    }
    
    class NiagaraVariableDataInterfaceBinding {
        constructor();
        constructor(BoundVariable: UE.NiagaraVariable);
        BoundVariable: UE.NiagaraVariable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableDataInterfaceBinding_0__: boolean;
    }
    
    class NiagaraSimulationStageGeneric extends UE.NiagaraSimulationStageBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IterationSource: UE.ENiagaraIterationSource;
        Iterations: number;
        bSpawnOnly: boolean;
        bDisablePartialParticleUpdate: boolean;
        DataInterface: UE.NiagaraVariableDataInterfaceBinding;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSimulationStageGeneric;
        static Load(InName: string): NiagaraSimulationStageGeneric;
    
        __tid_NiagaraSimulationStageGeneric_0__: boolean;
    }
    
    class NiagaraSpawnInfo {
        constructor();
        constructor(Count: number, InterpStartDt: number, IntervalDt: number, SpawnGroup: number);
        Count: number;
        InterpStartDt: number;
        IntervalDt: number;
        SpawnGroup: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraSpawnInfo_0__: boolean;
    }
    
    class NiagaraSpriteRendererProperties extends UE.NiagaraRendererProperties {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Material: UE.MaterialInterface;
        SourceMode: UE.ENiagaraRendererSourceDataMode;
        MaterialUserParamBinding: UE.NiagaraUserParameterBinding;
        Alignment: UE.ENiagaraSpriteAlignment;
        FacingMode: UE.ENiagaraSpriteFacingMode;
        PivotInUVSpace: UE.Vector2D;
        SortMode: UE.ENiagaraSortMode;
        SubImageSize: UE.Vector2D;
        bSubImageBlend: boolean;
        bRemoveHMDRollInVR: boolean;
        bSortOnlyWhenTranslucent: boolean;
        bGpuLowLatencyTranslucency: boolean;
        MinFacingCameraBlendDistance: number;
        MaxFacingCameraBlendDistance: number;
        bEnableCameraDistanceCulling: boolean;
        MinCameraDistance: number;
        MaxCameraDistance: number;
        RendererVisibility: number;
        PositionBinding: UE.NiagaraVariableAttributeBinding;
        ColorBinding: UE.NiagaraVariableAttributeBinding;
        VelocityBinding: UE.NiagaraVariableAttributeBinding;
        SpriteRotationBinding: UE.NiagaraVariableAttributeBinding;
        SpriteSizeBinding: UE.NiagaraVariableAttributeBinding;
        SpriteFacingBinding: UE.NiagaraVariableAttributeBinding;
        SpriteAlignmentBinding: UE.NiagaraVariableAttributeBinding;
        SubImageIndexBinding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterialBinding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial1Binding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial2Binding: UE.NiagaraVariableAttributeBinding;
        DynamicMaterial3Binding: UE.NiagaraVariableAttributeBinding;
        CameraOffsetBinding: UE.NiagaraVariableAttributeBinding;
        UVScaleBinding: UE.NiagaraVariableAttributeBinding;
        MaterialRandomBinding: UE.NiagaraVariableAttributeBinding;
        CustomSortingBinding: UE.NiagaraVariableAttributeBinding;
        NormalizedAgeBinding: UE.NiagaraVariableAttributeBinding;
        RendererVisibilityTagBinding: UE.NiagaraVariableAttributeBinding;
        MaterialParameterBindings: TArray<UE.NiagaraMaterialAttributeBinding>;
        bUseMaterialCutoutTexture: boolean;
        CutoutTexture: UE.Texture2D;
        BoundingMode: UE.ESubUVBoundingVertexCount;
        OpacitySourceMode: UE.EOpacitySourceMode;
        AlphaThreshold: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSpriteRendererProperties;
        static Load(InName: string): NiagaraSpriteRendererProperties;
    
        __tid_NiagaraSpriteRendererProperties_0__: boolean;
    }
    
    class NiagaraStackAssetAction_EventSource extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraStackAssetAction_EventSource_0__: boolean;
    }
    
    class NiagaraStackAssetAction_VarBind extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraStackAssetAction_VarBind_0__: boolean;
    }
    
    class NiagaraStackErrorItem extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackErrorItem;
        static Load(InName: string): NiagaraStackErrorItem;
    
        __tid_NiagaraStackErrorItem_0__: boolean;
    }
    
    class NiagaraStackEntry extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Children: TArray<UE.NiagaraStackEntry>;
        ErrorChildren: TArray<UE.NiagaraStackErrorItem>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackEntry;
        static Load(InName: string): NiagaraStackEntry;
    
        __tid_NiagaraStackEntry_0__: boolean;
    }
    
    class NiagaraStackItemFooter extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackItemFooter;
        static Load(InName: string): NiagaraStackItemFooter;
    
        __tid_NiagaraStackItemFooter_0__: boolean;
    }
    
    class NiagaraStackItem extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ItemFooter: UE.NiagaraStackItemFooter;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackItem;
        static Load(InName: string): NiagaraStackItem;
    
        __tid_NiagaraStackItem_0__: boolean;
    }
    
    class NiagaraStackItemContent extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackItemContent;
        static Load(InName: string): NiagaraStackItemContent;
    
        __tid_NiagaraStackItemContent_0__: boolean;
    }
    
    class NiagaraStackObject extends UE.NiagaraStackItemContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackObject;
        static Load(InName: string): NiagaraStackObject;
    
        __tid_NiagaraStackObject_0__: boolean;
    }
    
    class NiagaraStackEmitterPropertiesItem extends UE.NiagaraStackItem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterObject: UE.NiagaraStackObject;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackEmitterPropertiesItem;
        static Load(InName: string): NiagaraStackEmitterPropertiesItem;
    
        __tid_NiagaraStackEmitterPropertiesItem_0__: boolean;
    }
    
    class NiagaraStackItemGroupFooter extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackItemGroupFooter;
        static Load(InName: string): NiagaraStackItemGroupFooter;
    
        __tid_NiagaraStackItemGroupFooter_0__: boolean;
    }
    
    class NiagaraStackItemGroup extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GroupFooter: UE.NiagaraStackItemGroupFooter;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackItemGroup;
        static Load(InName: string): NiagaraStackItemGroup;
    
        __tid_NiagaraStackItemGroup_0__: boolean;
    }
    
    class NiagaraStackEmitterSettingsGroup extends UE.NiagaraStackItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertiesItem: UE.NiagaraStackEmitterPropertiesItem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackEmitterSettingsGroup;
        static Load(InName: string): NiagaraStackEmitterSettingsGroup;
    
        __tid_NiagaraStackEmitterSettingsGroup_0__: boolean;
    }
    
    class NiagaraStackErrorItemFix extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackErrorItemFix;
        static Load(InName: string): NiagaraStackErrorItemFix;
    
        __tid_NiagaraStackErrorItemFix_0__: boolean;
    }
    
    class NiagaraStackErrorItemDismiss extends UE.NiagaraStackErrorItemFix {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackErrorItemDismiss;
        static Load(InName: string): NiagaraStackErrorItemDismiss;
    
        __tid_NiagaraStackErrorItemDismiss_0__: boolean;
    }
    
    class NiagaraStackErrorItemLongDescription extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackErrorItemLongDescription;
        static Load(InName: string): NiagaraStackErrorItemLongDescription;
    
        __tid_NiagaraStackErrorItemLongDescription_0__: boolean;
    }
    
    class NiagaraStackEventHandlerGroup extends UE.NiagaraStackItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackEventHandlerGroup;
        static Load(InName: string): NiagaraStackEventHandlerGroup;
    
        __tid_NiagaraStackEventHandlerGroup_0__: boolean;
    }
    
    class NiagaraStackEventHandlerPropertiesItem extends UE.NiagaraStackItem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterObject: UE.NiagaraStackObject;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackEventHandlerPropertiesItem;
        static Load(InName: string): NiagaraStackEventHandlerPropertiesItem;
    
        __tid_NiagaraStackEventHandlerPropertiesItem_0__: boolean;
    }
    
    class NiagaraStackScriptItemGroup extends UE.NiagaraStackItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackScriptItemGroup;
        static Load(InName: string): NiagaraStackScriptItemGroup;
    
        __tid_NiagaraStackScriptItemGroup_0__: boolean;
    }
    
    class NiagaraStackEventScriptItemGroup extends UE.NiagaraStackScriptItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EventHandlerProperties: UE.NiagaraStackEventHandlerPropertiesItem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackEventScriptItemGroup;
        static Load(InName: string): NiagaraStackEventScriptItemGroup;
    
        __tid_NiagaraStackEventScriptItemGroup_0__: boolean;
    }
    
    class NiagaraStackFunctionInput extends UE.NiagaraStackItemContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackFunctionInput;
        static Load(InName: string): NiagaraStackFunctionInput;
    
        __tid_NiagaraStackFunctionInput_0__: boolean;
    }
    
    class NiagaraStackFunctionInputCollection extends UE.NiagaraStackItemContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackFunctionInputCollection;
        static Load(InName: string): NiagaraStackFunctionInputCollection;
    
        __tid_NiagaraStackFunctionInputCollection_0__: boolean;
    }
    
    class NiagaraStackInputCategory extends UE.NiagaraStackItemContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackInputCategory;
        static Load(InName: string): NiagaraStackInputCategory;
    
        __tid_NiagaraStackInputCategory_0__: boolean;
    }
    
    class NiagaraStackItemTextContent extends UE.NiagaraStackItemContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackItemTextContent;
        static Load(InName: string): NiagaraStackItemTextContent;
    
        __tid_NiagaraStackItemTextContent_0__: boolean;
    }
    
    class NiagaraStackModuleItemLinkedInputCollection extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackModuleItemLinkedInputCollection;
        static Load(InName: string): NiagaraStackModuleItemLinkedInputCollection;
    
        __tid_NiagaraStackModuleItemLinkedInputCollection_0__: boolean;
    }
    
    class NiagaraStackModuleItemOutputCollection extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackModuleItemOutputCollection;
        static Load(InName: string): NiagaraStackModuleItemOutputCollection;
    
        __tid_NiagaraStackModuleItemOutputCollection_0__: boolean;
    }
    
    class NiagaraStackModuleItem extends UE.NiagaraStackItem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LinkedInputCollection: UE.NiagaraStackModuleItemLinkedInputCollection;
        InputCollection: UE.NiagaraStackFunctionInputCollection;
        OutputCollection: UE.NiagaraStackModuleItemOutputCollection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackModuleItem;
        static Load(InName: string): NiagaraStackModuleItem;
    
        __tid_NiagaraStackModuleItem_0__: boolean;
    }
    
    class NiagaraStackModuleItemOutput extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackModuleItemOutput;
        static Load(InName: string): NiagaraStackModuleItemOutput;
    
        __tid_NiagaraStackModuleItemOutput_0__: boolean;
    }
    
    class NiagaraStackParameterStoreEntry extends UE.NiagaraStackItemContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ValueObjectEntry: UE.NiagaraStackObject;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackParameterStoreEntry;
        static Load(InName: string): NiagaraStackParameterStoreEntry;
    
        __tid_NiagaraStackParameterStoreEntry_0__: boolean;
    }
    
    class NiagaraStackParameterStoreItem extends UE.NiagaraStackItem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackParameterStoreItem;
        static Load(InName: string): NiagaraStackParameterStoreItem;
    
        __tid_NiagaraStackParameterStoreItem_0__: boolean;
    }
    
    class NiagaraStackPropertyRow extends UE.NiagaraStackItemContent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackPropertyRow;
        static Load(InName: string): NiagaraStackPropertyRow;
    
        __tid_NiagaraStackPropertyRow_0__: boolean;
    }
    
    class NiagaraStackRendererItem extends UE.NiagaraStackItem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RendererObject: UE.NiagaraStackObject;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackRendererItem;
        static Load(InName: string): NiagaraStackRendererItem;
    
        __tid_NiagaraStackRendererItem_0__: boolean;
    }
    
    class NiagaraStackRenderItemGroup extends UE.NiagaraStackItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackRenderItemGroup;
        static Load(InName: string): NiagaraStackRenderItemGroup;
    
        __tid_NiagaraStackRenderItemGroup_0__: boolean;
    }
    
    class NiagaraStackSystemSettingsGroup extends UE.NiagaraStackItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackSystemSettingsGroup;
        static Load(InName: string): NiagaraStackSystemSettingsGroup;
    
        __tid_NiagaraStackSystemSettingsGroup_0__: boolean;
    }
    
    class NiagaraStackSimulationStagesGroup extends UE.NiagaraStackItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackSimulationStagesGroup;
        static Load(InName: string): NiagaraStackSimulationStagesGroup;
    
        __tid_NiagaraStackSimulationStagesGroup_0__: boolean;
    }
    
    class NiagaraStackRoot extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SystemSettingsGroup: UE.NiagaraStackSystemSettingsGroup;
        SystemSpawnGroup: UE.NiagaraStackScriptItemGroup;
        SystemUpdateGroup: UE.NiagaraStackScriptItemGroup;
        EmitterSettingsGroup: UE.NiagaraStackEmitterSettingsGroup;
        EmitterSpawnGroup: UE.NiagaraStackScriptItemGroup;
        EmitterUpdateGroup: UE.NiagaraStackScriptItemGroup;
        ParticleSpawnGroup: UE.NiagaraStackScriptItemGroup;
        ParticleUpdateGroup: UE.NiagaraStackScriptItemGroup;
        AddEventHandlerGroup: UE.NiagaraStackEventHandlerGroup;
        AddSimulationStageGroup: UE.NiagaraStackSimulationStagesGroup;
        RenderGroup: UE.NiagaraStackRenderItemGroup;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackRoot;
        static Load(InName: string): NiagaraStackRoot;
    
        __tid_NiagaraStackRoot_0__: boolean;
    }
    
    class NiagaraStackSelection extends UE.NiagaraStackEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackSelection;
        static Load(InName: string): NiagaraStackSelection;
    
        __tid_NiagaraStackSelection_0__: boolean;
    }
    
    class NiagaraStackSimulationStagePropertiesItem extends UE.NiagaraStackItem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SimulationStageObject: UE.NiagaraStackObject;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackSimulationStagePropertiesItem;
        static Load(InName: string): NiagaraStackSimulationStagePropertiesItem;
    
        __tid_NiagaraStackSimulationStagePropertiesItem_0__: boolean;
    }
    
    class NiagaraStackSimulationStageGroup extends UE.NiagaraStackScriptItemGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SimulationStageProperties: UE.NiagaraStackSimulationStagePropertiesItem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackSimulationStageGroup;
        static Load(InName: string): NiagaraStackSimulationStageGroup;
    
        __tid_NiagaraStackSimulationStageGroup_0__: boolean;
    }
    
    class NiagaraStackSystemPropertiesItem extends UE.NiagaraStackItem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SystemObject: UE.NiagaraStackObject;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackSystemPropertiesItem;
        static Load(InName: string): NiagaraStackSystemPropertiesItem;
    
        __tid_NiagaraStackSystemPropertiesItem_0__: boolean;
    }
    
    class NiagaraStackViewModel extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RootEntry: UE.NiagaraStackEntry;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraStackViewModel;
        static Load(InName: string): NiagaraStackViewModel;
    
        __tid_NiagaraStackViewModel_0__: boolean;
    }
    
    class NiagaraSystemAuditCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSystemAuditCommandlet;
        static Load(InName: string): NiagaraSystemAuditCommandlet;
    
        __tid_NiagaraSystemAuditCommandlet_0__: boolean;
    }
    
    class NiagaraSystemEditorFolder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FolderName: string;
        ChildFolders: TArray<UE.NiagaraSystemEditorFolder>;
        ChildEmitterHandleIds: TArray<UE.Guid>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSystemEditorFolder;
        static Load(InName: string): NiagaraSystemEditorFolder;
    
        __tid_NiagaraSystemEditorFolder_0__: boolean;
    }
    
    class NiagaraSystemEditorData extends UE.NiagaraEditorDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RootFolder: UE.NiagaraSystemEditorFolder;
        StackEditorData: UE.NiagaraStackEditorData;
        OwnerTransform: UE.Transform;
        PlaybackRangeMin: number;
        PlaybackRangeMax: number;
        SystemOverviewGraph: UE.EdGraph;
        OverviewGraphViewSettings: UE.NiagaraGraphViewSettings;
        bSystemIsPlaceholder: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSystemEditorData;
        static Load(InName: string): NiagaraSystemEditorData;
    
        __tid_NiagaraSystemEditorData_0__: boolean;
    }
    
    class NiagaraSystemFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSystemFactoryNew;
        static Load(InName: string): NiagaraSystemFactoryNew;
    
        __tid_NiagaraSystemFactoryNew_0__: boolean;
    }
    
    class NiagaraSystemSelectionViewModel extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StackSelection: UE.NiagaraStackSelection;
        SelectionStackViewModel: UE.NiagaraStackViewModel;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSystemSelectionViewModel;
        static Load(InName: string): NiagaraSystemSelectionViewModel;
    
        __tid_NiagaraSystemSelectionViewModel_0__: boolean;
    }
    
    class NiagaraSystemThumbnailRenderer extends UE.NiagaraThumbnailRendererBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NiagaraSystemThumbnailRenderer;
        static Load(InName: string): NiagaraSystemThumbnailRenderer;
    
        __tid_NiagaraSystemThumbnailRenderer_0__: boolean;
    }
    
    class NiagaraVariableInfo {
        constructor();
        constructor(Variable: UE.NiagaraVariable, Definition: string, DataInterface: UE.NiagaraDataInterface);
        Variable: UE.NiagaraVariable;
        Definition: string;
        DataInterface: UE.NiagaraDataInterface;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableInfo_0__: boolean;
    }
    
    class NiagaraVariableMetaDataContainer {
        constructor();
        constructor(MetaData: UE.NiagaraVariableMetaData);
        MetaData: UE.NiagaraVariableMetaData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraVariableMetaDataContainer_0__: boolean;
    }
    
    class NiagaraWorldManagerTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NiagaraWorldManagerTickFunction_0__: boolean;
    }
    
    class NodeAndChannelMappings extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NodeAndChannelMappings;
        static Load(InName: string): NodeAndChannelMappings;
    
        __tid_NodeAndChannelMappings_0__: boolean;
    }
    
    class NodeChain {
        constructor();
        constructor(Nodes: TArray<string>);
        Nodes: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NodeChain_0__: boolean;
    }
    
    class NodeDependingOnEnumInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NodeDependingOnEnumInterface;
        static Load(InName: string): NodeDependingOnEnumInterface;
    
        __tid_NodeDependingOnEnumInterface_0__: boolean;
    }
    
    class NodeObject {
        constructor();
        constructor(Name: string, ParentName: string);
        Name: string;
        ParentName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NodeObject_0__: boolean;
    }
    
    class NodeHierarchyData {
        constructor();
        constructor(Nodes: TArray<UE.NodeObject>, Transforms: TArray<UE.Transform>, NodeNameToIndexMapping: TMap<string, number>);
        Nodes: TArray<UE.NodeObject>;
        Transforms: TArray<UE.Transform>;
        NodeNameToIndexMapping: TMap<string, number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NodeHierarchyData_0__: boolean;
    }
    
    class NodeHierarchyWithUserData {
        constructor();
        constructor(Hierarchy: UE.NodeHierarchyData);
        Hierarchy: UE.NodeHierarchyData;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NodeHierarchyWithUserData_0__: boolean;
    }
    
    class NodeMappingProviderInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NodeMappingProviderInterface;
        static Load(InName: string): NodeMappingProviderInterface;
    
        __tid_NodeMappingProviderInterface_0__: boolean;
    }
    
    class NodeSpawnData {
        constructor();
        constructor(CachedTitle: string, SourceNode: UE.AnimGraphNode_Base, SourceStateNode: UE.AnimStateNodeBase, AnimInstanceClass: UE.Class, SourceBlueprint: UE.AnimBlueprint, Getter: UE.Field, GetterContextString: string);
        CachedTitle: string;
        SourceNode: UE.AnimGraphNode_Base;
        SourceStateNode: UE.AnimStateNodeBase;
        AnimInstanceClass: UE.Class;
        SourceBlueprint: UE.AnimBlueprint;
        Getter: UE.Field;
        GetterContextString: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NodeSpawnData_0__: boolean;
    }
    
    class NodeToCodeAssociation {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_NodeToCodeAssociation_0__: boolean;
    }
    
    class NoiseField extends UE.FieldNodeFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MinRange: number;
        MaxRange: number;
        Transform: UE.Transform;
        SetNoiseField(MinRange: number, MaxRange: number, Transform: UE.Transform) : UE.NoiseField;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NoiseField;
        static Load(InName: string): NoiseField;
    
        __tid_NoiseField_0__: boolean;
    }
    
    class Note extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        SpriteComponent: UE.BillboardComponent;
        ArrowComponent: UE.ArrowComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Note;
        static Load(InName: string): Note;
    
        __tid_Note_0__: boolean;
    }
    
    class NullAudioCaptureProtocol extends UE.MovieSceneAudioCaptureProtocolBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NullAudioCaptureProtocol;
        static Load(InName: string): NullAudioCaptureProtocol;
    
        __tid_NullAudioCaptureProtocol_0__: boolean;
    }
    
    class NullNavSysConfig extends UE.NavigationSystemConfig {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): NullNavSysConfig;
        static Load(InName: string): NullNavSysConfig;
    
        __tid_NullNavSysConfig_0__: boolean;
    }
    
    class ObjectExporterT3D extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectExporterT3D;
        static Load(InName: string): ObjectExporterT3D;
    
        __tid_ObjectExporterT3D_0__: boolean;
    }
    
    class ObjectLibrary extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ObjectBaseClass: UE.Class;
        bHasBlueprintClasses: boolean;
        Objects: TArray<UE.Object>;
        WeakObjects: TArray<TWeakObjectPtr<UE.Object>>;
        bUseWeakReferences: boolean;
        bIsFullyLoaded: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectLibrary;
        static Load(InName: string): ObjectLibrary;
    
        __tid_ObjectLibrary_0__: boolean;
    }
    
    class ObjectLibraryFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectLibraryFactory;
        static Load(InName: string): ObjectLibraryFactory;
    
        __tid_ObjectLibraryFactory_0__: boolean;
    }
    
    class ObjectRedirector extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectRedirector;
        static Load(InName: string): ObjectRedirector;
    
        __tid_ObjectRedirector_0__: boolean;
    }
    
    class ObjectReferencer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ReferencedObjects: TArray<UE.Object>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectReferencer;
        static Load(InName: string): ObjectReferencer;
    
        __tid_ObjectReferencer_0__: boolean;
    }
    
    class ObjectTraceWorldSubsystem extends UE.WorldSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ObjectTraceWorldSubsystem;
        static Load(InName: string): ObjectTraceWorldSubsystem;
    
        __tid_ObjectTraceWorldSubsystem_0__: boolean;
    }
    
    class OculusCapsuleCollider {
        constructor();
        constructor(Capsule: UE.CapsuleComponent, BoneId: UE.EBone);
        Capsule: UE.CapsuleComponent;
        BoneId: UE.EBone;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OculusCapsuleCollider_0__: boolean;
    }
    
    class OculusEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PerfToolIgnoreList: TMap<string, boolean>;
        PerfToolTargetPlatform: UE.EOculusPlatform;
        bAddMenuOption: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusEditorSettings;
        static Load(InName: string): OculusEditorSettings;
    
        __tid_OculusEditorSettings_0__: boolean;
    }
    
    class OculusFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddLoadingSplashScreen(Texture: $Nullable<UE.Texture2D>, TranslationInMeters: UE.Vector, Rotation: UE.Rotator, SizeInMeters?: UE.Vector2D /* = (X=1.000,Y=1.000) */, DeltaRotation?: UE.Rotator /* =  */, bClearBeforeAdd?: boolean /* = false */) : void;
        static ClearLoadingSplashScreens() : void;
        static EnableOrientationTracking(bOrientationTracking: boolean) : void;
        static EnablePositionTracking(bPositionTracking: boolean) : void;
        static GetAvailableDisplayFrequencies() : TArray<number>;
        static GetBaseRotationAndBaseOffsetInMeters(OutRotation: $Ref<UE.Rotator>, OutBaseOffsetInMeters: $Ref<UE.Vector>) : void;
        static GetBaseRotationAndPositionOffset(OutRot: $Ref<UE.Rotator>, OutPosOffset: $Ref<UE.Vector>) : void;
        static GetCurrentDisplayFrequency() : number;
        static GetDeviceName() : string;
        static GetDeviceType() : UE.EOculusDeviceType;
        static GetFixedFoveatedRenderingLevel() : UE.EFixedFoveatedRenderingLevel;
        static GetGPUFrameTime() : number;
        static GetGPUUtilization(IsGPUAvailable: $Ref<boolean>, GPUUtilization: $Ref<number>) : void;
        static GetGuardianDimensions(BoundaryType: UE.EBoundaryType) : UE.Vector;
        static GetGuardianPoints(BoundaryType: UE.EBoundaryType, UsePawnSpace?: boolean /* = false */) : TArray<UE.Vector>;
        static GetHmdColorDesc() : UE.EColorSpace;
        static GetNodeGuardianIntersection(DeviceType: UE.ETrackedDeviceType, BoundaryType: UE.EBoundaryType) : UE.GuardianTestResult;
        static GetPlayAreaTransform() : UE.Transform;
        static GetPointGuardianIntersection(Point: UE.Vector, BoundaryType: UE.EBoundaryType) : UE.GuardianTestResult;
        static GetPose(DeviceRotation: $Ref<UE.Rotator>, DevicePosition: $Ref<UE.Vector>, NeckPosition: $Ref<UE.Vector>, bUseOrienationForPlayerCamera?: boolean /* = false */, bUsePositionForPlayerCamera?: boolean /* = false */, PositionScale?: UE.Vector /* =  */) : void;
        static GetRawSensorData(AngularAcceleration: $Ref<UE.Vector>, LinearAcceleration: $Ref<UE.Vector>, AngularVelocity: $Ref<UE.Vector>, LinearVelocity: $Ref<UE.Vector>, TimeInSeconds: $Ref<number>, DeviceType?: UE.ETrackedDeviceType /* = HMD */) : void;
        static GetSystemHmd3DofModeEnabled() : boolean;
        static GetUserProfile(Profile: $Ref<UE.HmdUserProfile>) : boolean;
        static HasInputFocus() : boolean;
        static HasSystemOverlayPresent() : boolean;
        static IsDeviceTracked(DeviceType: UE.ETrackedDeviceType) : boolean;
        static IsGuardianConfigured() : boolean;
        static IsGuardianDisplayed() : boolean;
        static SetBaseRotationAndBaseOffsetInMeters(Rotation: UE.Rotator, BaseOffsetInMeters: UE.Vector, Options: UE.EOrientPositionSelector) : void;
        static SetBaseRotationAndPositionOffset(BaseRot: UE.Rotator, PosOffset: UE.Vector, Options: UE.EOrientPositionSelector) : void;
        static SetClientColorDesc(ColorSpace: UE.EColorSpace) : void;
        static SetColorScaleAndOffset(ColorScale: UE.LinearColor, ColorOffset: UE.LinearColor, bApplyToAllLayers?: boolean /* = false */) : void;
        static SetCPUAndGPULevels(CPULevel: number, GPULevel: number) : void;
        static SetDisplayFrequency(RequestedFrequency: number) : void;
        static SetFixedFoveatedRenderingLevel(level: UE.EFixedFoveatedRenderingLevel, isDynamic: boolean) : void;
        static SetGuardianVisibility(GuardianVisible: boolean) : void;
        static SetPositionScale3D(PosScale3D: UE.Vector) : void;
        static SetReorientHMDOnControllerRecenter(recenterMode: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusFunctionLibrary;
        static Load(InName: string): OculusFunctionLibrary;
    
        __tid_OculusFunctionLibrary_0__: boolean;
    }
    
    class PoseableMeshComponent extends UE.SkinnedMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CopyPoseFromSkeletalComponent(InComponentToCopy: $Nullable<UE.SkeletalMeshComponent>) : void;
        GetBoneLocationByName(BoneName: string, BoneSpace: UE.EBoneSpaces) : UE.Vector;
        GetBoneRotationByName(BoneName: string, BoneSpace: UE.EBoneSpaces) : UE.Rotator;
        GetBoneScaleByName(BoneName: string, BoneSpace: UE.EBoneSpaces) : UE.Vector;
        GetBoneTransformByName(BoneName: string, BoneSpace: UE.EBoneSpaces) : UE.Transform;
        ResetBoneTransformByName(BoneName: string) : void;
        SetBoneLocationByName(BoneName: string, InLocation: UE.Vector, BoneSpace: UE.EBoneSpaces) : void;
        SetBoneRotationByName(BoneName: string, InRotation: UE.Rotator, BoneSpace: UE.EBoneSpaces) : void;
        SetBoneScaleByName(BoneName: string, InScale3D: UE.Vector, BoneSpace: UE.EBoneSpaces) : void;
        SetBoneTransformByName(BoneName: string, InTransform: UE.Transform, BoneSpace: UE.EBoneSpaces) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PoseableMeshComponent;
        static Load(InName: string): PoseableMeshComponent;
    
        __tid_PoseableMeshComponent_0__: boolean;
    }
    
    class OculusHandComponent extends UE.PoseableMeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SkeletonType: UE.EOculusHandType;
        MeshType: UE.EOculusHandType;
        ConfidenceBehavior: UE.EConfidenceBehavior;
        SystemGestureBehavior: UE.ESystemGestureBehavior;
        SystemGestureMaterial: UE.MaterialInterface;
        bInitializePhysics: boolean;
        bUpdateHandScale: boolean;
        MaterialOverride: UE.MaterialInterface;
        BoneNameMappings: TMap<UE.EBone, string>;
        CollisionCapsules: TArray<UE.OculusCapsuleCollider>;
        bSkeletalMeshInitialized: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusHandComponent;
        static Load(InName: string): OculusHandComponent;
    
        __tid_OculusHandComponent_0__: boolean;
    }
    
    class OculusSplashDesc {
        constructor();
        constructor(TexturePath: UE.SoftObjectPath, TransformInMeters: UE.Transform, QuadSizeInMeters: UE.Vector2D, DeltaRotation: UE.Quat, TextureOffset: UE.Vector2D, TextureScale: UE.Vector2D, bNoAlphaChannel: boolean);
        TexturePath: UE.SoftObjectPath;
        TransformInMeters: UE.Transform;
        QuadSizeInMeters: UE.Vector2D;
        DeltaRotation: UE.Quat;
        TextureOffset: UE.Vector2D;
        TextureScale: UE.Vector2D;
        bNoAlphaChannel: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OculusSplashDesc_0__: boolean;
    }
    
    class OculusHMDRuntimeSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoEnabled: boolean;
        SplashDescs: TArray<UE.OculusSplashDesc>;
        bEnableSpecificColorGamut: boolean;
        ColorSpace: UE.EColorSpace;
        bSupportsDash: boolean;
        bCompositesDepth: boolean;
        bHQDistortion: boolean;
        PixelDensityMin: number;
        PixelDensityMax: number;
        CPULevel: number;
        GPULevel: number;
        FFRLevel: UE.EFixedFoveatedRenderingLevel;
        FFRDynamic: boolean;
        bChromaCorrection: boolean;
        bRecenterHMDWithController: boolean;
        bFocusAware: boolean;
        bRequiresSystemKeyboard: boolean;
        HandTrackingSupport: UE.EHandTrackingSupport;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusHMDRuntimeSettings;
        static Load(InName: string): OculusHMDRuntimeSettings;
    
        __tid_OculusHMDRuntimeSettings_0__: boolean;
    }
    
    class OculusInputFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetBoneName(BoneId: UE.EBone) : string;
        static GetBoneRotation(DeviceHand: UE.EOculusHandType, BoneId: UE.EBone, ControllerIndex?: number /* = 0 */) : UE.Quat;
        static GetDominantHand(ControllerIndex?: number /* = 0 */) : UE.EOculusHandType;
        static GetHandScale(DeviceHand: UE.EOculusHandType, ControllerIndex?: number /* = 0 */) : number;
        static GetHandSkeletalMesh(HandSkeletalMesh: $Nullable<UE.SkeletalMesh>, SkeletonType: UE.EOculusHandType, MeshType: UE.EOculusHandType, WorldToMeters?: number /* = 100.000000 */) : boolean;
        static GetPointerPose(DeviceHand: UE.EOculusHandType, ControllerIndex?: number /* = 0 */) : UE.Transform;
        static GetTrackingConfidence(DeviceHand: UE.EOculusHandType, ControllerIndex?: number /* = 0 */) : UE.ETrackingConfidence;
        static InitializeHandPhysics(SkeletonType: UE.EOculusHandType, HandComponent: $Nullable<UE.SkinnedMeshComponent>, WorldToMeters?: number /* = 100.000000 */) : TArray<UE.OculusCapsuleCollider>;
        static IsHandTrackingEnabled() : boolean;
        static IsPointerPoseValid(DeviceHand: UE.EOculusHandType, ControllerIndex?: number /* = 0 */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusInputFunctionLibrary;
        static Load(InName: string): OculusInputFunctionLibrary;
    
        __tid_OculusInputFunctionLibrary_0__: boolean;
    }
    
    class SceneCapture extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MeshComp: UE.StaticMeshComponent;
        SceneComponent: UE.SceneComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneCapture;
        static Load(InName: string): SceneCapture;
    
        __tid_SceneCapture_0__: boolean;
    }
    
    class SceneCaptureComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PrimitiveRenderMode: UE.ESceneCapturePrimitiveRenderMode;
        CaptureSource: UE.ESceneCaptureSource;
        bCaptureEveryFrame: boolean;
        bCaptureOnMovement: boolean;
        bAlwaysPersistRenderingState: boolean;
        HiddenComponents: TArray<TWeakObjectPtr<UE.PrimitiveComponent>>;
        HiddenActors: TArray<UE.Actor>;
        ShowOnlyComponents: TArray<TWeakObjectPtr<UE.PrimitiveComponent>>;
        ShowOnlyActors: TArray<UE.Actor>;
        LODDistanceFactor: number;
        MaxViewDistanceOverride: number;
        CaptureSortPriority: number;
        bUseRayTracingIfEnabled: boolean;
        ShowFlagSettings: TArray<UE.EngineShowFlagsSetting>;
        ProfilingEventName: string;
        CaptureMesh: UE.StaticMesh;
        ClearHiddenComponents() : void;
        ClearShowOnlyComponents() : void;
        HideActorComponents(InActor: $Nullable<UE.Actor>, bIncludeFromChildActors?: boolean /* = false */) : void;
        HideComponent(InComponent: $Nullable<UE.PrimitiveComponent>) : void;
        RemoveShowOnlyActorComponents(InActor: $Nullable<UE.Actor>, bIncludeFromChildActors?: boolean /* = false */) : void;
        RemoveShowOnlyComponent(InComponent: $Nullable<UE.PrimitiveComponent>) : void;
        SetCaptureSortPriority(NewCaptureSortPriority: number) : void;
        ShowOnlyActorComponents(InActor: $Nullable<UE.Actor>, bIncludeFromChildActors?: boolean /* = false */) : void;
        ShowOnlyComponent(InComponent: $Nullable<UE.PrimitiveComponent>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneCaptureComponent;
        static Load(InName: string): SceneCaptureComponent;
    
        __tid_SceneCaptureComponent_0__: boolean;
    }
    
    class SceneCaptureComponent2D extends UE.SceneCaptureComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProjectionType: UE.ECameraProjectionMode;
        FOVAngle: number;
        OrthoWidth: number;
        TextureTarget: UE.TextureRenderTarget2D;
        CompositeMode: UE.ESceneCaptureCompositeMode;
        PostProcessSettings: UE.PostProcessSettings;
        PostProcessBlendWeight: number;
        bOverride_CustomNearClippingPlane: boolean;
        CustomNearClippingPlane: number;
        bUseCustomProjectionMatrix: boolean;
        CustomProjectionMatrix: UE.Matrix;
        bEnableClipPlane: boolean;
        ClipPlaneBase: UE.Vector;
        ClipPlaneNormal: UE.Vector;
        bCameraCutThisFrame: boolean;
        bConsiderUnrenderedOpaquePixelAsFullyTranslucent: boolean;
        bDisableFlipCopyGLES: boolean;
        AddOrUpdateBlendable(InBlendableObject: BlendableInterface, InWeight?: number /* = 1.000000 */) : void;
        CaptureScene() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneCaptureComponent2D;
        static Load(InName: string): SceneCaptureComponent2D;
    
        __tid_SceneCaptureComponent2D_0__: boolean;
    }
    
    class SceneCapture2D extends UE.SceneCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CaptureComponent2D: UE.SceneCaptureComponent2D;
        OnInterpToggle(bEnable: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneCapture2D;
        static Load(InName: string): SceneCapture2D;
    
        __tid_SceneCapture2D_0__: boolean;
    }
    
    class OculusMR_PlaneMeshTriangle {
        constructor();
        constructor(Vertex0: UE.Vector, UV0: UE.Vector2D, Vertex1: UE.Vector, UV1: UE.Vector2D, Vertex2: UE.Vector, UV2: UE.Vector2D);
        Vertex0: UE.Vector;
        UV0: UE.Vector2D;
        Vertex1: UE.Vector;
        UV1: UE.Vector2D;
        Vertex2: UE.Vector;
        UV2: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OculusMR_PlaneMeshTriangle_0__: boolean;
    }
    
    class OculusMR_PlaneMeshComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddCustomMeshTriangles(Triangles: TArray<UE.OculusMR_PlaneMeshTriangle>) : void;
        ClearCustomMeshTriangles() : void;
        SetCustomMeshTriangles(Triangles: TArray<UE.OculusMR_PlaneMeshTriangle>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusMR_PlaneMeshComponent;
        static Load(InName: string): OculusMR_PlaneMeshComponent;
    
        __tid_OculusMR_PlaneMeshComponent_0__: boolean;
    }
    
    class OculusMR_Settings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClippingReference: UE.EOculusMR_ClippingReference;
        bUseTrackedCameraResolution: boolean;
        WidthPerView: number;
        HeightPerView: number;
        CastingLatency: number;
        BackdropColor: UE.Color;
        HandPoseStateLatency: number;
        ChromaKeyColor: UE.Color;
        ChromaKeySimilarity: number;
        ChromaKeySmoothRange: number;
        ChromaKeySpillRange: number;
        ExternalCompositionPostProcessEffects: UE.EOculusMR_PostProcessEffects;
        bIsCasting: boolean;
        CompositionMethod: UE.EOculusMR_CompositionMethod;
        CapturingCamera: UE.EOculusMR_CameraDeviceEnum;
        BindToTrackedCameraIndexIfAvailable(InTrackedCameraIndex: number) : void;
        GetBindToTrackedCameraIndex() : number;
        GetCapturingCamera() : UE.EOculusMR_CameraDeviceEnum;
        GetCompositionMethod() : UE.EOculusMR_CompositionMethod;
        GetIsCasting() : boolean;
        LoadFromIni() : void;
        SaveToIni() : void;
        SetCapturingCamera(val: UE.EOculusMR_CameraDeviceEnum) : void;
        SetCompositionMethod(val: UE.EOculusMR_CompositionMethod) : void;
        SetIsCasting(val: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusMR_Settings;
        static Load(InName: string): OculusMR_Settings;
    
        __tid_OculusMR_Settings_0__: boolean;
    }
    
    class TrackedCamera {
        constructor();
        constructor(Index: number, Name: string, UpdateTime: number, FieldOfView: number, SizeX: number, SizeY: number, AttachedTrackedDevice: UE.ETrackedDeviceType, CalibratedRotation: UE.Rotator, CalibratedOffset: UE.Vector, UserRotation: UE.Rotator, UserOffset: UE.Vector, RawRotation: UE.Rotator, RawOffset: UE.Vector);
        Index: number;
        Name: string;
        UpdateTime: number;
        FieldOfView: number;
        SizeX: number;
        SizeY: number;
        AttachedTrackedDevice: UE.ETrackedDeviceType;
        CalibratedRotation: UE.Rotator;
        CalibratedOffset: UE.Vector;
        UserRotation: UE.Rotator;
        UserOffset: UE.Vector;
        RawRotation: UE.Rotator;
        RawOffset: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TrackedCamera_0__: boolean;
    }
    
    class OculusMR_State extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TrackedCamera: UE.TrackedCamera;
        TrackingReferenceComponent: UE.SceneComponent;
        ScalingFactor: number;
        ChangeCameraStateRequested: boolean;
        BindToTrackedCameraIndexRequested: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusMR_State;
        static Load(InName: string): OculusMR_State;
    
        __tid_OculusMR_State_0__: boolean;
    }
    
    class OculusMR_CastingCameraActor extends UE.SceneCapture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VRNotificationComponent: UE.VRNotificationsComponent;
        CameraColorTexture: UE.Texture2D;
        CameraDepthTexture: UE.Texture2D;
        PlaneMeshComponent: UE.OculusMR_PlaneMeshComponent;
        ChromaKeyMaterial: UE.Material;
        OpaqueColoredMaterial: UE.Material;
        ChromaKeyMaterialInstance: UE.MaterialInstanceDynamic;
        CameraFrameMaterialInstance: UE.MaterialInstanceDynamic;
        BackdropMaterialInstance: UE.MaterialInstanceDynamic;
        DefaultTexture_White: UE.Texture2D;
        BackgroundRenderTargets: TArray<UE.TextureRenderTarget2D>;
        ForegroundCaptureActor: UE.SceneCapture2D;
        ForegroundRenderTargets: TArray<UE.TextureRenderTarget2D>;
        PoseTimes: TArray<number>;
        MRSettings: UE.OculusMR_Settings;
        MRState: UE.OculusMR_State;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusMR_CastingCameraActor;
        static Load(InName: string): OculusMR_CastingCameraActor;
    
        __tid_OculusMR_CastingCameraActor_0__: boolean;
    }
    
    class OculusMRFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetMrcScalingFactor() : number;
        static GetOculusMRSettings() : UE.OculusMR_Settings;
        static GetTrackingReferenceComponent() : UE.SceneComponent;
        static IsMrcActive() : boolean;
        static IsMrcEnabled() : boolean;
        static SetMrcScalingFactor(ScalingFactor?: number /* = 1.000000 */) : boolean;
        static SetTrackingReferenceComponent(Component: $Nullable<UE.SceneComponent>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusMRFunctionLibrary;
        static Load(InName: string): OculusMRFunctionLibrary;
    
        __tid_OculusMRFunctionLibrary_0__: boolean;
    }
    
    class RedistPackage {
        constructor();
        constructor(Included: boolean, Name: string, Id: string);
        Included: boolean;
        Name: string;
        Id: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RedistPackage_0__: boolean;
    }
    
    class OculusPlatformToolSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OculusRiftBuildDirectory: string;
        OculusRiftBuildVersion: string;
        OculusRiftLaunchParams: string;
        OculusRiftFireWallException: boolean;
        OculusRift2DLaunchPath: string;
        OculusRift2DLaunchParams: string;
        OculusRedistPackages: TArray<UE.RedistPackage>;
        OculusTargetPlatform: UE.EOculusPlatformTarget;
        OculusApplicationID: TArray<string>;
        OculusApplicationToken: TArray<string>;
        OculusReleaseChannel: TArray<string>;
        OculusReleaseNote: TArray<string>;
        OculusLaunchFilePath: TArray<string>;
        OculusRiftGamepadEmulation: UE.EOculusGamepadEmulation;
        OculusLanguagePacksPath: TArray<string>;
        OculusExpansionFilesPath: TArray<string>;
        OculusAssetConfigs: TArray<UE.AssetConfigArray>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusPlatformToolSettings;
        static Load(InName: string): OculusPlatformToolSettings;
    
        __tid_OculusPlatformToolSettings_0__: boolean;
    }
    
    class OculusResourceHolder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PokeAHoleMaterial: UE.Material;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusResourceHolder;
        static Load(InName: string): OculusResourceHolder;
    
        __tid_OculusResourceHolder_0__: boolean;
    }
    
    class OculusSceneCaptureCubemap extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CaptureComponents: TArray<UE.SceneCaptureComponent2D>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OculusSceneCaptureCubemap;
        static Load(InName: string): OculusSceneCaptureCubemap;
    
        __tid_OculusSceneCaptureCubemap_0__: boolean;
    }
    
    class OnlineBeacon extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeaconConnectionInitialTimeout: number;
        BeaconConnectionTimeout: number;
        NetDriver: UE.NetDriver;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineBeacon;
        static Load(InName: string): OnlineBeacon;
    
        __tid_OnlineBeacon_0__: boolean;
    }
    
    class OnlineBeaconHostObject extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeaconTypeName: string;
        ClientBeaconActorClass: UE.Class;
        ClientActors: TArray<UE.OnlineBeaconClient>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineBeaconHostObject;
        static Load(InName: string): OnlineBeaconHostObject;
    
        __tid_OnlineBeaconHostObject_0__: boolean;
    }
    
    class OnlineBeaconClient extends UE.OnlineBeacon {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeaconOwner: UE.OnlineBeaconHostObject;
        BeaconConnection: UE.NetConnection;
        ConnectionState: UE.EBeaconConnectionState;
        ClientOnConnected() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineBeaconClient;
        static Load(InName: string): OnlineBeaconClient;
    
        __tid_OnlineBeaconClient_0__: boolean;
    }
    
    class OnlineBeaconHost extends UE.OnlineBeacon {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ListenPort: number;
        ClientActors: TArray<UE.OnlineBeaconClient>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineBeaconHost;
        static Load(InName: string): OnlineBeaconHost;
    
        __tid_OnlineBeaconHost_0__: boolean;
    }
    
    class OnlineEngineInterface extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineEngineInterface;
        static Load(InName: string): OnlineEngineInterface;
    
        __tid_OnlineEngineInterface_0__: boolean;
    }
    
    class OnlineEngineInterfaceImpl extends UE.OnlineEngineInterface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VoiceSubsystemNameOverride: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineEngineInterfaceImpl;
        static Load(InName: string): OnlineEngineInterfaceImpl;
    
        __tid_OnlineEngineInterfaceImpl_0__: boolean;
    }
    
    class PIELoginSettingsInternal {
        constructor();
        constructor(Id: string, Token: string, Type: string, TokenBytes: TArray<number>);
        Id: string;
        Token: string;
        Type: string;
        TokenBytes: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIELoginSettingsInternal_0__: boolean;
    }
    
    class OnlinePIESettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bOnlinePIEEnabled: boolean;
        Logins: TArray<UE.PIELoginSettingsInternal>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlinePIESettings;
        static Load(InName: string): OnlinePIESettings;
    
        __tid_OnlinePIESettings_0__: boolean;
    }
    
    class OnlineSessionClient extends UE.OnlineSession {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsFromInvite: boolean;
        bHandlingDisconnect: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnlineSessionClient;
        static Load(InName: string): OnlineSessionClient;
    
        __tid_OnlineSessionClient_0__: boolean;
    }
    
    class OnsetNRTSettings extends UE.AudioSynesthesiaNRTSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDownmixToMono: boolean;
        GranularityInSeconds: number;
        Sensitivity: number;
        MinimumFrequency: number;
        MaximumFrequency: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnsetNRTSettings;
        static Load(InName: string): OnsetNRTSettings;
    
        __tid_OnsetNRTSettings_0__: boolean;
    }
    
    class OnsetNRT extends UE.AudioSynesthesiaNRT {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.OnsetNRTSettings;
        GetChannelOnsetsBetweenTimes(InStartSeconds: number, InEndSeconds: number, InChannel: number, OutOnsetTimestamps: $Ref<TArray<number>>, OutOnsetStrengths: $Ref<TArray<number>>) : void;
        GetNormalizedChannelOnsetsBetweenTimes(InStartSeconds: number, InEndSeconds: number, InChannel: number, OutOnsetTimestamps: $Ref<TArray<number>>, OutOnsetStrengths: $Ref<TArray<number>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OnsetNRT;
        static Load(InName: string): OnsetNRT;
    
        __tid_OnsetNRT_0__: boolean;
    }
    
    class OperatorField extends UE.FieldNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        RightField: UE.FieldNodeBase;
        LeftField: UE.FieldNodeBase;
        Operation: UE.EFieldOperationType;
        SetOperatorField(Magnitude: number, RightField: $Nullable<UE.FieldNodeBase>, LeftField: $Nullable<UE.FieldNodeBase>, Operation: UE.EFieldOperationType) : UE.OperatorField;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OperatorField;
        static Load(InName: string): OperatorField;
    
        __tid_OperatorField_0__: boolean;
    }
    
    class OrientedBox {
        constructor();
        constructor(Center: UE.Vector, AxisX: UE.Vector, AxisY: UE.Vector, AxisZ: UE.Vector, ExtentX: number, ExtentY: number, ExtentZ: number);
        Center: UE.Vector;
        AxisX: UE.Vector;
        AxisY: UE.Vector;
        AxisZ: UE.Vector;
        ExtentX: number;
        ExtentY: number;
        ExtentZ: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OrientedBox_0__: boolean;
    }
    
    class OverlapResult {
        constructor();
        constructor(Actor: TWeakObjectPtr<UE.Actor>, Component: TWeakObjectPtr<UE.PrimitiveComponent>, bBlockingHit: boolean);
        Actor: TWeakObjectPtr<UE.Actor>;
        Component: TWeakObjectPtr<UE.PrimitiveComponent>;
        bBlockingHit: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_OverlapResult_0__: boolean;
    }
    
    class OverlaySlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): OverlaySlot;
        static Load(InName: string): OverlaySlot;
    
        __tid_OverlaySlot_0__: boolean;
    }
    
    class Overlay extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddChildToOverlay(Content: $Nullable<UE.Widget>) : UE.OverlaySlot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Overlay;
        static Load(InName: string): Overlay;
    
        __tid_Overlay_0__: boolean;
    }
    
    class PackageFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PackageFactory;
        static Load(InName: string): PackageFactory;
    
        __tid_PackageFactory_0__: boolean;
    }
    
    class PackageMapClient extends UE.PackageMap {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PackageMapClient;
        static Load(InName: string): PackageMapClient;
    
        __tid_PackageMapClient_0__: boolean;
    }
    
    class PackageTools extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static SanitizePackageName(InPackageName: string) : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PackageTools;
        static Load(InName: string): PackageTools;
    
        __tid_PackageTools_0__: boolean;
    }
    
    class PackedNormal {
        constructor();
        constructor(X: number, Y: number, Z: number, W: number);
        X: number;
        Y: number;
        Z: number;
        W: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PackedNormal_0__: boolean;
    }
    
    class PackedRGB10A2N {
        constructor();
        constructor(Packed: number);
        Packed: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PackedRGB10A2N_0__: boolean;
    }
    
    class PackedRGBA16N {
        constructor();
        constructor(XY: number, ZW: number);
        XY: number;
        ZW: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PackedRGBA16N_0__: boolean;
    }
    
    class PacketHandlerProfileConfig extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Components: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PacketHandlerProfileConfig;
        static Load(InName: string): PacketHandlerProfileConfig;
    
        __tid_PacketHandlerProfileConfig_0__: boolean;
    }
    
    class PacketSimulationSettings {
        constructor();
        constructor(PktLoss: number, PktLossMaxSize: number, PktLossMinSize: number, PktOrder: number, PktDup: number, PktLag: number, PktLagVariance: number, PktLagMin: number, PktLagMax: number, PktIncomingLagMin: number, PktIncomingLagMax: number, PktIncomingLoss: number, PktJitter: number);
        PktLoss: number;
        PktLossMaxSize: number;
        PktLossMinSize: number;
        PktOrder: number;
        PktDup: number;
        PktLag: number;
        PktLagVariance: number;
        PktLagMin: number;
        PktLagMax: number;
        PktIncomingLagMin: number;
        PktIncomingLagMax: number;
        PktIncomingLoss: number;
        PktJitter: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PacketSimulationSettings_0__: boolean;
    }
    
    class PackFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PackFactory;
        static Load(InName: string): PackFactory;
    
        __tid_PackFactory_0__: boolean;
    }
    
    class PainCausingVolume extends UE.PhysicsVolume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bPainCausing: boolean;
        DamagePerSec: number;
        DamageType: UE.Class;
        PainInterval: number;
        bEntryPain: boolean;
        BACKUP_bPainCausing: boolean;
        DamageInstigator: UE.Controller;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PainCausingVolume;
        static Load(InName: string): PainCausingVolume;
    
        __tid_PainCausingVolume_0__: boolean;
    }
    
    class PaintBrushSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BrushRadius: number;
        BrushStrength: number;
        BrushFalloffAmount: number;
        bEnableFlow: boolean;
        bOnlyFrontFacingTriangles: boolean;
        ColorViewMode: UE.EMeshPaintColorViewMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaintBrushSettings;
        static Load(InName: string): PaintBrushSettings;
    
        __tid_PaintBrushSettings_0__: boolean;
    }
    
    class PaintedVertex {
        constructor();
        constructor(Position: UE.Vector, Color: UE.Color, Normal: UE.Vector4);
        Position: UE.Vector;
        Color: UE.Color;
        Normal: UE.Vector4;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaintedVertex_0__: boolean;
    }
    
    class VertexPaintSettings {
        constructor();
        constructor(MeshPaintMode: UE.EMeshPaintMode, PaintColor: UE.LinearColor, EraseColor: UE.LinearColor, bWriteRed: boolean, bWriteGreen: boolean, bWriteBlue: boolean, bWriteAlpha: boolean, TextureWeightType: UE.ETextureWeightTypes, PaintTextureWeightIndex: UE.ETexturePaintIndex, EraseTextureWeightIndex: UE.ETexturePaintIndex, bPaintOnSpecificLOD: boolean, LODIndex: number);
        MeshPaintMode: UE.EMeshPaintMode;
        PaintColor: UE.LinearColor;
        EraseColor: UE.LinearColor;
        bWriteRed: boolean;
        bWriteGreen: boolean;
        bWriteBlue: boolean;
        bWriteAlpha: boolean;
        TextureWeightType: UE.ETextureWeightTypes;
        PaintTextureWeightIndex: UE.ETexturePaintIndex;
        EraseTextureWeightIndex: UE.ETexturePaintIndex;
        bPaintOnSpecificLOD: boolean;
        LODIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VertexPaintSettings_0__: boolean;
    }
    
    class TexturePaintSettings {
        constructor();
        constructor(PaintColor: UE.LinearColor, EraseColor: UE.LinearColor, bWriteRed: boolean, bWriteGreen: boolean, bWriteBlue: boolean, bWriteAlpha: boolean, UVChannel: number, bEnableSeamPainting: boolean, PaintTexture: UE.Texture2D);
        PaintColor: UE.LinearColor;
        EraseColor: UE.LinearColor;
        bWriteRed: boolean;
        bWriteGreen: boolean;
        bWriteBlue: boolean;
        bWriteAlpha: boolean;
        UVChannel: number;
        bEnableSeamPainting: boolean;
        PaintTexture: UE.Texture2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TexturePaintSettings_0__: boolean;
    }
    
    class PaintModeSettings extends UE.MeshPaintSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PaintMode: UE.EPaintMode;
        VertexPaintSettings: UE.VertexPaintSettings;
        TexturePaintSettings: UE.TexturePaintSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaintModeSettings;
        static Load(InName: string): PaintModeSettings;
    
        __tid_PaintModeSettings_0__: boolean;
    }
    
    class PanelExtensionSubsystem extends UE.EditorSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PanelExtensionSubsystem;
        static Load(InName: string): PanelExtensionSubsystem;
    
        __tid_PanelExtensionSubsystem_0__: boolean;
    }
    
    class PaperSpriteSocket {
        constructor();
        constructor(LocalTransform: UE.Transform, SocketName: string);
        LocalTransform: UE.Transform;
        SocketName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaperSpriteSocket_0__: boolean;
    }
    
    class SpriteGeometryShape {
        constructor();
        constructor(ShapeType: UE.ESpriteShapeType, Vertices: TArray<UE.Vector2D>, BoxSize: UE.Vector2D, BoxPosition: UE.Vector2D, Rotation: number, bNegativeWinding: boolean);
        ShapeType: UE.ESpriteShapeType;
        Vertices: TArray<UE.Vector2D>;
        BoxSize: UE.Vector2D;
        BoxPosition: UE.Vector2D;
        Rotation: number;
        bNegativeWinding: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpriteGeometryShape_0__: boolean;
    }
    
    class SpriteGeometryCollection {
        constructor();
        constructor(Shapes: TArray<UE.SpriteGeometryShape>, GeometryType: UE.ESpritePolygonMode, PixelsPerSubdivisionX: number, PixelsPerSubdivisionY: number, bAvoidVertexMerging: boolean, AlphaThreshold: number, DetailAmount: number, SimplifyEpsilon: number);
        Shapes: TArray<UE.SpriteGeometryShape>;
        GeometryType: UE.ESpritePolygonMode;
        PixelsPerSubdivisionX: number;
        PixelsPerSubdivisionY: number;
        bAvoidVertexMerging: boolean;
        AlphaThreshold: number;
        DetailAmount: number;
        SimplifyEpsilon: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpriteGeometryCollection_0__: boolean;
    }
    
    class PaperSpriteAtlasSlot {
        constructor();
        constructor(SpriteRef: TSoftObjectPtr<UE.PaperSprite>, AtlasIndex: number, X: number, Y: number, Width: number, Height: number);
        SpriteRef: TSoftObjectPtr<UE.PaperSprite>;
        AtlasIndex: number;
        X: number;
        Y: number;
        Width: number;
        Height: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaperSpriteAtlasSlot_0__: boolean;
    }
    
    class PaperSpriteAtlas extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AtlasDescription: string;
        MaxWidth: number;
        MaxHeight: number;
        MipCount: number;
        PaddingType: UE.EPaperSpriteAtlasPadding;
        Padding: number;
        CompressionSettings: UE.TextureCompressionSettings;
        Filter: UE.TextureFilter;
        GeneratedTextures: TArray<UE.Texture>;
        AtlasGUID: UE.Guid;
        bRebuildAtlas: boolean;
        AtlasSlots: TArray<UE.PaperSpriteAtlasSlot>;
        NumIncrementalBuilds: number;
        BuiltWidth: number;
        BuiltHeight: number;
        BuiltPadding: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteAtlas;
        static Load(InName: string): PaperSpriteAtlas;
    
        __tid_PaperSpriteAtlas_0__: boolean;
    }
    
    class PaperSprite extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OriginInSourceImageBeforeTrimming: UE.Vector2D;
        SourceImageDimensionBeforeTrimming: UE.Vector2D;
        bTrimmedInSourceImage: boolean;
        bRotatedInSourceImage: boolean;
        SourceTextureDimension: UE.Vector2D;
        SourceUV: UE.Vector2D;
        SourceDimension: UE.Vector2D;
        SourceTexture: TSoftObjectPtr<UE.Texture2D>;
        SourceTextureCacheNeverSerialized: UE.Texture2D;
        AdditionalSourceTextures: TArray<UE.Texture>;
        BakedSourceUV: UE.Vector2D;
        BakedSourceDimension: UE.Vector2D;
        BakedSourceTexture: UE.Texture2D;
        DefaultMaterial: UE.MaterialInterface;
        AlternateMaterial: UE.MaterialInterface;
        Sockets: TArray<UE.PaperSpriteSocket>;
        SpriteCollisionDomain: UE.ESpriteCollisionMode;
        PixelsPerUnrealUnit: number;
        BodySetup: UE.BodySetup;
        PivotMode: UE.ESpritePivotMode;
        CustomPivotPoint: UE.Vector2D;
        bSnapPivotToPixelGrid: boolean;
        CollisionGeometry: UE.SpriteGeometryCollection;
        CollisionThickness: number;
        RenderGeometry: UE.SpriteGeometryCollection;
        AtlasGroup: UE.PaperSpriteAtlas;
        AlternateMaterialSplitIndex: number;
        BakedRenderData: TArray<UE.Vector4>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSprite;
        static Load(InName: string): PaperSprite;
    
        __tid_PaperSprite_0__: boolean;
    }
    
    class PaperFlipbookKeyFrame {
        constructor();
        constructor(Sprite: UE.PaperSprite, FrameRun: number);
        Sprite: UE.PaperSprite;
        FrameRun: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaperFlipbookKeyFrame_0__: boolean;
    }
    
    class PaperFlipbook extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FramesPerSecond: number;
        KeyFrames: TArray<UE.PaperFlipbookKeyFrame>;
        DefaultMaterial: UE.MaterialInterface;
        CollisionSource: UE.EFlipbookCollisionMode;
        GetKeyFrameIndexAtTime(Time: number, bClampToEnds?: boolean /* = false */) : number;
        GetNumFrames() : number;
        GetNumKeyFrames() : number;
        GetSpriteAtFrame(FrameIndex: number) : UE.PaperSprite;
        GetSpriteAtTime(Time: number, bClampToEnds?: boolean /* = false */) : UE.PaperSprite;
        GetTotalDuration() : number;
        IsValidKeyFrameIndex(Index: number) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperFlipbook;
        static Load(InName: string): PaperFlipbook;
    
        __tid_PaperFlipbook_0__: boolean;
    }
    
    class PaperFlipbookComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceFlipbook: UE.PaperFlipbook;
        Material: UE.MaterialInterface;
        PlayRate: number;
        bLooping: boolean;
        bReversePlayback: boolean;
        bPlaying: boolean;
        AccumulatedTime: number;
        CachedFrameIndex: number;
        SpriteColor: UE.LinearColor;
        CachedBodySetup: UE.BodySetup;
        OnFinishedPlaying: $MulticastDelegate<() => void>;
        GetFlipbook() : UE.PaperFlipbook;
        GetFlipbookFramerate() : number;
        GetFlipbookLength() : number;
        GetFlipbookLengthInFrames() : number;
        GetPlaybackPosition() : number;
        GetPlaybackPositionInFrames() : number;
        GetPlayRate() : number;
        GetSpriteColor() : UE.LinearColor;
        IsLooping() : boolean;
        IsPlaying() : boolean;
        IsReversing() : boolean;
        OnRep_SourceFlipbook(OldFlipbook: $Nullable<UE.PaperFlipbook>) : void;
        Play() : void;
        PlayFromStart() : void;
        Reverse() : void;
        ReverseFromEnd() : void;
        SetFlipbook(NewFlipbook: $Nullable<UE.PaperFlipbook>) : boolean;
        SetLooping(bNewLooping: boolean) : void;
        SetNewTime(NewTime: number) : void;
        SetPlaybackPosition(NewPosition: number, bFireEvents: boolean) : void;
        SetPlaybackPositionInFrames(NewFramePosition: number, bFireEvents: boolean) : void;
        SetPlayRate(NewRate: number) : void;
        SetSpriteColor(NewColor: UE.LinearColor) : void;
        Stop() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperFlipbookComponent;
        static Load(InName: string): PaperFlipbookComponent;
    
        __tid_PaperFlipbookComponent_0__: boolean;
    }
    
    class PaperCharacter extends UE.Character {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sprite: UE.PaperFlipbookComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperCharacter;
        static Load(InName: string): PaperCharacter;
    
        __tid_PaperCharacter_0__: boolean;
    }
    
    class PaperExtractSpriteGridSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CellWidth: number;
        CellHeight: number;
        NumCellsX: number;
        NumCellsY: number;
        MarginX: number;
        MarginY: number;
        SpacingX: number;
        SpacingY: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperExtractSpriteGridSettings;
        static Load(InName: string): PaperExtractSpriteGridSettings;
    
        __tid_PaperExtractSpriteGridSettings_0__: boolean;
    }
    
    class PaperExtractSpritesSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpriteExtractMode: UE.ESpriteExtractMode;
        OutlineColor: UE.LinearColor;
        ViewportTextureTint: UE.LinearColor;
        BackgroundColor: UE.LinearColor;
        NamingTemplate: string;
        NamingStartIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperExtractSpritesSettings;
        static Load(InName: string): PaperExtractSpritesSettings;
    
        __tid_PaperExtractSpritesSettings_0__: boolean;
    }
    
    class PaperFlipbookActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderComponent: UE.PaperFlipbookComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperFlipbookActor;
        static Load(InName: string): PaperFlipbookActor;
    
        __tid_PaperFlipbookActor_0__: boolean;
    }
    
    class PaperFlipbookActorFactory extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperFlipbookActorFactory;
        static Load(InName: string): PaperFlipbookActorFactory;
    
        __tid_PaperFlipbookActorFactory_0__: boolean;
    }
    
    class PaperFlipbookFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperFlipbookFactory;
        static Load(InName: string): PaperFlipbookFactory;
    
        __tid_PaperFlipbookFactory_0__: boolean;
    }
    
    class PaperSpriteThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteThumbnailRenderer;
        static Load(InName: string): PaperSpriteThumbnailRenderer;
    
        __tid_PaperSpriteThumbnailRenderer_0__: boolean;
    }
    
    class PaperFlipbookThumbnailRenderer extends UE.PaperSpriteThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperFlipbookThumbnailRenderer;
        static Load(InName: string): PaperFlipbookThumbnailRenderer;
    
        __tid_PaperFlipbookThumbnailRenderer_0__: boolean;
    }
    
    class SpriteInstanceData {
        constructor();
        constructor(Transform: UE.Matrix, SourceSprite: UE.PaperSprite, VertexColor: UE.Color, MaterialIndex: number);
        Transform: UE.Matrix;
        SourceSprite: UE.PaperSprite;
        VertexColor: UE.Color;
        MaterialIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpriteInstanceData_0__: boolean;
    }
    
    class PaperGroupedSpriteComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InstanceMaterials: TArray<UE.MaterialInterface>;
        PerInstanceSpriteData: TArray<UE.SpriteInstanceData>;
        AddInstance(Transform: UE.Transform, Sprite: $Nullable<UE.PaperSprite>, bWorldSpace?: boolean /* = false */, Color?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : number;
        ClearInstances() : void;
        GetInstanceCount() : number;
        GetInstanceTransform(InstanceIndex: number, OutInstanceTransform: $Ref<UE.Transform>, bWorldSpace?: boolean /* = false */) : boolean;
        RemoveInstance(InstanceIndex: number) : boolean;
        SortInstancesAlongAxis(WorldSpaceSortAxis: UE.Vector) : void;
        UpdateInstanceColor(InstanceIndex: number, NewInstanceColor: UE.LinearColor, bMarkRenderStateDirty?: boolean /* = true */) : boolean;
        UpdateInstanceTransform(InstanceIndex: number, NewInstanceTransform: UE.Transform, bWorldSpace?: boolean /* = false */, bMarkRenderStateDirty?: boolean /* = true */, bTeleport?: boolean /* = false */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperGroupedSpriteComponent;
        static Load(InName: string): PaperGroupedSpriteComponent;
    
        __tid_PaperGroupedSpriteComponent_0__: boolean;
    }
    
    class PaperGroupedSpriteActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderComponent: UE.PaperGroupedSpriteComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperGroupedSpriteActor;
        static Load(InName: string): PaperGroupedSpriteActor;
    
        __tid_PaperGroupedSpriteActor_0__: boolean;
    }
    
    class PaperImporterSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bPickBestMaterialWhenCreatingSprites: boolean;
        bPickBestMaterialWhenCreatingTileMaps: boolean;
        bAnalysisCanUseOpaque: boolean;
        DefaultPixelsPerUnrealUnit: number;
        NormalMapTextureSuffixes: TArray<string>;
        BaseMapTextureSuffixes: TArray<string>;
        DefaultSpriteTextureGroup: UE.TextureGroup;
        bOverrideTextureCompression: boolean;
        DefaultSpriteTextureCompression: UE.TextureCompressionSettings;
        UnlitDefaultMaskedMaterialName: UE.SoftObjectPath;
        UnlitDefaultTranslucentMaterialName: UE.SoftObjectPath;
        UnlitDefaultOpaqueMaterialName: UE.SoftObjectPath;
        LitDefaultMaskedMaterialName: UE.SoftObjectPath;
        LitDefaultTranslucentMaterialName: UE.SoftObjectPath;
        LitDefaultOpaqueMaterialName: UE.SoftObjectPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperImporterSettings;
        static Load(InName: string): PaperImporterSettings;
    
        __tid_PaperImporterSettings_0__: boolean;
    }
    
    class PaperRuntimeSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnableSpriteAtlasGroups: boolean;
        bEnableTerrainSplineEditing: boolean;
        bResizeSpriteDataToMatchTextures: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperRuntimeSettings;
        static Load(InName: string): PaperRuntimeSettings;
    
        __tid_PaperRuntimeSettings_0__: boolean;
    }
    
    class PaperSpriteComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceSprite: UE.PaperSprite;
        MaterialOverride: UE.MaterialInterface;
        SpriteColor: UE.LinearColor;
        GetSprite() : UE.PaperSprite;
        SetSprite(NewSprite: $Nullable<UE.PaperSprite>) : boolean;
        SetSpriteColor(NewColor: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteComponent;
        static Load(InName: string): PaperSpriteComponent;
    
        __tid_PaperSpriteComponent_0__: boolean;
    }
    
    class PaperSpriteActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderComponent: UE.PaperSpriteComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteActor;
        static Load(InName: string): PaperSpriteActor;
    
        __tid_PaperSpriteActor_0__: boolean;
    }
    
    class PaperSpriteActorFactory extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteActorFactory;
        static Load(InName: string): PaperSpriteActorFactory;
    
        __tid_PaperSpriteActorFactory_0__: boolean;
    }
    
    class PaperSpriteAtlasFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteAtlasFactory;
        static Load(InName: string): PaperSpriteAtlasFactory;
    
        __tid_PaperSpriteAtlasFactory_0__: boolean;
    }
    
    class PaperSpriteBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static MakeBrushFromSprite(Sprite: $Nullable<UE.PaperSprite>, Width: number, Height: number) : UE.SlateBrush;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteBlueprintLibrary;
        static Load(InName: string): PaperSpriteBlueprintLibrary;
    
        __tid_PaperSpriteBlueprintLibrary_0__: boolean;
    }
    
    class PaperSpriteFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteFactory;
        static Load(InName: string): PaperSpriteFactory;
    
        __tid_PaperSpriteFactory_0__: boolean;
    }
    
    class PaperSpriteSheet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpriteNames: TArray<string>;
        Sprites: TArray<TSoftObjectPtr<UE.PaperSprite>>;
        TextureName: string;
        Texture: UE.Texture2D;
        NormalMapTextureName: string;
        NormalMapTexture: UE.Texture2D;
        AssetImportData: UE.AssetImportData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteSheet;
        static Load(InName: string): PaperSpriteSheet;
    
        __tid_PaperSpriteSheet_0__: boolean;
    }
    
    class PaperSpriteSheetImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteSheetImportFactory;
        static Load(InName: string): PaperSpriteSheetImportFactory;
    
        __tid_PaperSpriteSheetImportFactory_0__: boolean;
    }
    
    class PaperSpriteSheetReimportFactory extends UE.PaperSpriteSheetImportFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperSpriteSheetReimportFactory;
        static Load(InName: string): PaperSpriteSheetReimportFactory;
    
        __tid_PaperSpriteSheetReimportFactory_0__: boolean;
    }
    
    class PaperTerrainSplineComponent extends UE.SplineComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTerrainSplineComponent;
        static Load(InName: string): PaperTerrainSplineComponent;
    
        __tid_PaperTerrainSplineComponent_0__: boolean;
    }
    
    class PaperTerrainMaterialRule {
        constructor();
        constructor(StartCap: UE.PaperSprite, Body: TArray<UE.PaperSprite>, EndCap: UE.PaperSprite, MinimumAngle: number, MaximumAngle: number, bEnableCollision: boolean, CollisionOffset: number, DrawOrder: number, Description: string);
        StartCap: UE.PaperSprite;
        Body: TArray<UE.PaperSprite>;
        EndCap: UE.PaperSprite;
        MinimumAngle: number;
        MaximumAngle: number;
        bEnableCollision: boolean;
        CollisionOffset: number;
        DrawOrder: number;
        Description: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaperTerrainMaterialRule_0__: boolean;
    }
    
    class PaperTerrainMaterial extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Rules: TArray<UE.PaperTerrainMaterialRule>;
        InteriorFill: UE.PaperSprite;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTerrainMaterial;
        static Load(InName: string): PaperTerrainMaterial;
    
        __tid_PaperTerrainMaterial_0__: boolean;
    }
    
    class PaperTerrainComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TerrainMaterial: UE.PaperTerrainMaterial;
        bClosedSpline: boolean;
        bFilledSpline: boolean;
        AssociatedSpline: UE.PaperTerrainSplineComponent;
        RandomSeed: number;
        SegmentOverlapAmount: number;
        TerrainColor: UE.LinearColor;
        ReparamStepsPerSegment: number;
        SpriteCollisionDomain: UE.ESpriteCollisionMode;
        CollisionThickness: number;
        CachedBodySetup: UE.BodySetup;
        SetTerrainColor(NewColor: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTerrainComponent;
        static Load(InName: string): PaperTerrainComponent;
    
        __tid_PaperTerrainComponent_0__: boolean;
    }
    
    class PaperTerrainActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DummyRoot: UE.SceneComponent;
        SplineComponent: UE.PaperTerrainSplineComponent;
        RenderComponent: UE.PaperTerrainComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTerrainActor;
        static Load(InName: string): PaperTerrainActor;
    
        __tid_PaperTerrainActor_0__: boolean;
    }
    
    class PaperTiledImporterFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTiledImporterFactory;
        static Load(InName: string): PaperTiledImporterFactory;
    
        __tid_PaperTiledImporterFactory_0__: boolean;
    }
    
    class PaperTileMetadata {
        constructor();
        constructor(UserDataName: string, CollisionData: UE.SpriteGeometryCollection, TerrainMembership: FixSizeArray<number>);
        UserDataName: string;
        CollisionData: UE.SpriteGeometryCollection;
        TerrainMembership: FixSizeArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaperTileMetadata_0__: boolean;
    }
    
    class PaperTileSetTerrain {
        constructor();
        constructor(TerrainName: string, CenterTileIndex: number);
        TerrainName: string;
        CenterTileIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaperTileSetTerrain_0__: boolean;
    }
    
    class PaperTileSet extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TileSize: UE.IntPoint;
        TileSheet: UE.Texture2D;
        AdditionalSourceTextures: TArray<UE.Texture>;
        BorderMargin: UE.IntMargin;
        PerTileSpacing: UE.IntPoint;
        DrawingOffset: UE.IntPoint;
        BackgroundColor: UE.LinearColor;
        WidthInTiles: number;
        HeightInTiles: number;
        AllocatedWidth: number;
        AllocatedHeight: number;
        PerTileData: TArray<UE.PaperTileMetadata>;
        Terrains: TArray<UE.PaperTileSetTerrain>;
        TileWidth: number;
        TileHeight: number;
        Margin: number;
        Spacing: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileSet;
        static Load(InName: string): PaperTileSet;
    
        __tid_PaperTileSet_0__: boolean;
    }
    
    class PaperTileInfo {
        constructor();
        constructor(TileSet: UE.PaperTileSet, PackedTileIndex: number);
        TileSet: UE.PaperTileSet;
        PackedTileIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PaperTileInfo_0__: boolean;
    }
    
    class PaperTileLayer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LayerName: string;
        LayerWidth: number;
        LayerHeight: number;
        bHiddenInEditor: boolean;
        bHiddenInGame: boolean;
        bLayerCollides: boolean;
        bOverrideCollisionThickness: boolean;
        bOverrideCollisionOffset: boolean;
        CollisionThicknessOverride: number;
        CollisionOffsetOverride: number;
        LayerColor: UE.LinearColor;
        AllocatedWidth: number;
        AllocatedHeight: number;
        AllocatedCells: TArray<UE.PaperTileInfo>;
        TileSet: UE.PaperTileSet;
        AllocatedGrid: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileLayer;
        static Load(InName: string): PaperTileLayer;
    
        __tid_PaperTileLayer_0__: boolean;
    }
    
    class PaperTileMap extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MapWidth: number;
        MapHeight: number;
        TileWidth: number;
        TileHeight: number;
        PixelsPerUnrealUnit: number;
        SeparationPerTileX: number;
        SeparationPerTileY: number;
        SeparationPerLayer: number;
        SelectedTileSet: TSoftObjectPtr<UE.PaperTileSet>;
        Material: UE.MaterialInterface;
        TileLayers: TArray<UE.PaperTileLayer>;
        CollisionThickness: number;
        SpriteCollisionDomain: UE.ESpriteCollisionMode;
        ProjectionMode: UE.ETileMapProjectionMode;
        HexSideLength: number;
        BodySetup: UE.BodySetup;
        AssetImportData: UE.AssetImportData;
        SelectedLayerIndex: number;
        BackgroundColor: UE.LinearColor;
        TileGridColor: UE.LinearColor;
        MultiTileGridColor: UE.LinearColor;
        MultiTileGridWidth: number;
        MultiTileGridHeight: number;
        MultiTileGridOffsetX: number;
        MultiTileGridOffsetY: number;
        LayerGridColor: UE.LinearColor;
        LayerNameIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileMap;
        static Load(InName: string): PaperTileMap;
    
        __tid_PaperTileMap_0__: boolean;
    }
    
    class PaperTileMapComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MapWidth: number;
        MapHeight: number;
        TileWidth: number;
        TileHeight: number;
        DefaultLayerTileSet: UE.PaperTileSet;
        Material: UE.MaterialInterface;
        TileLayers: TArray<UE.PaperTileLayer>;
        TileMapColor: UE.LinearColor;
        UseSingleLayerIndex: number;
        bUseSingleLayer: boolean;
        TileMap: UE.PaperTileMap;
        bShowPerTileGridWhenSelected: boolean;
        bShowPerLayerGridWhenSelected: boolean;
        bShowOutlineWhenUnselected: boolean;
        bShowPerTileGridWhenUnselected: boolean;
        bShowPerLayerGridWhenUnselected: boolean;
        AddNewLayer() : UE.PaperTileLayer;
        CreateNewTileMap(MapWidth?: number /* = 4 */, MapHeight?: number /* = 4 */, TileWidth?: number /* = 32 */, TileHeight?: number /* = 32 */, PixelsPerUnrealUnit?: number /* = 1.000000 */, bCreateLayer?: boolean /* = true */) : void;
        GetLayerColor(Layer?: number /* = 0 */) : UE.LinearColor;
        GetMapSize(MapWidth: $Ref<number>, MapHeight: $Ref<number>, NumLayers: $Ref<number>) : void;
        GetTile(X: number, Y: number, Layer: number) : UE.PaperTileInfo;
        GetTileCenterPosition(TileX: number, TileY: number, LayerIndex?: number /* = 0 */, bWorldSpace?: boolean /* = false */) : UE.Vector;
        GetTileCornerPosition(TileX: number, TileY: number, LayerIndex?: number /* = 0 */, bWorldSpace?: boolean /* = false */) : UE.Vector;
        GetTileMapColor() : UE.LinearColor;
        GetTilePolygon(TileX: number, TileY: number, Points: $Ref<TArray<UE.Vector>>, LayerIndex?: number /* = 0 */, bWorldSpace?: boolean /* = false */) : void;
        MakeTileMapEditable() : void;
        OwnsTileMap() : boolean;
        RebuildCollision() : void;
        ResizeMap(NewWidthInTiles: number, NewHeightInTiles: number) : void;
        SetDefaultCollisionThickness(Thickness: number, bRebuildCollision?: boolean /* = true */) : void;
        SetLayerCollision(Layer?: number /* = 0 */, bHasCollision?: boolean /* = true */, bOverrideThickness?: boolean /* = true */, CustomThickness?: number /* = 50.000000 */, bOverrideOffset?: boolean /* = false */, CustomOffset?: number /* = 0.000000 */, bRebuildCollision?: boolean /* = true */) : void;
        SetLayerColor(NewColor: UE.LinearColor, Layer?: number /* = 0 */) : void;
        SetTile(X: number, Y: number, Layer: number, NewValue: UE.PaperTileInfo) : void;
        SetTileMap(NewTileMap: $Nullable<UE.PaperTileMap>) : boolean;
        SetTileMapColor(NewColor: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileMapComponent;
        static Load(InName: string): PaperTileMapComponent;
    
        __tid_PaperTileMapComponent_0__: boolean;
    }
    
    class PaperTileMapActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderComponent: UE.PaperTileMapComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileMapActor;
        static Load(InName: string): PaperTileMapActor;
    
        __tid_PaperTileMapActor_0__: boolean;
    }
    
    class PaperTileMapFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileMapFactory;
        static Load(InName: string): PaperTileMapFactory;
    
        __tid_PaperTileMapFactory_0__: boolean;
    }
    
    class PaperTileMapPromotionFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetToRename: UE.PaperTileMap;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileMapPromotionFactory;
        static Load(InName: string): PaperTileMapPromotionFactory;
    
        __tid_PaperTileMapPromotionFactory_0__: boolean;
    }
    
    class PaperTileSetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileSetFactory;
        static Load(InName: string): PaperTileSetFactory;
    
        __tid_PaperTileSetFactory_0__: boolean;
    }
    
    class PaperTileSetThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PaperTileSetThumbnailRenderer;
        static Load(InName: string): PaperTileSetThumbnailRenderer;
    
        __tid_PaperTileSetThumbnailRenderer_0__: boolean;
    }
    
    class ParticleCurvePair {
        constructor();
        constructor(CurveName: string, CurveObject: UE.Object);
        CurveName: string;
        CurveObject: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleCurvePair_0__: boolean;
    }
    
    class ParticleEmitterReplayFrame {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleEmitterReplayFrame_0__: boolean;
    }
    
    class ParticleModuleAccelerationBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAlwaysInWorldSpace: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAccelerationBase;
        static Load(InName: string): ParticleModuleAccelerationBase;
    
        __tid_ParticleModuleAccelerationBase_0__: boolean;
    }
    
    class ParticleModuleAcceleration extends UE.ParticleModuleAccelerationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Acceleration: UE.RawDistributionVector;
        bApplyOwnerScale: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAcceleration;
        static Load(InName: string): ParticleModuleAcceleration;
    
        __tid_ParticleModuleAcceleration_0__: boolean;
    }
    
    class ParticleModuleAccelerationConstant extends UE.ParticleModuleAccelerationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Acceleration: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAccelerationConstant;
        static Load(InName: string): ParticleModuleAccelerationConstant;
    
        __tid_ParticleModuleAccelerationConstant_0__: boolean;
    }
    
    class ParticleModuleAccelerationDrag extends UE.ParticleModuleAccelerationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DragCoefficient: UE.DistributionFloat;
        DragCoefficientRaw: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAccelerationDrag;
        static Load(InName: string): ParticleModuleAccelerationDrag;
    
        __tid_ParticleModuleAccelerationDrag_0__: boolean;
    }
    
    class ParticleModuleAccelerationDragScaleOverLife extends UE.ParticleModuleAccelerationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DragScale: UE.DistributionFloat;
        DragScaleRaw: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAccelerationDragScaleOverLife;
        static Load(InName: string): ParticleModuleAccelerationDragScaleOverLife;
    
        __tid_ParticleModuleAccelerationDragScaleOverLife_0__: boolean;
    }
    
    class ParticleModuleAccelerationOverLifetime extends UE.ParticleModuleAccelerationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AccelOverLife: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAccelerationOverLifetime;
        static Load(InName: string): ParticleModuleAccelerationOverLifetime;
    
        __tid_ParticleModuleAccelerationOverLifetime_0__: boolean;
    }
    
    class ParticleModuleAttractorBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAttractorBase;
        static Load(InName: string): ParticleModuleAttractorBase;
    
        __tid_ParticleModuleAttractorBase_0__: boolean;
    }
    
    class ParticleModuleAttractorLine extends UE.ParticleModuleAttractorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EndPoint0: UE.Vector;
        EndPoint1: UE.Vector;
        Range: UE.RawDistributionFloat;
        Strength: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAttractorLine;
        static Load(InName: string): ParticleModuleAttractorLine;
    
        __tid_ParticleModuleAttractorLine_0__: boolean;
    }
    
    class ParticleModuleAttractorParticle extends UE.ParticleModuleAttractorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterName: string;
        Range: UE.RawDistributionFloat;
        bStrengthByDistance: boolean;
        Strength: UE.RawDistributionFloat;
        bAffectBaseVelocity: boolean;
        SelectionMethod: UE.EAttractorParticleSelectionMethod;
        bRenewSource: boolean;
        bInheritSourceVel: boolean;
        LastSelIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAttractorParticle;
        static Load(InName: string): ParticleModuleAttractorParticle;
    
        __tid_ParticleModuleAttractorParticle_0__: boolean;
    }
    
    class ParticleModuleAttractorPoint extends UE.ParticleModuleAttractorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Position: UE.RawDistributionVector;
        Range: UE.RawDistributionFloat;
        Strength: UE.RawDistributionFloat;
        StrengthByDistance: boolean;
        bAffectBaseVelocity: boolean;
        bOverrideVelocity: boolean;
        bUseWorldSpacePosition: boolean;
        Positive_X: boolean;
        Positive_Y: boolean;
        Positive_Z: boolean;
        Negative_X: boolean;
        Negative_Y: boolean;
        Negative_Z: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAttractorPoint;
        static Load(InName: string): ParticleModuleAttractorPoint;
    
        __tid_ParticleModuleAttractorPoint_0__: boolean;
    }
    
    class ParticleModuleAttractorPointGravity extends UE.ParticleModuleAttractorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Position: UE.Vector;
        Radius: number;
        Strength: UE.DistributionFloat;
        StrengthRaw: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleAttractorPointGravity;
        static Load(InName: string): ParticleModuleAttractorPointGravity;
    
        __tid_ParticleModuleAttractorPointGravity_0__: boolean;
    }
    
    class ParticleModuleBeamBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleBeamBase;
        static Load(InName: string): ParticleModuleBeamBase;
    
        __tid_ParticleModuleBeamBase_0__: boolean;
    }
    
    class ParticleModuleBeamModifier extends UE.ParticleModuleBeamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ModifierType: UE.BeamModifierType;
        PositionOptions: UE.BeamModifierOptions;
        Position: UE.RawDistributionVector;
        TangentOptions: UE.BeamModifierOptions;
        Tangent: UE.RawDistributionVector;
        bAbsoluteTangent: boolean;
        StrengthOptions: UE.BeamModifierOptions;
        Strength: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleBeamModifier;
        static Load(InName: string): ParticleModuleBeamModifier;
    
        __tid_ParticleModuleBeamModifier_0__: boolean;
    }
    
    class ParticleModuleBeamNoise extends UE.ParticleModuleBeamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bLowFreq_Enabled: boolean;
        Frequency: number;
        Frequency_LowRange: number;
        NoiseRange: UE.RawDistributionVector;
        NoiseRangeScale: UE.RawDistributionFloat;
        bNRScaleEmitterTime: boolean;
        NoiseSpeed: UE.RawDistributionVector;
        bSmooth: boolean;
        NoiseLockRadius: number;
        bNoiseLock: boolean;
        bOscillate: boolean;
        NoiseLockTime: number;
        NoiseTension: number;
        bUseNoiseTangents: boolean;
        NoiseTangentStrength: UE.RawDistributionFloat;
        NoiseTessellation: number;
        bTargetNoise: boolean;
        FrequencyDistance: number;
        bApplyNoiseScale: boolean;
        NoiseScale: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleBeamNoise;
        static Load(InName: string): ParticleModuleBeamNoise;
    
        __tid_ParticleModuleBeamNoise_0__: boolean;
    }
    
    class ParticleModuleBeamSource extends UE.ParticleModuleBeamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceMethod: UE.Beam2SourceTargetMethod;
        SourceName: string;
        bSourceAbsolute: boolean;
        Source: UE.RawDistributionVector;
        bLockSource: boolean;
        SourceTangentMethod: UE.Beam2SourceTargetTangentMethod;
        SourceTangent: UE.RawDistributionVector;
        bLockSourceTangent: boolean;
        SourceStrength: UE.RawDistributionFloat;
        bLockSourceStength: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleBeamSource;
        static Load(InName: string): ParticleModuleBeamSource;
    
        __tid_ParticleModuleBeamSource_0__: boolean;
    }
    
    class ParticleModuleBeamTarget extends UE.ParticleModuleBeamBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetMethod: UE.Beam2SourceTargetMethod;
        TargetName: string;
        Target: UE.RawDistributionVector;
        bTargetAbsolute: boolean;
        bLockTarget: boolean;
        TargetTangentMethod: UE.Beam2SourceTargetTangentMethod;
        TargetTangent: UE.RawDistributionVector;
        bLockTargetTangent: boolean;
        TargetStrength: UE.RawDistributionFloat;
        bLockTargetStength: boolean;
        LockRadius: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleBeamTarget;
        static Load(InName: string): ParticleModuleBeamTarget;
    
        __tid_ParticleModuleBeamTarget_0__: boolean;
    }
    
    class ParticleModuleCameraBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleCameraBase;
        static Load(InName: string): ParticleModuleCameraBase;
    
        __tid_ParticleModuleCameraBase_0__: boolean;
    }
    
    class ParticleModuleCameraOffset extends UE.ParticleModuleCameraBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraOffset: UE.RawDistributionFloat;
        bSpawnTimeOnly: boolean;
        UpdateMethod: UE.EParticleCameraOffsetUpdateMethod;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleCameraOffset;
        static Load(InName: string): ParticleModuleCameraOffset;
    
        __tid_ParticleModuleCameraOffset_0__: boolean;
    }
    
    class ParticleModuleCollisionBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleCollisionBase;
        static Load(InName: string): ParticleModuleCollisionBase;
    
        __tid_ParticleModuleCollisionBase_0__: boolean;
    }
    
    class ParticleModuleCollision extends UE.ParticleModuleCollisionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DampingFactor: UE.RawDistributionVector;
        DampingFactorRotation: UE.RawDistributionVector;
        MaxCollisions: UE.RawDistributionFloat;
        CollisionCompletionOption: UE.EParticleCollisionComplete;
        CollisionTypes: TArray<UE.EObjectTypeQuery>;
        bApplyPhysics: boolean;
        bIgnoreTriggerVolumes: boolean;
        ParticleMass: UE.RawDistributionFloat;
        DirScalar: number;
        bPawnsDoNotDecrementCount: boolean;
        bOnlyVerticalNormalsDecrementCount: boolean;
        VerticalFudgeFactor: number;
        DelayAmount: UE.RawDistributionFloat;
        bDropDetail: boolean;
        bCollideOnlyIfVisible: boolean;
        bIgnoreSourceActor: boolean;
        MaxCollisionDistance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleCollision;
        static Load(InName: string): ParticleModuleCollision;
    
        __tid_ParticleModuleCollision_0__: boolean;
    }
    
    class ParticleModuleCollisionGPU extends UE.ParticleModuleCollisionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Resilience: UE.RawDistributionFloat;
        ResilienceScaleOverLife: UE.RawDistributionFloat;
        Friction: number;
        RandomSpread: number;
        RandomDistribution: number;
        RadiusScale: number;
        RadiusBias: number;
        Response: UE.EParticleCollisionResponse;
        CollisionMode: UE.EParticleCollisionMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleCollisionGPU;
        static Load(InName: string): ParticleModuleCollisionGPU;
    
        __tid_ParticleModuleCollisionGPU_0__: boolean;
    }
    
    class ParticleModuleColorBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleColorBase;
        static Load(InName: string): ParticleModuleColorBase;
    
        __tid_ParticleModuleColorBase_0__: boolean;
    }
    
    class ParticleModuleColor extends UE.ParticleModuleColorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartColor: UE.RawDistributionVector;
        StartAlpha: UE.RawDistributionFloat;
        bClampAlpha: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleColor;
        static Load(InName: string): ParticleModuleColor;
    
        __tid_ParticleModuleColor_0__: boolean;
    }
    
    class ParticleRandomSeedInfo {
        constructor();
        constructor(ParameterName: string, bGetSeedFromInstance: boolean, bInstanceSeedIsIndex: boolean, bResetSeedOnEmitterLooping: boolean, bRandomlySelectSeedArray: boolean, RandomSeeds: TArray<number>);
        ParameterName: string;
        bGetSeedFromInstance: boolean;
        bInstanceSeedIsIndex: boolean;
        bResetSeedOnEmitterLooping: boolean;
        bRandomlySelectSeedArray: boolean;
        RandomSeeds: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleRandomSeedInfo_0__: boolean;
    }
    
    class ParticleModuleColor_Seeded extends UE.ParticleModuleColor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleColor_Seeded;
        static Load(InName: string): ParticleModuleColor_Seeded;
    
        __tid_ParticleModuleColor_Seeded_0__: boolean;
    }
    
    class ParticleModuleColorOverLife extends UE.ParticleModuleColorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ColorOverLife: UE.RawDistributionVector;
        AlphaOverLife: UE.RawDistributionFloat;
        bClampAlpha: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleColorOverLife;
        static Load(InName: string): ParticleModuleColorOverLife;
    
        __tid_ParticleModuleColorOverLife_0__: boolean;
    }
    
    class ParticleModuleColorScaleOverLife extends UE.ParticleModuleColorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ColorScaleOverLife: UE.RawDistributionVector;
        AlphaScaleOverLife: UE.RawDistributionFloat;
        bEmitterTime: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleColorScaleOverLife;
        static Load(InName: string): ParticleModuleColorScaleOverLife;
    
        __tid_ParticleModuleColorScaleOverLife_0__: boolean;
    }
    
    class ParticleModuleEventReceiverKillParticles extends UE.ParticleModuleEventReceiverBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bStopSpawning: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleEventReceiverKillParticles;
        static Load(InName: string): ParticleModuleEventReceiverKillParticles;
    
        __tid_ParticleModuleEventReceiverKillParticles_0__: boolean;
    }
    
    class ParticleModuleEventReceiverSpawn extends UE.ParticleModuleEventReceiverBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpawnCount: UE.RawDistributionFloat;
        bUseParticleTime: boolean;
        bUsePSysLocation: boolean;
        bInheritVelocity: boolean;
        InheritVelocityScale: UE.RawDistributionVector;
        PhysicalMaterials: TArray<UE.PhysicalMaterial>;
        bBanPhysicalMaterials: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleEventReceiverSpawn;
        static Load(InName: string): ParticleModuleEventReceiverSpawn;
    
        __tid_ParticleModuleEventReceiverSpawn_0__: boolean;
    }
    
    class ParticleModuleKillBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleKillBase;
        static Load(InName: string): ParticleModuleKillBase;
    
        __tid_ParticleModuleKillBase_0__: boolean;
    }
    
    class ParticleModuleKillBox extends UE.ParticleModuleKillBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LowerLeftCorner: UE.RawDistributionVector;
        UpperRightCorner: UE.RawDistributionVector;
        bAbsolute: boolean;
        bKillInside: boolean;
        bAxisAlignedAndFixedSize: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleKillBox;
        static Load(InName: string): ParticleModuleKillBox;
    
        __tid_ParticleModuleKillBox_0__: boolean;
    }
    
    class ParticleModuleKillHeight extends UE.ParticleModuleKillBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Height: UE.RawDistributionFloat;
        bAbsolute: boolean;
        bFloor: boolean;
        bApplyPSysScale: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleKillHeight;
        static Load(InName: string): ParticleModuleKillHeight;
    
        __tid_ParticleModuleKillHeight_0__: boolean;
    }
    
    class ParticleModuleLifetimeBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLifetimeBase;
        static Load(InName: string): ParticleModuleLifetimeBase;
    
        __tid_ParticleModuleLifetimeBase_0__: boolean;
    }
    
    class ParticleModuleLifetime extends UE.ParticleModuleLifetimeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Lifetime: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLifetime;
        static Load(InName: string): ParticleModuleLifetime;
    
        __tid_ParticleModuleLifetime_0__: boolean;
    }
    
    class ParticleModuleLifetime_Seeded extends UE.ParticleModuleLifetime {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLifetime_Seeded;
        static Load(InName: string): ParticleModuleLifetime_Seeded;
    
        __tid_ParticleModuleLifetime_Seeded_0__: boolean;
    }
    
    class ParticleModuleLightBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLightBase;
        static Load(InName: string): ParticleModuleLightBase;
    
        __tid_ParticleModuleLightBase_0__: boolean;
    }
    
    class ParticleModuleLight extends UE.ParticleModuleLightBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseInverseSquaredFalloff: boolean;
        bAffectsTranslucency: boolean;
        bPreviewLightRadius: boolean;
        SpawnFraction: number;
        ColorScaleOverLife: UE.RawDistributionVector;
        BrightnessOverLife: UE.RawDistributionFloat;
        RadiusScale: UE.RawDistributionFloat;
        LightExponent: UE.RawDistributionFloat;
        LightingChannels: UE.LightingChannels;
        VolumetricScatteringIntensity: number;
        bHighQualityLights: boolean;
        bShadowCastingLights: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLight;
        static Load(InName: string): ParticleModuleLight;
    
        __tid_ParticleModuleLight_0__: boolean;
    }
    
    class ParticleModuleLight_Seeded extends UE.ParticleModuleLight {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLight_Seeded;
        static Load(InName: string): ParticleModuleLight_Seeded;
    
        __tid_ParticleModuleLight_Seeded_0__: boolean;
    }
    
    class ParticleModuleLocationBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationBase;
        static Load(InName: string): ParticleModuleLocationBase;
    
        __tid_ParticleModuleLocationBase_0__: boolean;
    }
    
    class ParticleModuleLocation extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartLocation: UE.RawDistributionVector;
        DistributeOverNPoints: number;
        DistributeThreshold: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocation;
        static Load(InName: string): ParticleModuleLocation;
    
        __tid_ParticleModuleLocation_0__: boolean;
    }
    
    class ParticleModuleLocation_Seeded extends UE.ParticleModuleLocation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocation_Seeded;
        static Load(InName: string): ParticleModuleLocation_Seeded;
    
        __tid_ParticleModuleLocation_Seeded_0__: boolean;
    }
    
    class ParticleModuleLocationBoneSocket extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceType: UE.ELocationBoneSocketSource;
        UniversalOffset: UE.Vector;
        SourceLocations: TArray<UE.LocationBoneSocketInfo>;
        SelectionMethod: UE.ELocationBoneSocketSelectionMethod;
        bUpdatePositionEachFrame: boolean;
        bOrientMeshEmitters: boolean;
        bInheritBoneVelocity: boolean;
        InheritVelocityScale: number;
        SkelMeshActorParamName: string;
        NumPreSelectedIndices: number;
        EditorSkelMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationBoneSocket;
        static Load(InName: string): ParticleModuleLocationBoneSocket;
    
        __tid_ParticleModuleLocationBoneSocket_0__: boolean;
    }
    
    class ParticleModuleLocationDirect extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Location: UE.RawDistributionVector;
        LocationOffset: UE.RawDistributionVector;
        ScaleFactor: UE.RawDistributionVector;
        Direction: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationDirect;
        static Load(InName: string): ParticleModuleLocationDirect;
    
        __tid_ParticleModuleLocationDirect_0__: boolean;
    }
    
    class ParticleModuleLocationEmitter extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterName: string;
        SelectionMethod: UE.ELocationEmitterSelectionMethod;
        InheritSourceVelocity: boolean;
        InheritSourceVelocityScale: number;
        bInheritSourceRotation: boolean;
        InheritSourceRotationScale: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationEmitter;
        static Load(InName: string): ParticleModuleLocationEmitter;
    
        __tid_ParticleModuleLocationEmitter_0__: boolean;
    }
    
    class ParticleModuleLocationEmitterDirect extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationEmitterDirect;
        static Load(InName: string): ParticleModuleLocationEmitterDirect;
    
        __tid_ParticleModuleLocationEmitterDirect_0__: boolean;
    }
    
    class ParticleModuleLocationPrimitiveBase extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Positive_X: boolean;
        Positive_Y: boolean;
        Positive_Z: boolean;
        Negative_X: boolean;
        Negative_Y: boolean;
        Negative_Z: boolean;
        SurfaceOnly: boolean;
        Velocity: boolean;
        VelocityScale: UE.RawDistributionFloat;
        StartLocation: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationPrimitiveBase;
        static Load(InName: string): ParticleModuleLocationPrimitiveBase;
    
        __tid_ParticleModuleLocationPrimitiveBase_0__: boolean;
    }
    
    class ParticleModuleLocationPrimitiveCylinder extends UE.ParticleModuleLocationPrimitiveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RadialVelocity: boolean;
        StartRadius: UE.RawDistributionFloat;
        StartHeight: UE.RawDistributionFloat;
        HeightAxis: UE.CylinderHeightAxis;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationPrimitiveCylinder;
        static Load(InName: string): ParticleModuleLocationPrimitiveCylinder;
    
        __tid_ParticleModuleLocationPrimitiveCylinder_0__: boolean;
    }
    
    class ParticleModuleLocationPrimitiveCylinder_Seeded extends UE.ParticleModuleLocationPrimitiveCylinder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationPrimitiveCylinder_Seeded;
        static Load(InName: string): ParticleModuleLocationPrimitiveCylinder_Seeded;
    
        __tid_ParticleModuleLocationPrimitiveCylinder_Seeded_0__: boolean;
    }
    
    class ParticleModuleLocationPrimitiveSphere extends UE.ParticleModuleLocationPrimitiveBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartRadius: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationPrimitiveSphere;
        static Load(InName: string): ParticleModuleLocationPrimitiveSphere;
    
        __tid_ParticleModuleLocationPrimitiveSphere_0__: boolean;
    }
    
    class ParticleModuleLocationPrimitiveSphere_Seeded extends UE.ParticleModuleLocationPrimitiveSphere {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationPrimitiveSphere_Seeded;
        static Load(InName: string): ParticleModuleLocationPrimitiveSphere_Seeded;
    
        __tid_ParticleModuleLocationPrimitiveSphere_Seeded_0__: boolean;
    }
    
    class ParticleModuleLocationPrimitiveTriangle extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartOffset: UE.RawDistributionVector;
        Height: UE.RawDistributionFloat;
        Angle: UE.RawDistributionFloat;
        Thickness: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationPrimitiveTriangle;
        static Load(InName: string): ParticleModuleLocationPrimitiveTriangle;
    
        __tid_ParticleModuleLocationPrimitiveTriangle_0__: boolean;
    }
    
    class ParticleModuleLocationSkelVertSurface extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceType: UE.ELocationSkelVertSurfaceSource;
        UniversalOffset: UE.Vector;
        bUpdatePositionEachFrame: boolean;
        bOrientMeshEmitters: boolean;
        bInheritBoneVelocity: boolean;
        InheritVelocityScale: number;
        SkelMeshActorParamName: string;
        EditorSkelMesh: UE.SkeletalMesh;
        ValidAssociatedBones: TArray<string>;
        bEnforceNormalCheck: boolean;
        NormalToCompare: UE.Vector;
        NormalCheckToleranceDegrees: number;
        NormalCheckTolerance: number;
        ValidMaterialIndices: TArray<number>;
        bInheritVertexColor: boolean;
        bInheritUV: boolean;
        InheritUVChannel: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationSkelVertSurface;
        static Load(InName: string): ParticleModuleLocationSkelVertSurface;
    
        __tid_ParticleModuleLocationSkelVertSurface_0__: boolean;
    }
    
    class ParticleModuleLocationWorldOffset extends UE.ParticleModuleLocation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationWorldOffset;
        static Load(InName: string): ParticleModuleLocationWorldOffset;
    
        __tid_ParticleModuleLocationWorldOffset_0__: boolean;
    }
    
    class ParticleModuleLocationWorldOffset_Seeded extends UE.ParticleModuleLocationWorldOffset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleLocationWorldOffset_Seeded;
        static Load(InName: string): ParticleModuleLocationWorldOffset_Seeded;
    
        __tid_ParticleModuleLocationWorldOffset_Seeded_0__: boolean;
    }
    
    class ParticleModuleMaterialBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMaterialBase;
        static Load(InName: string): ParticleModuleMaterialBase;
    
        __tid_ParticleModuleMaterialBase_0__: boolean;
    }
    
    class ParticleModuleMeshMaterial extends UE.ParticleModuleMaterialBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MeshMaterials: TArray<UE.MaterialInterface>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMeshMaterial;
        static Load(InName: string): ParticleModuleMeshMaterial;
    
        __tid_ParticleModuleMeshMaterial_0__: boolean;
    }
    
    class ParticleModuleRotationBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotationBase;
        static Load(InName: string): ParticleModuleRotationBase;
    
        __tid_ParticleModuleRotationBase_0__: boolean;
    }
    
    class ParticleModuleMeshRotation extends UE.ParticleModuleRotationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartRotation: UE.RawDistributionVector;
        bInheritParent: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMeshRotation;
        static Load(InName: string): ParticleModuleMeshRotation;
    
        __tid_ParticleModuleMeshRotation_0__: boolean;
    }
    
    class ParticleModuleMeshRotation_Seeded extends UE.ParticleModuleMeshRotation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMeshRotation_Seeded;
        static Load(InName: string): ParticleModuleMeshRotation_Seeded;
    
        __tid_ParticleModuleMeshRotation_Seeded_0__: boolean;
    }
    
    class ParticleModuleRotationRateBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotationRateBase;
        static Load(InName: string): ParticleModuleRotationRateBase;
    
        __tid_ParticleModuleRotationRateBase_0__: boolean;
    }
    
    class ParticleModuleMeshRotationRate extends UE.ParticleModuleRotationRateBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartRotationRate: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMeshRotationRate;
        static Load(InName: string): ParticleModuleMeshRotationRate;
    
        __tid_ParticleModuleMeshRotationRate_0__: boolean;
    }
    
    class ParticleModuleMeshRotationRate_Seeded extends UE.ParticleModuleMeshRotationRate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMeshRotationRate_Seeded;
        static Load(InName: string): ParticleModuleMeshRotationRate_Seeded;
    
        __tid_ParticleModuleMeshRotationRate_Seeded_0__: boolean;
    }
    
    class ParticleModuleMeshRotationRateMultiplyLife extends UE.ParticleModuleRotationRateBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LifeMultiplier: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMeshRotationRateMultiplyLife;
        static Load(InName: string): ParticleModuleMeshRotationRateMultiplyLife;
    
        __tid_ParticleModuleMeshRotationRateMultiplyLife_0__: boolean;
    }
    
    class ParticleModuleMeshRotationRateOverLife extends UE.ParticleModuleRotationRateBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RotRate: UE.RawDistributionVector;
        bScaleRotRate: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleMeshRotationRateOverLife;
        static Load(InName: string): ParticleModuleMeshRotationRateOverLife;
    
        __tid_ParticleModuleMeshRotationRateOverLife_0__: boolean;
    }
    
    class ParticleModuleOrientationBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleOrientationBase;
        static Load(InName: string): ParticleModuleOrientationBase;
    
        __tid_ParticleModuleOrientationBase_0__: boolean;
    }
    
    class ParticleModuleOrientationAxisLock extends UE.ParticleModuleOrientationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LockAxisFlags: UE.EParticleAxisLock;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleOrientationAxisLock;
        static Load(InName: string): ParticleModuleOrientationAxisLock;
    
        __tid_ParticleModuleOrientationAxisLock_0__: boolean;
    }
    
    class ParticleModuleParameterBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleParameterBase;
        static Load(InName: string): ParticleModuleParameterBase;
    
        __tid_ParticleModuleParameterBase_0__: boolean;
    }
    
    class ParticleModuleParameterDynamic extends UE.ParticleModuleParameterBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DynamicParams: TArray<UE.EmitterDynamicParameter>;
        UpdateFlags: number;
        bUsesVelocity: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleParameterDynamic;
        static Load(InName: string): ParticleModuleParameterDynamic;
    
        __tid_ParticleModuleParameterDynamic_0__: boolean;
    }
    
    class ParticleModuleParameterDynamic_Seeded extends UE.ParticleModuleParameterDynamic {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleParameterDynamic_Seeded;
        static Load(InName: string): ParticleModuleParameterDynamic_Seeded;
    
        __tid_ParticleModuleParameterDynamic_Seeded_0__: boolean;
    }
    
    class ParticleModulePivotOffset extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PivotOffset: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModulePivotOffset;
        static Load(InName: string): ParticleModulePivotOffset;
    
        __tid_ParticleModulePivotOffset_0__: boolean;
    }
    
    class ParticleModuleRotation extends UE.ParticleModuleRotationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartRotation: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotation;
        static Load(InName: string): ParticleModuleRotation;
    
        __tid_ParticleModuleRotation_0__: boolean;
    }
    
    class ParticleModuleRotation_Seeded extends UE.ParticleModuleRotation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotation_Seeded;
        static Load(InName: string): ParticleModuleRotation_Seeded;
    
        __tid_ParticleModuleRotation_Seeded_0__: boolean;
    }
    
    class ParticleModuleRotationOverLifetime extends UE.ParticleModuleRotationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RotationOverLife: UE.RawDistributionFloat;
        Scale: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotationOverLifetime;
        static Load(InName: string): ParticleModuleRotationOverLifetime;
    
        __tid_ParticleModuleRotationOverLifetime_0__: boolean;
    }
    
    class ParticleModuleRotationRate extends UE.ParticleModuleRotationRateBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartRotationRate: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotationRate;
        static Load(InName: string): ParticleModuleRotationRate;
    
        __tid_ParticleModuleRotationRate_0__: boolean;
    }
    
    class ParticleModuleRotationRate_Seeded extends UE.ParticleModuleRotationRate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotationRate_Seeded;
        static Load(InName: string): ParticleModuleRotationRate_Seeded;
    
        __tid_ParticleModuleRotationRate_Seeded_0__: boolean;
    }
    
    class ParticleModuleRotationRateMultiplyLife extends UE.ParticleModuleRotationRateBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LifeMultiplier: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleRotationRateMultiplyLife;
        static Load(InName: string): ParticleModuleRotationRateMultiplyLife;
    
        __tid_ParticleModuleRotationRateMultiplyLife_0__: boolean;
    }
    
    class ParticleModuleSizeBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSizeBase;
        static Load(InName: string): ParticleModuleSizeBase;
    
        __tid_ParticleModuleSizeBase_0__: boolean;
    }
    
    class ParticleModuleSize extends UE.ParticleModuleSizeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartSize: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSize;
        static Load(InName: string): ParticleModuleSize;
    
        __tid_ParticleModuleSize_0__: boolean;
    }
    
    class ParticleModuleSize_Seeded extends UE.ParticleModuleSize {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSize_Seeded;
        static Load(InName: string): ParticleModuleSize_Seeded;
    
        __tid_ParticleModuleSize_Seeded_0__: boolean;
    }
    
    class ParticleModuleSizeMultiplyLife extends UE.ParticleModuleSizeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LifeMultiplier: UE.RawDistributionVector;
        MultiplyX: boolean;
        MultiplyY: boolean;
        MultiplyZ: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSizeMultiplyLife;
        static Load(InName: string): ParticleModuleSizeMultiplyLife;
    
        __tid_ParticleModuleSizeMultiplyLife_0__: boolean;
    }
    
    class ParticleModuleSizeScale extends UE.ParticleModuleSizeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SizeScale: UE.RawDistributionVector;
        EnableX: boolean;
        EnableY: boolean;
        EnableZ: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSizeScale;
        static Load(InName: string): ParticleModuleSizeScale;
    
        __tid_ParticleModuleSizeScale_0__: boolean;
    }
    
    class ParticleModuleSizeScaleBySpeed extends UE.ParticleModuleSizeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpeedScale: UE.Vector2D;
        MaxScale: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSizeScaleBySpeed;
        static Load(InName: string): ParticleModuleSizeScaleBySpeed;
    
        __tid_ParticleModuleSizeScaleBySpeed_0__: boolean;
    }
    
    class ParticleModuleSourceMovement extends UE.ParticleModuleLocationBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceMovementScale: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSourceMovement;
        static Load(InName: string): ParticleModuleSourceMovement;
    
        __tid_ParticleModuleSourceMovement_0__: boolean;
    }
    
    class ParticleModuleSubUVBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSubUVBase;
        static Load(InName: string): ParticleModuleSubUVBase;
    
        __tid_ParticleModuleSubUVBase_0__: boolean;
    }
    
    class SubUVAnimation extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SubUVTexture: UE.Texture2D;
        SubImages_Horizontal: number;
        SubImages_Vertical: number;
        BoundingMode: UE.ESubUVBoundingVertexCount;
        OpacitySourceMode: UE.EOpacitySourceMode;
        AlphaThreshold: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubUVAnimation;
        static Load(InName: string): SubUVAnimation;
    
        __tid_SubUVAnimation_0__: boolean;
    }
    
    class ParticleModuleSubUV extends UE.ParticleModuleSubUVBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Animation: UE.SubUVAnimation;
        SubImageIndex: UE.RawDistributionFloat;
        bUseRealTime: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSubUV;
        static Load(InName: string): ParticleModuleSubUV;
    
        __tid_ParticleModuleSubUV_0__: boolean;
    }
    
    class ParticleModuleSubUVMovie extends UE.ParticleModuleSubUV {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseEmitterTime: boolean;
        FrameRate: UE.RawDistributionFloat;
        StartingFrame: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleSubUVMovie;
        static Load(InName: string): ParticleModuleSubUVMovie;
    
        __tid_ParticleModuleSubUVMovie_0__: boolean;
    }
    
    class ParticleModuleTrailBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTrailBase;
        static Load(InName: string): ParticleModuleTrailBase;
    
        __tid_ParticleModuleTrailBase_0__: boolean;
    }
    
    class ParticleModuleTrailSource extends UE.ParticleModuleTrailBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceMethod: UE.ETrail2SourceMethod;
        SourceName: string;
        SourceStrength: UE.RawDistributionFloat;
        bLockSourceStength: boolean;
        SourceOffsetCount: number;
        SourceOffsetDefaults: TArray<UE.Vector>;
        SelectionMethod: UE.EParticleSourceSelectionMethod;
        bInheritRotation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTrailSource;
        static Load(InName: string): ParticleModuleTrailSource;
    
        __tid_ParticleModuleTrailSource_0__: boolean;
    }
    
    class ParticleModuleTypeDataAnimTrail extends UE.ParticleModuleTypeDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDeadTrailsOnDeactivate: boolean;
        bEnablePreviousTangentRecalculation: boolean;
        bTangentRecalculationEveryFrame: boolean;
        TilingDistance: number;
        DistanceTessellationStepSize: number;
        TangentTessellationStepSize: number;
        WidthTessellationStepSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTypeDataAnimTrail;
        static Load(InName: string): ParticleModuleTypeDataAnimTrail;
    
        __tid_ParticleModuleTypeDataAnimTrail_0__: boolean;
    }
    
    class ParticleModuleTypeDataBeam2 extends UE.ParticleModuleTypeDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BeamMethod: UE.EBeam2Method;
        TextureTile: number;
        TextureTileDistance: number;
        Sheets: number;
        MaxBeamCount: number;
        Speed: number;
        InterpolationPoints: number;
        bAlwaysOn: boolean;
        UpVectorStepSize: number;
        BranchParentName: string;
        Distance: UE.RawDistributionFloat;
        TaperMethod: UE.EBeamTaperMethod;
        TaperFactor: UE.RawDistributionFloat;
        TaperScale: UE.RawDistributionFloat;
        RenderGeometry: boolean;
        RenderDirectLine: boolean;
        RenderLines: boolean;
        RenderTessellation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTypeDataBeam2;
        static Load(InName: string): ParticleModuleTypeDataBeam2;
    
        __tid_ParticleModuleTypeDataBeam2_0__: boolean;
    }
    
    class ParticleModuleTypeDataGpu extends UE.ParticleModuleTypeDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EmitterInfo: UE.GPUSpriteEmitterInfo;
        ResourceData: UE.GPUSpriteResourceData;
        CameraMotionBlurAmount: number;
        bClearExistingParticlesOnInit: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTypeDataGpu;
        static Load(InName: string): ParticleModuleTypeDataGpu;
    
        __tid_ParticleModuleTypeDataGpu_0__: boolean;
    }
    
    class ParticleModuleTypeDataMesh extends UE.ParticleModuleTypeDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Mesh: UE.StaticMesh;
        LODSizeScale: number;
        bUseStaticMeshLODs: boolean;
        CastShadows: boolean;
        DoCollisions: boolean;
        MeshAlignment: UE.EMeshScreenAlignment;
        bOverrideMaterial: boolean;
        bOverrideDefaultMotionBlurSettings: boolean;
        bEnableMotionBlur: boolean;
        RollPitchYawRange: UE.RawDistributionVector;
        AxisLockOption: UE.EParticleAxisLock;
        bCameraFacing: boolean;
        CameraFacingUpAxisOption: UE.EMeshCameraFacingUpAxis;
        CameraFacingOption: UE.EMeshCameraFacingOptions;
        bApplyParticleRotationAsSpin: boolean;
        bFaceCameraDirectionRatherThanPosition: boolean;
        bCollisionsConsiderPartilceSize: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTypeDataMesh;
        static Load(InName: string): ParticleModuleTypeDataMesh;
    
        __tid_ParticleModuleTypeDataMesh_0__: boolean;
    }
    
    class ParticleModuleTypeDataRibbon extends UE.ParticleModuleTypeDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaxTessellationBetweenParticles: number;
        SheetsPerTrail: number;
        MaxTrailCount: number;
        MaxParticleInTrailCount: number;
        bDeadTrailsOnDeactivate: boolean;
        bDeadTrailsOnSourceLoss: boolean;
        bClipSourceSegement: boolean;
        bEnablePreviousTangentRecalculation: boolean;
        bTangentRecalculationEveryFrame: boolean;
        bSpawnInitialParticle: boolean;
        RenderAxis: UE.ETrailsRenderAxisOption;
        TangentSpawningScalar: number;
        bRenderGeometry: boolean;
        bRenderSpawnPoints: boolean;
        bRenderTangents: boolean;
        bRenderTessellation: boolean;
        TilingDistance: number;
        DistanceTessellationStepSize: number;
        bEnableTangentDiffInterpScale: boolean;
        TangentTessellationScalar: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleTypeDataRibbon;
        static Load(InName: string): ParticleModuleTypeDataRibbon;
    
        __tid_ParticleModuleTypeDataRibbon_0__: boolean;
    }
    
    class ParticleModuleVectorFieldBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVectorFieldBase;
        static Load(InName: string): ParticleModuleVectorFieldBase;
    
        __tid_ParticleModuleVectorFieldBase_0__: boolean;
    }
    
    class ParticleModuleVectorFieldGlobal extends UE.ParticleModuleVectorFieldBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bOverrideGlobalVectorFieldTightness: boolean;
        GlobalVectorFieldScale: number;
        GlobalVectorFieldTightness: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVectorFieldGlobal;
        static Load(InName: string): ParticleModuleVectorFieldGlobal;
    
        __tid_ParticleModuleVectorFieldGlobal_0__: boolean;
    }
    
    class ParticleModuleVectorFieldLocal extends UE.ParticleModuleVectorFieldBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VectorField: UE.VectorField;
        RelativeTranslation: UE.Vector;
        RelativeRotation: UE.Rotator;
        RelativeScale3D: UE.Vector;
        Intensity: number;
        Tightness: number;
        bIgnoreComponentTransform: boolean;
        bTileX: boolean;
        bTileY: boolean;
        bTileZ: boolean;
        bUseFixDT: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVectorFieldLocal;
        static Load(InName: string): ParticleModuleVectorFieldLocal;
    
        __tid_ParticleModuleVectorFieldLocal_0__: boolean;
    }
    
    class ParticleModuleVectorFieldRotation extends UE.ParticleModuleVectorFieldBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MinInitialRotation: UE.Vector;
        MaxInitialRotation: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVectorFieldRotation;
        static Load(InName: string): ParticleModuleVectorFieldRotation;
    
        __tid_ParticleModuleVectorFieldRotation_0__: boolean;
    }
    
    class ParticleModuleVectorFieldRotationRate extends UE.ParticleModuleVectorFieldBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RotationRate: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVectorFieldRotationRate;
        static Load(InName: string): ParticleModuleVectorFieldRotationRate;
    
        __tid_ParticleModuleVectorFieldRotationRate_0__: boolean;
    }
    
    class ParticleModuleVectorFieldScale extends UE.ParticleModuleVectorFieldBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VectorFieldScale: UE.DistributionFloat;
        VectorFieldScaleRaw: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVectorFieldScale;
        static Load(InName: string): ParticleModuleVectorFieldScale;
    
        __tid_ParticleModuleVectorFieldScale_0__: boolean;
    }
    
    class ParticleModuleVectorFieldScaleOverLife extends UE.ParticleModuleVectorFieldBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VectorFieldScaleOverLife: UE.DistributionFloat;
        VectorFieldScaleOverLifeRaw: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVectorFieldScaleOverLife;
        static Load(InName: string): ParticleModuleVectorFieldScaleOverLife;
    
        __tid_ParticleModuleVectorFieldScaleOverLife_0__: boolean;
    }
    
    class ParticleModuleVelocityBase extends UE.ParticleModule {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bInWorldSpace: boolean;
        bApplyOwnerScale: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVelocityBase;
        static Load(InName: string): ParticleModuleVelocityBase;
    
        __tid_ParticleModuleVelocityBase_0__: boolean;
    }
    
    class ParticleModuleVelocity extends UE.ParticleModuleVelocityBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartVelocity: UE.RawDistributionVector;
        StartVelocityRadial: UE.RawDistributionFloat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVelocity;
        static Load(InName: string): ParticleModuleVelocity;
    
        __tid_ParticleModuleVelocity_0__: boolean;
    }
    
    class ParticleModuleVelocity_Seeded extends UE.ParticleModuleVelocity {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeedInfo: UE.ParticleRandomSeedInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVelocity_Seeded;
        static Load(InName: string): ParticleModuleVelocity_Seeded;
    
        __tid_ParticleModuleVelocity_Seeded_0__: boolean;
    }
    
    class ParticleModuleVelocityCone extends UE.ParticleModuleVelocityBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Angle: UE.RawDistributionFloat;
        Velocity: UE.RawDistributionFloat;
        Direction: UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVelocityCone;
        static Load(InName: string): ParticleModuleVelocityCone;
    
        __tid_ParticleModuleVelocityCone_0__: boolean;
    }
    
    class ParticleModuleVelocityInheritParent extends UE.ParticleModuleVelocityBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Scale: UE.RawDistributionVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVelocityInheritParent;
        static Load(InName: string): ParticleModuleVelocityInheritParent;
    
        __tid_ParticleModuleVelocityInheritParent_0__: boolean;
    }
    
    class ParticleModuleVelocityOverLifetime extends UE.ParticleModuleVelocityBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VelOverLife: UE.RawDistributionVector;
        Absolute: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleModuleVelocityOverLifetime;
        static Load(InName: string): ParticleModuleVelocityOverLifetime;
    
        __tid_ParticleModuleVelocityOverLifetime_0__: boolean;
    }
    
    enum ParticleReplayState { PRS_Disabled, PRS_Capturing, PRS_Replaying, PRS_MAX, __typeKeyDoNoAccess}
    class ParticleSpriteEmitter extends UE.ParticleEmitter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleSpriteEmitter;
        static Load(InName: string): ParticleSpriteEmitter;
    
        __tid_ParticleSpriteEmitter_0__: boolean;
    }
    
    class ParticleSystemAuditCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HighSpawnRateOrBurstThreshold: number;
        FarLODDistanceTheshold: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleSystemAuditCommandlet;
        static Load(InName: string): ParticleSystemAuditCommandlet;
    
        __tid_ParticleSystemAuditCommandlet_0__: boolean;
    }
    
    class ParticleSystemFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleSystemFactoryNew;
        static Load(InName: string): ParticleSystemFactoryNew;
    
        __tid_ParticleSystemFactoryNew_0__: boolean;
    }
    
    class ParticleSystemReplayFrame {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleSystemReplayFrame_0__: boolean;
    }
    
    class ParticleSystemThumbnailRenderer extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NoImage: UE.Texture2D;
        OutOfDate: UE.Texture2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ParticleSystemThumbnailRenderer;
        static Load(InName: string): ParticleSystemThumbnailRenderer;
    
        __tid_ParticleSystemThumbnailRenderer_0__: boolean;
    }
    
    class ParticleSystemWorldManagerTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ParticleSystemWorldManagerTickFunction_0__: boolean;
    }
    
    class PlayerReservation {
        constructor();
        constructor(UniqueId: UE.UniqueNetIdRepl, ValidationStr: string, Platform: string, bAllowCrossplay: boolean, ElapsedTime: number);
        UniqueId: UE.UniqueNetIdRepl;
        ValidationStr: string;
        Platform: string;
        bAllowCrossplay: boolean;
        ElapsedTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PlayerReservation_0__: boolean;
    }
    
    class PartyReservation {
        constructor();
        constructor(TeamNum: number, PartyLeader: UE.UniqueNetIdRepl, PartyMembers: TArray<UE.PlayerReservation>, RemovedPartyMembers: TArray<UE.PlayerReservation>);
        TeamNum: number;
        PartyLeader: UE.UniqueNetIdRepl;
        PartyMembers: TArray<UE.PlayerReservation>;
        RemovedPartyMembers: TArray<UE.PlayerReservation>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PartyReservation_0__: boolean;
    }
    
    class PartyBeaconClient extends UE.OnlineBeaconClient {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DestSessionId: string;
        PendingReservation: UE.PartyReservation;
        RequestType: UE.EClientRequestType;
        bPendingReservationSent: boolean;
        bCancelReservation: boolean;
        ClientCancelReservationResponse(ReservationResponse: UE.EPartyReservationResult) : void;
        ClientReservationResponse(ReservationResponse: UE.EPartyReservationResult) : void;
        ClientSendReservationFull() : void;
        ClientSendReservationUpdates(NumRemainingReservations: number) : void;
        ServerCancelReservationRequest(PartyLeader: UE.UniqueNetIdRepl) : void;
        ServerRemoveMemberFromReservationRequest(SessionId: string, ReservationUpdate: UE.PartyReservation) : void;
        ServerReservationRequest(SessionId: string, Reservation: UE.PartyReservation) : void;
        ServerUpdateReservationRequest(SessionId: string, ReservationUpdate: UE.PartyReservation) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PartyBeaconClient;
        static Load(InName: string): PartyBeaconClient;
    
        __tid_PartyBeaconClient_0__: boolean;
    }
    
    class PartyBeaconState extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SessionName: string;
        NumConsumedReservations: number;
        MaxReservations: number;
        NumTeams: number;
        NumPlayersPerTeam: number;
        TeamAssignmentMethod: string;
        ReservedHostTeamNum: number;
        ForceTeamNum: number;
        bRestrictCrossConsole: boolean;
        bEnableRemovalRequests: boolean;
        Reservations: TArray<UE.PartyReservation>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PartyBeaconState;
        static Load(InName: string): PartyBeaconState;
    
        __tid_PartyBeaconState_0__: boolean;
    }
    
    class PartyBeaconHost extends UE.OnlineBeaconHostObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        State: UE.PartyBeaconState;
        bLogoutOnSessionTimeout: boolean;
        SessionTimeoutSecs: number;
        TravelSessionTimeoutSecs: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PartyBeaconHost;
        static Load(InName: string): PartyBeaconHost;
    
        __tid_PartyBeaconHost_0__: boolean;
    }
    
    class PathFollowingAgentInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PathFollowingAgentInterface;
        static Load(InName: string): PathFollowingAgentInterface;
    
        __tid_PathFollowingAgentInterface_0__: boolean;
    }
    
    class PathFollowingManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PathFollowingManager;
        static Load(InName: string): PathFollowingManager;
    
        __tid_PathFollowingManager_0__: boolean;
    }
    
    class PawnAction_BlueprintBase extends UE.PawnAction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActionFinished(ControlledPawn: $Nullable<UE.Pawn>, WithResult: UE.EPawnActionResult) : void;
        ActionPause(ControlledPawn: $Nullable<UE.Pawn>) : void;
        ActionResume(ControlledPawn: $Nullable<UE.Pawn>) : void;
        ActionStart(ControlledPawn: $Nullable<UE.Pawn>) : void;
        ActionTick(ControlledPawn: $Nullable<UE.Pawn>, DeltaSeconds: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnAction_BlueprintBase;
        static Load(InName: string): PawnAction_BlueprintBase;
    
        __tid_PawnAction_BlueprintBase_0__: boolean;
    }
    
    class PawnAction_Move extends UE.PawnAction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GoalActor: UE.Actor;
        GoalLocation: UE.Vector;
        AcceptableRadius: number;
        FilterClass: UE.Class;
        bAllowStrafe: boolean;
        bFinishOnOverlap: boolean;
        bUsePathfinding: boolean;
        bAllowPartialPath: boolean;
        bProjectGoalToNavigation: boolean;
        bUpdatePathToGoal: boolean;
        bAbortChildActionOnPathChange: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnAction_Move;
        static Load(InName: string): PawnAction_Move;
    
        __tid_PawnAction_Move_0__: boolean;
    }
    
    class PawnAction_Repeat extends UE.PawnAction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActionToRepeat: UE.PawnAction;
        RecentActionCopy: UE.PawnAction;
        ChildFailureHandlingMode: UE.EPawnActionFailHandling;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnAction_Repeat;
        static Load(InName: string): PawnAction_Repeat;
    
        __tid_PawnAction_Repeat_0__: boolean;
    }
    
    class PawnAction_Sequence extends UE.PawnAction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActionSequence: TArray<UE.PawnAction>;
        ChildFailureHandlingMode: UE.EPawnActionFailHandling;
        RecentActionCopy: UE.PawnAction;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnAction_Sequence;
        static Load(InName: string): PawnAction_Sequence;
    
        __tid_PawnAction_Sequence_0__: boolean;
    }
    
    class PawnAction_Wait extends UE.PawnAction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TimeToWait: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnAction_Wait;
        static Load(InName: string): PawnAction_Wait;
    
        __tid_PawnAction_Wait_0__: boolean;
    }
    
    class PawnNoiseEmitterComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAIPerceptionSystemCompatibilityMode: boolean;
        LastRemoteNoisePosition: UE.Vector;
        NoiseLifetime: number;
        LastRemoteNoiseVolume: number;
        LastRemoteNoiseTime: number;
        LastLocalNoiseVolume: number;
        LastLocalNoiseTime: number;
        MakeNoise(NoiseMaker: $Nullable<UE.Actor>, Loudness: number, NoiseLocation: UE.Vector) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnNoiseEmitterComponent;
        static Load(InName: string): PawnNoiseEmitterComponent;
    
        __tid_PawnNoiseEmitterComponent_0__: boolean;
    }
    
    class PawnSensingComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HearingThreshold: number;
        LOSHearingThreshold: number;
        SightRadius: number;
        SensingInterval: number;
        HearingMaxSoundAge: number;
        bEnableSensingUpdates: boolean;
        bOnlySensePlayers: boolean;
        bSeePawns: boolean;
        bHearNoises: boolean;
        OnSeePawn: $MulticastDelegate<(Pawn: $Nullable<UE.Pawn>) => void>;
        OnHearNoise: $MulticastDelegate<(Instigator: $Nullable<UE.Pawn>, Location: UE.Vector, Volume: number) => void>;
        PeripheralVisionAngle: number;
        PeripheralVisionCosine: number;
        GetPeripheralVisionAngle() : number;
        GetPeripheralVisionCosine() : number;
        HearNoiseDelegate__DelegateSignature(Instigator: $Nullable<UE.Pawn>, Location: UE.Vector, Volume: number) : void;
        SeePawnDelegate__DelegateSignature(Pawn: $Nullable<UE.Pawn>) : void;
        SetPeripheralVisionAngle(NewPeripheralVisionAngle: number) : void;
        SetSensingInterval(NewSensingInterval: number) : void;
        SetSensingUpdatesEnabled(bEnabled: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PawnSensingComponent;
        static Load(InName: string): PawnSensingComponent;
    
        __tid_PawnSensingComponent_0__: boolean;
    }
    
    class PEClassMetaData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddAutoCollapseCategory(InCategory: string) : void;
        AddAutoExpandCategory(InCategory: string) : void;
        AddClassGroup(InGroupName: string) : void;
        AddDontAutoCollapseCategory(InCategory: string) : void;
        AddHideCategory(InCategory: string) : void;
        AddHideFunction(InFunctionName: string) : void;
        AddShowCategory(InCategory: string) : void;
        AddShowFunction(InFunctionName: string) : void;
        AddShowSubCategory(InCategory: string) : void;
        AddSparseDataType(InType: string) : void;
        SetClassFlags(InFlags: number, bInPlaceable: boolean) : void;
        SetClassWithIn(InClassName: string) : void;
        SetConfig(InConfigName: string) : void;
        SetMetaData(InName: string, InValue: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PEClassMetaData;
        static Load(InName: string): PEClassMetaData;
    
        __tid_PEClassMetaData_0__: boolean;
    }
    
    class PEGraphPinType {
        constructor();
        constructor(PinCategory: string, PinSubCategoryObject: UE.Object, PinContainerType: number, bIsReference: boolean, bIn: boolean);
        PinCategory: string;
        PinSubCategoryObject: UE.Object;
        PinContainerType: number;
        bIsReference: boolean;
        bIn: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PEGraphPinType_0__: boolean;
    }
    
    class PEGraphTerminalType {
        constructor();
        constructor(PinCategory: string, PinSubCategoryObject: UE.Object);
        PinCategory: string;
        PinSubCategoryObject: UE.Object;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PEGraphTerminalType_0__: boolean;
    }
    
    class PEParamMetaData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetMetaData(InName: string, InValue: string) : void;
        SetParamFlags(InHighBits: number, InLowBits: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PEParamMetaData;
        static Load(InName: string): PEParamMetaData;
    
        __tid_PEParamMetaData_0__: boolean;
    }
    
    class PEPropertyMetaData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetMetaData(InName: string, InValue: string) : void;
        SetPropertyFlags(InHighBits: number, InLowBits: number) : void;
        SetRepCallbackName(InName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PEPropertyMetaData;
        static Load(InName: string): PEPropertyMetaData;
    
        __tid_PEPropertyMetaData_0__: boolean;
    }
    
    class PEFunctionMetaData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetCppImplName(InName: string) : void;
        SetCppValidationImplName(InName: string) : void;
        SetEndpointName(InEndpointName: string) : void;
        SetForceBlueprintImpure(bInForceBlueprintImpure: boolean) : void;
        SetFunctionExportFlags(InFlags: number) : void;
        SetFunctionFlags(InHighBits: number, InLowBits: number) : void;
        SetIsSealedEvent(bInSealedEvent: boolean) : void;
        SetMetaData(InName: string, InValue: string) : void;
        SetRPCId(InRPCId: number) : void;
        SetRPCResponseId(InRPCResponseId: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PEFunctionMetaData;
        static Load(InName: string): PEFunctionMetaData;
    
        __tid_PEFunctionMetaData_0__: boolean;
    }
    
    class PEBlueprintAsset extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GeneratedClass: UE.Class;
        Blueprint: UE.Blueprint;
        Package: UE.Package;
        NeedSave: boolean;
        HasConstructor: boolean;
        AddFunction(InName: string, IsVoid: boolean, InGraphPinType: UE.PEGraphPinType, InPinValueType: UE.PEGraphTerminalType, InSetFlags: number, InClearFlags: number) : void;
        AddFunctionWithMetaData(InName: string, IsVoid: boolean, InGraphPinType: UE.PEGraphPinType, InPinValueType: UE.PEGraphTerminalType, InSetFlags: number, InClearFlags: number, InMetaData: $Nullable<UE.PEFunctionMetaData>) : void;
        AddMemberVariable(NewVarName: string, InGraphPinType: UE.PEGraphPinType, InPinValueType: UE.PEGraphTerminalType, InLFlags: number, InHFlags: number, InLifetimeCondition: number) : void;
        AddMemberVariableWithMetaData(InNewVarName: string, InGraphPinType: UE.PEGraphPinType, InPinValueType: UE.PEGraphTerminalType, InLFlags: number, InHFLags: number, InLifetimeCondition: number, InMetaData: $Nullable<UE.PEPropertyMetaData>) : void;
        AddParameter(InParameterName: string, InGraphPinType: UE.PEGraphPinType, InPinValueType: UE.PEGraphTerminalType) : void;
        AddParameterWithMetaData(InParameterName: string, InGraphPinType: UE.PEGraphPinType, InPinValueType: UE.PEGraphTerminalType, InMetaData: $Nullable<UE.PEParamMetaData>) : void;
        ClearParameter() : void;
        LoadOrCreate(InName: string, InPath: string, ParentClass: $Nullable<UE.Class>, InSetFlags: number, InClearFlags: number) : boolean;
        LoadOrCreateWithMetaData(InName: string, InPath: string, InParentClass: $Nullable<UE.Class>, InSetFlags: number, InClearFlags: number, InMetaData: $Nullable<UE.PEClassMetaData>) : boolean;
        RemoveNotExistedFunction() : void;
        RemoveNotExistedMemberVariable() : void;
        Save() : void;
        static Existed(InName: string, InPath: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PEBlueprintAsset;
        static Load(InName: string): PEBlueprintAsset;
    
        __tid_PEBlueprintAsset_0__: boolean;
    }
    
    class PEDirectoryWatcher extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnChanged: $MulticastDelegate<(Added: TArray<string>, Modified: TArray<string>, Removed: TArray<string>) => void>;
        UnWatch() : void;
        Watch(InDirectory: string) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PEDirectoryWatcher;
        static Load(InName: string): PEDirectoryWatcher;
    
        __tid_PEDirectoryWatcher_0__: boolean;
    }
    
    class PerBoneBlendWeights {
        constructor();
        constructor(BoneBlendWeights: TArray<UE.PerBoneBlendWeight>);
        BoneBlendWeights: TArray<UE.PerBoneBlendWeight>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PerBoneBlendWeights_0__: boolean;
    }
    
    class PersonaOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoAlignFloorToMesh: boolean;
        bShowGrid: boolean;
        bHighlightOrigin: boolean;
        bMuteAudio: boolean;
        bUseAudioAttenuation: boolean;
        ShowMeshStats: number;
        DefaultLocalAxesSelection: number;
        DefaultBoneDrawSelection: number;
        SectionTimingNodeColor: UE.LinearColor;
        NotifyTimingNodeColor: UE.LinearColor;
        BranchingPointTimingNodeColor: UE.LinearColor;
        bUseInlineSocketEditor: boolean;
        bFlattenSkeletonHierarchyWhenFiltering: boolean;
        bHideParentsWhenFiltering: boolean;
        bAllowPreviewMeshCollectionsToSelectFromDifferentSkeletons: boolean;
        bAllowPreviewMeshCollectionsToUseCustomAnimBP: boolean;
        bAllowMeshSectionSelection: boolean;
        NumFolderFiltersInAssetBrowser: number;
        AssetEditorOptions: TArray<UE.AssetEditorOptions>;
        CurveEditorSnapInterval: number;
        TimelineScrubSnapValue: number;
        TimelineDisplayFormat: UE.EFrameNumberDisplayFormats;
        bTimelineDisplayPercentage: boolean;
        bTimelineDisplayFormatSecondary: boolean;
        bTimelineDisplayCurveKeys: boolean;
        TimelineEnabledSnaps: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PersonaOptions;
        static Load(InName: string): PersonaOptions;
    
        __tid_PersonaOptions_0__: boolean;
    }
    
    class PersonaPreviewSceneController extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PersonaPreviewSceneController;
        static Load(InName: string): PersonaPreviewSceneController;
    
        __tid_PersonaPreviewSceneController_0__: boolean;
    }
    
    class PersonaPreviewSceneAnimationController extends UE.PersonaPreviewSceneController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Animation: TSoftObjectPtr<UE.AnimationAsset>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PersonaPreviewSceneAnimationController;
        static Load(InName: string): PersonaPreviewSceneAnimationController;
    
        __tid_PersonaPreviewSceneAnimationController_0__: boolean;
    }
    
    class PersonaPreviewSceneDefaultController extends UE.PersonaPreviewSceneController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PersonaPreviewSceneDefaultController;
        static Load(InName: string): PersonaPreviewSceneDefaultController;
    
        __tid_PersonaPreviewSceneDefaultController_0__: boolean;
    }
    
    class PreviewMeshCollectionEntry {
        constructor();
        constructor(SkeletalMesh: TSoftObjectPtr<UE.SkeletalMesh>);
        SkeletalMesh: TSoftObjectPtr<UE.SkeletalMesh>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PreviewMeshCollectionEntry_0__: boolean;
    }
    
    class PreviewMeshCollection extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Skeleton: UE.Skeleton;
        SkeletalMeshes: TArray<UE.PreviewMeshCollectionEntry>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PreviewMeshCollection;
        static Load(InName: string): PreviewMeshCollection;
    
        __tid_PreviewMeshCollection_0__: boolean;
    }
    
    class PersonaPreviewSceneDescription extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PreviewController: UE.Class;
        PreviewControllerInstance: UE.PersonaPreviewSceneController;
        PreviewControllerInstances: TArray<UE.PersonaPreviewSceneController>;
        PreviewMesh: TSoftObjectPtr<UE.SkeletalMesh>;
        PreviewAnimationBlueprint: TSoftObjectPtr<UE.AnimBlueprint>;
        ApplicationMethod: UE.EPreviewAnimationBlueprintApplicationMethod;
        LinkedAnimGraphTag: string;
        AdditionalMeshes: TSoftObjectPtr<UE.DataAsset>;
        DefaultAdditionalMeshes: UE.PreviewMeshCollection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PersonaPreviewSceneDescription;
        static Load(InName: string): PersonaPreviewSceneDescription;
    
        __tid_PersonaPreviewSceneDescription_0__: boolean;
    }
    
    class PersonaPreviewSceneRefPoseController extends UE.PersonaPreviewSceneController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bResetBoneTransforms: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PersonaPreviewSceneRefPoseController;
        static Load(InName: string): PersonaPreviewSceneRefPoseController;
    
        __tid_PersonaPreviewSceneRefPoseController_0__: boolean;
    }
    
    class PhasedAutomationActorBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnFunctionalTestingBegin() : void;
        OnFunctionalTestingComplete() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhasedAutomationActorBase;
        static Load(InName: string): PhasedAutomationActorBase;
    
        __tid_PhasedAutomationActorBase_0__: boolean;
    }
    
    class PhysAssetCreateParams {
        constructor();
        constructor(MinBoneSize: number, MinWeldSize: number, GeomType: UE.EPhysAssetFitGeomType, VertWeight: UE.EPhysAssetFitVertWeight, bAutoOrientToBone: boolean, bCreateConstraints: boolean, bWalkPastSmall: boolean, bBodyForAll: boolean, bDisableCollisionsByDefault: boolean, AngularConstraintMode: UE.EAngularConstraintMotion, HullCount: number, MaxHullVerts: number);
        MinBoneSize: number;
        MinWeldSize: number;
        GeomType: UE.EPhysAssetFitGeomType;
        VertWeight: UE.EPhysAssetFitVertWeight;
        bAutoOrientToBone: boolean;
        bCreateConstraints: boolean;
        bWalkPastSmall: boolean;
        bBodyForAll: boolean;
        bDisableCollisionsByDefault: boolean;
        AngularConstraintMode: UE.EAngularConstraintMotion;
        HullCount: number;
        MaxHullVerts: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PhysAssetCreateParams_0__: boolean;
    }
    
    class PhysicalAnimationComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StrengthMultiplyer: number;
        SkeletalMeshComponent: UE.SkeletalMeshComponent;
        ApplyPhysicalAnimationProfileBelow(BodyName: string, ProfileName: string, bIncludeSelf?: boolean /* = true */, bClearNotFound?: boolean /* = false */) : void;
        ApplyPhysicalAnimationSettings(BodyName: string, PhysicalAnimationData: UE.PhysicalAnimationData) : void;
        ApplyPhysicalAnimationSettingsBelow(BodyName: string, PhysicalAnimationData: UE.PhysicalAnimationData, bIncludeSelf?: boolean /* = true */) : void;
        GetBodyTargetTransform(BodyName: string) : UE.Transform;
        SetSkeletalMeshComponent(InSkeletalMeshComponent: $Nullable<UE.SkeletalMeshComponent>) : void;
        SetStrengthMultiplyer(InStrengthMultiplyer: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicalAnimationComponent;
        static Load(InName: string): PhysicalAnimationComponent;
    
        __tid_PhysicalAnimationComponent_0__: boolean;
    }
    
    class PhysicalMaterialFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicalMaterialClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicalMaterialFactoryNew;
        static Load(InName: string): PhysicalMaterialFactoryNew;
    
        __tid_PhysicalMaterialFactoryNew_0__: boolean;
    }
    
    class PhysicalMaterialMaskFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicalMaterialMaskClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicalMaterialMaskFactory;
        static Load(InName: string): PhysicalMaterialMaskFactory;
    
        __tid_PhysicalMaterialMaskFactory_0__: boolean;
    }
    
    class PhysicalMaterialMaskThumbnailRenderer extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicalMaterialMaskThumbnailRenderer;
        static Load(InName: string): PhysicalMaterialMaskThumbnailRenderer;
    
        __tid_PhysicalMaterialMaskThumbnailRenderer_0__: boolean;
    }
    
    class PhysicalSurfaceName {
        constructor();
        constructor(Type: UE.EPhysicalSurface, Name: string);
        Type: UE.EPhysicalSurface;
        Name: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PhysicalSurfaceName_0__: boolean;
    }
    
    class PhysicsAssetEditorOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicsBlend: number;
        bUpdateJointsFromAnimation: boolean;
        PhysicsUpdateMode: UE.EPhysicsTransformUpdateMode;
        PokePauseTime: number;
        PokeBlendTime: number;
        GravScale: number;
        GravityOverrideZ: number;
        bUseGravityOverride: boolean;
        MaxFPS: number;
        HandleLinearDamping: number;
        HandleLinearStiffness: number;
        HandleAngularDamping: number;
        HandleAngularStiffness: number;
        InterpolationSpeed: number;
        PokeStrength: number;
        bShowConstraintsAsPoints: boolean;
        bRenderOnlySelectedConstraints: boolean;
        ConstraintDrawSize: number;
        MeshViewMode: UE.EPhysicsAssetEditorRenderMode;
        CollisionViewMode: UE.EPhysicsAssetEditorRenderMode;
        ConstraintViewMode: UE.EPhysicsAssetEditorConstraintViewMode;
        SimulationMeshViewMode: UE.EPhysicsAssetEditorRenderMode;
        SimulationCollisionViewMode: UE.EPhysicsAssetEditorRenderMode;
        SimulationConstraintViewMode: UE.EPhysicsAssetEditorConstraintViewMode;
        CollisionOpacity: number;
        bSolidRenderingForSelectedOnly: boolean;
        bHideSimulatedBodies: boolean;
        bHideKinematicBodies: boolean;
        bResetClothWhenSimulating: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsAssetEditorOptions;
        static Load(InName: string): PhysicsAssetEditorOptions;
    
        __tid_PhysicsAssetEditorOptions_0__: boolean;
    }
    
    class PhysicsAssetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsAssetFactory;
        static Load(InName: string): PhysicsAssetFactory;
    
        __tid_PhysicsAssetFactory_0__: boolean;
    }
    
    class PhysicsAssetGenerationSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreateParams: UE.PhysAssetCreateParams;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsAssetGenerationSettings;
        static Load(InName: string): PhysicsAssetGenerationSettings;
    
        __tid_PhysicsAssetGenerationSettings_0__: boolean;
    }
    
    class PhysicsAssetThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsAssetThumbnailRenderer;
        static Load(InName: string): PhysicsAssetThumbnailRenderer;
    
        __tid_PhysicsAssetThumbnailRenderer_0__: boolean;
    }
    
    class RigidBodyBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RigidBodyBase;
        static Load(InName: string): RigidBodyBase;
    
        __tid_RigidBodyBase_0__: boolean;
    }
    
    class PhysicsConstraintComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstraintActor1: UE.Actor;
        ComponentName1: UE.ConstrainComponentPropName;
        ConstraintActor2: UE.Actor;
        ComponentName2: UE.ConstrainComponentPropName;
        ConstraintSetup: UE.PhysicsConstraintTemplate;
        OnConstraintBroken: $MulticastDelegate<(ConstraintIndex: number) => void>;
        ConstraintInstance: UE.ConstraintInstance;
        BreakConstraint() : void;
        GetConstraintForce(OutLinearForce: $Ref<UE.Vector>, OutAngularForce: $Ref<UE.Vector>) : void;
        GetCurrentSwing1() : number;
        GetCurrentSwing2() : number;
        GetCurrentTwist() : number;
        IsBroken() : boolean;
        SetAngularBreakable(bAngularBreakable: boolean, AngularBreakThreshold: number) : void;
        SetAngularDriveMode(DriveMode: UE.EAngularDriveMode) : void;
        SetAngularDriveParams(PositionStrength: number, VelocityStrength: number, InForceLimit: number) : void;
        SetAngularOrientationDrive(bEnableSwingDrive: boolean, bEnableTwistDrive: boolean) : void;
        SetAngularOrientationTarget(InPosTarget: UE.Rotator) : void;
        SetAngularSwing1Limit(MotionType: UE.EAngularConstraintMotion, Swing1LimitAngle: number) : void;
        SetAngularSwing2Limit(MotionType: UE.EAngularConstraintMotion, Swing2LimitAngle: number) : void;
        SetAngularTwistLimit(ConstraintType: UE.EAngularConstraintMotion, TwistLimitAngle: number) : void;
        SetAngularVelocityDrive(bEnableSwingDrive: boolean, bEnableTwistDrive: boolean) : void;
        SetAngularVelocityDriveSLERP(bEnableSLERP: boolean) : void;
        SetAngularVelocityDriveTwistAndSwing(bEnableTwistDrive: boolean, bEnableSwingDrive: boolean) : void;
        SetAngularVelocityTarget(InVelTarget: UE.Vector) : void;
        SetConstrainedComponents(Component1: $Nullable<UE.PrimitiveComponent>, BoneName1: string, Component2: $Nullable<UE.PrimitiveComponent>, BoneName2: string) : void;
        SetConstraintReferenceFrame(Frame: UE.EConstraintFrame, RefFrame: UE.Transform) : void;
        SetConstraintReferenceOrientation(Frame: UE.EConstraintFrame, PriAxis: UE.Vector, SecAxis: UE.Vector) : void;
        SetConstraintReferencePosition(Frame: UE.EConstraintFrame, RefPosition: UE.Vector) : void;
        SetDisableCollision(bDisableCollision: boolean) : void;
        SetLinearBreakable(bLinearBreakable: boolean, LinearBreakThreshold: number) : void;
        SetLinearDriveParams(PositionStrength: number, VelocityStrength: number, InForceLimit: number) : void;
        SetLinearPositionDrive(bEnableDriveX: boolean, bEnableDriveY: boolean, bEnableDriveZ: boolean) : void;
        SetLinearPositionTarget(InPosTarget: UE.Vector) : void;
        SetLinearVelocityDrive(bEnableDriveX: boolean, bEnableDriveY: boolean, bEnableDriveZ: boolean) : void;
        SetLinearVelocityTarget(InVelTarget: UE.Vector) : void;
        SetLinearXLimit(ConstraintType: UE.ELinearConstraintMotion, LimitSize: number) : void;
        SetLinearYLimit(ConstraintType: UE.ELinearConstraintMotion, LimitSize: number) : void;
        SetLinearZLimit(ConstraintType: UE.ELinearConstraintMotion, LimitSize: number) : void;
        SetOrientationDriveSLERP(bEnableSLERP: boolean) : void;
        SetOrientationDriveTwistAndSwing(bEnableTwistDrive: boolean, bEnableSwingDrive: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsConstraintComponent;
        static Load(InName: string): PhysicsConstraintComponent;
    
        __tid_PhysicsConstraintComponent_0__: boolean;
    }
    
    class PhysicsConstraintActor extends UE.RigidBodyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ConstraintComp: UE.PhysicsConstraintComponent;
        ConstraintActor1: UE.Actor;
        ConstraintActor2: UE.Actor;
        bDisableCollision: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsConstraintActor;
        static Load(InName: string): PhysicsConstraintActor;
    
        __tid_PhysicsConstraintActor_0__: boolean;
    }
    
    class PhysicsHandleComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GrabbedComponent: UE.PrimitiveComponent;
        bSoftAngularConstraint: boolean;
        bSoftLinearConstraint: boolean;
        bInterpolateTarget: boolean;
        LinearDamping: number;
        LinearStiffness: number;
        AngularDamping: number;
        AngularStiffness: number;
        InterpolationSpeed: number;
        GetGrabbedComponent() : UE.PrimitiveComponent;
        GetTargetLocationAndRotation(TargetLocation: $Ref<UE.Vector>, TargetRotation: $Ref<UE.Rotator>) : void;
        GrabComponent(Component: $Nullable<UE.PrimitiveComponent>, InBoneName: string, GrabLocation: UE.Vector, bConstrainRotation: boolean) : void;
        GrabComponentAtLocation(Component: $Nullable<UE.PrimitiveComponent>, InBoneName: string, GrabLocation: UE.Vector) : void;
        GrabComponentAtLocationWithRotation(Component: $Nullable<UE.PrimitiveComponent>, InBoneName: string, Location: UE.Vector, Rotation: UE.Rotator) : void;
        ReleaseComponent() : void;
        SetAngularDamping(NewAngularDamping: number) : void;
        SetAngularStiffness(NewAngularStiffness: number) : void;
        SetInterpolationSpeed(NewInterpolationSpeed: number) : void;
        SetLinearDamping(NewLinearDamping: number) : void;
        SetLinearStiffness(NewLinearStiffness: number) : void;
        SetTargetLocation(NewLocation: UE.Vector) : void;
        SetTargetLocationAndRotation(NewLocation: UE.Vector, NewRotation: UE.Rotator) : void;
        SetTargetRotation(NewRotation: UE.Rotator) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsHandleComponent;
        static Load(InName: string): PhysicsHandleComponent;
    
        __tid_PhysicsHandleComponent_0__: boolean;
    }
    
    class PhysicsSettingsCore extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultGravityZ: number;
        DefaultTerminalVelocity: number;
        DefaultFluidFriction: number;
        SimulateScratchMemorySize: number;
        RagdollAggregateThreshold: number;
        TriangleMeshTriangleMinAreaThreshold: number;
        bEnableShapeSharing: boolean;
        bEnablePCM: boolean;
        bEnableStabilization: boolean;
        bWarnMissingLocks: boolean;
        bEnable2DPhysics: boolean;
        bDefaultHasComplexCollision: boolean;
        BounceThresholdVelocity: number;
        FrictionCombineMode: UE.EFrictionCombineMode;
        RestitutionCombineMode: UE.EFrictionCombineMode;
        MaxAngularVelocity: number;
        MaxDepenetrationVelocity: number;
        ContactOffsetMultiplier: number;
        MinContactOffset: number;
        MaxContactOffset: number;
        bSimulateSkeletalMeshOnDedicatedServer: boolean;
        DefaultShapeComplexity: UE.ECollisionTraceFlag;
        SolverOptions: UE.ChaosSolverConfiguration;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsSettingsCore;
        static Load(InName: string): PhysicsSettingsCore;
    
        __tid_PhysicsSettingsCore_0__: boolean;
    }
    
    class RigidBodyErrorCorrection {
        constructor();
        constructor(PingExtrapolation: number, PingLimit: number, ErrorPerLinearDifference: number, ErrorPerAngularDifference: number, MaxRestoredStateError: number, MaxLinearHardSnapDistance: number, PositionLerp: number, AngleLerp: number, LinearVelocityCoefficient: number, AngularVelocityCoefficient: number, ErrorAccumulationSeconds: number, ErrorAccumulationDistanceSq: number, ErrorAccumulationSimilarity: number);
        PingExtrapolation: number;
        PingLimit: number;
        ErrorPerLinearDifference: number;
        ErrorPerAngularDifference: number;
        MaxRestoredStateError: number;
        MaxLinearHardSnapDistance: number;
        PositionLerp: number;
        AngleLerp: number;
        LinearVelocityCoefficient: number;
        AngularVelocityCoefficient: number;
        ErrorAccumulationSeconds: number;
        ErrorAccumulationDistanceSq: number;
        ErrorAccumulationSimilarity: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RigidBodyErrorCorrection_0__: boolean;
    }
    
    class PhysicsSettings extends UE.PhysicsSettingsCore {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicErrorCorrection: UE.RigidBodyErrorCorrection;
        LockedAxis: UE.ESettingsLockedAxis;
        DefaultDegreesOfFreedom: UE.ESettingsDOF;
        bSuppressFaceRemapTable: boolean;
        bSupportUVFromHitResults: boolean;
        bDisableActiveActors: boolean;
        bDisableKinematicStaticPairs: boolean;
        bDisableKinematicKinematicPairs: boolean;
        bDisableCCD: boolean;
        bEnableEnhancedDeterminism: boolean;
        AnimPhysicsMinDeltaTime: number;
        bSimulateAnimPhysicsAfterReset: boolean;
        MaxPhysicsDeltaTime: number;
        bSubstepping: boolean;
        bSubsteppingAsync: boolean;
        MaxSubstepDeltaTime: number;
        MaxSubsteps: number;
        SyncSceneSmoothingFactor: number;
        InitialAverageFrameRate: number;
        PhysXTreeRebuildRate: number;
        PhysicalSurfaces: TArray<UE.PhysicalSurfaceName>;
        DefaultBroadphaseSettings: UE.BroadphaseSettings;
        MinDeltaVelocityForHitEvents: number;
        ChaosSettings: UE.ChaosPhysicsSettings;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsSettings;
        static Load(InName: string): PhysicsSettings;
    
        __tid_PhysicsSettings_0__: boolean;
    }
    
    class PhysicsSpringComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpringStiffness: number;
        SpringDamping: number;
        SpringLengthAtRest: number;
        SpringRadius: number;
        SpringChannel: UE.ECollisionChannel;
        bIgnoreSelf: boolean;
        SpringCompression: number;
        GetNormalizedCompressionScalar() : number;
        GetSpringCurrentEndPoint() : UE.Vector;
        GetSpringDirection() : UE.Vector;
        GetSpringRestingPoint() : UE.Vector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsSpringComponent;
        static Load(InName: string): PhysicsSpringComponent;
    
        __tid_PhysicsSpringComponent_0__: boolean;
    }
    
    class PhysicsThrusterComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ThrustStrength: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsThrusterComponent;
        static Load(InName: string): PhysicsThrusterComponent;
    
        __tid_PhysicsThrusterComponent_0__: boolean;
    }
    
    class PhysicsThruster extends UE.RigidBodyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ThrusterComponent: UE.PhysicsThrusterComponent;
        ArrowComponent: UE.ArrowComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PhysicsThruster;
        static Load(InName: string): PhysicsThruster;
    
        __tid_PhysicsThruster_0__: boolean;
    }
    
    class PIERHIOverrideState {
        constructor();
        constructor(MaxShadowDepthBufferSizeX: number, MaxShadowDepthBufferSizeY: number, MaxTextureDimensions: number, MaxCubeTextureDimensions: number, SupportsRenderTargetFormat_PF_G8: boolean, SupportsRenderTargetFormat_PF_FloatRGBA: boolean, SupportsMultipleRenderTargets: boolean);
        MaxShadowDepthBufferSizeX: number;
        MaxShadowDepthBufferSizeY: number;
        MaxTextureDimensions: number;
        MaxCubeTextureDimensions: number;
        SupportsRenderTargetFormat_PF_G8: boolean;
        SupportsRenderTargetFormat_PF_FloatRGBA: boolean;
        SupportsMultipleRenderTargets: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIERHIOverrideState_0__: boolean;
    }
    
    class PIEAndroidDeviceProperties {
        constructor();
        constructor(GPUFamily: string, GLVersion: string, VulkanVersion: string, AndroidVersion: string, DeviceMake: string, DeviceModel: string, DeviceBuildNumber: string, VulkanAvailable: boolean, UsingHoudini: boolean, Hardware: string, Chipset: string, GLES31RHIState: UE.PIERHIOverrideState);
        GPUFamily: string;
        GLVersion: string;
        VulkanVersion: string;
        AndroidVersion: string;
        DeviceMake: string;
        DeviceModel: string;
        DeviceBuildNumber: string;
        VulkanAvailable: boolean;
        UsingHoudini: boolean;
        Hardware: string;
        Chipset: string;
        GLES31RHIState: UE.PIERHIOverrideState;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIEAndroidDeviceProperties_0__: boolean;
    }
    
    class PIEPreviewDeviceBezelViewportRect {
        constructor();
        constructor(X: number, Y: number, Width: number, Height: number);
        X: number;
        Y: number;
        Width: number;
        Height: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIEPreviewDeviceBezelViewportRect_0__: boolean;
    }
    
    class PIEBezelProperties {
        constructor();
        constructor(DeviceBezelFile: string, BezelViewportRect: UE.PIEPreviewDeviceBezelViewportRect);
        DeviceBezelFile: string;
        BezelViewportRect: UE.PIEPreviewDeviceBezelViewportRect;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIEBezelProperties_0__: boolean;
    }
    
    class PIEIOSDeviceProperties {
        constructor();
        constructor(DeviceModel: string, NativeScaleFactor: number, MetalRHIState: UE.PIERHIOverrideState);
        DeviceModel: string;
        NativeScaleFactor: number;
        MetalRHIState: UE.PIERHIOverrideState;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIEIOSDeviceProperties_0__: boolean;
    }
    
    class PIELoginInfo {
        constructor();
        constructor(Type: string, Id: string, Token: string);
        Type: string;
        Id: string;
        Token: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIELoginInfo_0__: boolean;
    }
    
    class PIEPreviewDeviceSpecification extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PreviewDeviceType: UE.EPIEPreviewDeviceType;
        GPUFamily: string;
        GLVersion: string;
        VulkanVersion: string;
        AndroidVersion: string;
        DeviceMake: string;
        DeviceModel: string;
        DeviceBuildNumber: string;
        UsingHoudini: boolean;
        Hardware: string;
        Chipset: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PIEPreviewDeviceSpecification;
        static Load(InName: string): PIEPreviewDeviceSpecification;
    
        __tid_PIEPreviewDeviceSpecification_0__: boolean;
    }
    
    class PIESwitchDeviceProperties {
        constructor();
        constructor(Docked: boolean);
        Docked: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIESwitchDeviceProperties_0__: boolean;
    }
    
    class PIEPreviewDeviceSpecifications {
        constructor();
        constructor(DevicePlatform: UE.EPIEPreviewDeviceType, ResolutionX: number, ResolutionY: number, ResolutionYImmersiveMode: number, PPI: number, ScaleFactors: TArray<number>, BezelProperties: UE.PIEBezelProperties, AndroidProperties: UE.PIEAndroidDeviceProperties, IOSProperties: UE.PIEIOSDeviceProperties, SwitchProperties: UE.PIESwitchDeviceProperties);
        DevicePlatform: UE.EPIEPreviewDeviceType;
        ResolutionX: number;
        ResolutionY: number;
        ResolutionYImmersiveMode: number;
        PPI: number;
        ScaleFactors: TArray<number>;
        BezelProperties: UE.PIEBezelProperties;
        AndroidProperties: UE.PIEAndroidDeviceProperties;
        IOSProperties: UE.PIEIOSDeviceProperties;
        SwitchProperties: UE.PIESwitchDeviceProperties;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIEPreviewDeviceSpecifications_0__: boolean;
    }
    
    class PIEPreviewSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WindowPosX: number;
        WindowPosY: number;
        WindowScalingFactor: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PIEPreviewSettings;
        static Load(InName: string): PIEPreviewSettings;
    
        __tid_PIEPreviewSettings_0__: boolean;
    }
    
    class PIEPreviewWindowStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(ScreenRotationButtonStyle: UE.ButtonStyle, QuarterMobileContentScaleFactorButtonStyle: UE.ButtonStyle, HalfMobileContentScaleFactorButtonStyle: UE.ButtonStyle, FullMobileContentScaleFactorButtonStyle: UE.ButtonStyle);
        ScreenRotationButtonStyle: UE.ButtonStyle;
        QuarterMobileContentScaleFactorButtonStyle: UE.ButtonStyle;
        HalfMobileContentScaleFactorButtonStyle: UE.ButtonStyle;
        FullMobileContentScaleFactorButtonStyle: UE.ButtonStyle;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PIEPreviewWindowStyle_0__: boolean;
    }
    
    class PinnedCommandListCommand {
        constructor();
        constructor(Name: string, Binding: string, Type: UE.EPinnedCommandListType);
        Name: string;
        Binding: string;
        Type: UE.EPinnedCommandListType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PinnedCommandListCommand_0__: boolean;
    }
    
    class PinnedCommandListContext {
        constructor();
        constructor(Name: string, Commands: TArray<UE.PinnedCommandListCommand>);
        Name: string;
        Commands: TArray<UE.PinnedCommandListCommand>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PinnedCommandListContext_0__: boolean;
    }
    
    class PinnedCommandListSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Contexts: TArray<UE.PinnedCommandListContext>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PinnedCommandListSettings;
        static Load(InName: string): PinnedCommandListSettings;
    
        __tid_PinnedCommandListSettings_0__: boolean;
    }
    
    class PivotPlaneTranslationGizmoHandleGroup extends UE.AxisGizmoHandleGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PivotPlaneTranslationGizmoHandleGroup;
        static Load(InName: string): PivotPlaneTranslationGizmoHandleGroup;
    
        __tid_PivotPlaneTranslationGizmoHandleGroup_0__: boolean;
    }
    
    class PivotRotationGizmoHandleGroup extends UE.AxisGizmoHandleGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RootFullRotationHandleComponent: UE.SceneComponent;
        FullRotationHandleMeshComponent: UE.GizmoHandleMeshComponent;
        StartRotationIndicatorMeshComponent: UE.GizmoHandleMeshComponent;
        RootStartRotationIdicatorComponent: UE.SceneComponent;
        DeltaRotationIndicatorMeshComponent: UE.GizmoHandleMeshComponent;
        RootDeltaRotationIndicatorComponent: UE.SceneComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PivotRotationGizmoHandleGroup;
        static Load(InName: string): PivotRotationGizmoHandleGroup;
    
        __tid_PivotRotationGizmoHandleGroup_0__: boolean;
    }
    
    class PivotScaleGizmoHandleGroup extends UE.AxisGizmoHandleGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PivotScaleGizmoHandleGroup;
        static Load(InName: string): PivotScaleGizmoHandleGroup;
    
        __tid_PivotScaleGizmoHandleGroup_0__: boolean;
    }
    
    class UniformScaleGizmoHandleGroup extends UE.GizmoHandleGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UniformScaleGizmoHandleGroup;
        static Load(InName: string): UniformScaleGizmoHandleGroup;
    
        __tid_UniformScaleGizmoHandleGroup_0__: boolean;
    }
    
    class PivotTranslationGizmoHandleGroup extends UE.AxisGizmoHandleGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PivotTranslationGizmoHandleGroup;
        static Load(InName: string): PivotTranslationGizmoHandleGroup;
    
        __tid_PivotTranslationGizmoHandleGroup_0__: boolean;
    }
    
    class StretchGizmoHandleGroup extends UE.GizmoHandleGroup {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StretchGizmoHandleGroup;
        static Load(InName: string): StretchGizmoHandleGroup;
    
        __tid_StretchGizmoHandleGroup_0__: boolean;
    }
    
    class PivotTransformGizmo extends UE.BaseTransformGizmo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UniformScaleGizmoHandleGroup: UE.UniformScaleGizmoHandleGroup;
        TranslationGizmoHandleGroup: UE.PivotTranslationGizmoHandleGroup;
        ScaleGizmoHandleGroup: UE.PivotScaleGizmoHandleGroup;
        PlaneTranslationGizmoHandleGroup: UE.PivotPlaneTranslationGizmoHandleGroup;
        RotationGizmoHandleGroup: UE.PivotRotationGizmoHandleGroup;
        StretchGizmoHandleGroup: UE.StretchGizmoHandleGroup;
        LastDraggingHandle: UE.ActorComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PivotTransformGizmo;
        static Load(InName: string): PivotTransformGizmo;
    
        __tid_PivotTransformGizmo_0__: boolean;
    }
    
    class PixelInspectorView extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FinalColor: UE.LinearColor;
        SceneColor: UE.LinearColor;
        PreExposure: number;
        Luminance: number;
        HdrColor: UE.LinearColor;
        Normal: UE.Vector;
        PerObjectGBufferData: number;
        Metallic: number;
        Specular: number;
        Roughness: number;
        MaterialShadingModel: UE.EMaterialShadingModel;
        SelectiveOutputMask: number;
        BaseColor: UE.LinearColor;
        IndirectIrradiance: number;
        AmbientOcclusion: number;
        SubSurfaceColor: UE.LinearColor;
        SubsurfaceProfile: UE.Vector;
        Opacity: number;
        ClearCoat: number;
        ClearCoatRoughness: number;
        WorldNormal: UE.Vector;
        BackLit: number;
        Cloth: number;
        EyeTangent: UE.Vector;
        IrisMask: number;
        IrisDistance: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PixelInspectorView;
        static Load(InName: string): PixelInspectorView;
    
        __tid_PixelInspectorView_0__: boolean;
    }
    
    class PkgInfoCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PkgInfoCommandlet;
        static Load(InName: string): PkgInfoCommandlet;
    
        __tid_PkgInfoCommandlet_0__: boolean;
    }
    
    class PlacedEditorUtilityBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HelpText: string;
        ClearActorSelectionSet() : void;
        GetActorReference(PathToActor: string) : UE.Actor;
        GetLevelViewportCameraInfo(CameraLocation: $Ref<UE.Vector>, CameraRotation: $Ref<UE.Rotator>) : boolean;
        GetSelectionSet() : TArray<UE.Actor>;
        SelectNothing() : void;
        SetActorSelectionState(Actor: $Nullable<UE.Actor>, bShouldBeSelected: boolean) : void;
        SetLevelViewportCameraInfo(CameraLocation: UE.Vector, CameraRotation: UE.Rotator) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlacedEditorUtilityBase;
        static Load(InName: string): PlacedEditorUtilityBase;
    
        __tid_PlacedEditorUtilityBase_0__: boolean;
    }
    
    class PlanarReflectionComponent extends UE.SceneCaptureComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PreviewBox: UE.BoxComponent;
        NormalDistortionStrength: number;
        PrefilterRoughness: number;
        PrefilterRoughnessDistance: number;
        ScreenPercentage: number;
        ExtraFOV: number;
        DistanceFromPlaneFadeStart: number;
        DistanceFromPlaneFadeEnd: number;
        DistanceFromPlaneFadeoutStart: number;
        DistanceFromPlaneFadeoutEnd: number;
        AngleFromPlaneFadeStart: number;
        AngleFromPlaneFadeEnd: number;
        bShowPreviewPlane: boolean;
        bRenderSceneTwoSided: boolean;
        CaptureMaterial: UE.Material;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlanarReflectionComponent;
        static Load(InName: string): PlanarReflectionComponent;
    
        __tid_PlanarReflectionComponent_0__: boolean;
    }
    
    class PlanarReflection extends UE.SceneCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlanarReflectionComponent: UE.PlanarReflectionComponent;
        SpriteComponent: UE.BillboardComponent;
        bShowPreviewPlane: boolean;
        OnInterpToggle(bEnable: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlanarReflection;
        static Load(InName: string): PlanarReflection;
    
        __tid_PlanarReflection_0__: boolean;
    }
    
    class PlaneFalloff extends UE.FieldNodeFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        MinRange: number;
        MaxRange: number;
        Default: number;
        Distance: number;
        Position: UE.Vector;
        Normal: UE.Vector;
        Falloff: UE.EFieldFalloffType;
        SetPlaneFalloff(Magnitude: number, MinRange: number, MaxRange: number, Default: number, Distance: number, Position: UE.Vector, Normal: UE.Vector, Falloff: UE.EFieldFalloffType) : UE.PlaneFalloff;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlaneFalloff;
        static Load(InName: string): PlaneFalloff;
    
        __tid_PlaneFalloff_0__: boolean;
    }
    
    class PlanePositionGizmo extends UE.InteractiveGizmo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AxisSource: GizmoAxisSource;
        ParameterSource: GizmoVec2ParameterSource;
        HitTarget: GizmoClickTarget;
        StateTarget: GizmoStateTarget;
        bEnableSignedAxis: boolean;
        bFlipX: boolean;
        bFlipY: boolean;
        bInInteraction: boolean;
        InteractionOrigin: UE.Vector;
        InteractionNormal: UE.Vector;
        InteractionAxisX: UE.Vector;
        InteractionAxisY: UE.Vector;
        InteractionStartPoint: UE.Vector;
        InteractionCurPoint: UE.Vector;
        InteractionStartParameter: UE.Vector2D;
        InteractionCurParameter: UE.Vector2D;
        ParameterSigns: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlanePositionGizmo;
        static Load(InName: string): PlanePositionGizmo;
    
        __tid_PlanePositionGizmo_0__: boolean;
    }
    
    class PlanePositionGizmoBuilder extends UE.InteractiveGizmoBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlanePositionGizmoBuilder;
        static Load(InName: string): PlanePositionGizmoBuilder;
    
        __tid_PlanePositionGizmoBuilder_0__: boolean;
    }
    
    class PlaneReflectionCapture extends UE.ReflectionCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlaneReflectionCapture;
        static Load(InName: string): PlaneReflectionCapture;
    
        __tid_PlaneReflectionCapture_0__: boolean;
    }
    
    class PlaneReflectionCaptureComponent extends UE.ReflectionCaptureComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InfluenceRadiusScale: number;
        PreviewInfluenceRadius: UE.DrawSphereComponent;
        PreviewCaptureBox: UE.BoxComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlaneReflectionCaptureComponent;
        static Load(InName: string): PlaneReflectionCaptureComponent;
    
        __tid_PlaneReflectionCaptureComponent_0__: boolean;
    }
    
    class PlaneTranslationDragOperation extends UE.ViewportDragOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlaneTranslationDragOperation;
        static Load(InName: string): PlaneTranslationDragOperation;
    
        __tid_PlaneTranslationDragOperation_0__: boolean;
    }
    
    class PlatformEventsComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlatformChangedToLaptopModeDelegate: $MulticastDelegate<() => void>;
        PlatformChangedToTabletModeDelegate: $MulticastDelegate<() => void>;
        IsInLaptopMode() : boolean;
        IsInTabletMode() : boolean;
        PlatformEventDelegate__DelegateSignature() : void;
        SupportsConvertibleLaptops() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlatformEventsComponent;
        static Load(InName: string): PlatformEventsComponent;
    
        __tid_PlatformEventsComponent_0__: boolean;
    }
    
    class PlatformGameInstance extends UE.GameInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ApplicationWillDeactivateDelegate: $MulticastDelegate<() => void>;
        ApplicationHasReactivatedDelegate: $MulticastDelegate<() => void>;
        ApplicationWillEnterBackgroundDelegate: $MulticastDelegate<() => void>;
        ApplicationHasEnteredForegroundDelegate: $MulticastDelegate<() => void>;
        ApplicationWillTerminateDelegate: $MulticastDelegate<() => void>;
        ApplicationShouldUnloadResourcesDelegate: $MulticastDelegate<() => void>;
        ApplicationReceivedStartupArgumentsDelegate: $MulticastDelegate<(StartupArguments: TArray<string>) => void>;
        ApplicationRegisteredForRemoteNotificationsDelegate: $MulticastDelegate<(inArray: TArray<number>) => void>;
        ApplicationRegisteredForUserNotificationsDelegate: $MulticastDelegate<(inInt: number) => void>;
        ApplicationFailedToRegisterForRemoteNotificationsDelegate: $MulticastDelegate<(inString: string) => void>;
        ApplicationReceivedRemoteNotificationDelegate: $MulticastDelegate<(inString: string, inAppState: UE.EApplicationState) => void>;
        ApplicationReceivedLocalNotificationDelegate: $MulticastDelegate<(inString: string, inInt: number, inAppState: UE.EApplicationState) => void>;
        ApplicationReceivedScreenOrientationChangedNotificationDelegate: $MulticastDelegate<(inScreenOrientation: UE.EScreenOrientation) => void>;
        PlatformDelegate__DelegateSignature() : void;
        PlatformFailedToRegisterForRemoteNotificationsDelegate__DelegateSignature(inString: string) : void;
        PlatformReceivedLocalNotificationDelegate__DelegateSignature(inString: string, inInt: number, inAppState: UE.EApplicationState) : void;
        PlatformReceivedRemoteNotificationDelegate__DelegateSignature(inString: string, inAppState: UE.EApplicationState) : void;
        PlatformRegisteredForRemoteNotificationsDelegate__DelegateSignature(inArray: TArray<number>) : void;
        PlatformRegisteredForUserNotificationsDelegate__DelegateSignature(inInt: number) : void;
        PlatformScreenOrientationChangedDelegate__DelegateSignature(inScreenOrientation: UE.EScreenOrientation) : void;
        PlatformStartupArgumentsDelegate__DelegateSignature(StartupArguments: TArray<string>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlatformGameInstance;
        static Load(InName: string): PlatformGameInstance;
    
        __tid_PlatformGameInstance_0__: boolean;
    }
    
    class PlatformInterfaceWebResponse extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OriginalURL: string;
        ResponseCode: number;
        Tag: number;
        StringResponse: string;
        BinaryResponse: TArray<number>;
        GetHeader(HeaderIndex: number, Header: $Ref<string>, Value: $Ref<string>) : void;
        GetHeaderValue(HeaderName: string) : string;
        GetNumHeaders() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlatformInterfaceWebResponse;
        static Load(InName: string): PlatformInterfaceWebResponse;
    
        __tid_PlatformInterfaceWebResponse_0__: boolean;
    }
    
    class PlatformMediaSource extends UE.MediaSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlatformMediaSources: TMap<string, UE.MediaSource>;
        MediaSource: UE.MediaSource;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlatformMediaSource;
        static Load(InName: string): PlatformMediaSource;
    
        __tid_PlatformMediaSource_0__: boolean;
    }
    
    class PlatformMediaSourceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlatformMediaSourceFactoryNew;
        static Load(InName: string): PlatformMediaSourceFactoryNew;
    
        __tid_PlatformMediaSourceFactoryNew_0__: boolean;
    }
    
    class PlayerMuteList {
        constructor();
        constructor(bHasVoiceHandshakeCompleted: boolean, VoiceChannelIdx: number);
        bHasVoiceHandshakeCompleted: boolean;
        VoiceChannelIdx: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PlayerMuteList_0__: boolean;
    }
    
    class PlayerStart extends UE.NavigationObjectBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlayerStartTag: string;
        ArrowComponent: UE.ArrowComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlayerStart;
        static Load(InName: string): PlayerStart;
    
        __tid_PlayerStart_0__: boolean;
    }
    
    class PlayerStartPIE extends UE.PlayerStart {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlayerStartPIE;
        static Load(InName: string): PlayerStartPIE;
    
        __tid_PlayerStartPIE_0__: boolean;
    }
    
    class PlayMontageCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnCompleted: $MulticastDelegate<(NotifyName: string) => void>;
        OnBlendOut: $MulticastDelegate<(NotifyName: string) => void>;
        OnInterrupted: $MulticastDelegate<(NotifyName: string) => void>;
        OnNotifyBegin: $MulticastDelegate<(NotifyName: string) => void>;
        OnNotifyEnd: $MulticastDelegate<(NotifyName: string) => void>;
        OnMontageBlendingOut(Montage: $Nullable<UE.AnimMontage>, bInterrupted: boolean) : void;
        OnMontageEnded(Montage: $Nullable<UE.AnimMontage>, bInterrupted: boolean) : void;
        OnNotifyBeginReceived(NotifyName: string, BranchingPointNotifyPayload: UE.BranchingPointNotifyPayload) : void;
        OnNotifyEndReceived(NotifyName: string, BranchingPointNotifyPayload: UE.BranchingPointNotifyPayload) : void;
        static CreateProxyObjectForPlayMontage(InSkeletalMeshComponent: $Nullable<UE.SkeletalMeshComponent>, MontageToPlay: $Nullable<UE.AnimMontage>, PlayRate?: number /* = 1.000000 */, StartingPosition?: number /* = 0.000000 */, StartingSection?: string /* = "None" */) : UE.PlayMontageCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PlayMontageCallbackProxy;
        static Load(InName: string): PlayMontageCallbackProxy;
    
        __tid_PlayMontageCallbackProxy_0__: boolean;
    }
    
    class PluginClassTemplate extends UE.ClassTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PluginName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PluginClassTemplate;
        static Load(InName: string): PluginClassTemplate;
    
        __tid_PluginClassTemplate_0__: boolean;
    }
    
    class PluginCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PluginCommandlet;
        static Load(InName: string): PluginCommandlet;
    
        __tid_PluginCommandlet_0__: boolean;
    }
    
    class PluginMetadataObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Version: number;
        VersionName: string;
        FriendlyName: string;
        Description: string;
        Category: string;
        CreatedBy: string;
        CreatedByURL: string;
        DocsURL: string;
        MarketplaceURL: string;
        SupportURL: string;
        bCanContainContent: boolean;
        bIsBetaVersion: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PluginMetadataObject;
        static Load(InName: string): PluginMetadataObject;
    
        __tid_PluginMetadataObject_0__: boolean;
    }
    
    class PointDamageEvent extends UE.DamageEvent {
        constructor();
        constructor(Damage: number, ShotDirection: UE.Vector_NetQuantizeNormal, HitInfo: UE.HitResult);
        Damage: number;
        ShotDirection: UE.Vector_NetQuantizeNormal;
        HitInfo: UE.HitResult;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PointDamageEvent_0__: boolean;
    }
    
    class PointLight extends UE.Light {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PointLightComponent: UE.PointLightComponent;
        SetLightFalloffExponent(NewLightFalloffExponent: number) : void;
        SetRadius(NewRadius: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PointLight;
        static Load(InName: string): PointLight;
    
        __tid_PointLight_0__: boolean;
    }
    
    class PolysExporterOBJ extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PolysExporterOBJ;
        static Load(InName: string): PolysExporterOBJ;
    
        __tid_PolysExporterOBJ_0__: boolean;
    }
    
    class PolysExporterT3D extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PolysExporterT3D;
        static Load(InName: string): PolysExporterT3D;
    
        __tid_PolysExporterT3D_0__: boolean;
    }
    
    class PolysFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PolysFactory;
        static Load(InName: string): PolysFactory;
    
        __tid_PolysFactory_0__: boolean;
    }
    
    class PopulateDialogueWaveFromCharacterSheetCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PopulateDialogueWaveFromCharacterSheetCommandlet;
        static Load(InName: string): PopulateDialogueWaveFromCharacterSheetCommandlet;
    
        __tid_PopulateDialogueWaveFromCharacterSheetCommandlet_0__: boolean;
    }
    
    class PortalRpcLocateServer {
        constructor();
        constructor(ProductId: UE.Guid, ProductVersion: string, HostMacAddress: string, HostUserId: string);
        ProductId: UE.Guid;
        ProductVersion: string;
        HostMacAddress: string;
        HostUserId: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PortalRpcLocateServer_0__: boolean;
    }
    
    class PortalRpcServer {
        constructor();
        constructor(ServerAddress: string);
        ServerAddress: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PortalRpcServer_0__: boolean;
    }
    
    class PortalUserDetails {
        constructor();
        constructor(DisplayName: string, Email: string, RealName: string, IsSignedIn: boolean);
        DisplayName: string;
        Email: string;
        RealName: string;
        IsSignedIn: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PortalUserDetails_0__: boolean;
    }
    
    class PortalUserIsEntitledToItemResult {
        constructor();
        constructor(ItemId: string, IsEntitled: boolean, RetrievedFromCacheLevel: UE.EEntitlementCacheLevelRetrieved);
        ItemId: string;
        IsEntitled: boolean;
        RetrievedFromCacheLevel: UE.EEntitlementCacheLevelRetrieved;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PortalUserIsEntitledToItemResult_0__: boolean;
    }
    
    class PoseAssetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceAnimation: UE.AnimSequence;
        PoseNames: TArray<string>;
        TargetSkeleton: UE.Skeleton;
        PreviewSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PoseAssetFactory;
        static Load(InName: string): PoseAssetFactory;
    
        __tid_PoseAssetFactory_0__: boolean;
    }
    
    class PostProcessComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.PostProcessSettings;
        Priority: number;
        BlendRadius: number;
        BlendWeight: number;
        bEnabled: boolean;
        bUnbound: boolean;
        AddOrUpdateBlendable(InBlendableObject: BlendableInterface, InWeight?: number /* = 1.000000 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PostProcessComponent;
        static Load(InName: string): PostProcessComponent;
    
        __tid_PostProcessComponent_0__: boolean;
    }
    
    class PostProcessVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.PostProcessSettings;
        Priority: number;
        BlendRadius: number;
        BlendWeight: number;
        bEnabled: boolean;
        bUnbound: boolean;
        AddOrUpdateBlendable(InBlendableObject: BlendableInterface, InWeight?: number /* = 1.000000 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PostProcessVolume;
        static Load(InName: string): PostProcessVolume;
    
        __tid_PostProcessVolume_0__: boolean;
    }
    
    class POV {
        constructor();
        constructor(Location: UE.Vector, Rotation: UE.Rotator, FOV: number);
        Location: UE.Vector;
        Rotation: UE.Rotator;
        FOV: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_POV_0__: boolean;
    }
    
    class PrecomputedLightInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        constructor(Transform: UE.Transform, LightGuid: UE.Guid, PreviewShadowMapChannel: number);
        Transform: UE.Transform;
        LightGuid: UE.Guid;
        PreviewShadowMapChannel: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrecomputedLightInstanceData_0__: boolean;
    }
    
    class PrecomputedSkyLightInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        constructor(LightGuid: UE.Guid, AverageBrightness: number);
        LightGuid: UE.Guid;
        AverageBrightness: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrecomputedSkyLightInstanceData_0__: boolean;
    }
    
    class PrecomputedVisibilityOverrideVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OverrideVisibleActors: TArray<UE.Actor>;
        OverrideInvisibleActors: TArray<UE.Actor>;
        OverrideInvisibleLevels: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PrecomputedVisibilityOverrideVolume;
        static Load(InName: string): PrecomputedVisibilityOverrideVolume;
    
        __tid_PrecomputedVisibilityOverrideVolume_0__: boolean;
    }
    
    class PrecomputedVisibilityVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PrecomputedVisibilityVolume;
        static Load(InName: string): PrecomputedVisibilityVolume;
    
        __tid_PrecomputedVisibilityVolume_0__: boolean;
    }
    
    class PreviewCollectionInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PreviewCollectionInterface;
        static Load(InName: string): PreviewCollectionInterface;
    
        __tid_PreviewCollectionInterface_0__: boolean;
    }
    
    class PreviewMaterial extends UE.Material {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PreviewMaterial;
        static Load(InName: string): PreviewMaterial;
    
        __tid_PreviewMaterial_0__: boolean;
    }
    
    class PreviewMeshCollectionFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CurrentSkeleton: TWeakObjectPtr<UE.Skeleton>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PreviewMeshCollectionFactory;
        static Load(InName: string): PreviewMeshCollectionFactory;
    
        __tid_PreviewMeshCollectionFactory_0__: boolean;
    }
    
    class PrimaryDataAsset extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AssetBundleData: UE.AssetBundleData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PrimaryDataAsset;
        static Load(InName: string): PrimaryDataAsset;
    
        __tid_PrimaryDataAsset_0__: boolean;
    }
    
    class PrimaryAssetLabel extends UE.PrimaryDataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Rules: UE.PrimaryAssetRules;
        bLabelAssetsInMyDirectory: boolean;
        bIsRuntimeLabel: boolean;
        ExplicitAssets: TArray<TSoftObjectPtr<UE.Object>>;
        ExplicitBlueprints: TArray<TSoftClassPtr<UE.Object>>;
        AssetCollection: UE.CollectionReference;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PrimaryAssetLabel;
        static Load(InName: string): PrimaryAssetLabel;
    
        __tid_PrimaryAssetLabel_0__: boolean;
    }
    
    class PrimitiveComponentInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        constructor(ComponentTransform: UE.Transform, VisibilityId: number, LODParent: UE.PrimitiveComponent);
        ComponentTransform: UE.Transform;
        VisibilityId: number;
        LODParent: UE.PrimitiveComponent;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PrimitiveComponentInstanceData_0__: boolean;
    }
    
    class PrimitiveStats extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Object: TWeakObjectPtr<UE.Object>;
        Actors: TArray<TWeakObjectPtr<UE.Actor>>;
        Type: string;
        Count: number;
        Sections: number;
        HWInstances: number;
        InstSections: number;
        Triangles: number;
        InstTriangles: number;
        ResourceSize: number;
        VertexColorMem: number;
        InstVertexColorMem: number;
        LightsLM: number;
        LightsOther: number;
        LightsTotal: number;
        ObjLightCost: number;
        LightMapData: number;
        LMSMResolution: number;
        RadiusMin: number;
        RadiusMax: number;
        RadiusAvg: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PrimitiveStats;
        static Load(InName: string): PrimitiveStats;
    
        __tid_PrimitiveStats_0__: boolean;
    }
    
    class ProceduralFoliageSpawner extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RandomSeed: number;
        TileSize: number;
        NumUniqueTiles: number;
        MinimumQuadTreeSize: number;
        FoliageTypes: TArray<UE.FoliageTypeObject>;
        Simulate(NumSteps?: number /* = -1 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProceduralFoliageSpawner;
        static Load(InName: string): ProceduralFoliageSpawner;
    
        __tid_ProceduralFoliageSpawner_0__: boolean;
    }
    
    class ProceduralFoliageComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FoliageSpawner: UE.ProceduralFoliageSpawner;
        TileOverlap: number;
        bAllowLandscape: boolean;
        bAllowBSP: boolean;
        bAllowStaticMesh: boolean;
        bAllowTranslucent: boolean;
        bAllowFoliage: boolean;
        bShowDebugTiles: boolean;
        SpawningVolume: UE.Volume;
        ProceduralGuid: UE.Guid;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProceduralFoliageComponent;
        static Load(InName: string): ProceduralFoliageComponent;
    
        __tid_ProceduralFoliageComponent_0__: boolean;
    }
    
    class ProceduralFoliageVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProceduralComponent: UE.ProceduralFoliageComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProceduralFoliageVolume;
        static Load(InName: string): ProceduralFoliageVolume;
    
        __tid_ProceduralFoliageVolume_0__: boolean;
    }
    
    class ProceduralFoliageBlockingVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProceduralFoliageVolume: UE.ProceduralFoliageVolume;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProceduralFoliageBlockingVolume;
        static Load(InName: string): ProceduralFoliageBlockingVolume;
    
        __tid_ProceduralFoliageBlockingVolume_0__: boolean;
    }
    
    class ProceduralFoliageInstance {
        constructor();
        constructor(Rotation: UE.Quat, Location: UE.Vector, Age: number, Normal: UE.Vector, Scale: number, Type: UE.FoliageType);
        Rotation: UE.Quat;
        Location: UE.Vector;
        Age: number;
        Normal: UE.Vector;
        Scale: number;
        Type: UE.FoliageType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProceduralFoliageInstance_0__: boolean;
    }
    
    class ProceduralFoliageSpawnerFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProceduralFoliageSpawnerFactory;
        static Load(InName: string): ProceduralFoliageSpawnerFactory;
    
        __tid_ProceduralFoliageSpawnerFactory_0__: boolean;
    }
    
    class ProceduralFoliageTile extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FoliageSpawner: UE.ProceduralFoliageSpawner;
        InstancesArray: TArray<UE.ProceduralFoliageInstance>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProceduralFoliageTile;
        static Load(InName: string): ProceduralFoliageTile;
    
        __tid_ProceduralFoliageTile_0__: boolean;
    }
    
    class ProfilerServiceAuthorize {
        constructor();
        constructor(SessionId: UE.Guid, InstanceId: UE.Guid);
        SessionId: UE.Guid;
        InstanceId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServiceAuthorize_0__: boolean;
    }
    
    class ProfilerServiceCapture {
        constructor();
        constructor(bRequestedCaptureState: boolean);
        bRequestedCaptureState: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServiceCapture_0__: boolean;
    }
    
    class ProfilerServiceData2 {
        constructor();
        constructor(InstanceId: UE.Guid, Frame: bigint, CompressedSize: number, UncompressedSize: number, HexData: string);
        InstanceId: UE.Guid;
        Frame: bigint;
        CompressedSize: number;
        UncompressedSize: number;
        HexData: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServiceData2_0__: boolean;
    }
    
    class ProfilerServiceFileChunk {
        constructor();
        constructor(InstanceId: UE.Guid, Filename: string, HexData: string, Header: TArray<number>, ChunkHash: TArray<number>);
        InstanceId: UE.Guid;
        Filename: string;
        HexData: string;
        Header: TArray<number>;
        ChunkHash: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServiceFileChunk_0__: boolean;
    }
    
    class ProfilerServicePing {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServicePing_0__: boolean;
    }
    
    class ProfilerServicePong {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServicePong_0__: boolean;
    }
    
    class ProfilerServicePreview {
        constructor();
        constructor(bRequestedPreviewState: boolean);
        bRequestedPreviewState: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServicePreview_0__: boolean;
    }
    
    class ProfilerServicePreviewAck {
        constructor();
        constructor(InstanceId: UE.Guid);
        InstanceId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServicePreviewAck_0__: boolean;
    }
    
    class ProfilerServiceRequest {
        constructor();
        constructor(Request: number);
        Request: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServiceRequest_0__: boolean;
    }
    
    class ProfilerServiceSubscribe {
        constructor();
        constructor(SessionId: UE.Guid, InstanceId: UE.Guid);
        SessionId: UE.Guid;
        InstanceId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServiceSubscribe_0__: boolean;
    }
    
    class ProfilerServiceUnsubscribe {
        constructor();
        constructor(SessionId: UE.Guid, InstanceId: UE.Guid);
        SessionId: UE.Guid;
        InstanceId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProfilerServiceUnsubscribe_0__: boolean;
    }
    
    class ProgressBarStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(BackgroundImage: UE.SlateBrush, FillImage: UE.SlateBrush, MarqueeImage: UE.SlateBrush);
        BackgroundImage: UE.SlateBrush;
        FillImage: UE.SlateBrush;
        MarqueeImage: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ProgressBarStyle_0__: boolean;
    }
    
    class ProgressBar extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetStyle: UE.ProgressBarStyle;
        Style: UE.SlateWidgetStyleAsset;
        BackgroundImage: UE.SlateBrushAsset;
        FillImage: UE.SlateBrushAsset;
        MarqueeImage: UE.SlateBrushAsset;
        Percent: number;
        BarFillType: UE.EProgressBarFillType;
        bIsMarquee: boolean;
        BorderPadding: UE.Vector2D;
        PercentDelegate: $Delegate<() => number>;
        FillColorAndOpacity: UE.LinearColor;
        FillColorAndOpacityDelegate: $Delegate<() => UE.LinearColor>;
        SetFillColorAndOpacity(InColor: UE.LinearColor) : void;
        SetIsMarquee(InbIsMarquee: boolean) : void;
        SetPercent(InPercent: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProgressBar;
        static Load(InName: string): ProgressBar;
    
        __tid_ProgressBar_0__: boolean;
    }
    
    class ProgressWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProgressBarStyle: UE.ProgressBarStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProgressWidgetStyle;
        static Load(InName: string): ProgressWidgetStyle;
    
        __tid_ProgressWidgetStyle_0__: boolean;
    }
    
    class ProjectileMovementComponent extends UE.MovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialSpeed: number;
        MaxSpeed: number;
        bRotationFollowsVelocity: boolean;
        bRotationRemainsVertical: boolean;
        bShouldBounce: boolean;
        bInitialVelocityInLocalSpace: boolean;
        bForceSubStepping: boolean;
        bSimulationEnabled: boolean;
        bSweepCollision: boolean;
        bIsHomingProjectile: boolean;
        bBounceAngleAffectsFriction: boolean;
        bIsSliding: boolean;
        bInterpMovement: boolean;
        bInterpRotation: boolean;
        PreviousHitTime: number;
        PreviousHitNormal: UE.Vector;
        ProjectileGravityScale: number;
        Buoyancy: number;
        Bounciness: number;
        Friction: number;
        BounceVelocityStopSimulatingThreshold: number;
        MinFrictionFraction: number;
        OnProjectileBounce: $MulticastDelegate<(ImpactResult: UE.HitResult, ImpactVelocity: UE.Vector) => void>;
        OnProjectileStop: $MulticastDelegate<(ImpactResult: UE.HitResult) => void>;
        HomingAccelerationMagnitude: number;
        HomingTargetComponent: TWeakObjectPtr<UE.SceneComponent>;
        MaxSimulationTimeStep: number;
        MaxSimulationIterations: number;
        BounceAdditionalIterations: number;
        InterpLocationTime: number;
        InterpRotationTime: number;
        InterpLocationMaxLagDistance: number;
        InterpLocationSnapToTargetDistance: number;
        IsInterpolationComplete() : boolean;
        IsVelocityUnderSimulationThreshold() : boolean;
        LimitVelocity(NewVelocity: UE.Vector) : UE.Vector;
        MoveInterpolationTarget(NewLocation: UE.Vector, NewRotation: UE.Rotator) : void;
        OnProjectileBounceDelegate__DelegateSignature(ImpactResult: UE.HitResult, ImpactVelocity: UE.Vector) : void;
        OnProjectileStopDelegate__DelegateSignature(ImpactResult: UE.HitResult) : void;
        ResetInterpolation() : void;
        SetInterpolatedComponent(Component: $Nullable<UE.SceneComponent>) : void;
        SetVelocityInLocalSpace(NewVelocity: UE.Vector) : void;
        StopSimulating(HitResult: UE.HitResult) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProjectileMovementComponent;
        static Load(InName: string): ProjectileMovementComponent;
    
        __tid_ProjectileMovementComponent_0__: boolean;
    }
    
    class ProjectPackagingSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Build: UE.EProjectPackagingBuild;
        BuildConfiguration: UE.EProjectPackagingBuildConfigurations;
        BuildTarget: string;
        StagingDirectory: UE.DirectoryPath;
        FullRebuild: boolean;
        ForDistribution: boolean;
        IncludeDebugFiles: boolean;
        BlueprintNativizationMethod: UE.EProjectPackagingBlueprintNativizationMethod;
        NativizeBlueprintAssets: TArray<UE.FilePath>;
        bIncludeNativizedAssetsInProjectGeneration: boolean;
        bExcludeMonolithicEngineHeadersInNativizedCode: boolean;
        UsePakFile: boolean;
        bUseIoStore: boolean;
        bGenerateChunks: boolean;
        bGenerateNoChunks: boolean;
        bChunkHardReferencesOnly: boolean;
        bForceOneChunkPerFile: boolean;
        MaxChunkSize: bigint;
        bBuildHttpChunkInstallData: boolean;
        HttpChunkInstallDataDirectory: UE.DirectoryPath;
        PakFileCompressionFormats: string;
        PakFileAdditionalCompressionOptions: string;
        HttpChunkInstallDataVersion: string;
        IncludePrerequisites: boolean;
        IncludeAppLocalPrerequisites: boolean;
        bShareMaterialShaderCode: boolean;
        bDeterministicShaderCodeOrder: boolean;
        bSharedMaterialNativeLibraries: boolean;
        ApplocalPrerequisitesDirectory: UE.DirectoryPath;
        IncludeCrashReporter: boolean;
        InternationalizationPreset: UE.EProjectPackagingInternationalizationPresets;
        CulturesToStage: TArray<string>;
        LocalizationTargetsToChunk: TArray<string>;
        LocalizationTargetCatchAllChunkId: number;
        bCookAll: boolean;
        bCookMapsOnly: boolean;
        bCompressed: boolean;
        bEncryptIniFiles: boolean;
        bEncryptPakIndex: boolean;
        GenerateEarlyDownloaderPakFile: boolean;
        bSkipEditorContent: boolean;
        bSkipMovies: boolean;
        UFSMovies: TArray<string>;
        NonUFSMovies: TArray<string>;
        CompressedChunkWildcard: TArray<string>;
        IniKeyBlacklist: TArray<string>;
        IniSectionBlacklist: TArray<string>;
        EarlyDownloaderPakFileFiles: TArray<string>;
        MapsToCook: TArray<UE.FilePath>;
        DirectoriesToAlwaysCook: TArray<UE.DirectoryPath>;
        DirectoriesToNeverCook: TArray<UE.DirectoryPath>;
        TestDirectoriesToNotSearch: TArray<UE.DirectoryPath>;
        DirectoriesToAlwaysStageAsUFS: TArray<UE.DirectoryPath>;
        DirectoriesToAlwaysStageAsNonUFS: TArray<UE.DirectoryPath>;
        DirectoriesToAlwaysStageAsUFSServer: TArray<UE.DirectoryPath>;
        DirectoriesToAlwaysStageAsNonUFSServer: TArray<UE.DirectoryPath>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProjectPackagingSettings;
        static Load(InName: string): ProjectPackagingSettings;
    
        __tid_ProjectPackagingSettings_0__: boolean;
    }
    
    class PropertiesToRecordForActorClass {
        constructor();
        constructor(Class: UE.Class, Properties: TArray<string>);
        Class: UE.Class;
        Properties: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertiesToRecordForActorClass_0__: boolean;
    }
    
    class PropertiesToRecordForClass {
        constructor();
        constructor(Class: UE.Class, Properties: TArray<string>);
        Class: UE.Class;
        Properties: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertiesToRecordForClass_0__: boolean;
    }
    
    class PropertyAccess extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyAccess;
        static Load(InName: string): PropertyAccess;
    
        __tid_PropertyAccess_0__: boolean;
    }
    
    class PropertyEditorTestSubStruct {
        constructor();
        constructor(FirstProperty: number, SecondProperty: number, CustomizedStructInsideUncustomizedStruct: UE.LinearColor, CustomizedStructInsideUncustomizedStruct2: UE.SoftObjectPath);
        FirstProperty: number;
        SecondProperty: number;
        CustomizedStructInsideUncustomizedStruct: UE.LinearColor;
        CustomizedStructInsideUncustomizedStruct2: UE.SoftObjectPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyEditorTestSubStruct_0__: boolean;
    }
    
    class PropertyEditorTestBasicStruct {
        constructor();
        constructor(IntPropertyInsideAStruct: number, FloatPropertyInsideAStruct: number, ObjectPropertyInsideAStruct: UE.Object, InnerStruct: UE.PropertyEditorTestSubStruct);
        IntPropertyInsideAStruct: number;
        FloatPropertyInsideAStruct: number;
        ObjectPropertyInsideAStruct: UE.Object;
        InnerStruct: UE.PropertyEditorTestSubStruct;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyEditorTestBasicStruct_0__: boolean;
    }
    
    enum PropertyEditorTestBitflags { First, Second, Third, Hidden, PropertyEditorTestBitflags_MAX, __typeKeyDoNoAccess}
    enum PropertyEditorTestEnum { PropertyEditorTest_Enum1, PropertyEditorTest_Enum2, PropertyEditorTest_Enum3, PropertyEditorTest_Enum4, PropertyEditorTest_Enum5, PropertyEditorTest_Enum6, PropertyEditorTest_MAX, __typeKeyDoNoAccess}
    class PropertyEditorTestInlineEditCondition {
        constructor();
        constructor(InlineEditCondition: boolean, HasInlineEditCondition: number);
        InlineEditCondition: boolean;
        HasInlineEditCondition: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyEditorTestInlineEditCondition_0__: boolean;
    }
    
    class PropertyEditorTestInstancedObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Number: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyEditorTestInstancedObject;
        static Load(InName: string): PropertyEditorTestInstancedObject;
    
        __tid_PropertyEditorTestInstancedObject_0__: boolean;
    }
    
    class PropertyEditorTestInstancedStruct {
        constructor();
        constructor(Object: UE.PropertyEditorTestInstancedObject);
        Object: UE.PropertyEditorTestInstancedObject;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyEditorTestInstancedStruct_0__: boolean;
    }
    
    class PropertyEditTestTextStruct {
        constructor();
        constructor(NormalProperty: string);
        NormalProperty: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyEditTestTextStruct_0__: boolean;
    }
    
    class PropertyEditorTestObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Int8Property: number;
        Int16Property: number;
        Int32Property: number;
        Int64Property: bigint;
        ByteProperty: number;
        UnsignedInt16Property: number;
        UnsignedInt32Property: number;
        UnsignedInt64Property: bigint;
        FloatProperty: number;
        DoubleProperty: number;
        NameProperty: string;
        BoolProperty: boolean;
        StringProperty: string;
        TextProperty: string;
        IntPointProperty: UE.IntPoint;
        Vector3Property: UE.Vector;
        Vector2Property: UE.Vector2D;
        Vector4Property: UE.Vector4;
        RotatorProperty: UE.Rotator;
        ObjectProperty: UE.Object;
        LinearColorProperty: UE.LinearColor;
        ColorProperty: UE.Color;
        EnumByteProperty: UE.PropertyEditorTestEnum;
        EnumProperty: UE.EditColor;
        MatrixProperty: UE.Matrix;
        TransformProperty: UE.Transform;
        ClassProperty: UE.Class;
        ClassPropertyWithAllowed: UE.Class;
        ClassPropertyWithDisallowed: UE.Class;
        SubclassOfTexture: UE.Class;
        SubclassOfWithAllowed: UE.Class;
        SubclassOfWithDisallowed: UE.Class;
        AssetPointerWithAllowedAndWhitespace: TSoftObjectPtr<UE.Object>;
        IntProperty32Array: TArray<number>;
        BytePropertyArray: TArray<number>;
        FloatPropertyArray: TArray<number>;
        NamePropertyArray: TArray<string>;
        BoolPropertyArray: TArray<boolean>;
        StringPropertyArray: TArray<string>;
        TextPropertyArray: TArray<string>;
        Vector3PropertyArray: TArray<UE.Vector>;
        Vector2PropertyArray: TArray<UE.Vector2D>;
        Vector4PropertyArray: TArray<UE.Vector4>;
        RotatorPropertyArray: TArray<UE.Rotator>;
        ObjectPropertyArray: TArray<UE.Object>;
        ActorPropertyArray: TArray<UE.Actor>;
        LinearColorPropertyArray: TArray<UE.LinearColor>;
        ColorPropertyArray: TArray<UE.Color>;
        EnumPropertyArray: TArray<UE.PropertyEditorTestEnum>;
        StructPropertyArray: TArray<UE.PropertyEditorTestBasicStruct>;
        StructPropertyArrayWithTitle: TArray<UE.PropertyEditorTestBasicStruct>;
        InstancedStructArray: TArray<UE.PropertyEditorTestInstancedStruct>;
        InstancedUObjectArray: TArray<UE.PropertyEditorTestInstancedObject>;
        FixedArrayOfInts: TArray<number>;
        StaticArrayOfInts: FixSizeArray<number>;
        StaticArrayOfIntsWithEnumLabels: FixSizeArray<number>;
        FloatPropertyWithClampedRange: number;
        IntPropertyWithClampedRange: number;
        IntThatCannotBeChanged: number;
        StringThatCannotBeChanged: string;
        ObjectThatCannotBeChanged: UE.PrimitiveComponent;
        EnumBitflags: number;
        StringPasswordProperty: string;
        TextPasswordProperty: string;
        ThisIsBrokenIfItsVisibleInADetailsView: UE.PropertyEditorTestBasicStruct;
        StructWithMultipleInstances1: UE.PropertyEditorTestBasicStruct;
        bEditConditionStructWithMultipleInstances2: boolean;
        StructWithMultipleInstances2: UE.PropertyEditorTestBasicStruct;
        RichCurve: UE.RichCurve;
        AssetReferenceCustomStruct: UE.SoftObjectPath;
        AssetReferenceCustomStructWithThumbnail: UE.SoftObjectPath;
        ExactlyPointLightActorReference: UE.SoftObjectPath;
        LightActorReference: UE.SoftObjectPath;
        ExactPointOrSpotLightActorReference: UE.SoftObjectPath;
        LightOrStaticMeshActorReference: UE.SoftObjectPath;
        NotLightActorReference: UE.SoftObjectPath;
        MaterialOrTextureAssetReference: UE.SoftObjectPath;
        ActorWithMetaClass: UE.SoftObjectPath;
        DisabledByCanEditChange: UE.SoftObjectPath;
        bEditCondition: boolean;
        SimplePropertyWithEditCondition: number;
        bEditConditionAssetReferenceCustomStructWithEditCondition: boolean;
        AssetReferenceCustomStructWithEditCondition: UE.SoftObjectPath;
        ArrayOfStructs: TArray<UE.PropertyEditorTestBasicStruct>;
        Struct: UE.PropertyEditTestTextStruct;
        EditInlineNewStaticMeshComponent: UE.StaticMeshComponent;
        ArrayOfEditInlineNewSMCs: TArray<UE.StaticMeshComponent>;
        TextureProp: UE.Texture;
        StaticMeshProp: UE.StaticMesh;
        AnyMaterialInterface: UE.MaterialInterface;
        OnlyActorsAllowed: UE.Actor;
        Int32Set: TSet<number>;
        FloatSet: TSet<number>;
        StringSet: TSet<string>;
        ObjectSet: TSet<UE.Object>;
        ActorSet: TSet<UE.Actor>;
        EditColorSet: TSet<UE.EditColor>;
        NameSet: TSet<string>;
        Int32ToStringMap: TMap<number, string>;
        StringToColorMap: TMap<string, UE.LinearColor>;
        Int32ToStructMap: TMap<number, UE.PropertyEditorTestBasicStruct>;
        StringToFloatMap: TMap<string, number>;
        StringToObjectMap: TMap<string, UE.Object>;
        StringToActorMap: TMap<string, UE.Actor>;
        ObjectToInt32Map: TMap<UE.Object, number>;
        ObjectToColorMap: TMap<UE.Object, UE.LinearColor>;
        IntToEnumMap: TMap<number, UE.PropertyEditorTestEnum>;
        NameToNameMap: TMap<string, string>;
        NameToObjectMap: TMap<string, UE.Object>;
        NameToCustomMap: TMap<string, UE.PropertyEditorTestBasicStruct>;
        NameToColorMap: TMap<string, UE.LinearColor>;
        IntToCustomMap: TMap<number, UE.PropertyEditorTestBasicStruct>;
        IntToSubStructMap: TMap<number, UE.PropertyEditorTestSubStruct>;
        LinearColorSet: TSet<UE.LinearColor>;
        VectorSet: TSet<UE.Vector>;
        LinearColorToStringMap: TMap<UE.LinearColor, string>;
        VectorToFloatMap: TMap<UE.Vector, number>;
        LinearColorToVectorMap: TMap<UE.LinearColor, UE.Vector>;
        BlendableInterface: BlendableInterface;
        AnimClassInterface: AnimClassInterface;
        LightPropagationVolumeBlendable: BlendableInterface;
        TextureOrBlendableInterface: UE.Object;
        bSubcategory: boolean;
        bSubcategoryAdvanced: boolean;
        bSubcategoryFooSimple: boolean;
        bSubcategoryFooAdvanced: boolean;
        bSubcategoryBarSimple: boolean;
        bSubcategoryBarAdvanced: boolean;
        bSubcategoryLast: boolean;
        bEnablesNext: boolean;
        bEnabledByPrevious: boolean;
        EnumEditCondition: UE.EditColor;
        bEnabledWhenBlue: boolean;
        bEnabledWhenPink: boolean;
        EnumAsByteEditCondition: UE.PropertyEditorTestEnum;
        bEnabledWhenEnumIs2: boolean;
        bEnabledWhenEnumIs4: boolean;
        IntegerEditCondition: number;
        bEnabledWhenIntGreaterOrEqual5: boolean;
        bEnabledWhenIntLessOrEqual10: boolean;
        FloatEditCondition: number;
        bEnabledWhenFloatGreaterThan5: boolean;
        bEnabledWhenFloatLessThan10: boolean;
        bEditConditionForArrays: boolean;
        ArrayWithEditCondition: TArray<UE.Texture2D>;
        ArrayOfStructsWithEditCondition: TArray<UE.PropertyEditorTestBasicStruct>;
        bEditConditionForFixedArray: boolean;
        FixedArrayWithEditCondition: FixSizeArray<string>;
        EditConditionFlags: bigint;
        bEnabledWhenFlagsHasTwoOrFour: boolean;
        bDisabledWhenFlagsIsOdd: boolean;
        InlineProperty: UE.EComponentMobility;
        PropertyThatHides: UE.EComponentMobility;
        bVisibleWhenStatic: boolean;
        VisibleWhenStationary: number;
        DateTime: UE.DateTime;
        bInlineEditConditionWithoutMetaToggle: boolean;
        InlineEditConditionWithoutMeta: number;
        bInlineEditConditionWithMetaToggle: boolean;
        InlineEditConditionWithMeta: number;
        bInlineEditConditionNotEditable: boolean;
        HasNonEditableInlineCondition: number;
        bSharedEditCondition: boolean;
        UsesSharedEditCondition1: number;
        UsesSharedEditCondition2: number;
        StructWithInlineCondition: UE.PropertyEditorTestInlineEditCondition;
        ArrayOfStructsWithInlineCondition: TArray<UE.PropertyEditorTestInlineEditCondition>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyEditorTestObject;
        static Load(InName: string): PropertyEditorTestObject;
    
        __tid_PropertyEditorTestObject_0__: boolean;
    }
    
    class PropertyEventBroadcaster extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyEventBroadcaster;
        static Load(InName: string): PropertyEventBroadcaster;
    
        __tid_PropertyEventBroadcaster_0__: boolean;
    }
    
    class PropertyEventSubscriber extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyEventSubscriber;
        static Load(InName: string): PropertyEventSubscriber;
    
        __tid_PropertyEventSubscriber_0__: boolean;
    }
    
    class PropertyMetaRoot {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_PropertyMetaRoot_0__: boolean;
    }
    
    class PropertyValueColor extends UE.PropertyValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyValueColor;
        static Load(InName: string): PropertyValueColor;
    
        __tid_PropertyValueColor_0__: boolean;
    }
    
    class PropertyValueMaterial extends UE.PropertyValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyValueMaterial;
        static Load(InName: string): PropertyValueMaterial;
    
        __tid_PropertyValueMaterial_0__: boolean;
    }
    
    class PropertyValueOption extends UE.PropertyValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyValueOption;
        static Load(InName: string): PropertyValueOption;
    
        __tid_PropertyValueOption_0__: boolean;
    }
    
    class PropertyValueSoftObject extends UE.PropertyValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyValueSoftObject;
        static Load(InName: string): PropertyValueSoftObject;
    
        __tid_PropertyValueSoftObject_0__: boolean;
    }
    
    class PropertyValueTransform extends UE.PropertyValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyValueTransform;
        static Load(InName: string): PropertyValueTransform;
    
        __tid_PropertyValueTransform_0__: boolean;
    }
    
    class PropertyValueVisibility extends UE.PropertyValue {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PropertyValueVisibility;
        static Load(InName: string): PropertyValueVisibility;
    
        __tid_PropertyValueVisibility_0__: boolean;
    }
    
    namespace Engine.Transient {
        class PROTO_BP_AnimBlueprint_0_C extends UE.AnimInstance {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            UberGraphFrame: UE.PointerToUberGraphFrame;
            AnimGraphNode_Root: UE.AnimNode_Root;
            AnimGraph(AnimGraph: $Ref<UE.PoseLink>) : void;
            ExecuteUbergraph_PROTO_BP_AnimBlueprint_0(EntryPoint: number) : void;
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): PROTO_BP_AnimBlueprint_0_C;
            static Load(InName: string): PROTO_BP_AnimBlueprint_0_C;
        
            __tid_PROTO_BP_AnimBlueprint_0_C_0__: boolean;
        }
        
    }

    namespace Engine.Transient {
        class PROTO_BP_Blueprint_0_C extends UE.Actor {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            DefaultSceneRoot: UE.SceneComponent;
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): PROTO_BP_Blueprint_0_C;
            static Load(InName: string): PROTO_BP_Blueprint_0_C;
        
            __tid_PROTO_BP_Blueprint_0_C_0__: boolean;
        }
        
    }

    class ProxyLODMeshSimplificationSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProxyLODMeshReductionModuleName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ProxyLODMeshSimplificationSettings;
        static Load(InName: string): ProxyLODMeshSimplificationSettings;
    
        __tid_ProxyLODMeshSimplificationSettings_0__: boolean;
    }
    
    class puerts_unreal_demoGameModeBase extends UE.GameModeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): puerts_unreal_demoGameModeBase;
        static Load(InName: string): puerts_unreal_demoGameModeBase;
    
        __tid_puerts_unreal_demoGameModeBase_0__: boolean;
    }
    
    class PuertsSetting extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AutoModeEnable: boolean;
        DebugEnable: boolean;
        DebugPort: number;
        WaitDebugger: boolean;
        WaitDebuggerTimeout: number;
        NumberOfJsEnv: number;
        WatchDisable: boolean;
        IgnoreClassListOnDTS: TArray<string>;
        IgnoreStructListOnDTS: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): PuertsSetting;
        static Load(InName: string): PuertsSetting;
    
        __tid_PuertsSetting_0__: boolean;
    }
    
    class QuartzPulseOverrideStep {
        constructor();
        constructor(NumberOfPulses: number, PulseDuration: UE.EQuartzCommandQuantization);
        NumberOfPulses: number;
        PulseDuration: UE.EQuartzCommandQuantization;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_QuartzPulseOverrideStep_0__: boolean;
    }
    
    class QuartzTimeSignature {
        constructor();
        constructor(NumBeats: number, BeatType: UE.EQuartzTimeSignatureQuantization, OptionalPulseOverride: TArray<UE.QuartzPulseOverrideStep>);
        NumBeats: number;
        BeatType: UE.EQuartzTimeSignatureQuantization;
        OptionalPulseOverride: TArray<UE.QuartzPulseOverrideStep>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_QuartzTimeSignature_0__: boolean;
    }
    
    class QuartzClockSettings {
        constructor();
        constructor(TimeSignature: UE.QuartzTimeSignature, bIgnoreLevelChange: boolean);
        TimeSignature: UE.QuartzTimeSignature;
        bIgnoreLevelChange: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_QuartzClockSettings_0__: boolean;
    }
    
    class QuartzSubsystem extends UE.WorldSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreateNewClock(WorldContextObject: $Nullable<UE.Object>, ClockName: string, InSettings: UE.QuartzClockSettings, bOverrideSettingsIfClockExists?: boolean /* = false */) : UE.QuartzClockHandle;
        DoesClockExist(WorldContextObject: $Nullable<UE.Object>, ClockName: string) : boolean;
        GetAudioRenderThreadToGameThreadAverageLatency() : number;
        GetAudioRenderThreadToGameThreadMaxLatency() : number;
        GetAudioRenderThreadToGameThreadMinLatency() : number;
        GetGameThreadToAudioRenderThreadAverageLatency(WorldContextObject: $Nullable<UE.Object>) : number;
        GetGameThreadToAudioRenderThreadMaxLatency(WorldContextObject: $Nullable<UE.Object>) : number;
        GetGameThreadToAudioRenderThreadMinLatency(WorldContextObject: $Nullable<UE.Object>) : number;
        GetHandleForClock(WorldContextObject: $Nullable<UE.Object>, ClockName: string) : UE.QuartzClockHandle;
        GetRoundTripAverageLatency(WorldContextObject: $Nullable<UE.Object>) : number;
        GetRoundTripMaxLatency(WorldContextObject: $Nullable<UE.Object>) : number;
        GetRoundTripMinLatency(WorldContextObject: $Nullable<UE.Object>) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): QuartzSubsystem;
        static Load(InName: string): QuartzSubsystem;
    
        __tid_QuartzSubsystem_0__: boolean;
    }
    
    class QuartzTransportTimeStamp {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_QuartzTransportTimeStamp_0__: boolean;
    }
    
    class QueuedDrawDebugItem {
        constructor();
        constructor(ItemType: UE.EDrawDebugItemType, StartLoc: UE.Vector, EndLoc: UE.Vector, Center: UE.Vector, Rotation: UE.Rotator, Radius: number, Size: number, Segments: number, Color: UE.Color, bPersistentLines: boolean, LifeTime: number, Thickness: number, Message: string, TextScale: UE.Vector2D);
        ItemType: UE.EDrawDebugItemType;
        StartLoc: UE.Vector;
        EndLoc: UE.Vector;
        Center: UE.Vector;
        Rotation: UE.Rotator;
        Radius: number;
        Size: number;
        Segments: number;
        Color: UE.Color;
        bPersistentLines: boolean;
        LifeTime: number;
        Thickness: number;
        Message: string;
        TextScale: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_QueuedDrawDebugItem_0__: boolean;
    }
    
    class QuitMatchCallbackProxy extends UE.OnlineBlueprintCallProxyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<() => void>;
        OnFailure: $MulticastDelegate<() => void>;
        static QuitMatch(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MatchID: string, Outcome: UE.EMPMatchOutcome, TurnTimeoutInSeconds: number) : UE.QuitMatchCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): QuitMatchCallbackProxy;
        static Load(InName: string): QuitMatchCallbackProxy;
    
        __tid_QuitMatchCallbackProxy_0__: boolean;
    }
    
    class RadialDamageParams {
        constructor();
        constructor(BaseDamage: number, MinimumDamage: number, InnerRadius: number, OuterRadius: number, DamageFalloff: number);
        BaseDamage: number;
        MinimumDamage: number;
        InnerRadius: number;
        OuterRadius: number;
        DamageFalloff: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RadialDamageParams_0__: boolean;
    }
    
    class RadialDamageEvent extends UE.DamageEvent {
        constructor();
        constructor(Params: UE.RadialDamageParams, Origin: UE.Vector, ComponentHits: TArray<UE.HitResult>);
        Params: UE.RadialDamageParams;
        Origin: UE.Vector;
        ComponentHits: TArray<UE.HitResult>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RadialDamageEvent_0__: boolean;
    }
    
    class RadialFalloff extends UE.FieldNodeFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        MinRange: number;
        MaxRange: number;
        Default: number;
        Radius: number;
        Position: UE.Vector;
        Falloff: UE.EFieldFalloffType;
        SetRadialFalloff(Magnitude: number, MinRange: number, MaxRange: number, Default: number, Radius: number, Position: UE.Vector, Falloff: UE.EFieldFalloffType) : UE.RadialFalloff;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RadialFalloff;
        static Load(InName: string): RadialFalloff;
    
        __tid_RadialFalloff_0__: boolean;
    }
    
    class RadialForceComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Radius: number;
        Falloff: UE.ERadialImpulseFalloff;
        ImpulseStrength: number;
        bImpulseVelChange: boolean;
        bIgnoreOwningActor: boolean;
        ForceStrength: number;
        DestructibleDamage: number;
        ObjectTypesToAffect: TArray<UE.EObjectTypeQuery>;
        AddObjectTypeToAffect(ObjectType: UE.EObjectTypeQuery) : void;
        FireImpulse() : void;
        RemoveObjectTypeToAffect(ObjectType: UE.EObjectTypeQuery) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RadialForceComponent;
        static Load(InName: string): RadialForceComponent;
    
        __tid_RadialForceComponent_0__: boolean;
    }
    
    class RadialForceActor extends UE.RigidBodyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ForceComponent: UE.RadialForceComponent;
        SpriteComponent: UE.BillboardComponent;
        DisableForce() : void;
        EnableForce() : void;
        FireImpulse() : void;
        ToggleForce() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RadialForceActor;
        static Load(InName: string): RadialForceActor;
    
        __tid_RadialForceActor_0__: boolean;
    }
    
    class RadialIntMask extends UE.FieldNodeInt {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Radius: number;
        Position: UE.Vector;
        InteriorValue: number;
        ExteriorValue: number;
        SetMaskCondition: UE.ESetMaskConditionType;
        SetRadialIntMask(Radius: number, Position: UE.Vector, InteriorValue: number, ExteriorValue: number, SetMaskConditionIn: UE.ESetMaskConditionType) : UE.RadialIntMask;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RadialIntMask;
        static Load(InName: string): RadialIntMask;
    
        __tid_RadialIntMask_0__: boolean;
    }
    
    class RadialVector extends UE.FieldNodeVector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        Position: UE.Vector;
        SetRadialVector(Magnitude: number, Position: UE.Vector) : UE.RadialVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RadialVector;
        static Load(InName: string): RadialVector;
    
        __tid_RadialVector_0__: boolean;
    }
    
    class RandomVector extends UE.FieldNodeVector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        SetRandomVector(Magnitude: number) : UE.RandomVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RandomVector;
        static Load(InName: string): RandomVector;
    
        __tid_RandomVector_0__: boolean;
    }
    
    class RBFEntry {
        constructor();
        constructor(Values: TArray<number>);
        Values: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RBFEntry_0__: boolean;
    }
    
    class RBFTarget extends UE.RBFEntry {
        constructor();
        constructor(ScaleFactor: number, bApplyCustomCurve: boolean, CustomCurve: UE.RichCurve, DistanceMethod: UE.ERBFDistanceMethod, FunctionType: UE.ERBFFunctionType);
        ScaleFactor: number;
        bApplyCustomCurve: boolean;
        CustomCurve: UE.RichCurve;
        DistanceMethod: UE.ERBFDistanceMethod;
        FunctionType: UE.ERBFFunctionType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RBFTarget_0__: boolean;
    }
    
    class ReactDeclarationGenerator extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Gen() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReactDeclarationGenerator;
        static Load(InName: string): ReactDeclarationGenerator;
    
        __tid_ReactDeclarationGenerator_0__: boolean;
    }
    
    class ReactWidget extends UE.UserWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddChild(Content: $Nullable<UE.Widget>) : UE.PanelSlot;
        RemoveChild(Content: $Nullable<UE.Widget>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReactWidget;
        static Load(InName: string): ReactWidget;
    
        __tid_ReactWidget_0__: boolean;
    }
    
    class RecastFilter_UseDefaultArea extends UE.NavigationQueryFilter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RecastFilter_UseDefaultArea;
        static Load(InName: string): RecastFilter_UseDefaultArea;
    
        __tid_RecastFilter_UseDefaultArea_0__: boolean;
    }
    
    class RecastNavMesh extends UE.NavigationData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDrawTriangleEdges: boolean;
        bDrawPolyEdges: boolean;
        bDrawFilledPolys: boolean;
        bDrawNavMeshEdges: boolean;
        bDrawTileBounds: boolean;
        bDrawPathCollidingGeometry: boolean;
        bDrawTileLabels: boolean;
        bDrawPolygonLabels: boolean;
        bDrawDefaultPolygonCost: boolean;
        bDrawLabelsOnPathNodes: boolean;
        bDrawNavLinks: boolean;
        bDrawFailedNavLinks: boolean;
        bDrawClusters: boolean;
        bDrawOctree: boolean;
        bDrawOctreeDetails: boolean;
        bDrawMarkedForbiddenPolys: boolean;
        bDistinctlyDrawTilesBeingBuilt: boolean;
        DrawOffset: number;
        bFixedTilePoolSize: boolean;
        TilePoolSize: number;
        TileSizeUU: number;
        CellSize: number;
        CellHeight: number;
        AgentRadius: number;
        AgentHeight: number;
        AgentMaxSlope: number;
        AgentMaxStepHeight: number;
        MinRegionArea: number;
        MergeRegionSize: number;
        MaxSimplificationError: number;
        MaxSimultaneousTileGenerationJobsCount: number;
        TileNumberHardLimit: number;
        PolyRefTileBits: number;
        PolyRefNavPolyBits: number;
        PolyRefSaltBits: number;
        NavMeshOriginOffset: UE.Vector;
        DefaultDrawDistance: number;
        DefaultMaxSearchNodes: number;
        DefaultMaxHierarchicalSearchNodes: number;
        RegionPartitioning: UE.ERecastPartitioning;
        LayerPartitioning: UE.ERecastPartitioning;
        RegionChunkSplits: number;
        LayerChunkSplits: number;
        bSortNavigationAreasByCost: boolean;
        bPerformVoxelFiltering: boolean;
        bMarkLowHeightAreas: boolean;
        bUseExtraTopCellWhenMarkingAreas: boolean;
        bFilterLowSpanSequences: boolean;
        bFilterLowSpanFromTileCache: boolean;
        bDoFullyAsyncNavDataGathering: boolean;
        bUseBetterOffsetsFromCorners: boolean;
        bStoreEmptyTileLayers: boolean;
        bUseVirtualFilters: boolean;
        bAllowNavLinkAsPathEnd: boolean;
        bUseVoxelCache: boolean;
        TileSetUpdateInterval: number;
        HeuristicScale: number;
        VerticalDeviationFromGroundCompensation: number;
        K2_ReplaceAreaInTileBounds(Bounds: UE.Box, OldArea: $Nullable<UE.Class>, NewArea: $Nullable<UE.Class>, ReplaceLinks?: boolean /* = true */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RecastNavMesh;
        static Load(InName: string): RecastNavMesh;
    
        __tid_RecastNavMesh_0__: boolean;
    }
    
    class RecastNavMeshDataChunk extends UE.NavigationDataChunk {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RecastNavMeshDataChunk;
        static Load(InName: string): RecastNavMeshDataChunk;
    
        __tid_RecastNavMeshDataChunk_0__: boolean;
    }
    
    class RecastNavMeshGenerationProperties {
        constructor();
        constructor(TilePoolSize: number, TileSizeUU: number, CellSize: number, CellHeight: number, AgentRadius: number, AgentHeight: number, AgentMaxSlope: number, AgentMaxStepHeight: number, MinRegionArea: number, MergeRegionSize: number, MaxSimplificationError: number, TileNumberHardLimit: number, RegionPartitioning: UE.ERecastPartitioning, LayerPartitioning: UE.ERecastPartitioning, RegionChunkSplits: number, LayerChunkSplits: number, bSortNavigationAreasByCost: boolean, bPerformVoxelFiltering: boolean, bMarkLowHeightAreas: boolean, bUseExtraTopCellWhenMarkingAreas: boolean, bFilterLowSpanSequences: boolean, bFilterLowSpanFromTileCache: boolean, bFixedTilePoolSize: boolean);
        TilePoolSize: number;
        TileSizeUU: number;
        CellSize: number;
        CellHeight: number;
        AgentRadius: number;
        AgentHeight: number;
        AgentMaxSlope: number;
        AgentMaxStepHeight: number;
        MinRegionArea: number;
        MergeRegionSize: number;
        MaxSimplificationError: number;
        TileNumberHardLimit: number;
        RegionPartitioning: UE.ERecastPartitioning;
        LayerPartitioning: UE.ERecastPartitioning;
        RegionChunkSplits: number;
        LayerChunkSplits: number;
        bSortNavigationAreasByCost: boolean;
        bPerformVoxelFiltering: boolean;
        bMarkLowHeightAreas: boolean;
        bUseExtraTopCellWhenMarkingAreas: boolean;
        bFilterLowSpanSequences: boolean;
        bFilterLowSpanFromTileCache: boolean;
        bFixedTilePoolSize: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RecastNavMeshGenerationProperties_0__: boolean;
    }
    
    class RectangleSplineGenerator extends UE.SplineGeneratorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Length: number;
        Width: number;
        bBranchRight: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RectangleSplineGenerator;
        static Load(InName: string): RectangleSplineGenerator;
    
        __tid_RectangleSplineGenerator_0__: boolean;
    }
    
    class RectLightComponent extends UE.LocalLightComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceWidth: number;
        SourceHeight: number;
        BarnDoorAngle: number;
        BarnDoorLength: number;
        SourceTexture: UE.Texture;
        SetBarnDoorAngle(NewValue: number) : void;
        SetBarnDoorLength(NewValue: number) : void;
        SetSourceHeight(NewValue: number) : void;
        SetSourceTexture(bNewValue: $Nullable<UE.Texture>) : void;
        SetSourceWidth(bNewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RectLightComponent;
        static Load(InName: string): RectLightComponent;
    
        __tid_RectLightComponent_0__: boolean;
    }
    
    class RectLight extends UE.Light {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RectLightComponent: UE.RectLightComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RectLight;
        static Load(InName: string): RectLight;
    
        __tid_RectLight_0__: boolean;
    }
    
    class ReferencePose {
        constructor();
        constructor(PoseName: string, ReferencePose: TArray<UE.Transform>, SourceReferenceMesh: TSoftObjectPtr<UE.SkeletalMesh>);
        PoseName: string;
        ReferencePose: TArray<UE.Transform>;
        SourceReferenceMesh: TSoftObjectPtr<UE.SkeletalMesh>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ReferencePose_0__: boolean;
    }
    
    class ReferenceViewerSchema extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReferenceViewerSchema;
        static Load(InName: string): ReferenceViewerSchema;
    
        __tid_ReferenceViewerSchema_0__: boolean;
    }
    
    class ReimportBasicOverlaysFactory extends UE.BasicOverlaysFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportBasicOverlaysFactory;
        static Load(InName: string): ReimportBasicOverlaysFactory;
    
        __tid_ReimportBasicOverlaysFactory_0__: boolean;
    }
    
    class ReimportCurveFactory extends UE.CSVImportFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportCurveFactory;
        static Load(InName: string): ReimportCurveFactory;
    
        __tid_ReimportCurveFactory_0__: boolean;
    }
    
    class ReimportCurveTableFactory extends UE.CSVImportFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportCurveTableFactory;
        static Load(InName: string): ReimportCurveTableFactory;
    
        __tid_ReimportCurveTableFactory_0__: boolean;
    }
    
    class ReimportDataTableFactory extends UE.CSVImportFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportDataTableFactory;
        static Load(InName: string): ReimportDataTableFactory;
    
        __tid_ReimportDataTableFactory_0__: boolean;
    }
    
    class ReimportFbxAnimSequenceFactory extends UE.FbxFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportFbxAnimSequenceFactory;
        static Load(InName: string): ReimportFbxAnimSequenceFactory;
    
        __tid_ReimportFbxAnimSequenceFactory_0__: boolean;
    }
    
    class ReimportFbxSceneFactory extends UE.FbxSceneImportFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ScriptReimportHelper(Obj: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportFbxSceneFactory;
        static Load(InName: string): ReimportFbxSceneFactory;
    
        __tid_ReimportFbxSceneFactory_0__: boolean;
    }
    
    class ReimportFbxSkeletalMeshFactory extends UE.FbxFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportFbxSkeletalMeshFactory;
        static Load(InName: string): ReimportFbxSkeletalMeshFactory;
    
        __tid_ReimportFbxSkeletalMeshFactory_0__: boolean;
    }
    
    class ReimportFbxStaticMeshFactory extends UE.FbxFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportFbxStaticMeshFactory;
        static Load(InName: string): ReimportFbxStaticMeshFactory;
    
        __tid_ReimportFbxStaticMeshFactory_0__: boolean;
    }
    
    class SoundFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bAutoCreateCue: boolean;
        bIncludeAttenuationNode: boolean;
        bIncludeLoopingNode: boolean;
        bIncludeModulatorNode: boolean;
        CueVolume: number;
        CuePackageSuffix: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundFactory;
        static Load(InName: string): SoundFactory;
    
        __tid_SoundFactory_0__: boolean;
    }
    
    class ReimportSoundFactory extends UE.SoundFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportSoundFactory;
        static Load(InName: string): ReimportSoundFactory;
    
        __tid_ReimportSoundFactory_0__: boolean;
    }
    
    class SpeedTreeImportFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpeedTreeImportFactory;
        static Load(InName: string): SpeedTreeImportFactory;
    
        __tid_SpeedTreeImportFactory_0__: boolean;
    }
    
    class ReimportSpeedTreeFactory extends UE.SpeedTreeImportFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportSpeedTreeFactory;
        static Load(InName: string): ReimportSpeedTreeFactory;
    
        __tid_ReimportSpeedTreeFactory_0__: boolean;
    }
    
    class TextureFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NoCompression: boolean;
        NoAlpha: boolean;
        bDeferCompression: boolean;
        CompressionSettings: UE.TextureCompressionSettings;
        bCreateMaterial: boolean;
        bRGBToBaseColor: boolean;
        bRGBToEmissive: boolean;
        bAlphaToRoughness: boolean;
        bAlphaToEmissive: boolean;
        bAlphaToOpacity: boolean;
        bAlphaToOpacityMask: boolean;
        bTwoSided: boolean;
        Blending: UE.EBlendMode;
        ShadingModel: UE.EMaterialShadingModel;
        MipGenSettings: UE.TextureMipGenSettings;
        LODGroup: UE.TextureGroup;
        bDitherMipMapAlpha: boolean;
        AlphaCoverageThresholds: UE.Vector4;
        bPreserveBorder: boolean;
        bFlipNormalMapGreenChannel: boolean;
        bUsingExistingSettings: boolean;
        bUseHashAsGuid: boolean;
        UdimRegexPattern: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureFactory;
        static Load(InName: string): TextureFactory;
    
        __tid_TextureFactory_0__: boolean;
    }
    
    class ReimportTextureFactory extends UE.TextureFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        pOriginalTex: UE.Texture;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportTextureFactory;
        static Load(InName: string): ReimportTextureFactory;
    
        __tid_ReimportTextureFactory_0__: boolean;
    }
    
    class VectorFieldStaticFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorFieldStaticFactory;
        static Load(InName: string): VectorFieldStaticFactory;
    
        __tid_VectorFieldStaticFactory_0__: boolean;
    }
    
    class ReimportVectorFieldStaticFactory extends UE.VectorFieldStaticFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReimportVectorFieldStaticFactory;
        static Load(InName: string): ReimportVectorFieldStaticFactory;
    
        __tid_ReimportVectorFieldStaticFactory_0__: boolean;
    }
    
    class RendererOverrideSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSupportAllShaderPermutations: boolean;
        bForceRecomputeTangents: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RendererOverrideSettings;
        static Load(InName: string): RendererOverrideSettings;
    
        __tid_RendererOverrideSettings_0__: boolean;
    }
    
    class RendererSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMobileDisableVertexFog: boolean;
        MaxMobileCascades: number;
        MobileMSAASampleCount: UE.EMobileMSAASampleCount;
        bMobileAllowDitheredLODTransition: boolean;
        bMobileAllowSoftwareOcclusionCulling: boolean;
        bMobileVirtualTextures: boolean;
        bDiscardUnusedQualityLevels: boolean;
        bOcclusionCulling: boolean;
        MinScreenRadiusForLights: number;
        MinScreenRadiusForEarlyZPass: number;
        MinScreenRadiusForCSMdepth: number;
        bPrecomputedVisibilityWarning: boolean;
        bTextureStreaming: boolean;
        bUseDXT5NormalMaps: boolean;
        bVirtualTextures: boolean;
        bVirtualTexturedLightmaps: boolean;
        VirtualTextureTileSize: number;
        VirtualTextureTileBorderSize: number;
        VirtualTextureFeedbackFactor: number;
        bVirtualTextureEnableCompressZlib: boolean;
        bVirtualTextureEnableCompressCrunch: boolean;
        bClearCoatEnableSecondNormal: boolean;
        ReflectionCaptureResolution: number;
        bReflectionCaptureCompression: boolean;
        ReflectionEnvironmentLightmapMixBasedOnRoughness: boolean;
        bForwardShading: boolean;
        bVertexFoggingForOpaque: boolean;
        bAllowStaticLighting: boolean;
        bUseNormalMapsForStaticLighting: boolean;
        bGenerateMeshDistanceFields: boolean;
        bEightBitMeshDistanceFields: boolean;
        bGenerateLandscapeGIData: boolean;
        bCompressMeshDistanceFields: boolean;
        TessellationAdaptivePixelsPerTriangle: number;
        bSeparateTranslucency: boolean;
        TranslucentSortPolicy: UE.ETranslucentSortPolicy;
        TranslucentSortAxis: UE.Vector;
        CustomDepthStencil: UE.ECustomDepthStencil;
        bCustomDepthTaaJitter: boolean;
        bEnableAlphaChannelInPostProcessing: UE.EAlphaChannelMode;
        bDefaultFeatureBloom: boolean;
        bDefaultFeatureAmbientOcclusion: boolean;
        bDefaultFeatureAmbientOcclusionStaticFraction: boolean;
        bDefaultFeatureAutoExposure: boolean;
        DefaultFeatureAutoExposure: UE.EAutoExposureMethodUI;
        DefaultFeatureAutoExposureBias: number;
        bExtendDefaultLuminanceRangeInAutoExposureSettings: boolean;
        bUsePreExposure: boolean;
        bEnablePreExposureOnlyInTheEditor: boolean;
        bDefaultFeatureMotionBlur: boolean;
        bDefaultFeatureLensFlare: boolean;
        bTemporalUpsampling: boolean;
        bSSGI: boolean;
        DefaultFeatureAntiAliasing: UE.EAntiAliasingMethod;
        DefaultLightUnits: UE.ELightUnits;
        DefaultBackBufferPixelFormat: UE.EDefaultBackBufferPixelFormat;
        bRenderUnbuiltPreviewShadowsInGame: boolean;
        bStencilForLODDither: boolean;
        EarlyZPass: UE.EEarlyZPass;
        bEarlyZPassOnlyMaterialMasking: boolean;
        bDBuffer: boolean;
        ClearSceneMethod: UE.EClearSceneOptions;
        bBasePassOutputsVelocity: boolean;
        bVertexDeformationOutputsVelocity: boolean;
        bSelectiveBasePassOutputs: boolean;
        bDefaultParticleCutouts: boolean;
        GPUSimulationTextureSizeX: number;
        GPUSimulationTextureSizeY: number;
        bGlobalClipPlane: boolean;
        GBufferFormat: UE.EGBufferFormat;
        bUseGPUMorphTargets: boolean;
        bNvidiaAftermathEnabled: boolean;
        bMultiView: boolean;
        bMobilePostProcessing: boolean;
        bMobileMultiView: boolean;
        bMobileUseHWsRGBEncoding: boolean;
        bRoundRobinOcclusion: boolean;
        bODSCapture: boolean;
        bMeshStreaming: boolean;
        WireframeCullThreshold: number;
        bEnableRayTracing: boolean;
        bEnableRayTracingTextureLOD: boolean;
        bSupportStationarySkylight: boolean;
        bSupportLowQualityLightmaps: boolean;
        bSupportPointLightWholeSceneShadows: boolean;
        bSupportAtmosphericFog: boolean;
        bSupportSkyAtmosphere: boolean;
        bSupportSkyAtmosphereAffectsHeightFog: boolean;
        bSupportSkinCacheShaders: boolean;
        DefaultSkinCacheBehavior: UE.ESkinCacheDefaultBehavior;
        SkinCacheSceneMemoryLimitInMB: number;
        bMobileEnableStaticAndCSMShadowReceivers: boolean;
        bMobileEnableMovableLightCSMShaderCulling: boolean;
        bMobileAllowDistanceFieldShadows: boolean;
        bMobileAllowMovableDirectionalLights: boolean;
        MobileNumDynamicPointLights: number;
        bMobileDynamicPointLightsUseStaticBranch: boolean;
        bMobileAllowMovableSpotlights: boolean;
        bMobileAllowMovableSpotlightShadows: boolean;
        bSupport16BitBoneIndex: boolean;
        bGPUSkinLimit2BoneInfluences: boolean;
        bSupportDepthOnlyIndexBuffers: boolean;
        bSupportReversedIndexBuffers: boolean;
        bLPV: boolean;
        bMobileAmbientOcclusion: boolean;
        bUseUnlimitedBoneInfluences: boolean;
        UnlimitedBonInfluencesThreshold: number;
        MobilePlanarReflectionMode: UE.EMobilePlanarReflectionMode;
        bStreamSkeletalMeshLODs: UE.PerPlatformBool;
        bDiscardSkeletalMeshOptionalLODs: UE.PerPlatformBool;
        VisualizeCalibrationColorMaterialPath: UE.SoftObjectPath;
        VisualizeCalibrationCustomMaterialPath: UE.SoftObjectPath;
        VisualizeCalibrationGrayscaleMaterialPath: UE.SoftObjectPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RendererSettings;
        static Load(InName: string): RendererSettings;
    
        __tid_RendererSettings_0__: boolean;
    }
    
    class RenderingPolygon {
        constructor();
        constructor(PolygonGroupID: UE.PolygonGroupID, TriangulatedPolygonTriangleIndices: TArray<UE.TriangleID>);
        PolygonGroupID: UE.PolygonGroupID;
        TriangulatedPolygonTriangleIndices: TArray<UE.TriangleID>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RenderingPolygon_0__: boolean;
    }
    
    class RenderingPolygonGroup {
        constructor();
        constructor(RenderingSectionIndex: number, MaterialIndex: number, MaxTriangles: number);
        RenderingSectionIndex: number;
        MaterialIndex: number;
        MaxTriangles: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RenderingPolygonGroup_0__: boolean;
    }
    
    class RenderTargetExporterHDR extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RenderTargetExporterHDR;
        static Load(InName: string): RenderTargetExporterHDR;
    
        __tid_RenderTargetExporterHDR_0__: boolean;
    }
    
    namespace Engine.ArtTools.RenderToTexture.Enums.RenderToTexture_Enum {
        enum RenderToTexture_Enum { Material, "Unwrapped Mesh", "Depth Map", Lightmaps, "Lightmaps 2-sided", "Flipbook Mesh Animation", "Physics Ground - Tiling Physics Drop of Meshes", "Tiling Material from Hand Placed Meshes", RenderToTexture_MAX, __typeKeyDoNoAccess}
    }

    namespace Engine.ArtTools.RenderToTexture.Enums.RenderToTexture_Flipbook_Enum {
        enum RenderToTexture_Flipbook_Enum { "Simple Mesh rotation", "Material Instance Interpolation", "Both Mesh rotation and Material Instance Interpolation", RenderToTexture_Flipbook_MAX, __typeKeyDoNoAccess}
    }

    namespace Engine.ArtTools.RenderToTexture.Enums.RenderToTexture_Imposter_Enum {
        enum RenderToTexture_Imposter_Enum { "Full 3D Imposter", "Single Rotation Axis", RenderToTexture_Imposter_MAX, __typeKeyDoNoAccess}
    }

    class ReplaceActorCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReplaceActorCommandlet;
        static Load(InName: string): ReplaceActorCommandlet;
    
        __tid_ReplaceActorCommandlet_0__: boolean;
    }
    
    class ReplaceAssetsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReplaceAssetsCommandlet;
        static Load(InName: string): ReplaceAssetsCommandlet;
    
        __tid_ReplaceAssetsCommandlet_0__: boolean;
    }
    
    class ReplayNetConnection extends UE.NetConnection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReplayNetConnection;
        static Load(InName: string): ReplayNetConnection;
    
        __tid_ReplayNetConnection_0__: boolean;
    }
    
    class ReplaySubsystem extends UE.GameInstanceSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReplaySubsystem;
        static Load(InName: string): ReplaySubsystem;
    
        __tid_ReplaySubsystem_0__: boolean;
    }
    
    class ReplicatedVehicleState {
        constructor();
        constructor(SteeringInput: number, ThrottleInput: number, BrakeInput: number, HandbrakeInput: number, CurrentGear: number);
        SteeringInput: number;
        ThrottleInput: number;
        BrakeInput: number;
        HandbrakeInput: number;
        CurrentGear: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ReplicatedVehicleState_0__: boolean;
    }
    
    class ReplicationConnectionDriver extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReplicationConnectionDriver;
        static Load(InName: string): ReplicationConnectionDriver;
    
        __tid_ReplicationConnectionDriver_0__: boolean;
    }
    
    class RetainerBox extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bRetainRender: boolean;
        RenderOnInvalidation: boolean;
        RenderOnPhase: boolean;
        Phase: number;
        PhaseCount: number;
        EffectMaterial: UE.MaterialInterface;
        TextureParameter: string;
        GetEffectMaterial() : UE.MaterialInstanceDynamic;
        RequestRender() : void;
        SetEffectMaterial(EffectMaterial: $Nullable<UE.MaterialInterface>) : void;
        SetRenderingPhase(RenderPhase: number, TotalPhases: number) : void;
        SetRetainRendering(bInRetainRendering: boolean) : void;
        SetTextureParameter(TextureParameter: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RetainerBox;
        static Load(InName: string): RetainerBox;
    
        __tid_RetainerBox_0__: boolean;
    }
    
    class ReturnResultsTerminal extends UE.FieldNodeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetReturnResultsTerminal() : UE.ReturnResultsTerminal;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReturnResultsTerminal;
        static Load(InName: string): ReturnResultsTerminal;
    
        __tid_ReturnResultsTerminal_0__: boolean;
    }
    
    class ReverbEffectFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ReverbEffectFactory;
        static Load(InName: string): ReverbEffectFactory;
    
        __tid_ReverbEffectFactory_0__: boolean;
    }
    
    class RichCurveKeyProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: UE.RichCurveKey;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RichCurveKeyProxy;
        static Load(InName: string): RichCurveKeyProxy;
    
        __tid_RichCurveKeyProxy_0__: boolean;
    }
    
    class RichImageRow extends UE.TableRowBase {
        constructor();
        constructor(Brush: UE.SlateBrush);
        Brush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RichImageRow_0__: boolean;
    }
    
    class RichTextBlockDecorator extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RichTextBlockDecorator;
        static Load(InName: string): RichTextBlockDecorator;
    
        __tid_RichTextBlockDecorator_0__: boolean;
    }
    
    class RichTextBlock extends UE.TextLayoutWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        TextStyleSet: UE.DataTable;
        DecoratorClasses: TArray<UE.Class>;
        bOverrideDefaultStyle: boolean;
        DefaultTextStyleOverride: UE.TextBlockStyle;
        MinDesiredWidth: number;
        TextTransformPolicy: UE.ETextTransformPolicy;
        DefaultTextStyle: UE.TextBlockStyle;
        InstanceDecorators: TArray<UE.RichTextBlockDecorator>;
        ClearAllDefaultStyleOverrides() : void;
        GetDecoratorByClass(DecoratorClass: $Nullable<UE.Class>) : UE.RichTextBlockDecorator;
        GetText() : string;
        SetAutoWrapText(InAutoTextWrap: boolean) : void;
        SetDefaultColorAndOpacity(InColorAndOpacity: UE.SlateColor) : void;
        SetDefaultFont(InFontInfo: UE.SlateFontInfo) : void;
        SetDefaultShadowColorAndOpacity(InShadowColorAndOpacity: UE.LinearColor) : void;
        SetDefaultShadowOffset(InShadowOffset: UE.Vector2D) : void;
        SetDefaultStrikeBrush(InStrikeBrush: $Ref<UE.SlateBrush>) : void;
        SetDefaultTextStyle(InDefaultTextStyle: UE.TextBlockStyle) : void;
        SetMinDesiredWidth(InMinDesiredWidth: number) : void;
        SetText(InText: string) : void;
        SetTextStyleSet(NewTextStyleSet: $Nullable<UE.DataTable>) : void;
        SetTextTransformPolicy(InTransformPolicy: UE.ETextTransformPolicy) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RichTextBlock;
        static Load(InName: string): RichTextBlock;
    
        __tid_RichTextBlock_0__: boolean;
    }
    
    class RichTextBlockImageDecorator extends UE.RichTextBlockDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImageSet: UE.DataTable;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RichTextBlockImageDecorator;
        static Load(InName: string): RichTextBlockImageDecorator;
    
        __tid_RichTextBlockImageDecorator_0__: boolean;
    }
    
    class RichTextStyleRow extends UE.TableRowBase {
        constructor();
        constructor(TextStyle: UE.TextBlockStyle);
        TextStyle: UE.TextBlockStyle;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RichTextStyleRow_0__: boolean;
    }
    
    class RigidBodyState {
        constructor();
        constructor(Position: UE.Vector_NetQuantize100, Quaternion: UE.Quat, LinVel: UE.Vector_NetQuantize100, AngVel: UE.Vector_NetQuantize100, Flags: number);
        Position: UE.Vector_NetQuantize100;
        Quaternion: UE.Quat;
        LinVel: UE.Vector_NetQuantize100;
        AngVel: UE.Vector_NetQuantize100;
        Flags: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RigidBodyState_0__: boolean;
    }
    
    class RootMotionExtractionStep {
        constructor();
        constructor(AnimSequence: UE.AnimSequence, StartPosition: number, EndPosition: number);
        AnimSequence: UE.AnimSequence;
        StartPosition: number;
        EndPosition: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionExtractionStep_0__: boolean;
    }
    
    class RootMotionFinishVelocitySettings {
        constructor();
        constructor(Mode: UE.ERootMotionFinishVelocityMode, SetVelocity: UE.Vector, ClampVelocity: number);
        Mode: UE.ERootMotionFinishVelocityMode;
        SetVelocity: UE.Vector;
        ClampVelocity: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionFinishVelocitySettings_0__: boolean;
    }
    
    class RootMotionSourceStatus {
        constructor();
        constructor(Flags: number);
        Flags: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSourceStatus_0__: boolean;
    }
    
    class RootMotionSource {
        constructor();
        constructor(Priority: number, LocalID: number, AccumulateMode: UE.ERootMotionAccumulateMode, InstanceName: string, StartTime: number, CurrentTime: number, PreviousTime: number, Duration: number, Status: UE.RootMotionSourceStatus, Settings: UE.RootMotionSourceSettings, bInLocalSpace: boolean, RootMotionParams: UE.RootMotionMovementParams, FinishVelocityParams: UE.RootMotionFinishVelocitySettings);
        Priority: number;
        LocalID: number;
        AccumulateMode: UE.ERootMotionAccumulateMode;
        InstanceName: string;
        StartTime: number;
        CurrentTime: number;
        PreviousTime: number;
        Duration: number;
        Status: UE.RootMotionSourceStatus;
        Settings: UE.RootMotionSourceSettings;
        bInLocalSpace: boolean;
        RootMotionParams: UE.RootMotionMovementParams;
        FinishVelocityParams: UE.RootMotionFinishVelocitySettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSource_0__: boolean;
    }
    
    class RootMotionSource_ConstantForce extends UE.RootMotionSource {
        constructor();
        constructor(Force: UE.Vector, StrengthOverTime: UE.CurveFloat);
        Force: UE.Vector;
        StrengthOverTime: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSource_ConstantForce_0__: boolean;
    }
    
    class RootMotionSource_JumpForce extends UE.RootMotionSource {
        constructor();
        constructor(Rotation: UE.Rotator, Distance: number, Height: number, bDisableTimeout: boolean, PathOffsetCurve: UE.CurveVector, TimeMappingCurve: UE.CurveFloat);
        Rotation: UE.Rotator;
        Distance: number;
        Height: number;
        bDisableTimeout: boolean;
        PathOffsetCurve: UE.CurveVector;
        TimeMappingCurve: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSource_JumpForce_0__: boolean;
    }
    
    class RootMotionSource_MoveToDynamicForce extends UE.RootMotionSource {
        constructor();
        constructor(StartLocation: UE.Vector, InitialTargetLocation: UE.Vector, TargetLocation: UE.Vector, bRestrictSpeedToExpected: boolean, PathOffsetCurve: UE.CurveVector, TimeMappingCurve: UE.CurveFloat);
        StartLocation: UE.Vector;
        InitialTargetLocation: UE.Vector;
        TargetLocation: UE.Vector;
        bRestrictSpeedToExpected: boolean;
        PathOffsetCurve: UE.CurveVector;
        TimeMappingCurve: UE.CurveFloat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSource_MoveToDynamicForce_0__: boolean;
    }
    
    class RootMotionSource_MoveToForce extends UE.RootMotionSource {
        constructor();
        constructor(StartLocation: UE.Vector, TargetLocation: UE.Vector, bRestrictSpeedToExpected: boolean, PathOffsetCurve: UE.CurveVector);
        StartLocation: UE.Vector;
        TargetLocation: UE.Vector;
        bRestrictSpeedToExpected: boolean;
        PathOffsetCurve: UE.CurveVector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSource_MoveToForce_0__: boolean;
    }
    
    class RootMotionSource_RadialForce extends UE.RootMotionSource {
        constructor();
        constructor(Location: UE.Vector, LocationActor: UE.Actor, Radius: number, Strength: number, bIsPush: boolean, bNoZForce: boolean, StrengthDistanceFalloff: UE.CurveFloat, StrengthOverTime: UE.CurveFloat, bUseFixedWorldDirection: boolean, FixedWorldDirection: UE.Rotator);
        Location: UE.Vector;
        LocationActor: UE.Actor;
        Radius: number;
        Strength: number;
        bIsPush: boolean;
        bNoZForce: boolean;
        StrengthDistanceFalloff: UE.CurveFloat;
        StrengthOverTime: UE.CurveFloat;
        bUseFixedWorldDirection: boolean;
        FixedWorldDirection: UE.Rotator;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RootMotionSource_RadialForce_0__: boolean;
    }
    
    class RotateOnAngleDragOperation extends UE.ViewportDragOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RotateOnAngleDragOperation;
        static Load(InName: string): RotateOnAngleDragOperation;
    
        __tid_RotateOnAngleDragOperation_0__: boolean;
    }
    
    class RotatingMovementComponent extends UE.MovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RotationRate: UE.Rotator;
        PivotTranslation: UE.Vector;
        bRotationInLocalSpace: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RotatingMovementComponent;
        static Load(InName: string): RotatingMovementComponent;
    
        __tid_RotatingMovementComponent_0__: boolean;
    }
    
    class RotationTrack {
        constructor();
        constructor(RotKeys: TArray<UE.Quat>, Times: TArray<number>);
        RotKeys: TArray<UE.Quat>;
        Times: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RotationTrack_0__: boolean;
    }
    
    class RpcMessage {
        constructor();
        constructor(CallId: UE.Guid);
        CallId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RpcMessage_0__: boolean;
    }
    
    class RuntimeCurveLinearColor {
        constructor();
        constructor(ColorCurves: FixSizeArray<UE.RichCurve>, ExternalCurve: UE.CurveLinearColor);
        ColorCurves: FixSizeArray<UE.RichCurve>;
        ExternalCurve: UE.CurveLinearColor;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_RuntimeCurveLinearColor_0__: boolean;
    }
    
    class RuntimeOptionsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RuntimeOptionsBase;
        static Load(InName: string): RuntimeOptionsBase;
    
        __tid_RuntimeOptionsBase_0__: boolean;
    }
    
    class VirtualTextureBuildSettings {
        constructor();
        constructor(TileSize: number, TileBorderSize: number, bEnableCompressCrunch: boolean, bEnableCompressZlib: boolean);
        TileSize: number;
        TileBorderSize: number;
        bEnableCompressCrunch: boolean;
        bEnableCompressZlib: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VirtualTextureBuildSettings_0__: boolean;
    }
    
    class VirtualTexture2D extends UE.Texture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.VirtualTextureBuildSettings;
        bContinuousUpdate: boolean;
        bSinglePhysicalSpace: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VirtualTexture2D;
        static Load(InName: string): VirtualTexture2D;
    
        __tid_VirtualTexture2D_0__: boolean;
    }
    
    class VirtualTextureBuilder extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Texture: UE.VirtualTexture2D;
        BuildHash: bigint;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VirtualTextureBuilder;
        static Load(InName: string): VirtualTextureBuilder;
    
        __tid_VirtualTextureBuilder_0__: boolean;
    }
    
    class RuntimeVirtualTextureComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundsAlignActor: TSoftObjectPtr<UE.Actor>;
        bSetBoundsButton: boolean;
        bSnapBoundsToLandscape: boolean;
        VirtualTexture: UE.RuntimeVirtualTexture;
        bEnableScalability: boolean;
        ScalabilityGroup: number;
        bHidePrimitives: boolean;
        StreamingTexture: UE.VirtualTextureBuilder;
        StreamLowMips: number;
        bBuildStreamingMipsButton: boolean;
        bEnableCompressCrunch: boolean;
        bUseStreamingLowMipsInEditor: boolean;
        bBuildDebugStreamingMips: boolean;
        Invalidate(WorldBounds: UE.BoxSphereBounds) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RuntimeVirtualTextureComponent;
        static Load(InName: string): RuntimeVirtualTextureComponent;
    
        __tid_RuntimeVirtualTextureComponent_0__: boolean;
    }
    
    class RuntimeVirtualTextureFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RuntimeVirtualTextureFactory;
        static Load(InName: string): RuntimeVirtualTextureFactory;
    
        __tid_RuntimeVirtualTextureFactory_0__: boolean;
    }
    
    class RuntimeVirtualTextureThumbnailRenderer extends UE.ThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RuntimeVirtualTextureThumbnailRenderer;
        static Load(InName: string): RuntimeVirtualTextureThumbnailRenderer;
    
        __tid_RuntimeVirtualTextureThumbnailRenderer_0__: boolean;
    }
    
    class RuntimeVirtualTextureVolume extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VirtualTextureComponent: UE.RuntimeVirtualTextureComponent;
        Box: UE.BoxComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RuntimeVirtualTextureVolume;
        static Load(InName: string): RuntimeVirtualTextureVolume;
    
        __tid_RuntimeVirtualTextureVolume_0__: boolean;
    }
    
    class RVOAvoidanceInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): RVOAvoidanceInterface;
        static Load(InName: string): RVOAvoidanceInterface;
    
        __tid_RVOAvoidanceInterface_0__: boolean;
    }
    
    class SafeZone extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PadLeft: boolean;
        PadRight: boolean;
        PadTop: boolean;
        PadBottom: boolean;
        SetSidesToPad(InPadLeft: boolean, InPadRight: boolean, InPadTop: boolean, InPadBottom: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SafeZone;
        static Load(InName: string): SafeZone;
    
        __tid_SafeZone_0__: boolean;
    }
    
    class SafeZoneSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsTitleSafe: boolean;
        SafeAreaScale: UE.Margin;
        HAlign: UE.EHorizontalAlignment;
        VAlign: UE.EVerticalAlignment;
        Padding: UE.Margin;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SafeZoneSlot;
        static Load(InName: string): SafeZoneSlot;
    
        __tid_SafeZoneSlot_0__: boolean;
    }
    
    class SavePackageUtilitiesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SavePackageUtilitiesCommandlet;
        static Load(InName: string): SavePackageUtilitiesCommandlet;
    
        __tid_SavePackageUtilitiesCommandlet_0__: boolean;
    }
    
    class ScaleBox extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Stretch: UE.EStretch;
        StretchDirection: UE.EStretchDirection;
        UserSpecifiedScale: number;
        IgnoreInheritedScale: boolean;
        SetIgnoreInheritedScale(bInIgnoreInheritedScale: boolean) : void;
        SetStretch(InStretch: UE.EStretch) : void;
        SetStretchDirection(InStretchDirection: UE.EStretchDirection) : void;
        SetUserSpecifiedScale(InUserSpecifiedScale: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScaleBox;
        static Load(InName: string): ScaleBox;
    
        __tid_ScaleBox_0__: boolean;
    }
    
    class ScaleBoxSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScaleBoxSlot;
        static Load(InName: string): ScaleBoxSlot;
    
        __tid_ScaleBoxSlot_0__: boolean;
    }
    
    class ScaleDragOperation extends UE.ViewportDragOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScaleDragOperation;
        static Load(InName: string): ScaleDragOperation;
    
        __tid_ScaleDragOperation_0__: boolean;
    }
    
    class ScaleTrack {
        constructor();
        constructor(ScaleKeys: TArray<UE.Vector>, Times: TArray<number>);
        ScaleKeys: TArray<UE.Vector>;
        Times: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScaleTrack_0__: boolean;
    }
    
    class Scene extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Scene;
        static Load(InName: string): Scene;
    
        __tid_Scene_0__: boolean;
    }
    
    class TextureRenderTargetCube extends UE.TextureRenderTarget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SizeX: number;
        ClearColor: UE.LinearColor;
        OverrideFormat: UE.EPixelFormat;
        bHDR: boolean;
        bForceLinearGamma: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTargetCube;
        static Load(InName: string): TextureRenderTargetCube;
    
        __tid_TextureRenderTargetCube_0__: boolean;
    }
    
    class SceneCaptureComponentCube extends UE.SceneCaptureComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextureTarget: UE.TextureRenderTargetCube;
        bCaptureRotation: boolean;
        TextureTargetLeft: UE.TextureRenderTargetCube;
        TextureTargetRight: UE.TextureRenderTargetCube;
        TextureTargetODS: UE.TextureRenderTarget2D;
        IPD: number;
        CaptureScene() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneCaptureComponentCube;
        static Load(InName: string): SceneCaptureComponentCube;
    
        __tid_SceneCaptureComponentCube_0__: boolean;
    }
    
    class SceneCaptureCube extends UE.SceneCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CaptureComponentCube: UE.SceneCaptureComponentCube;
        OnInterpToggle(bEnable: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneCaptureCube;
        static Load(InName: string): SceneCaptureCube;
    
        __tid_SceneCaptureCube_0__: boolean;
    }
    
    class SceneOutlinerMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneOutlinerMenuContext;
        static Load(InName: string): SceneOutlinerMenuContext;
    
        __tid_SceneOutlinerMenuContext_0__: boolean;
    }
    
    class SceneOutlinerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bHideTemporaryActors: boolean;
        bShowOnlyActorsInCurrentLevel: boolean;
        bHideFoldersContainingHiddenActors: boolean;
        bShowOnlySelectedActors: boolean;
        bShowActorComponents: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneOutlinerSettings;
        static Load(InName: string): SceneOutlinerSettings;
    
        __tid_SceneOutlinerSettings_0__: boolean;
    }
    
    class SceneThumbnailInfo extends UE.ThumbnailInfo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OrbitPitch: number;
        OrbitYaw: number;
        OrbitZoom: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneThumbnailInfo;
        static Load(InName: string): SceneThumbnailInfo;
    
        __tid_SceneThumbnailInfo_0__: boolean;
    }
    
    class SceneThumbnailInfoWithPrimitive extends UE.SceneThumbnailInfo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PrimitiveType: UE.EThumbnailPrimType;
        PreviewMesh: UE.SoftObjectPath;
        bUserModifiedShape: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SceneThumbnailInfoWithPrimitive;
        static Load(InName: string): SceneThumbnailInfoWithPrimitive;
    
        __tid_SceneThumbnailInfoWithPrimitive_0__: boolean;
    }
    
    class SceneViewExtensionIsActiveFunctor {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SceneViewExtensionIsActiveFunctor_0__: boolean;
    }
    
    class ScreenMessageString {
        constructor();
        constructor(Key: bigint, ScreenMessage: string, DisplayColor: UE.Color, TimeToDisplay: number, CurrentTimeDisplayed: number, TextScale: UE.Vector2D);
        Key: bigint;
        ScreenMessage: string;
        DisplayColor: UE.Color;
        TimeToDisplay: number;
        CurrentTimeDisplayed: number;
        TextScale: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScreenMessageString_0__: boolean;
    }
    
    class ScreenshotComparisonCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScreenshotComparisonCommandlet;
        static Load(InName: string): ScreenshotComparisonCommandlet;
    
        __tid_ScreenshotComparisonCommandlet_0__: boolean;
    }
    
    class ScreenshotFunctionalTest extends UE.ScreenshotFunctionalTestBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCameraCutOnScreenshotPrep: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScreenshotFunctionalTest;
        static Load(InName: string): ScreenshotFunctionalTest;
    
        __tid_ScreenshotFunctionalTest_0__: boolean;
    }
    
    class ScriptStructTest {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScriptStructTest_0__: boolean;
    }
    
    class ScrollBar extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetStyle: UE.ScrollBarStyle;
        Style: UE.SlateWidgetStyleAsset;
        bAlwaysShowScrollbar: boolean;
        bAlwaysShowScrollbarTrack: boolean;
        Orientation: UE.EOrientation;
        Thickness: UE.Vector2D;
        Padding: UE.Margin;
        SetState(InOffsetFraction: number, InThumbSizeFraction: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScrollBar;
        static Load(InName: string): ScrollBar;
    
        __tid_ScrollBar_0__: boolean;
    }
    
    class ScrollBarWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ScrollBarStyle: UE.ScrollBarStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScrollBarWidgetStyle;
        static Load(InName: string): ScrollBarWidgetStyle;
    
        __tid_ScrollBarWidgetStyle_0__: boolean;
    }
    
    class ScrollBorderStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(TopShadowBrush: UE.SlateBrush, BottomShadowBrush: UE.SlateBrush);
        TopShadowBrush: UE.SlateBrush;
        BottomShadowBrush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScrollBorderStyle_0__: boolean;
    }
    
    class ScrollBoxStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(TopShadowBrush: UE.SlateBrush, BottomShadowBrush: UE.SlateBrush, LeftShadowBrush: UE.SlateBrush, RightShadowBrush: UE.SlateBrush);
        TopShadowBrush: UE.SlateBrush;
        BottomShadowBrush: UE.SlateBrush;
        LeftShadowBrush: UE.SlateBrush;
        RightShadowBrush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ScrollBoxStyle_0__: boolean;
    }
    
    class ScrollBox extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetStyle: UE.ScrollBoxStyle;
        WidgetBarStyle: UE.ScrollBarStyle;
        Style: UE.SlateWidgetStyleAsset;
        BarStyle: UE.SlateWidgetStyleAsset;
        Orientation: UE.EOrientation;
        ScrollBarVisibility: UE.ESlateVisibility;
        ConsumeMouseWheel: UE.EConsumeMouseWheel;
        ScrollbarThickness: UE.Vector2D;
        ScrollbarPadding: UE.Margin;
        AlwaysShowScrollbar: boolean;
        AlwaysShowScrollbarTrack: boolean;
        AllowOverscroll: boolean;
        bAnimateWheelScrolling: boolean;
        NavigationDestination: UE.EDescendantScrollDestination;
        NavigationScrollPadding: number;
        ScrollWhenFocusChanges: UE.EScrollWhenFocusChanges;
        bAllowRightClickDragScrolling: boolean;
        WheelScrollMultiplier: number;
        OnUserScrolled: $MulticastDelegate<(CurrentOffset: number) => void>;
        EndInertialScrolling() : void;
        GetScrollOffset() : number;
        GetScrollOffsetOfEnd() : number;
        GetViewOffsetFraction() : number;
        ScrollToEnd() : void;
        ScrollToStart() : void;
        ScrollWidgetIntoView(WidgetToFind: $Nullable<UE.Widget>, AnimateScroll?: boolean /* = true */, ScrollDestination?: UE.EDescendantScrollDestination /* = IntoView */, Padding?: number /* = 0.000000 */) : void;
        SetAllowOverscroll(NewAllowOverscroll: boolean) : void;
        SetAlwaysShowScrollbar(NewAlwaysShowScrollbar: boolean) : void;
        SetAnimateWheelScrolling(bShouldAnimateWheelScrolling: boolean) : void;
        SetConsumeMouseWheel(NewConsumeMouseWheel: UE.EConsumeMouseWheel) : void;
        SetOrientation(NewOrientation: UE.EOrientation) : void;
        SetScrollbarPadding(NewScrollbarPadding: UE.Margin) : void;
        SetScrollbarThickness(NewScrollbarThickness: UE.Vector2D) : void;
        SetScrollBarVisibility(NewScrollBarVisibility: UE.ESlateVisibility) : void;
        SetScrollOffset(NewScrollOffset: number) : void;
        SetWheelScrollMultiplier(NewWheelScrollMultiplier: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScrollBox;
        static Load(InName: string): ScrollBox;
    
        __tid_ScrollBox_0__: boolean;
    }
    
    class ScrollBoxSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScrollBoxSlot;
        static Load(InName: string): ScrollBoxSlot;
    
        __tid_ScrollBoxSlot_0__: boolean;
    }
    
    class ScrollBoxWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ScrollBoxStyle: UE.ScrollBoxStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ScrollBoxWidgetStyle;
        static Load(InName: string): ScrollBoxWidgetStyle;
    
        __tid_ScrollBoxWidgetStyle_0__: boolean;
    }
    
    class SCSEditorExtensionContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SCSEditorExtensionContext;
        static Load(InName: string): SCSEditorExtensionContext;
    
        __tid_SCSEditorExtensionContext_0__: boolean;
    }
    
    class SearchBoxStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(TextBoxStyle: UE.EditableTextBoxStyle, ActiveFontInfo: UE.SlateFontInfo, UpArrowImage: UE.SlateBrush, DownArrowImage: UE.SlateBrush, GlassImage: UE.SlateBrush, ClearImage: UE.SlateBrush, ImagePadding: UE.Margin, bLeftAlignButtons: boolean);
        TextBoxStyle: UE.EditableTextBoxStyle;
        ActiveFontInfo: UE.SlateFontInfo;
        UpArrowImage: UE.SlateBrush;
        DownArrowImage: UE.SlateBrush;
        GlassImage: UE.SlateBrush;
        ClearImage: UE.SlateBrush;
        ImagePadding: UE.Margin;
        bLeftAlignButtons: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SearchBoxStyle_0__: boolean;
    }
    
    class SectionEvaluationData {
        constructor();
        constructor(ImplIndex: number, ForcedTime: UE.FrameNumber, Flags: UE.ESectionEvaluationFlags);
        ImplIndex: number;
        ForcedTime: UE.FrameNumber;
        Flags: UE.ESectionEvaluationFlags;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SectionEvaluationData_0__: boolean;
    }
    
    class SelectedSocketInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SelectedSocketInfo_0__: boolean;
    }
    
    class Selection extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Selection;
        static Load(InName: string): Selection;
    
        __tid_Selection_0__: boolean;
    }
    
    class SelectionStateOfLevel {
        constructor();
        constructor(SelectedActors: TArray<string>, SelectedComponents: TArray<string>);
        SelectedActors: TArray<string>;
        SelectedComponents: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SelectionStateOfLevel_0__: boolean;
    }
    
    class SequenceCameraShakeSequencePlayer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoundObjectOverride: UE.Object;
        Sequence: UE.MovieSceneSequence;
        RootTemplateInstance: UE.MovieSceneRootEvaluationTemplateInstance;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceCameraShakeSequencePlayer;
        static Load(InName: string): SequenceCameraShakeSequencePlayer;
    
        __tid_SequenceCameraShakeSequencePlayer_0__: boolean;
    }
    
    class SequenceCameraShakeCameraStandIn extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FieldOfView: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceCameraShakeCameraStandIn;
        static Load(InName: string): SequenceCameraShakeCameraStandIn;
    
        __tid_SequenceCameraShakeCameraStandIn_0__: boolean;
    }
    
    class SequenceCameraShake extends UE.CameraShakeBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Sequence: UE.CameraAnimationSequence;
        PlayRate: number;
        Scale: number;
        BlendInTime: number;
        BlendOutTime: number;
        RandomSegmentDuration: number;
        bRandomSegment: boolean;
        Player: UE.SequenceCameraShakeSequencePlayer;
        CameraStandIn: UE.SequenceCameraShakeCameraStandIn;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceCameraShake;
        static Load(InName: string): SequenceCameraShake;
    
        __tid_SequenceCameraShake_0__: boolean;
    }
    
    class SequenceExporterT3D extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceExporterT3D;
        static Load(InName: string): SequenceExporterT3D;
    
        __tid_SequenceExporterT3D_0__: boolean;
    }
    
    class SequencerAnimationSupport extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequencerAnimationSupport;
        static Load(InName: string): SequencerAnimationSupport;
    
        __tid_SequencerAnimationSupport_0__: boolean;
    }
    
    class SequenceRecorderActorFilter {
        constructor();
        constructor(ActorClassesToRecord: TArray<UE.Class>);
        ActorClassesToRecord: TArray<UE.Class>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SequenceRecorderActorFilter_0__: boolean;
    }
    
    class SequenceRecorderActorGroup extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GroupName: string;
        SequenceName: string;
        SequenceRecordingBasePath: UE.DirectoryPath;
        bSpecifyTargetLevelSequence: boolean;
        TargetLevelSequence: UE.LevelSequence;
        bDuplicateTargetLevelSequence: boolean;
        bRecordTargetLevelSequenceLength: boolean;
        RecordedActors: TArray<UE.ActorRecording>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceRecorderActorGroup;
        static Load(InName: string): SequenceRecorderActorGroup;
    
        __tid_SequenceRecorderActorGroup_0__: boolean;
    }
    
    class SequenceRecorderBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static IsRecordingSequence() : boolean;
        static StartRecordingSequence(ActorsToRecord: TArray<UE.Actor>) : void;
        static StopRecordingSequence() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceRecorderBlueprintLibrary;
        static Load(InName: string): SequenceRecorderBlueprintLibrary;
    
        __tid_SequenceRecorderBlueprintLibrary_0__: boolean;
    }
    
    class SequenceRecorderGroup extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActorGroups: TArray<UE.SequenceRecorderActorGroup>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceRecorderGroup;
        static Load(InName: string): SequenceRecorderGroup;
    
        __tid_SequenceRecorderGroup_0__: boolean;
    }
    
    class SettingsForActorClass {
        constructor();
        constructor(Class: UE.Class, bRecordToPossessable: boolean);
        Class: UE.Class;
        bRecordToPossessable: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SettingsForActorClass_0__: boolean;
    }
    
    class SequenceRecorderSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCreateLevelSequence: boolean;
        bImmersiveMode: boolean;
        SequenceLength: number;
        RecordingDelay: number;
        bAllowLooping: boolean;
        GlobalTimeDilation: number;
        bIgnoreTimeDilation: boolean;
        AnimationSubDirectory: string;
        RecordAudio: UE.EAudioRecordingMode;
        AudioGain: number;
        bSplitAudioChannelsIntoSeparateTracks: boolean;
        bReplaceRecordedAudio: boolean;
        AudioTrackName: string;
        AudioSubDirectory: string;
        bRecordNearbySpawnedActors: boolean;
        NearbyActorRecordingProximity: number;
        bRecordWorldSettingsActor: boolean;
        bReduceKeys: boolean;
        bAutoSaveAsset: boolean;
        ActorFilter: UE.SequenceRecorderActorFilter;
        LevelSequenceActorsToTrigger: TArray<TLazyObjectPtr<UE.LevelSequenceActor>>;
        DefaultAnimationSettings: UE.AnimationRecordingSettings;
        bRecordSequencerSpawnedActors: boolean;
        ClassesAndPropertiesToRecord: TArray<UE.PropertiesToRecordForClass>;
        ActorsAndPropertiesToRecord: TArray<UE.PropertiesToRecordForActorClass>;
        PerActorSettings: TArray<UE.SettingsForActorClass>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequenceRecorderSettings;
        static Load(InName: string): SequenceRecorderSettings;
    
        __tid_SequenceRecorderSettings_0__: boolean;
    }
    
    class SequencerExportTask extends UE.AssetExportTask {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SequencerContext: UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequencerExportTask;
        static Load(InName: string): SequencerExportTask;
    
        __tid_SequencerExportTask_0__: boolean;
    }
    
    class SequencerKeyActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        KeyMeshComponent: UE.StaticMeshComponent;
        AssociatedActor: UE.Actor;
        TrackSection: UE.MovieScene3DTransformSection;
        KeyTime: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequencerKeyActor;
        static Load(InName: string): SequencerKeyActor;
    
        __tid_SequencerKeyActor_0__: boolean;
    }
    
    class SequencerMeshTrail extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequencerMeshTrail;
        static Load(InName: string): SequencerMeshTrail;
    
        __tid_SequencerMeshTrail_0__: boolean;
    }
    
    class SequencerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AutoChangeMode: UE.EAutoChangeMode;
        AllowEditsMode: UE.EAllowEditsMode;
        KeyGroupMode: UE.EKeyGroupMode;
        bKeyInterpPropertiesOnly: boolean;
        KeyInterpolation: UE.EMovieSceneKeyInterpolation;
        bAutoSetTrackDefaults: boolean;
        SpawnPosition: UE.ESequencerSpawnPosition;
        bCreateSpawnableCameras: boolean;
        bShowRangeSlider: boolean;
        bIsSnapEnabled: boolean;
        bSnapKeyTimesToInterval: boolean;
        bSnapKeyTimesToKeys: boolean;
        bSnapSectionTimesToInterval: boolean;
        bSnapSectionTimesToSections: boolean;
        bSnapKeysAndSectionsToPlayRange: boolean;
        bSnapPlayTimeToKeys: boolean;
        bSnapPlayTimeToInterval: boolean;
        bSnapPlayTimeToPressedKey: boolean;
        bSnapPlayTimeToDraggedKey: boolean;
        bSnapCurveValueToInterval: boolean;
        bShowSelectedNodesOnly: boolean;
        bRewindOnRecord: boolean;
        ZoomPosition: UE.ESequencerZoomPosition;
        bAutoScrollEnabled: boolean;
        bLinkCurveEditorTimeRange: boolean;
        bSynchronizeCurveEditorSelection: boolean;
        bIsolateCurveEditorToSelection: boolean;
        LoopMode: UE.ESequencerLoopMode;
        bKeepCursorInPlayRangeWhileScrubbing: boolean;
        bKeepCursorInPlayRange: boolean;
        bKeepPlayRangeInSectionBounds: boolean;
        ZeroPadFrames: number;
        bShowCombinedKeyframes: boolean;
        bInfiniteKeyAreas: boolean;
        bShowChannelColors: boolean;
        ReduceKeysTolerance: number;
        bDeleteKeysWhenTrimming: boolean;
        bDisableSectionsAfterBaking: boolean;
        bCleanPlaybackMode: boolean;
        bActivateRealtimeViewports: boolean;
        bEvaluateSubSequencesInIsolation: boolean;
        bRerunConstructionScripts: boolean;
        bShowDebugVisualization: boolean;
        bVisualizePreAndPostRoll: boolean;
        bCompileDirectorOnEvaluate: boolean;
        TrajectoryPathCap: number;
        bShowOutlinerInfoColumn: boolean;
        FrameNumberDisplayFormat: UE.EFrameNumberDisplayFormats;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequencerSettings;
        static Load(InName: string): SequencerSettings;
    
        __tid_SequencerSettings_0__: boolean;
    }
    
    class SequencerSettingsContainer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SequencerSettingsContainer;
        static Load(InName: string): SequencerSettingsContainer;
    
        __tid_SequencerSettingsContainer_0__: boolean;
    }
    
    class SessionServiceLog {
        constructor();
        constructor(Category: string, Data: string, InstanceId: UE.Guid, TimeSeconds: number, Verbosity: number);
        Category: string;
        Data: string;
        InstanceId: UE.Guid;
        TimeSeconds: number;
        Verbosity: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SessionServiceLog_0__: boolean;
    }
    
    class SessionServiceLogSubscribe {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SessionServiceLogSubscribe_0__: boolean;
    }
    
    class SessionServiceLogUnsubscribe {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SessionServiceLogUnsubscribe_0__: boolean;
    }
    
    class SessionServicePing {
        constructor();
        constructor(UserName: string);
        UserName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SessionServicePing_0__: boolean;
    }
    
    class SessionServicePong {
        constructor();
        constructor(Authorized: boolean, BuildDate: string, DeviceName: string, InstanceId: UE.Guid, InstanceName: string, PlatformName: string, SessionId: UE.Guid, SessionName: string, SessionOwner: string, Standalone: boolean);
        Authorized: boolean;
        BuildDate: string;
        DeviceName: string;
        InstanceId: UE.Guid;
        InstanceName: string;
        PlatformName: string;
        SessionId: UE.Guid;
        SessionName: string;
        SessionOwner: string;
        Standalone: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SessionServicePong_0__: boolean;
    }
    
    class SetProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SetProperty;
        static Load(InName: string): SetProperty;
    
        __tid_SetProperty_0__: boolean;
    }
    
    class ShaderCodeLibraryToolsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ShaderCodeLibraryToolsCommandlet;
        static Load(InName: string): ShaderCodeLibraryToolsCommandlet;
    
        __tid_ShaderCodeLibraryToolsCommandlet_0__: boolean;
    }
    
    class ShaderCookerStats extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Name: string;
        Platform: string;
        Category: string;
        Compiled: number;
        Cooked: number;
        Permutations: number;
        CompileTime: number;
        Path: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ShaderCookerStats;
        static Load(InName: string): ShaderCookerStats;
    
        __tid_ShaderCookerStats_0__: boolean;
    }
    
    class ShaderPipelineCacheToolsCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ShaderPipelineCacheToolsCommandlet;
        static Load(InName: string): ShaderPipelineCacheToolsCommandlet;
    
        __tid_ShaderPipelineCacheToolsCommandlet_0__: boolean;
    }
    
    class ShadowMapTexture2D extends UE.Texture2D {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ShadowmapFlags: UE.EShadowMapFlags;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ShadowMapTexture2D;
        static Load(InName: string): ShadowMapTexture2D;
    
        __tid_ShadowMapTexture2D_0__: boolean;
    }
    
    class SharedProfiles extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Profiles: TArray<UE.PreviewSceneProfile>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SharedProfiles;
        static Load(InName: string): SharedProfiles;
    
        __tid_SharedProfiles_0__: boolean;
    }
    
    class SheetBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        X: number;
        Y: number;
        XSegments: number;
        YSegments: number;
        Axis: UE.ESheetAxis;
        GroupName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SheetBuilder;
        static Load(InName: string): SheetBuilder;
    
        __tid_SheetBuilder_0__: boolean;
    }
    
    class ShowLoginUICallbackProxy extends UE.BlueprintAsyncActionBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnSuccess: $MulticastDelegate<(PlayerController: $Nullable<UE.PlayerController>) => void>;
        OnFailure: $MulticastDelegate<(PlayerController: $Nullable<UE.PlayerController>) => void>;
        static ShowExternalLoginUI(WorldContextObject: $Nullable<UE.Object>, InPlayerController: $Nullable<UE.PlayerController>) : UE.ShowLoginUICallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ShowLoginUICallbackProxy;
        static Load(InName: string): ShowLoginUICallbackProxy;
    
        __tid_ShowLoginUICallbackProxy_0__: boolean;
    }
    
    class SignificanceManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SignificanceManagerClassName: UE.SoftClassPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SignificanceManager;
        static Load(InName: string): SignificanceManager;
    
        __tid_SignificanceManager_0__: boolean;
    }
    
    class WheelSetup {
        constructor();
        constructor(WheelClass: UE.Class, BoneName: string, AdditionalOffset: UE.Vector, bDisableSteering: boolean);
        WheelClass: UE.Class;
        BoneName: string;
        AdditionalOffset: UE.Vector;
        bDisableSteering: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WheelSetup_0__: boolean;
    }
    
    class TireType extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FrictionScale: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TireType;
        static Load(InName: string): TireType;
    
        __tid_TireType_0__: boolean;
    }
    
    class TireConfigMaterialFriction {
        constructor();
        constructor(PhysicalMaterial: UE.PhysicalMaterial, FrictionScale: number);
        PhysicalMaterial: UE.PhysicalMaterial;
        FrictionScale: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TireConfigMaterialFriction_0__: boolean;
    }
    
    class TireConfig extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FrictionScale: number;
        TireFrictionScales: TArray<UE.TireConfigMaterialFriction>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TireConfig;
        static Load(InName: string): TireConfig;
    
        __tid_TireConfig_0__: boolean;
    }
    
    class VehicleWheel extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CollisionMesh: UE.StaticMesh;
        bDontCreateShape: boolean;
        bAutoAdjustCollisionSize: boolean;
        Offset: UE.Vector;
        ShapeRadius: number;
        ShapeWidth: number;
        Mass: number;
        DampingRate: number;
        SteerAngle: number;
        bAffectedByHandbrake: boolean;
        TireType: UE.TireType;
        TireConfig: UE.TireConfig;
        LatStiffMaxLoad: number;
        LatStiffValue: number;
        LongStiffValue: number;
        SuspensionForceOffset: number;
        SuspensionMaxRaise: number;
        SuspensionMaxDrop: number;
        SuspensionNaturalFrequency: number;
        SuspensionDampingRatio: number;
        SweepType: UE.EWheelSweepType;
        MaxBrakeTorque: number;
        MaxHandBrakeTorque: number;
        VehicleSim: UE.WheeledVehicleMovementComponent;
        WheelIndex: number;
        DebugLongSlip: number;
        DebugLatSlip: number;
        DebugNormalizedTireLoad: number;
        DebugWheelTorque: number;
        DebugLongForce: number;
        DebugLatForce: number;
        Location: UE.Vector;
        OldLocation: UE.Vector;
        Velocity: UE.Vector;
        GetRotationAngle() : number;
        GetSteerAngle() : number;
        GetSuspensionOffset() : number;
        IsInAir() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VehicleWheel;
        static Load(InName: string): VehicleWheel;
    
        __tid_VehicleWheel_0__: boolean;
    }
    
    class VehicleInputRate {
        constructor();
        constructor(RiseRate: number, FallRate: number);
        RiseRate: number;
        FallRate: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VehicleInputRate_0__: boolean;
    }
    
    class WheeledVehicleMovementComponent extends UE.PawnMovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bDeprecatedSpringOffsetMode: boolean;
        bReverseAsBrake: boolean;
        bUseRVOAvoidance: boolean;
        bRawHandbrakeInput: boolean;
        bRawGearUpInput: boolean;
        bRawGearDownInput: boolean;
        bWasAvoidanceUpdated: boolean;
        Mass: number;
        WheelSetups: TArray<UE.WheelSetup>;
        DragCoefficient: number;
        ChassisWidth: number;
        ChassisHeight: number;
        DragArea: number;
        EstimatedMaxEngineSpeed: number;
        MaxEngineRPM: number;
        DebugDragMagnitude: number;
        InertiaTensorScale: UE.Vector;
        MinNormalizedTireLoad: number;
        MinNormalizedTireLoadFiltered: number;
        MaxNormalizedTireLoad: number;
        MaxNormalizedTireLoadFiltered: number;
        ThresholdLongitudinalSpeed: number;
        LowForwardSpeedSubStepCount: number;
        HighForwardSpeedSubStepCount: number;
        Wheels: TArray<UE.VehicleWheel>;
        RVOAvoidanceRadius: number;
        RVOAvoidanceHeight: number;
        AvoidanceConsiderationRadius: number;
        RVOSteeringStep: number;
        RVOThrottleStep: number;
        AvoidanceUID: number;
        AvoidanceGroup: UE.NavAvoidanceMask;
        GroupsToAvoid: UE.NavAvoidanceMask;
        GroupsToIgnore: UE.NavAvoidanceMask;
        AvoidanceWeight: number;
        PendingLaunchVelocity: UE.Vector;
        ReplicatedState: UE.ReplicatedVehicleState;
        RawSteeringInput: number;
        RawThrottleInput: number;
        RawBrakeInput: number;
        SteeringInput: number;
        ThrottleInput: number;
        BrakeInput: number;
        HandbrakeInput: number;
        IdleBrakeInput: number;
        StopThreshold: number;
        WrongDirectionThreshold: number;
        ThrottleInputRate: UE.VehicleInputRate;
        BrakeInputRate: UE.VehicleInputRate;
        HandbrakeInputRate: UE.VehicleInputRate;
        SteeringInputRate: UE.VehicleInputRate;
        OverrideController: UE.Controller;
        GetCurrentGear() : number;
        GetEngineMaxRotationSpeed() : number;
        GetEngineRotationSpeed() : number;
        GetForwardSpeed() : number;
        GetTargetGear() : number;
        GetUseAutoGears() : boolean;
        ServerUpdateState(InSteeringInput: number, InThrottleInput: number, InBrakeInput: number, InHandbrakeInput: number, CurrentGear: number) : void;
        SetAvoidanceEnabled(bEnable: boolean) : void;
        SetAvoidanceGroup(GroupFlags: number) : void;
        SetAvoidanceGroupMask(GroupMask: UE.NavAvoidanceMask) : void;
        SetBrakeInput(Brake: number) : void;
        SetGearDown(bNewGearDown: boolean) : void;
        SetGearUp(bNewGearUp: boolean) : void;
        SetGroupsToAvoid(GroupFlags: number) : void;
        SetGroupsToAvoidMask(GroupMask: UE.NavAvoidanceMask) : void;
        SetGroupsToIgnore(GroupFlags: number) : void;
        SetGroupsToIgnoreMask(GroupMask: UE.NavAvoidanceMask) : void;
        SetHandbrakeInput(bNewHandbrake: boolean) : void;
        SetSteeringInput(Steering: number) : void;
        SetTargetGear(GearNum: number, bImmediate: boolean) : void;
        SetThrottleInput(Throttle: number) : void;
        SetUseAutoGears(bUseAuto: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WheeledVehicleMovementComponent;
        static Load(InName: string): WheeledVehicleMovementComponent;
    
        __tid_WheeledVehicleMovementComponent_0__: boolean;
    }
    
    class SimpleWheeledVehicleMovementComponent extends UE.WheeledVehicleMovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SetBrakeTorque(BrakeTorque: number, WheelIndex: number) : void;
        SetDriveTorque(DriveTorque: number, WheelIndex: number) : void;
        SetSteerAngle(SteerAngle: number, WheelIndex: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SimpleWheeledVehicleMovementComponent;
        static Load(InName: string): SimpleWheeledVehicleMovementComponent;
    
        __tid_SimpleWheeledVehicleMovementComponent_0__: boolean;
    }
    
    class SimulatedClientNetConnection extends UE.NetConnection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SimulatedClientNetConnection;
        static Load(InName: string): SimulatedClientNetConnection;
    
        __tid_SimulatedClientNetConnection_0__: boolean;
    }
    
    class SingleClickInputBehavior extends UE.AnyButtonInputBehavior {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HitTestOnRelease: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SingleClickInputBehavior;
        static Load(InName: string): SingleClickInputBehavior;
    
        __tid_SingleClickInputBehavior_0__: boolean;
    }
    
    class SingleClickToolBuilder extends UE.InteractiveToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SingleClickToolBuilder;
        static Load(InName: string): SingleClickToolBuilder;
    
        __tid_SingleClickToolBuilder_0__: boolean;
    }
    
    class SinglePropertyView extends UE.PropertyViewBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PropertyName: string;
        NameOverride: string;
        GetPropertyName() : string;
        SetPropertyName(NewPropertyName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SinglePropertyView;
        static Load(InName: string): SinglePropertyView;
    
        __tid_SinglePropertyView_0__: boolean;
    }
    
    class SizeBox extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidthOverride: number;
        HeightOverride: number;
        MinDesiredWidth: number;
        MinDesiredHeight: number;
        MaxDesiredWidth: number;
        MaxDesiredHeight: number;
        MinAspectRatio: number;
        MaxAspectRatio: number;
        bOverride_WidthOverride: boolean;
        bOverride_HeightOverride: boolean;
        bOverride_MinDesiredWidth: boolean;
        bOverride_MinDesiredHeight: boolean;
        bOverride_MaxDesiredWidth: boolean;
        bOverride_MaxDesiredHeight: boolean;
        bOverride_MinAspectRatio: boolean;
        bOverride_MaxAspectRatio: boolean;
        ClearHeightOverride() : void;
        ClearMaxAspectRatio() : void;
        ClearMaxDesiredHeight() : void;
        ClearMaxDesiredWidth() : void;
        ClearMinAspectRatio() : void;
        ClearMinDesiredHeight() : void;
        ClearMinDesiredWidth() : void;
        ClearWidthOverride() : void;
        SetHeightOverride(InHeightOverride: number) : void;
        SetMaxAspectRatio(InMaxAspectRatio: number) : void;
        SetMaxDesiredHeight(InMaxDesiredHeight: number) : void;
        SetMaxDesiredWidth(InMaxDesiredWidth: number) : void;
        SetMinAspectRatio(InMinAspectRatio: number) : void;
        SetMinDesiredHeight(InMinDesiredHeight: number) : void;
        SetMinDesiredWidth(InMinDesiredWidth: number) : void;
        SetWidthOverride(InWidthOverride: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SizeBox;
        static Load(InName: string): SizeBox;
    
        __tid_SizeBox_0__: boolean;
    }
    
    class SizeBoxSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SizeBoxSlot;
        static Load(InName: string): SizeBoxSlot;
    
        __tid_SizeBoxSlot_0__: boolean;
    }
    
    class SkeletalMeshClothBuildParams {
        constructor();
        constructor(TargetAsset: TWeakObjectPtr<UE.ClothingAssetBase>, TargetLod: number, bRemapParameters: boolean, AssetName: string, LodIndex: number, SourceSection: number, bRemoveFromMesh: boolean, PhysicsAsset: TSoftObjectPtr<UE.PhysicsAsset>);
        TargetAsset: TWeakObjectPtr<UE.ClothingAssetBase>;
        TargetLod: number;
        bRemapParameters: boolean;
        AssetName: string;
        LodIndex: number;
        SourceSection: number;
        bRemoveFromMesh: boolean;
        PhysicsAsset: TSoftObjectPtr<UE.PhysicsAsset>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshClothBuildParams_0__: boolean;
    }
    
    class SkeletalMeshComponentClothTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshComponentClothTickFunction_0__: boolean;
    }
    
    class SkeletalMeshComponentEndPhysicsTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletalMeshComponentEndPhysicsTickFunction_0__: boolean;
    }
    
    class SkeletalMeshEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AnimPreviewFloorColor: UE.Color;
        AnimPreviewSkyColor: UE.Color;
        AnimPreviewSkyBrightness: number;
        AnimPreviewLightBrightness: number;
        AnimPreviewLightingDirection: UE.Rotator;
        AnimPreviewDirectionalColor: UE.Color;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshEditorSettings;
        static Load(InName: string): SkeletalMeshEditorSettings;
    
        __tid_SkeletalMeshEditorSettings_0__: boolean;
    }
    
    class SkeletalMeshExporterFBX extends UE.ExporterFBX {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshExporterFBX;
        static Load(InName: string): SkeletalMeshExporterFBX;
    
        __tid_SkeletalMeshExporterFBX_0__: boolean;
    }
    
    class SkeletalMeshSimplificationSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SkeletalMeshReductionModuleName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshSimplificationSettings;
        static Load(InName: string): SkeletalMeshSimplificationSettings;
    
        __tid_SkeletalMeshSimplificationSettings_0__: boolean;
    }
    
    class SkeletalMeshSimulationComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PhysicalMaterial: UE.ChaosPhysicalMaterial;
        ChaosSolverActor: UE.ChaosSolverActor;
        OverridePhysicsAsset: UE.PhysicsAsset;
        bSimulating: boolean;
        bNotifyCollisions: boolean;
        ObjectType: UE.EObjectStateTypeEnum;
        Density: number;
        MinMass: number;
        MaxMass: number;
        CollisionType: UE.ECollisionTypeEnum;
        ImplicitShapeParticlesPerUnitArea: number;
        ImplicitShapeMinNumParticles: number;
        ImplicitShapeMaxNumParticles: number;
        MinLevelSetResolution: number;
        MaxLevelSetResolution: number;
        CollisionGroup: number;
        InitialVelocityType: UE.EInitialVelocityTypeEnum;
        InitialLinearVelocity: UE.Vector;
        InitialAngularVelocity: UE.Vector;
        OnChaosPhysicsCollision: $MulticastDelegate<(CollisionInfo: UE.ChaosPhysicsCollisionInfo) => void>;
        ReceivePhysicsCollision(CollisionInfo: UE.ChaosPhysicsCollisionInfo) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshSimulationComponent;
        static Load(InName: string): SkeletalMeshSimulationComponent;
    
        __tid_SkeletalMeshSimulationComponent_0__: boolean;
    }
    
    class SkeletalMeshThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshThumbnailRenderer;
        static Load(InName: string): SkeletalMeshThumbnailRenderer;
    
        __tid_SkeletalMeshThumbnailRenderer_0__: boolean;
    }
    
    class SkeletalMeshToolMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletalMeshToolMenuContext;
        static Load(InName: string): SkeletalMeshToolMenuContext;
    
        __tid_SkeletalMeshToolMenuContext_0__: boolean;
    }
    
    class SkeletonFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetSkeletalMesh: UE.SkeletalMesh;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkeletonFactory;
        static Load(InName: string): SkeletonFactory;
    
        __tid_SkeletonFactory_0__: boolean;
    }
    
    class SkeletonToMeshLinkup {
        constructor();
        constructor(SkeletonToMeshTable: TArray<number>, MeshToSkeletonTable: TArray<number>);
        SkeletonToMeshTable: TArray<number>;
        MeshToSkeletonTable: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkeletonToMeshLinkup_0__: boolean;
    }
    
    class SkinWeightImportOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ProfileName: string;
        FilePath: string;
        LODIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkinWeightImportOptions;
        static Load(InName: string): SkinWeightImportOptions;
    
        __tid_SkinWeightImportOptions_0__: boolean;
    }
    
    class SkinWeightProfileManagerTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SkinWeightProfileManagerTickFunction_0__: boolean;
    }
    
    class TentDistribution {
        constructor();
        constructor(TipAltitude: number, TipValue: number, Width: number);
        TipAltitude: number;
        TipValue: number;
        Width: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TentDistribution_0__: boolean;
    }
    
    class SkyAtmosphereComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TransformMode: UE.ESkyAtmosphereTransformMode;
        BottomRadius: number;
        GroundAlbedo: UE.Color;
        AtmosphereHeight: number;
        MultiScatteringFactor: number;
        TraceSampleCountScale: number;
        RayleighScatteringScale: number;
        RayleighScattering: UE.LinearColor;
        RayleighExponentialDistribution: number;
        MieScatteringScale: number;
        MieScattering: UE.LinearColor;
        MieAbsorptionScale: number;
        MieAbsorption: UE.LinearColor;
        MieAnisotropy: number;
        MieExponentialDistribution: number;
        OtherAbsorptionScale: number;
        OtherAbsorption: UE.LinearColor;
        OtherTentDistribution: UE.TentDistribution;
        SkyLuminanceFactor: UE.LinearColor;
        AerialPespectiveViewDistanceScale: number;
        HeightFogContribution: number;
        TransmittanceMinLightElevationAngle: number;
        AerialPerspectiveStartDepth: number;
        bStaticLightingBuiltGUID: UE.Guid;
        OverrideAtmosphereLightDirection(AtmosphereLightIndex: number, LightDirection: UE.Vector) : void;
        SetAerialPespectiveViewDistanceScale(NewValue: number) : void;
        SetHeightFogContribution(NewValue: number) : void;
        SetMieAbsorption(NewValue: UE.LinearColor) : void;
        SetMieAbsorptionScale(NewValue: number) : void;
        SetMieAnisotropy(NewValue: number) : void;
        SetMieExponentialDistribution(NewValue: number) : void;
        SetMieScattering(NewValue: UE.LinearColor) : void;
        SetMieScatteringScale(NewValue: number) : void;
        SetOtherAbsorption(NewValue: UE.LinearColor) : void;
        SetOtherAbsorptionScale(NewValue: number) : void;
        SetRayleighExponentialDistribution(NewValue: number) : void;
        SetRayleighScattering(NewValue: UE.LinearColor) : void;
        SetRayleighScatteringScale(NewValue: number) : void;
        SetSkyLuminanceFactor(NewValue: UE.LinearColor) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkyAtmosphereComponent;
        static Load(InName: string): SkyAtmosphereComponent;
    
        __tid_SkyAtmosphereComponent_0__: boolean;
    }
    
    class SkyAtmosphere extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SkyAtmosphereComponent: UE.SkyAtmosphereComponent;
        ArrowComponent: UE.ArrowComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SkyAtmosphere;
        static Load(InName: string): SkyAtmosphere;
    
        __tid_SkyAtmosphere_0__: boolean;
    }
    
    class SlateBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AbsoluteToLocal(Geometry: UE.Geometry, AbsoluteCoordinate: UE.Vector2D) : UE.Vector2D;
        static AbsoluteToViewport(WorldContextObject: $Nullable<UE.Object>, AbsoluteDesktopCoordinate: UE.Vector2D, PixelPosition: $Ref<UE.Vector2D>, ViewportPosition: $Ref<UE.Vector2D>) : void;
        static EqualEqual_SlateBrush(A: UE.SlateBrush, B: UE.SlateBrush) : boolean;
        static GetAbsoluteSize(Geometry: UE.Geometry) : UE.Vector2D;
        static GetLocalSize(Geometry: UE.Geometry) : UE.Vector2D;
        static GetLocalTopLeft(Geometry: UE.Geometry) : UE.Vector2D;
        static IsUnderLocation(Geometry: UE.Geometry, AbsoluteCoordinate: UE.Vector2D) : boolean;
        static LocalToAbsolute(Geometry: UE.Geometry, LocalCoordinate: UE.Vector2D) : UE.Vector2D;
        static LocalToViewport(WorldContextObject: $Nullable<UE.Object>, Geometry: UE.Geometry, LocalCoordinate: UE.Vector2D, PixelPosition: $Ref<UE.Vector2D>, ViewportPosition: $Ref<UE.Vector2D>) : void;
        static ScreenToViewport(WorldContextObject: $Nullable<UE.Object>, ScreenPosition: UE.Vector2D, ViewportPosition: $Ref<UE.Vector2D>) : void;
        static ScreenToWidgetAbsolute(WorldContextObject: $Nullable<UE.Object>, ScreenPosition: UE.Vector2D, AbsoluteCoordinate: $Ref<UE.Vector2D>, bIncludeWindowPosition: boolean) : void;
        static ScreenToWidgetLocal(WorldContextObject: $Nullable<UE.Object>, Geometry: UE.Geometry, ScreenPosition: UE.Vector2D, LocalCoordinate: $Ref<UE.Vector2D>, bIncludeWindowPosition: boolean) : void;
        static TransformScalarAbsoluteToLocal(Geometry: UE.Geometry, AbsoluteScalar: number) : number;
        static TransformScalarLocalToAbsolute(Geometry: UE.Geometry, LocalScalar: number) : number;
        static TransformVectorAbsoluteToLocal(Geometry: UE.Geometry, AbsoluteVector: UE.Vector2D) : UE.Vector2D;
        static TransformVectorLocalToAbsolute(Geometry: UE.Geometry, LocalVector: UE.Vector2D) : UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateBlueprintLibrary;
        static Load(InName: string): SlateBlueprintLibrary;
    
        __tid_SlateBlueprintLibrary_0__: boolean;
    }
    
    class SlateBrushAssetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialTexture: UE.Texture2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateBrushAssetFactory;
        static Load(InName: string): SlateBrushAssetFactory;
    
        __tid_SlateBrushAssetFactory_0__: boolean;
    }
    
    class SlateBrushThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateBrushThumbnailRenderer;
        static Load(InName: string): SlateBrushThumbnailRenderer;
    
        __tid_SlateBrushThumbnailRenderer_0__: boolean;
    }
    
    class SlateMeshVertex {
        constructor();
        constructor(Position: UE.Vector2D, Color: UE.Color, UV0: UE.Vector2D, UV1: UE.Vector2D, UV2: UE.Vector2D, UV3: UE.Vector2D, UV4: UE.Vector2D, UV5: UE.Vector2D);
        Position: UE.Vector2D;
        Color: UE.Color;
        UV0: UE.Vector2D;
        UV1: UE.Vector2D;
        UV2: UE.Vector2D;
        UV3: UE.Vector2D;
        UV4: UE.Vector2D;
        UV5: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlateMeshVertex_0__: boolean;
    }
    
    class SlatePlayInEditorInfo {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlatePlayInEditorInfo_0__: boolean;
    }
    
    class SlateSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bExplicitCanvasChildZOrder: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateSettings;
        static Load(InName: string): SlateSettings;
    
        __tid_SlateSettings_0__: boolean;
    }
    
    class SlateTabManagerContext extends UE.ToolMenuContextBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateTabManagerContext;
        static Load(InName: string): SlateTabManagerContext;
    
        __tid_SlateTabManagerContext_0__: boolean;
    }
    
    class SlateTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateTypes;
        static Load(InName: string): SlateTypes;
    
        __tid_SlateTypes_0__: boolean;
    }
    
    class SlateVectorArtData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MeshAsset: UE.StaticMesh;
        SourceMaterial: UE.MaterialInterface;
        VertexData: TArray<UE.SlateMeshVertex>;
        IndexData: TArray<number>;
        Material: UE.MaterialInterface;
        ExtentMin: UE.Vector2D;
        ExtentMax: UE.Vector2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateVectorArtData;
        static Load(InName: string): SlateVectorArtData;
    
        __tid_SlateVectorArtData_0__: boolean;
    }
    
    class SlateVectorArtDataFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateVectorArtDataFactory;
        static Load(InName: string): SlateVectorArtDataFactory;
    
        __tid_SlateVectorArtDataFactory_0__: boolean;
    }
    
    class SlateWidgetStyleAssetFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StyleType: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateWidgetStyleAssetFactory;
        static Load(InName: string): SlateWidgetStyleAssetFactory;
    
        __tid_SlateWidgetStyleAssetFactory_0__: boolean;
    }
    
    class SlateWidgetStyleContainerInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SlateWidgetStyleContainerInterface;
        static Load(InName: string): SlateWidgetStyleContainerInterface;
    
        __tid_SlateWidgetStyleContainerInterface_0__: boolean;
    }
    
    class SliderStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(NormalBarImage: UE.SlateBrush, HoveredBarImage: UE.SlateBrush, DisabledBarImage: UE.SlateBrush, NormalThumbImage: UE.SlateBrush, HoveredThumbImage: UE.SlateBrush, DisabledThumbImage: UE.SlateBrush, BarThickness: number);
        NormalBarImage: UE.SlateBrush;
        HoveredBarImage: UE.SlateBrush;
        DisabledBarImage: UE.SlateBrush;
        NormalThumbImage: UE.SlateBrush;
        HoveredThumbImage: UE.SlateBrush;
        DisabledThumbImage: UE.SlateBrush;
        BarThickness: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SliderStyle_0__: boolean;
    }
    
    class Slider extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: number;
        ValueDelegate: $Delegate<() => number>;
        MinValue: number;
        MaxValue: number;
        WidgetStyle: UE.SliderStyle;
        Orientation: UE.EOrientation;
        SliderBarColor: UE.LinearColor;
        SliderHandleColor: UE.LinearColor;
        IndentHandle: boolean;
        Locked: boolean;
        MouseUsesStep: boolean;
        RequiresControllerLock: boolean;
        StepSize: number;
        IsFocusable: boolean;
        OnMouseCaptureBegin: $MulticastDelegate<() => void>;
        OnMouseCaptureEnd: $MulticastDelegate<() => void>;
        OnControllerCaptureBegin: $MulticastDelegate<() => void>;
        OnControllerCaptureEnd: $MulticastDelegate<() => void>;
        OnValueChanged: $MulticastDelegate<(Value: number) => void>;
        GetNormalizedValue() : number;
        GetValue() : number;
        SetIndentHandle(InValue: boolean) : void;
        SetLocked(InValue: boolean) : void;
        SetMaxValue(InValue: number) : void;
        SetMinValue(InValue: number) : void;
        SetSliderBarColor(InValue: UE.LinearColor) : void;
        SetSliderHandleColor(InValue: UE.LinearColor) : void;
        SetStepSize(InValue: number) : void;
        SetValue(InValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Slider;
        static Load(InName: string): Slider;
    
        __tid_Slider_0__: boolean;
    }
    
    class SlotEvaluationPose {
        constructor();
        constructor(AdditiveType: UE.EAdditiveAnimationType, Weight: number);
        AdditiveType: UE.EAdditiveAnimationType;
        Weight: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SlotEvaluationPose_0__: boolean;
    }
    
    class SmartNameMapping {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SmartNameMapping_0__: boolean;
    }
    
    class SmokeTestCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SmokeTestCommandlet;
        static Load(InName: string): SmokeTestCommandlet;
    
        __tid_SmokeTestCommandlet_0__: boolean;
    }
    
    class SoftObjectProperty extends UE.ObjectPropertyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoftObjectProperty;
        static Load(InName: string): SoftObjectProperty;
    
        __tid_SoftObjectProperty_0__: boolean;
    }
    
    class SoftClassProperty extends UE.SoftObjectProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoftClassProperty;
        static Load(InName: string): SoftClassProperty;
    
        __tid_SoftClassProperty_0__: boolean;
    }
    
    class SortedParamData {
        constructor();
        constructor(Parameter: UE.DEditorParameterValue);
        Parameter: UE.DEditorParameterValue;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SortedParamData_0__: boolean;
    }
    
    class SoundAttenuationFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundAttenuationFactory;
        static Load(InName: string): SoundAttenuationFactory;
    
        __tid_SoundAttenuationFactory_0__: boolean;
    }
    
    class SoundClassEditorData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundClassEditorData_0__: boolean;
    }
    
    class SoundClassFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundClassFactory;
        static Load(InName: string): SoundClassFactory;
    
        __tid_SoundClassFactory_0__: boolean;
    }
    
    class SoundClassGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundClassGraph;
        static Load(InName: string): SoundClassGraph;
    
        __tid_SoundClassGraph_0__: boolean;
    }
    
    class SoundClassGraphNode extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundClass: UE.SoundClass;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundClassGraphNode;
        static Load(InName: string): SoundClassGraphNode;
    
        __tid_SoundClassGraphNode_0__: boolean;
    }
    
    class SoundClassGraphSchema extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundClassGraphSchema;
        static Load(InName: string): SoundClassGraphSchema;
    
        __tid_SoundClassGraphSchema_0__: boolean;
    }
    
    class SoundClassGraphSchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundClassGraphSchemaAction_NewNode_0__: boolean;
    }
    
    class SoundConcurrencyFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundConcurrencyFactory;
        static Load(InName: string): SoundConcurrencyFactory;
    
        __tid_SoundConcurrencyFactory_0__: boolean;
    }
    
    class SoundCueFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialSoundWave: UE.SoundWave;
        InitialDialogueWave: UE.DialogueWave;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundCueFactoryNew;
        static Load(InName: string): SoundCueFactoryNew;
    
        __tid_SoundCueFactoryNew_0__: boolean;
    }
    
    class SoundCueGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundCueGraph;
        static Load(InName: string): SoundCueGraph;
    
        __tid_SoundCueGraph_0__: boolean;
    }
    
    class SoundCueGraphNode_Base extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundCueGraphNode_Base;
        static Load(InName: string): SoundCueGraphNode_Base;
    
        __tid_SoundCueGraphNode_Base_0__: boolean;
    }
    
    class SoundCueGraphNode extends UE.SoundCueGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundNode: UE.SoundNode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundCueGraphNode;
        static Load(InName: string): SoundCueGraphNode;
    
        __tid_SoundCueGraphNode_0__: boolean;
    }
    
    class SoundCueGraphNode_Root extends UE.SoundCueGraphNode_Base {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundCueGraphNode_Root;
        static Load(InName: string): SoundCueGraphNode_Root;
    
        __tid_SoundCueGraphNode_Root_0__: boolean;
    }
    
    class SoundCueGraphSchema extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundCueGraphSchema;
        static Load(InName: string): SoundCueGraphSchema;
    
        __tid_SoundCueGraphSchema_0__: boolean;
    }
    
    class SoundCueGraphSchemaAction_NewComment extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundCueGraphSchemaAction_NewComment_0__: boolean;
    }
    
    class SoundCueGraphSchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        constructor(SoundNodeClass: UE.Class);
        SoundNodeClass: UE.Class;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundCueGraphSchemaAction_NewNode_0__: boolean;
    }
    
    class SoundCueGraphSchemaAction_NewFromSelected extends UE.SoundCueGraphSchemaAction_NewNode {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundCueGraphSchemaAction_NewFromSelected_0__: boolean;
    }
    
    class SoundCueGraphSchemaAction_Paste extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundCueGraphSchemaAction_Paste_0__: boolean;
    }
    
    class SoundEffectPresetUserWidget extends UE.UserWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Preset: UE.SoundEffectPreset;
        OnPresetChanged(PropertyName: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundEffectPresetUserWidget;
        static Load(InName: string): SoundEffectPresetUserWidget;
    
        __tid_SoundEffectPresetUserWidget_0__: boolean;
    }
    
    class SoundEffectSourcePresetClassTemplate extends UE.ClassTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundEffectSourcePresetClassTemplate;
        static Load(InName: string): SoundEffectSourcePresetClassTemplate;
    
        __tid_SoundEffectSourcePresetClassTemplate_0__: boolean;
    }
    
    class SoundEffectSubmixPresetClassTemplate extends UE.ClassTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundEffectSubmixPresetClassTemplate;
        static Load(InName: string): SoundEffectSubmixPresetClassTemplate;
    
        __tid_SoundEffectSubmixPresetClassTemplate_0__: boolean;
    }
    
    class SoundExporterOGG extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundExporterOGG;
        static Load(InName: string): SoundExporterOGG;
    
        __tid_SoundExporterOGG_0__: boolean;
    }
    
    class SoundExporterWAV extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundExporterWAV;
        static Load(InName: string): SoundExporterWAV;
    
        __tid_SoundExporterWAV_0__: boolean;
    }
    
    class SoundfieldEffectSettingsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldEffectSettingsBase;
        static Load(InName: string): SoundfieldEffectSettingsBase;
    
        __tid_SoundfieldEffectSettingsBase_0__: boolean;
    }
    
    class SoundfieldEffectBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SoundfieldEffectSettingsBase;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldEffectBase;
        static Load(InName: string): SoundfieldEffectBase;
    
        __tid_SoundfieldEffectBase_0__: boolean;
    }
    
    class SoundfieldEndpointSettingsBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldEndpointSettingsBase;
        static Load(InName: string): SoundfieldEndpointSettingsBase;
    
        __tid_SoundfieldEndpointSettingsBase_0__: boolean;
    }
    
    class SoundfieldEndpointSubmix extends UE.SoundSubmixBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundfieldEndpointType: string;
        EndpointSettingsClass: UE.Class;
        EndpointSettings: UE.SoundfieldEndpointSettingsBase;
        EncodingSettingsClass: UE.Class;
        EncodingSettings: UE.SoundfieldEncodingSettingsBase;
        SoundfieldEffectChain: TArray<UE.SoundfieldEffectBase>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldEndpointSubmix;
        static Load(InName: string): SoundfieldEndpointSubmix;
    
        __tid_SoundfieldEndpointSubmix_0__: boolean;
    }
    
    class SoundfieldEndpointSubmixFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldEndpointSubmixFactory;
        static Load(InName: string): SoundfieldEndpointSubmixFactory;
    
        __tid_SoundfieldEndpointSubmixFactory_0__: boolean;
    }
    
    class SoundfieldSubmix extends UE.SoundSubmixWithParentBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundfieldEncodingFormat: string;
        EncodingSettings: UE.SoundfieldEncodingSettingsBase;
        SoundfieldEffectChain: TArray<UE.SoundfieldEffectBase>;
        EncodingSettingsClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldSubmix;
        static Load(InName: string): SoundfieldSubmix;
    
        __tid_SoundfieldSubmix_0__: boolean;
    }
    
    class SoundfieldSubmixFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundfieldSubmixFactory;
        static Load(InName: string): SoundfieldSubmixFactory;
    
        __tid_SoundfieldSubmixFactory_0__: boolean;
    }
    
    class SoundGroup {
        constructor();
        constructor(SoundGroup: UE.ESoundGroup, DisplayName: string, bAlwaysDecompressOnLoad: boolean, DecompressedDuration: number);
        SoundGroup: UE.ESoundGroup;
        DisplayName: string;
        bAlwaysDecompressOnLoad: boolean;
        DecompressedDuration: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundGroup_0__: boolean;
    }
    
    class SoundGroups extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundGroupProfiles: TArray<UE.SoundGroup>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundGroups;
        static Load(InName: string): SoundGroups;
    
        __tid_SoundGroups_0__: boolean;
    }
    
    class SoundMixFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundMixFactory;
        static Load(InName: string): SoundMixFactory;
    
        __tid_SoundMixFactory_0__: boolean;
    }
    
    class SoundNodeAssetReferencer extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeAssetReferencer;
        static Load(InName: string): SoundNodeAssetReferencer;
    
        __tid_SoundNodeAssetReferencer_0__: boolean;
    }
    
    class SoundNodeAttenuation extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AttenuationSettings: UE.SoundAttenuation;
        AttenuationOverrides: UE.SoundAttenuationSettings;
        bOverrideAttenuation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeAttenuation;
        static Load(InName: string): SoundNodeAttenuation;
    
        __tid_SoundNodeAttenuation_0__: boolean;
    }
    
    class SoundNodeBranch extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BoolParameterName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeBranch;
        static Load(InName: string): SoundNodeBranch;
    
        __tid_SoundNodeBranch_0__: boolean;
    }
    
    class SoundNodeConcatenator extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputVolume: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeConcatenator;
        static Load(InName: string): SoundNodeConcatenator;
    
        __tid_SoundNodeConcatenator_0__: boolean;
    }
    
    class SoundNodeDelay extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DelayMin: number;
        DelayMax: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeDelay;
        static Load(InName: string): SoundNodeDelay;
    
        __tid_SoundNodeDelay_0__: boolean;
    }
    
    class SoundNodeDialoguePlayer extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DialogueWaveParameter: UE.DialogueWaveParameter;
        bLooping: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeDialoguePlayer;
        static Load(InName: string): SoundNodeDialoguePlayer;
    
        __tid_SoundNodeDialoguePlayer_0__: boolean;
    }
    
    class SoundNodeDistanceCrossFade extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CrossFadeInput: TArray<UE.DistanceDatum>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeDistanceCrossFade;
        static Load(InName: string): SoundNodeDistanceCrossFade;
    
        __tid_SoundNodeDistanceCrossFade_0__: boolean;
    }
    
    class SoundNodeDoppler extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DopplerIntensity: number;
        bUseSmoothing: boolean;
        SmoothingInterpSpeed: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeDoppler;
        static Load(InName: string): SoundNodeDoppler;
    
        __tid_SoundNodeDoppler_0__: boolean;
    }
    
    class SoundNodeEditorData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundNodeEditorData_0__: boolean;
    }
    
    class SoundNodeEnveloper extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LoopStart: number;
        LoopEnd: number;
        DurationAfterLoop: number;
        LoopCount: number;
        bLoopIndefinitely: boolean;
        bLoop: boolean;
        VolumeInterpCurve: UE.DistributionFloatConstantCurve;
        PitchInterpCurve: UE.DistributionFloatConstantCurve;
        VolumeCurve: UE.RuntimeFloatCurve;
        PitchCurve: UE.RuntimeFloatCurve;
        PitchMin: number;
        PitchMax: number;
        VolumeMin: number;
        VolumeMax: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeEnveloper;
        static Load(InName: string): SoundNodeEnveloper;
    
        __tid_SoundNodeEnveloper_0__: boolean;
    }
    
    class SoundNodeGroupControl extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GroupSizes: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeGroupControl;
        static Load(InName: string): SoundNodeGroupControl;
    
        __tid_SoundNodeGroupControl_0__: boolean;
    }
    
    class SoundNodeLooping extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LoopCount: number;
        bLoopIndefinitely: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeLooping;
        static Load(InName: string): SoundNodeLooping;
    
        __tid_SoundNodeLooping_0__: boolean;
    }
    
    class SoundNodeMature extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeMature;
        static Load(InName: string): SoundNodeMature;
    
        __tid_SoundNodeMature_0__: boolean;
    }
    
    class SoundNodeMixer extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InputVolume: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeMixer;
        static Load(InName: string): SoundNodeMixer;
    
        __tid_SoundNodeMixer_0__: boolean;
    }
    
    class SoundNodeModulator extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PitchMin: number;
        PitchMax: number;
        VolumeMin: number;
        VolumeMax: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeModulator;
        static Load(InName: string): SoundNodeModulator;
    
        __tid_SoundNodeModulator_0__: boolean;
    }
    
    class SoundNodeModulatorContinuous extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PitchModulationParams: UE.ModulatorContinuousParams;
        VolumeModulationParams: UE.ModulatorContinuousParams;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeModulatorContinuous;
        static Load(InName: string): SoundNodeModulatorContinuous;
    
        __tid_SoundNodeModulatorContinuous_0__: boolean;
    }
    
    class SoundNodeOscillator extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bModulateVolume: boolean;
        bModulatePitch: boolean;
        AmplitudeMin: number;
        AmplitudeMax: number;
        FrequencyMin: number;
        FrequencyMax: number;
        OffsetMin: number;
        OffsetMax: number;
        CenterMin: number;
        CenterMax: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeOscillator;
        static Load(InName: string): SoundNodeOscillator;
    
        __tid_SoundNodeOscillator_0__: boolean;
    }
    
    class SoundNodeParamCrossFade extends UE.SoundNodeDistanceCrossFade {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ParamName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeParamCrossFade;
        static Load(InName: string): SoundNodeParamCrossFade;
    
        __tid_SoundNodeParamCrossFade_0__: boolean;
    }
    
    class SoundNodeQualityLevel extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CookedQualityLevelIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeQualityLevel;
        static Load(InName: string): SoundNodeQualityLevel;
    
        __tid_SoundNodeQualityLevel_0__: boolean;
    }
    
    class SoundNodeRandom extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Weights: TArray<number>;
        HasBeenUsed: TArray<boolean>;
        NumRandomUsed: number;
        PreselectAtLevelLoad: number;
        bShouldExcludeFromBranchCulling: boolean;
        bSoundCueExcludedFromBranchCulling: boolean;
        bRandomizeWithoutReplacement: boolean;
        PIEHiddenNodes: TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeRandom;
        static Load(InName: string): SoundNodeRandom;
    
        __tid_SoundNodeRandom_0__: boolean;
    }
    
    class SoundNodeSoundClass extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundClassOverride: UE.SoundClass;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeSoundClass;
        static Load(InName: string): SoundNodeSoundClass;
    
        __tid_SoundNodeSoundClass_0__: boolean;
    }
    
    class SoundNodeSwitch extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IntParameterName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeSwitch;
        static Load(InName: string): SoundNodeSwitch;
    
        __tid_SoundNodeSwitch_0__: boolean;
    }
    
    class SoundNodeWaveParam extends UE.SoundNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WaveParameterName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeWaveParam;
        static Load(InName: string): SoundNodeWaveParam;
    
        __tid_SoundNodeWaveParam_0__: boolean;
    }
    
    class SoundNodeWavePlayer extends UE.SoundNodeAssetReferencer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundWaveAssetPtr: TSoftObjectPtr<UE.SoundWave>;
        SoundWave: UE.SoundWave;
        bLooping: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundNodeWavePlayer;
        static Load(InName: string): SoundNodeWavePlayer;
    
        __tid_SoundNodeWavePlayer_0__: boolean;
    }
    
    class SoundSourceBusFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSourceBusFactory;
        static Load(InName: string): SoundSourceBusFactory;
    
        __tid_SoundSourceBusFactory_0__: boolean;
    }
    
    class SoundSourceEffectChainFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSourceEffectChainFactory;
        static Load(InName: string): SoundSourceEffectChainFactory;
    
        __tid_SoundSourceEffectChainFactory_0__: boolean;
    }
    
    class SoundSourceEffectFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundEffectSourcepresetClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSourceEffectFactory;
        static Load(InName: string): SoundSourceEffectFactory;
    
        __tid_SoundSourceEffectFactory_0__: boolean;
    }
    
    class SoundSubmixEffectFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundEffectSubmixPresetClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmixEffectFactory;
        static Load(InName: string): SoundSubmixEffectFactory;
    
        __tid_SoundSubmixEffectFactory_0__: boolean;
    }
    
    class SoundSubmixFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmixFactory;
        static Load(InName: string): SoundSubmixFactory;
    
        __tid_SoundSubmixFactory_0__: boolean;
    }
    
    class SoundSubmixGraph extends UE.EdGraph {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RootSoundSubmix: UE.SoundSubmixBase;
        StaleRoots: TArray<UE.SoundSubmixBase>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmixGraph;
        static Load(InName: string): SoundSubmixGraph;
    
        __tid_SoundSubmixGraph_0__: boolean;
    }
    
    class SoundSubmixGraphNode extends UE.EdGraphNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundSubmix: UE.SoundSubmixBase;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmixGraphNode;
        static Load(InName: string): SoundSubmixGraphNode;
    
        __tid_SoundSubmixGraphNode_0__: boolean;
    }
    
    class SoundSubmixGraphSchema extends UE.EdGraphSchema {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSubmixGraphSchema;
        static Load(InName: string): SoundSubmixGraphSchema;
    
        __tid_SoundSubmixGraphSchema_0__: boolean;
    }
    
    class SoundSubmixGraphSchemaAction_NewNode extends UE.EdGraphSchemaAction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SoundSubmixGraphSchemaAction_NewNode_0__: boolean;
    }
    
    class SoundSurroundExporterWAV extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundSurroundExporterWAV;
        static Load(InName: string): SoundSurroundExporterWAV;
    
        __tid_SoundSurroundExporterWAV_0__: boolean;
    }
    
    class SoundWaveThumbnailRenderer extends UE.ThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SoundWaveThumbnailRenderer;
        static Load(InName: string): SoundWaveThumbnailRenderer;
    
        __tid_SoundWaveThumbnailRenderer_0__: boolean;
    }
    
    class SourceCodeAccessSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PreferredAccessor: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceCodeAccessSettings;
        static Load(InName: string): SourceCodeAccessSettings;
    
        __tid_SourceCodeAccessSettings_0__: boolean;
    }
    
    class SourceControlState {
        constructor();
        constructor(Filename: string, bIsValid: boolean, bIsUnknown: boolean, bCanCheckIn: boolean, bCanCheckOut: boolean, bIsCheckedOut: boolean, bIsCurrent: boolean, bIsSourceControlled: boolean, bIsAdded: boolean, bIsDeleted: boolean, bIsIgnored: boolean, bCanEdit: boolean, bCanDelete: boolean, bIsModified: boolean, bCanAdd: boolean, bIsConflicted: boolean, bCanRevert: boolean, bIsCheckedOutOther: boolean, CheckedOutOther: string);
        Filename: string;
        bIsValid: boolean;
        bIsUnknown: boolean;
        bCanCheckIn: boolean;
        bCanCheckOut: boolean;
        bIsCheckedOut: boolean;
        bIsCurrent: boolean;
        bIsSourceControlled: boolean;
        bIsAdded: boolean;
        bIsDeleted: boolean;
        bIsIgnored: boolean;
        bCanEdit: boolean;
        bCanDelete: boolean;
        bIsModified: boolean;
        bCanAdd: boolean;
        bIsConflicted: boolean;
        bCanRevert: boolean;
        bIsCheckedOutOther: boolean;
        CheckedOutOther: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceControlState_0__: boolean;
    }
    
    class SourceControlHelpers extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CheckInFile(InFile: string, InDescription: string, bSilent?: boolean /* = false */) : boolean;
        static CheckInFiles(InFiles: TArray<string>, InDescription: string, bSilent?: boolean /* = false */) : boolean;
        static CheckOutFile(InFile: string, bSilent?: boolean /* = false */) : boolean;
        static CheckOutFiles(InFiles: TArray<string>, bSilent?: boolean /* = false */) : boolean;
        static CheckOutOrAddFile(InFile: string, bSilent?: boolean /* = false */) : boolean;
        static CopyFile(InSourceFile: string, InDestFile: string, bSilent?: boolean /* = false */) : boolean;
        static CurrentProvider() : string;
        static IsAvailable() : boolean;
        static IsEnabled() : boolean;
        static LastErrorMsg() : string;
        static MarkFileForAdd(InFile: string, bSilent?: boolean /* = false */) : boolean;
        static MarkFileForDelete(InFile: string, bSilent?: boolean /* = false */) : boolean;
        static MarkFilesForAdd(InFiles: TArray<string>, bSilent?: boolean /* = false */) : boolean;
        static QueryFileState(InFile: string, bSilent?: boolean /* = false */) : UE.SourceControlState;
        static RevertFile(InFile: string, bSilent?: boolean /* = false */) : boolean;
        static RevertFiles(InFiles: TArray<string>, bSilent?: boolean /* = false */) : boolean;
        static RevertUnchangedFile(InFile: string, bSilent?: boolean /* = false */) : boolean;
        static RevertUnchangedFiles(InFiles: TArray<string>, bSilent?: boolean /* = false */) : boolean;
        static SyncFile(InFile: string, bSilent?: boolean /* = false */) : boolean;
        static SyncFiles(InFiles: TArray<string>, bSilent?: boolean /* = false */) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceControlHelpers;
        static Load(InName: string): SourceControlHelpers;
    
        __tid_SourceControlHelpers_0__: boolean;
    }
    
    class SourceEffectBitCrusherBaseSettings {
        constructor();
        constructor(SampleRate: number, BitDepth: number);
        SampleRate: number;
        BitDepth: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectBitCrusherBaseSettings_0__: boolean;
    }
    
    class SourceEffectBitCrusherSettings {
        constructor();
        constructor(CrushedSampleRate: number, SampleRateModulation: UE.SoundModulationDestinationSettings, CrushedBits: number, BitModulation: UE.SoundModulationDestinationSettings);
        CrushedSampleRate: number;
        SampleRateModulation: UE.SoundModulationDestinationSettings;
        CrushedBits: number;
        BitModulation: UE.SoundModulationDestinationSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectBitCrusherSettings_0__: boolean;
    }
    
    class SourceEffectBitCrusherPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectBitCrusherSettings;
        SetBitModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        SetBits(Bits: number) : void;
        SetModulationSettings(ModulationSettings: UE.SourceEffectBitCrusherSettings) : void;
        SetSampleRate(SampleRate: number) : void;
        SetSampleRateModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        SetSettings(Settings: UE.SourceEffectBitCrusherBaseSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectBitCrusherPreset;
        static Load(InName: string): SourceEffectBitCrusherPreset;
    
        __tid_SourceEffectBitCrusherPreset_0__: boolean;
    }
    
    class SourceEffectChorusBaseSettings {
        constructor();
        constructor(Depth: number, Frequency: number, Feedback: number, WetLevel: number, DryLevel: number, Spread: number);
        Depth: number;
        Frequency: number;
        Feedback: number;
        WetLevel: number;
        DryLevel: number;
        Spread: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectChorusBaseSettings_0__: boolean;
    }
    
    class SourceEffectChorusSettings {
        constructor();
        constructor(Depth: number, Frequency: number, Feedback: number, WetLevel: number, DryLevel: number, Spread: number, DepthModulation: UE.SoundModulationDestinationSettings, FrequencyModulation: UE.SoundModulationDestinationSettings, FeedbackModulation: UE.SoundModulationDestinationSettings, WetModulation: UE.SoundModulationDestinationSettings, DryModulation: UE.SoundModulationDestinationSettings, SpreadModulation: UE.SoundModulationDestinationSettings);
        Depth: number;
        Frequency: number;
        Feedback: number;
        WetLevel: number;
        DryLevel: number;
        Spread: number;
        DepthModulation: UE.SoundModulationDestinationSettings;
        FrequencyModulation: UE.SoundModulationDestinationSettings;
        FeedbackModulation: UE.SoundModulationDestinationSettings;
        WetModulation: UE.SoundModulationDestinationSettings;
        DryModulation: UE.SoundModulationDestinationSettings;
        SpreadModulation: UE.SoundModulationDestinationSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectChorusSettings_0__: boolean;
    }
    
    class SourceEffectChorusPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectChorusSettings;
        SetDepth(Depth: number) : void;
        SetDepthModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        SetDry(DryAmount: number) : void;
        SetDryModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        SetFeedback(Feedback: number) : void;
        SetFeedbackModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        SetFrequency(Frequency: number) : void;
        SetFrequencyModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        SetModulationSettings(ModulationSettings: UE.SourceEffectChorusSettings) : void;
        SetSettings(Settings: UE.SourceEffectChorusBaseSettings) : void;
        SetSpread(Spread: number) : void;
        SetSpreadModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        SetWet(WetAmount: number) : void;
        SetWetModulator(Modulator: $Nullable<UE.SoundModulatorBase>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectChorusPreset;
        static Load(InName: string): SourceEffectChorusPreset;
    
        __tid_SourceEffectChorusPreset_0__: boolean;
    }
    
    class SourceEffectDynamicsProcessorSettings {
        constructor();
        constructor(DynamicsProcessorType: UE.ESourceEffectDynamicsProcessorType, PeakMode: UE.ESourceEffectDynamicsPeakMode, LookAheadMsec: number, AttackTimeMsec: number, ReleaseTimeMsec: number, ThresholdDb: number, Ratio: number, KneeBandwidthDb: number, InputGainDb: number, OutputGainDb: number, bStereoLinked: boolean, bAnalogMode: boolean);
        DynamicsProcessorType: UE.ESourceEffectDynamicsProcessorType;
        PeakMode: UE.ESourceEffectDynamicsPeakMode;
        LookAheadMsec: number;
        AttackTimeMsec: number;
        ReleaseTimeMsec: number;
        ThresholdDb: number;
        Ratio: number;
        KneeBandwidthDb: number;
        InputGainDb: number;
        OutputGainDb: number;
        bStereoLinked: boolean;
        bAnalogMode: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectDynamicsProcessorSettings_0__: boolean;
    }
    
    class SourceEffectDynamicsProcessorPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectDynamicsProcessorSettings;
        SetSettings(InSettings: UE.SourceEffectDynamicsProcessorSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectDynamicsProcessorPreset;
        static Load(InName: string): SourceEffectDynamicsProcessorPreset;
    
        __tid_SourceEffectDynamicsProcessorPreset_0__: boolean;
    }
    
    class SourceEffectEnvelopeFollowerSettings {
        constructor();
        constructor(AttackTime: number, ReleaseTime: number, PeakMode: UE.EEnvelopeFollowerPeakMode, bIsAnalogMode: boolean);
        AttackTime: number;
        ReleaseTime: number;
        PeakMode: UE.EEnvelopeFollowerPeakMode;
        bIsAnalogMode: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectEnvelopeFollowerSettings_0__: boolean;
    }
    
    class SourceEffectEnvelopeFollowerPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectEnvelopeFollowerSettings;
        RegisterEnvelopeFollowerListener(EnvelopeFollowerListener: $Nullable<UE.EnvelopeFollowerListener>) : void;
        SetSettings(InSettings: UE.SourceEffectEnvelopeFollowerSettings) : void;
        UnregisterEnvelopeFollowerListener(EnvelopeFollowerListener: $Nullable<UE.EnvelopeFollowerListener>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectEnvelopeFollowerPreset;
        static Load(InName: string): SourceEffectEnvelopeFollowerPreset;
    
        __tid_SourceEffectEnvelopeFollowerPreset_0__: boolean;
    }
    
    class SourceEffectEQBand {
        constructor();
        constructor(Frequency: number, Bandwidth: number, GainDb: number, bEnabled: boolean);
        Frequency: number;
        Bandwidth: number;
        GainDb: number;
        bEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectEQBand_0__: boolean;
    }
    
    class SourceEffectEQSettings {
        constructor();
        constructor(EQBands: TArray<UE.SourceEffectEQBand>);
        EQBands: TArray<UE.SourceEffectEQBand>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectEQSettings_0__: boolean;
    }
    
    class SourceEffectEQPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectEQSettings;
        SetSettings(InSettings: UE.SourceEffectEQSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectEQPreset;
        static Load(InName: string): SourceEffectEQPreset;
    
        __tid_SourceEffectEQPreset_0__: boolean;
    }
    
    class SourceEffectFilterAudioBusModulationSettings {
        constructor();
        constructor(AudioBus: UE.AudioBus, EnvelopeFollowerAttackTimeMsec: number, EnvelopeFollowerReleaseTimeMsec: number, EnvelopeGainMultiplier: number, FilterParam: UE.ESourceEffectFilterParam, MinFrequencyModulation: number, MaxFrequencyModulation: number, MinResonanceModulation: number, MaxResonanceModulation: number);
        AudioBus: UE.AudioBus;
        EnvelopeFollowerAttackTimeMsec: number;
        EnvelopeFollowerReleaseTimeMsec: number;
        EnvelopeGainMultiplier: number;
        FilterParam: UE.ESourceEffectFilterParam;
        MinFrequencyModulation: number;
        MaxFrequencyModulation: number;
        MinResonanceModulation: number;
        MaxResonanceModulation: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectFilterAudioBusModulationSettings_0__: boolean;
    }
    
    class SourceEffectFilterSettings {
        constructor();
        constructor(FilterCircuit: UE.ESourceEffectFilterCircuit, FilterType: UE.ESourceEffectFilterType, CutoffFrequency: number, FilterQ: number, AudioBusModulation: TArray<UE.SourceEffectFilterAudioBusModulationSettings>);
        FilterCircuit: UE.ESourceEffectFilterCircuit;
        FilterType: UE.ESourceEffectFilterType;
        CutoffFrequency: number;
        FilterQ: number;
        AudioBusModulation: TArray<UE.SourceEffectFilterAudioBusModulationSettings>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectFilterSettings_0__: boolean;
    }
    
    class SourceEffectFilterPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectFilterSettings;
        SetSettings(InSettings: UE.SourceEffectFilterSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectFilterPreset;
        static Load(InName: string): SourceEffectFilterPreset;
    
        __tid_SourceEffectFilterPreset_0__: boolean;
    }
    
    class SourceEffectFoldbackDistortionSettings {
        constructor();
        constructor(InputGainDb: number, ThresholdDb: number, OutputGainDb: number);
        InputGainDb: number;
        ThresholdDb: number;
        OutputGainDb: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectFoldbackDistortionSettings_0__: boolean;
    }
    
    class SourceEffectFoldbackDistortionPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectFoldbackDistortionSettings;
        SetSettings(InSettings: UE.SourceEffectFoldbackDistortionSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectFoldbackDistortionPreset;
        static Load(InName: string): SourceEffectFoldbackDistortionPreset;
    
        __tid_SourceEffectFoldbackDistortionPreset_0__: boolean;
    }
    
    class SourceEffectMidSideSpreaderSettings {
        constructor();
        constructor(SpreadAmount: number, InputMode: UE.EStereoChannelMode, OutputMode: UE.EStereoChannelMode, bEqualPower: boolean);
        SpreadAmount: number;
        InputMode: UE.EStereoChannelMode;
        OutputMode: UE.EStereoChannelMode;
        bEqualPower: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectMidSideSpreaderSettings_0__: boolean;
    }
    
    class SourceEffectMidSideSpreaderPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectMidSideSpreaderSettings;
        SetSettings(InSettings: UE.SourceEffectMidSideSpreaderSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectMidSideSpreaderPreset;
        static Load(InName: string): SourceEffectMidSideSpreaderPreset;
    
        __tid_SourceEffectMidSideSpreaderPreset_0__: boolean;
    }
    
    class SourceEffectPannerSettings {
        constructor();
        constructor(Spread: number, Pan: number);
        Spread: number;
        Pan: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectPannerSettings_0__: boolean;
    }
    
    class SourceEffectPannerPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectPannerSettings;
        SetSettings(InSettings: UE.SourceEffectPannerSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectPannerPreset;
        static Load(InName: string): SourceEffectPannerPreset;
    
        __tid_SourceEffectPannerPreset_0__: boolean;
    }
    
    class SourceEffectPhaserSettings {
        constructor();
        constructor(WetLevel: number, Frequency: number, Feedback: number, LFOType: UE.EPhaserLFOType, UseQuadraturePhase: boolean);
        WetLevel: number;
        Frequency: number;
        Feedback: number;
        LFOType: UE.EPhaserLFOType;
        UseQuadraturePhase: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectPhaserSettings_0__: boolean;
    }
    
    class SourceEffectPhaserPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectPhaserSettings;
        SetSettings(InSettings: UE.SourceEffectPhaserSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectPhaserPreset;
        static Load(InName: string): SourceEffectPhaserPreset;
    
        __tid_SourceEffectPhaserPreset_0__: boolean;
    }
    
    class SourceEffectRingModulationSettings {
        constructor();
        constructor(ModulatorType: UE.ERingModulatorTypeSourceEffect, Frequency: number, Depth: number, DryLevel: number, WetLevel: number, AudioBusModulator: UE.AudioBus);
        ModulatorType: UE.ERingModulatorTypeSourceEffect;
        Frequency: number;
        Depth: number;
        DryLevel: number;
        WetLevel: number;
        AudioBusModulator: UE.AudioBus;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectRingModulationSettings_0__: boolean;
    }
    
    class SourceEffectRingModulationPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectRingModulationSettings;
        SetSettings(InSettings: UE.SourceEffectRingModulationSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectRingModulationPreset;
        static Load(InName: string): SourceEffectRingModulationPreset;
    
        __tid_SourceEffectRingModulationPreset_0__: boolean;
    }
    
    class SourceEffectSimpleDelaySettings {
        constructor();
        constructor(SpeedOfSound: number, DelayAmount: number, DryAmount: number, WetAmount: number, Feedback: number, bDelayBasedOnDistance: boolean);
        SpeedOfSound: number;
        DelayAmount: number;
        DryAmount: number;
        WetAmount: number;
        Feedback: number;
        bDelayBasedOnDistance: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectSimpleDelaySettings_0__: boolean;
    }
    
    class SourceEffectSimpleDelayPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectSimpleDelaySettings;
        SetSettings(InSettings: UE.SourceEffectSimpleDelaySettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectSimpleDelayPreset;
        static Load(InName: string): SourceEffectSimpleDelayPreset;
    
        __tid_SourceEffectSimpleDelayPreset_0__: boolean;
    }
    
    class SourceEffectStereoDelaySettings {
        constructor();
        constructor(DelayMode: UE.EStereoDelaySourceEffect, DelayTimeMsec: number, Feedback: number, DelayRatio: number, WetLevel: number, DryLevel: number, bFilterEnabled: boolean, FilterType: UE.EStereoDelayFiltertype, FilterFrequency: number, FilterQ: number);
        DelayMode: UE.EStereoDelaySourceEffect;
        DelayTimeMsec: number;
        Feedback: number;
        DelayRatio: number;
        WetLevel: number;
        DryLevel: number;
        bFilterEnabled: boolean;
        FilterType: UE.EStereoDelayFiltertype;
        FilterFrequency: number;
        FilterQ: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectStereoDelaySettings_0__: boolean;
    }
    
    class SourceEffectStereoDelayPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectStereoDelaySettings;
        SetSettings(InSettings: UE.SourceEffectStereoDelaySettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectStereoDelayPreset;
        static Load(InName: string): SourceEffectStereoDelayPreset;
    
        __tid_SourceEffectStereoDelayPreset_0__: boolean;
    }
    
    class SourceEffectWaveShaperSettings {
        constructor();
        constructor(Amount: number, OutputGainDb: number);
        Amount: number;
        OutputGainDb: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SourceEffectWaveShaperSettings_0__: boolean;
    }
    
    class SourceEffectWaveShaperPreset extends UE.SoundEffectSourcePreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SourceEffectWaveShaperSettings;
        SetSettings(InSettings: UE.SourceEffectWaveShaperSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SourceEffectWaveShaperPreset;
        static Load(InName: string): SourceEffectWaveShaperPreset;
    
        __tid_SourceEffectWaveShaperPreset_0__: boolean;
    }
    
    class Spacer extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Size: UE.Vector2D;
        SetSize(InSize: UE.Vector2D) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Spacer;
        static Load(InName: string): Spacer;
    
        __tid_Spacer_0__: boolean;
    }
    
    class SparseDelegateFunction extends UE.DelegateFunction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SparseDelegateFunction;
        static Load(InName: string): SparseDelegateFunction;
    
        __tid_SparseDelegateFunction_0__: boolean;
    }
    
    class SpectatorReservation {
        constructor();
        constructor(SpectatorId: UE.UniqueNetIdRepl, Spectator: UE.PlayerReservation);
        SpectatorId: UE.UniqueNetIdRepl;
        Spectator: UE.PlayerReservation;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpectatorReservation_0__: boolean;
    }
    
    class SpectatorBeaconClient extends UE.OnlineBeaconClient {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DestSessionId: string;
        PendingReservation: UE.SpectatorReservation;
        RequestType: UE.ESpectatorClientRequestType;
        bPendingReservationSent: boolean;
        bCancelReservation: boolean;
        ClientCancelReservationResponse(ReservationResponse: UE.ESpectatorReservationResult) : void;
        ClientReservationResponse(ReservationResponse: UE.ESpectatorReservationResult) : void;
        ClientSendReservationFull() : void;
        ClientSendReservationUpdates(NumRemainingReservations: number) : void;
        ServerCancelReservationRequest(Spectator: UE.UniqueNetIdRepl) : void;
        ServerReservationRequest(SessionId: string, Reservation: UE.SpectatorReservation) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpectatorBeaconClient;
        static Load(InName: string): SpectatorBeaconClient;
    
        __tid_SpectatorBeaconClient_0__: boolean;
    }
    
    class SpectatorBeaconState extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SessionName: string;
        NumConsumedReservations: number;
        MaxReservations: number;
        bRestrictCrossConsole: boolean;
        Reservations: TArray<UE.SpectatorReservation>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpectatorBeaconState;
        static Load(InName: string): SpectatorBeaconState;
    
        __tid_SpectatorBeaconState_0__: boolean;
    }
    
    class SpectatorBeaconHost extends UE.OnlineBeaconHostObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        State: UE.SpectatorBeaconState;
        bLogoutOnSessionTimeout: boolean;
        SessionTimeoutSecs: number;
        TravelSessionTimeoutSecs: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpectatorBeaconHost;
        static Load(InName: string): SpectatorBeaconHost;
    
        __tid_SpectatorBeaconHost_0__: boolean;
    }
    
    class SpectatorPawnMovement extends UE.FloatingPawnMovement {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIgnoreTimeDilation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpectatorPawnMovement;
        static Load(InName: string): SpectatorPawnMovement;
    
        __tid_SpectatorPawnMovement_0__: boolean;
    }
    
    class SpeedTreeImportData extends UE.AssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TreeScale: number;
        ImportGeometryType: UE.EImportGeometryType;
        LODType: UE.EImportLODType;
        IncludeCollision: boolean;
        MakeMaterialsCheck: boolean;
        IncludeNormalMapCheck: boolean;
        IncludeDetailMapCheck: boolean;
        IncludeSpecularMapCheck: boolean;
        IncludeBranchSeamSmoothing: boolean;
        IncludeSpeedTreeAO: boolean;
        IncludeColorAdjustment: boolean;
        IncludeSubsurface: boolean;
        IncludeVertexProcessingCheck: boolean;
        IncludeWindCheck: boolean;
        IncludeSmoothLODCheck: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpeedTreeImportData;
        static Load(InName: string): SpeedTreeImportData;
    
        __tid_SpeedTreeImportData_0__: boolean;
    }
    
    class SphereReflectionCapture extends UE.ReflectionCapture {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DrawCaptureRadius: UE.DrawSphereComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SphereReflectionCapture;
        static Load(InName: string): SphereReflectionCapture;
    
        __tid_SphereReflectionCapture_0__: boolean;
    }
    
    class SphereReflectionCaptureComponent extends UE.ReflectionCaptureComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InfluenceRadius: number;
        CaptureDistanceScale: number;
        PreviewInfluenceRadius: UE.DrawSphereComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SphereReflectionCaptureComponent;
        static Load(InName: string): SphereReflectionCaptureComponent;
    
        __tid_SphereReflectionCaptureComponent_0__: boolean;
    }
    
    class SpinBoxStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(BackgroundBrush: UE.SlateBrush, HoveredBackgroundBrush: UE.SlateBrush, ActiveFillBrush: UE.SlateBrush, InactiveFillBrush: UE.SlateBrush, ArrowsImage: UE.SlateBrush, ForegroundColor: UE.SlateColor, TextPadding: UE.Margin);
        BackgroundBrush: UE.SlateBrush;
        HoveredBackgroundBrush: UE.SlateBrush;
        ActiveFillBrush: UE.SlateBrush;
        InactiveFillBrush: UE.SlateBrush;
        ArrowsImage: UE.SlateBrush;
        ForegroundColor: UE.SlateColor;
        TextPadding: UE.Margin;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpinBoxStyle_0__: boolean;
    }
    
    class SpinBox extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: number;
        ValueDelegate: $Delegate<() => number>;
        WidgetStyle: UE.SpinBoxStyle;
        Style: UE.SlateWidgetStyleAsset;
        MinFractionalDigits: number;
        MaxFractionalDigits: number;
        bAlwaysUsesDeltaSnap: boolean;
        Delta: number;
        SliderExponent: number;
        Font: UE.SlateFontInfo;
        Justification: UE.ETextJustify;
        MinDesiredWidth: number;
        ClearKeyboardFocusOnCommit: boolean;
        SelectAllTextOnCommit: boolean;
        ForegroundColor: UE.SlateColor;
        OnValueChanged: $MulticastDelegate<(InValue: number) => void>;
        OnValueCommitted: $MulticastDelegate<(InValue: number, CommitMethod: UE.ETextCommit) => void>;
        OnBeginSliderMovement: $MulticastDelegate<() => void>;
        OnEndSliderMovement: $MulticastDelegate<(InValue: number) => void>;
        bOverride_MinValue: boolean;
        bOverride_MaxValue: boolean;
        bOverride_MinSliderValue: boolean;
        bOverride_MaxSliderValue: boolean;
        MinValue: number;
        MaxValue: number;
        MinSliderValue: number;
        MaxSliderValue: number;
        ClearMaxSliderValue() : void;
        ClearMaxValue() : void;
        ClearMinSliderValue() : void;
        ClearMinValue() : void;
        GetAlwaysUsesDeltaSnap() : boolean;
        GetDelta() : number;
        GetMaxFractionalDigits() : number;
        GetMaxSliderValue() : number;
        GetMaxValue() : number;
        GetMinFractionalDigits() : number;
        GetMinSliderValue() : number;
        GetMinValue() : number;
        GetValue() : number;
        OnSpinBoxBeginSliderMovement__DelegateSignature() : void;
        OnSpinBoxValueChangedEvent__DelegateSignature(InValue: number) : void;
        OnSpinBoxValueCommittedEvent__DelegateSignature(InValue: number, CommitMethod: UE.ETextCommit) : void;
        SetAlwaysUsesDeltaSnap(bNewValue: boolean) : void;
        SetDelta(NewValue: number) : void;
        SetForegroundColor(InForegroundColor: UE.SlateColor) : void;
        SetMaxFractionalDigits(NewValue: number) : void;
        SetMaxSliderValue(NewValue: number) : void;
        SetMaxValue(NewValue: number) : void;
        SetMinFractionalDigits(NewValue: number) : void;
        SetMinSliderValue(NewValue: number) : void;
        SetMinValue(NewValue: number) : void;
        SetValue(NewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpinBox;
        static Load(InName: string): SpinBox;
    
        __tid_SpinBox_0__: boolean;
    }
    
    class SpinBoxWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpinBoxStyle: UE.SpinBoxStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpinBoxWidgetStyle;
        static Load(InName: string): SpinBoxWidgetStyle;
    
        __tid_SpinBoxWidgetStyle_0__: boolean;
    }
    
    class SpiralStairBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InnerRadius: number;
        StepWidth: number;
        StepHeight: number;
        StepThickness: number;
        NumStepsPer360: number;
        NumSteps: number;
        GroupName: string;
        SlopedCeiling: boolean;
        SlopedFloor: boolean;
        CounterClockwise: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpiralStairBuilder;
        static Load(InName: string): SpiralStairBuilder;
    
        __tid_SpiralStairBuilder_0__: boolean;
    }
    
    class SplineComponentVisualizerSelectionState extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SplinePropertyPath: UE.ComponentPropertyPath;
        SelectedKeys: TSet<number>;
        LastKeyIndexSelected: number;
        SelectedSegmentIndex: number;
        SelectedTangentHandle: number;
        SelectedTangentHandleType: UE.ESelectedTangentHandle;
        SelectedSplinePosition: UE.Vector;
        CachedRotation: UE.Quat;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SplineComponentVisualizerSelectionState;
        static Load(InName: string): SplineComponentVisualizerSelectionState;
    
        __tid_SplineComponentVisualizerSelectionState_0__: boolean;
    }
    
    class SplineIKCachedBoneData {
        constructor();
        constructor(Bone: UE.BoneReference, RefSkeletonIndex: number);
        Bone: UE.BoneReference;
        RefSkeletonIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SplineIKCachedBoneData_0__: boolean;
    }
    
    class SplineInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        constructor(bSplineHasBeenEdited: boolean, SplineCurves: UE.SplineCurves, SplineCurvesPreUCS: UE.SplineCurves);
        bSplineHasBeenEdited: boolean;
        SplineCurves: UE.SplineCurves;
        SplineCurvesPreUCS: UE.SplineCurves;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SplineInstanceData_0__: boolean;
    }
    
    class SplineMeshActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SplineMeshComponent: UE.SplineMeshComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SplineMeshActor;
        static Load(InName: string): SplineMeshActor;
    
        __tid_SplineMeshActor_0__: boolean;
    }
    
    class SplineMeshInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        constructor(StartPos: UE.Vector, EndPos: UE.Vector, StartTangent: UE.Vector, EndTangent: UE.Vector);
        StartPos: UE.Vector;
        EndPos: UE.Vector;
        StartTangent: UE.Vector;
        EndTangent: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SplineMeshInstanceData_0__: boolean;
    }
    
    class SplineMetadataDetailsFactoryBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SplineMetadataDetailsFactoryBase;
        static Load(InName: string): SplineMetadataDetailsFactoryBase;
    
        __tid_SplineMetadataDetailsFactoryBase_0__: boolean;
    }
    
    class SpringArmComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TargetArmLength: number;
        SocketOffset: UE.Vector;
        TargetOffset: UE.Vector;
        ProbeSize: number;
        ProbeChannel: UE.ECollisionChannel;
        bDoCollisionTest: boolean;
        bUsePawnControlRotation: boolean;
        bInheritPitch: boolean;
        bInheritYaw: boolean;
        bInheritRoll: boolean;
        bEnableCameraLag: boolean;
        bEnableCameraRotationLag: boolean;
        bUseCameraLagSubstepping: boolean;
        bDrawDebugLagMarkers: boolean;
        CameraLagSpeed: number;
        CameraRotationLagSpeed: number;
        CameraLagMaxTimeStep: number;
        CameraLagMaxDistance: number;
        GetTargetRotation() : UE.Rotator;
        GetUnfixedCameraPosition() : UE.Vector;
        IsCollisionFixApplied() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpringArmComponent;
        static Load(InName: string): SpringArmComponent;
    
        __tid_SpringArmComponent_0__: boolean;
    }
    
    class SpriteAssetInitParameters {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpriteAssetInitParameters_0__: boolean;
    }
    
    class SpriteDrawCallRecord {
        constructor();
        constructor(Destination: UE.Vector, BaseTexture: UE.Texture, Color: UE.Color);
        Destination: UE.Vector;
        BaseTexture: UE.Texture;
        Color: UE.Color;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SpriteDrawCallRecord_0__: boolean;
    }
    
    class SpriteEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BackgroundColor: UE.Color;
        bShowGridByDefault: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SpriteEditorSettings;
        static Load(InName: string): SpriteEditorSettings;
    
        __tid_SpriteEditorSettings_0__: boolean;
    }
    
    class SquareSplineGenerator extends UE.SplineGeneratorBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Length: number;
        bBranchRight: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SquareSplineGenerator;
        static Load(InName: string): SquareSplineGenerator;
    
        __tid_SquareSplineGenerator_0__: boolean;
    }
    
    class SSCSEditorMenuContext extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SSCSEditorMenuContext;
        static Load(InName: string): SSCSEditorMenuContext;
    
        __tid_SSCSEditorMenuContext_0__: boolean;
    }
    
    class StabilizeLocalizationKeysCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StabilizeLocalizationKeysCommandlet;
        static Load(InName: string): StabilizeLocalizationKeysCommandlet;
    
        __tid_StabilizeLocalizationKeysCommandlet_0__: boolean;
    }
    
    namespace Engine.EditorBlueprintResources.StandardMacros {
        class StandardMacros_C extends UE.Object {
            constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
            static StaticClass(): Class;
            static Find(OrigInName: string, Outer?: Object): StandardMacros_C;
            static Load(InName: string): StandardMacros_C;
        
            __tid_StandardMacros_C_0__: boolean;
        }
        
    }

    class StartPhysicsTickFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StartPhysicsTickFunction_0__: boolean;
    }
    
    class StateMachineDebugData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StateMachineDebugData_0__: boolean;
    }
    
    class StateMachineStateDebugData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StateMachineStateDebugData_0__: boolean;
    }
    
    class StaticMeshVertexColorLODData {
        constructor();
        constructor(PaintedVertices: TArray<UE.PaintedVertex>, VertexBufferColors: TArray<UE.Color>, LODIndex: number);
        PaintedVertices: TArray<UE.PaintedVertex>;
        VertexBufferColors: TArray<UE.Color>;
        LODIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticMeshVertexColorLODData_0__: boolean;
    }
    
    class StaticMeshComponentInstanceData extends UE.PrimitiveComponentInstanceData {
        constructor();
        constructor(StaticMesh: UE.StaticMesh, VertexColorLODs: TArray<UE.StaticMeshVertexColorLODData>, CachedStaticLighting: TArray<UE.Guid>, StreamingTextureData: TArray<UE.StreamingTextureBuildInfo>, MaterialStreamingRelativeBoxes: TArray<number>);
        StaticMesh: UE.StaticMesh;
        VertexColorLODs: TArray<UE.StaticMeshVertexColorLODData>;
        CachedStaticLighting: TArray<UE.Guid>;
        StreamingTextureData: TArray<UE.StreamingTextureBuildInfo>;
        MaterialStreamingRelativeBoxes: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticMeshComponentInstanceData_0__: boolean;
    }
    
    class StaticMeshExporterFBX extends UE.ExporterFBX {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshExporterFBX;
        static Load(InName: string): StaticMeshExporterFBX;
    
        __tid_StaticMeshExporterFBX_0__: boolean;
    }
    
    class StaticMeshExporterOBJ extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshExporterOBJ;
        static Load(InName: string): StaticMeshExporterOBJ;
    
        __tid_StaticMeshExporterOBJ_0__: boolean;
    }
    
    class StaticMeshLightingInfo extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StaticMeshActor: TWeakObjectPtr<UE.Actor>;
        StaticMesh: TWeakObjectPtr<UE.StaticMesh>;
        LevelName: string;
        TextureMapping: string;
        bTextureMapping: boolean;
        bHasLightmapTexCoords: boolean;
        StaticLightingResolution: number;
        TextureLightMapMemoryUsage: number;
        VertexLightMapMemoryUsage: number;
        LightMapLightCount: number;
        TextureShadowMapMemoryUsage: number;
        VertexShadowMapMemoryUsage: number;
        ShadowMapLightCount: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshLightingInfo;
        static Load(InName: string): StaticMeshLightingInfo;
    
        __tid_StaticMeshLightingInfo_0__: boolean;
    }
    
    class StaticMeshOptimizationSettings {
        constructor();
        constructor(ReductionMethod: UE.EOptimizationType, NumOfTrianglesPercentage: number, MaxDeviationPercentage: number, WeldingThreshold: number, bRecalcNormals: boolean, NormalsThreshold: number, SilhouetteImportance: number, TextureImportance: number, ShadingImportance: number);
        ReductionMethod: UE.EOptimizationType;
        NumOfTrianglesPercentage: number;
        MaxDeviationPercentage: number;
        WeldingThreshold: number;
        bRecalcNormals: boolean;
        NormalsThreshold: number;
        SilhouetteImportance: number;
        TextureImportance: number;
        ShadingImportance: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StaticMeshOptimizationSettings_0__: boolean;
    }
    
    class StaticMeshSimulationComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Simulating: boolean;
        bNotifyCollisions: boolean;
        ObjectType: UE.EObjectStateTypeEnum;
        Mass: number;
        CollisionType: UE.ECollisionTypeEnum;
        ImplicitType: UE.EImplicitTypeEnum;
        MinLevelSetResolution: number;
        MaxLevelSetResolution: number;
        InitialVelocityType: UE.EInitialVelocityTypeEnum;
        InitialLinearVelocity: UE.Vector;
        InitialAngularVelocity: UE.Vector;
        DamageThreshold: number;
        PhysicalMaterial: UE.ChaosPhysicalMaterial;
        ChaosSolverActor: UE.ChaosSolverActor;
        OnChaosPhysicsCollision: $MulticastDelegate<(CollisionInfo: UE.ChaosPhysicsCollisionInfo) => void>;
        SimulatedComponents: TArray<UE.PrimitiveComponent>;
        ForceRecreatePhysicsState() : void;
        ReceivePhysicsCollision(CollisionInfo: UE.ChaosPhysicsCollisionInfo) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshSimulationComponent;
        static Load(InName: string): StaticMeshSimulationComponent;
    
        __tid_StaticMeshSimulationComponent_0__: boolean;
    }
    
    class StaticMeshThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StaticMeshThumbnailRenderer;
        static Load(InName: string): StaticMeshThumbnailRenderer;
    
        __tid_StaticMeshThumbnailRenderer_0__: boolean;
    }
    
    class SteamVRAction {
        constructor();
        constructor(Name: string, Path: string);
        Name: string;
        Path: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SteamVRAction_0__: boolean;
    }
    
    class SteamVRActionSet {
        constructor();
        constructor(Path: string);
        Path: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SteamVRActionSet_0__: boolean;
    }
    
    class SteamVRChaperoneComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnLeaveBounds: $MulticastDelegate<() => void>;
        OnReturnToBounds: $MulticastDelegate<() => void>;
        GetBounds() : TArray<UE.Vector>;
        SteamVRChaperoneEvent__DelegateSignature() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SteamVRChaperoneComponent;
        static Load(InName: string): SteamVRChaperoneComponent;
    
        __tid_SteamVRChaperoneComponent_0__: boolean;
    }
    
    class SteamVREditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShowSteamVrInputToolbarButton: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SteamVREditorSettings;
        static Load(InName: string): SteamVREditorSettings;
    
        __tid_SteamVREditorSettings_0__: boolean;
    }
    
    class SteamVRFingerCurls {
        constructor();
        constructor(Thumb: number, Index: number, Middle: number, Ring: number, Pinky: number);
        Thumb: number;
        Index: number;
        Middle: number;
        Ring: number;
        Pinky: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SteamVRFingerCurls_0__: boolean;
    }
    
    class SteamVRFingerSplays {
        constructor();
        constructor(Thumb_Index: number, Index_Middle: number, Middle_Ring: number, Ring_Pinky: number);
        Thumb_Index: number;
        Index_Middle: number;
        Middle_Ring: number;
        Ring_Pinky: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SteamVRFingerSplays_0__: boolean;
    }
    
    class SteamVRFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetHandPositionAndOrientation(ControllerIndex: number, Hand: UE.EControllerHand, OutPosition: $Ref<UE.Vector>, OutOrientation: $Ref<UE.Rotator>) : boolean;
        static GetTrackedDevicePositionAndOrientation(DeviceId: number, OutPosition: $Ref<UE.Vector>, OutOrientation: $Ref<UE.Rotator>) : boolean;
        static GetValidTrackedDeviceIds(DeviceType: UE.ESteamVRTrackedDeviceType, OutTrackedDeviceIds: $Ref<TArray<number>>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SteamVRFunctionLibrary;
        static Load(InName: string): SteamVRFunctionLibrary;
    
        __tid_SteamVRFunctionLibrary_0__: boolean;
    }
    
    class StereoLayerShape extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StereoLayerShape;
        static Load(InName: string): StereoLayerShape;
    
        __tid_StereoLayerShape_0__: boolean;
    }
    
    class StereoLayerShapeQuad extends UE.StereoLayerShape {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StereoLayerShapeQuad;
        static Load(InName: string): StereoLayerShapeQuad;
    
        __tid_StereoLayerShapeQuad_0__: boolean;
    }
    
    class SteamVRHQStereoLayerShape extends UE.StereoLayerShapeQuad {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bCurved: boolean;
        bAntiAlias: boolean;
        AutoCurveMinDistance: number;
        AutoCurveMaxDistance: number;
        SetAntiAlias(InAntiAlias: boolean) : void;
        SetAutoCurveMaxDistance(InDistance: number) : void;
        SetAutoCurveMinDistance(InDistance: number) : void;
        SetCurved(InCurved: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SteamVRHQStereoLayerShape;
        static Load(InName: string): SteamVRHQStereoLayerShape;
    
        __tid_SteamVRHQStereoLayerShape_0__: boolean;
    }
    
    class SteamVRInputBindingInfo {
        constructor();
        constructor(DevicePathName: string, InputPathName: string, ModeName: string, SlotName: string);
        DevicePathName: string;
        InputPathName: string;
        ModeName: string;
        SlotName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SteamVRInputBindingInfo_0__: boolean;
    }
    
    class SteamVRInputOriginInfo {
        constructor();
        constructor(TrackedDeviceIndex: number, RenderModelComponentName: string, TrackedDeviceModel: string);
        TrackedDeviceIndex: number;
        RenderModelComponentName: string;
        TrackedDeviceModel: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SteamVRInputOriginInfo_0__: boolean;
    }
    
    class SteamVRInputDeviceFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static FindSteamVR_Action(ActionName: string, bResult: $Ref<boolean>, FoundAction: $Ref<UE.SteamVRAction>, FoundActionSet: $Ref<UE.SteamVRActionSet>, ActionSet?: string /* = "main" */) : void;
        static FindSteamVR_ActionOrigin(ActionName: string, ActionSet?: string /* = "main" */) : boolean;
        static FindSteamVR_InputBindingInfo(ActionName: string, ActionSet?: string /* = "main" */) : TArray<UE.SteamVRInputBindingInfo>;
        static FindSteamVR_OriginTrackedDeviceInfo(ActionName: string, bResult: $Ref<boolean>, InputOriginInfo: $Ref<UE.SteamVRInputOriginInfo>, ActionSet?: string /* = "main" */) : void;
        static GetControllerFidelity(LeftControllerFidelity: $Ref<UE.EControllerFidelity>, RightControllerFidelity: $Ref<UE.EControllerFidelity>) : void;
        static GetCurlsAndSplaysState(LeftHandState: $Ref<boolean>, RightHandState: $Ref<boolean>) : void;
        static GetFingerCurlsAndSplays(Hand: UE.EHand, FingerCurls: $Ref<UE.SteamVRFingerCurls>, FingerSplays: $Ref<UE.SteamVRFingerSplays>, SummaryDataType?: UE.ESkeletalSummaryDataType /* = VR_SummaryType_FromAnimation */) : void;
        static GetLeftHandPoseData(Position: $Ref<UE.Vector>, Orientation: $Ref<UE.Rotator>, AngularVelocity: $Ref<UE.Vector>, Velocity: $Ref<UE.Vector>) : void;
        static GetPoseSource(bUsingSkeletonPose: $Ref<boolean>) : void;
        static GetRightHandPoseData(Position: $Ref<UE.Vector>, Orientation: $Ref<UE.Rotator>, AngularVelocity: $Ref<UE.Vector>, Velocity: $Ref<UE.Vector>) : void;
        static GetSkeletalState(LeftHandState: $Ref<boolean>, RightHandState: $Ref<boolean>) : void;
        static GetSkeletalTransform(LeftHand: $Ref<UE.SteamVRSkeletonTransform>, RightHand: $Ref<UE.SteamVRSkeletonTransform>, bWithController?: boolean /* = false */) : void;
        static GetSteamVR_ActionArray(SteamVRActions: $Ref<TArray<UE.SteamVRAction>>) : void;
        static GetSteamVR_ActionSetArray(SteamVRActionSets: $Ref<TArray<UE.SteamVRActionSet>>) : void;
        static GetSteamVR_GlobalPredictedSecondsFromNow() : number;
        static GetSteamVR_HandPoseRelativeToNow(Position: $Ref<UE.Vector>, Orientation: $Ref<UE.Rotator>, Hand?: UE.ESteamVRHand /* = VR_Left */, PredictedSecondsFromNow?: number /* = 0.000000 */) : boolean;
        static GetSteamVR_InputBindingInfo(SteamVRActionHandle: UE.SteamVRAction) : TArray<UE.SteamVRInputBindingInfo>;
        static GetSteamVR_OriginLocalizedName(SteamVRAction: UE.SteamVRAction, LocalizedParts: TArray<UE.ESteamVRInputStringBits>, OriginLocalizedName: $Ref<string>) : void;
        static GetSteamVR_OriginTrackedDeviceInfo(SteamVRAction: UE.SteamVRAction, InputOriginInfo: $Ref<UE.SteamVRInputOriginInfo>) : boolean;
        static GetUserIPD() : number;
        static PlaySteamVR_HapticFeedback(Hand: UE.ESteamVRHand, StartSecondsFromNow: number, DurationSeconds?: number /* = 1.000000 */, Frequency?: number /* = 1.000000 */, Amplitude?: number /* = 0.500000 */) : void;
        static ResetSeatedPosition() : boolean;
        static SetCurlsAndSplaysState(NewLeftHandState: boolean, NewRightHandState: boolean) : void;
        static SetPoseSource(bUseSkeletonPose: boolean) : void;
        static SetSteamVR_GlobalPredictedSecondsFromNow(NewValue: number) : number;
        static ShowAllSteamVR_ActionOrigins() : void;
        static ShowSteamVR_ActionOrigin(SteamVRAction: UE.SteamVRAction, SteamVRActionSet: UE.SteamVRActionSet) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SteamVRInputDeviceFunctionLibrary;
        static Load(InName: string): SteamVRInputDeviceFunctionLibrary;
    
        __tid_SteamVRInputDeviceFunctionLibrary_0__: boolean;
    }
    
    class SteamVRTrackingReferences extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnTrackedDeviceActivated: $MulticastDelegate<(DeviceID: number, DeviceClass: string, DeviceModel: string) => void>;
        OnTrackedDeviceDeactivated: $MulticastDelegate<(DeviceID: number, DeviceClass: string, DeviceModel: string) => void>;
        ActiveDevicePollFrequency: number;
        TrackingReferenceScale: UE.Vector;
        TrackingReferences: TArray<UE.StaticMeshComponent>;
        HideTrackingReferences() : void;
        ShowTrackingReferences(TrackingReferenceMesh: $Nullable<UE.StaticMesh>) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SteamVRTrackingReferences;
        static Load(InName: string): SteamVRTrackingReferences;
    
        __tid_SteamVRTrackingReferences_0__: boolean;
    }
    
    class StereoLayerComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bLiveTexture: boolean;
        bSupportsDepth: boolean;
        bNoAlphaChannel: boolean;
        Texture: UE.Texture;
        LeftTexture: UE.Texture;
        bQuadPreserveTextureRatio: boolean;
        QuadSize: UE.Vector2D;
        UVRect: UE.Box2D;
        CylinderRadius: number;
        CylinderOverlayArc: number;
        CylinderHeight: number;
        EquirectProps: UE.EquirectProps;
        StereoLayerType: UE.EStereoLayerType;
        StereoLayerShape: UE.EStereoLayerShape;
        Shape: UE.StereoLayerShape;
        Priority: number;
        GetLeftTexture() : UE.Texture;
        GetPriority() : number;
        GetQuadSize() : UE.Vector2D;
        GetTexture() : UE.Texture;
        GetUVRect() : UE.Box2D;
        MarkTextureForUpdate() : void;
        SetEquirectProps(InScaleBiases: UE.EquirectProps) : void;
        SetLeftTexture(InTexture: $Nullable<UE.Texture>) : void;
        SetPriority(InPriority: number) : void;
        SetQuadSize(InQuadSize: UE.Vector2D) : void;
        SetTexture(InTexture: $Nullable<UE.Texture>) : void;
        SetUVRect(InUVRect: UE.Box2D) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StereoLayerComponent;
        static Load(InName: string): StereoLayerComponent;
    
        __tid_StereoLayerComponent_0__: boolean;
    }
    
    class StereoLayerFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static EnableAutoLoadingSplashScreen(InAutoShowEnabled: boolean) : void;
        static HideSplashScreen() : void;
        static SetSplashScreen(Texture: $Nullable<UE.Texture>, Scale?: UE.Vector2D /* = (X=1.000,Y=1.000) */, Offset?: UE.Vector /* = 0.000000,0.000000,0.000000 */, bShowLoadingMovie?: boolean /* = false */, bShowOnSet?: boolean /* = false */) : void;
        static ShowSplashScreen() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StereoLayerFunctionLibrary;
        static Load(InName: string): StereoLayerFunctionLibrary;
    
        __tid_StereoLayerFunctionLibrary_0__: boolean;
    }
    
    class StereoLayerShapeCubemap extends UE.StereoLayerShape {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StereoLayerShapeCubemap;
        static Load(InName: string): StereoLayerShapeCubemap;
    
        __tid_StereoLayerShapeCubemap_0__: boolean;
    }
    
    class StereoLayerShapeCylinder extends UE.StereoLayerShape {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Radius: number;
        OverlayArc: number;
        Height: number;
        SetHeight(InHeight: number) : void;
        SetOverlayArc(InOverlayArc: number) : void;
        SetRadius(InRadius: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StereoLayerShapeCylinder;
        static Load(InName: string): StereoLayerShapeCylinder;
    
        __tid_StereoLayerShapeCylinder_0__: boolean;
    }
    
    class StereoLayerShapeEquirect extends UE.StereoLayerShape {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LeftUVRect: UE.Box2D;
        RightUVRect: UE.Box2D;
        LeftScale: UE.Vector2D;
        RightScale: UE.Vector2D;
        LeftBias: UE.Vector2D;
        RightBias: UE.Vector2D;
        SetEquirectProps(InScaleBiases: UE.EquirectProps) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StereoLayerShapeEquirect;
        static Load(InName: string): StereoLayerShapeEquirect;
    
        __tid_StereoLayerShapeEquirect_0__: boolean;
    }
    
    class StreamedAudioPlatformData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StreamedAudioPlatformData_0__: boolean;
    }
    
    class StreamingRenderAssetPrimitiveInfo {
        constructor();
        constructor(RenderAsset: UE.StreamableRenderAsset, Bounds: UE.BoxSphereBounds, TexelFactor: number, PackedRelativeBox: number, bAllowInvalidTexelFactorWhenUnregistered: boolean);
        RenderAsset: UE.StreamableRenderAsset;
        Bounds: UE.BoxSphereBounds;
        TexelFactor: number;
        PackedRelativeBox: number;
        bAllowInvalidTexelFactorWhenUnregistered: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StreamingRenderAssetPrimitiveInfo_0__: boolean;
    }
    
    class StreamingSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AsyncLoadingThreadEnabled: boolean;
        WarnIfTimeLimitExceeded: boolean;
        TimeLimitExceededMultiplier: number;
        TimeLimitExceededMinTime: number;
        MinBulkDataSizeForAsyncLoading: number;
        UseBackgroundLevelStreaming: boolean;
        AsyncLoadingUseFullTimeLimit: boolean;
        AsyncLoadingTimeLimit: number;
        PriorityAsyncLoadingExtraTime: number;
        LevelStreamingActorsUpdateTimeLimit: number;
        PriorityLevelStreamingActorsUpdateExtraTime: number;
        LevelStreamingComponentsRegistrationGranularity: number;
        LevelStreamingUnregisterComponentsTimeLimit: number;
        LevelStreamingComponentsUnregistrationGranularity: number;
        FlushStreamingOnExit: boolean;
        EventDrivenLoaderEnabled: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StreamingSettings;
        static Load(InName: string): StreamingSettings;
    
        __tid_StreamingSettings_0__: boolean;
    }
    
    class StreamMediaSource extends UE.BaseMediaSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StreamUrl: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StreamMediaSource;
        static Load(InName: string): StreamMediaSource;
    
        __tid_StreamMediaSource_0__: boolean;
    }
    
    class StreamMediaSourceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StreamMediaSourceFactoryNew;
        static Load(InName: string): StreamMediaSourceFactoryNew;
    
        __tid_StreamMediaSourceFactoryNew_0__: boolean;
    }
    
    class StretchGizmoHandleDragOperation extends UE.ViewportDragOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StretchGizmoHandleDragOperation;
        static Load(InName: string): StretchGizmoHandleDragOperation;
    
        __tid_StretchGizmoHandleDragOperation_0__: boolean;
    }
    
    class StringTable extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StringTable;
        static Load(InName: string): StringTable;
    
        __tid_StringTable_0__: boolean;
    }
    
    class StringTableFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StringTableFactory;
        static Load(InName: string): StringTableFactory;
    
        __tid_StringTableFactory_0__: boolean;
    }
    
    class StrProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StrProperty;
        static Load(InName: string): StrProperty;
    
        __tid_StrProperty_0__: boolean;
    }
    
    class StructSerializerBuiltinTestStruct {
        constructor();
        constructor(Guid: UE.Guid, Name: string, String: string, Text: string, Vector: UE.Vector, Vector4: UE.Vector4, Rotator: UE.Rotator, Quat: UE.Quat, Color: UE.Color);
        Guid: UE.Guid;
        Name: string;
        String: string;
        Text: string;
        Vector: UE.Vector;
        Vector4: UE.Vector4;
        Rotator: UE.Rotator;
        Quat: UE.Quat;
        Color: UE.Color;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerBuiltinTestStruct_0__: boolean;
    }
    
    class StructSerializerArrayTestStruct {
        constructor();
        constructor(Int32Array: TArray<number>, ByteArray: TArray<number>, StaticSingleElement: number, StaticInt32Array: FixSizeArray<number>, StaticFloatArray: FixSizeArray<number>, VectorArray: TArray<UE.Vector>, StructArray: TArray<UE.StructSerializerBuiltinTestStruct>);
        Int32Array: TArray<number>;
        ByteArray: TArray<number>;
        StaticSingleElement: number;
        StaticInt32Array: FixSizeArray<number>;
        StaticFloatArray: FixSizeArray<number>;
        VectorArray: TArray<UE.Vector>;
        StructArray: TArray<UE.StructSerializerBuiltinTestStruct>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerArrayTestStruct_0__: boolean;
    }
    
    class StructSerializerBooleanTestStruct {
        constructor();
        constructor(BoolFalse: boolean, BoolTrue: boolean, Bitfield0: boolean, Bitfield1: boolean, Bitfield2Set: boolean, Bitfield3: boolean, Bitfield4Set: boolean, Bitfield5Set: boolean, Bitfield6: boolean, Bitfield7Set: boolean);
        BoolFalse: boolean;
        BoolTrue: boolean;
        Bitfield0: boolean;
        Bitfield1: boolean;
        Bitfield2Set: boolean;
        Bitfield3: boolean;
        Bitfield4Set: boolean;
        Bitfield5Set: boolean;
        Bitfield6: boolean;
        Bitfield7Set: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerBooleanTestStruct_0__: boolean;
    }
    
    class StructSerializerByteArray {
        constructor();
        constructor(Dummy1: number, ByteArray: TArray<number>, Dummy2: number, Int8Array: TArray<number>, Dummy3: number);
        Dummy1: number;
        ByteArray: TArray<number>;
        Dummy2: number;
        Int8Array: TArray<number>;
        Dummy3: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerByteArray_0__: boolean;
    }
    
    class StructSerializerMapTestStruct {
        constructor();
        constructor(IntToStr: TMap<number, string>, StrToStr: TMap<string, string>, StrToVec: TMap<string, UE.Vector>, StrToStruct: TMap<string, UE.StructSerializerBuiltinTestStruct>);
        IntToStr: TMap<number, string>;
        StrToStr: TMap<string, string>;
        StrToVec: TMap<string, UE.Vector>;
        StrToStruct: TMap<string, UE.StructSerializerBuiltinTestStruct>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerMapTestStruct_0__: boolean;
    }
    
    class StructSerializerNumericTestStruct {
        constructor();
        constructor(Int8: number, Int16: number, Int32: number, Int64: bigint, UInt8: number, UInt16: number, UInt32: number, UInt64: bigint, Float: number, Double: number);
        Int8: number;
        Int16: number;
        Int32: number;
        Int64: bigint;
        UInt8: number;
        UInt16: number;
        UInt32: number;
        UInt64: bigint;
        Float: number;
        Double: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerNumericTestStruct_0__: boolean;
    }
    
    class StructSerializerObjectTestStruct {
        constructor();
        constructor(Class: UE.Class, SubClass: UE.Class, SoftClass: TSoftClassPtr<UE.MetaData>, Object: UE.Object, WeakObject: TWeakObjectPtr<UE.MetaData>, SoftObject: TSoftObjectPtr<UE.MetaData>, ClassPath: UE.SoftClassPath, ObjectPath: UE.SoftObjectPath);
        Class: UE.Class;
        SubClass: UE.Class;
        SoftClass: TSoftClassPtr<UE.MetaData>;
        Object: UE.Object;
        WeakObject: TWeakObjectPtr<UE.MetaData>;
        SoftObject: TSoftObjectPtr<UE.MetaData>;
        ClassPath: UE.SoftClassPath;
        ObjectPath: UE.SoftObjectPath;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerObjectTestStruct_0__: boolean;
    }
    
    class StructSerializerSetTestStruct {
        constructor();
        constructor(StrSet: TSet<string>, IntSet: TSet<number>, NameSet: TSet<string>, StructSet: TSet<UE.StructSerializerBuiltinTestStruct>);
        StrSet: TSet<string>;
        IntSet: TSet<number>;
        NameSet: TSet<string>;
        StructSet: TSet<UE.StructSerializerBuiltinTestStruct>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerSetTestStruct_0__: boolean;
    }
    
    class StructSerializerTestStruct {
        constructor();
        constructor(Numerics: UE.StructSerializerNumericTestStruct, Booleans: UE.StructSerializerBooleanTestStruct, Objects: UE.StructSerializerObjectTestStruct, Builtins: UE.StructSerializerBuiltinTestStruct, Arrays: UE.StructSerializerArrayTestStruct, Maps: UE.StructSerializerMapTestStruct, Sets: UE.StructSerializerSetTestStruct);
        Numerics: UE.StructSerializerNumericTestStruct;
        Booleans: UE.StructSerializerBooleanTestStruct;
        Objects: UE.StructSerializerObjectTestStruct;
        Builtins: UE.StructSerializerBuiltinTestStruct;
        Arrays: UE.StructSerializerArrayTestStruct;
        Maps: UE.StructSerializerMapTestStruct;
        Sets: UE.StructSerializerSetTestStruct;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructSerializerTestStruct_0__: boolean;
    }
    
    class StructureFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StructureFactory;
        static Load(InName: string): StructureFactory;
    
        __tid_StructureFactory_0__: boolean;
    }
    
    class StructVariableDescription {
        constructor();
        constructor(VarName: string, VarGuid: UE.Guid, FriendlyName: string, DefaultValue: string, Category: string, SubCategory: string, SubCategoryObject: TSoftObjectPtr<UE.Object>, PinValueType: UE.EdGraphTerminalType, ContainerType: UE.EPinContainerType, bIsArray: boolean, bIsSet: boolean, bIsMap: boolean, bInvalidMember: boolean, bDontEditOnInstance: boolean, bEnableSaveGame: boolean, bEnableMultiLineText: boolean, bEnable3dWidget: boolean, CurrentDefaultValue: string, ToolTip: string);
        VarName: string;
        VarGuid: UE.Guid;
        FriendlyName: string;
        DefaultValue: string;
        Category: string;
        SubCategory: string;
        SubCategoryObject: TSoftObjectPtr<UE.Object>;
        PinValueType: UE.EdGraphTerminalType;
        ContainerType: UE.EPinContainerType;
        bIsArray: boolean;
        bIsSet: boolean;
        bIsMap: boolean;
        bInvalidMember: boolean;
        bDontEditOnInstance: boolean;
        bEnableSaveGame: boolean;
        bEnableMultiLineText: boolean;
        bEnable3dWidget: boolean;
        CurrentDefaultValue: string;
        ToolTip: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_StructVariableDescription_0__: boolean;
    }
    
    class StructViewerProjectSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InternalOnlyPaths: TArray<UE.DirectoryPath>;
        InternalOnlyStructs: TArray<TSoftObjectPtr<UE.ScriptStruct>>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StructViewerProjectSettings;
        static Load(InName: string): StructViewerProjectSettings;
    
        __tid_StructViewerProjectSettings_0__: boolean;
    }
    
    class StructViewerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DisplayInternalStructs: boolean;
        DeveloperFolderType: UE.EStructViewerDeveloperType;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): StructViewerSettings;
        static Load(InName: string): StructViewerSettings;
    
        __tid_StructViewerSettings_0__: boolean;
    }
    
    class SubjectFrameHandle extends UE.LiveLinkBaseBlueprintData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubjectFrameHandle_0__: boolean;
    }
    
    class SubjectMetadata {
        constructor();
        constructor(StringMetadata: TMap<string, string>, SceneTimecode: UE.Timecode, SceneFramerate: UE.FrameRate);
        StringMetadata: TMap<string, string>;
        SceneTimecode: UE.Timecode;
        SceneFramerate: UE.FrameRate;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubjectMetadata_0__: boolean;
    }
    
    class SubmixEffectConvolutionReverbSettings {
        constructor();
        constructor(NormalizationVolumeDb: number, bBypass: boolean, bMixInputChannelFormatToImpulseResponseFormat: boolean, bMixReverbOutputToOutputChannelFormat: boolean, SurroundRearChannelBleedDb: number, bInvertRearChannelBleedPhase: boolean, bSurroundRearChannelFlip: boolean, SurroundRearChannelBleedAmount: number, ImpulseResponse: UE.AudioImpulseResponse, AllowHardwareAcceleration: boolean);
        NormalizationVolumeDb: number;
        bBypass: boolean;
        bMixInputChannelFormatToImpulseResponseFormat: boolean;
        bMixReverbOutputToOutputChannelFormat: boolean;
        SurroundRearChannelBleedDb: number;
        bInvertRearChannelBleedPhase: boolean;
        bSurroundRearChannelFlip: boolean;
        SurroundRearChannelBleedAmount: number;
        ImpulseResponse: UE.AudioImpulseResponse;
        AllowHardwareAcceleration: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectConvolutionReverbSettings_0__: boolean;
    }
    
    class SubmixEffectConvolutionReverbPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImpulseResponse: UE.AudioImpulseResponse;
        Settings: UE.SubmixEffectConvolutionReverbSettings;
        BlockSize: UE.ESubmixEffectConvolutionReverbBlockSize;
        bEnableHardwareAcceleration: boolean;
        SetImpulseResponse(InImpulseResponse: $Nullable<UE.AudioImpulseResponse>) : void;
        SetSettings(InSettings: UE.SubmixEffectConvolutionReverbSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectConvolutionReverbPreset;
        static Load(InName: string): SubmixEffectConvolutionReverbPreset;
    
        __tid_SubmixEffectConvolutionReverbPreset_0__: boolean;
    }
    
    class SubmixEffectDelaySettings {
        constructor();
        constructor(MaximumDelayLength: number, InterpolationTime: number, DelayLength: number);
        MaximumDelayLength: number;
        InterpolationTime: number;
        DelayLength: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectDelaySettings_0__: boolean;
    }
    
    class SubmixEffectDelayPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectDelaySettings;
        DynamicSettings: UE.SubmixEffectDelaySettings;
        GetMaxDelayInMilliseconds() : number;
        SetDelay(Length: number) : void;
        SetInterpolationTime(Time: number) : void;
        SetSettings(InSettings: UE.SubmixEffectDelaySettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectDelayPreset;
        static Load(InName: string): SubmixEffectDelayPreset;
    
        __tid_SubmixEffectDelayPreset_0__: boolean;
    }
    
    class SubmixEffectDynamicProcessorFilterSettings {
        constructor();
        constructor(bEnabled: boolean, Cutoff: number, GainDb: number);
        bEnabled: boolean;
        Cutoff: number;
        GainDb: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectDynamicProcessorFilterSettings_0__: boolean;
    }
    
    class SubmixEffectDynamicsProcessorSettings {
        constructor();
        constructor(DynamicsProcessorType: UE.ESubmixEffectDynamicsProcessorType, PeakMode: UE.ESubmixEffectDynamicsPeakMode, LinkMode: UE.ESubmixEffectDynamicsChannelLinkMode, InputGainDb: number, ThresholdDb: number, Ratio: number, KneeBandwidthDb: number, LookAheadMsec: number, AttackTimeMsec: number, ReleaseTimeMsec: number, ExternalSubmix: UE.SoundSubmix, bChannelLinked: boolean, bAnalogMode: boolean, bKeyAudition: boolean, KeyGainDb: number, OutputGainDb: number, KeyHighshelf: UE.SubmixEffectDynamicProcessorFilterSettings, KeyLowshelf: UE.SubmixEffectDynamicProcessorFilterSettings);
        DynamicsProcessorType: UE.ESubmixEffectDynamicsProcessorType;
        PeakMode: UE.ESubmixEffectDynamicsPeakMode;
        LinkMode: UE.ESubmixEffectDynamicsChannelLinkMode;
        InputGainDb: number;
        ThresholdDb: number;
        Ratio: number;
        KneeBandwidthDb: number;
        LookAheadMsec: number;
        AttackTimeMsec: number;
        ReleaseTimeMsec: number;
        ExternalSubmix: UE.SoundSubmix;
        bChannelLinked: boolean;
        bAnalogMode: boolean;
        bKeyAudition: boolean;
        KeyGainDb: number;
        OutputGainDb: number;
        KeyHighshelf: UE.SubmixEffectDynamicProcessorFilterSettings;
        KeyLowshelf: UE.SubmixEffectDynamicProcessorFilterSettings;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectDynamicsProcessorSettings_0__: boolean;
    }
    
    class SubmixEffectDynamicsProcessorPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectDynamicsProcessorSettings;
        SetExternalSubmix(Submix: $Nullable<UE.SoundSubmix>) : void;
        SetSettings(Settings: UE.SubmixEffectDynamicsProcessorSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectDynamicsProcessorPreset;
        static Load(InName: string): SubmixEffectDynamicsProcessorPreset;
    
        __tid_SubmixEffectDynamicsProcessorPreset_0__: boolean;
    }
    
    class SubmixEffectEQBand {
        constructor();
        constructor(Frequency: number, Bandwidth: number, GainDb: number, bEnabled: boolean);
        Frequency: number;
        Bandwidth: number;
        GainDb: number;
        bEnabled: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectEQBand_0__: boolean;
    }
    
    class SubmixEffectFilterSettings {
        constructor();
        constructor(FilterType: UE.ESubmixFilterType, FilterAlgorithm: UE.ESubmixFilterAlgorithm, FilterFrequency: number, FilterQ: number);
        FilterType: UE.ESubmixFilterType;
        FilterAlgorithm: UE.ESubmixFilterAlgorithm;
        FilterFrequency: number;
        FilterQ: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectFilterSettings_0__: boolean;
    }
    
    class SubmixEffectFilterPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectFilterSettings;
        SetFilterAlgorithm(InAlgorithm: UE.ESubmixFilterAlgorithm) : void;
        SetFilterCutoffFrequency(InFrequency: number) : void;
        SetFilterCutoffFrequencyMod(InFrequency: number) : void;
        SetFilterQ(InQ: number) : void;
        SetFilterQMod(InQ: number) : void;
        SetFilterType(InType: UE.ESubmixFilterType) : void;
        SetSettings(InSettings: UE.SubmixEffectFilterSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectFilterPreset;
        static Load(InName: string): SubmixEffectFilterPreset;
    
        __tid_SubmixEffectFilterPreset_0__: boolean;
    }
    
    class SubmixEffectFlexiverbSettings {
        constructor();
        constructor(PreDelay: number, DecayTime: number, RoomDampening: number, Complexity: number);
        PreDelay: number;
        DecayTime: number;
        RoomDampening: number;
        Complexity: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectFlexiverbSettings_0__: boolean;
    }
    
    class SubmixEffectFlexiverbPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectFlexiverbSettings;
        SetSettings(InSettings: UE.SubmixEffectFlexiverbSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectFlexiverbPreset;
        static Load(InName: string): SubmixEffectFlexiverbPreset;
    
        __tid_SubmixEffectFlexiverbPreset_0__: boolean;
    }
    
    class SubmixEffectMultibandCompressorSettings {
        constructor();
        constructor(DynamicsProcessorType: UE.ESubmixEffectDynamicsProcessorType, PeakMode: UE.ESubmixEffectDynamicsPeakMode, LookAheadMsec: number, bLinkChannels: boolean, bAnalogMode: boolean, bFourPole: boolean, Bands: TArray<UE.DynamicsBandSettings>);
        DynamicsProcessorType: UE.ESubmixEffectDynamicsProcessorType;
        PeakMode: UE.ESubmixEffectDynamicsPeakMode;
        LookAheadMsec: number;
        bLinkChannels: boolean;
        bAnalogMode: boolean;
        bFourPole: boolean;
        Bands: TArray<UE.DynamicsBandSettings>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectMultibandCompressorSettings_0__: boolean;
    }
    
    class SubmixEffectMultibandCompressorPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectMultibandCompressorSettings;
        SetSettings(InSettings: UE.SubmixEffectMultibandCompressorSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectMultibandCompressorPreset;
        static Load(InName: string): SubmixEffectMultibandCompressorPreset;
    
        __tid_SubmixEffectMultibandCompressorPreset_0__: boolean;
    }
    
    class SubmixEffectReverbSettings {
        constructor();
        constructor(bBypassEarlyReflections: boolean, ReflectionsDelay: number, GainHF: number, ReflectionsGain: number, bBypassLateReflections: boolean, LateDelay: number, DecayTime: number, Density: number, Diffusion: number, AirAbsorptionGainHF: number, DecayHFRatio: number, LateGain: number, Gain: number, WetLevel: number, DryLevel: number, bBypass: boolean);
        bBypassEarlyReflections: boolean;
        ReflectionsDelay: number;
        GainHF: number;
        ReflectionsGain: number;
        bBypassLateReflections: boolean;
        LateDelay: number;
        DecayTime: number;
        Density: number;
        Diffusion: number;
        AirAbsorptionGainHF: number;
        DecayHFRatio: number;
        LateGain: number;
        Gain: number;
        WetLevel: number;
        DryLevel: number;
        bBypass: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectReverbSettings_0__: boolean;
    }
    
    class SubmixEffectReverbPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectReverbSettings;
        SetSettings(InSettings: UE.SubmixEffectReverbSettings) : void;
        SetSettingsWithReverbEffect(InReverbEffect: $Nullable<UE.ReverbEffect>, WetLevel: number, DryLevel?: number /* = 0.000000 */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectReverbPreset;
        static Load(InName: string): SubmixEffectReverbPreset;
    
        __tid_SubmixEffectReverbPreset_0__: boolean;
    }
    
    class SubmixEffectStereoDelaySettings {
        constructor();
        constructor(DelayMode: UE.EStereoDelaySourceEffect, DelayTimeMsec: number, Feedback: number, DelayRatio: number, WetLevel: number, DryLevel: number, bFilterEnabled: boolean, FilterType: UE.EStereoDelayFiltertype, FilterFrequency: number, FilterQ: number);
        DelayMode: UE.EStereoDelaySourceEffect;
        DelayTimeMsec: number;
        Feedback: number;
        DelayRatio: number;
        WetLevel: number;
        DryLevel: number;
        bFilterEnabled: boolean;
        FilterType: UE.EStereoDelayFiltertype;
        FilterFrequency: number;
        FilterQ: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectStereoDelaySettings_0__: boolean;
    }
    
    class SubmixEffectStereoDelayPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectStereoDelaySettings;
        SetSettings(InSettings: UE.SubmixEffectStereoDelaySettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectStereoDelayPreset;
        static Load(InName: string): SubmixEffectStereoDelayPreset;
    
        __tid_SubmixEffectStereoDelayPreset_0__: boolean;
    }
    
    class SubmixEffectSubmixEQSettings {
        constructor();
        constructor(EQBands: TArray<UE.SubmixEffectEQBand>);
        EQBands: TArray<UE.SubmixEffectEQBand>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectSubmixEQSettings_0__: boolean;
    }
    
    class SubmixEffectSubmixEQPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectSubmixEQSettings;
        SetSettings(InSettings: UE.SubmixEffectSubmixEQSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectSubmixEQPreset;
        static Load(InName: string): SubmixEffectSubmixEQPreset;
    
        __tid_SubmixEffectSubmixEQPreset_0__: boolean;
    }
    
    class TapDelayInfo {
        constructor();
        constructor(TapLineMode: UE.ETapLineMode, DelayLength: number, Gain: number, OutputChannel: number, PanInDegrees: number, TapId: number);
        TapLineMode: UE.ETapLineMode;
        DelayLength: number;
        Gain: number;
        OutputChannel: number;
        PanInDegrees: number;
        TapId: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TapDelayInfo_0__: boolean;
    }
    
    class SubmixEffectTapDelaySettings {
        constructor();
        constructor(MaximumDelayLength: number, InterpolationTime: number, Taps: TArray<UE.TapDelayInfo>);
        MaximumDelayLength: number;
        InterpolationTime: number;
        Taps: TArray<UE.TapDelayInfo>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SubmixEffectTapDelaySettings_0__: boolean;
    }
    
    class SubmixEffectTapDelayPreset extends UE.SoundEffectSubmixPreset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.SubmixEffectTapDelaySettings;
        AddTap(TapId: $Ref<number>) : void;
        GetMaxDelayInMilliseconds() : number;
        GetTap(TapId: number, TapInfo: $Ref<UE.TapDelayInfo>) : void;
        GetTapIds(TapIds: $Ref<TArray<number>>) : void;
        RemoveTap(TapId: number) : void;
        SetInterpolationTime(Time: number) : void;
        SetSettings(InSettings: UE.SubmixEffectTapDelaySettings) : void;
        SetTap(TapId: number, TapInfo: UE.TapDelayInfo) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubmixEffectTapDelayPreset;
        static Load(InName: string): SubmixEffectTapDelayPreset;
    
        __tid_SubmixEffectTapDelayPreset_0__: boolean;
    }
    
    class SubsurfaceProfileFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubsurfaceProfileFactory;
        static Load(InName: string): SubsurfaceProfileFactory;
    
        __tid_SubsurfaceProfileFactory_0__: boolean;
    }
    
    class SubsurfaceProfileRenderer extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubsurfaceProfileRenderer;
        static Load(InName: string): SubsurfaceProfileRenderer;
    
        __tid_SubsurfaceProfileRenderer_0__: boolean;
    }
    
    class SubsystemBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetEngineSubsystem(Class: $Nullable<UE.Class>) : UE.EngineSubsystem;
        static GetGameInstanceSubsystem(ContextObject: $Nullable<UE.Object>, Class: $Nullable<UE.Class>) : UE.GameInstanceSubsystem;
        static GetLocalPlayerSubsystem(ContextObject: $Nullable<UE.Object>, Class: $Nullable<UE.Class>) : UE.LocalPlayerSubsystem;
        static GetLocalPlayerSubSystemFromPlayerController(PlayerController: $Nullable<UE.PlayerController>, Class: $Nullable<UE.Class>) : UE.LocalPlayerSubsystem;
        static GetWorldSubsystem(ContextObject: $Nullable<UE.Object>, Class: $Nullable<UE.Class>) : UE.WorldSubsystem;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubsystemBlueprintLibrary;
        static Load(InName: string): SubsystemBlueprintLibrary;
    
        __tid_SubsystemBlueprintLibrary_0__: boolean;
    }
    
    class SubUVAnimationFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialTexture: UE.Texture2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SubUVAnimationFactory;
        static Load(InName: string): SubUVAnimationFactory;
    
        __tid_SubUVAnimationFactory_0__: boolean;
    }
    
    class SwapSoundForDialogueInCuesCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SwapSoundForDialogueInCuesCommandlet;
        static Load(InName: string): SwapSoundForDialogueInCuesCommandlet;
    
        __tid_SwapSoundForDialogueInCuesCommandlet_0__: boolean;
    }
    
    class SwarmAlertMessage {
        constructor();
        constructor(JobGuid: UE.Guid, AlertLevel: number, ObjectGuid: UE.Guid, TypeId: number, TextMessage: string);
        JobGuid: UE.Guid;
        AlertLevel: number;
        ObjectGuid: UE.Guid;
        TypeId: number;
        TextMessage: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmAlertMessage_0__: boolean;
    }
    
    class SwarmInfoMessage {
        constructor();
        constructor(TextMessage: string);
        TextMessage: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmInfoMessage_0__: boolean;
    }
    
    class SwarmJobStateMessage {
        constructor();
        constructor(Guid: UE.Guid, State: number, Message: string, ExitCode: number, RunningTime: number);
        Guid: UE.Guid;
        State: number;
        Message: string;
        ExitCode: number;
        RunningTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmJobStateMessage_0__: boolean;
    }
    
    class SwarmPingMessage {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmPingMessage_0__: boolean;
    }
    
    class SwarmPongMessage {
        constructor();
        constructor(bIsEditor: boolean, ComputerName: string);
        bIsEditor: boolean;
        ComputerName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmPongMessage_0__: boolean;
    }
    
    class SwarmQuitMessage {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmQuitMessage_0__: boolean;
    }
    
    class SwarmTaskRequestMessage {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmTaskRequestMessage_0__: boolean;
    }
    
    class SwarmTaskRequestReleaseMessage {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmTaskRequestReleaseMessage_0__: boolean;
    }
    
    class SwarmTaskRequestReservationMessage {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmTaskRequestReservationMessage_0__: boolean;
    }
    
    class SwarmTaskRequestSpecificationMessage {
        constructor();
        constructor(TaskGuid: UE.Guid, Parameters: string, Flags: number, Cost: number, Dependencies: TArray<string>);
        TaskGuid: UE.Guid;
        Parameters: string;
        Flags: number;
        Cost: number;
        Dependencies: TArray<string>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmTaskRequestSpecificationMessage_0__: boolean;
    }
    
    class SwarmTaskStateMessage {
        constructor();
        constructor(Guid: UE.Guid, State: number, Message: string, ExitCode: number, RunningTime: number);
        Guid: UE.Guid;
        State: number;
        Message: string;
        ExitCode: number;
        RunningTime: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmTaskStateMessage_0__: boolean;
    }
    
    class SwarmTimingMessage {
        constructor();
        constructor(State: number, ThreadNum: number);
        State: number;
        ThreadNum: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SwarmTimingMessage_0__: boolean;
    }
    
    class SwitchActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SceneComponent: UE.SceneComponent;
        LastSelectedOption: number;
        GetOptions() : TArray<UE.Actor>;
        GetSelectedOption() : number;
        SelectOption(OptionIndex: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SwitchActor;
        static Load(InName: string): SwitchActor;
    
        __tid_SwitchActor_0__: boolean;
    }
    
    class SwitchActorFactory extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SwitchActorFactory;
        static Load(InName: string): SwitchActorFactory;
    
        __tid_SwitchActorFactory_0__: boolean;
    }
    
    class Synth2DSliderStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(NormalThumbImage: UE.SlateBrush, DisabledThumbImage: UE.SlateBrush, NormalBarImage: UE.SlateBrush, DisabledBarImage: UE.SlateBrush, BackgroundImage: UE.SlateBrush, BarThickness: number);
        NormalThumbImage: UE.SlateBrush;
        DisabledThumbImage: UE.SlateBrush;
        NormalBarImage: UE.SlateBrush;
        DisabledBarImage: UE.SlateBrush;
        BackgroundImage: UE.SlateBrush;
        BarThickness: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Synth2DSliderStyle_0__: boolean;
    }
    
    class Synth2DSlider extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ValueX: number;
        ValueY: number;
        ValueXDelegate: $Delegate<() => number>;
        ValueYDelegate: $Delegate<() => number>;
        WidgetStyle: UE.Synth2DSliderStyle;
        SliderHandleColor: UE.LinearColor;
        IndentHandle: boolean;
        Locked: boolean;
        StepSize: number;
        IsFocusable: boolean;
        OnMouseCaptureBegin: $MulticastDelegate<() => void>;
        OnMouseCaptureEnd: $MulticastDelegate<() => void>;
        OnControllerCaptureBegin: $MulticastDelegate<() => void>;
        OnControllerCaptureEnd: $MulticastDelegate<() => void>;
        OnValueChangedX: $MulticastDelegate<(Value: number) => void>;
        OnValueChangedY: $MulticastDelegate<(Value: number) => void>;
        GetValue() : UE.Vector2D;
        SetIndentHandle(InValue: boolean) : void;
        SetLocked(InValue: boolean) : void;
        SetSliderHandleColor(InValue: UE.LinearColor) : void;
        SetStepSize(InValue: number) : void;
        SetValue(InValue: UE.Vector2D) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Synth2DSlider;
        static Load(InName: string): Synth2DSlider;
    
        __tid_Synth2DSlider_0__: boolean;
    }
    
    class SynthComponentClassTemplate extends UE.ClassTemplate {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthComponentClassTemplate;
        static Load(InName: string): SynthComponentClassTemplate;
    
        __tid_SynthComponentClassTemplate_0__: boolean;
    }
    
    class SynthComponentMonoWaveTable extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnTableAltered: $MulticastDelegate<(TableIndex: number) => void>;
        OnNumTablesChanged: $MulticastDelegate<() => void>;
        CurrentPreset: UE.MonoWaveTableSynthPreset;
        GetCurveTangent(TableIndex: number) : number;
        GetKeyFrameValuesForTable(TableIndex: number) : TArray<number>;
        GetMaxTableIndex() : number;
        GetNumTableEntries() : number;
        NoteOff(InMidiNote: number) : void;
        NoteOn(InMidiNote: number, InVelocity: number) : void;
        RefreshAllWaveTables() : void;
        RefreshWaveTable(Index: number) : void;
        SetAmpEnvelopeAttackTime(InAttackTimeMsec: number) : void;
        SetAmpEnvelopeBiasDepth(InDepth: number) : void;
        SetAmpEnvelopeBiasInvert(bInBiasInvert: boolean) : void;
        SetAmpEnvelopeDecayTime(InDecayTimeMsec: number) : void;
        SetAmpEnvelopeDepth(InDepth: number) : void;
        SetAmpEnvelopeInvert(bInInvert: boolean) : void;
        SetAmpEnvelopeReleaseTime(InReleaseTimeMsec: number) : void;
        SetAmpEnvelopeSustainGain(InSustainGain: number) : void;
        SetCurveInterpolationType(InterpolationType: UE.CurveInterpolationType, TableIndex: number) : boolean;
        SetCurveTangent(TableIndex: number, InNewTangent: number) : boolean;
        SetCurveValue(TableIndex: number, KeyframeIndex: number, NewValue: number) : boolean;
        SetFilterEnvelopeAttackTime(InAttackTimeMsec: number) : void;
        SetFilterEnvelopeBiasDepth(InDepth: number) : void;
        SetFilterEnvelopeBiasInvert(bInBiasInvert: boolean) : void;
        SetFilterEnvelopeDepth(InDepth: number) : void;
        SetFilterEnvelopeInvert(bInInvert: boolean) : void;
        SetFilterEnvelopenDecayTime(InDecayTimeMsec: number) : void;
        SetFilterEnvelopeReleaseTime(InReleaseTimeMsec: number) : void;
        SetFilterEnvelopeSustainGain(InSustainGain: number) : void;
        SetFrequency(FrequencyHz: number) : void;
        SetFrequencyPitchBend(FrequencyOffsetCents: number) : void;
        SetFrequencyWithMidiNote(InMidiNote: number) : void;
        SetLowPassFilterResonance(InNewQ: number) : void;
        SetPositionEnvelopeAttackTime(InAttackTimeMsec: number) : void;
        SetPositionEnvelopeBiasDepth(InDepth: number) : void;
        SetPositionEnvelopeBiasInvert(bInBiasInvert: boolean) : void;
        SetPositionEnvelopeDecayTime(InDecayTimeMsec: number) : void;
        SetPositionEnvelopeDepth(InDepth: number) : void;
        SetPositionEnvelopeInvert(bInInvert: boolean) : void;
        SetPositionEnvelopeReleaseTime(InReleaseTimeMsec: number) : void;
        SetPositionEnvelopeSustainGain(InSustainGain: number) : void;
        SetPosLfoDepth(InLfoDepth: number) : void;
        SetPosLfoFrequency(InLfoFrequency: number) : void;
        SetPosLfoType(InLfoType: UE.ESynthLFOType) : void;
        SetSustainPedalState(InSustainPedalState: boolean) : void;
        SetWaveTablePosition(InPosition: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthComponentMonoWaveTable;
        static Load(InName: string): SynthComponentMonoWaveTable;
    
        __tid_SynthComponentMonoWaveTable_0__: boolean;
    }
    
    class SynthComponentMoto extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MotoSynthPreset: UE.MotoSynthPreset;
        RPM: number;
        GetRPMRange(OutMinRPM: $Ref<number>, OutMaxRPM: $Ref<number>) : void;
        IsEnabled() : boolean;
        SetRPM(InRPM: number, InTimeSec: number) : void;
        SetSettings(InSettings: UE.MotoSynthRuntimeSettings) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthComponentMoto;
        static Load(InName: string): SynthComponentMoto;
    
        __tid_SynthComponentMoto_0__: boolean;
    }
    
    class SynthComponentToneGenerator extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Frequency: number;
        Volume: number;
        SetFrequency(InFrequency: number) : void;
        SetVolume(InVolume: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthComponentToneGenerator;
        static Load(InName: string): SynthComponentToneGenerator;
    
        __tid_SynthComponentToneGenerator_0__: boolean;
    }
    
    class SynthesisEditorSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BitCrusherWidget: UE.SoftObjectPath;
        ChorusWidget: UE.SoftObjectPath;
        DynamicsProcessorWidget: UE.SoftObjectPath;
        EnvelopeFollowerWidget: UE.SoftObjectPath;
        EQWidget: UE.SoftObjectPath;
        FilterWidget: UE.SoftObjectPath;
        FoldbackDistortionWidget: UE.SoftObjectPath;
        MidSideSpreaderWidget: UE.SoftObjectPath;
        PannerWidget: UE.SoftObjectPath;
        PhaserWidget: UE.SoftObjectPath;
        RingModulationWidget: UE.SoftObjectPath;
        SimpleDelayWidget: UE.SoftObjectPath;
        StereoDelayWidget: UE.SoftObjectPath;
        WaveShaperWidget: UE.SoftObjectPath;
        SubmixConvolutionReverbWidget: UE.SoftObjectPath;
        SubmixDelayWidget: UE.SoftObjectPath;
        SubmixFilterWidget: UE.SoftObjectPath;
        SubmixFlexiverbWidget: UE.SoftObjectPath;
        SubmixStereoDelayWidget: UE.SoftObjectPath;
        SubmixTapDelayWidget: UE.SoftObjectPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthesisEditorSettings;
        static Load(InName: string): SynthesisEditorSettings;
    
        __tid_SynthesisEditorSettings_0__: boolean;
    }
    
    class SynthesisUtilitiesBlueprintFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetLinearFrequency(InLogFrequencyValue: number, InDomainMin: number, InDomainMax: number, InRangeMin: number, InRangeMax: number) : number;
        static GetLogFrequency(InLinearValue: number, InDomainMin: number, InDomainMax: number, InRangeMin: number, InRangeMax: number) : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthesisUtilitiesBlueprintFunctionLibrary;
        static Load(InName: string): SynthesisUtilitiesBlueprintFunctionLibrary;
    
        __tid_SynthesisUtilitiesBlueprintFunctionLibrary_0__: boolean;
    }
    
    class SynthKnobStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(LargeKnob: UE.SlateBrush, LargeKnobOverlay: UE.SlateBrush, MediumKnob: UE.SlateBrush, MediumKnobOverlay: UE.SlateBrush, MinValueAngle: number, MaxValueAngle: number, KnobSize: UE.ESynthKnobSize);
        LargeKnob: UE.SlateBrush;
        LargeKnobOverlay: UE.SlateBrush;
        MediumKnob: UE.SlateBrush;
        MediumKnobOverlay: UE.SlateBrush;
        MinValueAngle: number;
        MaxValueAngle: number;
        KnobSize: UE.ESynthKnobSize;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SynthKnobStyle_0__: boolean;
    }
    
    class SynthKnob extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Value: number;
        StepSize: number;
        MouseSpeed: number;
        MouseFineTuneSpeed: number;
        ShowTooltipInfo: boolean;
        ParameterName: string;
        ParameterUnits: string;
        ValueDelegate: $Delegate<() => number>;
        WidgetStyle: UE.SynthKnobStyle;
        Locked: boolean;
        IsFocusable: boolean;
        OnMouseCaptureBegin: $MulticastDelegate<() => void>;
        OnMouseCaptureEnd: $MulticastDelegate<() => void>;
        OnControllerCaptureBegin: $MulticastDelegate<() => void>;
        OnControllerCaptureEnd: $MulticastDelegate<() => void>;
        OnValueChanged: $MulticastDelegate<(Value: number) => void>;
        GetValue() : number;
        SetLocked(InValue: boolean) : void;
        SetStepSize(InValue: number) : void;
        SetValue(InValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthKnob;
        static Load(InName: string): SynthKnob;
    
        __tid_SynthKnob_0__: boolean;
    }
    
    class SynthSamplePlayer extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SoundWave: UE.SoundWave;
        OnSampleLoaded: $MulticastDelegate<() => void>;
        OnSamplePlaybackProgress: $MulticastDelegate<(ProgressPercent: number, ProgressTimeSeconds: number) => void>;
        GetCurrentPlaybackProgressPercent() : number;
        GetCurrentPlaybackProgressTime() : number;
        GetSampleDuration() : number;
        IsLoaded() : boolean;
        SeekToTime(TimeSec: number, SeekType: UE.ESamplePlayerSeekType, bWrap?: boolean /* = true */) : void;
        SetPitch(InPitch: number, TimeSec: number) : void;
        SetScrubMode(bScrubMode: boolean) : void;
        SetScrubTimeWidth(InScrubTimeWidthSec: number) : void;
        SetSoundWave(InSoundWave: $Nullable<UE.SoundWave>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SynthSamplePlayer;
        static Load(InName: string): SynthSamplePlayer;
    
        __tid_SynthSamplePlayer_0__: boolean;
    }
    
    class SynthSlateStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(SizeType: UE.ESynthSlateSizeType, ColorStyle: UE.ESynthSlateColorStyle);
        SizeType: UE.ESynthSlateSizeType;
        ColorStyle: UE.ESynthSlateColorStyle;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_SynthSlateStyle_0__: boolean;
    }
    
    class SystemTimeTimecodeProvider extends UE.TimecodeProvider {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FrameRate: UE.FrameRate;
        bGenerateFullFrame: boolean;
        bUseHighPerformanceClock: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): SystemTimeTimecodeProvider;
        static Load(InName: string): SystemTimeTimecodeProvider;
    
        __tid_SystemTimeTimecodeProvider_0__: boolean;
    }
    
    class TargetDeviceClaimDenied {
        constructor();
        constructor(DeviceName: string, HostName: string, HostUser: string);
        DeviceName: string;
        HostName: string;
        HostUser: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceClaimDenied_0__: boolean;
    }
    
    class TargetDeviceClaimed {
        constructor();
        constructor(DeviceName: string, HostName: string, HostUser: string);
        DeviceName: string;
        HostName: string;
        HostUser: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceClaimed_0__: boolean;
    }
    
    class TargetDeviceServiceDeployCommit {
        constructor();
        constructor(Variant: string, TransactionId: UE.Guid);
        Variant: string;
        TransactionId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceDeployCommit_0__: boolean;
    }
    
    class TargetDeviceServiceDeployFile {
        constructor();
        constructor(TargetFileName: string, TransactionId: UE.Guid);
        TargetFileName: string;
        TransactionId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceDeployFile_0__: boolean;
    }
    
    class TargetDeviceServiceDeployFinished {
        constructor();
        constructor(Variant: string, AppID: string, Succeeded: boolean, TransactionId: UE.Guid);
        Variant: string;
        AppID: string;
        Succeeded: boolean;
        TransactionId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceDeployFinished_0__: boolean;
    }
    
    class TargetDeviceServiceLaunchApp {
        constructor();
        constructor(Variant: string, AppID: string, BuildConfiguration: number, Params: string);
        Variant: string;
        AppID: string;
        BuildConfiguration: number;
        Params: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceLaunchApp_0__: boolean;
    }
    
    class TargetDeviceServiceLaunchFinished {
        constructor();
        constructor(AppID: string, ProcessId: number, Succeeded: boolean);
        AppID: string;
        ProcessId: number;
        Succeeded: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceLaunchFinished_0__: boolean;
    }
    
    class TargetDeviceServicePing {
        constructor();
        constructor(HostUser: string);
        HostUser: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServicePing_0__: boolean;
    }
    
    class TargetDeviceVariant {
        constructor();
        constructor(DeviceID: string, VariantName: string, TargetPlatformName: string, TargetPlatformId: string, VanillaPlatformId: string, PlatformDisplayName: string);
        DeviceID: string;
        VariantName: string;
        TargetPlatformName: string;
        TargetPlatformId: string;
        VanillaPlatformId: string;
        PlatformDisplayName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceVariant_0__: boolean;
    }
    
    class TargetDeviceServicePong {
        constructor();
        constructor(Connected: boolean, Authorized: boolean, HostName: string, HostUser: string, Make: string, Model: string, Name: string, DeviceUser: string, DeviceUserPassword: string, Shared: boolean, SupportsMultiLaunch: boolean, SupportsPowerOff: boolean, SupportsPowerOn: boolean, SupportsReboot: boolean, SupportsVariants: boolean, Type: string, DefaultVariant: string, Variants: TArray<UE.TargetDeviceVariant>, Aggregated: boolean, AllDevicesName: string, AllDevicesDefaultVariant: string);
        Connected: boolean;
        Authorized: boolean;
        HostName: string;
        HostUser: string;
        Make: string;
        Model: string;
        Name: string;
        DeviceUser: string;
        DeviceUserPassword: string;
        Shared: boolean;
        SupportsMultiLaunch: boolean;
        SupportsPowerOff: boolean;
        SupportsPowerOn: boolean;
        SupportsReboot: boolean;
        SupportsVariants: boolean;
        Type: string;
        DefaultVariant: string;
        Variants: TArray<UE.TargetDeviceVariant>;
        Aggregated: boolean;
        AllDevicesName: string;
        AllDevicesDefaultVariant: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServicePong_0__: boolean;
    }
    
    class TargetDeviceServicePowerOff {
        constructor();
        constructor(Force: boolean, Operator: string);
        Force: boolean;
        Operator: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServicePowerOff_0__: boolean;
    }
    
    class TargetDeviceServicePowerOn {
        constructor();
        constructor(Operator: string);
        Operator: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServicePowerOn_0__: boolean;
    }
    
    class TargetDeviceServiceReboot {
        constructor();
        constructor(Operator: string);
        Operator: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceReboot_0__: boolean;
    }
    
    class TargetDeviceServiceRunExecutable {
        constructor();
        constructor(Variant: string, ExecutablePath: string, Params: string);
        Variant: string;
        ExecutablePath: string;
        Params: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceRunExecutable_0__: boolean;
    }
    
    class TargetDeviceServiceRunFinished {
        constructor();
        constructor(Variant: string, ExecutablePath: string, ProcessId: number, Succeeded: boolean);
        Variant: string;
        ExecutablePath: string;
        ProcessId: number;
        Succeeded: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceRunFinished_0__: boolean;
    }
    
    class TargetDeviceServiceTerminateLaunchedProcess {
        constructor();
        constructor(Variant: string, AppID: string);
        Variant: string;
        AppID: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceServiceTerminateLaunchedProcess_0__: boolean;
    }
    
    class TargetDeviceUnclaimed {
        constructor();
        constructor(DeviceName: string, HostName: string, HostUser: string);
        DeviceName: string;
        HostName: string;
        HostUser: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TargetDeviceUnclaimed_0__: boolean;
    }
    
    class TargetPoint extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SpriteComponent: UE.BillboardComponent;
        ArrowComponent: UE.ArrowComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TargetPoint;
        static Load(InName: string): TargetPoint;
    
        __tid_TargetPoint_0__: boolean;
    }
    
    class TcpMessagingSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnableTransport: boolean;
        ListenEndpoint: string;
        ConnectToEndpoints: TArray<string>;
        ConnectionRetryDelay: number;
        bStopServiceWhenAppDeactivates: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TcpMessagingSettings;
        static Load(InName: string): TcpMessagingSettings;
    
        __tid_TcpMessagingSettings_0__: boolean;
    }
    
    class TemplateBindingGenerator extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Gen() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateBindingGenerator;
        static Load(InName: string): TemplateBindingGenerator;
    
        __tid_TemplateBindingGenerator_0__: boolean;
    }
    
    class TemplateCategoryDef {
        constructor();
        constructor(Key: string, LocalizedDisplayNames: TArray<UE.LocalizedTemplateString>, LocalizedDescriptions: TArray<UE.LocalizedTemplateString>, Icon: string, IsMajorCategory: boolean);
        Key: string;
        LocalizedDisplayNames: TArray<UE.LocalizedTemplateString>;
        LocalizedDescriptions: TArray<UE.LocalizedTemplateString>;
        Icon: string;
        IsMajorCategory: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TemplateCategoryDef_0__: boolean;
    }
    
    class TemplateCategories extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Categories: TArray<UE.TemplateCategoryDef>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateCategories;
        static Load(InName: string): TemplateCategories;
    
        __tid_TemplateCategories_0__: boolean;
    }
    
    class TemplateMapInfo {
        constructor();
        constructor(ThumbnailTexture: UE.Texture2D, Map: string);
        ThumbnailTexture: UE.Texture2D;
        Map: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TemplateMapInfo_0__: boolean;
    }
    
    class TemplateMapMetadata extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateMapMetadata;
        static Load(InName: string): TemplateMapMetadata;
    
        __tid_TemplateMapMetadata_0__: boolean;
    }
    
    class TemplateSequencePlayer extends UE.MovieSceneSequencePlayer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateTemplateSequencePlayer(WorldContextObject: $Nullable<UE.Object>, TemplateSequence: $Nullable<UE.TemplateSequence>, Settings: UE.MovieSceneSequencePlaybackSettings, OutActor: $Ref<UE.TemplateSequenceActor>) : UE.TemplateSequencePlayer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequencePlayer;
        static Load(InName: string): TemplateSequencePlayer;
    
        __tid_TemplateSequencePlayer_0__: boolean;
    }
    
    class TemplateSequenceBindingOverrideData {
        constructor();
        constructor(Object: TWeakObjectPtr<UE.Object>, bOverridesDefault: boolean);
        Object: TWeakObjectPtr<UE.Object>;
        bOverridesDefault: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TemplateSequenceBindingOverrideData_0__: boolean;
    }
    
    class TemplateSequenceActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PlaybackSettings: UE.MovieSceneSequencePlaybackSettings;
        SequencePlayer: UE.TemplateSequencePlayer;
        TemplateSequence: UE.SoftObjectPath;
        BindingOverride: UE.TemplateSequenceBindingOverrideData;
        GetSequence() : UE.TemplateSequence;
        GetSequencePlayer() : UE.TemplateSequencePlayer;
        LoadSequence() : UE.TemplateSequence;
        SetBinding(Actor: $Nullable<UE.Actor>) : void;
        SetSequence(InSequence: $Nullable<UE.TemplateSequence>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequenceActor;
        static Load(InName: string): TemplateSequenceActor;
    
        __tid_TemplateSequenceActor_0__: boolean;
    }
    
    class TemplateSequenceEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequenceEditorSettings;
        static Load(InName: string): TemplateSequenceEditorSettings;
    
        __tid_TemplateSequenceEditorSettings_0__: boolean;
    }
    
    class TemplateSequenceFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequenceFactoryNew;
        static Load(InName: string): TemplateSequenceFactoryNew;
    
        __tid_TemplateSequenceFactoryNew_0__: boolean;
    }
    
    class TemplateSequenceSection extends UE.MovieSceneSubSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequenceSection;
        static Load(InName: string): TemplateSequenceSection;
    
        __tid_TemplateSequenceSection_0__: boolean;
    }
    
    class TemplateSequenceSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequenceSystem;
        static Load(InName: string): TemplateSequenceSystem;
    
        __tid_TemplateSequenceSystem_0__: boolean;
    }
    
    class TemplateSequenceTrack extends UE.MovieSceneSubTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TemplateSequenceTrack;
        static Load(InName: string): TemplateSequenceTrack;
    
        __tid_TemplateSequenceTrack_0__: boolean;
    }
    
    class TerrainSplineActorFactory extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TerrainSplineActorFactory;
        static Load(InName: string): TerrainSplineActorFactory;
    
        __tid_TerrainSplineActorFactory_0__: boolean;
    }
    
    class TestBeaconClient extends UE.OnlineBeaconClient {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ClientPing() : void;
        ServerPong() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBeaconClient;
        static Load(InName: string): TestBeaconClient;
    
        __tid_TestBeaconClient_0__: boolean;
    }
    
    class TestBeaconHost extends UE.OnlineBeaconHostObject {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBeaconHost;
        static Load(InName: string): TestBeaconHost;
    
        __tid_TestBeaconHost_0__: boolean;
    }
    
    class TestBTDecorator_Blackboard extends UE.BTDecorator_Blackboard {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LogIndexBecomeRelevant: number;
        LogIndexCeaseRelevant: number;
        LogIndexCalculate: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTDecorator_Blackboard;
        static Load(InName: string): TestBTDecorator_Blackboard;
    
        __tid_TestBTDecorator_Blackboard_0__: boolean;
    }
    
    class TestBTDecorator_CantExecute extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTDecorator_CantExecute;
        static Load(InName: string): TestBTDecorator_CantExecute;
    
        __tid_TestBTDecorator_CantExecute_0__: boolean;
    }
    
    class TestBTDecorator_DelayedAbort extends UE.BTDecorator {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DelayTicks: number;
        bOnlyOnce: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTDecorator_DelayedAbort;
        static Load(InName: string): TestBTDecorator_DelayedAbort;
    
        __tid_TestBTDecorator_DelayedAbort_0__: boolean;
    }
    
    class TestBTService_Log extends UE.BTService {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LogActivation: number;
        LogDeactivation: number;
        KeyNameTick: string;
        LogTick: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTService_Log;
        static Load(InName: string): TestBTService_Log;
    
        __tid_TestBTService_Log_0__: boolean;
    }
    
    class TestBTTask_LatentWithFlags extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LogIndexExecuteStart: number;
        LogIndexExecuteFinish: number;
        LogIndexAbortStart: number;
        LogIndexAbortFinish: number;
        ExecuteTicks: number;
        AbortTicks: number;
        KeyNameExecute: string;
        KeyNameAbort: string;
        LogResult: UE.EBTNodeResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTTask_LatentWithFlags;
        static Load(InName: string): TestBTTask_LatentWithFlags;
    
        __tid_TestBTTask_LatentWithFlags_0__: boolean;
    }
    
    class TestBTTask_Log extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LogIndex: number;
        LogFinished: number;
        ExecutionTicks: number;
        LogResult: UE.EBTNodeResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTTask_Log;
        static Load(InName: string): TestBTTask_Log;
    
        __tid_TestBTTask_Log_0__: boolean;
    }
    
    class TestBTTask_SetFlag extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        KeyName: string;
        bValue: boolean;
        TaskResult: UE.EBTNodeResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTTask_SetFlag;
        static Load(InName: string): TestBTTask_SetFlag;
    
        __tid_TestBTTask_SetFlag_0__: boolean;
    }
    
    class TestBTTask_SetValue extends UE.BTTaskNode {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        KeyName: string;
        Value: number;
        TaskResult: UE.EBTNodeResult;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestBTTask_SetValue;
        static Load(InName: string): TestBTTask_SetValue;
    
        __tid_TestBTTask_SetValue_0__: boolean;
    }
    
    class TestMovieSceneEvalTemplate extends UE.MovieSceneEvalTemplate {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TestMovieSceneEvalTemplate_0__: boolean;
    }
    
    class TestMovieSceneSection extends UE.MovieSceneSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestMovieSceneSection;
        static Load(InName: string): TestMovieSceneSection;
    
        __tid_TestMovieSceneSection_0__: boolean;
    }
    
    class TestMovieSceneSequence extends UE.MovieSceneSequence {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MovieScene: UE.MovieScene;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestMovieSceneSequence;
        static Load(InName: string): TestMovieSceneSequence;
    
        __tid_TestMovieSceneSequence_0__: boolean;
    }
    
    class TestMovieSceneSubSection extends UE.MovieSceneSubSection {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestMovieSceneSubSection;
        static Load(InName: string): TestMovieSceneSubSection;
    
        __tid_TestMovieSceneSubSection_0__: boolean;
    }
    
    class TestMovieSceneSubTrack extends UE.MovieSceneSubTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SectionArray: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestMovieSceneSubTrack;
        static Load(InName: string): TestMovieSceneSubTrack;
    
        __tid_TestMovieSceneSubTrack_0__: boolean;
    }
    
    class TestMovieSceneTrack extends UE.MovieSceneTrack {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bHighPassFilter: boolean;
        SectionArray: TArray<UE.MovieSceneSection>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestMovieSceneTrack;
        static Load(InName: string): TestMovieSceneTrack;
    
        __tid_TestMovieSceneTrack_0__: boolean;
    }
    
    class TestPawnAction_Log extends UE.PawnAction {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestPawnAction_Log;
        static Load(InName: string): TestPawnAction_Log;
    
        __tid_TestPawnAction_Log_0__: boolean;
    }
    
    class TestPawnAction_CallFunction extends UE.TestPawnAction_Log {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestPawnAction_CallFunction;
        static Load(InName: string): TestPawnAction_CallFunction;
    
        __tid_TestPawnAction_CallFunction_0__: boolean;
    }
    
    class TestPhaseComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestPhaseComponent;
        static Load(InName: string): TestPhaseComponent;
    
        __tid_TestPhaseComponent_0__: boolean;
    }
    
    class TestSparseClassDataBase extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestSparseClassDataBase;
        static Load(InName: string): TestSparseClassDataBase;
    
        __tid_TestSparseClassDataBase_0__: boolean;
    }
    
    class TestSparseClassData extends UE.TestSparseClassDataBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TestSparseClassData;
        static Load(InName: string): TestSparseClassData;
    
        __tid_TestSparseClassData_0__: boolean;
    }
    
    class TestSparseClassDataStorage {
        constructor();
        constructor(Map: TMap<number, number>);
        Map: TMap<number, number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TestSparseClassDataStorage_0__: boolean;
    }
    
    class TetrahedronBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Radius: number;
        SphereExtrapolation: number;
        GroupName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TetrahedronBuilder;
        static Load(InName: string): TetrahedronBuilder;
    
        __tid_TetrahedronBuilder_0__: boolean;
    }
    
    class TexAligner extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefTexAlign: UE.ETexAlign;
        TAxis: number;
        UTile: number;
        VTile: number;
        Desc: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TexAligner;
        static Load(InName: string): TexAligner;
    
        __tid_TexAligner_0__: boolean;
    }
    
    class TexAlignerBox extends UE.TexAligner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TexAlignerBox;
        static Load(InName: string): TexAlignerBox;
    
        __tid_TexAlignerBox_0__: boolean;
    }
    
    class TexAlignerDefault extends UE.TexAligner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TexAlignerDefault;
        static Load(InName: string): TexAlignerDefault;
    
        __tid_TexAlignerDefault_0__: boolean;
    }
    
    class TexAlignerFit extends UE.TexAligner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TexAlignerFit;
        static Load(InName: string): TexAlignerFit;
    
        __tid_TexAlignerFit_0__: boolean;
    }
    
    class TexAlignerPlanar extends UE.TexAligner {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TexAlignerPlanar;
        static Load(InName: string): TexAlignerPlanar;
    
        __tid_TexAlignerPlanar_0__: boolean;
    }
    
    class TextAssetCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextAssetCommandlet;
        static Load(InName: string): TextAssetCommandlet;
    
        __tid_TextAssetCommandlet_0__: boolean;
    }
    
    class TextBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetStringValue() : string;
        GetTextValue() : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextBinding;
        static Load(InName: string): TextBinding;
    
        __tid_TextBinding_0__: boolean;
    }
    
    class TextBlock extends UE.TextLayoutWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Text: string;
        TextDelegate: $Delegate<() => string>;
        ColorAndOpacity: UE.SlateColor;
        ColorAndOpacityDelegate: $Delegate<() => UE.SlateColor>;
        Font: UE.SlateFontInfo;
        StrikeBrush: UE.SlateBrush;
        ShadowOffset: UE.Vector2D;
        ShadowColorAndOpacity: UE.LinearColor;
        ShadowColorAndOpacityDelegate: $Delegate<() => UE.LinearColor>;
        MinDesiredWidth: number;
        bWrapWithInvalidationPanel: boolean;
        bAutoWrapText: boolean;
        TextTransformPolicy: UE.ETextTransformPolicy;
        bSimpleTextMode: boolean;
        GetDynamicFontMaterial() : UE.MaterialInstanceDynamic;
        GetDynamicOutlineMaterial() : UE.MaterialInstanceDynamic;
        GetText() : string;
        SetAutoWrapText(InAutoTextWrap: boolean) : void;
        SetColorAndOpacity(InColorAndOpacity: UE.SlateColor) : void;
        SetFont(InFontInfo: UE.SlateFontInfo) : void;
        SetMinDesiredWidth(InMinDesiredWidth: number) : void;
        SetOpacity(InOpacity: number) : void;
        SetShadowColorAndOpacity(InShadowColorAndOpacity: UE.LinearColor) : void;
        SetShadowOffset(InShadowOffset: UE.Vector2D) : void;
        SetStrikeBrush(InStrikeBrush: UE.SlateBrush) : void;
        SetText(InText: string) : void;
        SetTextTransformPolicy(InTransformPolicy: UE.ETextTransformPolicy) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextBlock;
        static Load(InName: string): TextBlock;
    
        __tid_TextBlock_0__: boolean;
    }
    
    class TextBlockWidgetStyle extends UE.SlateWidgetStyleContainerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextBlockStyle: UE.TextBlockStyle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextBlockWidgetStyle;
        static Load(InName: string): TextBlockWidgetStyle;
    
        __tid_TextBlockWidgetStyle_0__: boolean;
    }
    
    class TextBuffer extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextBuffer;
        static Load(InName: string): TextBuffer;
    
        __tid_TextBuffer_0__: boolean;
    }
    
    class TextBufferExporterTXT extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextBufferExporterTXT;
        static Load(InName: string): TextBufferExporterTXT;
    
        __tid_TextBufferExporterTXT_0__: boolean;
    }
    
    class TextProperty extends UE.Property {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextProperty;
        static Load(InName: string): TextProperty;
    
        __tid_TextProperty_0__: boolean;
    }
    
    class TextPropertyTestObject extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultedText: string;
        UndefaultedText: string;
        TransientText: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextPropertyTestObject;
        static Load(InName: string): TextPropertyTestObject;
    
        __tid_TextPropertyTestObject_0__: boolean;
    }
    
    class TextRenderActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TextRender: UE.TextRenderComponent;
        SpriteComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextRenderActor;
        static Load(InName: string): TextRenderActor;
    
        __tid_TextRenderActor_0__: boolean;
    }
    
    class TextSizingParameters {
        constructor();
        constructor(DrawX: number, DrawY: number, DrawXL: number, DrawYL: number, Scaling: UE.Vector2D, DrawFont: UE.Font, SpacingAdjust: UE.Vector2D);
        DrawX: number;
        DrawY: number;
        DrawXL: number;
        DrawYL: number;
        Scaling: UE.Vector2D;
        DrawFont: UE.Font;
        SpacingAdjust: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TextSizingParameters_0__: boolean;
    }
    
    class Texture2DArrayFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialTextures: TArray<UE.Texture2D>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Texture2DArrayFactory;
        static Load(InName: string): Texture2DArrayFactory;
    
        __tid_Texture2DArrayFactory_0__: boolean;
    }
    
    class Texture2DArrayThumbnailRenderer extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Texture2DArrayThumbnailRenderer;
        static Load(InName: string): Texture2DArrayThumbnailRenderer;
    
        __tid_Texture2DArrayThumbnailRenderer_0__: boolean;
    }
    
    class Texture2DFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Height: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Texture2DFactoryNew;
        static Load(InName: string): Texture2DFactoryNew;
    
        __tid_Texture2DFactoryNew_0__: boolean;
    }
    
    class TextureAdapterClickTool extends UE.MeshClickTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureAdapterClickTool;
        static Load(InName: string): TextureAdapterClickTool;
    
        __tid_TextureAdapterClickTool_0__: boolean;
    }
    
    class TextureAdapterClickToolBuilder extends UE.SingleClickToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureAdapterClickToolBuilder;
        static Load(InName: string): TextureAdapterClickToolBuilder;
    
        __tid_TextureAdapterClickToolBuilder_0__: boolean;
    }
    
    class TextureCubeExporterHDR extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureCubeExporterHDR;
        static Load(InName: string): TextureCubeExporterHDR;
    
        __tid_TextureCubeExporterHDR_0__: boolean;
    }
    
    class TextureCubeThumbnailRenderer extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureCubeThumbnailRenderer;
        static Load(InName: string): TextureCubeThumbnailRenderer;
    
        __tid_TextureCubeThumbnailRenderer_0__: boolean;
    }
    
    class TextureExporterBMP extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureExporterBMP;
        static Load(InName: string): TextureExporterBMP;
    
        __tid_TextureExporterBMP_0__: boolean;
    }
    
    class TextureExporterHDR extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureExporterHDR;
        static Load(InName: string): TextureExporterHDR;
    
        __tid_TextureExporterHDR_0__: boolean;
    }
    
    class TextureExporterPCX extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureExporterPCX;
        static Load(InName: string): TextureExporterPCX;
    
        __tid_TextureExporterPCX_0__: boolean;
    }
    
    class TextureExporterTGA extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureExporterTGA;
        static Load(InName: string): TextureExporterTGA;
    
        __tid_TextureExporterTGA_0__: boolean;
    }
    
    class TextureImage extends UE.Image {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bMatchSize: boolean;
        TextureName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureImage;
        static Load(InName: string): TextureImage;
    
        __tid_TextureImage_0__: boolean;
    }
    
    class TextureImportSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AutoVTSize: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureImportSettings;
        static Load(InName: string): TextureImportSettings;
    
        __tid_TextureImportSettings_0__: boolean;
    }
    
    class TextureMipDataProviderFactory extends UE.AssetUserData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureMipDataProviderFactory;
        static Load(InName: string): TextureMipDataProviderFactory;
    
        __tid_TextureMipDataProviderFactory_0__: boolean;
    }
    
    class TexturePaintToolset extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TexturePaintToolset;
        static Load(InName: string): TexturePaintToolset;
    
        __tid_TexturePaintToolset_0__: boolean;
    }
    
    class TexturePlatformData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TexturePlatformData_0__: boolean;
    }
    
    class TextureRenderTarget2DArrayFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Height: number;
        Slices: number;
        Format: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTarget2DArrayFactoryNew;
        static Load(InName: string): TextureRenderTarget2DArrayFactoryNew;
    
        __tid_TextureRenderTarget2DArrayFactoryNew_0__: boolean;
    }
    
    class TextureRenderTargetCubeFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Format: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTargetCubeFactoryNew;
        static Load(InName: string): TextureRenderTargetCubeFactoryNew;
    
        __tid_TextureRenderTargetCubeFactoryNew_0__: boolean;
    }
    
    class TextureRenderTargetFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Height: number;
        Format: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTargetFactoryNew;
        static Load(InName: string): TextureRenderTargetFactoryNew;
    
        __tid_TextureRenderTargetFactoryNew_0__: boolean;
    }
    
    class TextureRenderTargetVolumeFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Width: number;
        Height: number;
        Depth: number;
        Format: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureRenderTargetVolumeFactoryNew;
        static Load(InName: string): TextureRenderTargetVolumeFactoryNew;
    
        __tid_TextureRenderTargetVolumeFactoryNew_0__: boolean;
    }
    
    class TextureStats extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Texture: TWeakObjectPtr<UE.Texture>;
        Actors: TArray<TWeakObjectPtr<UE.Actor>>;
        Type: string;
        MaxDim: UE.Vector2D;
        CurrentDim: UE.Vector2D;
        Format: UE.EPixelFormat;
        Group: UE.TextureGroup;
        LODBias: number;
        CurrentKB: number;
        FullyLoadedKB: number;
        NumUses: number;
        LastTimeRendered: number;
        Path: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TextureStats;
        static Load(InName: string): TextureStats;
    
        __tid_TextureStats_0__: boolean;
    }
    
    class TGUnitTestCallee extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VP: UE.Vector;
        sVP: Vector;
        ConstTArrayRefIntRet(Data: TArray<UE.Vector>) : number;
        CustomStructRefNoRet(Data: $Ref<UE.CustomStruct>) : void;
        IntArgIntRet(Arg: number) : number;
        IntPtr(p0: $Ref<number>) : void;
        IntRef(p0: $Ref<number>) : void;
        NoArgNoRet() : void;
        RetInt() : number;
        sConstTArrayRefIntRet(p0: UE.TArray<UE.Vector>) : number;
        sCustomStructRefNoRet(p0: $Ref<CustomStruct>) : void;
        sIntArgIntRet(p0: number) : number;
        sNoArgNoRet() : void;
        sRetInt() : number;
        sStrArgIntRet(p0: string) : number;
        sTArrayRefIntRet(p0: $Ref<UE.TArray<UE.Vector>>) : number;
        sTArrayRet() : UE.TArray<number>;
        StdStringPtr(p0: $Ref<string>) : void;
        StdStringRef(p0: $Ref<string>) : void;
        StrArgIntRet(Str: string) : number;
        TArrayRefIntRet(Data: $Ref<TArray<UE.Vector>>) : number;
        TArrayRet() : TArray<number>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TGUnitTestCallee;
        static Load(InName: string): TGUnitTestCallee;
    
        __tid_TGUnitTestCallee_0__: boolean;
    }
    
    class Throbber extends UE.Widget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        NumberOfPieces: number;
        bAnimateHorizontally: boolean;
        bAnimateVertically: boolean;
        bAnimateOpacity: boolean;
        PieceImage: UE.SlateBrushAsset;
        Image: UE.SlateBrush;
        SetAnimateHorizontally(bInAnimateHorizontally: boolean) : void;
        SetAnimateOpacity(bInAnimateOpacity: boolean) : void;
        SetAnimateVertically(bInAnimateVertically: boolean) : void;
        SetNumberOfPieces(InNumberOfPieces: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Throbber;
        static Load(InName: string): Throbber;
    
        __tid_Throbber_0__: boolean;
    }
    
    class ThumbnailRenderingInfo {
        constructor();
        constructor(ClassNeedingThumbnailName: string, ClassNeedingThumbnail: UE.Class, RendererClassName: string, Renderer: UE.ThumbnailRenderer);
        ClassNeedingThumbnailName: string;
        ClassNeedingThumbnail: UE.Class;
        RendererClassName: string;
        Renderer: UE.ThumbnailRenderer;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ThumbnailRenderingInfo_0__: boolean;
    }
    
    class ThumbnailManager extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderableThumbnailTypes: TArray<UE.ThumbnailRenderingInfo>;
        NotSupported: UE.ThumbnailRenderingInfo;
        EditorCube: UE.StaticMesh;
        EditorSphere: UE.StaticMesh;
        EditorCylinder: UE.StaticMesh;
        EditorPlane: UE.StaticMesh;
        EditorSkySphere: UE.StaticMesh;
        FloorPlaneMaterial: UE.Material;
        AmbientCubemap: UE.TextureCube;
        CheckerboardTexture: UE.Texture2D;
        ThumbnailManagerClassName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ThumbnailManager;
        static Load(InName: string): ThumbnailManager;
    
        __tid_ThumbnailManager_0__: boolean;
    }
    
    class TickAnimationSharingFunction extends UE.TickFunction {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TickAnimationSharingFunction_0__: boolean;
    }
    
    class TickPrerequisite {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TickPrerequisite_0__: boolean;
    }
    
    class TileMapActorFactory extends UE.ActorFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TileMapActorFactory;
        static Load(InName: string): TileMapActorFactory;
    
        __tid_TileMapActorFactory_0__: boolean;
    }
    
    class TileSetImportMapping {
        constructor();
        constructor(SourceName: string, ImportedTileSet: TWeakObjectPtr<UE.PaperTileSet>, ImportedTexture: TWeakObjectPtr<UE.Texture>);
        SourceName: string;
        ImportedTileSet: TWeakObjectPtr<UE.PaperTileSet>;
        ImportedTexture: TWeakObjectPtr<UE.Texture>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TileSetImportMapping_0__: boolean;
    }
    
    class TileMapAssetImportData extends UE.AssetImportData {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TileSetMap: TArray<UE.TileSetImportMapping>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TileMapAssetImportData;
        static Load(InName: string): TileMapAssetImportData;
    
        __tid_TileMapAssetImportData_0__: boolean;
    }
    
    class TileMapBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static BreakTile(Tile: UE.PaperTileInfo, TileIndex: $Ref<number>, TileSet: $Ref<UE.PaperTileSet>, bFlipH: $Ref<boolean>, bFlipV: $Ref<boolean>, bFlipD: $Ref<boolean>) : void;
        static GetTileTransform(Tile: UE.PaperTileInfo) : UE.Transform;
        static GetTileUserData(Tile: UE.PaperTileInfo) : string;
        static MakeTile(TileIndex: number, TileSet: $Nullable<UE.PaperTileSet>, bFlipH: boolean, bFlipV: boolean, bFlipD: boolean) : UE.PaperTileInfo;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TileMapBlueprintLibrary;
        static Load(InName: string): TileMapBlueprintLibrary;
    
        __tid_TileMapBlueprintLibrary_0__: boolean;
    }
    
    class TileMapEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultBackgroundColor: UE.Color;
        bShowGridByDefault: boolean;
        DefaultTileGridColor: UE.Color;
        DefaultMultiTileGridColor: UE.Color;
        DefaultMultiTileGridWidth: number;
        DefaultMultiTileGridHeight: number;
        DefaultMultiTileGridOffsetX: number;
        DefaultMultiTileGridOffsetY: number;
        DefaultLayerGridColor: UE.Color;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TileMapEditorSettings;
        static Load(InName: string): TileMapEditorSettings;
    
        __tid_TileMapEditorSettings_0__: boolean;
    }
    
    class TileSetEditorSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultBackgroundColor: UE.Color;
        bShowGridByDefault: boolean;
        ExtrusionAmount: number;
        bPadToPowerOf2: boolean;
        bFillWithTransparentBlack: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TileSetEditorSettings;
        static Load(InName: string): TileSetEditorSettings;
    
        __tid_TileSetEditorSettings_0__: boolean;
    }
    
    class TileSheetPaddingFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SourceTileSet: UE.PaperTileSet;
        ExtrusionAmount: number;
        bPadToPowerOf2: boolean;
        bFillWithTransparentBlack: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TileSheetPaddingFactory;
        static Load(InName: string): TileSheetPaddingFactory;
    
        __tid_TileSheetPaddingFactory_0__: boolean;
    }
    
    class TileView extends UE.ListView {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EntryHeight: number;
        EntryWidth: number;
        TileAlignment: UE.EListItemAlignment;
        bWrapHorizontalNavigation: boolean;
        GetEntryHeight() : number;
        GetEntryWidth() : number;
        SetEntryHeight(NewHeight: number) : void;
        SetEntryWidth(NewWidth: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TileView;
        static Load(InName: string): TileView;
    
        __tid_TileView_0__: boolean;
    }
    
    class TimedDataChannelSampleTime {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimedDataChannelSampleTime_0__: boolean;
    }
    
    class TimedDataInputEvaluationData {
        constructor();
        constructor(DistanceToNewestSampleSeconds: number, DistanceToOldestSampleSeconds: number);
        DistanceToNewestSampleSeconds: number;
        DistanceToOldestSampleSeconds: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimedDataInputEvaluationData_0__: boolean;
    }
    
    class TimelineEventEntry {
        constructor();
        constructor(Time: number, EventFunc: $Delegate<() => void>);
        Time: number;
        EventFunc: $Delegate<() => void>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimelineEventEntry_0__: boolean;
    }
    
    class TimelineVectorTrack {
        constructor();
        constructor(VectorCurve: UE.CurveVector, InterpFunc: $Delegate<(Output: UE.Vector) => void>, TrackName: string, VectorPropertyName: string);
        VectorCurve: UE.CurveVector;
        InterpFunc: $Delegate<(Output: UE.Vector) => void>;
        TrackName: string;
        VectorPropertyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimelineVectorTrack_0__: boolean;
    }
    
    class TimelineFloatTrack {
        constructor();
        constructor(FloatCurve: UE.CurveFloat, InterpFunc: $Delegate<(Output: number) => void>, TrackName: string, FloatPropertyName: string);
        FloatCurve: UE.CurveFloat;
        InterpFunc: $Delegate<(Output: number) => void>;
        TrackName: string;
        FloatPropertyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimelineFloatTrack_0__: boolean;
    }
    
    class TimelineLinearColorTrack {
        constructor();
        constructor(LinearColorCurve: UE.CurveLinearColor, InterpFunc: $Delegate<(Output: UE.LinearColor) => void>, TrackName: string, LinearColorPropertyName: string);
        LinearColorCurve: UE.CurveLinearColor;
        InterpFunc: $Delegate<(Output: UE.LinearColor) => void>;
        TrackName: string;
        LinearColorPropertyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimelineLinearColorTrack_0__: boolean;
    }
    
    class Timeline {
        constructor();
        constructor(LengthMode: UE.ETimelineLengthMode, bLooping: boolean, bReversePlayback: boolean, bPlaying: boolean, Length: number, PlayRate: number, Position: number, Events: TArray<UE.TimelineEventEntry>, InterpVectors: TArray<UE.TimelineVectorTrack>, InterpFloats: TArray<UE.TimelineFloatTrack>, InterpLinearColors: TArray<UE.TimelineLinearColorTrack>, TimelinePostUpdateFunc: $Delegate<() => void>, TimelineFinishedFunc: $Delegate<() => void>, PropertySetObject: TWeakObjectPtr<UE.Object>, DirectionPropertyName: string);
        LengthMode: UE.ETimelineLengthMode;
        bLooping: boolean;
        bReversePlayback: boolean;
        bPlaying: boolean;
        Length: number;
        PlayRate: number;
        Position: number;
        Events: TArray<UE.TimelineEventEntry>;
        InterpVectors: TArray<UE.TimelineVectorTrack>;
        InterpFloats: TArray<UE.TimelineFloatTrack>;
        InterpLinearColors: TArray<UE.TimelineLinearColorTrack>;
        TimelinePostUpdateFunc: $Delegate<() => void>;
        TimelineFinishedFunc: $Delegate<() => void>;
        PropertySetObject: TWeakObjectPtr<UE.Object>;
        DirectionPropertyName: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Timeline_0__: boolean;
    }
    
    class TimelineComponent extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TheTimeline: UE.Timeline;
        bIgnoreTimeDilation: boolean;
        GetIgnoreTimeDilation() : boolean;
        GetPlaybackPosition() : number;
        GetPlayRate() : number;
        GetTimelineLength() : number;
        IsLooping() : boolean;
        IsPlaying() : boolean;
        IsReversing() : boolean;
        OnRep_Timeline() : void;
        Play() : void;
        PlayFromStart() : void;
        Reverse() : void;
        ReverseFromEnd() : void;
        SetFloatCurve(NewFloatCurve: $Nullable<UE.CurveFloat>, FloatTrackName: string) : void;
        SetIgnoreTimeDilation(bNewIgnoreTimeDilation: boolean) : void;
        SetLinearColorCurve(NewLinearColorCurve: $Nullable<UE.CurveLinearColor>, LinearColorTrackName: string) : void;
        SetLooping(bNewLooping: boolean) : void;
        SetNewTime(NewTime: number) : void;
        SetPlaybackPosition(NewPosition: number, bFireEvents: boolean, bFireUpdate?: boolean /* = true */) : void;
        SetPlayRate(NewRate: number) : void;
        SetTimelineLength(NewLength: number) : void;
        SetTimelineLengthMode(NewLengthMode: UE.ETimelineLengthMode) : void;
        SetVectorCurve(NewVectorCurve: $Nullable<UE.CurveVector>, VectorTrackName: string) : void;
        Stop() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TimelineComponent;
        static Load(InName: string): TimelineComponent;
    
        __tid_TimelineComponent_0__: boolean;
    }
    
    class TimeManagementBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Add_FrameNumberFrameNumber(A: UE.FrameNumber, B: UE.FrameNumber) : UE.FrameNumber;
        static Add_FrameNumberInteger(A: UE.FrameNumber, B: number) : UE.FrameNumber;
        static Conv_FrameNumberToInteger(InFrameNumber: UE.FrameNumber) : number;
        static Conv_FrameRateToSeconds(InFrameRate: UE.FrameRate) : number;
        static Conv_QualifiedFrameTimeToSeconds(InFrameTime: UE.QualifiedFrameTime) : number;
        static Conv_TimecodeToString(InTimecode: UE.Timecode, bForceSignDisplay?: boolean /* = false */) : string;
        static Divide_FrameNumberInteger(A: UE.FrameNumber, B: number) : UE.FrameNumber;
        static GetTimecode() : UE.Timecode;
        static GetTimecodeFrameRate() : UE.FrameRate;
        static IsValid_Framerate(InFrameRate: UE.FrameRate) : boolean;
        static IsValid_MultipleOf(InFrameRate: UE.FrameRate, OtherFramerate: UE.FrameRate) : boolean;
        static Multiply_FrameNumberInteger(A: UE.FrameNumber, B: number) : UE.FrameNumber;
        static Multiply_SecondsFrameRate(TimeInSeconds: number, FrameRate: UE.FrameRate) : UE.FrameTime;
        static SnapFrameTimeToRate(SourceTime: UE.FrameTime, SourceRate: UE.FrameRate, SnapToRate: UE.FrameRate) : UE.FrameTime;
        static Subtract_FrameNumberFrameNumber(A: UE.FrameNumber, B: UE.FrameNumber) : UE.FrameNumber;
        static Subtract_FrameNumberInteger(A: UE.FrameNumber, B: number) : UE.FrameNumber;
        static TransformTime(SourceTime: UE.FrameTime, SourceRate: UE.FrameRate, DestinationRate: UE.FrameRate) : UE.FrameTime;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TimeManagementBlueprintLibrary;
        static Load(InName: string): TimeManagementBlueprintLibrary;
    
        __tid_TimeManagementBlueprintLibrary_0__: boolean;
    }
    
    class TimeStretchCurveInstance {
        constructor();
        constructor(bHasValidData: boolean);
        bHasValidData: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TimeStretchCurveInstance_0__: boolean;
    }
    
    class TimeSynchronizableMediaSource extends UE.BaseMediaSource {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseTimeSynchronization: boolean;
        FrameDelay: number;
        TimeDelay: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TimeSynchronizableMediaSource;
        static Load(InName: string): TimeSynchronizableMediaSource;
    
        __tid_TimeSynchronizableMediaSource_0__: boolean;
    }
    
    class TimeSynchronizationSource extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseForSynchronization: boolean;
        FrameOffset: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TimeSynchronizationSource;
        static Load(InName: string): TimeSynchronizationSource;
    
        __tid_TimeSynchronizationSource_0__: boolean;
    }
    
    class ToFloatField extends UE.FieldNodeFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IntField: UE.FieldNodeInt;
        SetToFloatField(IntegerField: $Nullable<UE.FieldNodeInt>) : UE.ToFloatField;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToFloatField;
        static Load(InName: string): ToFloatField;
    
        __tid_ToFloatField_0__: boolean;
    }
    
    class ToIntegerField extends UE.FieldNodeInt {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FloatField: UE.FieldNodeFloat;
        SetToIntegerField(FloatField: $Nullable<UE.FieldNodeFloat>) : UE.ToIntegerField;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToIntegerField;
        static Load(InName: string): ToIntegerField;
    
        __tid_ToIntegerField_0__: boolean;
    }
    
    class ToolDynamicUIAction {
        constructor();
        constructor(ExecuteAction: $Delegate<(Context: UE.ToolMenuContext) => void>, CanExecuteAction: $Delegate<(Context: UE.ToolMenuContext) => boolean>, GetActionCheckState: $Delegate<(Context: UE.ToolMenuContext) => UE.ECheckBoxState>, IsActionVisibleDelegate: $Delegate<(Context: UE.ToolMenuContext) => boolean>);
        ExecuteAction: $Delegate<(Context: UE.ToolMenuContext) => void>;
        CanExecuteAction: $Delegate<(Context: UE.ToolMenuContext) => boolean>;
        GetActionCheckState: $Delegate<(Context: UE.ToolMenuContext) => UE.ECheckBoxState>;
        IsActionVisibleDelegate: $Delegate<(Context: UE.ToolMenuContext) => boolean>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolDynamicUIAction_0__: boolean;
    }
    
    class ToolFrameworkComponent extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolFrameworkComponent;
        static Load(InName: string): ToolFrameworkComponent;
    
        __tid_ToolFrameworkComponent_0__: boolean;
    }
    
    class ToolMenuContextExtensions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static FindByClass(Context: UE.ToolMenuContext, InClass: $Nullable<UE.Class>) : UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenuContextExtensions;
        static Load(InName: string): ToolMenuContextExtensions;
    
        __tid_ToolMenuContextExtensions_0__: boolean;
    }
    
    class ToolMenuStringCommand {
        constructor();
        constructor(Type: UE.EToolMenuStringCommandType, CustomType: string, String: string);
        Type: UE.EToolMenuStringCommandType;
        CustomType: string;
        String: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_ToolMenuStringCommand_0__: boolean;
    }
    
    class ToolMenuEntryExtensions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static BreakScriptSlateIcon(InValue: UE.ScriptSlateIcon, StyleSetName: $Ref<string>, StyleName: $Ref<string>, SmallStyleName: $Ref<string>) : void;
        static BreakStringCommand(InValue: UE.ToolMenuStringCommand, Type: $Ref<UE.EToolMenuStringCommandType>, CustomType: $Ref<string>, String: $Ref<string>) : void;
        static BreakToolMenuOwner(InValue: UE.ToolMenuOwner, Name: $Ref<string>) : void;
        static GetLabel(Target: UE.ToolMenuEntry) : string;
        static GetToolTip(Target: UE.ToolMenuEntry) : string;
        static InitMenuEntry(InOwner: string, InName: string, InLabel: string, InToolTip: string, CommandType: UE.EToolMenuStringCommandType, CustomCommandType: string, CommandString: string) : UE.ToolMenuEntry;
        static MakeScriptSlateIcon(StyleSetName: string, StyleName: string, SmallStyleName?: string /* = "None" */) : UE.ScriptSlateIcon;
        static MakeStringCommand(Type: UE.EToolMenuStringCommandType, CustomType: string, String: string) : UE.ToolMenuStringCommand;
        static MakeToolMenuOwner(Name: string) : UE.ToolMenuOwner;
        static SetIcon(Target: $Ref<UE.ToolMenuEntry>, StyleSetName: string, StyleName?: string /* = "None" */, SmallStyleName?: string /* = "None" */) : void;
        static SetLabel(Target: $Ref<UE.ToolMenuEntry>, Label: string) : void;
        static SetStringCommand(Target: $Ref<UE.ToolMenuEntry>, Type: UE.EToolMenuStringCommandType, CustomType: string, String: string) : void;
        static SetToolTip(Target: $Ref<UE.ToolMenuEntry>, ToolTip: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenuEntryExtensions;
        static Load(InName: string): ToolMenuEntryExtensions;
    
        __tid_ToolMenuEntryExtensions_0__: boolean;
    }
    
    class ToolMenus extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CustomizedMenus: TArray<UE.CustomizedToolMenu>;
        MenuSubstitutionsDuringGenerate: TMap<string, string>;
        Menus: TMap<string, UE.ToolMenu>;
        ExtendMenu(Name: string) : UE.ToolMenu;
        FindMenu(Name: string) : UE.ToolMenu;
        IsMenuRegistered(Name: string) : boolean;
        RefreshAllWidgets() : void;
        RefreshMenuWidget(Name: string) : boolean;
        RegisterMenu(Name: string, Parent?: string /* = "None" */, Type?: UE.EMultiBoxType /* = Menu */, bWarnIfAlreadyRegistered?: boolean /* = true */) : UE.ToolMenu;
        RemoveEntry(MenuName: string, Section: string, Name: string) : void;
        RemoveMenu(MenuName: string) : void;
        RemoveSection(MenuName: string, Section: string) : void;
        SetSectionLabel(MenuName: string, SectionName: string, Label: string) : void;
        SetSectionPosition(MenuName: string, SectionName: string, OtherSectionName: string, PositionType: UE.EToolMenuInsertType) : void;
        UnregisterOwnerByName(InOwnerName: string) : void;
        static AddMenuEntryObject(MenuEntryObject: $Nullable<UE.ToolMenuEntryScript>) : boolean;
        static FindContext(InContext: UE.ToolMenuContext, InClass: $Nullable<UE.Class>) : UE.Object;
        static Get() : UE.ToolMenus;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenus;
        static Load(InName: string): ToolMenus;
    
        __tid_ToolMenus_0__: boolean;
    }
    
    class ToolMenuSectionExtensions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddEntry(Section: $Ref<UE.ToolMenuSection>, Args: UE.ToolMenuEntry) : void;
        static AddEntryObject(Section: $Ref<UE.ToolMenuSection>, InObject: $Nullable<UE.ToolMenuEntryScript>) : void;
        static GetLabel(Section: UE.ToolMenuSection) : string;
        static SetLabel(Section: $Ref<UE.ToolMenuSection>, Label: string) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ToolMenuSectionExtensions;
        static Load(InName: string): ToolMenuSectionExtensions;
    
        __tid_ToolMenuSectionExtensions_0__: boolean;
    }
    
    class TouchInterfaceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TouchInterfaceFactory;
        static Load(InName: string): TouchInterfaceFactory;
    
        __tid_TouchInterfaceFactory_0__: boolean;
    }
    
    class TrackedGeometryGroup {
        constructor();
        constructor(ARActor: UE.ARActor, ARComponent: UE.ARComponent, TrackedGeometry: UE.ARTrackedGeometry);
        ARActor: UE.ARActor;
        ARComponent: UE.ARComponent;
        TrackedGeometry: UE.ARTrackedGeometry;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TrackedGeometryGroup_0__: boolean;
    }
    
    class TrackInstanceInputComponent {
        constructor();
        constructor(Section: UE.MovieSceneSection, OutputIndex: number);
        Section: UE.MovieSceneSection;
        OutputIndex: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TrackInstanceInputComponent_0__: boolean;
    }
    
    class TrackRenderData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TrackRenderData_0__: boolean;
    }
    
    class TransBuffer extends UE.Transactor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TransBuffer;
        static Load(InName: string): TransBuffer;
    
        __tid_TransBuffer_0__: boolean;
    }
    
    class TransformConstraint {
        constructor();
        constructor(Operator: UE.ConstraintDescription, SourceNode: string, TargetNode: string, Weight: number, bMaintainOffset: boolean);
        Operator: UE.ConstraintDescription;
        SourceNode: string;
        TargetNode: string;
        Weight: number;
        bMaintainOffset: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformConstraint_0__: boolean;
    }
    
    class TransformConstraintDescription extends UE.ConstraintDescriptionEx {
        constructor();
        constructor(TransformType: UE.ETransformConstraintType);
        TransformType: UE.ETransformConstraintType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformConstraintDescription_0__: boolean;
    }
    
    class TransformFilter {
        constructor();
        constructor(TranslationFilter: UE.FilterOptionPerAxis, RotationFilter: UE.FilterOptionPerAxis, ScaleFilter: UE.FilterOptionPerAxis);
        TranslationFilter: UE.FilterOptionPerAxis;
        RotationFilter: UE.FilterOptionPerAxis;
        ScaleFilter: UE.FilterOptionPerAxis;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformFilter_0__: boolean;
    }
    
    class TransformGizmo extends UE.InteractiveGizmo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActiveTarget: UE.TransformProxy;
        bSnapToWorldGrid: boolean;
        bGridSizeIsExplicit: boolean;
        ExplicitGridSize: UE.Vector;
        bRotationGridSizeIsExplicit: boolean;
        ExplicitRotationGridSize: UE.Rotator;
        bSnapToWorldRotGrid: boolean;
        bUseContextCoordinateSystem: boolean;
        CurrentCoordinateSystem: UE.EToolContextCoordinateSystem;
        ActiveComponents: TArray<UE.PrimitiveComponent>;
        NonuniformScaleComponents: TArray<UE.PrimitiveComponent>;
        ActiveGizmos: TArray<UE.InteractiveGizmo>;
        CameraAxisSource: UE.GizmoConstantFrameAxisSource;
        AxisXSource: UE.GizmoComponentAxisSource;
        AxisYSource: UE.GizmoComponentAxisSource;
        AxisZSource: UE.GizmoComponentAxisSource;
        UnitAxisXSource: UE.GizmoComponentAxisSource;
        UnitAxisYSource: UE.GizmoComponentAxisSource;
        UnitAxisZSource: UE.GizmoComponentAxisSource;
        StateTarget: UE.GizmoTransformChangeStateTarget;
        ScaledTransformSource: UE.GizmoScaledTransformSource;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TransformGizmo;
        static Load(InName: string): TransformGizmo;
    
        __tid_TransformGizmo_0__: boolean;
    }
    
    class TransformGizmoActor extends UE.GizmoActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TranslateX: UE.PrimitiveComponent;
        TranslateY: UE.PrimitiveComponent;
        TranslateZ: UE.PrimitiveComponent;
        TranslateYZ: UE.PrimitiveComponent;
        TranslateXZ: UE.PrimitiveComponent;
        TranslateXY: UE.PrimitiveComponent;
        RotateX: UE.PrimitiveComponent;
        RotateY: UE.PrimitiveComponent;
        RotateZ: UE.PrimitiveComponent;
        UniformScale: UE.PrimitiveComponent;
        AxisScaleX: UE.PrimitiveComponent;
        AxisScaleY: UE.PrimitiveComponent;
        AxisScaleZ: UE.PrimitiveComponent;
        PlaneScaleYZ: UE.PrimitiveComponent;
        PlaneScaleXZ: UE.PrimitiveComponent;
        PlaneScaleXY: UE.PrimitiveComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TransformGizmoActor;
        static Load(InName: string): TransformGizmoActor;
    
        __tid_TransformGizmoActor_0__: boolean;
    }
    
    class TransformGizmoBuilder extends UE.InteractiveGizmoBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TransformGizmoBuilder;
        static Load(InName: string): TransformGizmoBuilder;
    
        __tid_TransformGizmoBuilder_0__: boolean;
    }
    
    class TransformGizmoHandlePlacement {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformGizmoHandlePlacement_0__: boolean;
    }
    
    class TransformGizmoMeasurement {
        constructor();
        constructor(MeasurementText: UE.TextRenderComponent);
        MeasurementText: UE.TextRenderComponent;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformGizmoMeasurement_0__: boolean;
    }
    
    class TransformNoScale {
        constructor();
        constructor(Location: UE.Vector, Rotation: UE.Quat);
        Location: UE.Vector;
        Rotation: UE.Quat;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformNoScale_0__: boolean;
    }
    
    class TransformToolOptions {
        constructor();
        constructor(UpperBound: number, LowerBound: number, LeftBound: number, RightBound: number, ScaleCenterX: number, ScaleCenterY: number, FalloffInterpType: UE.EToolTransformInterpType);
        UpperBound: number;
        LowerBound: number;
        LeftBound: number;
        RightBound: number;
        ScaleCenterX: number;
        ScaleCenterY: number;
        FalloffInterpType: UE.EToolTransformInterpType;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TransformToolOptions_0__: boolean;
    }
    
    class TranslationChange {
        constructor();
        constructor(Version: string, DateAndTime: UE.DateTime, Source: string, Translation: string);
        Version: string;
        DateAndTime: UE.DateTime;
        Source: string;
        Translation: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TranslationChange_0__: boolean;
    }
    
    class TranslationContextInfo {
        constructor();
        constructor(Key: string, Context: string, Changes: TArray<UE.TranslationChange>);
        Key: string;
        Context: string;
        Changes: TArray<UE.TranslationChange>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TranslationContextInfo_0__: boolean;
    }
    
    class TranslationDragOperation extends UE.ViewportDragOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TranslationDragOperation;
        static Load(InName: string): TranslationDragOperation;
    
        __tid_TranslationDragOperation_0__: boolean;
    }
    
    class TranslationPickerSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bSubmitTranslationPickerChangesToLocalizationService: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TranslationPickerSettings;
        static Load(InName: string): TranslationPickerSettings;
    
        __tid_TranslationPickerSettings_0__: boolean;
    }
    
    class TranslationTrack {
        constructor();
        constructor(PosKeys: TArray<UE.Vector>, Times: TArray<number>);
        PosKeys: TArray<UE.Vector>;
        Times: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TranslationTrack_0__: boolean;
    }
    
    class TranslationUnit extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Namespace: string;
        Key: string;
        Source: string;
        Translation: string;
        Contexts: TArray<UE.TranslationContextInfo>;
        HasBeenReviewed: boolean;
        TranslationBeforeImport: string;
        LocresPath: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TranslationUnit;
        static Load(InName: string): TranslationUnit;
    
        __tid_TranslationUnit_0__: boolean;
    }
    
    class TreeView extends UE.ListView {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BP_OnGetItemChildren: $Delegate<(Item: $Nullable<UE.Object>, Children: $Ref<TArray<UE.Object>>) => void>;
        BP_OnItemExpansionChanged: $MulticastDelegate<(Item: $Nullable<UE.Object>, bIsExpanded: boolean) => void>;
        CollapseAll() : void;
        ExpandAll() : void;
        SetItemExpansion(Item: $Nullable<UE.Object>, bExpandItem: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TreeView;
        static Load(InName: string): TreeView;
    
        __tid_TreeView_0__: boolean;
    }
    
    class TriggerBase extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CollisionComponent: UE.ShapeComponent;
        SpriteComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TriggerBase;
        static Load(InName: string): TriggerBase;
    
        __tid_TriggerBase_0__: boolean;
    }
    
    class TriggerBox extends UE.TriggerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TriggerBox;
        static Load(InName: string): TriggerBox;
    
        __tid_TriggerBox_0__: boolean;
    }
    
    class TriggerCapsule extends UE.TriggerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TriggerCapsule;
        static Load(InName: string): TriggerCapsule;
    
        __tid_TriggerCapsule_0__: boolean;
    }
    
    class TriggerSphere extends UE.TriggerBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TriggerSphere;
        static Load(InName: string): TriggerSphere;
    
        __tid_TriggerSphere_0__: boolean;
    }
    
    class TriggerVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TriggerVolume;
        static Load(InName: string): TriggerVolume;
    
        __tid_TriggerVolume_0__: boolean;
    }
    
    class TrueTypeFontFactory extends UE.TextureFactory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ImportOptions: UE.FontImportOptions;
        bPropertiesConfigured: boolean;
        bFontSelected: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TrueTypeFontFactory;
        static Load(InName: string): TrueTypeFontFactory;
    
        __tid_TrueTypeFontFactory_0__: boolean;
    }
    
    class TsGameInstance extends UE.GameInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TsGameInstance;
        static Load(InName: string): TsGameInstance;
    
        __tid_TsGameInstance_0__: boolean;
    }
    
    class TurnBasedBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetIsMyTurn(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MatchID: string, bIsMyTurn: $Ref<boolean>) : void;
        static GetMyPlayerIndex(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MatchID: string, PlayerIndex: $Ref<number>) : void;
        static GetPlayerDisplayName(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, MatchID: string, PlayerIndex: number, PlayerDisplayName: $Ref<string>) : void;
        static RegisterTurnBasedMatchInterfaceObject(WorldContextObject: $Nullable<UE.Object>, PlayerController: $Nullable<UE.PlayerController>, Object: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TurnBasedBlueprintLibrary;
        static Load(InName: string): TurnBasedBlueprintLibrary;
    
        __tid_TurnBasedBlueprintLibrary_0__: boolean;
    }
    
    class TutorialProgress {
        constructor();
        constructor(Tutorial: UE.SoftClassPath, CurrentStage: number, bUserDismissed: boolean);
        Tutorial: UE.SoftClassPath;
        CurrentStage: number;
        bUserDismissed: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_TutorialProgress_0__: boolean;
    }
    
    class TutorialSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Categories: TArray<UE.TutorialCategory>;
        StartupTutorial: UE.SoftClassPath;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TutorialSettings;
        static Load(InName: string): TutorialSettings;
    
        __tid_TutorialSettings_0__: boolean;
    }
    
    class TutorialStateSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        TutorialsProgress: TArray<UE.TutorialProgress>;
        bDismissedAllTutorials: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TutorialStateSettings;
        static Load(InName: string): TutorialStateSettings;
    
        __tid_TutorialStateSettings_0__: boolean;
    }
    
    class TwitterIntegrationBase extends UE.PlatformInterfaceBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AuthorizeAccounts() : boolean;
        CanShowTweetUI() : boolean;
        GetAccountName(AccountIndex: number) : string;
        GetNumAccounts() : number;
        Init() : void;
        ShowTweetUI(InitialMessage: string, URL: string, Picture: string) : boolean;
        TwitterRequest(URL: string, ParamKeysAndValues: TArray<string>, RequestMethod: UE.ETwitterRequestMethod, AccountIndex: number) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TwitterIntegrationBase;
        static Load(InName: string): TwitterIntegrationBase;
    
        __tid_TwitterIntegrationBase_0__: boolean;
    }
    
    class TypeScriptBlueprint extends UE.Blueprint {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TypeScriptBlueprint;
        static Load(InName: string): TypeScriptBlueprint;
    
        __tid_TypeScriptBlueprint_0__: boolean;
    }
    
    class TypeScriptGameInstance extends UE.GameInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        StartNotify: $Delegate<() => void>;
        ShutdownNotify: $Delegate<() => void>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TypeScriptGameInstance;
        static Load(InName: string): TypeScriptGameInstance;
    
        __tid_TypeScriptGameInstance_0__: boolean;
    }
    
    class TypeScriptGeneratedClass extends UE.BlueprintGeneratedClass {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HasConstructor: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TypeScriptGeneratedClass;
        static Load(InName: string): TypeScriptGeneratedClass;
    
        __tid_TypeScriptGeneratedClass_0__: boolean;
    }
    
    class TypeScriptObject extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): TypeScriptObject;
        static Load(InName: string): TypeScriptObject;
    
        __tid_TypeScriptObject_0__: boolean;
    }
    
    class UdpMessagingSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnabledByDefault: boolean;
        EnableTransport: boolean;
        bAutoRepair: boolean;
        bStopServiceWhenAppDeactivates: boolean;
        UnicastEndpoint: string;
        MulticastEndpoint: string;
        MessageFormat: UE.EUdpMessageFormat;
        MulticastTimeToLive: number;
        StaticEndpoints: TArray<string>;
        EnableTunnel: boolean;
        TunnelUnicastEndpoint: string;
        TunnelMulticastEndpoint: string;
        RemoteTunnelEndpoints: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UdpMessagingSettings;
        static Load(InName: string): UdpMessagingSettings;
    
        __tid_UdpMessagingSettings_0__: boolean;
    }
    
    class UdpMockMessage {
        constructor();
        constructor(Data: TArray<number>);
        Data: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UdpMockMessage_0__: boolean;
    }
    
    class UInt16Property extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UInt16Property;
        static Load(InName: string): UInt16Property;
    
        __tid_UInt16Property_0__: boolean;
    }
    
    class UInt32Property extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UInt32Property;
        static Load(InName: string): UInt32Property;
    
        __tid_UInt32Property_0__: boolean;
    }
    
    class UInt64Property extends UE.NumericProperty {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UInt64Property;
        static Load(InName: string): UInt64Property;
    
        __tid_UInt64Property_0__: boolean;
    }
    
    class UMGEditorProjectSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultCompilerOptions: UE.WidgetCompilerOptions;
        DirectoryCompilerOptions: TArray<UE.DirectoryWidgetCompilerOptions>;
        bShowWidgetsFromEngineContent: boolean;
        bShowWidgetsFromDeveloperContent: boolean;
        CategoriesToHide: TArray<string>;
        WidgetClassesToHide: TArray<UE.SoftClassPath>;
        bUseWidgetTemplateSelector: boolean;
        DefaultRootWidget: UE.Class;
        DefaultWidgetParentClass: TSoftClassPtr<UE.UserWidget>;
        DebugResolutions: TArray<UE.DebugResolution>;
        Version: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UMGEditorProjectSettings;
        static Load(InName: string): UMGEditorProjectSettings;
    
        __tid_UMGEditorProjectSettings_0__: boolean;
    }
    
    class UMGManager extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static CreateReactWidget(World: $Nullable<UE.World>) : UE.ReactWidget;
        static CreateWidget(World: $Nullable<UE.World>, Class: $Nullable<UE.Class>) : UE.UserWidget;
        static SynchronizeSlotProperties(Slot: $Nullable<UE.PanelSlot>) : void;
        static SynchronizeWidgetProperties(Widget: $Nullable<UE.Widget>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UMGManager;
        static Load(InName: string): UMGManager;
    
        __tid_UMGManager_0__: boolean;
    }
    
    class UndoHistorySettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bShowTransactionDetails: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UndoHistorySettings;
        static Load(InName: string): UndoHistorySettings;
    
        __tid_UndoHistorySettings_0__: boolean;
    }
    
    class UniformGridSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        Row: number;
        Column: number;
        SetColumn(InColumn: number) : void;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetRow(InRow: number) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UniformGridSlot;
        static Load(InName: string): UniformGridSlot;
    
        __tid_UniformGridSlot_0__: boolean;
    }
    
    class UniformGridPanel extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SlotPadding: UE.Margin;
        MinDesiredSlotWidth: number;
        MinDesiredSlotHeight: number;
        AddChildToUniformGrid(Content: $Nullable<UE.Widget>, InRow?: number /* = 0 */, InColumn?: number /* = 0 */) : UE.UniformGridSlot;
        SetMinDesiredSlotHeight(InMinDesiredSlotHeight: number) : void;
        SetMinDesiredSlotWidth(InMinDesiredSlotWidth: number) : void;
        SetSlotPadding(InSlotPadding: UE.Margin) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UniformGridPanel;
        static Load(InName: string): UniformGridPanel;
    
        __tid_UniformGridPanel_0__: boolean;
    }
    
    class UniformInteger extends UE.FieldNodeInt {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        SetUniformInteger(Magnitude: number) : UE.UniformInteger;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UniformInteger;
        static Load(InName: string): UniformInteger;
    
        __tid_UniformInteger_0__: boolean;
    }
    
    class UniformScalar extends UE.FieldNodeFloat {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        SetUniformScalar(Magnitude: number) : UE.UniformScalar;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UniformScalar;
        static Load(InName: string): UniformScalar;
    
        __tid_UniformScalar_0__: boolean;
    }
    
    class UniformScaleDragOperation extends UE.ViewportDragOperation {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UniformScaleDragOperation;
        static Load(InName: string): UniformScaleDragOperation;
    
        __tid_UniformScaleDragOperation_0__: boolean;
    }
    
    class UniformVector extends UE.FieldNodeVector {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Magnitude: number;
        Direction: UE.Vector;
        SetUniformVector(Magnitude: number, Direction: UE.Vector) : UE.UniformVector;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UniformVector;
        static Load(InName: string): UniformVector;
    
        __tid_UniformVector_0__: boolean;
    }
    
    class UnrealEdKeyBindings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        KeyBindings: TArray<UE.EditorKeyBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UnrealEdKeyBindings;
        static Load(InName: string): UnrealEdKeyBindings;
    
        __tid_UnrealEdKeyBindings_0__: boolean;
    }
    
    class UnrealEdOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditorCategories: TArray<UE.EditorCommandCategory>;
        EditorCommands: TArray<UE.EditorCommand>;
        EditorKeyBindings: UE.UnrealEdKeyBindings;
        bExpandClassPickerClassList: boolean;
        NewAssetDefaultClasses: TArray<UE.ClassPickerDefaults>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UnrealEdOptions;
        static Load(InName: string): UnrealEdOptions;
    
        __tid_UnrealEdOptions_0__: boolean;
    }
    
    class UnrealEdEngine extends UE.EditorEngine {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EditorOptionsInst: UE.UnrealEdOptions;
        AutoReimportManager: UE.AutoReimportManager;
        MaterialCopyPasteBuffer: UE.Material;
        MatineeCopyPasteBuffer: TArray<UE.Object>;
        SoundCueCopyPasteBuffer: UE.SoundCue;
        AnimationCompressionAlgorithms: TArray<UE.AnimCompress>;
        PackagesToBeFullyLoadedAtStartup: TArray<string>;
        CurrentLODParentActor: UE.Actor;
        bNeedWarningForPkgEngineVer: boolean;
        SortedSpriteCategories: TArray<string>;
        TemplateMapInfos: TArray<UE.TemplateMapInfo>;
        CookServer: UE.CookOnTheFlyServer;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UnrealEdEngine;
        static Load(InName: string): UnrealEdEngine;
    
        __tid_UnrealEdEngine_0__: boolean;
    }
    
    class UnrealEdTypes extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UnrealEdTypes;
        static Load(InName: string): UnrealEdTypes;
    
        __tid_UnrealEdTypes_0__: boolean;
    }
    
    class UnrealPakCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UnrealPakCommandlet;
        static Load(InName: string): UnrealPakCommandlet;
    
        __tid_UnrealPakCommandlet_0__: boolean;
    }
    
    class UnsortedParamData {
        constructor();
        constructor(Parameter: UE.DEditorParameterValue);
        Parameter: UE.DEditorParameterValue;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UnsortedParamData_0__: boolean;
    }
    
    class UpdateGameProjectCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UpdateGameProjectCommandlet;
        static Load(InName: string): UpdateGameProjectCommandlet;
    
        __tid_UpdateGameProjectCommandlet_0__: boolean;
    }
    
    class URL {
        constructor();
        constructor(Protocol: string, Host: string, Port: number, Valid: number, Map: string, RedirectURL: string, Op: TArray<string>, Portal: string);
        Protocol: string;
        Host: string;
        Port: number;
        Valid: number;
        Map: string;
        RedirectURL: string;
        Op: TArray<string>;
        Portal: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_URL_0__: boolean;
    }
    
    class UserDefinedCaptureProtocol extends UE.MovieSceneImageCaptureProtocolBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        World: UE.World;
        GenerateFilename(InFrameMetrics: UE.FrameMetrics) : string;
        GetCurrentFrameMetrics() : UE.FrameMetrics;
        OnBeginFinalize() : void;
        OnCanFinalize() : boolean;
        OnCaptureFrame() : void;
        OnFinalize() : void;
        OnPauseCapture() : void;
        OnPixelsReceived(Pixels: UE.CapturedPixels, ID: UE.CapturedPixelsID, FrameMetrics: UE.FrameMetrics) : void;
        OnPreTick() : void;
        OnSetup() : boolean;
        OnStartCapture() : void;
        OnTick() : void;
        OnWarmUp() : void;
        ResolveBuffer(Buffer: $Nullable<UE.Texture>, BufferID: UE.CapturedPixelsID) : void;
        StartCapturingFinalPixels(StreamID: UE.CapturedPixelsID) : void;
        StopCapturingFinalPixels() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserDefinedCaptureProtocol;
        static Load(InName: string): UserDefinedCaptureProtocol;
    
        __tid_UserDefinedCaptureProtocol_0__: boolean;
    }
    
    class UserDefinedImageCaptureProtocol extends UE.UserDefinedCaptureProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Format: UE.EDesiredImageFormat;
        bEnableCompression: boolean;
        CompressionQuality: number;
        GenerateFilenameForBuffer(Buffer: $Nullable<UE.Texture>, StreamID: UE.CapturedPixelsID) : string;
        GenerateFilenameForCurrentFrame() : string;
        WriteImageToDisk(PixelData: UE.CapturedPixels, StreamID: UE.CapturedPixelsID, FrameMetrics: UE.FrameMetrics, bCopyImageData?: boolean /* = false */) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserDefinedImageCaptureProtocol;
        static Load(InName: string): UserDefinedImageCaptureProtocol;
    
        __tid_UserDefinedImageCaptureProtocol_0__: boolean;
    }
    
    class UserDefinedStructEditorData extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UniqueNameId: number;
        VariablesDescriptions: TArray<UE.StructVariableDescription>;
        ToolTip: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserDefinedStructEditorData;
        static Load(InName: string): UserDefinedStructEditorData;
    
        __tid_UserDefinedStructEditorData_0__: boolean;
    }
    
    class UserInterfaceSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        RenderFocusRule: UE.ERenderFocusRule;
        HardwareCursors: TMap<UE.EMouseCursor, UE.HardwareCursorReference>;
        SoftwareCursors: TMap<UE.EMouseCursor, UE.SoftClassPath>;
        DefaultCursor: UE.SoftClassPath;
        TextEditBeamCursor: UE.SoftClassPath;
        CrosshairsCursor: UE.SoftClassPath;
        HandCursor: UE.SoftClassPath;
        GrabHandCursor: UE.SoftClassPath;
        GrabHandClosedCursor: UE.SoftClassPath;
        SlashedCircleCursor: UE.SoftClassPath;
        ApplicationScale: number;
        UIScaleRule: UE.EUIScalingRule;
        CustomScalingRuleClass: UE.SoftClassPath;
        UIScaleCurve: UE.RuntimeFloatCurve;
        bAllowHighDPIInGameMode: boolean;
        DesignScreenSize: UE.IntPoint;
        bLoadWidgetsOnDedicatedServer: boolean;
        CursorClasses: TArray<UE.Object>;
        CustomScalingRuleClassInstance: UE.Class;
        CustomScalingRule: UE.DPICustomScalingRule;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserInterfaceSettings;
        static Load(InName: string): UserInterfaceSettings;
    
        __tid_UserInterfaceSettings_0__: boolean;
    }
    
    class UserListEntry extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BP_OnEntryReleased() : void;
        BP_OnItemExpansionChanged(bIsExpanded: boolean) : void;
        BP_OnItemSelectionChanged(bIsSelected: boolean) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserListEntry;
        static Load(InName: string): UserListEntry;
    
        __tid_UserListEntry_0__: boolean;
    }
    
    class UserListEntryLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetOwningListView(UserListEntry: UserListEntry) : UE.ListViewBase;
        static IsListItemExpanded(UserListEntry: UserListEntry) : boolean;
        static IsListItemSelected(UserListEntry: UserListEntry) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserListEntryLibrary;
        static Load(InName: string): UserListEntryLibrary;
    
        __tid_UserListEntryLibrary_0__: boolean;
    }
    
    class UserObjectListEntry extends UE.UserListEntry {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnListItemObjectSet(ListItemObject: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserObjectListEntry;
        static Load(InName: string): UserObjectListEntry;
    
        __tid_UserObjectListEntry_0__: boolean;
    }
    
    class UserObjectListEntryLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetListItemObject(UserObjectListEntry: UserObjectListEntry) : UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): UserObjectListEntryLibrary;
        static Load(InName: string): UserObjectListEntryLibrary;
    
        __tid_UserObjectListEntryLibrary_0__: boolean;
    }
    
    class UserPinInfo {
        constructor();
        constructor(PinName: string, PinType: UE.EdGraphPinType, DesiredPinDirection: UE.EEdGraphPinDirection, PinDefaultValue: string);
        PinName: string;
        PinType: UE.EdGraphPinType;
        DesiredPinDirection: UE.EEdGraphPinDirection;
        PinDefaultValue: string;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UserPinInfo_0__: boolean;
    }
    
    class UVMapSettings {
        constructor();
        constructor(Size: UE.Vector, UVTile: UE.Vector2D, Position: UE.Vector, Rotation: UE.Rotator, Scale: UE.Vector);
        Size: UE.Vector;
        UVTile: UE.Vector2D;
        Position: UE.Vector;
        Rotation: UE.Rotator;
        Scale: UE.Vector;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_UVMapSettings_0__: boolean;
    }
    
    class VariantManagerFactoryNew extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VariantManagerFactoryNew;
        static Load(InName: string): VariantManagerFactoryNew;
    
        __tid_VariantManagerFactoryNew_0__: boolean;
    }
    
    class VariantManagerTestActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EnumWithNoDefault: UE.EVariantManagerTestEnum;
        EnumWithSecondDefault: UE.EVariantManagerTestEnum;
        CapturedByteProperty: number;
        CapturedIntProperty: number;
        CapturedFloatProperty: number;
        bCapturedBoolProperty: boolean;
        CapturedObjectProperty: UE.Object;
        CapturedInterfaceProperty: Interface;
        CapturedNameProperty: string;
        CapturedStrProperty: string;
        CapturedTextProperty: string;
        CapturedRotatorProperty: UE.Rotator;
        CapturedColorProperty: UE.Color;
        CapturedLinearColorProperty: UE.LinearColor;
        CapturedVectorProperty: UE.Vector;
        CapturedQuatProperty: UE.Quat;
        CapturedVector4Property: UE.Vector4;
        CapturedVector2DProperty: UE.Vector2D;
        CapturedIntPointProperty: UE.IntPoint;
        CapturedUObjectArrayProperty: TArray<UE.Object>;
        CapturedVectorArrayProperty: TArray<UE.Vector>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VariantManagerTestActor;
        static Load(InName: string): VariantManagerTestActor;
    
        __tid_VariantManagerTestActor_0__: boolean;
    }
    
    class Vector4Distribution {
        constructor();
        constructor(Table: UE.DistributionLookupTable);
        Table: UE.DistributionLookupTable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_Vector4Distribution_0__: boolean;
    }
    
    class VectorDistribution {
        constructor();
        constructor(Table: UE.DistributionLookupTable);
        Table: UE.DistributionLookupTable;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VectorDistribution_0__: boolean;
    }
    
    class VectorExtensionMethods extends UE.ExtensionMethods {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static Set(This: $Ref<UE.Vector>, InX: number, InY: number, InZ: number) : void;
        static ToString(This: $Ref<UE.Vector>) : string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorExtensionMethods;
        static Load(InName: string): VectorExtensionMethods;
    
        __tid_VectorExtensionMethods_0__: boolean;
    }
    
    class VectorFieldStatic extends UE.VectorField {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        SizeX: number;
        SizeY: number;
        SizeZ: number;
        bAllowCPUAccess: boolean;
        SourceFilePath: string;
        AssetImportData: UE.AssetImportData;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorFieldStatic;
        static Load(InName: string): VectorFieldStatic;
    
        __tid_VectorFieldStatic_0__: boolean;
    }
    
    class VectorFieldAnimated extends UE.VectorField {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Texture: UE.Texture2D;
        ConstructionOp: UE.EVectorFieldConstructionOp;
        VolumeSizeX: number;
        VolumeSizeY: number;
        VolumeSizeZ: number;
        SubImagesX: number;
        SubImagesY: number;
        FrameCount: number;
        FramesPerSecond: number;
        bLoop: boolean;
        NoiseField: UE.VectorFieldStatic;
        NoiseScale: number;
        NoiseMax: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorFieldAnimated;
        static Load(InName: string): VectorFieldAnimated;
    
        __tid_VectorFieldAnimated_0__: boolean;
    }
    
    class VectorFieldComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VectorField: UE.VectorField;
        Intensity: number;
        Tightness: number;
        bPreviewVectorField: boolean;
        SetIntensity(NewIntensity: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorFieldComponent;
        static Load(InName: string): VectorFieldComponent;
    
        __tid_VectorFieldComponent_0__: boolean;
    }
    
    class VectorFieldExporter extends UE.Exporter {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorFieldExporter;
        static Load(InName: string): VectorFieldExporter;
    
        __tid_VectorFieldExporter_0__: boolean;
    }
    
    class VectorFieldVolume extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VectorFieldComponent: UE.VectorFieldComponent;
        SpriteComponent: UE.BillboardComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VectorFieldVolume;
        static Load(InName: string): VectorFieldVolume;
    
        __tid_VectorFieldVolume_0__: boolean;
    }
    
    class VectorRK4SpringInterpolator {
        constructor();
        constructor(StiffnessConstant: number, DampeningRatio: number);
        StiffnessConstant: number;
        DampeningRatio: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VectorRK4SpringInterpolator_0__: boolean;
    }
    
    class WheeledVehicle extends UE.Pawn {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Mesh: UE.SkeletalMeshComponent;
        VehicleMovement: UE.WheeledVehicleMovementComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WheeledVehicle;
        static Load(InName: string): WheeledVehicle;
    
        __tid_WheeledVehicle_0__: boolean;
    }
    
    class VehicleAnimInstance extends UE.AnimInstance {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WheeledVehicleMovementComponent: UE.WheeledVehicleMovementComponent;
        GetVehicle() : UE.WheeledVehicle;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VehicleAnimInstance;
        static Load(InName: string): VehicleAnimInstance;
    
        __tid_VehicleAnimInstance_0__: boolean;
    }
    
    class VehicleAnimInstanceProxy extends UE.AnimInstanceProxy {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VehicleAnimInstanceProxy_0__: boolean;
    }
    
    class VehicleDifferential4WData {
        constructor();
        constructor(DifferentialType: UE.EVehicleDifferential4W, FrontRearSplit: number, FrontLeftRightSplit: number, RearLeftRightSplit: number, CentreBias: number, FrontBias: number, RearBias: number);
        DifferentialType: UE.EVehicleDifferential4W;
        FrontRearSplit: number;
        FrontLeftRightSplit: number;
        RearLeftRightSplit: number;
        CentreBias: number;
        FrontBias: number;
        RearBias: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VehicleDifferential4WData_0__: boolean;
    }
    
    class VehicleEngineData {
        constructor();
        constructor(TorqueCurve: UE.RuntimeFloatCurve, MaxRPM: number, MOI: number, DampingRateFullThrottle: number, DampingRateZeroThrottleClutchEngaged: number, DampingRateZeroThrottleClutchDisengaged: number);
        TorqueCurve: UE.RuntimeFloatCurve;
        MaxRPM: number;
        MOI: number;
        DampingRateFullThrottle: number;
        DampingRateZeroThrottleClutchEngaged: number;
        DampingRateZeroThrottleClutchDisengaged: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VehicleEngineData_0__: boolean;
    }
    
    class VehicleGearData {
        constructor();
        constructor(Ratio: number, DownRatio: number, UpRatio: number);
        Ratio: number;
        DownRatio: number;
        UpRatio: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VehicleGearData_0__: boolean;
    }
    
    class VehicleTransmissionData {
        constructor();
        constructor(bUseGearAutoBox: boolean, GearSwitchTime: number, GearAutoBoxLatency: number, FinalRatio: number, ForwardGears: TArray<UE.VehicleGearData>, ReverseGearRatio: number, NeutralGearUpRatio: number, ClutchStrength: number);
        bUseGearAutoBox: boolean;
        GearSwitchTime: number;
        GearAutoBoxLatency: number;
        FinalRatio: number;
        ForwardGears: TArray<UE.VehicleGearData>;
        ReverseGearRatio: number;
        NeutralGearUpRatio: number;
        ClutchStrength: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VehicleTransmissionData_0__: boolean;
    }
    
    class VertexAdapterClickTool extends UE.MeshClickTool {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VertexAdapterClickTool;
        static Load(InName: string): VertexAdapterClickTool;
    
        __tid_VertexAdapterClickTool_0__: boolean;
    }
    
    class VertexAdapterClickToolBuilder extends UE.SingleClickToolBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VertexAdapterClickToolBuilder;
        static Load(InName: string): VertexAdapterClickToolBuilder;
    
        __tid_VertexAdapterClickToolBuilder_0__: boolean;
    }
    
    class VertexColorImportOptions extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        UVIndex: number;
        LODIndex: number;
        bRed: boolean;
        bBlue: boolean;
        bGreen: boolean;
        bAlpha: boolean;
        bImportToInstance: boolean;
        bCanImportToInstance: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VertexColorImportOptions;
        static Load(InName: string): VertexColorImportOptions;
    
        __tid_VertexColorImportOptions_0__: boolean;
    }
    
    class VerticalBoxSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Size: UE.SlateChildSize;
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetSize(InSize: UE.SlateChildSize) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VerticalBoxSlot;
        static Load(InName: string): VerticalBoxSlot;
    
        __tid_VerticalBoxSlot_0__: boolean;
    }
    
    class VerticalBox extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddChildToVerticalBox(Content: $Nullable<UE.Widget>) : UE.VerticalBoxSlot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VerticalBox;
        static Load(InName: string): VerticalBox;
    
        __tid_VerticalBox_0__: boolean;
    }
    
    class VideoCaptureProtocol extends UE.FrameGrabberProtocol {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bUseCompression: boolean;
        CompressionQuality: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VideoCaptureProtocol;
        static Load(InName: string): VideoCaptureProtocol;
    
        __tid_VideoCaptureProtocol_0__: boolean;
    }
    
    class ViewModeUtils extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewModeUtils;
        static Load(InName: string): ViewModeUtils;
    
        __tid_ViewModeUtils_0__: boolean;
    }
    
    class Viewport extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BackgroundColor: UE.LinearColor;
        GetViewLocation() : UE.Vector;
        GetViewportWorld() : UE.World;
        GetViewRotation() : UE.Rotator;
        SetViewLocation(Location: UE.Vector) : void;
        SetViewRotation(Rotation: UE.Rotator) : void;
        Spawn(ActorClass: $Nullable<UE.Class>) : UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): Viewport;
        static Load(InName: string): Viewport;
    
        __tid_Viewport_0__: boolean;
    }
    
    class ViewportInteractableInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportInteractableInterface;
        static Load(InName: string): ViewportInteractableInterface;
    
        __tid_ViewportInteractableInterface_0__: boolean;
    }
    
    class ViewportStatsSubsystem extends UE.WorldSubsystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AddDisplayDelegate(Delegate: $Delegate<(OutText: $Ref<string>, OutColor: $Ref<UE.LinearColor>) => boolean>) : number;
        AddTimedDisplay(Text: string, Color?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, Duration?: number /* = 0.000000 */) : void;
        RemoveDisplayDelegate(IndexToRemove: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): ViewportStatsSubsystem;
        static Load(InName: string): ViewportStatsSubsystem;
    
        __tid_ViewportStatsSubsystem_0__: boolean;
    }
    
    class VirtualTextureBuilderExporterBMP extends UE.TextureExporterBMP {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VirtualTextureBuilderExporterBMP;
        static Load(InName: string): VirtualTextureBuilderExporterBMP;
    
        __tid_VirtualTextureBuilderExporterBMP_0__: boolean;
    }
    
    class VirtualTextureBuilderFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VirtualTextureBuilderFactory;
        static Load(InName: string): VirtualTextureBuilderFactory;
    
        __tid_VirtualTextureBuilderFactory_0__: boolean;
    }
    
    class VirtualTextureBuilderThumbnailRenderer extends UE.TextureThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VirtualTextureBuilderThumbnailRenderer;
        static Load(InName: string): VirtualTextureBuilderThumbnailRenderer;
    
        __tid_VirtualTextureBuilderThumbnailRenderer_0__: boolean;
    }
    
    class VirtualTextureSpacePoolConfig {
        constructor();
        constructor(MinTileSize: number, MaxTileSize: number, Formats: TArray<UE.EPixelFormat>, SizeInMegabyte: number, bAllowSizeScale: boolean, ScalabilityGroup: number);
        MinTileSize: number;
        MaxTileSize: number;
        Formats: TArray<UE.EPixelFormat>;
        SizeInMegabyte: number;
        bAllowSizeScale: boolean;
        ScalabilityGroup: number;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VirtualTextureSpacePoolConfig_0__: boolean;
    }
    
    class VirtualTexturePoolConfig extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DefaultSizeInMegabyte: number;
        Pools: TArray<UE.VirtualTextureSpacePoolConfig>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VirtualTexturePoolConfig;
        static Load(InName: string): VirtualTexturePoolConfig;
    
        __tid_VirtualTexturePoolConfig_0__: boolean;
    }
    
    class VISettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bScaleWorldFromFloor: boolean;
        bScaleWorldWithDynamicPivot: boolean;
        bAllowSimultaneousWorldScalingAndRotation: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VISettings;
        static Load(InName: string): VISettings;
    
        __tid_VISettings_0__: boolean;
    }
    
    class VisibilityBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : UE.ESlateVisibility;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisibilityBinding;
        static Load(InName: string): VisibilityBinding;
    
        __tid_VisibilityBinding_0__: boolean;
    }
    
    class VisualLoggerAutomationTests extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerAutomationTests;
        static Load(InName: string): VisualLoggerAutomationTests;
    
        __tid_VisualLoggerAutomationTests_0__: boolean;
    }
    
    class VisualLoggerCameraController extends UE.DebugCameraController {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        PickedActor: UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerCameraController;
        static Load(InName: string): VisualLoggerCameraController;
    
        __tid_VisualLoggerCameraController_0__: boolean;
    }
    
    class VisualLoggerDebugSnapshotInterface extends UE.Interface {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerDebugSnapshotInterface;
        static Load(InName: string): VisualLoggerDebugSnapshotInterface;
    
        __tid_VisualLoggerDebugSnapshotInterface_0__: boolean;
    }
    
    class VisualLoggerExtension extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerExtension;
        static Load(InName: string): VisualLoggerExtension;
    
        __tid_VisualLoggerExtension_0__: boolean;
    }
    
    class VisualLoggerFilters extends UE.VisualLoggerFiltersData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VisualLoggerFilters_0__: boolean;
    }
    
    class VisualLoggerHUD extends UE.DebugCameraHUD {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerHUD;
        static Load(InName: string): VisualLoggerHUD;
    
        __tid_VisualLoggerHUD_0__: boolean;
    }
    
    class VisualLoggerKismetLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static EnableRecording(bEnabled: boolean) : void;
        static LogBox(WorldContextObject: $Nullable<UE.Object>, BoxShape: UE.Box, Text: string, ObjectColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=1.000000,A=1.000000) */, LogCategory?: string /* = "VisLogBP" */, bAddToMessageLog?: boolean /* = false */) : void;
        static LogLocation(WorldContextObject: $Nullable<UE.Object>, Location: UE.Vector, Text: string, ObjectColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=1.000000,A=1.000000) */, Radius?: number /* = 10.000000 */, LogCategory?: string /* = "VisLogBP" */, bAddToMessageLog?: boolean /* = false */) : void;
        static LogSegment(WorldContextObject: $Nullable<UE.Object>, SegmentStart: UE.Vector, SegmentEnd: UE.Vector, Text: string, ObjectColor?: UE.LinearColor /* = (R=0.000000,G=0.000000,B=1.000000,A=1.000000) */, Thickness?: number /* = 0.000000 */, CategoryName?: string /* = "VisLogBP" */, bAddToMessageLog?: boolean /* = false */) : void;
        static LogText(WorldContextObject: $Nullable<UE.Object>, Text: string, LogCategory?: string /* = "VisLogBP" */, bAddToMessageLog?: boolean /* = false */) : void;
        static RedirectVislog(SourceOwner: $Nullable<UE.Object>, DestinationOwner: $Nullable<UE.Object>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerKismetLibrary;
        static Load(InName: string): VisualLoggerKismetLibrary;
    
        __tid_VisualLoggerKismetLibrary_0__: boolean;
    }
    
    class VisualLoggerRenderingActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerRenderingActor;
        static Load(InName: string): VisualLoggerRenderingActor;
    
        __tid_VisualLoggerRenderingActor_0__: boolean;
    }
    
    class VisualLoggerRenderingComponent extends UE.PrimitiveComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VisualLoggerRenderingComponent;
        static Load(InName: string): VisualLoggerRenderingComponent;
    
        __tid_VisualLoggerRenderingComponent_0__: boolean;
    }
    
    class VoiceChannel extends UE.Channel {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VoiceChannel;
        static Load(InName: string): VoiceChannel;
    
        __tid_VoiceChannel_0__: boolean;
    }
    
    class VoiceSettings {
        constructor();
        constructor(ComponentToAttachTo: UE.SceneComponent, AttenuationSettings: UE.SoundAttenuation, SourceEffectChain: UE.SoundEffectSourcePresetChain);
        ComponentToAttachTo: UE.SceneComponent;
        AttenuationSettings: UE.SoundAttenuation;
        SourceEffectChain: UE.SoundEffectSourcePresetChain;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VoiceSettings_0__: boolean;
    }
    
    class VoipListenerSynthComponent extends UE.SynthComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        IsIdling() : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VoipListenerSynthComponent;
        static Load(InName: string): VoipListenerSynthComponent;
    
        __tid_VoipListenerSynthComponent_0__: boolean;
    }
    
    class VOIPStatics extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static SetMicThreshold(InThreshold: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VOIPStatics;
        static Load(InName: string): VOIPStatics;
    
        __tid_VOIPStatics_0__: boolean;
    }
    
    class VOIPTalker extends UE.ActorComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Settings: UE.VoiceSettings;
        BPOnTalkingBegin(AudioComponent: $Nullable<UE.AudioComponent>) : void;
        BPOnTalkingEnd() : void;
        GetVoiceLevel() : number;
        RegisterWithPlayerState(OwningState: $Nullable<UE.PlayerState>) : void;
        static CreateTalkerForPlayer(OwningState: $Nullable<UE.PlayerState>) : UE.VOIPTalker;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VOIPTalker;
        static Load(InName: string): VOIPTalker;
    
        __tid_VOIPTalker_0__: boolean;
    }
    
    class VolumeControlStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(SliderStyle: UE.SliderStyle, HighVolumeImage: UE.SlateBrush, MidVolumeImage: UE.SlateBrush, LowVolumeImage: UE.SlateBrush, NoVolumeImage: UE.SlateBrush, MutedImage: UE.SlateBrush);
        SliderStyle: UE.SliderStyle;
        HighVolumeImage: UE.SlateBrush;
        MidVolumeImage: UE.SlateBrush;
        LowVolumeImage: UE.SlateBrush;
        NoVolumeImage: UE.SlateBrush;
        MutedImage: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VolumeControlStyle_0__: boolean;
    }
    
    class VolumeTextureFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InitialTexture: UE.Texture2D;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VolumeTextureFactory;
        static Load(InName: string): VolumeTextureFactory;
    
        __tid_VolumeTextureFactory_0__: boolean;
    }
    
    class VolumeTextureThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        MaterialInstance: UE.MaterialInstanceConstant;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VolumeTextureThumbnailRenderer;
        static Load(InName: string): VolumeTextureThumbnailRenderer;
    
        __tid_VolumeTextureThumbnailRenderer_0__: boolean;
    }
    
    class VolumetricBuilder extends UE.EditorBrushBuilder {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Z: number;
        Radius: number;
        NumSheets: number;
        GroupName: string;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VolumetricBuilder;
        static Load(InName: string): VolumetricBuilder;
    
        __tid_VolumetricBuilder_0__: boolean;
    }
    
    class VolumetricCloudComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        LayerBottomAltitude: number;
        LayerHeight: number;
        TracingStartMaxDistance: number;
        TracingMaxDistance: number;
        PlanetRadius: number;
        GroundAlbedo: UE.Color;
        Material: UE.MaterialInterface;
        bUsePerSampleAtmosphericLightTransmittance: boolean;
        SkyLightCloudBottomOcclusion: number;
        ViewSampleCountScale: number;
        ReflectionSampleCountScale: number;
        ShadowViewSampleCountScale: number;
        ShadowReflectionSampleCountScale: number;
        ShadowTracingDistance: number;
        SetbUsePerSampleAtmosphericLightTransmittance(NewValue: boolean) : void;
        SetGroundAlbedo(NewValue: UE.Color) : void;
        SetLayerBottomAltitude(NewValue: number) : void;
        SetLayerHeight(NewValue: number) : void;
        SetMaterial(NewValue: $Nullable<UE.MaterialInterface>) : void;
        SetPlanetRadius(NewValue: number) : void;
        SetReflectionSampleCountScale(NewValue: number) : void;
        SetShadowReflectionSampleCountScale(NewValue: number) : void;
        SetShadowTracingDistance(NewValue: number) : void;
        SetShadowViewSampleCountScale(NewValue: number) : void;
        SetSkyLightCloudBottomOcclusion(NewValue: number) : void;
        SetTracingMaxDistance(NewValue: number) : void;
        SetTracingStartMaxDistance(NewValue: number) : void;
        SetViewSampleCountScale(NewValue: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VolumetricCloudComponent;
        static Load(InName: string): VolumetricCloudComponent;
    
        __tid_VolumetricCloudComponent_0__: boolean;
    }
    
    class VolumetricCloud extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VolumetricCloudComponent: UE.VolumetricCloudComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VolumetricCloud;
        static Load(InName: string): VolumetricCloud;
    
        __tid_VolumetricCloud_0__: boolean;
    }
    
    class VolumetricLightmapDensityVolume extends UE.Volume {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AllowedMipLevelRange: UE.Int32Interval;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VolumetricLightmapDensityVolume;
        static Load(InName: string): VolumetricLightmapDensityVolume;
    
        __tid_VolumetricLightmapDensityVolume_0__: boolean;
    }
    
    class WidgetComponent extends UE.MeshComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Space: UE.EWidgetSpace;
        TimingPolicy: UE.EWidgetTimingPolicy;
        WidgetClass: UE.Class;
        DrawSize: UE.IntPoint;
        bManuallyRedraw: boolean;
        bRedrawRequested: boolean;
        RedrawTime: number;
        CurrentDrawSize: UE.IntPoint;
        bDrawAtDesiredSize: boolean;
        Pivot: UE.Vector2D;
        bReceiveHardwareInput: boolean;
        bWindowFocusable: boolean;
        WindowVisibility: UE.EWindowVisibility;
        bApplyGammaCorrection: boolean;
        OwnerPlayer: UE.LocalPlayer;
        BackgroundColor: UE.LinearColor;
        TintColorAndOpacity: UE.LinearColor;
        OpacityFromTexture: number;
        BlendMode: UE.EWidgetBlendMode;
        bIsTwoSided: boolean;
        TickWhenOffscreen: boolean;
        BodySetup: UE.BodySetup;
        TranslucentMaterial: UE.MaterialInterface;
        TranslucentMaterial_OneSided: UE.MaterialInterface;
        OpaqueMaterial: UE.MaterialInterface;
        OpaqueMaterial_OneSided: UE.MaterialInterface;
        MaskedMaterial: UE.MaterialInterface;
        MaskedMaterial_OneSided: UE.MaterialInterface;
        RenderTarget: UE.TextureRenderTarget2D;
        MaterialInstance: UE.MaterialInstanceDynamic;
        bAddedToScreen: boolean;
        bEditTimeUsable: boolean;
        SharedLayerName: string;
        LayerZOrder: number;
        GeometryMode: UE.EWidgetGeometryMode;
        CylinderArcAngle: number;
        TickMode: UE.ETickMode;
        Widget: UE.UserWidget;
        GetCurrentDrawSize() : UE.Vector2D;
        GetCylinderArcAngle() : number;
        GetDrawAtDesiredSize() : boolean;
        GetDrawSize() : UE.Vector2D;
        GetGeometryMode() : UE.EWidgetGeometryMode;
        GetManuallyRedraw() : boolean;
        GetMaterialInstance() : UE.MaterialInstanceDynamic;
        GetOwnerPlayer() : UE.LocalPlayer;
        GetPivot() : UE.Vector2D;
        GetRedrawTime() : number;
        GetRenderTarget() : UE.TextureRenderTarget2D;
        GetTickWhenOffscreen() : boolean;
        GetTwoSided() : boolean;
        GetUserWidgetObject() : UE.UserWidget;
        GetWidget() : UE.UserWidget;
        GetWidgetSpace() : UE.EWidgetSpace;
        GetWindowFocusable() : boolean;
        GetWindowVisiblility() : UE.EWindowVisibility;
        IsWidgetVisible() : boolean;
        RequestRedraw() : void;
        SetBackgroundColor(NewBackgroundColor: UE.LinearColor) : void;
        SetCylinderArcAngle(InCylinderArcAngle: number) : void;
        SetDrawAtDesiredSize(bInDrawAtDesiredSize: boolean) : void;
        SetDrawSize(Size: UE.Vector2D) : void;
        SetGeometryMode(InGeometryMode: UE.EWidgetGeometryMode) : void;
        SetManuallyRedraw(bUseManualRedraw: boolean) : void;
        SetOwnerPlayer(LocalPlayer: $Nullable<UE.LocalPlayer>) : void;
        SetPivot(InPivot: UE.Vector2D) : void;
        SetRedrawTime(InRedrawTime: number) : void;
        SetTickMode(InTickMode: UE.ETickMode) : void;
        SetTickWhenOffscreen(bWantTickWhenOffscreen: boolean) : void;
        SetTintColorAndOpacity(NewTintColorAndOpacity: UE.LinearColor) : void;
        SetTwoSided(bWantTwoSided: boolean) : void;
        SetWidget(Widget: $Nullable<UE.UserWidget>) : void;
        SetWidgetSpace(NewSpace: UE.EWidgetSpace) : void;
        SetWindowFocusable(bInWindowFocusable: boolean) : void;
        SetWindowVisibility(InVisibility: UE.EWindowVisibility) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetComponent;
        static Load(InName: string): WidgetComponent;
    
        __tid_WidgetComponent_0__: boolean;
    }
    
    class VREditorWidgetComponent extends UE.WidgetComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DrawingPolicy: UE.EVREditorWidgetDrawingPolicy;
        bIsHovering: boolean;
        bHasEverDrawn: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorWidgetComponent;
        static Load(InName: string): VREditorWidgetComponent;
    
        __tid_VREditorWidgetComponent_0__: boolean;
    }
    
    class VRButton {
        constructor();
        constructor(ButtonWidget: UE.VREditorWidgetComponent);
        ButtonWidget: UE.VREditorWidgetComponent;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VRButton_0__: boolean;
    }
    
    class VREditorAssetContainer extends UE.DataAsset {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DockableWindowCloseSound: UE.SoundBase;
        DockableWindowOpenSound: UE.SoundBase;
        DockableWindowDropSound: UE.SoundBase;
        DockableWindowDragSound: UE.SoundBase;
        DropFromContentBrowserSound: UE.SoundBase;
        RadialMenuOpenSound: UE.SoundBase;
        RadialMenuCloseSound: UE.SoundBase;
        TeleportSound: UE.SoundBase;
        ButtonPressSound: UE.SoundCue;
        AutoScaleSound: UE.SoundBase;
        GenericHMDMesh: UE.StaticMesh;
        PlaneMesh: UE.StaticMesh;
        CylinderMesh: UE.StaticMesh;
        LaserPointerStartMesh: UE.StaticMesh;
        LaserPointerMesh: UE.StaticMesh;
        LaserPointerEndMesh: UE.StaticMesh;
        LaserPointerHoverMesh: UE.StaticMesh;
        VivePreControllerMesh: UE.StaticMesh;
        OculusControllerMesh: UE.StaticMesh;
        GenericControllerMesh: UE.StaticMesh;
        TeleportRootMesh: UE.StaticMesh;
        WindowMesh: UE.StaticMesh;
        WindowSelectionBarMesh: UE.StaticMesh;
        WindowCloseButtonMesh: UE.StaticMesh;
        RadialMenuMainMesh: UE.StaticMesh;
        RadialMenuPointerMesh: UE.StaticMesh;
        PointerCursorMesh: UE.StaticMesh;
        LineSegmentCylinderMesh: UE.StaticMesh;
        JointSphereMesh: UE.StaticMesh;
        DockingButtonMesh: UE.StaticMesh;
        GridMaterial: UE.MaterialInterface;
        LaserPointerMaterial: UE.MaterialInterface;
        LaserPointerTranslucentMaterial: UE.MaterialInterface;
        WorldMovementPostProcessMaterial: UE.Material;
        TextMaterial: UE.MaterialInterface;
        VivePreControllerMaterial: UE.MaterialInterface;
        OculusControllerMaterial: UE.MaterialInterface;
        TeleportMaterial: UE.MaterialInterface;
        WindowMaterial: UE.MaterialInterface;
        WindowTranslucentMaterial: UE.MaterialInterface;
        LineMaterial: UE.Material;
        TranslucentTextMaterial: UE.MaterialInterface;
        TextFont: UE.Font;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorAssetContainer;
        static Load(InName: string): VREditorAssetContainer;
    
        __tid_VREditorAssetContainer_0__: boolean;
    }
    
    class VREditorAvatarActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        HeadMeshComponent: UE.StaticMeshComponent;
        WorldMovementGridMeshComponent: UE.StaticMeshComponent;
        WorldMovementGridMID: UE.MaterialInstanceDynamic;
        WorldMovementGridOpacity: number;
        bIsDrawingWorldMovementPostProcess: boolean;
        WorldMovementPostProcessMaterial: UE.MaterialInstanceDynamic;
        ScaleProgressMeshComponent: UE.StaticMeshComponent;
        CurrentScaleProgressMeshComponent: UE.StaticMeshComponent;
        UserScaleIndicatorText: UE.TextRenderComponent;
        FixedUserScaleMID: UE.MaterialInstanceDynamic;
        TranslucentFixedUserScaleMID: UE.MaterialInstanceDynamic;
        CurrentUserScaleMID: UE.MaterialInstanceDynamic;
        TranslucentCurrentUserScaleMID: UE.MaterialInstanceDynamic;
        PostProcessComponent: UE.PostProcessComponent;
        VRMode: UE.VREditorMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorAvatarActor;
        static Load(InName: string): VREditorAvatarActor;
    
        __tid_VREditorAvatarActor_0__: boolean;
    }
    
    class VREditorBaseActor extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VRMode: UE.VREditorMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorBaseActor;
        static Load(InName: string): VREditorBaseActor;
    
        __tid_VREditorBaseActor_0__: boolean;
    }
    
    class VREditorFloatingUICreationContext {
        constructor();
        constructor(WidgetClass: UE.Class, PanelID: string, ParentActor: UE.Actor, PanelSpawnOffset: UE.Transform, PanelSize: UE.Vector2D, PanelMesh: UE.StaticMesh, EditorUISize: number, bHideWindowHandles: boolean, bMaskOutWidgetBackground: boolean, bNoCloseButton: boolean);
        WidgetClass: UE.Class;
        PanelID: string;
        ParentActor: UE.Actor;
        PanelSpawnOffset: UE.Transform;
        PanelSize: UE.Vector2D;
        PanelMesh: UE.StaticMesh;
        EditorUISize: number;
        bHideWindowHandles: boolean;
        bMaskOutWidgetBackground: boolean;
        bNoCloseButton: boolean;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_VREditorFloatingUICreationContext_0__: boolean;
    }
    
    class VREditorFloatingUI extends UE.VREditorBaseActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CreationContext: UE.VREditorFloatingUICreationContext;
        UserWidget: UE.UserWidget;
        WidgetComponent: UE.VREditorWidgetComponent;
        WindowMeshComponent: UE.StaticMeshComponent;
        UserWidgetClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorFloatingUI;
        static Load(InName: string): VREditorFloatingUI;
    
        __tid_VREditorFloatingUI_0__: boolean;
    }
    
    class VREditorRadialFloatingUI extends UE.VREditorBaseActor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetComponents: TArray<UE.VREditorWidgetComponent>;
        WindowMeshComponent: UE.StaticMeshComponent;
        ArrowMeshComponent: UE.StaticMeshComponent;
        CentralWidgetComponent: UE.VREditorWidgetComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorRadialFloatingUI;
        static Load(InName: string): VREditorRadialFloatingUI;
    
        __tid_VREditorRadialFloatingUI_0__: boolean;
    }
    
    class VREditorDockableWindow extends UE.VREditorFloatingUI {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        DockButtonMeshComponent: UE.StaticMeshComponent;
        SelectionBarMeshComponent: UE.StaticMeshComponent;
        CloseButtonMeshComponent: UE.StaticMeshComponent;
        DockButtonMID: UE.MaterialInstanceDynamic;
        SelectionBarMID: UE.MaterialInstanceDynamic;
        SelectionBarTranslucentMID: UE.MaterialInstanceDynamic;
        CloseButtonMID: UE.MaterialInstanceDynamic;
        CloseButtonTranslucentMID: UE.MaterialInstanceDynamic;
        DragOperationComponent: UE.ViewportDragOperationComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorDockableWindow;
        static Load(InName: string): VREditorDockableWindow;
    
        __tid_VREditorDockableWindow_0__: boolean;
    }
    
    class VREditorTeleporter extends UE.Actor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VRMode: UE.VREditorMode;
        TeleportDirectionMeshComponent: UE.StaticMeshComponent;
        HMDMeshComponent: UE.StaticMeshComponent;
        LeftMotionControllerMeshComponent: UE.StaticMeshComponent;
        RightMotionControllerMeshComponent: UE.StaticMeshComponent;
        TeleportMID: UE.MaterialInstanceDynamic;
        InteractorTryingTeleport: UE.ViewportInteractor;
        DoTeleport() : void;
        GetInteractorTryingTeleport() : UE.ViewportInteractor;
        GetSlideDelta(Interactor: $Nullable<UE.VREditorInteractor>, Axis: boolean) : number;
        GetVRMode() : UE.VREditorMode;
        Init(InMode: $Nullable<UE.VREditorMode>) : void;
        IsAiming() : boolean;
        IsTeleporting() : boolean;
        SetColor(Color: UE.LinearColor) : void;
        SetVisibility(bVisible: boolean) : void;
        Shutdown() : void;
        StartAiming(Interactor: $Nullable<UE.ViewportInteractor>) : void;
        StartTeleport() : void;
        StopAiming() : void;
        TeleportDone() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorTeleporter;
        static Load(InName: string): VREditorTeleporter;
    
        __tid_VREditorTeleporter_0__: boolean;
    }
    
    class VREditorInteractor extends UE.ViewportInteractor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bIsUndoRedoSwipeEnabled: boolean;
        MotionControllerComponent: UE.MotionControllerComponent;
        HandMeshComponent: UE.StaticMeshComponent;
        LaserSplineComponent: UE.SplineComponent;
        LaserSplineMeshComponents: TArray<UE.SplineMeshComponent>;
        LaserPointerMID: UE.MaterialInstanceDynamic;
        TranslucentLaserPointerMID: UE.MaterialInstanceDynamic;
        HoverMeshComponent: UE.StaticMeshComponent;
        HoverPointLightComponent: UE.PointLightComponent;
        HandMeshMID: UE.MaterialInstanceDynamic;
        OwningAvatar: UE.Actor;
        ControllerType: UE.EControllerType;
        OverrideControllerType: UE.EControllerType;
        ControllerMotionSource: string;
        VRMode: UE.VREditorMode;
        GetControllerHandSide() : string;
        GetControllerSide() : UE.EControllerHand;
        GetControllerType() : UE.EControllerType;
        GetHMDDeviceType() : string;
        GetLaserEnd() : UE.Vector;
        GetLaserStart() : UE.Vector;
        GetLastTrackpadPosition() : UE.Vector2D;
        GetMotionControllerComponent() : UE.MotionControllerComponent;
        GetSelectAndMoveTriggerValue() : number;
        GetSlideDelta() : number;
        GetTeleportActor() : UE.VREditorTeleporter;
        GetTrackpadPosition() : UE.Vector2D;
        Init(InVRMode: $Nullable<UE.VREditorMode>) : void;
        IsClickingOnUI() : boolean;
        IsHoveringOverUI() : boolean;
        IsTouchingTrackpad() : boolean;
        ReplaceHandMeshComponent(NewMesh: $Nullable<UE.StaticMesh>) : void;
        SetControllerHandSide(InControllerHandSide: string) : void;
        SetControllerType(InControllerType: UE.EControllerType) : void;
        SetForceLaserColor(InColor: UE.LinearColor) : void;
        SetForceShowLaser(bInForceShow: boolean) : void;
        SetupComponent(OwningActor: $Nullable<UE.Actor>) : void;
        TryOverrideControllerType(InControllerType: UE.EControllerType) : boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorInteractor;
        static Load(InName: string): VREditorInteractor;
    
        __tid_VREditorInteractor_0__: boolean;
    }
    
    class VRRadialMenuHandler extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VRRadialMenuHandler;
        static Load(InName: string): VRRadialMenuHandler;
    
        __tid_VRRadialMenuHandler_0__: boolean;
    }
    
    class VREditorUISystem extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VRMode: UE.VREditorMode;
        FloatingUIs: TMap<string, UE.VREditorFloatingUI>;
        PreviewWindowInfo: TMap<string, UE.Actor>;
        InfoDisplayPanel: UE.VREditorFloatingUI;
        QuickRadialMenu: UE.VREditorRadialFloatingUI;
        DraggingUI: UE.VREditorDockableWindow;
        ColorPickerUI: UE.VREditorDockableWindow;
        LaserInteractor: UE.VREditorInteractor;
        UIInteractor: UE.VREditorInteractor;
        VRButtons: TArray<UE.VRButton>;
        RadialMenuHandler: UE.VRRadialMenuHandler;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorUISystem;
        static Load(InName: string): VREditorUISystem;
    
        __tid_VREditorUISystem_0__: boolean;
    }
    
    class VREditorPlacement extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VRMode: UE.VREditorMode;
        ViewportWorldInteraction: UE.ViewportWorldInteraction;
        FloatingUIAssetDraggedFrom: UE.WidgetComponent;
        PlacingMaterialOrTextureAsset: UE.Object;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorPlacement;
        static Load(InName: string): VREditorPlacement;
    
        __tid_VREditorPlacement_0__: boolean;
    }
    
    class VREditorMode extends UE.EditorWorldExtension {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AvatarActor: UE.VREditorAvatarActor;
        UISystem: UE.VREditorUISystem;
        TeleportActor: UE.VREditorTeleporter;
        AutoScalerSystem: UE.VREditorAutoScaler;
        WorldInteraction: UE.ViewportWorldInteraction;
        PlacementSystem: UE.VREditorPlacement;
        Interactors: TArray<UE.VREditorInteractor>;
        AssetContainer: UE.VREditorAssetContainer;
        GetWorldScaleFactor() : number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorMode;
        static Load(InName: string): VREditorMode;
    
        __tid_VREditorMode_0__: boolean;
    }
    
    class VREditorAutoScaler extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        VRMode: UE.VREditorMode;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorAutoScaler;
        static Load(InName: string): VREditorAutoScaler;
    
        __tid_VREditorAutoScaler_0__: boolean;
    }
    
    class VREditorBaseUserWidget extends UE.UserWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Owner: TWeakObjectPtr<UE.VREditorFloatingUI>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorBaseUserWidget;
        static Load(InName: string): VREditorBaseUserWidget;
    
        __tid_VREditorBaseUserWidget_0__: boolean;
    }
    
    class VREditorCameraWidgetComponent extends UE.VREditorWidgetComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorCameraWidgetComponent;
        static Load(InName: string): VREditorCameraWidgetComponent;
    
        __tid_VREditorCameraWidgetComponent_0__: boolean;
    }
    
    class VREditorDockableCameraWindow extends UE.VREditorDockableWindow {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorDockableCameraWindow;
        static Load(InName: string): VREditorDockableCameraWindow;
    
        __tid_VREditorDockableCameraWindow_0__: boolean;
    }
    
    class VREditorFloatingCameraUI extends UE.VREditorFloatingUI {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OffsetFromCamera: UE.Vector;
        LinkedActor: TWeakObjectPtr<UE.Actor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VREditorFloatingCameraUI;
        static Load(InName: string): VREditorFloatingCameraUI;
    
        __tid_VREditorFloatingCameraUI_0__: boolean;
    }
    
    class VRModeSettings extends UE.VISettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bEnableAutoVREditMode: boolean;
        bAutokeySequences: boolean;
        InteractorHand: UE.EInteractorHand;
        bShowWorldMovementGrid: boolean;
        bShowWorldMovementPostProcess: boolean;
        bShowWorldScaleProgressBar: boolean;
        UIBrightness: number;
        GizmoScale: number;
        DoubleClickTime: number;
        TriggerPressedThreshold_Vive: number;
        TriggerPressedThreshold_Rift: number;
        InteractorClass: TSoftClassPtr<UE.VREditorInteractor>;
        TeleporterClass: TSoftClassPtr<UE.VREditorTeleporter>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VRModeSettings;
        static Load(InName: string): VRModeSettings;
    
        __tid_VRModeSettings_0__: boolean;
    }
    
    class VRScoutingInteractor extends UE.VREditorInteractor {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        FlyingIndicatorComponent: UE.StaticMeshComponent;
        GetGizmoMode() : UE.EGizmoHandleTypes;
        SetGizmoMode(InGizmoMode: UE.EGizmoHandleTypes) : void;
        static GetSelectedActors() : TArray<UE.Actor>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): VRScoutingInteractor;
        static Load(InName: string): VRScoutingInteractor;
    
        __tid_VRScoutingInteractor_0__: boolean;
    }
    
    class WeakObjectProperty extends UE.ObjectPropertyBase {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WeakObjectProperty;
        static Load(InName: string): WeakObjectProperty;
    
        __tid_WeakObjectProperty_0__: boolean;
    }
    
    class WebMPlatFileMediaSourceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WebMPlatFileMediaSourceFactory;
        static Load(InName: string): WebMPlatFileMediaSourceFactory;
    
        __tid_WebMPlatFileMediaSourceFactory_0__: boolean;
    }
    
    class WeightAndEasingEvaluatorSystem extends UE.MovieSceneEntitySystem {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WeightAndEasingEvaluatorSystem;
        static Load(InName: string): WeightAndEasingEvaluatorSystem;
    
        __tid_WeightAndEasingEvaluatorSystem_0__: boolean;
    }
    
    class WheeledVehicleMovementComponent4W extends UE.WheeledVehicleMovementComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        EngineSetup: UE.VehicleEngineData;
        DifferentialSetup: UE.VehicleDifferential4WData;
        AckermannAccuracy: number;
        TransmissionSetup: UE.VehicleTransmissionData;
        SteeringCurve: UE.RuntimeFloatCurve;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WheeledVehicleMovementComponent4W;
        static Load(InName: string): WheeledVehicleMovementComponent4W;
    
        __tid_WheeledVehicleMovementComponent4W_0__: boolean;
    }
    
    class WidgetAnimationDelegateBinding extends UE.DynamicBlueprintBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetAnimationDelegateBindings: TArray<UE.BlueprintWidgetAnimationDelegateBinding>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetAnimationDelegateBinding;
        static Load(InName: string): WidgetAnimationDelegateBinding;
    
        __tid_WidgetAnimationDelegateBinding_0__: boolean;
    }
    
    class WidgetAnimationPlayCallbackProxy extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Finished: $MulticastDelegate<() => void>;
        static CreatePlayAnimationProxyObject(Result: $Ref<UE.UMGSequencePlayer>, Widget: $Nullable<UE.UserWidget>, InAnimation: $Nullable<UE.WidgetAnimation>, StartAtTime?: number /* = 0.000000 */, NumLoopsToPlay?: number /* = 1 */, PlayMode?: UE.EUMGSequencePlayMode /* = Forward */, PlaybackSpeed?: number /* = 1.000000 */) : UE.WidgetAnimationPlayCallbackProxy;
        static CreatePlayAnimationTimeRangeProxyObject(Result: $Ref<UE.UMGSequencePlayer>, Widget: $Nullable<UE.UserWidget>, InAnimation: $Nullable<UE.WidgetAnimation>, StartAtTime?: number /* = 0.000000 */, EndAtTime?: number /* = 0.000000 */, NumLoopsToPlay?: number /* = 1 */, PlayMode?: UE.EUMGSequencePlayMode /* = Forward */, PlaybackSpeed?: number /* = 1.000000 */) : UE.WidgetAnimationPlayCallbackProxy;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetAnimationPlayCallbackProxy;
        static Load(InName: string): WidgetAnimationPlayCallbackProxy;
    
        __tid_WidgetAnimationPlayCallbackProxy_0__: boolean;
    }
    
    class WidgetBinding extends UE.PropertyBinding {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GetValue() : UE.Widget;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetBinding;
        static Load(InName: string): WidgetBinding;
    
        __tid_WidgetBinding_0__: boolean;
    }
    
    class WidgetBlueprintFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        BlueprintType: UE.EBlueprintType;
        ParentClass: UE.Class;
        RootWidgetClass: UE.Class;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetBlueprintFactory;
        static Load(InName: string): WidgetBlueprintFactory;
    
        __tid_WidgetBlueprintFactory_0__: boolean;
    }
    
    class WidgetBlueprintLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnGameWindowCloseButtonClickedDelegate__DelegateSignature() : void;
        static CancelDragDrop() : void;
        static CaptureJoystick(Reply: $Ref<UE.EventReply>, CapturingWidget: $Nullable<UE.Widget>, bInAllJoysticks?: boolean /* = false */) : UE.EventReply;
        static CaptureMouse(Reply: $Ref<UE.EventReply>, CapturingWidget: $Nullable<UE.Widget>) : UE.EventReply;
        static ClearUserFocus(Reply: $Ref<UE.EventReply>, bInAllUsers?: boolean /* = false */) : UE.EventReply;
        static Create(WorldContextObject: $Nullable<UE.Object>, WidgetType: $Nullable<UE.Class>, OwningPlayer: $Nullable<UE.PlayerController>) : UE.UserWidget;
        static CreateDragDropOperation(OperationClass: $Nullable<UE.Class>) : UE.DragDropOperation;
        static DetectDrag(Reply: $Ref<UE.EventReply>, WidgetDetectingDrag: $Nullable<UE.Widget>, DragKey: UE.Key) : UE.EventReply;
        static DetectDragIfPressed(PointerEvent: UE.PointerEvent, WidgetDetectingDrag: $Nullable<UE.Widget>, DragKey: UE.Key) : UE.EventReply;
        static DismissAllMenus() : void;
        static DrawBox(Context: $Ref<UE.PaintContext>, Position: UE.Vector2D, Size: UE.Vector2D, Brush: $Nullable<UE.SlateBrushAsset>, Tint?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        static DrawLine(Context: $Ref<UE.PaintContext>, PositionA: UE.Vector2D, PositionB: UE.Vector2D, Tint?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, bAntiAlias?: boolean /* = true */, Thickness?: number /* = 1.000000 */) : void;
        static DrawLines(Context: $Ref<UE.PaintContext>, Points: TArray<UE.Vector2D>, Tint?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */, bAntiAlias?: boolean /* = true */, Thickness?: number /* = 1.000000 */) : void;
        static DrawText(Context: $Ref<UE.PaintContext>, InString: string, Position: UE.Vector2D, Tint?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        static DrawTextFormatted(Context: $Ref<UE.PaintContext>, Text: string, Position: UE.Vector2D, Font: $Nullable<UE.Font>, FontSize?: number /* = 16 */, FontTypeFace?: string /* = "Regular" */, Tint?: UE.LinearColor /* = (R=1.000000,G=1.000000,B=1.000000,A=1.000000) */) : void;
        static EndDragDrop(Reply: $Ref<UE.EventReply>) : UE.EventReply;
        static GetAllWidgetsOfClass(WorldContextObject: $Nullable<UE.Object>, FoundWidgets: $Ref<TArray<UE.UserWidget>>, WidgetClass: $Nullable<UE.Class>, TopLevelOnly?: boolean /* = true */) : void;
        static GetAllWidgetsWithInterface(WorldContextObject: $Nullable<UE.Object>, FoundWidgets: $Ref<TArray<UE.UserWidget>>, Interface: $Nullable<UE.Class>, TopLevelOnly: boolean) : void;
        static GetBrushResource(Brush: UE.SlateBrush) : UE.Object;
        static GetBrushResourceAsMaterial(Brush: UE.SlateBrush) : UE.MaterialInterface;
        static GetBrushResourceAsTexture2D(Brush: UE.SlateBrush) : UE.Texture2D;
        static GetDragDroppingContent() : UE.DragDropOperation;
        static GetDynamicMaterial(Brush: $Ref<UE.SlateBrush>) : UE.MaterialInstanceDynamic;
        static GetInputEventFromCharacterEvent(Event: UE.CharacterEvent) : UE.InputEvent;
        static GetInputEventFromKeyEvent(Event: UE.KeyEvent) : UE.InputEvent;
        static GetInputEventFromNavigationEvent(Event: UE.NavigationEvent) : UE.InputEvent;
        static GetInputEventFromPointerEvent(Event: UE.PointerEvent) : UE.InputEvent;
        static GetKeyEventFromAnalogInputEvent(Event: UE.AnalogInputEvent) : UE.KeyEvent;
        static GetSafeZonePadding(WorldContextObject: $Nullable<UE.Object>, SafePadding: $Ref<UE.Vector4>, SafePaddingScale: $Ref<UE.Vector2D>, SpillOverPadding: $Ref<UE.Vector4>) : void;
        static Handled() : UE.EventReply;
        static IsDragDropping() : boolean;
        static LockMouse(Reply: $Ref<UE.EventReply>, CapturingWidget: $Nullable<UE.Widget>) : UE.EventReply;
        static MakeBrushFromAsset(BrushAsset: $Nullable<UE.SlateBrushAsset>) : UE.SlateBrush;
        static MakeBrushFromMaterial(Material: $Nullable<UE.MaterialInterface>, Width?: number /* = 32 */, Height?: number /* = 32 */) : UE.SlateBrush;
        static MakeBrushFromTexture(Texture: $Nullable<UE.Texture2D>, Width?: number /* = 0 */, Height?: number /* = 0 */) : UE.SlateBrush;
        static NoResourceBrush() : UE.SlateBrush;
        static ReleaseJoystickCapture(Reply: $Ref<UE.EventReply>, bInAllJoysticks?: boolean /* = false */) : UE.EventReply;
        static ReleaseMouseCapture(Reply: $Ref<UE.EventReply>) : UE.EventReply;
        static RestorePreviousWindowTitleBarState() : void;
        static SetBrushResourceToMaterial(Brush: $Ref<UE.SlateBrush>, Material: $Nullable<UE.MaterialInterface>) : void;
        static SetBrushResourceToTexture(Brush: $Ref<UE.SlateBrush>, Texture: $Nullable<UE.Texture2D>) : void;
        static SetColorVisionDeficiencyType(Type: UE.EColorVisionDeficiency, Severity: number, CorrectDeficiency: boolean, ShowCorrectionWithDeficiency: boolean) : void;
        static SetFocusToGameViewport() : void;
        static SetHardwareCursor(WorldContextObject: $Nullable<UE.Object>, CursorShape: UE.EMouseCursor, CursorName: string, HotSpot: UE.Vector2D) : boolean;
        static SetInputMode_GameAndUI(Target: $Nullable<UE.PlayerController>, InWidgetToFocus?: UE.Widget /* = None */, bLockMouseToViewport?: boolean /* = false */, bHideCursorDuringCapture?: boolean /* = true */) : void;
        static SetInputMode_GameAndUIEx(PlayerController: $Nullable<UE.PlayerController>, InWidgetToFocus?: UE.Widget /* = None */, InMouseLockMode?: UE.EMouseLockMode /* = DoNotLock */, bHideCursorDuringCapture?: boolean /* = true */) : void;
        static SetInputMode_GameOnly(PlayerController: $Nullable<UE.PlayerController>) : void;
        static SetInputMode_UIOnly(Target: $Nullable<UE.PlayerController>, InWidgetToFocus?: UE.Widget /* = None */, bLockMouseToViewport?: boolean /* = false */) : void;
        static SetInputMode_UIOnlyEx(PlayerController: $Nullable<UE.PlayerController>, InWidgetToFocus?: UE.Widget /* = None */, InMouseLockMode?: UE.EMouseLockMode /* = DoNotLock */) : void;
        static SetMousePosition(Reply: $Ref<UE.EventReply>, NewMousePosition: UE.Vector2D) : UE.EventReply;
        static SetUserFocus(Reply: $Ref<UE.EventReply>, FocusWidget: $Nullable<UE.Widget>, bInAllUsers?: boolean /* = false */) : UE.EventReply;
        static SetWindowTitleBarCloseButtonActive(bActive: boolean) : void;
        static SetWindowTitleBarOnCloseClickedDelegate(Delegate: $Delegate<() => void>) : void;
        static SetWindowTitleBarState(TitleBarContent: $Nullable<UE.Widget>, Mode: UE.EWindowTitleBarMode, bTitleBarDragEnabled: boolean, bWindowButtonsVisible: boolean, bTitleBarVisible: boolean) : void;
        static Unhandled() : UE.EventReply;
        static UnlockMouse(Reply: $Ref<UE.EventReply>) : UE.EventReply;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetBlueprintLibrary;
        static Load(InName: string): WidgetBlueprintLibrary;
    
        __tid_WidgetBlueprintLibrary_0__: boolean;
    }
    
    class WidgetCarouselNavigationBarStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(HighlightBrush: UE.SlateBrush, LeftButtonStyle: UE.ButtonStyle, CenterButtonStyle: UE.ButtonStyle, RightButtonStyle: UE.ButtonStyle);
        HighlightBrush: UE.SlateBrush;
        LeftButtonStyle: UE.ButtonStyle;
        CenterButtonStyle: UE.ButtonStyle;
        RightButtonStyle: UE.ButtonStyle;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetCarouselNavigationBarStyle_0__: boolean;
    }
    
    class WidgetCarouselNavigationButtonStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(InnerButtonStyle: UE.ButtonStyle, NavigationButtonLeftImage: UE.SlateBrush, NavigationButtonRightImage: UE.SlateBrush);
        InnerButtonStyle: UE.ButtonStyle;
        NavigationButtonLeftImage: UE.SlateBrush;
        NavigationButtonRightImage: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetCarouselNavigationButtonStyle_0__: boolean;
    }
    
    class WidgetCompilerRule extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetCompilerRule;
        static Load(InName: string): WidgetCompilerRule;
    
        __tid_WidgetCompilerRule_0__: boolean;
    }
    
    class WidgetComponentInstanceData extends UE.SceneComponentInstanceData {
        constructor();
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetComponentInstanceData_0__: boolean;
    }
    
    class WidgetPaletteFavorites extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Favorites: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetPaletteFavorites;
        static Load(InName: string): WidgetPaletteFavorites;
    
        __tid_WidgetPaletteFavorites_0__: boolean;
    }
    
    class WidgetDesignerSettings extends UE.DeveloperSettings {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GridSnapEnabled: boolean;
        GridSnapSize: number;
        bLockToPanelOnDragByDefault: boolean;
        bShowOutlines: boolean;
        bExecutePreConstructEvent: boolean;
        bRespectLocks: boolean;
        Favorites: UE.WidgetPaletteFavorites;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetDesignerSettings;
        static Load(InName: string): WidgetDesignerSettings;
    
        __tid_WidgetDesignerSettings_0__: boolean;
    }
    
    class WidgetGraphSchema extends UE.EdGraphSchema_K2 {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetGraphSchema;
        static Load(InName: string): WidgetGraphSchema;
    
        __tid_WidgetGraphSchema_0__: boolean;
    }
    
    class WidgetInteractionComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        OnHoveredWidgetChanged: $MulticastDelegate<(WidgetComponent: $Nullable<UE.WidgetComponent>, PreviousWidgetComponent: $Nullable<UE.WidgetComponent>) => void>;
        VirtualUserIndex: number;
        PointerIndex: number;
        TraceChannel: UE.ECollisionChannel;
        InteractionDistance: number;
        InteractionSource: UE.EWidgetInteractionSource;
        bEnableHitTesting: boolean;
        bShowDebug: boolean;
        DebugSphereLineThickness: number;
        DebugLineThickness: number;
        DebugColor: UE.LinearColor;
        CustomHitResult: UE.HitResult;
        LocalHitLocation: UE.Vector2D;
        LastLocalHitLocation: UE.Vector2D;
        HoveredWidgetComponent: UE.WidgetComponent;
        LastHitResult: UE.HitResult;
        bIsHoveredWidgetInteractable: boolean;
        bIsHoveredWidgetFocusable: boolean;
        bIsHoveredWidgetHitTestVisible: boolean;
        ArrowComponent: UE.ArrowComponent;
        Get2DHitLocation() : UE.Vector2D;
        GetHoveredWidgetComponent() : UE.WidgetComponent;
        GetLastHitResult() : UE.HitResult;
        IsOverFocusableWidget() : boolean;
        IsOverHitTestVisibleWidget() : boolean;
        IsOverInteractableWidget() : boolean;
        PressAndReleaseKey(Key: UE.Key) : boolean;
        PressKey(Key: UE.Key, bRepeat?: boolean /* = false */) : boolean;
        PressPointerKey(Key: UE.Key) : void;
        ReleaseKey(Key: UE.Key) : boolean;
        ReleasePointerKey(Key: UE.Key) : void;
        ScrollWheel(ScrollDelta: number) : void;
        SendKeyChar(Characters: string, bRepeat?: boolean /* = false */) : boolean;
        SetCustomHitResult(HitResult: UE.HitResult) : void;
        SetFocus(FocusWidget: $Nullable<UE.Widget>) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetInteractionComponent;
        static Load(InName: string): WidgetInteractionComponent;
    
        __tid_WidgetInteractionComponent_0__: boolean;
    }
    
    class WrapBoxSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        bFillEmptySpace: boolean;
        FillSpanWhenLessThan: number;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetFillEmptySpace(InbFillEmptySpace: boolean) : void;
        SetFillSpanWhenLessThan(InFillSpanWhenLessThan: number) : void;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WrapBoxSlot;
        static Load(InName: string): WrapBoxSlot;
    
        __tid_WrapBoxSlot_0__: boolean;
    }
    
    class WidgetSwitcherSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetSwitcherSlot;
        static Load(InName: string): WidgetSwitcherSlot;
    
        __tid_WidgetSwitcherSlot_0__: boolean;
    }
    
    class WidgetLayoutLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static GetMousePositionOnPlatform() : UE.Vector2D;
        static GetMousePositionOnViewport(WorldContextObject: $Nullable<UE.Object>) : UE.Vector2D;
        static GetMousePositionScaledByDPI(Player: $Nullable<UE.PlayerController>, LocationX: $Ref<number>, LocationY: $Ref<number>) : boolean;
        static GetPlayerScreenWidgetGeometry(PlayerController: $Nullable<UE.PlayerController>) : UE.Geometry;
        static GetViewportScale(WorldContextObject: $Nullable<UE.Object>) : number;
        static GetViewportSize(WorldContextObject: $Nullable<UE.Object>) : UE.Vector2D;
        static GetViewportWidgetGeometry(WorldContextObject: $Nullable<UE.Object>) : UE.Geometry;
        static ProjectWorldLocationToWidgetPosition(PlayerController: $Nullable<UE.PlayerController>, WorldLocation: UE.Vector, ScreenPosition: $Ref<UE.Vector2D>, bPlayerViewportRelative: boolean) : boolean;
        static RemoveAllWidgets(WorldContextObject: $Nullable<UE.Object>) : void;
        static SlotAsBorderSlot(Widget: $Nullable<UE.Widget>) : UE.BorderSlot;
        static SlotAsCanvasSlot(Widget: $Nullable<UE.Widget>) : UE.CanvasPanelSlot;
        static SlotAsGridSlot(Widget: $Nullable<UE.Widget>) : UE.GridSlot;
        static SlotAsHorizontalBoxSlot(Widget: $Nullable<UE.Widget>) : UE.HorizontalBoxSlot;
        static SlotAsOverlaySlot(Widget: $Nullable<UE.Widget>) : UE.OverlaySlot;
        static SlotAsSafeBoxSlot(Widget: $Nullable<UE.Widget>) : UE.SafeZoneSlot;
        static SlotAsScaleBoxSlot(Widget: $Nullable<UE.Widget>) : UE.ScaleBoxSlot;
        static SlotAsScrollBoxSlot(Widget: $Nullable<UE.Widget>) : UE.ScrollBoxSlot;
        static SlotAsSizeBoxSlot(Widget: $Nullable<UE.Widget>) : UE.SizeBoxSlot;
        static SlotAsUniformGridSlot(Widget: $Nullable<UE.Widget>) : UE.UniformGridSlot;
        static SlotAsVerticalBoxSlot(Widget: $Nullable<UE.Widget>) : UE.VerticalBoxSlot;
        static SlotAsWidgetSwitcherSlot(Widget: $Nullable<UE.Widget>) : UE.WidgetSwitcherSlot;
        static SlotAsWrapBoxSlot(Widget: $Nullable<UE.Widget>) : UE.WrapBoxSlot;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetLayoutLibrary;
        static Load(InName: string): WidgetLayoutLibrary;
    
        __tid_WidgetLayoutLibrary_0__: boolean;
    }
    
    class WidgetSlotPair extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        WidgetName: string;
        SlotPropertyNames: TArray<string>;
        SlotPropertyValues: TArray<string>;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetSlotPair;
        static Load(InName: string): WidgetSlotPair;
    
        __tid_WidgetSlotPair_0__: boolean;
    }
    
    class WidgetSnapshotRequest {
        constructor();
        constructor(TargetInstanceId: UE.Guid, SnapshotRequestId: UE.Guid);
        TargetInstanceId: UE.Guid;
        SnapshotRequestId: UE.Guid;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetSnapshotRequest_0__: boolean;
    }
    
    class WidgetSnapshotResponse {
        constructor();
        constructor(SnapshotRequestId: UE.Guid, SnapshotData: TArray<number>);
        SnapshotRequestId: UE.Guid;
        SnapshotData: TArray<number>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WidgetSnapshotResponse_0__: boolean;
    }
    
    class WidgetSwitcher extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        ActiveWidgetIndex: number;
        GetActiveWidget() : UE.Widget;
        GetActiveWidgetIndex() : number;
        GetNumWidgets() : number;
        GetWidgetAtIndex(Index: number) : UE.Widget;
        SetActiveWidget(Widget: $Nullable<UE.Widget>) : void;
        SetActiveWidgetIndex(Index: number) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WidgetSwitcher;
        static Load(InName: string): WidgetSwitcher;
    
        __tid_WidgetSwitcher_0__: boolean;
    }
    
    class WindDirectionalSourceComponent extends UE.SceneComponent {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Strength: number;
        Speed: number;
        MinGustAmount: number;
        MaxGustAmount: number;
        Radius: number;
        bPointWind: boolean;
        SetMaximumGustAmount(InNewMaxGust: number) : void;
        SetMinimumGustAmount(InNewMinGust: number) : void;
        SetRadius(InNewRadius: number) : void;
        SetSpeed(InNewSpeed: number) : void;
        SetStrength(InNewStrength: number) : void;
        SetWindType(InNewType: UE.EWindSourceType) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WindDirectionalSourceComponent;
        static Load(InName: string): WindDirectionalSourceComponent;
    
        __tid_WindDirectionalSourceComponent_0__: boolean;
    }
    
    class WindDirectionalSource extends UE.Info {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Component: UE.WindDirectionalSourceComponent;
        ArrowComponent: UE.ArrowComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WindDirectionalSource;
        static Load(InName: string): WindDirectionalSource;
    
        __tid_WindDirectionalSource_0__: boolean;
    }
    
    class WindowsTargetSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Compiler: UE.ECompilerVersion;
        TargetedRHIs: TArray<string>;
        DefaultGraphicsRHI: UE.EDefaultGraphicsRHI;
        MinimumOSVersion: UE.EMinimumSupportedOS;
        bTarget32Bit: boolean;
        AudioSampleRate: number;
        AudioCallbackBufferFrameSize: number;
        AudioNumBuffersToEnqueue: number;
        AudioMaxChannels: number;
        AudioNumSourceWorkers: number;
        SpatializationPlugin: string;
        ReverbPlugin: string;
        OcclusionPlugin: string;
        CompressionOverrides: UE.PlatformRuntimeAudioCompressionOverrides;
        bUseAudioStreamCaching: boolean;
        CacheSizeKB: number;
        MaxChunkSizeOverrideKB: number;
        bResampleForDevice: boolean;
        MaxSampleRate: number;
        HighSampleRate: number;
        MedSampleRate: number;
        LowSampleRate: number;
        MinSampleRate: number;
        CompressionQualityModifier: number;
        AutoStreamingThreshold: number;
        SoundCueCookQualityIndex: number;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WindowsTargetSettings;
        static Load(InName: string): WindowsTargetSettings;
    
        __tid_WindowsTargetSettings_0__: boolean;
    }
    
    class WindowStyle extends UE.SlateWidgetStyle {
        constructor();
        constructor(MinimizeButtonStyle: UE.ButtonStyle, MaximizeButtonStyle: UE.ButtonStyle, RestoreButtonStyle: UE.ButtonStyle, CloseButtonStyle: UE.ButtonStyle, TitleTextStyle: UE.TextBlockStyle, ActiveTitleBrush: UE.SlateBrush, InactiveTitleBrush: UE.SlateBrush, FlashTitleBrush: UE.SlateBrush, BackgroundColor: UE.SlateColor, OutlineBrush: UE.SlateBrush, OutlineColor: UE.SlateColor, BorderBrush: UE.SlateBrush, BackgroundBrush: UE.SlateBrush, ChildBackgroundBrush: UE.SlateBrush);
        MinimizeButtonStyle: UE.ButtonStyle;
        MaximizeButtonStyle: UE.ButtonStyle;
        RestoreButtonStyle: UE.ButtonStyle;
        CloseButtonStyle: UE.ButtonStyle;
        TitleTextStyle: UE.TextBlockStyle;
        ActiveTitleBrush: UE.SlateBrush;
        InactiveTitleBrush: UE.SlateBrush;
        FlashTitleBrush: UE.SlateBrush;
        BackgroundColor: UE.SlateColor;
        OutlineBrush: UE.SlateBrush;
        OutlineColor: UE.SlateColor;
        BorderBrush: UE.SlateBrush;
        BackgroundBrush: UE.SlateBrush;
        ChildBackgroundBrush: UE.SlateBrush;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WindowStyle_0__: boolean;
    }
    
    class WindowTitleBarArea extends UE.ContentWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        bWindowButtonsEnabled: boolean;
        bDoubleClickTogglesFullscreen: boolean;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WindowTitleBarArea;
        static Load(InName: string): WindowTitleBarArea;
    
        __tid_WindowTitleBarArea_0__: boolean;
    }
    
    class WindowTitleBarAreaSlot extends UE.PanelSlot {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        Padding: UE.Margin;
        HorizontalAlignment: UE.EHorizontalAlignment;
        VerticalAlignment: UE.EVerticalAlignment;
        SetHorizontalAlignment(InHorizontalAlignment: UE.EHorizontalAlignment) : void;
        SetPadding(InPadding: UE.Margin) : void;
        SetVerticalAlignment(InVerticalAlignment: UE.EVerticalAlignment) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WindowTitleBarAreaSlot;
        static Load(InName: string): WindowTitleBarAreaSlot;
    
        __tid_WindowTitleBarAreaSlot_0__: boolean;
    }
    
    class WmfFileMediaSourceFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WmfFileMediaSourceFactory;
        static Load(InName: string): WmfFileMediaSourceFactory;
    
        __tid_WmfFileMediaSourceFactory_0__: boolean;
    }
    
    class WmfMediaSettings extends UE.Object {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        AllowNonStandardCodecs: boolean;
        LowLatency: boolean;
        NativeAudioOut: boolean;
        HardwareAcceleratedVideoDecoding: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WmfMediaSettings;
        static Load(InName: string): WmfMediaSettings;
    
        __tid_WmfMediaSettings_0__: boolean;
    }
    
    class WorldContext {
        constructor();
        constructor(LastURL: UE.URL, LastRemoteURL: UE.URL, PendingNetGame: UE.PendingNetGame, PackagesToFullyLoad: TArray<UE.FullyLoadedPackagesInfo>, LoadedLevelsForPendingMapChange: TArray<UE.Level>, ObjectReferencers: TArray<UE.ObjectReferencer>, PendingLevelStreamingStatusUpdates: TArray<UE.LevelStreamingStatus>, GameViewport: UE.GameViewportClient, OwningGameInstance: UE.GameInstance, ActiveNetDrivers: TArray<UE.NamedNetDriver>);
        LastURL: UE.URL;
        LastRemoteURL: UE.URL;
        PendingNetGame: UE.PendingNetGame;
        PackagesToFullyLoad: TArray<UE.FullyLoadedPackagesInfo>;
        LoadedLevelsForPendingMapChange: TArray<UE.Level>;
        ObjectReferencers: TArray<UE.ObjectReferencer>;
        PendingLevelStreamingStatusUpdates: TArray<UE.LevelStreamingStatus>;
        GameViewport: UE.GameViewportClient;
        OwningGameInstance: UE.GameInstance;
        ActiveNetDrivers: TArray<UE.NamedNetDriver>;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WorldContext_0__: boolean;
    }
    
    class WorldExtensionMethods extends UE.ExtensionMethods {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static SpawnActor(World: $Nullable<UE.World>, Class: $Nullable<UE.Class>, Transform: UE.Transform, SpawnCollisionHandlingOverride: UE.ESpawnActorCollisionHandlingMethod, Owner: $Nullable<UE.Actor>, Instigator: $Nullable<UE.Pawn>) : UE.Actor;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WorldExtensionMethods;
        static Load(InName: string): WorldExtensionMethods;
    
        __tid_WorldExtensionMethods_0__: boolean;
    }
    
    class WorldFactory extends UE.Factory {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WorldFactory;
        static Load(InName: string): WorldFactory;
    
        __tid_WorldFactory_0__: boolean;
    }
    
    class WorldThumbnailInfo extends UE.SceneThumbnailInfo {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        CameraMode: UE.ECameraProjectionMode;
        OrthoDirection: UE.EOrthoThumbnailDirection;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WorldThumbnailInfo;
        static Load(InName: string): WorldThumbnailInfo;
    
        __tid_WorldThumbnailInfo_0__: boolean;
    }
    
    class WorldThumbnailRenderer extends UE.DefaultSizedThumbnailRenderer {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        GlobalOrbitPitchOffset: number;
        GlobalOrbitYawOffset: number;
        bUseUnlitScene: boolean;
        bAllowWorldThumbnails: boolean;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WorldThumbnailRenderer;
        static Load(InName: string): WorldThumbnailRenderer;
    
        __tid_WorldThumbnailRenderer_0__: boolean;
    }
    
    class WrangleContentCommandlet extends UE.Commandlet {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WrangleContentCommandlet;
        static Load(InName: string): WrangleContentCommandlet;
    
        __tid_WrangleContentCommandlet_0__: boolean;
    }
    
    class WrapBox extends UE.PanelWidget {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        InnerSlotPadding: UE.Vector2D;
        WrapWidth: number;
        WrapSize: number;
        bExplicitWrapWidth: boolean;
        bExplicitWrapSize: boolean;
        Orientation: UE.EOrientation;
        AddChildToWrapBox(Content: $Nullable<UE.Widget>) : UE.WrapBoxSlot;
        SetInnerSlotPadding(InPadding: UE.Vector2D) : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): WrapBox;
        static Load(InName: string): WrapBox;
    
        __tid_WrapBox_0__: boolean;
    }
    
    class WrappedStringElement {
        constructor();
        constructor(Value: string, LineExtent: UE.Vector2D);
        Value: string;
        LineExtent: UE.Vector2D;
        /**
         * @deprecated use StaticStruct instead.
         */
        static StaticClass(): ScriptStruct;
        static StaticStruct(): ScriptStruct;
        __tid_WrappedStringElement_0__: boolean;
    }
    
    class XRAssetFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddDeviceVisualizationComponentBlocking(Target: $Nullable<UE.Actor>, XRDeviceId: UE.XRDeviceId, bManualAttachment: boolean, RelativeTransform: UE.Transform) : UE.PrimitiveComponent;
        static AddNamedDeviceVisualizationComponentBlocking(Target: $Nullable<UE.Actor>, SystemName: string, DeviceName: string, bManualAttachment: boolean, RelativeTransform: UE.Transform, XRDeviceId: $Ref<UE.XRDeviceId>) : UE.PrimitiveComponent;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): XRAssetFunctionLibrary;
        static Load(InName: string): XRAssetFunctionLibrary;
    
        __tid_XRAssetFunctionLibrary_0__: boolean;
    }
    
    class XRLoadingScreenFunctionLibrary extends UE.BlueprintFunctionLibrary {
        constructor(Outer?: Object, Name?: string, ObjectFlags?: number);
        static AddLoadingScreenSplash(Texture: $Nullable<UE.Texture>, Translation: UE.Vector, Rotation: UE.Rotator, Size?: UE.Vector2D /* = (X=1.000,Y=1.000) */, DeltaRotation?: UE.Rotator /* =  */, bClearBeforeAdd?: boolean /* = false */) : void;
        static ClearLoadingScreenSplashes() : void;
        static HideLoadingScreen() : void;
        static SetLoadingScreen(Texture: $Nullable<UE.Texture>, Scale?: UE.Vector2D /* = (X=1.000,Y=1.000) */, Offset?: UE.Vector /* =  */, bShowLoadingMovie?: boolean /* = false */, bShowOnSet?: boolean /* = false */) : void;
        static ShowLoadingScreen() : void;
        static StaticClass(): Class;
        static Find(OrigInName: string, Outer?: Object): XRLoadingScreenFunctionLibrary;
        static Load(InName: string): XRLoadingScreenFunctionLibrary;
    
        __tid_XRLoadingScreenFunctionLibrary_0__: boolean;
    }
    
}
